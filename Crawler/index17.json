[{"id": 79999, "method_name": "getCrimeName", "class_name": "Crime", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getCrimeName() {\n        return crimeName;\n    }", "url": "https://raw.githubusercontent.com/zhuchangwu/lawyer-lover-cloud-backend/master/lawyer-lover-main/src/main/java/com/changwu/doc/Crime.java", "stars": "12", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 80000, "method_name": "setCrimeName", "class_name": "Crime", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setCrimeName(String crimeName) {\n        this.crimeName = crimeName;\n    }", "url": "https://raw.githubusercontent.com/zhuchangwu/lawyer-lover-cloud-backend/master/lawyer-lover-main/src/main/java/com/changwu/doc/Crime.java", "stars": "12", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 80001, "method_name": "getConcept", "class_name": "Crime", "params": [], "throws": null, "modifiers": ["public"], "return_type": "List<String>", "snippet": "    public List<String> getConcept() {\n        return concept;\n    }", "url": "https://raw.githubusercontent.com/zhuchangwu/lawyer-lover-cloud-backend/master/lawyer-lover-main/src/main/java/com/changwu/doc/Crime.java", "stars": "12", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 80002, "method_name": "setConcept", "class_name": "Crime", "params": ["List<String>"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setConcept(List<String> concept) {\n        this.concept = concept;\n    }", "url": "https://raw.githubusercontent.com/zhuchangwu/lawyer-lover-cloud-backend/master/lawyer-lover-main/src/main/java/com/changwu/doc/Crime.java", "stars": "12", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 80003, "method_name": "getFeature", "class_name": "Crime", "params": [], "throws": null, "modifiers": ["public"], "return_type": "List<String>", "snippet": "    public List<String> getFeature() {\n        return feature;\n    }", "url": "https://raw.githubusercontent.com/zhuchangwu/lawyer-lover-cloud-backend/master/lawyer-lover-main/src/main/java/com/changwu/doc/Crime.java", "stars": "12", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 80004, "method_name": "setFeature", "class_name": "Crime", "params": ["List<String>"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setFeature(List<String> feature) {\n        this.feature = feature;\n    }", "url": "https://raw.githubusercontent.com/zhuchangwu/lawyer-lover-cloud-backend/master/lawyer-lover-main/src/main/java/com/changwu/doc/Crime.java", "stars": "12", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 80005, "method_name": "getRending", "class_name": "Crime", "params": [], "throws": null, "modifiers": ["public"], "return_type": "List<String>", "snippet": "    public List<String> getRending() {\n        return rending;\n    }", "url": "https://raw.githubusercontent.com/zhuchangwu/lawyer-lover-cloud-backend/master/lawyer-lover-main/src/main/java/com/changwu/doc/Crime.java", "stars": "12", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 80006, "method_name": "setRending", "class_name": "Crime", "params": ["List<String>"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setRending(List<String> rending) {\n        this.rending = rending;\n    }", "url": "https://raw.githubusercontent.com/zhuchangwu/lawyer-lover-cloud-backend/master/lawyer-lover-main/src/main/java/com/changwu/doc/Crime.java", "stars": "12", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 80007, "method_name": "getPunish", "class_name": "Crime", "params": [], "throws": null, "modifiers": ["public"], "return_type": "List<String>", "snippet": "    public List<String> getPunish() {\n        return punish;\n    }", "url": "https://raw.githubusercontent.com/zhuchangwu/lawyer-lover-cloud-backend/master/lawyer-lover-main/src/main/java/com/changwu/doc/Crime.java", "stars": "12", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 80008, "method_name": "setPunish", "class_name": "Crime", "params": ["List<String>"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setPunish(List<String> punish) {\n        this.punish = punish;\n    }", "url": "https://raw.githubusercontent.com/zhuchangwu/lawyer-lover-cloud-backend/master/lawyer-lover-main/src/main/java/com/changwu/doc/Crime.java", "stars": "12", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 80009, "method_name": "getLaws", "class_name": "Crime", "params": [], "throws": null, "modifiers": ["public"], "return_type": "List<String>", "snippet": "    public List<String> getLaws() {\n        return laws;\n    }", "url": "https://raw.githubusercontent.com/zhuchangwu/lawyer-lover-cloud-backend/master/lawyer-lover-main/src/main/java/com/changwu/doc/Crime.java", "stars": "12", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 80010, "method_name": "setLaws", "class_name": "Crime", "params": ["List<String>"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setLaws(List<String> laws) {\n        this.laws = laws;\n    }", "url": "https://raw.githubusercontent.com/zhuchangwu/lawyer-lover-cloud-backend/master/lawyer-lover-main/src/main/java/com/changwu/doc/Crime.java", "stars": "12", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 80011, "method_name": "toString", "class_name": "Crime", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String toString() {\n        return \"Crime{\" +\n                \"id='\" + id + '\\'' +\n                \", crimeName='\" + crimeName + '\\'' +\n                \", concept=\" + concept +\n                \", feature=\" + feature +\n                \", rending=\" + rending +\n                \", punish=\" + punish +\n                \", laws=\" + laws +\n                '}';\n    }", "url": "https://raw.githubusercontent.com/zhuchangwu/lawyer-lover-cloud-backend/master/lawyer-lover-main/src/main/java/com/changwu/doc/Crime.java", "stars": "12", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 80012, "method_name": "length", "class_name": "ArrayObject", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int length() {\n        return value.length;\n    }", "url": "https://raw.githubusercontent.com/wmm1996528/unidbg_douyin10/master/src/main/java/com/github/unidbg/linux/android/dvm/array/ArrayObject.java", "stars": "16", "class_props": {"extends": "BaseArray", "implements": ["Array"], "modifiers": ["public"]}}, {"id": 80013, "method_name": "setData", "class_name": "ArrayObject", "params": ["int", "DvmObject<?>"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setData(int start, DvmObject<?>[] data) {\n        System.arraycopy(data, 0, value, start, data.length);\n    }", "url": "https://raw.githubusercontent.com/wmm1996528/unidbg_douyin10/master/src/main/java/com/github/unidbg/linux/android/dvm/array/ArrayObject.java", "stars": "16", "class_props": {"extends": "BaseArray", "implements": ["Array"], "modifiers": ["public"]}}, {"id": 80014, "method_name": "get", "class_name": "FirebaseDao", "params": ["String", "RetrievalEventListener<T>"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void get(String id, final RetrievalEventListener<T> retrievalEventListener) {\n        DatabaseReference rowReference = dbReference.child(tableName).child(id);\n        Query query = rowReference;\n        rowReference.addListenerForSingleValueEvent(new ValueEventListener() {\n            @Override\n            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {\n                parseDataSnapshot(dataSnapshot, new RetrievalEventListener<T>() {\n                    @Override\n                    public void OnDataRetrieved(T t) {\n                        retrievalEventListener.OnDataRetrieved(t);\n                    }\n                });\n            }\n\n            @Override\n            public void onCancelled(@NonNull DatabaseError databaseError) {\n            }\n        });\n    }", "url": "https://raw.githubusercontent.com/islammohsen/FirebaseDao/master/firbasedao/src/main/java/com/example/firbasedao/FirebaseDao.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 80015, "method_name": "GetNewKey", "class_name": "FirebaseDao", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String GetNewKey()\n    {\n        return dbReference.child(tableName).push().getKey();\n    }", "url": "https://raw.githubusercontent.com/islammohsen/FirebaseDao/master/firbasedao/src/main/java/com/example/firbasedao/FirebaseDao.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 80016, "method_name": "parseDataSnapshot", "class_name": "FirebaseDao", "params": ["DataSnapshot", "RetrievalEventListener<T>"], "throws": null, "modifiers": ["protected", "abstract"], "return_type": "void", "snippet": "    protected abstract void parseDataSnapshot(DataSnapshot dataSnapshot, RetrievalEventListener<T> retrievalEventListener);\n\n    public void getAll(final RetrievalEventListener<List<T>> retrievalEventListener){\n        DatabaseReference rowReference = dbReference.child(tableName);\n        rowReference.addListenerForSingleValueEvent(new ValueEventListener() {\n            @Override\n            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {\n                final List<T> list = new ArrayList<T>();\n                final long len = dataSnapshot.getChildrenCount();\n                if(len == 0)\n                {\n                    retrievalEventListener.OnDataRetrieved(list);\n                    return;\n                }\n                RetrievalEventListener<T> listRetrievalEventListener = new RetrievalEventListener<T>() {\n                    @Override\n                    public void OnDataRetrieved(T t) {\n                        list.add(t);\n                        if(list.size() == len){\n                            retrievalEventListener.OnDataRetrieved(list);\n                        }\n                    }\n                };\n                for(DataSnapshot currentDataSnapshot : dataSnapshot.getChildren())\n                    parseDataSnapshot(currentDataSnapshot, listRetrievalEventListener);\n            }\n\n            @Override\n            public void onCancelled(@NonNull DatabaseError databaseError) {\n\n            }\n        });\n    }", "url": "https://raw.githubusercontent.com/islammohsen/FirebaseDao/master/firbasedao/src/main/java/com/example/firbasedao/FirebaseDao.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 80017, "method_name": "getAll", "class_name": "FirebaseDao", "params": ["RetrievalEventListener<List>"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void getAll(final RetrievalEventListener<List<T>> retrievalEventListener){\n        DatabaseReference rowReference = dbReference.child(tableName);\n        rowReference.addListenerForSingleValueEvent(new ValueEventListener() {\n            @Override\n            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {\n                final List<T> list = new ArrayList<T>();\n                final long len = dataSnapshot.getChildrenCount();\n                if(len == 0)\n                {\n                    retrievalEventListener.OnDataRetrieved(list);\n                    return;\n                }\n                RetrievalEventListener<T> listRetrievalEventListener = new RetrievalEventListener<T>() {\n                    @Override\n                    public void OnDataRetrieved(T t) {\n                        list.add(t);\n                        if(list.size() == len){\n                            retrievalEventListener.OnDataRetrieved(list);\n                        }\n                    }\n                };\n                for(DataSnapshot currentDataSnapshot : dataSnapshot.getChildren())\n                    parseDataSnapshot(currentDataSnapshot, listRetrievalEventListener);\n            }\n\n            @Override\n            public void onCancelled(@NonNull DatabaseError databaseError) {\n\n            }\n        });\n    }", "url": "https://raw.githubusercontent.com/islammohsen/FirebaseDao/master/firbasedao/src/main/java/com/example/firbasedao/FirebaseDao.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 80018, "method_name": "save", "class_name": "FirebaseDao", "params": ["T", "String", "TaskListener"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void save(T t, String id, final TaskListener taskListener){\n        Task<Void> task = dbReference.child(tableName).child(id).setValue(t);\n        task.addOnCompleteListener(new OnCompleteListener<Void>() {\n            @Override\n            public void onComplete(@NonNull Task<Void> task) {\n                taskListener.OnSuccess();\n            }\n        });\n        task.addOnFailureListener(new OnFailureListener() {\n            @Override\n            public void onFailure(@NonNull Exception e) {\n                taskListener.OnFail();\n            }\n        });\n    }", "url": "https://raw.githubusercontent.com/islammohsen/FirebaseDao/master/firbasedao/src/main/java/com/example/firbasedao/FirebaseDao.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 80019, "method_name": "delete", "class_name": "FirebaseDao", "params": ["String", "TaskListener"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void delete(String id, TaskListener taskListener){\n        save(null, id, taskListener);\n    }", "url": "https://raw.githubusercontent.com/islammohsen/FirebaseDao/master/firbasedao/src/main/java/com/example/firbasedao/FirebaseDao.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 80020, "method_name": "retrieveCountry", "class_name": "SampleClient", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "\tvoid retrieveCountry() {\n\t\tString randomCode = SAMPLE_COUNTRY_CODES.get(this.random.nextInt(SAMPLE_COUNTRY_CODES.size()));\n\t\tSystem.out.println(\"Looking for country with code '\" + randomCode + \"'\");\n\t\tthis.countryService.findByCode(randomCode);\n\t}", "url": "https://raw.githubusercontent.com/spring-projects/spring-boot/master/spring-boot-tests/spring-boot-smoke-tests/spring-boot-smoke-test-cache/src/main/java/smoketest/cache/SampleClient.java", "stars": "47572", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 80021, "method_name": "getLessIndex", "class_name": "Code06_BSAwesome", "params": ["int"], "throws": null, "modifiers": ["public", "static"], "return_type": "int", "snippet": "\tpublic static int getLessIndex(int[] arr) {\n\t\tif (arr == null || arr.length == 0) {\n\t\t\treturn -1; // no exist\n\t\t}\n\t\tif (arr.length == 1 || arr[0] < arr[1]) {\n\t\t\treturn 0;\n\t\t}\n\t\tif (arr[arr.length - 1] < arr[arr.length - 2]) {\n\t\t\treturn arr.length - 1;\n\t\t}\n\t\tint left = 1;\n\t\tint right = arr.length - 2;\n\t\tint mid = 0;\n\t\twhile (left < right) {\n\t\t\tmid = (left + right) / 2;\n\t\t\tif (arr[mid] > arr[mid - 1]) {\n\t\t\t\tright = mid - 1;\n\t\t\t} else if (arr[mid] > arr[mid + 1]) {\n\t\t\t\tleft = mid + 1;\n\t\t\t} else {\n\t\t\t\treturn mid;\n\t\t\t}\n\t\t}\n\t\treturn left;\n\t}", "url": "https://raw.githubusercontent.com/algorithmzuo/algorithmbasic2020/master/src/class01/Code06_BSAwesome.java", "stars": "27", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 80022, "method_name": "getPizza", "class_name": "PizzaFactory", "params": ["String"], "throws": null, "modifiers": ["final", "public"], "return_type": "Pizza", "snippet": "    public final Pizza getPizza(String type) {\n        Pizza pizza = createPizza(type);\n        pizza.prepare();\n        pizza.bake();\n        pizza.cut();\n        pizza.box();\n        return pizza;\n    }", "url": "https://raw.githubusercontent.com/piyush6348/Design-Patterns/master/Factory%20Patterns/Factory%20Method%20Pattern/src/PizzaFactory/PizzaFactory.java", "stars": "38", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 80023, "method_name": "createPizza", "class_name": "PizzaFactory", "params": ["String"], "throws": null, "modifiers": ["protected", "abstract"], "return_type": "Pizza", "snippet": "    protected abstract Pizza createPizza(String type);\n}\n\n", "url": "https://raw.githubusercontent.com/piyush6348/Design-Patterns/master/Factory%20Patterns/Factory%20Method%20Pattern/src/PizzaFactory/PizzaFactory.java", "stars": "38", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 80024, "method_name": "listUserRolePage", "class_name": "UserRoleServiceImpl", "params": ["UserRole"], "throws": null, "modifiers": ["public"], "return_type": "Page<UserRole>", "snippet": "    public Page<UserRole> listUserRolePage(UserRole userRole) {\n        Page<UserRole> page = new Page<>(userRole.getCurrent(), userRole.getSize());\n        List<UserRole> userRoles = baseMapper.selectUserRoleList(userRole, page);\n        return page.setRecords(userRoles);\n    }", "url": "https://raw.githubusercontent.com/IzzyPrime/Admin/master/src/main/java/com/kalvin/kvf/modules/sys/service/UserRoleServiceImpl.java", "stars": "10", "class_props": {"extends": "ServiceImpl", "implements": ["IUserRoleService"], "modifiers": ["public"]}}, {"id": 80025, "method_name": "getUserRoleByRoleId", "class_name": "UserRoleServiceImpl", "params": ["Long"], "throws": null, "modifiers": ["public"], "return_type": "List<UserRole>", "snippet": "    public List<UserRole> getUserRoleByRoleId(Long roleId) {\n        return super.list(new LambdaQueryWrapper<UserRole>().eq(UserRole::getRoleId, roleId));\n    }", "url": "https://raw.githubusercontent.com/IzzyPrime/Admin/master/src/main/java/com/kalvin/kvf/modules/sys/service/UserRoleServiceImpl.java", "stars": "10", "class_props": {"extends": "ServiceImpl", "implements": ["IUserRoleService"], "modifiers": ["public"]}}, {"id": 80026, "method_name": "saveOrUpdateBatchUserRole", "class_name": "UserRoleServiceImpl", "params": ["UserRoleVO"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void saveOrUpdateBatchUserRole(UserRoleVO userRoleVO) {\n        Long roleId = userRoleVO.getRoleId();\n        List<Long> userIds = userRoleVO.getUserIds();\n        List<UserRole> userRoles = new ArrayList<>();\n\n        userIds.forEach(userId -> {\n            UserRole userRole = super.getOne(new LambdaQueryWrapper<UserRole>()\n                    .eq(UserRole::getRoleId, roleId).eq(UserRole::getUserId, userId));\n            if (userRole == null) {\n                userRole = new UserRole();\n                userRole.setRoleId(roleId).setUserId(userId);\n            }\n            userRoles.add(userRole);\n        });\n        super.saveOrUpdateBatch(userRoles);\n    }", "url": "https://raw.githubusercontent.com/IzzyPrime/Admin/master/src/main/java/com/kalvin/kvf/modules/sys/service/UserRoleServiceImpl.java", "stars": "10", "class_props": {"extends": "ServiceImpl", "implements": ["IUserRoleService"], "modifiers": ["public"]}}, {"id": 80027, "method_name": "saveOrUpdateBatchUserRole", "class_name": "UserRoleServiceImpl", "params": ["List<Long>", "Long"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void saveOrUpdateBatchUserRole(List<Long> roleIds, Long userId) {\n        if (CollectionUtil.isEmpty(roleIds)) {\n            super.remove(new LambdaQueryWrapper<UserRole>().eq(UserRole::getUserId, userId));\n        } else {\n            super.remove(new LambdaQueryWrapper<UserRole>().eq(UserRole::getUserId, userId).notIn(UserRole::getRoleId, roleIds));\n            List<UserRole> userRoles = new ArrayList<>();\n\n            roleIds.forEach(roleId -> {\n                UserRole userRole = super.getOne(new LambdaQueryWrapper<UserRole>()\n                        .eq(UserRole::getRoleId, roleId).eq(UserRole::getUserId, userId));\n                if (userRole == null) {\n                    userRole = new UserRole();\n                }\n                userRole.setUserId(userId).setRoleId(roleId);\n                userRoles.add(userRole);\n            });\n            super.saveOrUpdateBatch(userRoles);\n        }\n    }", "url": "https://raw.githubusercontent.com/IzzyPrime/Admin/master/src/main/java/com/kalvin/kvf/modules/sys/service/UserRoleServiceImpl.java", "stars": "10", "class_props": {"extends": "ServiceImpl", "implements": ["IUserRoleService"], "modifiers": ["public"]}}, {"id": 80028, "method_name": "countUserRoleByRoleId", "class_name": "UserRoleServiceImpl", "params": ["Long"], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int countUserRoleByRoleId(Long roleId) {\n        return super.count(new LambdaQueryWrapper<UserRole>().eq(UserRole::getRoleId, roleId));\n    }", "url": "https://raw.githubusercontent.com/IzzyPrime/Admin/master/src/main/java/com/kalvin/kvf/modules/sys/service/UserRoleServiceImpl.java", "stars": "10", "class_props": {"extends": "ServiceImpl", "implements": ["IUserRoleService"], "modifiers": ["public"]}}, {"id": 80029, "method_name": "getUserRoleGroupDTOByUserId", "class_name": "UserRoleServiceImpl", "params": ["Long"], "throws": null, "modifiers": ["public"], "return_type": "UserRoleGroupDTO", "snippet": "    public UserRoleGroupDTO getUserRoleGroupDTOByUserId(Long userId) {\n        return baseMapper.selectUserRoleGroupByUserId(userId);\n    }", "url": "https://raw.githubusercontent.com/IzzyPrime/Admin/master/src/main/java/com/kalvin/kvf/modules/sys/service/UserRoleServiceImpl.java", "stars": "10", "class_props": {"extends": "ServiceImpl", "implements": ["IUserRoleService"], "modifiers": ["public"]}}, {"id": 80030, "method_name": "getRoleIdsByUserId", "class_name": "UserRoleServiceImpl", "params": ["Long"], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getRoleIdsByUserId(Long userId) {\n        return this.getUserRoleGroupDTOByUserId(userId).getRoleIds();\n    }", "url": "https://raw.githubusercontent.com/IzzyPrime/Admin/master/src/main/java/com/kalvin/kvf/modules/sys/service/UserRoleServiceImpl.java", "stars": "10", "class_props": {"extends": "ServiceImpl", "implements": ["IUserRoleService"], "modifiers": ["public"]}}, {"id": 80031, "method_name": "getRoleNamesByUserId", "class_name": "UserRoleServiceImpl", "params": ["Long"], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getRoleNamesByUserId(Long userId) {\n        UserRoleGroupDTO userRoleGroupDTOByUserId = this.getUserRoleGroupDTOByUserId(userId);\n        return userRoleGroupDTOByUserId == null ? \"\" : userRoleGroupDTOByUserId.getRoleNames();\n    }", "url": "https://raw.githubusercontent.com/IzzyPrime/Admin/master/src/main/java/com/kalvin/kvf/modules/sys/service/UserRoleServiceImpl.java", "stars": "10", "class_props": {"extends": "ServiceImpl", "implements": ["IUserRoleService"], "modifiers": ["public"]}}, {"id": 80032, "method_name": "getCount", "class_name": "SysmptomsAdapter", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getCount() {\n        return list.length;\n    }", "url": "https://raw.githubusercontent.com/fadhilahramadhan/Android_Covid19Stats/master/app/src/main/java/fadhilah/ramadhan/covid19stats/adapter/SysmptomsAdapter.java", "stars": "2", "class_props": {"extends": "BaseAdapter", "implements": null, "modifiers": ["public"]}}, {"id": 80033, "method_name": "getItem", "class_name": "SysmptomsAdapter", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "Object", "snippet": "    public Object getItem(int i) {\n        return null;\n    }", "url": "https://raw.githubusercontent.com/fadhilahramadhan/Android_Covid19Stats/master/app/src/main/java/fadhilah/ramadhan/covid19stats/adapter/SysmptomsAdapter.java", "stars": "2", "class_props": {"extends": "BaseAdapter", "implements": null, "modifiers": ["public"]}}, {"id": 80034, "method_name": "getItemId", "class_name": "SysmptomsAdapter", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "long", "snippet": "    public long getItemId(int i) {\n        return 0;\n    }", "url": "https://raw.githubusercontent.com/fadhilahramadhan/Android_Covid19Stats/master/app/src/main/java/fadhilah/ramadhan/covid19stats/adapter/SysmptomsAdapter.java", "stars": "2", "class_props": {"extends": "BaseAdapter", "implements": null, "modifiers": ["public"]}}, {"id": 80035, "method_name": "getView", "class_name": "SysmptomsAdapter", "params": ["int", "View", "ViewGroup"], "throws": null, "modifiers": ["public"], "return_type": "View", "snippet": "    public View getView(int i, View view, ViewGroup viewGroup) {\n        view = inflter.inflate(R.layout.layout_covid_sysmptoms, null);\n\n        ImageView imageView  = (ImageView) view.findViewById(R.id.image);\n        TextView title  = (TextView) view.findViewById(R.id.title);\n        title.setTypeface(FontUtils.loadFontFromAssets(context, Constant.FONT_NORMAL));\n\n        title.setText(list[i]);\n\n        switch (i){\n            case 0:\n                imageView.setImageDrawable(view.getResources().getDrawable(R.drawable.fever));\n                break;\n            case 1:\n                imageView.setImageDrawable(view.getResources().getDrawable(R.drawable.sore_throat));\n                break;\n            case 2:\n                imageView.setImageDrawable(view.getResources().getDrawable(R.drawable.headache));\n                break;\n            case 3:\n                imageView.setImageDrawable(view.getResources().getDrawable(R.drawable.breathing));\n                break;\n        }\n        return view;\n    }", "url": "https://raw.githubusercontent.com/fadhilahramadhan/Android_Covid19Stats/master/app/src/main/java/fadhilah/ramadhan/covid19stats/adapter/SysmptomsAdapter.java", "stars": "2", "class_props": {"extends": "BaseAdapter", "implements": null, "modifiers": ["public"]}}, {"id": 80036, "method_name": "getSharedNodesInfo", "class_name": "AzkabanCommonLinkisReadJob", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Map<String,Object>", "snippet": "    public Map<String, Object> getSharedNodesInfo() {\n        return this.sharedNodesInfo;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-jobtype/src/main/java/com/webank/wedatasphere/schedulis/linkis/job/AzkabanCommonLinkisReadJob.java", "stars": "18", "class_props": {"extends": "AzkabanCommonLinkisJob", "implements": ["ReadJob"], "modifiers": ["public"]}}, {"id": 80037, "method_name": "getSharedKey", "class_name": "AzkabanCommonLinkisReadJob", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getSharedKey(String value) {\n        String projectId = getJobProps().get(LinkisJobTypeConf.PROJECT_ID);\n        String flowId = getJobProps().get(LinkisJobTypeConf.FLOW_NAME);\n        String flowExecId = getJobProps().get(LinkisJobTypeConf.FLOW_EXEC_ID);\n        return projectId + \".\" + flowId + \".\" + flowExecId + \".\" + value;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-jobtype/src/main/java/com/webank/wedatasphere/schedulis/linkis/job/AzkabanCommonLinkisReadJob.java", "stars": "18", "class_props": {"extends": "AzkabanCommonLinkisJob", "implements": ["ReadJob"], "modifiers": ["public"]}}, {"id": 80038, "method_name": "setSharedNodesInfo", "class_name": "AzkabanCommonLinkisReadJob", "params": ["Map<String,Object>"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setSharedNodesInfo(Map<String, Object> sharedNodesInfo) {\n        this.sharedNodesInfo = sharedNodesInfo;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-jobtype/src/main/java/com/webank/wedatasphere/schedulis/linkis/job/AzkabanCommonLinkisReadJob.java", "stars": "18", "class_props": {"extends": "AzkabanCommonLinkisJob", "implements": ["ReadJob"], "modifiers": ["public"]}}, {"id": 80039, "method_name": "getShareNodeIds", "class_name": "AzkabanCommonLinkisReadJob", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public  String[] getShareNodeIds() {\n        String nodesStr = getJobProps().get(LinkisJobTypeConf.READ_NODE_TOKEN);\n        String[] nodes = nodesStr.split(\",\");\n        return nodes;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-jobtype/src/main/java/com/webank/wedatasphere/schedulis/linkis/job/AzkabanCommonLinkisReadJob.java", "stars": "18", "class_props": {"extends": "AzkabanCommonLinkisJob", "implements": ["ReadJob"], "modifiers": ["public"]}}, {"id": 80040, "method_name": "getCode", "class_name": "ShortUrlVO", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "  public String getCode() {\n    return code;\n  }", "url": "https://raw.githubusercontent.com/wechaturl/wechat_url_api_java_sdk/master/src/main/java/www/wechaturl/us/fangfeng/sdk/vo/ShortUrlVO.java", "stars": "2", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 80041, "method_name": "setCode", "class_name": "ShortUrlVO", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void setCode(String code) {\n    this.code = code;\n  }", "url": "https://raw.githubusercontent.com/wechaturl/wechat_url_api_java_sdk/master/src/main/java/www/wechaturl/us/fangfeng/sdk/vo/ShortUrlVO.java", "stars": "2", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 80042, "method_name": "getShortUrl", "class_name": "ShortUrlVO", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "  public String getShortUrl() {\n    return shortUrl;\n  }", "url": "https://raw.githubusercontent.com/wechaturl/wechat_url_api_java_sdk/master/src/main/java/www/wechaturl/us/fangfeng/sdk/vo/ShortUrlVO.java", "stars": "2", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 80043, "method_name": "setShortUrl", "class_name": "ShortUrlVO", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void setShortUrl(String shortUrl) {\n    this.shortUrl = shortUrl;\n  }", "url": "https://raw.githubusercontent.com/wechaturl/wechat_url_api_java_sdk/master/src/main/java/www/wechaturl/us/fangfeng/sdk/vo/ShortUrlVO.java", "stars": "2", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 80044, "method_name": "getEntryType", "class_name": "ShortUrlVO", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "  public String getEntryType() {\n    return entryType;\n  }", "url": "https://raw.githubusercontent.com/wechaturl/wechat_url_api_java_sdk/master/src/main/java/www/wechaturl/us/fangfeng/sdk/vo/ShortUrlVO.java", "stars": "2", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 80045, "method_name": "setEntryType", "class_name": "ShortUrlVO", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "ShortUrlVO", "snippet": "  public ShortUrlVO setEntryType(String entryType) {\n    this.entryType = entryType;\n    return this;\n  }", "url": "https://raw.githubusercontent.com/wechaturl/wechat_url_api_java_sdk/master/src/main/java/www/wechaturl/us/fangfeng/sdk/vo/ShortUrlVO.java", "stars": "2", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 80046, "method_name": "getMessage", "class_name": "ShortUrlVO", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "  public String getMessage() {\n    return message;\n  }", "url": "https://raw.githubusercontent.com/wechaturl/wechat_url_api_java_sdk/master/src/main/java/www/wechaturl/us/fangfeng/sdk/vo/ShortUrlVO.java", "stars": "2", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 80047, "method_name": "setMessage", "class_name": "ShortUrlVO", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "ShortUrlVO", "snippet": "  public ShortUrlVO setMessage(String message) {\n    this.message = message;\n    return this;\n  }", "url": "https://raw.githubusercontent.com/wechaturl/wechat_url_api_java_sdk/master/src/main/java/www/wechaturl/us/fangfeng/sdk/vo/ShortUrlVO.java", "stars": "2", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 80048, "method_name": "getLongUrl", "class_name": "ShortUrlVO", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "  public String getLongUrl() {\n    return longUrl;\n  }", "url": "https://raw.githubusercontent.com/wechaturl/wechat_url_api_java_sdk/master/src/main/java/www/wechaturl/us/fangfeng/sdk/vo/ShortUrlVO.java", "stars": "2", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 80049, "method_name": "setLongUrl", "class_name": "ShortUrlVO", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "ShortUrlVO", "snippet": "  public ShortUrlVO setLongUrl(String longUrl) {\n    this.longUrl = longUrl;\n    return this;\n  }", "url": "https://raw.githubusercontent.com/wechaturl/wechat_url_api_java_sdk/master/src/main/java/www/wechaturl/us/fangfeng/sdk/vo/ShortUrlVO.java", "stars": "2", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 80050, "method_name": "getData", "class_name": "ShortUrlVO", "params": [], "throws": null, "modifiers": ["public"], "return_type": "OriginData", "snippet": "  public OriginData getData() {\n    return data;\n  }", "url": "https://raw.githubusercontent.com/wechaturl/wechat_url_api_java_sdk/master/src/main/java/www/wechaturl/us/fangfeng/sdk/vo/ShortUrlVO.java", "stars": "2", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 80051, "method_name": "setData", "class_name": "ShortUrlVO", "params": ["OriginData"], "throws": null, "modifiers": ["public"], "return_type": "ShortUrlVO", "snippet": "  public ShortUrlVO setData(OriginData data) {\n    this.data = data;\n    return this;\n  }", "url": "https://raw.githubusercontent.com/wechaturl/wechat_url_api_java_sdk/master/src/main/java/www/wechaturl/us/fangfeng/sdk/vo/ShortUrlVO.java", "stars": "2", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 80052, "method_name": "equals", "class_name": "ShortUrlVO", "params": ["Object"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "  public boolean equals(Object o) {\n    if (this == o) return true;\n    if (!(o instanceof ShortUrlVO)) return false;\n    ShortUrlVO that = (ShortUrlVO) o;\n    return Objects.equals(getEntryType(), that.getEntryType()) &&\n            Objects.equals(getCode(), that.getCode()) &&\n            Objects.equals(getMessage(), that.getMessage()) &&\n            Objects.equals(getShortUrl(), that.getShortUrl()) &&\n            Objects.equals(getLongUrl(), that.getLongUrl()) &&\n            Objects.equals(getData(), that.getData());\n  }", "url": "https://raw.githubusercontent.com/wechaturl/wechat_url_api_java_sdk/master/src/main/java/www/wechaturl/us/fangfeng/sdk/vo/ShortUrlVO.java", "stars": "2", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 80053, "method_name": "hashCode", "class_name": "ShortUrlVO", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "  public int hashCode() {\n    return Objects.hash(getEntryType(), getCode(), getMessage(), getShortUrl(), getLongUrl(), getData());\n  }", "url": "https://raw.githubusercontent.com/wechaturl/wechat_url_api_java_sdk/master/src/main/java/www/wechaturl/us/fangfeng/sdk/vo/ShortUrlVO.java", "stars": "2", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 80054, "method_name": "getCode", "class_name": "OriginData", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "  public String getCode() {\n    return code;\n  }", "url": "https://raw.githubusercontent.com/wechaturl/wechat_url_api_java_sdk/master/src/main/java/www/wechaturl/us/fangfeng/sdk/vo/ShortUrlVO.java", "stars": "2", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": []}}, {"id": 80055, "method_name": "setCode", "class_name": "OriginData", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "OriginData", "snippet": "  public OriginData setCode(String code) {\n    this.code = code;\n    return this;\n  }", "url": "https://raw.githubusercontent.com/wechaturl/wechat_url_api_java_sdk/master/src/main/java/www/wechaturl/us/fangfeng/sdk/vo/ShortUrlVO.java", "stars": "2", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": []}}, {"id": 80056, "method_name": "getShortUrl", "class_name": "OriginData", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "  public String getShortUrl() {\n    return shortUrl;\n  }", "url": "https://raw.githubusercontent.com/wechaturl/wechat_url_api_java_sdk/master/src/main/java/www/wechaturl/us/fangfeng/sdk/vo/ShortUrlVO.java", "stars": "2", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": []}}, {"id": 80057, "method_name": "setShortUrl", "class_name": "OriginData", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "OriginData", "snippet": "  public OriginData setShortUrl(String shortUrl) {\n    this.shortUrl = shortUrl;\n    return this;\n  }", "url": "https://raw.githubusercontent.com/wechaturl/wechat_url_api_java_sdk/master/src/main/java/www/wechaturl/us/fangfeng/sdk/vo/ShortUrlVO.java", "stars": "2", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": []}}, {"id": 80058, "method_name": "main", "class_name": "SampleConsumerApplication", "params": ["String"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void main(String[] args) {\n        SpringApplication.run(SampleConsumerApplication.class, args);\n    }", "url": "https://raw.githubusercontent.com/Merthaskan/sample-consumer/master/src/main/java/com/trendyol/sampleconsumer/SampleConsumerApplication.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 80059, "method_name": "twoSum", "class_name": "TwoSum", "params": ["int", "int"], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int[] twoSum(int[] nums, int target) {\n        HashMap<Integer, Integer> map = new HashMap<>();\n\n        for(int i = 0; i < nums.length; i ++) {\n            if(map.containsKey(target - nums[i])) {\n                return new int[]{i, map.get(target - nums[i])};\n            }\n            map.put(nums[i], i);\n        }\n\n        return null;\n    }", "url": "https://raw.githubusercontent.com/nishantc1527/LeetCode/master/src/TwoSum.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 80060, "method_name": "tearDown", "class_name": "PostgresGaenDataServiceTest", "params": [], "throws": ["SQLException"], "modifiers": ["public"], "return_type": "void", "snippet": "    public void tearDown() throws SQLException {\n        executeSQL(\"truncate table t_exposed\");\n        executeSQL(\"truncate table t_redeem_uuid\");\n    }", "url": "https://raw.githubusercontent.com/DP-3T/dp3t-sdk-backend/develop/dpppt-backend-sdk/dpppt-backend-sdk-data/src/test/java/org/dpppt/backend/sdk/data/gaen/PostgresGaenDataServiceTest.java", "stars": "125", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 80061, "method_name": "testRedeemUUID", "class_name": "PostgresGaenDataServiceTest", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void testRedeemUUID() {\n        boolean actual = redeemDataService.checkAndInsertPublishUUID(\"bc77d983-2359-48e8-835a-de673fe53ccb\");\n        assertTrue(actual);\n        actual = redeemDataService.checkAndInsertPublishUUID(\"bc77d983-2359-48e8-835a-de673fe53ccb\");\n        assertFalse(actual);\n        actual = redeemDataService.checkAndInsertPublishUUID(\"1c444adb-0924-4dc4-a7eb-1f52aa6b9575\");\n        assertTrue(actual);\n    }", "url": "https://raw.githubusercontent.com/DP-3T/dp3t-sdk-backend/develop/dpppt-backend-sdk/dpppt-backend-sdk-data/src/test/java/org/dpppt/backend/sdk/data/gaen/PostgresGaenDataServiceTest.java", "stars": "125", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 80062, "method_name": "cleanup", "class_name": "PostgresGaenDataServiceTest", "params": [], "throws": ["SQLException"], "modifiers": ["public"], "return_type": "void", "snippet": "    public void cleanup() throws SQLException {\n        OffsetDateTime now = OffsetDateTime.now().withOffsetSameInstant(ZoneOffset.UTC);\n        OffsetDateTime receivedAt = now.minusDays(21);\n        Connection connection = dataSource.getConnection();\n        String key = \"someKey\";\n        insertExposeeWithReceivedAt(receivedAt.toInstant(), key);\n\n\t\tList<GaenKey> sortedExposedForDay = dppptDataService\n\t\t\t\t.getSortedExposedForBatchReleaseTime(receivedAt.toInstant().toEpochMilli() + Duration.ofMinutes(10).toMillis(), 24 * 60 * 60 * 1000l);\n\t\tassertFalse(sortedExposedForDay.isEmpty());\n\n\t\tdppptDataService.cleanDB(Duration.ofDays(21));\n\t\tsortedExposedForDay = dppptDataService.getSortedExposedForBatchReleaseTime(receivedAt.toInstant().toEpochMilli() +  Duration.ofMinutes(10).toMillis(),\n\t\t\t\t24 * 60 * 60 * 1000l);\n\t\tassertTrue(sortedExposedForDay.isEmpty());\n\n    }", "url": "https://raw.githubusercontent.com/DP-3T/dp3t-sdk-backend/develop/dpppt-backend-sdk/dpppt-backend-sdk-data/src/test/java/org/dpppt/backend/sdk/data/gaen/PostgresGaenDataServiceTest.java", "stars": "125", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 80063, "method_name": "upsert", "class_name": "PostgresGaenDataServiceTest", "params": [], "throws": ["Exception"], "modifiers": ["public"], "return_type": "void", "snippet": "    public void upsert() throws Exception {\n        var tmpKey = new GaenKey();\n        tmpKey.setRollingStartNumber((int)Duration.ofMillis(Instant.now().minus(Duration.ofDays(1)).toEpochMilli()).dividedBy(Duration.ofMinutes(10)));\n        tmpKey.setKeyData(Base64.getEncoder().encodeToString(\"testKey32Bytes--\".getBytes(\"UTF-8\")));\n        tmpKey.setRollingPeriod(144);\n        tmpKey.setFake(0);\n        tmpKey.setTransmissionRiskLevel(0);\n        List<GaenKey> keys = List.of(tmpKey);\n\n        dppptDataService.upsertExposees(keys);\n        var returnedKeys = dppptDataService.getSortedExposedForBatchReleaseTime(OffsetDateTime.now(ZoneOffset.UTC).plus(BATCH_LENGTH.minusMinutes(5)).toInstant().toEpochMilli(), BATCH_LENGTH.toMillis());\n\n        assertEquals(keys.size(), returnedKeys.size());\n        assertEquals(keys.get(0).getKeyData(), returnedKeys.get(0).getKeyData());\n    }", "url": "https://raw.githubusercontent.com/DP-3T/dp3t-sdk-backend/develop/dpppt-backend-sdk/dpppt-backend-sdk-data/src/test/java/org/dpppt/backend/sdk/data/gaen/PostgresGaenDataServiceTest.java", "stars": "125", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 80064, "method_name": "testBatchReleaseTime", "class_name": "PostgresGaenDataServiceTest", "params": [], "throws": ["SQLException"], "modifiers": ["public"], "return_type": "void", "snippet": "    public void testBatchReleaseTime() throws SQLException {\n        Instant receivedAt = LocalDateTime.parse(\"2014-01-28T00:00:00\").toInstant(ZoneOffset.UTC);\n        String key = \"key555\";\n        insertExposeeWithReceivedAt(receivedAt, key);\n\n        long batchTime = LocalDateTime.parse(\"2014-01-28T02:00:00\").toInstant(ZoneOffset.UTC).toEpochMilli();\n        List<GaenKey> sortedExposedForBatchReleaseTime = dppptDataService.getSortedExposedForBatchReleaseTime(batchTime, BATCH_LENGTH.toMillis());\n        assertEquals(1, sortedExposedForBatchReleaseTime.size());\n        GaenKey actual = sortedExposedForBatchReleaseTime.get(0);\n        assertEquals(actual.getKeyData(), key);\n        int maxExposedIdForBatchReleaseTime = dppptDataService.getMaxExposedIdForBatchReleaseTime(batchTime, BATCH_LENGTH.toMillis());\n        assertEquals(100, maxExposedIdForBatchReleaseTime);\n        maxExposedIdForBatchReleaseTime = dppptDataService.getMaxExposedIdForBatchReleaseTime(receivedAt.toEpochMilli(), PostgresDPPPTDataServiceTest.BATCH_LENGTH);\n        assertEquals(0, maxExposedIdForBatchReleaseTime);\n    }", "url": "https://raw.githubusercontent.com/DP-3T/dp3t-sdk-backend/develop/dpppt-backend-sdk/dpppt-backend-sdk-data/src/test/java/org/dpppt/backend/sdk/data/gaen/PostgresGaenDataServiceTest.java", "stars": "125", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 80065, "method_name": "insertExposeeWithReceivedAt", "class_name": "PostgresGaenDataServiceTest", "params": ["Instant", "String"], "throws": ["SQLException"], "modifiers": ["private"], "return_type": "void", "snippet": "    private void insertExposeeWithReceivedAt(Instant receivedAt, String key) throws SQLException {\n        Connection connection = dataSource.getConnection();\n        String sql = \"into t_gaen_exposed (pk_exposed_id, key, received_at, rolling_start_number, rolling_period, transmission_risk_level) values (100, ?, ?, ?, 144, 0)\";\n        PreparedStatement preparedStatement = connection.prepareStatement(\"insert \" + sql);\n        preparedStatement.setString(1, key);\n        preparedStatement.setTimestamp(2, new Timestamp(receivedAt.toEpochMilli()));\n        preparedStatement.setInt(3, (int)Duration.ofMillis(receivedAt.toEpochMilli()).dividedBy(Duration.ofMinutes(10)));\n        preparedStatement.execute();\n    }", "url": "https://raw.githubusercontent.com/DP-3T/dp3t-sdk-backend/develop/dpppt-backend-sdk/dpppt-backend-sdk-data/src/test/java/org/dpppt/backend/sdk/data/gaen/PostgresGaenDataServiceTest.java", "stars": "125", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 80066, "method_name": "createExposee", "class_name": "PostgresGaenDataServiceTest", "params": ["String", "String"], "throws": null, "modifiers": ["private"], "return_type": "Exposee", "snippet": "    private Exposee createExposee(String key, String keyDate) {\n        Exposee exposee = new Exposee();\n        exposee.setKey(key);\n        exposee.setKeyDate(LocalDate.parse(\"2014-01-28\").atStartOfDay().atOffset(ZoneOffset.UTC).toInstant().toEpochMilli());\n        return exposee;\n    }", "url": "https://raw.githubusercontent.com/DP-3T/dp3t-sdk-backend/develop/dpppt-backend-sdk/dpppt-backend-sdk-data/src/test/java/org/dpppt/backend/sdk/data/gaen/PostgresGaenDataServiceTest.java", "stars": "125", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 80067, "method_name": "getExposeeCount", "class_name": "PostgresGaenDataServiceTest", "params": [], "throws": ["SQLException"], "modifiers": ["private"], "return_type": "long", "snippet": "    private long getExposeeCount() throws SQLException {\n        try (\n                final Connection connection = dataSource.getConnection();\n                final PreparedStatement preparedStatement = connection.prepareStatement(\"select count(*) from t_exposed\");\n                final ResultSet resultSet = preparedStatement.executeQuery()) {\n            resultSet.next();\n            return resultSet.getLong(1);\n        }\n    }", "url": "https://raw.githubusercontent.com/DP-3T/dp3t-sdk-backend/develop/dpppt-backend-sdk/dpppt-backend-sdk-data/src/test/java/org/dpppt/backend/sdk/data/gaen/PostgresGaenDataServiceTest.java", "stars": "125", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 80068, "method_name": "executeSQL", "class_name": "PostgresGaenDataServiceTest", "params": ["String"], "throws": ["SQLException"], "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void executeSQL(String sql) throws SQLException {\n        try (\n            final Connection connection = dataSource.getConnection();\n            final PreparedStatement preparedStatement = connection.prepareStatement(sql);\n        ) {\n            preparedStatement.execute();\n        }\n    }", "url": "https://raw.githubusercontent.com/DP-3T/dp3t-sdk-backend/develop/dpppt-backend-sdk/dpppt-backend-sdk-data/src/test/java/org/dpppt/backend/sdk/data/gaen/PostgresGaenDataServiceTest.java", "stars": "125", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 80069, "method_name": "invoke", "class_name": "AmbiguousMethodInvoker", "params": ["Object", "Object"], "throws": ["IllegalAccessException", "InvocationTargetException"], "modifiers": ["public"], "return_type": "Object", "snippet": "  public Object invoke(Object target, Object[] args) throws IllegalAccessException, InvocationTargetException {\n    throw new ReflectionException(exceptionMessage);\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/reflection/invoker/AmbiguousMethodInvoker.java", "stars": "15", "class_props": {"extends": "MethodInvoker", "implements": null, "modifiers": ["public"]}}, {"id": 80070, "method_name": "onStartPrepared", "class_name": "GSYSampleCallBack", "params": ["String", "Object"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onStartPrepared(String url, Object... objects) {\n\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/com/shuyu/gsyvideoplayer/listener/GSYSampleCallBack.java", "stars": "2", "class_props": {"extends": null, "implements": ["VideoAllCallBack"], "modifiers": ["public"]}}, {"id": 80071, "method_name": "onPrepared", "class_name": "GSYSampleCallBack", "params": ["String", "Object"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onPrepared(String url, Object... objects) {\n\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/com/shuyu/gsyvideoplayer/listener/GSYSampleCallBack.java", "stars": "2", "class_props": {"extends": null, "implements": ["VideoAllCallBack"], "modifiers": ["public"]}}, {"id": 80072, "method_name": "onClickStartIcon", "class_name": "GSYSampleCallBack", "params": ["String", "Object"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onClickStartIcon(String url, Object... objects) {\n\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/com/shuyu/gsyvideoplayer/listener/GSYSampleCallBack.java", "stars": "2", "class_props": {"extends": null, "implements": ["VideoAllCallBack"], "modifiers": ["public"]}}, {"id": 80073, "method_name": "onClickStartError", "class_name": "GSYSampleCallBack", "params": ["String", "Object"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onClickStartError(String url, Object... objects) {\n\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/com/shuyu/gsyvideoplayer/listener/GSYSampleCallBack.java", "stars": "2", "class_props": {"extends": null, "implements": ["VideoAllCallBack"], "modifiers": ["public"]}}, {"id": 80074, "method_name": "onClickStop", "class_name": "GSYSampleCallBack", "params": ["String", "Object"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onClickStop(String url, Object... objects) {\n\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/com/shuyu/gsyvideoplayer/listener/GSYSampleCallBack.java", "stars": "2", "class_props": {"extends": null, "implements": ["VideoAllCallBack"], "modifiers": ["public"]}}, {"id": 80075, "method_name": "onClickStopFullscreen", "class_name": "GSYSampleCallBack", "params": ["String", "Object"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onClickStopFullscreen(String url, Object... objects) {\n\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/com/shuyu/gsyvideoplayer/listener/GSYSampleCallBack.java", "stars": "2", "class_props": {"extends": null, "implements": ["VideoAllCallBack"], "modifiers": ["public"]}}, {"id": 80076, "method_name": "onClickResume", "class_name": "GSYSampleCallBack", "params": ["String", "Object"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onClickResume(String url, Object... objects) {\n\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/com/shuyu/gsyvideoplayer/listener/GSYSampleCallBack.java", "stars": "2", "class_props": {"extends": null, "implements": ["VideoAllCallBack"], "modifiers": ["public"]}}, {"id": 80077, "method_name": "onClickResumeFullscreen", "class_name": "GSYSampleCallBack", "params": ["String", "Object"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onClickResumeFullscreen(String url, Object... objects) {\n\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/com/shuyu/gsyvideoplayer/listener/GSYSampleCallBack.java", "stars": "2", "class_props": {"extends": null, "implements": ["VideoAllCallBack"], "modifiers": ["public"]}}, {"id": 80078, "method_name": "onClickSeekbar", "class_name": "GSYSampleCallBack", "params": ["String", "Object"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onClickSeekbar(String url, Object... objects) {\n\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/com/shuyu/gsyvideoplayer/listener/GSYSampleCallBack.java", "stars": "2", "class_props": {"extends": null, "implements": ["VideoAllCallBack"], "modifiers": ["public"]}}, {"id": 80079, "method_name": "onClickSeekbarFullscreen", "class_name": "GSYSampleCallBack", "params": ["String", "Object"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onClickSeekbarFullscreen(String url, Object... objects) {\n\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/com/shuyu/gsyvideoplayer/listener/GSYSampleCallBack.java", "stars": "2", "class_props": {"extends": null, "implements": ["VideoAllCallBack"], "modifiers": ["public"]}}, {"id": 80080, "method_name": "onAutoComplete", "class_name": "GSYSampleCallBack", "params": ["String", "Object"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onAutoComplete(String url, Object... objects) {\n\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/com/shuyu/gsyvideoplayer/listener/GSYSampleCallBack.java", "stars": "2", "class_props": {"extends": null, "implements": ["VideoAllCallBack"], "modifiers": ["public"]}}, {"id": 80081, "method_name": "onEnterFullscreen", "class_name": "GSYSampleCallBack", "params": ["String", "Object"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onEnterFullscreen(String url, Object... objects) {\n\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/com/shuyu/gsyvideoplayer/listener/GSYSampleCallBack.java", "stars": "2", "class_props": {"extends": null, "implements": ["VideoAllCallBack"], "modifiers": ["public"]}}, {"id": 80082, "method_name": "onQuitFullscreen", "class_name": "GSYSampleCallBack", "params": ["String", "Object"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onQuitFullscreen(String url, Object... objects) {\n\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/com/shuyu/gsyvideoplayer/listener/GSYSampleCallBack.java", "stars": "2", "class_props": {"extends": null, "implements": ["VideoAllCallBack"], "modifiers": ["public"]}}, {"id": 80083, "method_name": "onQuitSmallWidget", "class_name": "GSYSampleCallBack", "params": ["String", "Object"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onQuitSmallWidget(String url, Object... objects) {\n\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/com/shuyu/gsyvideoplayer/listener/GSYSampleCallBack.java", "stars": "2", "class_props": {"extends": null, "implements": ["VideoAllCallBack"], "modifiers": ["public"]}}, {"id": 80084, "method_name": "onEnterSmallWidget", "class_name": "GSYSampleCallBack", "params": ["String", "Object"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onEnterSmallWidget(String url, Object... objects) {\n\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/com/shuyu/gsyvideoplayer/listener/GSYSampleCallBack.java", "stars": "2", "class_props": {"extends": null, "implements": ["VideoAllCallBack"], "modifiers": ["public"]}}, {"id": 80085, "method_name": "onTouchScreenSeekVolume", "class_name": "GSYSampleCallBack", "params": ["String", "Object"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onTouchScreenSeekVolume(String url, Object... objects) {\n\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/com/shuyu/gsyvideoplayer/listener/GSYSampleCallBack.java", "stars": "2", "class_props": {"extends": null, "implements": ["VideoAllCallBack"], "modifiers": ["public"]}}, {"id": 80086, "method_name": "onTouchScreenSeekPosition", "class_name": "GSYSampleCallBack", "params": ["String", "Object"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onTouchScreenSeekPosition(String url, Object... objects) {\n\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/com/shuyu/gsyvideoplayer/listener/GSYSampleCallBack.java", "stars": "2", "class_props": {"extends": null, "implements": ["VideoAllCallBack"], "modifiers": ["public"]}}, {"id": 80087, "method_name": "onTouchScreenSeekLight", "class_name": "GSYSampleCallBack", "params": ["String", "Object"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onTouchScreenSeekLight(String url, Object... objects) {\n\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/com/shuyu/gsyvideoplayer/listener/GSYSampleCallBack.java", "stars": "2", "class_props": {"extends": null, "implements": ["VideoAllCallBack"], "modifiers": ["public"]}}, {"id": 80088, "method_name": "onPlayError", "class_name": "GSYSampleCallBack", "params": ["String", "Object"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onPlayError(String url, Object... objects) {\n\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/com/shuyu/gsyvideoplayer/listener/GSYSampleCallBack.java", "stars": "2", "class_props": {"extends": null, "implements": ["VideoAllCallBack"], "modifiers": ["public"]}}, {"id": 80089, "method_name": "onClickStartThumb", "class_name": "GSYSampleCallBack", "params": ["String", "Object"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onClickStartThumb(String url, Object... objects) {\n\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/com/shuyu/gsyvideoplayer/listener/GSYSampleCallBack.java", "stars": "2", "class_props": {"extends": null, "implements": ["VideoAllCallBack"], "modifiers": ["public"]}}, {"id": 80090, "method_name": "onClickBlank", "class_name": "GSYSampleCallBack", "params": ["String", "Object"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onClickBlank(String url, Object... objects) {\n\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/com/shuyu/gsyvideoplayer/listener/GSYSampleCallBack.java", "stars": "2", "class_props": {"extends": null, "implements": ["VideoAllCallBack"], "modifiers": ["public"]}}, {"id": 80091, "method_name": "onClickBlankFullscreen", "class_name": "GSYSampleCallBack", "params": ["String", "Object"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onClickBlankFullscreen(String url, Object... objects) {\n\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/com/shuyu/gsyvideoplayer/listener/GSYSampleCallBack.java", "stars": "2", "class_props": {"extends": null, "implements": ["VideoAllCallBack"], "modifiers": ["public"]}}, {"id": 80092, "method_name": "getFieldOrder", "class_name": "ITimerVal32", "params": [], "throws": null, "modifiers": ["protected"], "return_type": "List<String>", "snippet": "    protected List<String> getFieldOrder() {\n        return Arrays.asList(\"it_interval\", \"it_value\");\n    }", "url": "https://raw.githubusercontent.com/wmm1996528/unidbg_douyin10/master/src/main/java/com/github/unidbg/unix/struct/ITimerVal32.java", "stars": "16", "class_props": {"extends": "UnicornStructure", "implements": null, "modifiers": ["public"]}}, {"id": 80093, "method_name": "create", "class_name": "TransportsKilledAlert", "params": ["Empire", "StarSystem", "int"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void create(Empire e, StarSystem s, int n) {\n        GameSession.instance().addAlert(new TransportsKilledAlert(e,s,n));\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/notifications/TransportsKilledAlert.java", "stars": "74", "class_props": {"extends": "GameAlert", "implements": null, "modifiers": ["public"]}}, {"id": 80094, "method_name": "systemName", "class_name": "TransportsKilledAlert", "params": [], "throws": null, "modifiers": ["private"], "return_type": "String", "snippet": "    private String systemName() { return player().sv.name(system.id); }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/notifications/TransportsKilledAlert.java", "stars": "74", "class_props": {"extends": "GameAlert", "implements": null, "modifiers": ["public"]}}, {"id": 80095, "method_name": "description", "class_name": "TransportsKilledAlert", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String description() {\n        return text(\"MAIN_ALERT_TRANSPORTS_KILLED\", empire.raceName(), systemName(), str(num));\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/notifications/TransportsKilledAlert.java", "stars": "74", "class_props": {"extends": "GameAlert", "implements": null, "modifiers": ["public"]}}, {"id": 80096, "method_name": "main", "class_name": "RightTriangle", "params": ["String"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "\tpublic static void main(String[] args) {\n\t\tint n;\n\t\tScanner sc = new Scanner(System.in);\n\t\tSystem.out.println(\"enter no of rows:\");\n\t\tn = sc.nextInt();\n\t\tfor(int i = 1;i <= n; i++) {\n\t\t\t\n\t\t\tfor(int j = 1 ;j <= i ; j++) {\n\t\t\t\tSystem.out.print(\"*\");\n\t\t\t}\n\t\t\tSystem.out.print(\"\\n\");\n\t\t}\n\t\tsc.close();\n\t}", "url": "https://raw.githubusercontent.com/likith22/java-programs/master/RightTriangle.java", "stars": "3", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 80097, "method_name": "mappingFrom", "class_name": "WireMockApp", "params": ["MappingsLoader"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void mappingFrom(MappingsLoader loader) {\n    app.loadMappingsUsing(loader);\n  }", "url": "https://raw.githubusercontent.com/Cognifide/aem-stubs/master/wiremock/src/main/java/com/cognifide/aem/stubs/wiremock/WireMockApp.java", "stars": "8", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 80098, "method_name": "stubFor", "class_name": "WireMockApp", "params": ["MappingBuilder"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void stubFor(MappingBuilder mappingBuilder) {\n    app.addStubMapping(mappingBuilder.build());\n  }", "url": "https://raw.githubusercontent.com/Cognifide/aem-stubs/master/wiremock/src/main/java/com/cognifide/aem/stubs/wiremock/WireMockApp.java", "stars": "8", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 80099, "method_name": "buildStubRequestHandler", "class_name": "WireMockApp", "params": [], "throws": null, "modifiers": ["public"], "return_type": "StubRequestHandler", "snippet": "  public StubRequestHandler buildStubRequestHandler() {\n    Options options = app.getOptions();\n    Map<String, PostServeAction> postServeActions = options.extensionsOfType(PostServeAction.class);\n    return new StubRequestHandler(\n      app,\n      new StubResponseRenderer(\n        options.filesRoot(),\n        app.getGlobalSettingsHolder(),\n        new ProxyResponseRenderer(\n          options.proxyVia(),\n          options.httpsSettings().trustStore(),\n          options.shouldPreserveHostHeader(),\n          options.proxyHostHeader(),\n          app.getGlobalSettingsHolder()),\n        ImmutableList.copyOf(options.extensionsOfType(ResponseTransformer.class).values())\n      ),\n      app,\n      postServeActions,\n      new DisabledRequestJournal()\n    ) {\n      @Override\n      protected boolean logRequests() {\n        return false;\n      }\n    };\n  }", "url": "https://raw.githubusercontent.com/Cognifide/aem-stubs/master/wiremock/src/main/java/com/cognifide/aem/stubs/wiremock/WireMockApp.java", "stars": "8", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 80100, "method_name": "main", "class_name": "Generator", "params": ["String"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void main(String[] args) {\n        //MBG \u6267\u884c\u8fc7\u7a0b\u4e2d\u7684\u8b66\u544a\u4fe1\u606f\n        List<String> warnings = new ArrayList<>();\n        //\u8bfb\u53d6\u6211\u4eec\u7684 MBG \u914d\u7f6e\u6587\u4ef6\n        InputStream is = Generator.class.getResourceAsStream(\"/mybatis/generatorConfig.xml\");\n        ConfigurationParser cp = new ConfigurationParser(warnings);\n        Configuration config = cp.parseConfiguration(is);\n        is.close();\n        //\u5f53\u751f\u6210\u7684\u4ee3\u7801\u91cd\u590d\u65f6\uff0c\u4e0d\u8981\u8986\u76d6\u539f\u4ee3\u7801\n        DefaultShellCallback callback = new DefaultShellCallback(false);\n        //\u521b\u5efa MBG\n        MyBatisGenerator myBatisGenerator = new MyBatisGenerator(config, callback, warnings);\n        //\u6267\u884c\u751f\u6210\u4ee3\u7801\n        myBatisGenerator.generate(null);\n        //\u8f93\u51fa\u8b66\u544a\u4fe1\u606f\n        for (String warning : warnings) {\n            System.out.println(warning);\n        }\n    }", "url": "https://raw.githubusercontent.com/201206030/novel-plus/master/novel-common/src/main/java/com/java2nb/novel/core/utils/Generator.java", "stars": "137", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 80101, "method_name": "report", "class_name": "TaskProcessController", "params": ["JobReport"], "throws": null, "modifiers": ["public"], "return_type": "Response<Object>", "snippet": "    public Response<Object> report(@RequestBody JobReport jobReport){\n        LOG.info(\"Report obj : {}\", Json.toJson(jobReport,null));\n        JobContainer jobContainer = executorService.getJobContainer(jobReport.getId());\n        if(null != jobContainer){\n            jobReport.setJobId(jobContainer.getJobId());\n            return callBackService.report(jobReport);\n        }\n        return new Response<>().successResponse(true);\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/core/src/main/java/com/webank/wedatasphere/exchangis/executor/controller/TaskProcessController.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 80102, "method_name": "state", "class_name": "TaskProcessController", "params": ["TaskState"], "throws": null, "modifiers": ["public"], "return_type": "Response<Object>", "snippet": "    public Response<Object> state(@RequestBody TaskState taskState){\n        Map<String, Object> runtimeParams = new HashMap<>(1);\n        JobContainer jobContainer = executorService.getJobContainer(taskState.getTaskId());\n        if(null != jobContainer){\n            jobContainer.updateTaskState(taskState);\n            runtimeParams.put(\"maxByteSpeed\", jobContainer.getRuntime().getMaxByteSpeed());\n        }\n        //return runtime parameters\n        return new Response<>().successResponse(runtimeParams);\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/core/src/main/java/com/webank/wedatasphere/exchangis/executor/controller/TaskProcessController.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 80103, "method_name": "onGlobalLayout", "class_name": "KeyboardUtils", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onGlobalLayout()\n    {\n        Rect r = new Rect();\n        mRootView.getWindowVisibleDisplayFrame(r);\n\n        int heightDiff = mRootView.getRootView().getHeight() - (r.bottom - r.top);\n        float dp = heightDiff/ mScreenDensity;\n        boolean isVisible = dp > MAGIC_NUMBER;\n\n        if (mCallback != null && (prevValue == null || isVisible != prevValue)) {\n            prevValue = isVisible;\n            mCallback.onToggleSoftKeyboard(isVisible);\n        }\n    }", "url": "https://raw.githubusercontent.com/idanapp/IdanPlusPlus/master/app/src/main/java/com/example/idan/plusplus/KeyboardUtils.java", "stars": "9", "class_props": {"extends": null, "implements": ["ViewTreeObserver"], "modifiers": ["public"]}}, {"id": 80104, "method_name": "addKeyboardToggleListener", "class_name": "KeyboardUtils", "params": ["Activity", "SoftKeyboardToggleListener"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void addKeyboardToggleListener(Activity act, SoftKeyboardToggleListener listener)\n    {\n        removeKeyboardToggleListener(listener);\n\n        sListenerMap.put(listener, new KeyboardUtils(act, listener));\n    }", "url": "https://raw.githubusercontent.com/idanapp/IdanPlusPlus/master/app/src/main/java/com/example/idan/plusplus/KeyboardUtils.java", "stars": "9", "class_props": {"extends": null, "implements": ["ViewTreeObserver"], "modifiers": ["public"]}}, {"id": 80105, "method_name": "removeKeyboardToggleListener", "class_name": "KeyboardUtils", "params": ["SoftKeyboardToggleListener"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void removeKeyboardToggleListener(SoftKeyboardToggleListener listener)\n    {\n        if(sListenerMap.containsKey(listener))\n        {\n            KeyboardUtils k = sListenerMap.get(listener);\n            k.removeListener();\n\n            sListenerMap.remove(listener);\n        }\n    }", "url": "https://raw.githubusercontent.com/idanapp/IdanPlusPlus/master/app/src/main/java/com/example/idan/plusplus/KeyboardUtils.java", "stars": "9", "class_props": {"extends": null, "implements": ["ViewTreeObserver"], "modifiers": ["public"]}}, {"id": 80106, "method_name": "removeAllKeyboardToggleListeners", "class_name": "KeyboardUtils", "params": [], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void removeAllKeyboardToggleListeners()\n    {\n        for(SoftKeyboardToggleListener l : sListenerMap.keySet())\n            sListenerMap.get(l).removeListener();\n\n        sListenerMap.clear();\n    }", "url": "https://raw.githubusercontent.com/idanapp/IdanPlusPlus/master/app/src/main/java/com/example/idan/plusplus/KeyboardUtils.java", "stars": "9", "class_props": {"extends": null, "implements": ["ViewTreeObserver"], "modifiers": ["public"]}}, {"id": 80107, "method_name": "toggleKeyboardVisibility", "class_name": "KeyboardUtils", "params": ["Context"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void toggleKeyboardVisibility(Context context)\n    {\n        InputMethodManager inputMethodManager = (InputMethodManager) context.getSystemService(Context.INPUT_METHOD_SERVICE);\n        if(inputMethodManager != null)\n            inputMethodManager.toggleSoftInput(InputMethodManager.SHOW_FORCED, 0);\n    }", "url": "https://raw.githubusercontent.com/idanapp/IdanPlusPlus/master/app/src/main/java/com/example/idan/plusplus/KeyboardUtils.java", "stars": "9", "class_props": {"extends": null, "implements": ["ViewTreeObserver"], "modifiers": ["public"]}}, {"id": 80108, "method_name": "forceCloseKeyboard", "class_name": "KeyboardUtils", "params": ["View"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void forceCloseKeyboard(View activeView)\n    {\n        InputMethodManager inputMethodManager = (InputMethodManager) activeView.getContext().getSystemService(Context.INPUT_METHOD_SERVICE);\n        if(inputMethodManager != null)\n            inputMethodManager.hideSoftInputFromWindow(activeView.getWindowToken(), 0);\n    }", "url": "https://raw.githubusercontent.com/idanapp/IdanPlusPlus/master/app/src/main/java/com/example/idan/plusplus/KeyboardUtils.java", "stars": "9", "class_props": {"extends": null, "implements": ["ViewTreeObserver"], "modifiers": ["public"]}}, {"id": 80109, "method_name": "removeListener", "class_name": "KeyboardUtils", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void removeListener()\n    {\n        mCallback = null;\n\n        mRootView.getViewTreeObserver().removeOnGlobalLayoutListener(this);\n    }", "url": "https://raw.githubusercontent.com/idanapp/IdanPlusPlus/master/app/src/main/java/com/example/idan/plusplus/KeyboardUtils.java", "stars": "9", "class_props": {"extends": null, "implements": ["ViewTreeObserver"], "modifiers": ["public"]}}, {"id": 80110, "method_name": "BEGIN", "class_name": "SelectBuilder", "params": [], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "  public static void BEGIN() {\n    RESET();\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/jdbc/SelectBuilder.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 80111, "method_name": "RESET", "class_name": "SelectBuilder", "params": [], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "  public static void RESET() {\n    localSQL.set(new SQL());\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/jdbc/SelectBuilder.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 80112, "method_name": "SELECT", "class_name": "SelectBuilder", "params": ["String"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "  public static void SELECT(String columns) {\n    sql().SELECT(columns);\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/jdbc/SelectBuilder.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 80113, "method_name": "SELECT_DISTINCT", "class_name": "SelectBuilder", "params": ["String"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "  public static void SELECT_DISTINCT(String columns) {\n    sql().SELECT_DISTINCT(columns);\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/jdbc/SelectBuilder.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 80114, "method_name": "FROM", "class_name": "SelectBuilder", "params": ["String"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "  public static void FROM(String table) {\n    sql().FROM(table);\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/jdbc/SelectBuilder.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 80115, "method_name": "JOIN", "class_name": "SelectBuilder", "params": ["String"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "  public static void JOIN(String join) {\n    sql().JOIN(join);\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/jdbc/SelectBuilder.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 80116, "method_name": "INNER_JOIN", "class_name": "SelectBuilder", "params": ["String"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "  public static void INNER_JOIN(String join) {\n    sql().INNER_JOIN(join);\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/jdbc/SelectBuilder.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 80117, "method_name": "LEFT_OUTER_JOIN", "class_name": "SelectBuilder", "params": ["String"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "  public static void LEFT_OUTER_JOIN(String join) {\n    sql().LEFT_OUTER_JOIN(join);\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/jdbc/SelectBuilder.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 80118, "method_name": "RIGHT_OUTER_JOIN", "class_name": "SelectBuilder", "params": ["String"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "  public static void RIGHT_OUTER_JOIN(String join) {\n    sql().RIGHT_OUTER_JOIN(join);\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/jdbc/SelectBuilder.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 80119, "method_name": "OUTER_JOIN", "class_name": "SelectBuilder", "params": ["String"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "  public static void OUTER_JOIN(String join) {\n    sql().OUTER_JOIN(join);\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/jdbc/SelectBuilder.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 80120, "method_name": "WHERE", "class_name": "SelectBuilder", "params": ["String"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "  public static void WHERE(String conditions) {\n    sql().WHERE(conditions);\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/jdbc/SelectBuilder.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 80121, "method_name": "OR", "class_name": "SelectBuilder", "params": [], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "  public static void OR() {\n    sql().OR();\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/jdbc/SelectBuilder.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 80122, "method_name": "AND", "class_name": "SelectBuilder", "params": [], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "  public static void AND() {\n    sql().AND();\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/jdbc/SelectBuilder.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 80123, "method_name": "GROUP_BY", "class_name": "SelectBuilder", "params": ["String"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "  public static void GROUP_BY(String columns) {\n    sql().GROUP_BY(columns);\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/jdbc/SelectBuilder.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 80124, "method_name": "HAVING", "class_name": "SelectBuilder", "params": ["String"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "  public static void HAVING(String conditions) {\n    sql().HAVING(conditions);\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/jdbc/SelectBuilder.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 80125, "method_name": "ORDER_BY", "class_name": "SelectBuilder", "params": ["String"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "  public static void ORDER_BY(String columns) {\n    sql().ORDER_BY(columns);\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/jdbc/SelectBuilder.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 80126, "method_name": "SQL", "class_name": "SelectBuilder", "params": [], "throws": null, "modifiers": ["public", "static"], "return_type": "String", "snippet": "  public static String SQL() {\n    try {\n      return sql().toString();\n    } finally {\n      RESET();\n    }\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/jdbc/SelectBuilder.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 80127, "method_name": "sql", "class_name": "SelectBuilder", "params": [], "throws": null, "modifiers": ["static", "private"], "return_type": "SQL", "snippet": "  private static SQL sql() {\n    return localSQL.get();\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/jdbc/SelectBuilder.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 80128, "method_name": "targetedSystems", "class_name": "AIGeneral", "params": [], "throws": null, "modifiers": ["private"], "return_type": "HashMap<StarSystem,List>", "snippet": "    private HashMap<StarSystem, List<Ship>> targetedSystems() { return targetedSystems; }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/ai/base/AIGeneral.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "General"], "modifiers": ["public"]}}, {"id": 80129, "method_name": "rushDefenseSystems", "class_name": "AIGeneral", "params": [], "throws": null, "modifiers": ["public"], "return_type": "List<StarSystem>", "snippet": "    public List<StarSystem> rushDefenseSystems() { return rushDefenseSystems; }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/ai/base/AIGeneral.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "General"], "modifiers": ["public"]}}, {"id": 80130, "method_name": "rushShipSystems", "class_name": "AIGeneral", "params": [], "throws": null, "modifiers": ["public"], "return_type": "List<StarSystem>", "snippet": "    public List<StarSystem> rushShipSystems() { return rushShipSystems; }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/ai/base/AIGeneral.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "General"], "modifiers": ["public"]}}, {"id": 80131, "method_name": "toString", "class_name": "AIGeneral", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String toString()   { return concat(\"General: \", empire.raceName()); }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/ai/base/AIGeneral.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "General"], "modifiers": ["public"]}}, {"id": 80132, "method_name": "inWarMode", "class_name": "AIGeneral", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean inWarMode()  { return empire.numEnemies() > 0; }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/ai/base/AIGeneral.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "General"], "modifiers": ["public"]}}, {"id": 80133, "method_name": "nextTurn", "class_name": "AIGeneral", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void nextTurn() {\n        civProd = empire.totalPlanetaryProduction();\n        resetTargetedSystems();\n        rushDefenseSystems.clear();\n        rushShipSystems.clear();\n\n        Galaxy gal = galaxy();\n        for (int id=0;id<empire.sv.count();id++)\n            reviseFleetPlan(gal.system(id));\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/ai/base/AIGeneral.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "General"], "modifiers": ["public"]}}, {"id": 80134, "method_name": "invasionPriority", "class_name": "AIGeneral", "params": ["StarSystem"], "throws": null, "modifiers": ["public"], "return_type": "float", "snippet": "    public float invasionPriority(StarSystem sys) {\n        int sysId = sys.id;\n        if (!empire.sv.inShipRange(sysId))  return 0.0f;\n        if (!empire.sv.isScouted(sysId))    return 0.0f;\n        if (!empire.sv.isColonized(sysId))  return 0.0f;\n        if (!empire.canColonize(sys.planet()))  return 0.0f;\n\n        float pr = empire.sv.currentSize(sysId);\n\n        if (empire.sv.isPoor(sysId))\n            pr *= 2;\n        else if (empire.sv.isResourceNormal(sysId))\n            pr *= 3;\n        else if (empire.sv.isRich(sysId))\n            pr *= 4;\n        else if (empire.sv.isUltraRich(sysId))\n            pr *= 5;\n\n        //float for artifacts, triple for super-artifacts\n        if (empire.sv.isArtifact(sysId))\n            pr *= 2;\n        else if (empire.sv.isOrionArtifact(sysId))\n            pr *= 3;\n        pr /= Math.sqrt(max(1,empire.sv.distance(sysId)));\n        pr /= Math.sqrt(max(1,empire.sv.bases(sysId)));\n        return pr/10;\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/ai/base/AIGeneral.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "General"], "modifiers": ["public"]}}, {"id": 80135, "method_name": "reviseFleetPlan", "class_name": "AIGeneral", "params": ["StarSystem"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void reviseFleetPlan(StarSystem sys) {\n        int sysId = sys.id;\n        \n        // if out of ship range, ignore\n        if (!empire.sv.inShipRange(sysId))\n            return;\n\n        boolean enemyFleetInOrbit = false;\n        float enemyFleetSize = 0.0f;\n        List<ShipFleet> fleets = sys.orbitingFleets();\n        for (ShipFleet fl: fleets) {\n            if (!fl.empire().alliedWith(empire.id) && !fl.empire().pactWith(empire.id)) {\n                enemyFleetInOrbit = true;\n                if (fl.isArmed())\n                    enemyFleetSize += fl.bcValue();\n            }\n        }\n\n        // for uncolonized systems\n        if (!empire.sv.isColonized(sysId)) {\n            if (enemyFleetInOrbit)\n                setExpelFleetPlan(sys, enemyFleetSize);\n            return;\n        }\n\n        // for our systems\n        if (empire == empire.sv.empire(sysId)) {\n            if (sys.hasEvent()) {\n                if (sys.eventKey().equals(\"MAIN_PLANET_EVENT_PIRACY\")) {\n                    setExpelPiratesPlan(sys);\n                    return;\n                }\n                if (sys.eventKey().equals(\"MAIN_PLANET_EVENT_COMET\")) {\n                    setDestroyCometPlan(sys, false);\n                    return;\n                }\n            }\n            float value = invasionPriority(sys);\n            if (sys.colony().inRebellion())\n                orderRebellionFleet(sys, enemyFleetSize);\n            else if (enemyFleetInOrbit)\n                setRepelFleetPlan(sys, enemyFleetSize);\n            else if (targetedSystems.keySet().contains(sys))\n                setInterceptFleetPlan(sys, enemyFleetSize);\n            else if (empire.sv.isAttackTarget(sysId))\n                setMinimumFighterGuard(sys, FleetPlan.GUARD_ATTACK_TARGET+value);\n            else if (empire.sv.isBorderSystem(sysId))\n                setMinimumFighterGuard(sys, FleetPlan.GUARD_BORDER_COLONY+value);\n            else\n                setMinimumFighterGuard(sys, FleetPlan.GUARD_INNER_COLONY+value);\n            return;\n        }\n\n        EmpireView ev = empire.viewForEmpire(empire.sv.empId(sysId));\n        \n        // help our allies with the comet\n        if (ev.embassy().alliance()) {\n            if (sys.eventKey().equals(\"MAIN_PLANET_EVENT_COMET\")) {\n                setDestroyCometPlan(sys, true);\n                return;\n            }\n        }\n\n        // for empires we are at war with.. we always invade or bomb\n        if (ev.embassy().anyWar() || ev.embassy().onWarFooting()) {\n            if (willingToInvade(ev, sys))\n                orderInvasionFleet(ev, sys, enemyFleetSize);\n            else\n                orderBombardmentFleet(ev, sys, enemyFleetSize);\n            return;\n        }\n\n        // protect allied colonies from enemy fleets\n        if (ev.embassy().alliance()) {\n            if (enemyFleetInOrbit)\n                setAssistAllyFleetPlan(sys, enemyFleetSize);\n            return;\n        }\n        \n        // for empires with no treaty\n        if (ev.embassy().noTreaty()) {\n            if (ev.embassy().encroaching(sys))\n                orderBombEncroachmentFleet(ev, sys, enemyFleetSize);\n            else\n                considerSneakAttackFleet(ev, sys, enemyFleetSize);\n        }\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/ai/base/AIGeneral.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "General"], "modifiers": ["public"]}}, {"id": 80136, "method_name": "willingToInvade", "class_name": "AIGeneral", "params": ["EmpireView", "StarSystem"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean willingToInvade(EmpireView v, StarSystem sys) {\n        if (!empire.canSendTransportsTo(sys))\n            return false;\n        float pop = empire.sv.population(sys.id);\n        float needed = troopsNecessaryToTakePlanet(v, sys);   \n        return needed < pop;\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/ai/base/AIGeneral.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "General"], "modifiers": ["public"]}}, {"id": 80137, "method_name": "orderRebellionFleet", "class_name": "AIGeneral", "params": ["StarSystem", "float"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void orderRebellionFleet(StarSystem sys, float enemyFleetSize) {\n        if (enemyFleetSize == 0)\n            launchRebellionTroops(sys);\n        else\n            setRepelFleetPlan(sys, enemyFleetSize);      \n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/ai/base/AIGeneral.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "General"], "modifiers": ["public"]}}, {"id": 80138, "method_name": "orderInvasionFleet", "class_name": "AIGeneral", "params": ["EmpireView", "StarSystem", "float"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void orderInvasionFleet(EmpireView v, StarSystem sys, float enemyFleetSize) {\n        if (empire.sv.hasFleetForEmpire(sys.id, empire))\n            launchGroundTroops(v, sys, 1);\n        else if (empire.combatTransportPct() > 0)\n            launchGroundTroops(v, sys, 1/empire.combatTransportPct());\n\n        float baseBCPresent = empire.sv.bases(sys.id)*empire.tech().newMissileBaseCost();\n        float bcMultiplier = 1 + (empire.sv.hostilityLevel(sys.id));\n        float bcNeeded = (baseBCPresent*4) +bcMultiplier*civProd/10;\n        \n        // use up to half of BC for Destroyers... rest for fighters\n        int destroyersNeeded = (int) Math.ceil((bcNeeded/2)/empire.shipLab().destroyerDesign().cost());\n        bcNeeded -= (destroyersNeeded * empire.shipLab().destroyerDesign().cost());\n        int fightersNeeded = (int) Math.ceil(bcNeeded/empire.shipLab().fighterDesign().cost());\n\n        // set fleet orders for invasion...\n        ShipDesignLab lab = empire.shipLab();\n        float speed = max(lab.destroyerDesign().warpSpeed(), lab.fighterDesign().warpSpeed());\n        FleetPlan fp = empire.sv.fleetPlan(sys.id);\n        fp.addShips(empire.shipLab().destroyerDesign(), destroyersNeeded);\n        fp.addShips(empire.shipLab().fighterDesign(), fightersNeeded);\n        if (v.embassy().finalWar()) \n            fp.priority = FleetPlan.INVADE_FINAL_WAR+ invasionPriority(sys)/100;\n        else\n            fp.priority = FleetPlan.INVADE + invasionPriority(sys)/100;\n        fp.stagingPointId = empire.optimalStagingPoint(sys, speed);\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/ai/base/AIGeneral.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "General"], "modifiers": ["public"]}}, {"id": 80139, "method_name": "launchGroundTroops", "class_name": "AIGeneral", "params": ["EmpireView", "StarSystem", "float"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void launchGroundTroops(EmpireView v, StarSystem target, float mult) {\n        //float troops0 = troopsNecessaryToBypassBases(target);\n        float troops1 = mult*troopsNecessaryToTakePlanet(v, target);\n        int alreadySent = empire.transportsInTransit(target);\n        float troopsDesired = troops1 + empire.sv.currentSize(target.id) - alreadySent;\n\n        if (troopsDesired < 1)\n            return;\n\n        List<StarSystem> allSystems = empire.allColonizedSystems();\n        List<StarSystem> launchPoints = new ArrayList<>();\n        StarSystem.TARGET_SYSTEM = target;\n        Collections.sort(allSystems,StarSystem.DISTANCE_TO_TARGET_SYSTEM);\n\n        float troopsAvailable = 0;\n        float maxTravelTime = 0;\n\n        for (StarSystem sys : allSystems) {\n            if (troopsAvailable < troopsDesired) {\n                float travelTime = sys.colony().transport().travelTime(target);\n                // only consider systems within 3 travel turns\n                if ((travelTime <= 3) && sys.colony().canTransport()) {\n                    launchPoints.add(sys);\n                    maxTravelTime = max(maxTravelTime, travelTime);\n                    troopsAvailable += sys.colony().maxTransportsAllowed();\n                }\n            }\n        }\n\n        //not enough troops to take planet! switch to defense\n        if (troopsAvailable < troops1)\n            return;\n\n        for (StarSystem sys: launchPoints)\n            maxTravelTime = max(maxTravelTime, sys.colony().transport().travelTime(target));\n\n        // send transports from launch points\n        for (StarSystem sys : launchPoints) {\n            int troops = sys.colony().maxTransportsAllowed();\n            sys.colony().scheduleTransportsToSystem(target, troops, maxTravelTime);\n        }\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/ai/base/AIGeneral.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "General"], "modifiers": ["public"]}}, {"id": 80140, "method_name": "launchRebellionTroops", "class_name": "AIGeneral", "params": ["StarSystem"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void launchRebellionTroops(StarSystem target) {\n        float troops1 =  target.colony().rebels()*2;\n        int alreadySent = empire.transportsInTransit(target);\n        float troopsDesired = troops1 - alreadySent;\n\n        if (troopsDesired < 1)\n            return;\n\n        List<StarSystem> allSystems = empire.allColonizedSystems();\n        List<StarSystem> launchPoints = new ArrayList<>();\n        StarSystem.TARGET_SYSTEM = target;\n        Collections.sort(allSystems,StarSystem.DISTANCE_TO_TARGET_SYSTEM);\n\n        float troopsAvailable = 0;\n\n        for (StarSystem sys : allSystems) {\n            if (troopsAvailable < troopsDesired) {\n                if (sys.colony().canTransport()) {\n                    launchPoints.add(sys);\n                    troopsAvailable += sys.colony().maxTransportsAllowed();\n                }\n            }\n        }\n\n        // send transports from launch points\n        for (StarSystem sys : launchPoints) {\n            int troops = sys.colony().maxTransportsAllowed();\n            sys.colony().scheduleTransportsToSystem(target, troops);\n        }\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/ai/base/AIGeneral.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "General"], "modifiers": ["public"]}}, {"id": 80141, "method_name": "troopsNecessaryToBypassBases", "class_name": "AIGeneral", "params": ["StarSystem"], "throws": null, "modifiers": ["public"], "return_type": "float", "snippet": "    public float troopsNecessaryToBypassBases(StarSystem sys) {\n        return empire.sv.bases(sys.id) * troopToEnemyBaseRatio(sys);\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/ai/base/AIGeneral.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "General"], "modifiers": ["public"]}}, {"id": 80142, "method_name": "troopToEnemyBaseRatio", "class_name": "AIGeneral", "params": ["StarSystem"], "throws": null, "modifiers": ["public"], "return_type": "float", "snippet": "    public float troopToEnemyBaseRatio(StarSystem sys) {\n        int id = sys.id;\n        EmpireView ev = empire.viewForEmpire(empire.sv.empire(id));\n        return ev.spies().tech().weapon().techLevel() / empire.tech().construction().techLevel();\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/ai/base/AIGeneral.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "General"], "modifiers": ["public"]}}, {"id": 80143, "method_name": "troopsNecessaryToTakePlanet", "class_name": "AIGeneral", "params": ["EmpireView", "StarSystem"], "throws": null, "modifiers": ["public"], "return_type": "float", "snippet": "    public float troopsNecessaryToTakePlanet(EmpireView ev, StarSystem sys) {\n        int id = sys.id;\n        return empire.sv.population(id) * (50 + ev.spies().tech().troopCombatAdj(true)) / (50 + empire.tech().troopCombatAdj(false));\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/ai/base/AIGeneral.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "General"], "modifiers": ["public"]}}, {"id": 80144, "method_name": "orderBombardmentFleet", "class_name": "AIGeneral", "params": ["EmpireView", "StarSystem", "float"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void orderBombardmentFleet(EmpireView v, StarSystem sys, float fleetSize) {\n        float baseBCPresent = empire.sv.bases(sys.id)*empire.tech().newMissileBaseCost();\n        // set fleet orders for bombardment...\n        float bcMultiplier = 1 + (empire.sv.hostilityLevel(sys.id)/2);\n        float bcNeeded = (baseBCPresent*4)+bcMultiplier*civProd/20;\n        int fightersNeeded = (int) Math.ceil(bcNeeded/empire.shipLab().fighterDesign().cost());\n        int bombersNeeded = (int) Math.ceil(4*bcNeeded/empire.shipLab().bomberDesign().cost());\n\n        ShipDesignLab lab = empire.shipLab();\n        float speed = max(lab.bomberDesign().warpSpeed(), lab.fighterDesign().warpSpeed());\n        FleetPlan fp = empire.sv.fleetPlan(sys.id);\n        fp.addShips(empire.shipLab().bomberDesign(), bombersNeeded);\n        fp.addShips(empire.shipLab().fighterDesign(), fightersNeeded);\n        fp.stagingPointId = empire.optimalStagingPoint(sys, speed);\n        if (v.embassy().finalWar()) \n            fp.priority = FleetPlan.BOMB_FINAL_WAR+ invasionPriority(sys)/100;\n        else\n            fp.priority = FleetPlan.BOMB_ENEMY+ invasionPriority(sys)/100;\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/ai/base/AIGeneral.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "General"], "modifiers": ["public"]}}, {"id": 80145, "method_name": "orderBombEncroachmentFleet", "class_name": "AIGeneral", "params": ["EmpireView", "StarSystem", "float"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void orderBombEncroachmentFleet(EmpireView v, StarSystem sys, float fleetSize) {\n        // set fleet orders for bombardment...\n        float bcMultiplier = 1 + (empire.sv.hostilityLevel(sys.id)/2);\n        float bcNeeded = bcMultiplier*civProd/20;\n        int fightersNeeded = (int) Math.ceil(bcNeeded/empire.shipLab().fighterDesign().cost());\n        int bombersNeeded = (int) Math.ceil(bcNeeded/empire.shipLab().bomberDesign().cost());\n\n        ShipDesignLab lab = empire.shipLab();\n        float speed = max(lab.bomberDesign().warpSpeed(), lab.fighterDesign().warpSpeed());\n        FleetPlan fp = empire.sv.fleetPlan(sys.id);\n        fp.addShips(empire.shipLab().bomberDesign(), bombersNeeded);\n        fp.addShips(empire.shipLab().fighterDesign(), fightersNeeded);\n        fp.stagingPointId = empire.optimalStagingPoint(sys, speed);\n        fp.priority = FleetPlan.BOMB_ENCROACHMENT;\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/ai/base/AIGeneral.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "General"], "modifiers": ["public"]}}, {"id": 80146, "method_name": "considerSneakAttackFleet", "class_name": "AIGeneral", "params": ["EmpireView", "StarSystem", "float"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void considerSneakAttackFleet(EmpireView v, StarSystem sys, float fleetSize) {\n        // pacifist/honorable never sneak attack\n        if (empire.leader().isPacifist()\n        || empire.leader().isHonorable())\n            return;\n\n        float baseChance = 0.3f - (empire.numEnemies()*0.3f);\n        if (empire.leader().isAggressive())\n            baseChance += 0.6f;\n        else if (empire.leader().isDiplomat())\n            baseChance -= 0.2f;\n        else if (empire.leader().isRuthless())\n            baseChance += 0.3f;\n\n        // lower sneak attack chance on planet we can't capture\n        if (!empire.canColonize(sys.planet().type()))\n                baseChance -= 0.3f;\n\n        float value = (empire.sv.factories(sys.id) * 10);\n        float cost = fleetSize + (empire.sv.bases(sys.id)*empire.tech().newMissileBaseCost());\n        float bonus = -0.5f + (value / (value+cost));\n\n        if ((baseChance+bonus) > 0.5)  {\n            orderBombardmentFleet(v, sys, fleetSize);\n            empire.sv.fleetPlan(sys.id).priority = FleetPlan.BOMB_UNDEFENDED;\n        }\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/ai/base/AIGeneral.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "General"], "modifiers": ["public"]}}, {"id": 80147, "method_name": "setMinimumFighterGuard", "class_name": "AIGeneral", "params": ["StarSystem", "float"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void setMinimumFighterGuard(StarSystem sys, float priority) {\n        float basesNeeded = empire.sv.desiredMissileBases(sys.id) - empire.sv.bases(sys.id);\n        if (basesNeeded <= 0) \n            return;\n        float baseCost = empire.tech().newMissileBase().cost(empire);\n        FleetPlan fp = empire.sv.fleetPlan(sys.id);\n        fp.priority = priority;\n        // one base BC = 10 fighter BC\n        fp.addShipBC(empire.shipLab().fighterDesign(), basesNeeded*baseCost/10);\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/ai/base/AIGeneral.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "General"], "modifiers": ["public"]}}, {"id": 80148, "method_name": "setRepelFleetPlan", "class_name": "AIGeneral", "params": ["StarSystem", "float"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void setRepelFleetPlan(StarSystem sys, float fleetSize) {\n        float baseBCPresent = empire.sv.bases(sys.id)*empire.tech().newMissileBaseCost();\n        float bcNeeded = max(empire.shipLab().fighterDesign().cost(), fleetSize*10);\n        bcNeeded -= baseBCPresent;\n        if (bcNeeded <= 0)\n            return;\n        \n        rushDefenseSystems.add(sys);\n\n        // use up to half of BC for Destroyers... rest for fighters\n        int destroyersNeeded = (int) Math.ceil((bcNeeded/2)/empire.shipLab().destroyerDesign().cost());\n        bcNeeded -= (destroyersNeeded * empire.shipLab().destroyerDesign().cost());\n        int fightersNeeded = (int) Math.ceil(bcNeeded/empire.shipLab().fighterDesign().cost());\n\n        ShipDesignLab lab = empire.shipLab();\n        float speed = max(lab.destroyerDesign().warpSpeed(), lab.fighterDesign().warpSpeed());\n        FleetPlan fp = empire.sv.fleetPlan(sys.id);\n        fp.priority = FleetPlan.REPEL + invasionPriority(sys)/100;\n        fp.stagingPointId = empire.optimalStagingPoint(sys, speed);\n        fp.addShips(empire.shipLab().destroyerDesign(), destroyersNeeded);\n        fp.addShips(empire.shipLab().fighterDesign(), fightersNeeded);\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/ai/base/AIGeneral.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "General"], "modifiers": ["public"]}}, {"id": 80149, "method_name": "setInterceptFleetPlan", "class_name": "AIGeneral", "params": ["StarSystem", "float"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void setInterceptFleetPlan(StarSystem sys, float fleetSize) {\n        float baseBCPresent = empire.sv.bases(sys.id)*empire.tech().newMissileBaseCost();\n        float bcNeeded = max(empire.shipLab().fighterDesign().cost(), fleetSize*6);\n        bcNeeded -= baseBCPresent;\n        if (bcNeeded <= 0)\n            return;\n\n        rushDefenseSystems.add(sys);\n        // use up to half of BC for Destroyers... rest for fighters\n        int destroyersNeeded = (int) Math.ceil((bcNeeded/2)/empire.shipLab().destroyerDesign().cost());\n        bcNeeded -= (destroyersNeeded * empire.shipLab().destroyerDesign().cost());\n        int fightersNeeded = (int) Math.ceil(bcNeeded/empire.shipLab().fighterDesign().cost());\n\n        ShipDesignLab lab = empire.shipLab();\n        float speed = max(lab.destroyerDesign().warpSpeed(), lab.fighterDesign().warpSpeed());\n        FleetPlan fp = empire.sv.fleetPlan(sys.id);\n        fp.priority = FleetPlan.INTERCEPT + invasionPriority(sys)/100;\n        fp.addShips(empire.shipLab().destroyerDesign(), destroyersNeeded);\n        fp.addShips(empire.shipLab().fighterDesign(), fightersNeeded);\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/ai/base/AIGeneral.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "General"], "modifiers": ["public"]}}, {"id": 80150, "method_name": "setExpelFleetPlan", "class_name": "AIGeneral", "params": ["StarSystem", "float"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void setExpelFleetPlan(StarSystem sys, float fleetSize) {\n        float baseBCPresent = empire.sv.bases(sys.id)*empire.tech().newMissileBaseCost();\n        float bcNeeded = max(empire.shipLab().fighterDesign().cost(), fleetSize*10);\n        bcNeeded -= baseBCPresent;\n        if (bcNeeded <= 0)\n            return;\n\n        // use up to half of BC for Destroyers... rest for fighters\n        int destroyersNeeded = (int) Math.ceil((bcNeeded/2)/empire.shipLab().destroyerDesign().cost());\n        bcNeeded -= (destroyersNeeded * empire.shipLab().destroyerDesign().cost());\n        int fightersNeeded = (int) Math.ceil(bcNeeded/empire.shipLab().fighterDesign().cost());\n\n        ShipDesignLab lab = empire.shipLab();\n        float speed = max(lab.destroyerDesign().warpSpeed(), lab.fighterDesign().warpSpeed());\n        FleetPlan fp = empire.sv.fleetPlan(sys.id);\n        fp.priority = FleetPlan.EXPEL + invasionPriority(sys)/100;\n        fp.stagingPointId = empire.optimalStagingPoint(sys, speed);\n        fp.addShips(empire.shipLab().destroyerDesign(), destroyersNeeded);\n        fp.addShips(empire.shipLab().fighterDesign(), fightersNeeded);\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/ai/base/AIGeneral.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "General"], "modifiers": ["public"]}}, {"id": 80151, "method_name": "setExpelPiratesPlan", "class_name": "AIGeneral", "params": ["StarSystem"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void setExpelPiratesPlan(StarSystem sys) {\n        float bcNeeded = 300;\n        int fightersNeeded = (int) Math.ceil(bcNeeded/empire.shipLab().fighterDesign().cost());\n\n        FleetPlan fp = empire.sv.fleetPlan(sys.id);\n        fp.priority = FleetPlan.EXPEL;\n        fp.addShips(empire.shipLab().fighterDesign(), fightersNeeded);\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/ai/base/AIGeneral.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "General"], "modifiers": ["public"]}}, {"id": 80152, "method_name": "setDestroyCometPlan", "class_name": "AIGeneral", "params": ["StarSystem", "boolean"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void setDestroyCometPlan(StarSystem sys, boolean alliance) {\n        float bcNeeded = alliance ? 10000 : 20000;\n        \n        int destroyersNeeded = (int) Math.ceil(bcNeeded/empire.shipLab().destroyerDesign().cost());\n        // fighters are not much help here but we want to at least rush any available fighters there\n        // while destroyers are potentially being constructed\n        int fightersNeeded = (int) Math.ceil(0.02f*bcNeeded/empire.shipLab().fighterDesign().cost());\n\n        FleetPlan fp = empire.sv.fleetPlan(sys.id);\n        fp.priority = alliance ? FleetPlan.ASSIST_ALLY : FleetPlan.REPEL;\n        fp.addShips(empire.shipLab().destroyerDesign(), destroyersNeeded);\n        fp.addShips(empire.shipLab().fighterDesign(), fightersNeeded);\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/ai/base/AIGeneral.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "General"], "modifiers": ["public"]}}, {"id": 80153, "method_name": "setAssistAllyFleetPlan", "class_name": "AIGeneral", "params": ["StarSystem", "float"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void setAssistAllyFleetPlan(StarSystem sys, float fleetSize) {\n        float baseBCPresent = empire.sv.bases(sys.id)*empire.tech().newMissileBaseCost();\n        float bcNeeded = max(empire.shipLab().fighterDesign().cost(), fleetSize*5);\n        bcNeeded -= baseBCPresent;\n        if (bcNeeded <= 0)\n            return;\n\n        // use up to half of BC for Destroyers... rest for fighters\n        int destroyersNeeded = (int) Math.ceil((bcNeeded/2)/empire.shipLab().destroyerDesign().cost());\n        bcNeeded -= (destroyersNeeded * empire.shipLab().destroyerDesign().cost());\n        int fightersNeeded = (int) Math.ceil(bcNeeded/empire.shipLab().fighterDesign().cost());\n\n        ShipDesignLab lab = empire.shipLab();\n        float speed = max(lab.destroyerDesign().warpSpeed(), lab.fighterDesign().warpSpeed());\n        FleetPlan fp = empire.sv.fleetPlan(sys.id);\n        fp.priority = FleetPlan.ASSIST_ALLY + invasionPriority(sys)/100;\n        fp.stagingPointId = empire.optimalStagingPoint(sys, speed);\n        fp.addShips(empire.shipLab().destroyerDesign(), destroyersNeeded);\n        fp.addShips(empire.shipLab().fighterDesign(), fightersNeeded);\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/ai/base/AIGeneral.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "General"], "modifiers": ["public"]}}, {"id": 80154, "method_name": "resetTargetedSystems", "class_name": "AIGeneral", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void resetTargetedSystems() {\n        Set<StarSystem> systems = targetedSystems().keySet(); // re-inits\n        for (StarSystem s: systems)\n            targetedSystems.get(s).clear();\n\n        Galaxy gal = galaxy();\n        for (Ship ship: empire.visibleShips()){\n            if (ship.inTransit() && empire.aggressiveWith(ship.empId())) {\n                if (empire.knowETA(ship)) {\n                    StarSystem dest = gal.system(ship.destSysId());\n                    if (!targetedSystems.containsKey(dest))\n                        targetedSystems.put(dest, new ArrayList<>());\n                    targetedSystems.get(dest).add(ship);\n                }\n            }\n        }\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/ai/base/AIGeneral.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "General"], "modifiers": ["public"]}}, {"id": 80155, "method_name": "title", "class_name": "NoDiplomaticRelationsIncident", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String title()            { return text(\"INC_NO_RELATIONS_TITLE\"); }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/incidents/NoDiplomaticRelationsIncident.java", "stars": "74", "class_props": {"extends": "DiplomaticIncident", "implements": null, "modifiers": ["public"]}}, {"id": 80156, "method_name": "description", "class_name": "NoDiplomaticRelationsIncident", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String description()      { return  decode(text(\"INC_NO_RELATIONS_DESC\")); }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/incidents/NoDiplomaticRelationsIncident.java", "stars": "74", "class_props": {"extends": "DiplomaticIncident", "implements": null, "modifiers": ["public"]}}, {"id": 80157, "method_name": "triggeredByAction", "class_name": "NoDiplomaticRelationsIncident", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean triggeredByAction()   { return false; }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/incidents/NoDiplomaticRelationsIncident.java", "stars": "74", "class_props": {"extends": "DiplomaticIncident", "implements": null, "modifiers": ["public"]}}, {"id": 80158, "method_name": "key", "class_name": "NoDiplomaticRelationsIncident", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String key()              { return \"No Relations\"; }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/incidents/NoDiplomaticRelationsIncident.java", "stars": "74", "class_props": {"extends": "DiplomaticIncident", "implements": null, "modifiers": ["public"]}}, {"id": 80159, "method_name": "decode", "class_name": "NoDiplomaticRelationsIncident", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String decode(String s) {\n        String s1 = super.decode(s);\n        s1 = galaxy().empire(empMe).replaceTokens(s1, \"my\");\n        s1 = galaxy().empire(empYou).replaceTokens(s1, \"your\");\n        return s1;\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/incidents/NoDiplomaticRelationsIncident.java", "stars": "74", "class_props": {"extends": "DiplomaticIncident", "implements": null, "modifiers": ["public"]}}, {"id": 80160, "method_name": "getRotation", "class_name": "RotationEvent", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Rotation", "snippet": "    public Rotation getRotation() {\n        return rotation;\n    }", "url": "https://raw.githubusercontent.com/Crystallinqq/Mercury-Client/master/src/main/java/fail/mercury/client/client/events/RotationEvent.java", "stars": "12", "class_props": {"extends": "Event", "implements": null, "modifiers": ["public"]}}, {"id": 80161, "method_name": "getPrevRotation", "class_name": "RotationEvent", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Rotation", "snippet": "    public Rotation getPrevRotation() {\n        return prevRotation;\n    }", "url": "https://raw.githubusercontent.com/Crystallinqq/Mercury-Client/master/src/main/java/fail/mercury/client/client/events/RotationEvent.java", "stars": "12", "class_props": {"extends": "Event", "implements": null, "modifiers": ["public"]}}, {"id": 80162, "method_name": "getRenderYawOffset", "class_name": "RotationEvent", "params": [], "throws": null, "modifiers": ["public"], "return_type": "float", "snippet": "    public float getRenderYawOffset() {\n        return renderYawOffset;\n    }", "url": "https://raw.githubusercontent.com/Crystallinqq/Mercury-Client/master/src/main/java/fail/mercury/client/client/events/RotationEvent.java", "stars": "12", "class_props": {"extends": "Event", "implements": null, "modifiers": ["public"]}}, {"id": 80163, "method_name": "getPrevRenderYawOffset", "class_name": "RotationEvent", "params": [], "throws": null, "modifiers": ["public"], "return_type": "float", "snippet": "    public float getPrevRenderYawOffset() {\n        return prevRenderYawOffset;\n    }", "url": "https://raw.githubusercontent.com/Crystallinqq/Mercury-Client/master/src/main/java/fail/mercury/client/client/events/RotationEvent.java", "stars": "12", "class_props": {"extends": "Event", "implements": null, "modifiers": ["public"]}}, {"id": 80164, "method_name": "setRenderYawOffset", "class_name": "RotationEvent", "params": ["float"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setRenderYawOffset(float renderYawOffset) {\n        this.renderYawOffset = renderYawOffset;\n    }", "url": "https://raw.githubusercontent.com/Crystallinqq/Mercury-Client/master/src/main/java/fail/mercury/client/client/events/RotationEvent.java", "stars": "12", "class_props": {"extends": "Event", "implements": null, "modifiers": ["public"]}}, {"id": 80165, "method_name": "setPrevRenderYawOffset", "class_name": "RotationEvent", "params": ["float"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setPrevRenderYawOffset(float prevRenderYawOffset) {\n        this.prevRenderYawOffset = prevRenderYawOffset;\n    }", "url": "https://raw.githubusercontent.com/Crystallinqq/Mercury-Client/master/src/main/java/fail/mercury/client/client/events/RotationEvent.java", "stars": "12", "class_props": {"extends": "Event", "implements": null, "modifiers": ["public"]}}, {"id": 80166, "method_name": "getErrorPath", "class_name": "ErrorPageController", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getErrorPath() {\n        return \"/error\";\n    }", "url": "https://raw.githubusercontent.com/rubywooJ/beyond/master/src/main/java/cn/tsxygfy/beyond/controller/ErrorPageController.java", "stars": "1", "class_props": {"extends": "ContentBaseController", "implements": ["ErrorController"], "modifiers": ["public"]}}, {"id": 80167, "method_name": "handleError", "class_name": "ErrorPageController", "params": ["HttpServletRequest"], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String handleError(HttpServletRequest request) {\n        Integer statusCode = (Integer) request.getAttribute(\"javax.servlet.error.status_code\");\n        if (statusCode == 404) {\n            return BASE_DIR + \"404\";\n        } else {\n            return BASE_DIR + \"500\";\n        }\n    }", "url": "https://raw.githubusercontent.com/rubywooJ/beyond/master/src/main/java/cn/tsxygfy/beyond/controller/ErrorPageController.java", "stars": "1", "class_props": {"extends": "ContentBaseController", "implements": ["ErrorController"], "modifiers": ["public"]}}, {"id": 80168, "method_name": "getFilterUrlById", "class_name": "SavedFilterDAO", "params": ["int"], "throws": ["BGException"], "modifiers": ["public"], "return_type": "String", "snippet": "    public String getFilterUrlById(int id) throws BGException {\n        try {\n            String query = \"SELECT url FROM \" + TABLE_PROCESS_COMMON_FILTER + \" WHERE id=?\";\n            PreparedStatement ps = con.prepareStatement(query);\n            ps.setInt(1, id);\n            ResultSet rs = ps.executeQuery();\n\n            if (rs.next()) {\n                return rs.getString(\"url\");\n            }\n\n            ps.close();\n        } catch (SQLException e) {\n            throw new BGException(e);\n        }\n        return \"\";\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/dao/process/SavedFilterDAO.java", "stars": "12", "class_props": {"extends": "CommonDAO", "implements": null, "modifiers": ["public"]}}, {"id": 80169, "method_name": "getFilters", "class_name": "SavedFilterDAO", "params": ["int"], "throws": ["BGException"], "modifiers": ["public"], "return_type": "ArrayList<SavedFilter>", "snippet": "    public ArrayList<SavedFilter> getFilters(int queueId) throws BGException {\n        try {\n            String query = \"SELECT * FROM \" + TABLE_PROCESS_COMMON_FILTER + \" WHERE queue_id = ?\";\n            PreparedStatement ps = con.prepareStatement(query);\n            ps.setInt(1, queueId);\n            ResultSet rs = ps.executeQuery();\n\n            ArrayList<SavedFilter> commonFilters = new ArrayList<SavedFilter>();\n\n            while (rs.next()) {\n                commonFilters.add(new SavedFilter(rs.getInt(\"queue_id\"), rs.getInt(\"id\"), rs.getString(\"title\"), rs.getString(\"url\")));\n            }\n\n            ps.close();\n            return commonFilters;\n        } catch (SQLException e) {\n            throw new BGException(e);\n        }\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/dao/process/SavedFilterDAO.java", "stars": "12", "class_props": {"extends": "CommonDAO", "implements": null, "modifiers": ["public"]}}, {"id": 80170, "method_name": "deleteFilter", "class_name": "SavedFilterDAO", "params": ["int"], "throws": ["SQLException"], "modifiers": ["public"], "return_type": "void", "snippet": "    public void deleteFilter(int id) throws SQLException {\n        log.debug(\"Deleting \" + id);\n        String query = \"DELETE FROM \" + TABLE_PROCESS_COMMON_FILTER + \" WHERE id=?\";\n        PreparedStatement ps = con.prepareStatement(query);\n        ps.setInt(1, id);\n        ps.executeUpdate();\n        ps.close();\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/dao/process/SavedFilterDAO.java", "stars": "12", "class_props": {"extends": "CommonDAO", "implements": null, "modifiers": ["public"]}}, {"id": 80171, "method_name": "updateFilter", "class_name": "SavedFilterDAO", "params": ["SavedCommonFiltersConfig", "int"], "throws": ["SQLException"], "modifiers": ["public"], "return_type": "void", "snippet": "    public void updateFilter(SavedCommonFiltersConfig commonConfig, int queueId) throws SQLException {\n        PreparedStatement ps = null;\n\n        for (SavedFilter filter : commonConfig.getQueueSavedCommonFilterSetsMap(queueId)) {\n            log.debug(\"params : \" + filter.getTitle());\n            String title = filter.getTitle();\n            String url = filter.getUrl();\n            int id = filter.getId();\n\n            if (id < 0) {\n                ps = con.prepareStatement(\"INSERT INTO \" + TABLE_PROCESS_COMMON_FILTER + \" (queue_id, title, url) VALUES (?,?,?) \",\n                        PreparedStatement.RETURN_GENERATED_KEYS);\n                ps.setInt(1, queueId);\n                ps.setString(2, title);\n                ps.setString(3, url);\n                ps.executeUpdate();\n                filter.setId(lastInsertId(ps));\n                ps.close();\n            }\n        }\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/dao/process/SavedFilterDAO.java", "stars": "12", "class_props": {"extends": "CommonDAO", "implements": null, "modifiers": ["public"]}}, {"id": 80172, "method_name": "repositoryForUser", "class_name": "UsersRepositoryConfig", "params": ["EventStore", "Snapshotter", "JCacheAdapter"], "throws": null, "modifiers": ["public"], "return_type": "Repository<UserAggregate>", "snippet": "    public Repository<UserAggregate> repositoryForUser(EventStore eventStore, Snapshotter snapshotter, JCacheAdapter cacheAdapter) {\n\n        return CachingEventSourcingRepository.builder(UserAggregate.class)\n                .aggregateFactory(new GenericAggregateFactory<>(UserAggregate.class))\n                .parameterResolverFactory(parameterResolverFactory)\n                .snapshotTriggerDefinition(new EventCountSnapshotTriggerDefinition(snapshotter, SNAPSHOT_EVENT_COUNT_THRESHOLD))\n                .eventStore(eventStore)\n                .cache(cacheAdapter)\n                .build();\n    }", "url": "https://raw.githubusercontent.com/everest-engineering/lhotse/master/users/src/main/java/engineering/everest/lhotse/users/config/UsersRepositoryConfig.java", "stars": "9", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 80173, "method_name": "insert", "class_name": "TomcatEcho", "params": ["String", "MethodVisitor"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "\tpublic static void insert(String className, MethodVisitor mv) {\n\t\tLabel label0 = new Label();\n\t\tLabel label1 = new Label();\n\t\tLabel label2 = new Label();\n\t\tmv.visitTryCatchBlock(label0, label1, label2, \"java/lang/Exception\");\n\t\tmv.visitLabel(label0);\n\t\tmv.visitLdcInsn(\"org.apache.catalina.core.ApplicationDispatcher\");\n\t\tmv.visitMethodInsn(INVOKESTATIC, \"java/lang/Class\", \"forName\", \"(Ljava/lang/String;)Ljava/lang/Class;\", false);\n\t\tmv.visitLdcInsn(\"WRAP_SAME_OBJECT\");\n\t\tmv.visitMethodInsn(INVOKEVIRTUAL, \"java/lang/Class\", \"getDeclaredField\", \"(Ljava/lang/String;)Ljava/lang/reflect/Field;\", false);\n\t\tmv.visitVarInsn(ASTORE, 1);\n\t\tLabel label3 = new Label();\n\t\tmv.visitLabel(label3);\n\t\tmv.visitLdcInsn(Type.getType(\"Lorg/apache/catalina/core/ApplicationFilterChain;\"));\n\t\tmv.visitLdcInsn(\"lastServicedRequest\");\n\t\tmv.visitMethodInsn(INVOKEVIRTUAL, \"java/lang/Class\", \"getDeclaredField\", \"(Ljava/lang/String;)Ljava/lang/reflect/Field;\", false);\n\t\tmv.visitVarInsn(ASTORE, 2);\n\t\tLabel label4 = new Label();\n\t\tmv.visitLabel(label4);\n\t\tmv.visitLdcInsn(Type.getType(\"Lorg/apache/catalina/core/ApplicationFilterChain;\"));\n\t\tmv.visitLdcInsn(\"lastServicedResponse\");\n\t\tmv.visitMethodInsn(INVOKEVIRTUAL, \"java/lang/Class\", \"getDeclaredField\", \"(Ljava/lang/String;)Ljava/lang/reflect/Field;\", false);\n\t\tmv.visitVarInsn(ASTORE, 3);\n\t\tLabel label5 = new Label();\n\t\tmv.visitLabel(label5);\n\t\tmv.visitLdcInsn(Type.getType(\"Ljava/lang/reflect/Field;\"));\n\t\tmv.visitLdcInsn(\"modifiers\");\n\t\tmv.visitMethodInsn(INVOKEVIRTUAL, \"java/lang/Class\", \"getDeclaredField\", \"(Ljava/lang/String;)Ljava/lang/reflect/Field;\", false);\n\t\tmv.visitVarInsn(ASTORE, 4);\n\t\tLabel label6 = new Label();\n\t\tmv.visitLabel(label6);\n\t\tmv.visitVarInsn(ALOAD, 4);\n\t\tmv.visitInsn(ICONST_1);\n\t\tmv.visitMethodInsn(INVOKEVIRTUAL, \"java/lang/reflect/Field\", \"setAccessible\", \"(Z)V\", false);\n\t\tLabel label7 = new Label();\n\t\tmv.visitLabel(label7);\n\t\tmv.visitVarInsn(ALOAD, 4);\n\t\tmv.visitVarInsn(ALOAD, 1);\n\t\tmv.visitVarInsn(ALOAD, 1);\n\t\tmv.visitMethodInsn(INVOKEVIRTUAL, \"java/lang/reflect/Field\", \"getModifiers\", \"()I\", false);\n\t\tmv.visitIntInsn(BIPUSH, -17);\n\t\tmv.visitInsn(IAND);\n\t\tmv.visitMethodInsn(INVOKEVIRTUAL, \"java/lang/reflect/Field\", \"setInt\", \"(Ljava/lang/Object;I)V\", false);\n\t\tLabel label8 = new Label();\n\t\tmv.visitLabel(label8);\n\t\tmv.visitVarInsn(ALOAD, 4);\n\t\tmv.visitVarInsn(ALOAD, 2);\n\t\tmv.visitVarInsn(ALOAD, 2);\n\t\tmv.visitMethodInsn(INVOKEVIRTUAL, \"java/lang/reflect/Field\", \"getModifiers\", \"()I\", false);\n\t\tmv.visitIntInsn(BIPUSH, -17);\n\t\tmv.visitInsn(IAND);\n\t\tmv.visitMethodInsn(INVOKEVIRTUAL, \"java/lang/reflect/Field\", \"setInt\", \"(Ljava/lang/Object;I)V\", false);\n\t\tLabel label9 = new Label();\n\t\tmv.visitLabel(label9);\n\t\tmv.visitVarInsn(ALOAD, 4);\n\t\tmv.visitVarInsn(ALOAD, 3);\n\t\tmv.visitVarInsn(ALOAD, 3);\n\t\tmv.visitMethodInsn(INVOKEVIRTUAL, \"java/lang/reflect/Field\", \"getModifiers\", \"()I\", false);\n\t\tmv.visitIntInsn(BIPUSH, -17);\n\t\tmv.visitInsn(IAND);\n\t\tmv.visitMethodInsn(INVOKEVIRTUAL, \"java/lang/reflect/Field\", \"setInt\", \"(Ljava/lang/Object;I)V\", false);\n\t\tLabel label10 = new Label();\n\t\tmv.visitLabel(label10);\n\t\tmv.visitVarInsn(ALOAD, 1);\n\t\tmv.visitInsn(ICONST_1);\n\t\tmv.visitMethodInsn(INVOKEVIRTUAL, \"java/lang/reflect/Field\", \"setAccessible\", \"(Z)V\", false);\n\t\tLabel label11 = new Label();\n\t\tmv.visitLabel(label11);\n\t\tmv.visitVarInsn(ALOAD, 2);\n\t\tmv.visitInsn(ICONST_1);\n\t\tmv.visitMethodInsn(INVOKEVIRTUAL, \"java/lang/reflect/Field\", \"setAccessible\", \"(Z)V\", false);\n\t\tLabel label12 = new Label();\n\t\tmv.visitLabel(label12);\n\t\tmv.visitVarInsn(ALOAD, 3);\n\t\tmv.visitInsn(ICONST_1);\n\t\tmv.visitMethodInsn(INVOKEVIRTUAL, \"java/lang/reflect/Field\", \"setAccessible\", \"(Z)V\", false);\n\t\tLabel label13 = new Label();\n\t\tmv.visitLabel(label13);\n\t\tmv.visitVarInsn(ALOAD, 3);\n\t\tmv.visitInsn(ACONST_NULL);\n\t\tLabel label14 = new Label();\n\t\tmv.visitLabel(label14);\n\t\tmv.visitMethodInsn(INVOKEVIRTUAL, \"java/lang/reflect/Field\", \"get\", \"(Ljava/lang/Object;)Ljava/lang/Object;\", false);\n\t\tmv.visitTypeInsn(CHECKCAST, \"java/lang/ThreadLocal\");\n\t\tmv.visitVarInsn(ASTORE, 5);\n\t\tLabel label15 = new Label();\n\t\tmv.visitLabel(label15);\n\t\tmv.visitVarInsn(ALOAD, 2);\n\t\tmv.visitInsn(ACONST_NULL);\n\t\tmv.visitMethodInsn(INVOKEVIRTUAL, \"java/lang/reflect/Field\", \"get\", \"(Ljava/lang/Object;)Ljava/lang/Object;\", false);\n\t\tmv.visitTypeInsn(CHECKCAST, \"java/lang/ThreadLocal\");\n\t\tmv.visitVarInsn(ASTORE, 6);\n\t\tLabel label16 = new Label();\n\t\tmv.visitLabel(label16);\n\t\tmv.visitVarInsn(ALOAD, 1);\n\t\tmv.visitInsn(ACONST_NULL);\n\t\tmv.visitMethodInsn(INVOKEVIRTUAL, \"java/lang/reflect/Field\", \"getBoolean\", \"(Ljava/lang/Object;)Z\", false);\n\t\tmv.visitVarInsn(ISTORE, 7);\n\t\tLabel label17 = new Label();\n\t\tmv.visitLabel(label17);\n\t\tmv.visitVarInsn(ILOAD, 7);\n\t\tLabel label18 = new Label();\n\t\tmv.visitJumpInsn(IFEQ, label18);\n\t\tmv.visitVarInsn(ALOAD, 5);\n\t\tmv.visitJumpInsn(IFNULL, label18);\n\t\tmv.visitVarInsn(ALOAD, 6);\n\t\tLabel label19 = new Label();\n\t\tmv.visitJumpInsn(IFNONNULL, label19);\n\t\tmv.visitLabel(label18);\n\t\tmv.visitFrame(Opcodes.F_FULL, 8, new Object[]{className, \"java/lang/reflect/Field\", \"java/lang/reflect/Field\", \"java/lang/reflect/Field\", \"java/lang/reflect/Field\", \"java/lang/ThreadLocal\", \"java/lang/ThreadLocal\", Opcodes.INTEGER}, 0, new Object[]{});\n\t\tmv.visitVarInsn(ALOAD, 2);\n\t\tmv.visitInsn(ACONST_NULL);\n\t\tmv.visitTypeInsn(NEW, \"java/lang/ThreadLocal\");\n\t\tmv.visitInsn(DUP);\n\t\tmv.visitMethodInsn(INVOKESPECIAL, \"java/lang/ThreadLocal\", \"<init>\", \"()V\", false);\n\t\tmv.visitMethodInsn(INVOKEVIRTUAL, \"java/lang/reflect/Field\", \"set\", \"(Ljava/lang/Object;Ljava/lang/Object;)V\", false);\n\t\tLabel label20 = new Label();\n\t\tmv.visitLabel(label20);\n\t\tmv.visitVarInsn(ALOAD, 3);\n\t\tmv.visitInsn(ACONST_NULL);\n\t\tmv.visitTypeInsn(NEW, \"java/lang/ThreadLocal\");\n\t\tmv.visitInsn(DUP);\n\t\tmv.visitMethodInsn(INVOKESPECIAL, \"java/lang/ThreadLocal\", \"<init>\", \"()V\", false);\n\t\tmv.visitMethodInsn(INVOKEVIRTUAL, \"java/lang/reflect/Field\", \"set\", \"(Ljava/lang/Object;Ljava/lang/Object;)V\", false);\n\t\tLabel label21 = new Label();\n\t\tmv.visitLabel(label21);\n\t\tmv.visitVarInsn(ALOAD, 1);\n\t\tmv.visitInsn(ACONST_NULL);\n\t\tmv.visitInsn(ICONST_1);\n\t\tmv.visitMethodInsn(INVOKEVIRTUAL, \"java/lang/reflect/Field\", \"setBoolean\", \"(Ljava/lang/Object;Z)V\", false);\n\t\tmv.visitJumpInsn(GOTO, label1);\n\t\tmv.visitLabel(label19);\n\t\tmv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);\n\t\tmv.visitVarInsn(ALOAD, 5);\n\t\tmv.visitMethodInsn(INVOKEVIRTUAL, \"java/lang/ThreadLocal\", \"get\", \"()Ljava/lang/Object;\", false);\n\t\tmv.visitTypeInsn(CHECKCAST, \"javax/servlet/ServletResponse\");\n\t\tmv.visitVarInsn(ASTORE, 8);\n\t\tLabel label22 = new Label();\n\t\tmv.visitLabel(label22);\n\t\tmv.visitVarInsn(ALOAD, 8);\n\t\tmv.visitMethodInsn(INVOKEINTERFACE, \"javax/servlet/ServletResponse\", \"getWriter\", \"()Ljava/io/PrintWriter;\", true);\n\t\tmv.visitVarInsn(ASTORE, 9);\n\t\tLabel label23 = new Label();\n\t\tmv.visitLabel(label23);\n\t\tmv.visitLdcInsn(Type.getType(\"Lorg/apache/catalina/connector/ResponseFacade;\"));\n\t\tmv.visitLdcInsn(\"response\");\n\t\tmv.visitMethodInsn(INVOKEVIRTUAL, \"java/lang/Class\", \"getDeclaredField\", \"(Ljava/lang/String;)Ljava/lang/reflect/Field;\", false);\n\t\tmv.visitVarInsn(ASTORE, 10);\n\t\tLabel label24 = new Label();\n\t\tmv.visitLabel(label24);\n\t\tmv.visitVarInsn(ALOAD, 10);\n\t\tmv.visitInsn(ICONST_1);\n\t\tmv.visitMethodInsn(INVOKEVIRTUAL, \"java/lang/reflect/Field\", \"setAccessible\", \"(Z)V\", false);\n\t\tLabel label25 = new Label();\n\t\tmv.visitLabel(label25);\n\t\tmv.visitVarInsn(ALOAD, 10);\n\t\tmv.visitVarInsn(ALOAD, 8);\n\t\tmv.visitMethodInsn(INVOKEVIRTUAL, \"java/lang/reflect/Field\", \"get\", \"(Ljava/lang/Object;)Ljava/lang/Object;\", false);\n\t\tmv.visitTypeInsn(CHECKCAST, \"org/apache/catalina/connector/Response\");\n\t\tmv.visitVarInsn(ASTORE, 11);\n\t\tLabel label26 = new Label();\n\t\tmv.visitLabel(label26);\n\t\tmv.visitLdcInsn(Type.getType(\"Lorg/apache/catalina/connector/Response;\"));\n\t\tmv.visitLdcInsn(\"usingWriter\");\n\t\tmv.visitMethodInsn(INVOKEVIRTUAL, \"java/lang/Class\", \"getDeclaredField\", \"(Ljava/lang/String;)Ljava/lang/reflect/Field;\", false);\n\t\tmv.visitVarInsn(ASTORE, 12);\n\t\tLabel label27 = new Label();\n\t\tmv.visitLabel(label27);\n\t\tmv.visitVarInsn(ALOAD, 12);\n\t\tmv.visitInsn(ICONST_1);\n\t\tmv.visitMethodInsn(INVOKEVIRTUAL, \"java/lang/reflect/Field\", \"setAccessible\", \"(Z)V\", false);\n\t\tLabel label28 = new Label();\n\t\tmv.visitLabel(label28);\n\t\tmv.visitVarInsn(ALOAD, 12);\n\t\tmv.visitVarInsn(ALOAD, 11);\n\t\tmv.visitFieldInsn(GETSTATIC, \"java/lang/Boolean\", \"FALSE\", \"Ljava/lang/Boolean;\");\n\t\tmv.visitMethodInsn(INVOKEVIRTUAL, \"java/lang/reflect/Field\", \"set\", \"(Ljava/lang/Object;Ljava/lang/Object;)V\", false);\n\t\tLabel label29 = new Label();\n\t\tmv.visitLabel(label29);\n\t\tmv.visitVarInsn(ALOAD, 9);\n\t\tmv.visitVarInsn(ALOAD, 0);\n\t\tmv.visitFieldInsn(GETFIELD, className, \"result\", \"Ljava/lang/String;\");\n\t\tmv.visitMethodInsn(INVOKEVIRTUAL, \"java/io/Writer\", \"write\", \"(Ljava/lang/String;)V\", false);\n\t\tLabel label30 = new Label();\n\t\tmv.visitLabel(label30);\n\t\tmv.visitVarInsn(ALOAD, 9);\n\t\tmv.visitMethodInsn(INVOKEVIRTUAL, \"java/io/Writer\", \"flush\", \"()V\", false);\n\t\tmv.visitLabel(label1);\n\t\tmv.visitFrame(Opcodes.F_FULL, 1, new Object[]{className}, 0, new Object[]{});\n\t\tLabel label31 = new Label();\n\t\tmv.visitJumpInsn(GOTO, label31);\n\t\tmv.visitLabel(label2);\n\t\tmv.visitFrame(Opcodes.F_SAME1, 0, null, 1, new Object[]{\"java/lang/Exception\"});\n\t\tmv.visitVarInsn(ASTORE, 1);\n\t\tLabel label32 = new Label();\n\t\tmv.visitLabel(label32);\n\t\tmv.visitVarInsn(ALOAD, 1);\n\t\tmv.visitMethodInsn(INVOKEVIRTUAL, \"java/lang/Exception\", \"printStackTrace\", \"()V\", false);\n\t\tmv.visitLabel(label31);\n\t\tmv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);\n\t\tmv.visitInsn(RETURN);\n\t\tLabel label33 = new Label();\n\t\tmv.visitLabel(label33);\n\t\tmv.visitLocalVariable(\"responseFacade\", \"Ljavax/servlet/ServletResponse;\", null, label22, label1, 8);\n\t\tmv.visitLocalVariable(\"w\", \"Ljava/io/Writer;\", null, label23, label1, 9);\n\t\tmv.visitLocalVariable(\"responseField\", \"Ljava/lang/reflect/Field;\", null, label24, label1, 10);\n\t\tmv.visitLocalVariable(\"response\", \"Lorg/apache/catalina/connector/Response;\", null, label26, label1, 11);\n\t\tmv.visitLocalVariable(\"usingWriter\", \"Ljava/lang/reflect/Field;\", null, label27, label1, 12);\n\t\tmv.visitLocalVariable(\"WRAP_SAME_OBJECT_FIELD\", \"Ljava/lang/reflect/Field;\", null, label3, label1, 1);\n\t\tmv.visitLocalVariable(\"lastServicedRequestField\", \"Ljava/lang/reflect/Field;\", null, label4, label1, 2);\n\t\tmv.visitLocalVariable(\"lastServicedResponseField\", \"Ljava/lang/reflect/Field;\", null, label5, label1, 3);\n\t\tmv.visitLocalVariable(\"modifiersField\", \"Ljava/lang/reflect/Field;\", null, label6, label1, 4);\n\t\tmv.visitLocalVariable(\"lastServicedResponse\", \"Ljava/lang/ThreadLocal;\", \"Ljava/lang/ThreadLocal<Ljavax/servlet/ServletResponse;>;\", label15, label1, 5);\n\t\tmv.visitLocalVariable(\"lastServicedRequest\", \"Ljava/lang/ThreadLocal;\", \"Ljava/lang/ThreadLocal<Ljavax/servlet/ServletRequest;>;\", label16, label1, 6);\n\t\tmv.visitLocalVariable(\"WRAP_SAME_OBJECT\", \"Z\", null, label17, label1, 7);\n\t\tmv.visitLocalVariable(\"e\", \"Ljava/lang/Exception;\", null, label32, label31, 1);\n\t\tmv.visitLocalVariable(\"this\", \"L\"+className+\";\", null, label0, label33, 0);\n\t}", "url": "https://raw.githubusercontent.com/JosephTribbianni/JNDI/master/src/main/java/org/su18/asm/echo/TomcatEcho.java", "stars": "165", "class_props": {"extends": null, "implements": ["Opcodes"], "modifiers": ["public"]}}, {"id": 80174, "method_name": "setProperties", "class_name": "UnpooledDataSourceFactory", "params": ["Properties"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void setProperties(Properties properties) {\n    Properties driverProperties = new Properties();\n    MetaObject metaDataSource = SystemMetaObject.forObject(dataSource);\n    for (Object key : properties.keySet()) {\n      String propertyName = (String) key;\n      if (propertyName.startsWith(DRIVER_PROPERTY_PREFIX)) {\n        String value = properties.getProperty(propertyName);\n        driverProperties.setProperty(propertyName.substring(DRIVER_PROPERTY_PREFIX_LENGTH), value);\n      } else if (metaDataSource.hasSetter(propertyName)) {\n        String value = (String) properties.get(propertyName);\n        Object convertedValue = convertValue(metaDataSource, propertyName, value);\n        metaDataSource.setValue(propertyName, convertedValue);\n      } else {\n        throw new DataSourceException(\"Unknown DataSource property: \" + propertyName);\n      }\n    }\n    if (driverProperties.size() > 0) {\n      metaDataSource.setValue(\"driverProperties\", driverProperties);\n    }\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/datasource/unpooled/UnpooledDataSourceFactory.java", "stars": "15", "class_props": {"extends": null, "implements": ["DataSourceFactory"], "modifiers": ["public"]}}, {"id": 80175, "method_name": "getDataSource", "class_name": "UnpooledDataSourceFactory", "params": [], "throws": null, "modifiers": ["public"], "return_type": "DataSource", "snippet": "  public DataSource getDataSource() {\n    return dataSource;\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/datasource/unpooled/UnpooledDataSourceFactory.java", "stars": "15", "class_props": {"extends": null, "implements": ["DataSourceFactory"], "modifiers": ["public"]}}, {"id": 80176, "method_name": "convertValue", "class_name": "UnpooledDataSourceFactory", "params": ["MetaObject", "String", "String"], "throws": null, "modifiers": ["private"], "return_type": "Object", "snippet": "  private Object convertValue(MetaObject metaDataSource, String propertyName, String value) {\n    Object convertedValue = value;\n    Class<?> targetType = metaDataSource.getSetterType(propertyName);\n    if (targetType == Integer.class || targetType == int.class) {\n      convertedValue = Integer.valueOf(value);\n    } else if (targetType == Long.class || targetType == long.class) {\n      convertedValue = Long.valueOf(value);\n    } else if (targetType == Boolean.class || targetType == boolean.class) {\n      convertedValue = Boolean.valueOf(value);\n    }\n    return convertedValue;\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/datasource/unpooled/UnpooledDataSourceFactory.java", "stars": "15", "class_props": {"extends": null, "implements": ["DataSourceFactory"], "modifiers": ["public"]}}, {"id": 80177, "method_name": "testStaticResource", "class_name": "SampleDevToolsApplicationIntegrationTests", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "\tvoid testStaticResource() {\n\t\tResponseEntity<String> entity = this.restTemplate.getForEntity(\"/css/application.css\", String.class);\n\t\tassertThat(entity.getStatusCode()).isEqualTo(HttpStatus.OK);\n\t\tassertThat(entity.getBody()).contains(\"color: green;\");\n\t}", "url": "https://raw.githubusercontent.com/spring-projects/spring-boot/master/spring-boot-tests/spring-boot-smoke-tests/spring-boot-smoke-test-devtools/src/test/java/smoketest/devtools/SampleDevToolsApplicationIntegrationTests.java", "stars": "47572", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 80178, "method_name": "testPublicResource", "class_name": "SampleDevToolsApplicationIntegrationTests", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "\tvoid testPublicResource() {\n\t\tResponseEntity<String> entity = this.restTemplate.getForEntity(\"/public.txt\", String.class);\n\t\tassertThat(entity.getStatusCode()).isEqualTo(HttpStatus.OK);\n\t\tassertThat(entity.getBody()).contains(\"public file\");\n\t}", "url": "https://raw.githubusercontent.com/spring-projects/spring-boot/master/spring-boot-tests/spring-boot-smoke-tests/spring-boot-smoke-test-devtools/src/test/java/smoketest/devtools/SampleDevToolsApplicationIntegrationTests.java", "stars": "47572", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 80179, "method_name": "testClassResource", "class_name": "SampleDevToolsApplicationIntegrationTests", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "\tvoid testClassResource() {\n\t\tResponseEntity<String> entity = this.restTemplate.getForEntity(\"/application.properties\", String.class);\n\t\tassertThat(entity.getStatusCode()).isEqualTo(HttpStatus.NOT_FOUND);\n\t}", "url": "https://raw.githubusercontent.com/spring-projects/spring-boot/master/spring-boot-tests/spring-boot-smoke-tests/spring-boot-smoke-test-devtools/src/test/java/smoketest/devtools/SampleDevToolsApplicationIntegrationTests.java", "stars": "47572", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 80180, "method_name": "invoke", "class_name": "StatementLogger", "params": ["Object", "Method", "Object"], "throws": ["Throwable"], "modifiers": ["public"], "return_type": "Object", "snippet": "  public Object invoke(Object proxy, Method method, Object[] params) throws Throwable {\n    try {\n      if (Object.class.equals(method.getDeclaringClass())) {\n        return method.invoke(this, params);\n      }\n      if (EXECUTE_METHODS.contains(method.getName())) {\n        if (isDebugEnabled()) {\n          debug(\" Executing: \" + removeBreakingWhitespace((String) params[0]), true);\n        }\n        if (\"executeQuery\".equals(method.getName())) {\n          ResultSet rs = (ResultSet) method.invoke(statement, params);\n          return rs == null ? null : ResultSetLogger.newInstance(rs, statementLog, queryStack);\n        } else {\n          return method.invoke(statement, params);\n        }\n      } else if (\"getResultSet\".equals(method.getName())) {\n        ResultSet rs = (ResultSet) method.invoke(statement, params);\n        return rs == null ? null : ResultSetLogger.newInstance(rs, statementLog, queryStack);\n      } else {\n        return method.invoke(statement, params);\n      }\n    } catch (Throwable t) {\n      throw ExceptionUtil.unwrapThrowable(t);\n    }\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/logging/jdbc/StatementLogger.java", "stars": "15", "class_props": {"extends": "BaseJdbcLogger", "implements": ["InvocationHandler"], "modifiers": ["final", "public"]}}, {"id": 80181, "method_name": "newInstance", "class_name": "StatementLogger", "params": ["Statement", "Log", "int"], "throws": null, "modifiers": ["public", "static"], "return_type": "Statement", "snippet": "  public static Statement newInstance(Statement stmt, Log statementLog, int queryStack) {\n    InvocationHandler handler = new StatementLogger(stmt, statementLog, queryStack);\n    ClassLoader cl = Statement.class.getClassLoader();\n    return (Statement) Proxy.newProxyInstance(cl, new Class[]{Statement.class}, handler);\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/logging/jdbc/StatementLogger.java", "stars": "15", "class_props": {"extends": "BaseJdbcLogger", "implements": ["InvocationHandler"], "modifiers": ["final", "public"]}}, {"id": 80182, "method_name": "getStatement", "class_name": "StatementLogger", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Statement", "snippet": "  public Statement getStatement() {\n    return statement;\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/logging/jdbc/StatementLogger.java", "stars": "15", "class_props": {"extends": "BaseJdbcLogger", "implements": ["InvocationHandler"], "modifiers": ["final", "public"]}}, {"id": 80183, "method_name": "unexpectedType", "class_name": "ResolvableExceptionFactory", "params": ["Type", "Type", "AbstractInsnNode", "AbstractValue", "TypeMismatchKind"], "throws": null, "modifiers": ["public"], "return_type": "ResolvableAnalyzerException", "snippet": "\tpublic ResolvableAnalyzerException unexpectedType(\n\t\t\tType expectedType,\n\t\t\tType actualType,\n\t\t\tAbstractInsnNode insn,\n\t\t\tAbstractValue actualValue,\n\t\t\tTypeMismatchKind errorType) {\n\t\tswitch(errorType) {\n\t\t\tcase PUTSTATIC:\n\t\t\t\treturn new ResolvableAnalyzerException((methodNode, frames) -> {\n\t\t\t\t\t// Validate that the argument value is no longer null when stack-frames are filled out\n\t\t\t\t\tFrame<AbstractValue> frame = frames[InsnUtil.index(insn)];\n\t\t\t\t\tAbstractValue methodContext = frame.getStack(frame.getStackSize() - 1);\n\t\t\t\t\treturn TypeUtil.isSubTypeOfOrNull(typeChecker, methodContext, expectedType);\n\t\t\t\t}, insn, \"Expected type: \" + expectedType);\n\t\t\tcase GETFIELD:\n\t\t\t\treturn new ResolvableAnalyzerException((methodNode, frames) -> {\n\t\t\t\t\t// Validate that the top of the stack matches the expected type\n\t\t\t\t\tFrame<AbstractValue> frame = frames[InsnUtil.index(insn)];\n\t\t\t\t\tAbstractValue fieldContext = frame.getStack(frame.getStackSize() - 1);\n\t\t\t\t\treturn TypeUtil.isSubTypeOf(typeChecker, fieldContext.getType(), expectedType);\n\t\t\t\t}, insn, \"Expected type: \" + expectedType);\n\t\t\tcase RETURN:\n\t\t\t\treturn new ResolvableAnalyzerException((methodNode, frames) -> {\n\t\t\t\t\t// Validate that the top of the stack matches the expected type\n\t\t\t\t\tFrame<AbstractValue> frame = frames[InsnUtil.index(insn)];\n\t\t\t\t\tAbstractValue returnValue = frame.getStack(frame.getStackSize() - 1);\n\t\t\t\t\treturn TypeUtil.isSubTypeOfOrNull(typeChecker, returnValue, expectedType);\n\t\t\t\t}, insn, \"Incompatible return type, found '\" + actualType + \"', expected: \" +\n\t\t\t\t\t\texpectedType, expectedType, actualValue);\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t}\n\t\tthrow new IllegalStateException(\"Unhandled exception in factory\");\n\t}", "url": "https://raw.githubusercontent.com/Col-E/SimAnalyzer/master/src/main/java/me/coley/analysis/exception/ResolvableExceptionFactory.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 80184, "method_name": "unexpectedMethodHostType", "class_name": "ResolvableExceptionFactory", "params": ["Type", "Type", "MethodInsnNode", "AbstractValue", "List<AbstractValue>", "TypeMismatchKind"], "throws": null, "modifiers": ["public"], "return_type": "AnalyzerException", "snippet": "\tpublic AnalyzerException unexpectedMethodHostType(\n\t\t\tType expectedType,\n\t\t\tType actualType,\n\t\t\tMethodInsnNode insn,\n\t\t\tAbstractValue actualValue,\n\t\t\tList<? extends AbstractValue> stackValues,\n\t\t\tTypeMismatchKind errorType) {\n\t\tType[] args = Type.getArgumentTypes(insn.desc);\n\t\tType owner = Type.getObjectType(insn.owner);\n\t\treturn new ResolvableAnalyzerException((methodNode, frames) -> {\n\t\t\t// Validate that the owner value is no longer null when stack-frames are filled out\n\t\t\tFrame<AbstractValue> frame = frames[InsnUtil.index(insn)];\n\t\t\t// TODO: Validate the stack index is correct here\n\t\t\tAbstractValue methodContext =\n\t\t\t\t\tframe.getStack(frame.getStackSize() - (args.length + 1));\n\t\t\treturn TypeUtil.isSubTypeOf(typeChecker, methodContext.getType(), owner);\n\t\t}, insn, \"Method owner does not match type on stack\");\n\t}", "url": "https://raw.githubusercontent.com/Col-E/SimAnalyzer/master/src/main/java/me/coley/analysis/exception/ResolvableExceptionFactory.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 80185, "method_name": "unexpectedMethodArgType", "class_name": "ResolvableExceptionFactory", "params": ["Type", "Type", "AbstractInsnNode", "AbstractValue", "List<AbstractValue>", "int", "TypeMismatchKind"], "throws": null, "modifiers": ["public"], "return_type": "AnalyzerException", "snippet": "\tpublic AnalyzerException unexpectedMethodArgType(\n\t\t\tType expectedType, Type actualType,\n\t\t\tAbstractInsnNode insn,\n\t\t\tAbstractValue actualValue,\n\t\t\tList<? extends AbstractValue> stackValues,\n\t\t\tint argIndex,\n\t\t\tTypeMismatchKind errorType) {\n\t\tString methodDescriptor = (insn.getOpcode() == INVOKEDYNAMIC) ?\n\t\t\t\t((InvokeDynamicInsnNode) insn).desc :\n\t\t\t\t((MethodInsnNode) insn).desc;\n\t\tType[] args = Type.getArgumentTypes(methodDescriptor);\n\t\treturn new ResolvableAnalyzerException((methodNode, frames) -> {\n\t\t\t// Validate that the argument value is no longer null when stack-frames are filled out\n\t\t\tFrame<AbstractValue> frame = frames[InsnUtil.index(insn)];\n\t\t\tAbstractValue methodContext = frame.getStack(frame.getStackSize() - (args.length - argIndex + 1));\n\t\t\treturn TypeUtil.isSubTypeOfOrNull(typeChecker, methodContext, expectedType);\n\t\t},insn, \"Argument type was \\\"\" + actualType + \"\\\" but expected \\\"\" + expectedType + \"\\\"\");\n\t}", "url": "https://raw.githubusercontent.com/Col-E/SimAnalyzer/master/src/main/java/me/coley/analysis/exception/ResolvableExceptionFactory.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 80186, "method_name": "unexpectedNullReference", "class_name": "ResolvableExceptionFactory", "params": ["MethodInsnNode", "AbstractValue", "List<AbstractValue>", "TypeMismatchKind"], "throws": null, "modifiers": ["public"], "return_type": "AnalyzerException", "snippet": "\tpublic AnalyzerException unexpectedNullReference(\n\t\t\tMethodInsnNode insn,\n\t\t\tAbstractValue actualValue,\n\t\t\tList<? extends AbstractValue> stackValues,\n\t\t\tTypeMismatchKind errorType) {\n\t\tType[] args = Type.getArgumentTypes(insn.desc);\n\t\treturn new ResolvableAnalyzerException((method, frames) -> {\n\t\t\t// Validate that the owner value is no longer null when stack-frames are filled out\n\t\t\tFrame<AbstractValue> frame = frames[InsnUtil.index(insn)];\n\t\t\tAbstractValue methodContext = frame.getStack(frame.getStackSize() - (args.length + 1));\n\t\t\treturn !methodContext.isNull();\n\t\t}, insn, \"Cannot call method on null reference\");\n\t}", "url": "https://raw.githubusercontent.com/Col-E/SimAnalyzer/master/src/main/java/me/coley/analysis/exception/ResolvableExceptionFactory.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 80187, "method_name": "printStackTrace", "class_name": "SignUpRestrictedException", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void printStackTrace() {\n        super.printStackTrace();\n    }", "url": "https://raw.githubusercontent.com/aayush-grover/SoundCloud-Rest-Api/master/musichoster-service/src/main/java/com/upgrad/musichoster/service/exception/SignUpRestrictedException.java", "stars": "2", "class_props": {"extends": "Exception", "implements": null, "modifiers": ["public"]}}, {"id": 80188, "method_name": "printStackTrace", "class_name": "SignUpRestrictedException", "params": ["PrintStream"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void printStackTrace(PrintStream s) {\n        super.printStackTrace(s);\n    }", "url": "https://raw.githubusercontent.com/aayush-grover/SoundCloud-Rest-Api/master/musichoster-service/src/main/java/com/upgrad/musichoster/service/exception/SignUpRestrictedException.java", "stars": "2", "class_props": {"extends": "Exception", "implements": null, "modifiers": ["public"]}}, {"id": 80189, "method_name": "printStackTrace", "class_name": "SignUpRestrictedException", "params": ["PrintWriter"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void printStackTrace(PrintWriter s) {\n        super.printStackTrace(s);\n    }", "url": "https://raw.githubusercontent.com/aayush-grover/SoundCloud-Rest-Api/master/musichoster-service/src/main/java/com/upgrad/musichoster/service/exception/SignUpRestrictedException.java", "stars": "2", "class_props": {"extends": "Exception", "implements": null, "modifiers": ["public"]}}, {"id": 80190, "method_name": "getCode", "class_name": "SignUpRestrictedException", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getCode() {\n        return code;\n    }", "url": "https://raw.githubusercontent.com/aayush-grover/SoundCloud-Rest-Api/master/musichoster-service/src/main/java/com/upgrad/musichoster/service/exception/SignUpRestrictedException.java", "stars": "2", "class_props": {"extends": "Exception", "implements": null, "modifiers": ["public"]}}, {"id": 80191, "method_name": "getErrorMessage", "class_name": "SignUpRestrictedException", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getErrorMessage() {\n        return errorMessage;\n    }", "url": "https://raw.githubusercontent.com/aayush-grover/SoundCloud-Rest-Api/master/musichoster-service/src/main/java/com/upgrad/musichoster/service/exception/SignUpRestrictedException.java", "stars": "2", "class_props": {"extends": "Exception", "implements": null, "modifiers": ["public"]}}, {"id": 80192, "method_name": "setUp", "class_name": "CacheTest", "params": [], "throws": ["Exception"], "modifiers": [], "return_type": "void", "snippet": "  void setUp() throws Exception {\n    // create a SqlSessionFactory\n    try (Reader reader = Resources.getResourceAsReader(\"org/apache/ibatis/submitted/cache/mybatis-config.xml\")) {\n      sqlSessionFactory = new SqlSessionFactoryBuilder().build(reader);\n    }\n\n    // populate in-memory database\n    BaseDataTest.runScript(sqlSessionFactory.getConfiguration().getEnvironment().getDataSource(),\n            \"org/apache/ibatis/submitted/cache/CreateDB.sql\");\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/cache/CacheTest.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 80193, "method_name": "testplan1", "class_name": "CacheTest", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "  void testplan1() {\n    try (SqlSession sqlSession1 = sqlSessionFactory.openSession(false)) {\n      PersonMapper pm = sqlSession1.getMapper(PersonMapper.class);\n      Assertions.assertEquals(2, pm.findAll().size());\n    }\n\n    try (SqlSession sqlSession2 = sqlSessionFactory.openSession(false)) {\n      try {\n        PersonMapper pm = sqlSession2.getMapper(PersonMapper.class);\n        pm.delete(1);\n        Assertions.assertEquals(1, pm.findAll().size());\n      } finally {\n        sqlSession2.commit();\n      }\n    }\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/cache/CacheTest.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 80194, "method_name": "testplan2", "class_name": "CacheTest", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "  void testplan2() {\n    try (SqlSession sqlSession1 = sqlSessionFactory.openSession(false)) {\n      PersonMapper pm = sqlSession1.getMapper(PersonMapper.class);\n      Assertions.assertEquals(2, pm.findAll().size());\n    }\n\n    try (SqlSession sqlSession2 = sqlSessionFactory.openSession(false)) {\n      try {\n        PersonMapper pm = sqlSession2.getMapper(PersonMapper.class);\n        pm.delete(1);\n      } finally {\n        sqlSession2.rollback();\n      }\n    }\n\n    try (SqlSession sqlSession3 = sqlSessionFactory.openSession(false)) {\n      PersonMapper pm = sqlSession3.getMapper(PersonMapper.class);\n      Assertions.assertEquals(2, pm.findAll().size());\n    }\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/cache/CacheTest.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 80195, "method_name": "testplan3", "class_name": "CacheTest", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "  void testplan3() {\n    try (SqlSession sqlSession1 = sqlSessionFactory.openSession(true)) {\n      PersonMapper pm = sqlSession1.getMapper(PersonMapper.class);\n      Assertions.assertEquals(2, pm.findAll().size());\n    }\n\n\n    try (SqlSession sqlSession2 = sqlSessionFactory.openSession(true)) {\n      PersonMapper pm = sqlSession2.getMapper(PersonMapper.class);\n      pm.delete(1);\n    }\n\n    try (SqlSession sqlSession3 = sqlSessionFactory.openSession(true)) {\n      PersonMapper pm = sqlSession3.getMapper(PersonMapper.class);\n      Assertions.assertEquals(1, pm.findAll().size());\n    }\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/cache/CacheTest.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 80196, "method_name": "shouldInsertWithOptionsFlushesCache", "class_name": "CacheTest", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "  void shouldInsertWithOptionsFlushesCache() {\n    try (SqlSession sqlSession1 = sqlSessionFactory.openSession(true)) {\n      PersonMapper pm = sqlSession1.getMapper(PersonMapper.class);\n      Assertions.assertEquals(2, pm.findAll().size());\n    }\n\n    try (SqlSession sqlSession2 = sqlSessionFactory.openSession(true)) {\n      PersonMapper pm = sqlSession2.getMapper(PersonMapper.class);\n      Person p = new Person(3, \"hello\", \"world\");\n      pm.createWithOptions(p);\n    }\n\n    try (SqlSession sqlSession3 = sqlSessionFactory.openSession(true)) {\n      PersonMapper pm = sqlSession3.getMapper(PersonMapper.class);\n      Assertions.assertEquals(3, pm.findAll().size());\n    }\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/cache/CacheTest.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 80197, "method_name": "shouldApplyFlushCacheOptions", "class_name": "CacheTest", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "  void shouldApplyFlushCacheOptions() {\n    try (SqlSession sqlSession1 = sqlSessionFactory.openSession(true)) {\n      PersonMapper pm = sqlSession1.getMapper(PersonMapper.class);\n      Assertions.assertEquals(2, pm.findAll().size());\n    }\n\n    try (SqlSession sqlSession2 = sqlSessionFactory.openSession(true)) {\n      PersonMapper pm = sqlSession2.getMapper(PersonMapper.class);\n      Person p = new Person(3, \"hello\", \"world\");\n      pm.createWithoutFlushCache(p);\n    }\n\n    try (SqlSession sqlSession3 = sqlSessionFactory.openSession(true)) {\n      PersonMapper pm = sqlSession3.getMapper(PersonMapper.class);\n      Assertions.assertEquals(2, pm.findAll().size());\n    }\n\n    try (SqlSession sqlSession4 = sqlSessionFactory.openSession(true)) {\n      PersonMapper pm = sqlSession4.getMapper(PersonMapper.class);\n      Assertions.assertEquals(3, pm.findWithFlushCache().size());\n    }\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/cache/CacheTest.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 80198, "method_name": "shouldApplyCacheNamespaceRef", "class_name": "CacheTest", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "  void shouldApplyCacheNamespaceRef() {\n    try (SqlSession sqlSession = sqlSessionFactory.openSession(true)) {\n      PersonMapper pm = sqlSession.getMapper(PersonMapper.class);\n      Assertions.assertEquals(2, pm.findAll().size());\n      Person p = new Person(3, \"hello\", \"world\");\n      pm.createWithoutFlushCache(p);\n    }\n    try (SqlSession sqlSession = sqlSessionFactory.openSession(true)) {\n      PersonMapper pm = sqlSession.getMapper(PersonMapper.class);\n      Assertions.assertEquals(2, pm.findAll().size());\n    }\n    try (SqlSession sqlSession = sqlSessionFactory.openSession(true)) {\n      ImportantPersonMapper pm = sqlSession.getMapper(ImportantPersonMapper.class);\n      Assertions.assertEquals(3, pm.findWithFlushCache().size());\n    }\n    try (SqlSession sqlSession = sqlSessionFactory.openSession(true)) {\n      PersonMapper pm = sqlSession.getMapper(PersonMapper.class);\n      Assertions.assertEquals(3, pm.findAll().size());\n      Person p = new Person(4, \"foo\", \"bar\");\n      pm.createWithoutFlushCache(p);\n    }\n    try (SqlSession sqlSession = sqlSessionFactory.openSession(true)) {\n      SpecialPersonMapper pm = sqlSession.getMapper(SpecialPersonMapper.class);\n      Assertions.assertEquals(4, pm.findWithFlushCache().size());\n    }\n    try (SqlSession sqlSession = sqlSessionFactory.openSession(true)) {\n      PersonMapper pm = sqlSession.getMapper(PersonMapper.class);\n      Assertions.assertEquals(4, pm.findAll().size());\n    }\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/cache/CacheTest.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 80199, "method_name": "shouldApplyCustomCacheProperties", "class_name": "CacheTest", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "  void shouldApplyCustomCacheProperties() {\n    CustomCache customCache = unwrap(sqlSessionFactory.getConfiguration().getCache(CustomCacheMapper.class.getName()));\n    Assertions.assertEquals(\"bar\", customCache.getStringValue());\n    Assertions.assertEquals(1, customCache.getIntegerValue().intValue());\n    Assertions.assertEquals(2, customCache.getIntValue());\n    Assertions.assertEquals(3, customCache.getLongWrapperValue().longValue());\n    Assertions.assertEquals(4, customCache.getLongValue());\n    Assertions.assertEquals(5, customCache.getShortWrapperValue().shortValue());\n    Assertions.assertEquals(6, customCache.getShortValue());\n    Assertions.assertEquals((float) 7.1, customCache.getFloatWrapperValue(), 1);\n    Assertions.assertEquals((float) 8.1, customCache.getFloatValue(), 1);\n    Assertions.assertEquals(9.01, customCache.getDoubleWrapperValue(), 1);\n    Assertions.assertEquals(10.01, customCache.getDoubleValue(), 1);\n    Assertions.assertEquals((byte) 11, customCache.getByteWrapperValue().byteValue());\n    Assertions.assertEquals((byte) 12, customCache.getByteValue());\n    Assertions.assertTrue(customCache.getBooleanWrapperValue());\n    Assertions.assertTrue(customCache.isBooleanValue());\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/cache/CacheTest.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 80200, "method_name": "shouldErrorUnsupportedProperties", "class_name": "CacheTest", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "  void shouldErrorUnsupportedProperties() {\n    when(() -> sqlSessionFactory.getConfiguration().addMapper(CustomCacheUnsupportedPropertyMapper.class));\n    then(caughtException()).isInstanceOf(CacheException.class)\n      .hasMessage(\"Unsupported property type for cache: 'date' of type class java.util.Date\");\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/cache/CacheTest.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 80201, "method_name": "shouldErrorInvalidCacheNamespaceRefAttributesSpecifyBoth", "class_name": "CacheTest", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "  void shouldErrorInvalidCacheNamespaceRefAttributesSpecifyBoth() {\n    when(() -> sqlSessionFactory.getConfiguration().getMapperRegistry()\n      .addMapper(InvalidCacheNamespaceRefBothMapper.class));\n    then(caughtException()).isInstanceOf(BuilderException.class)\n      .hasMessage(\"Cannot use both value() and name() attribute in the @CacheNamespaceRef\");\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/cache/CacheTest.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 80202, "method_name": "shouldErrorInvalidCacheNamespaceRefAttributesIsEmpty", "class_name": "CacheTest", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "  void shouldErrorInvalidCacheNamespaceRefAttributesIsEmpty() {\n    when(() -> sqlSessionFactory.getConfiguration().getMapperRegistry()\n      .addMapper(InvalidCacheNamespaceRefEmptyMapper.class));\n    then(caughtException()).isInstanceOf(BuilderException.class)\n      .hasMessage(\"Should be specified either value() or name() attribute in the @CacheNamespaceRef\");\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/cache/CacheTest.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 80203, "method_name": "unwrap", "class_name": "CacheTest", "params": ["Cache"], "throws": null, "modifiers": ["private"], "return_type": "CustomCache", "snippet": "  private CustomCache unwrap(Cache cache){\n    Field field;\n    try {\n      field = cache.getClass().getDeclaredField(\"delegate\");\n    } catch (NoSuchFieldException e) {\n      throw new IllegalStateException(e);\n    }\n    try {\n      field.setAccessible(true);\n      return (CustomCache)field.get(cache);\n    } catch (IllegalAccessException e) {\n      throw new IllegalStateException(e);\n    } finally {\n      field.setAccessible(false);\n    }\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/cache/CacheTest.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 80204, "method_name": "getStatus", "class_name": "FileUploadException", "params": [], "throws": null, "modifiers": ["public"], "return_type": "HttpStatus", "snippet": "    public HttpStatus getStatus() {\n        return HttpStatus.INTERNAL_SERVER_ERROR;\n    }", "url": "https://raw.githubusercontent.com/rubywooJ/beyond/master/src/main/java/cn/tsxygfy/beyond/exception/FileUploadException.java", "stars": "1", "class_props": {"extends": "BaseException", "implements": null, "modifiers": ["public"]}}, {"id": 80205, "method_name": "doFilter", "class_name": "CookieFilter", "params": ["ServletRequest", "ServletResponse", "FilterChain"], "throws": ["IOException", "ServletException"], "modifiers": ["public"], "return_type": "void", "snippet": "  public void doFilter(ServletRequest request, ServletResponse response,\n      FilterChain chain) throws IOException, ServletException {\n    HttpServletRequest req = (HttpServletRequest) request;\n    HttpServletResponse resp = (HttpServletResponse) response;\n\n    Cookie[] cookies = req.getCookies();\n\n    if (cookies != null) {\n      Cookie cookie = cookies[0];\n//      String action = request.getParameter(\"action\") != null ? request.getParameter(\"action\") : \"\";\n//      if (cookie != null && !(\"login\".equals(action))) {\n      if (cookie != null) {\n        //cookie.setMaxAge(3600);\n        cookie.setSecure(true);\n        cookie.setHttpOnly(true);\n        resp.addCookie(cookie);\n      }\n//      if (null != cookies) {\n//        for (int i = 0; i < cookies.length; i++) {\n//          cookies[i].setSecure(true);\n//          cookies[i].setHttpOnly(true);\n//          resp.addCookie(cookies[i]);\n//        }\n//      }\n    }\n    //|| \"/\".equals(req.getRequestURI()\n    else if(\"/toL\".equals(req.getRequestURI())){\n      HttpSession session = req.getSession();\n      String session_id = session.getId();\n      Cookie cookie = new Cookie(\"JSESSIONID\", session_id);\n      cookie.setPath(\"/\");\n      cookie.setSecure(true);\n      resp.addCookie(cookie);\n      resp.sendRedirect(\"/toL\");\n    }\n    chain.doFilter(req, resp);\n  }\n\n  @Override\n  public void destroy() {\n  }\n\n  @Override\n  public void init(FilterConfig arg0) throws ServletException {\n  }\n}", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-web-server/src/main/java/com/webank/wedatasphere/schedulis/web/webapp/error/CookieFilter.java", "stars": "18", "class_props": {"extends": null, "implements": ["Filter"], "modifiers": ["public"]}}, {"id": 80206, "method_name": "destroy", "class_name": "CookieFilter", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void destroy() {\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-web-server/src/main/java/com/webank/wedatasphere/schedulis/web/webapp/error/CookieFilter.java", "stars": "18", "class_props": {"extends": null, "implements": ["Filter"], "modifiers": ["public"]}}, {"id": 80207, "method_name": "init", "class_name": "CookieFilter", "params": ["FilterConfig"], "throws": ["ServletException"], "modifiers": ["public"], "return_type": "void", "snippet": "  public void init(FilterConfig arg0) throws ServletException {\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-web-server/src/main/java/com/webank/wedatasphere/schedulis/web/webapp/error/CookieFilter.java", "stars": "18", "class_props": {"extends": null, "implements": ["Filter"], "modifiers": ["public"]}}, {"id": 80208, "method_name": "formatDetailForPopcorn", "class_name": "DetailsResponse", "params": ["T", "MediaProvider", "SubsProvider"], "throws": null, "modifiers": ["public", "abstract"], "return_type": "ArrayList<Media>", "snippet": "    public abstract ArrayList<Media> formatDetailForPopcorn(T responseItem, MediaProvider mediaProvider, SubsProvider subsProvider);\n}\n", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/providers/media/response/models/DetailsResponse.java", "stars": "4", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 80209, "method_name": "getId", "class_name": "OrdemServicoModel", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Long", "snippet": "\tpublic Long getId() {\n\t\treturn Id;\n\t}", "url": "https://raw.githubusercontent.com/jeanpsilva/osworks/master/src/main/java/com/algaworks/osworks/api/model/OrdemServicoModel.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 80210, "method_name": "setId", "class_name": "OrdemServicoModel", "params": ["Long"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void setId(Long id) {\n\t\tId = id;\n\t}", "url": "https://raw.githubusercontent.com/jeanpsilva/osworks/master/src/main/java/com/algaworks/osworks/api/model/OrdemServicoModel.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 80211, "method_name": "getCliente", "class_name": "OrdemServicoModel", "params": [], "throws": null, "modifiers": ["public"], "return_type": "ClienteResumoModel", "snippet": "\tpublic ClienteResumoModel getCliente() {\n\t\treturn cliente;\n\t}", "url": "https://raw.githubusercontent.com/jeanpsilva/osworks/master/src/main/java/com/algaworks/osworks/api/model/OrdemServicoModel.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 80212, "method_name": "setCliente", "class_name": "OrdemServicoModel", "params": ["ClienteResumoModel"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void setCliente(ClienteResumoModel cliente) {\n\t\tthis.cliente = cliente;\n\t}", "url": "https://raw.githubusercontent.com/jeanpsilva/osworks/master/src/main/java/com/algaworks/osworks/api/model/OrdemServicoModel.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 80213, "method_name": "getDescricao", "class_name": "OrdemServicoModel", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "\tpublic String getDescricao() {\n\t\treturn descricao;\n\t}", "url": "https://raw.githubusercontent.com/jeanpsilva/osworks/master/src/main/java/com/algaworks/osworks/api/model/OrdemServicoModel.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 80214, "method_name": "setDescricao", "class_name": "OrdemServicoModel", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void setDescricao(String descricao) {\n\t\tthis.descricao = descricao;\n\t}", "url": "https://raw.githubusercontent.com/jeanpsilva/osworks/master/src/main/java/com/algaworks/osworks/api/model/OrdemServicoModel.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 80215, "method_name": "getPreco", "class_name": "OrdemServicoModel", "params": [], "throws": null, "modifiers": ["public"], "return_type": "BigDecimal", "snippet": "\tpublic BigDecimal getPreco() {\n\t\treturn preco;\n\t}", "url": "https://raw.githubusercontent.com/jeanpsilva/osworks/master/src/main/java/com/algaworks/osworks/api/model/OrdemServicoModel.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 80216, "method_name": "setPreco", "class_name": "OrdemServicoModel", "params": ["BigDecimal"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void setPreco(BigDecimal preco) {\n\t\tthis.preco = preco;\n\t}", "url": "https://raw.githubusercontent.com/jeanpsilva/osworks/master/src/main/java/com/algaworks/osworks/api/model/OrdemServicoModel.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 80217, "method_name": "getStatus", "class_name": "OrdemServicoModel", "params": [], "throws": null, "modifiers": ["public"], "return_type": "StatusOrdemServico", "snippet": "\tpublic StatusOrdemServico getStatus() {\n\t\treturn status;\n\t}", "url": "https://raw.githubusercontent.com/jeanpsilva/osworks/master/src/main/java/com/algaworks/osworks/api/model/OrdemServicoModel.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 80218, "method_name": "setStatus", "class_name": "OrdemServicoModel", "params": ["StatusOrdemServico"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void setStatus(StatusOrdemServico status) {\n\t\tthis.status = status;\n\t}", "url": "https://raw.githubusercontent.com/jeanpsilva/osworks/master/src/main/java/com/algaworks/osworks/api/model/OrdemServicoModel.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 80219, "method_name": "getDataAbertura", "class_name": "OrdemServicoModel", "params": [], "throws": null, "modifiers": ["public"], "return_type": "OffsetDateTime", "snippet": "\tpublic OffsetDateTime getDataAbertura() {\n\t\treturn dataAbertura;\n\t}", "url": "https://raw.githubusercontent.com/jeanpsilva/osworks/master/src/main/java/com/algaworks/osworks/api/model/OrdemServicoModel.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 80220, "method_name": "setDataAbertura", "class_name": "OrdemServicoModel", "params": ["OffsetDateTime"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void setDataAbertura(OffsetDateTime dataAbertura) {\n\t\tthis.dataAbertura = dataAbertura;\n\t}", "url": "https://raw.githubusercontent.com/jeanpsilva/osworks/master/src/main/java/com/algaworks/osworks/api/model/OrdemServicoModel.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 80221, "method_name": "getDataFinalizacao", "class_name": "OrdemServicoModel", "params": [], "throws": null, "modifiers": ["public"], "return_type": "OffsetDateTime", "snippet": "\tpublic OffsetDateTime getDataFinalizacao() {\n\t\treturn dataFinalizacao;\n\t}", "url": "https://raw.githubusercontent.com/jeanpsilva/osworks/master/src/main/java/com/algaworks/osworks/api/model/OrdemServicoModel.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 80222, "method_name": "setDataFinalizacao", "class_name": "OrdemServicoModel", "params": ["OffsetDateTime"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void setDataFinalizacao(OffsetDateTime dataFinalizacao) {\n\t\tthis.dataFinalizacao = dataFinalizacao;\n\t}", "url": "https://raw.githubusercontent.com/jeanpsilva/osworks/master/src/main/java/com/algaworks/osworks/api/model/OrdemServicoModel.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 80223, "method_name": "testShouldNotAllowMappedStatementsWithDots", "class_name": "DisallowDotsOnNamesTest", "params": [], "throws": ["IOException"], "modifiers": [], "return_type": "void", "snippet": "    void testShouldNotAllowMappedStatementsWithDots() throws IOException {\n        Reader reader = Resources.getResourceAsReader(\"org/apache/ibatis/submitted/disallowdotsonnames/ibatisConfig.xml\");\n        Assertions.assertThrows(PersistenceException.class, () -> new SqlSessionFactoryBuilder().build(reader));\n    }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/disallowdotsonnames/DisallowDotsOnNamesTest.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 80224, "method_name": "main", "class_name": "For", "params": ["String"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "\tpublic static void main(String[] args)\n\t{\n\t\tScanner in = new Scanner(System.in);\n\t\t\n\t\tSystem.out.print(\"How many numbers do you need to draw?\");\n\t\tint k = in.nextInt();\n\t\t\n\t\tSystem.out.print(\"What is the hignest number you can draw?\");\n\t\tint n = in.nextInt();\n\t\t\n\t\t/*compute binomial coefficient n*(n+1)*(n+2)*...*(n-k+1)/(1*2*3*...*k)*/\n\t\t\n\t\tint lotteryOdds = 1;\n\t\tfor(int i = 1;i <= k;i++)\n\t\t\tlotteryOdds = lotteryOdds * (n - i + 1)/i;\n\t\t\n\t\tSystem.out.println(\"Your odds are 1 in \" + lotteryOdds + \".Good luck!\");\n\t}", "url": "https://raw.githubusercontent.com/hasaki-w-c/JAVA--/master/ray/For.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 80225, "method_name": "decreaseStock", "class_name": "StockInterHystrix", "params": ["DecreaseStockReq"], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String decreaseStock(DecreaseStockReq req) {\n        log.error(\"StockInterHystrix decreaseStock,req:{}\", req);\n        //\u7194\u65ad\u9700\u8981\u629b\u51famtccHystrixException\u5f02\u5e38\n        throw new MtccHystrixException(\"\u8fdc\u7a0b\u8c03\u7528StockInter\u8d85\u65f6\");\n    }", "url": "https://raw.githubusercontent.com/yfelvis/mtcc/master/mtcc-demo/mtcc-demo-order/src/main/java/com/hyf/mtcc/demo/order/inter/StockInterHystrix.java", "stars": "11", "class_props": {"extends": null, "implements": ["StockInter"], "modifiers": ["public"]}}, {"id": 80226, "method_name": "findStockByName", "class_name": "StockInterHystrix", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "Map<String,Object>", "snippet": "    public Map<String, Object> findStockByName(String productName) {\n        log.error(\"StockInterHystrix findStockByName,productName:{}\", productName);\n        throw new MtccHystrixException(\"\u8fdc\u7a0b\u8c03\u7528StockInter\u8d85\u65f6\");\n    }", "url": "https://raw.githubusercontent.com/yfelvis/mtcc/master/mtcc-demo/mtcc-demo-order/src/main/java/com/hyf/mtcc/demo/order/inter/StockInterHystrix.java", "stars": "11", "class_props": {"extends": null, "implements": ["StockInter"], "modifiers": ["public"]}}, {"id": 80227, "method_name": "distanceFrom", "class_name": "LocationWithAddress", "params": ["double", "double"], "throws": null, "modifiers": ["public"], "return_type": "double", "snippet": "    public double distanceFrom(double lat,double lon)\n    {\n        Location pointOne = new Location(\"point_one\");\n        pointOne.setLatitude(lat);\n        pointOne.setLongitude(lon);\n\n        Location pointTwo = new Location(\"point_two\");\n        pointTwo.setLatitude(latitude);\n        pointTwo.setLongitude(longitude);\n\n        return pointOne.distanceTo(pointTwo);\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/Model/ModelUtility/LocationWithAddress.java", "stars": "10", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 80228, "method_name": "getLocation", "class_name": "LocationWithAddress", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Location", "snippet": "    public Location getLocation()\n    {\n        Location location = new Location(\"location\");\n\n        location.setLatitude(latitude);\n        location.setLongitude(longitude);\n\n        return location;\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/Model/ModelUtility/LocationWithAddress.java", "stars": "10", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 80229, "method_name": "getLocationName", "class_name": "LocationWithAddress", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getLocationName() {\n        return locationName;\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/Model/ModelUtility/LocationWithAddress.java", "stars": "10", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 80230, "method_name": "setLocationName", "class_name": "LocationWithAddress", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setLocationName(String locationName) {\n        this.locationName = locationName;\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/Model/ModelUtility/LocationWithAddress.java", "stars": "10", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 80231, "method_name": "getLocationAddress", "class_name": "LocationWithAddress", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getLocationAddress() {\n        return locationAddress;\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/Model/ModelUtility/LocationWithAddress.java", "stars": "10", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 80232, "method_name": "setLocationAddress", "class_name": "LocationWithAddress", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setLocationAddress(String locationAddress) {\n        this.locationAddress = locationAddress;\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/Model/ModelUtility/LocationWithAddress.java", "stars": "10", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 80233, "method_name": "getLatitude", "class_name": "LocationWithAddress", "params": [], "throws": null, "modifiers": ["public"], "return_type": "double", "snippet": "    public double getLatitude() {\n        return latitude;\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/Model/ModelUtility/LocationWithAddress.java", "stars": "10", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 80234, "method_name": "setLatitude", "class_name": "LocationWithAddress", "params": ["double"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setLatitude(double latitude) {\n        this.latitude = latitude;\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/Model/ModelUtility/LocationWithAddress.java", "stars": "10", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 80235, "method_name": "getLongitude", "class_name": "LocationWithAddress", "params": [], "throws": null, "modifiers": ["public"], "return_type": "double", "snippet": "    public double getLongitude() {\n        return longitude;\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/Model/ModelUtility/LocationWithAddress.java", "stars": "10", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 80236, "method_name": "setLongitude", "class_name": "LocationWithAddress", "params": ["double"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setLongitude(double longitude) {\n        this.longitude = longitude;\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/Model/ModelUtility/LocationWithAddress.java", "stars": "10", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 80237, "method_name": "time", "class_name": "ChatMsgItemViewModel", "params": ["IMMessage"], "throws": null, "modifiers": ["public", "static"], "return_type": "String", "snippet": "    public static String time(IMMessage imMessage) {\n        return TimeUtil.getTimeShowString(imMessage.getTime(), false);\n    }", "url": "https://raw.githubusercontent.com/Florizt/RxMVVM/master/app/src/main/java/com/rx/mvvm/viewmodel/ChatMsgItemViewModel.java", "stars": "15", "class_props": {"extends": "MultiItemViewModel", "implements": null, "modifiers": ["public"]}}, {"id": 80238, "method_name": "marginTop", "class_name": "ChatMsgItemViewModel", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int marginTop() {\n        if (entity.get() != null && getItemPosition() + 1 < viewModel.messageList.size()\n                && viewModel.messageList.get(getItemPosition() + 1).entity.get() != null\n                && TextUtils.equals(entity.get().getFromAccount(), viewModel.messageList.get(getItemPosition() + 1).entity.get().getFromAccount())) {\n            return showTime.get() ? UIUtils.dip2px(16) : UIUtils.dip2px(4);\n        }\n        return UIUtils.dip2px(16);\n    }", "url": "https://raw.githubusercontent.com/Florizt/RxMVVM/master/app/src/main/java/com/rx/mvvm/viewmodel/ChatMsgItemViewModel.java", "stars": "15", "class_props": {"extends": "MultiItemViewModel", "implements": null, "modifiers": ["public"]}}, {"id": 80239, "method_name": "getItemPosition", "class_name": "ChatMsgItemViewModel", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getItemPosition() {\n        return viewModel.messageList.indexOf(this);\n    }", "url": "https://raw.githubusercontent.com/Florizt/RxMVVM/master/app/src/main/java/com/rx/mvvm/viewmodel/ChatMsgItemViewModel.java", "stars": "15", "class_props": {"extends": "MultiItemViewModel", "implements": null, "modifiers": ["public"]}}, {"id": 80240, "method_name": "download", "class_name": "DiagnosisKeyDownloader", "params": [], "throws": null, "modifiers": [], "return_type": "ListenableFuture<List>", "snippet": "  ListenableFuture<List<File>> download() {\n    return Futures.immediateFuture(ImmutableList.of());\n  }", "url": "https://raw.githubusercontent.com/google/exposure-notifications-android/master/network/src/main/java/com/google/android/apps/exposurenotification/network/DiagnosisKeyDownloader.java", "stars": "205", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 80241, "method_name": "getOperandString", "class_name": "NIM", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getOperandString() {\n        switch (mode) {\n        case MODE_INDEXED:\n            return String.format(\"$%02x,X,#$%02x\", (operand & 0x00ff), ((operand & 0xff00) >> 8));\n        default:\n            return super.getOperandString();\n        }\n    }", "url": "https://raw.githubusercontent.com/kemusiro/jr100-emulator-v2/master/src/jp/asamomiji/assembler/NIM.java", "stars": "4", "class_props": {"extends": "NonBranchInstruction", "implements": null, "modifiers": ["public"]}}, {"id": 80242, "method_name": "onCreate", "class_name": "PhotoViewActivity", "params": ["Bundle"], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        setContentView(R.layout.activity_photo_view);\n        findViews();\n        initLogic();\n    }", "url": "https://raw.githubusercontent.com/justneon33/Sketchcode/master/app/src/main/java/com/sketch/code/two/activity/PhotoViewActivity.java", "stars": "4", "class_props": {"extends": "AppCompatActivity", "implements": null, "modifiers": ["public"]}}, {"id": 80243, "method_name": "findViews", "class_name": "PhotoViewActivity", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void findViews () {\n        viewPager = findViewById(R.id.viewPager);\n    }", "url": "https://raw.githubusercontent.com/justneon33/Sketchcode/master/app/src/main/java/com/sketch/code/two/activity/PhotoViewActivity.java", "stars": "4", "class_props": {"extends": "AppCompatActivity", "implements": null, "modifiers": ["public"]}}, {"id": 80244, "method_name": "initLogic", "class_name": "PhotoViewActivity", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void initLogic() {\n        viewPager.setAdapter(new PhotoViewAdapter(getIntent().getIntegerArrayListExtra(\"photos\"), getApplicationContext()));\n        viewPager.setCurrentItem(getIntent().getIntExtra(\"page\", 0));\n    }", "url": "https://raw.githubusercontent.com/justneon33/Sketchcode/master/app/src/main/java/com/sketch/code/two/activity/PhotoViewActivity.java", "stars": "4", "class_props": {"extends": "AppCompatActivity", "implements": null, "modifiers": ["public"]}}, {"id": 80245, "method_name": "getGaenKeys", "class_name": "GaenRequest", "params": [], "throws": null, "modifiers": ["public"], "return_type": "List<GaenKey>", "snippet": "    public List<GaenKey> getGaenKeys() {\n        return this.gaenKeys;\n    }", "url": "https://raw.githubusercontent.com/DP-3T/dp3t-sdk-backend/develop/dpppt-backend-sdk/dpppt-backend-sdk-model/src/main/java/org/dpppt/backend/sdk/model/gaen/GaenRequest.java", "stars": "125", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 80246, "method_name": "setGaenKeys", "class_name": "GaenRequest", "params": ["List<GaenKey>"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setGaenKeys(List<GaenKey> gaenKeys) {\n        this.gaenKeys = gaenKeys;\n    }", "url": "https://raw.githubusercontent.com/DP-3T/dp3t-sdk-backend/develop/dpppt-backend-sdk/dpppt-backend-sdk-model/src/main/java/org/dpppt/backend/sdk/model/gaen/GaenRequest.java", "stars": "125", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 80247, "method_name": "getDelayedKeyDate", "class_name": "GaenRequest", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Integer", "snippet": "    public Integer getDelayedKeyDate() {\n        return this.delayedKeyDate;\n    }", "url": "https://raw.githubusercontent.com/DP-3T/dp3t-sdk-backend/develop/dpppt-backend-sdk/dpppt-backend-sdk-model/src/main/java/org/dpppt/backend/sdk/model/gaen/GaenRequest.java", "stars": "125", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 80248, "method_name": "setDelayedKeyDate", "class_name": "GaenRequest", "params": ["Integer"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setDelayedKeyDate(Integer delayedKeyDate) {\n        this.delayedKeyDate = delayedKeyDate;\n    }", "url": "https://raw.githubusercontent.com/DP-3T/dp3t-sdk-backend/develop/dpppt-backend-sdk/dpppt-backend-sdk-model/src/main/java/org/dpppt/backend/sdk/model/gaen/GaenRequest.java", "stars": "125", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 80249, "method_name": "initialize", "class_name": "ExtensionFunctions", "params": ["Configuration"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void initialize(Configuration configuration)\n  {\n    configuration.registerExtensionFunction(new Parser.SaxonDefinition_Grammar());\n    for (Class<?> declaredClass : getClass().getDeclaredClasses())\n    {\n      if (ExtensionFunctionDefinition.class.isAssignableFrom(declaredClass) && ! Modifier.isAbstract(declaredClass.getModifiers()))\n      {\n        try\n        {\n          configuration.registerExtensionFunction((ExtensionFunctionDefinition) declaredClass.getDeclaredConstructor().newInstance());\n        }\n        catch (IllegalAccessException | InstantiationException | IllegalArgumentException | InvocationTargetException | NoSuchMethodException | SecurityException e)\n        {\n          throw new RuntimeException(e.getMessage(), e);\n        }\n      }\n    }\n  }", "url": "https://raw.githubusercontent.com/GuntherRademacher/rr/master/src/main/java/de/bottlecaps/railroad/core/ExtensionFunctions.java", "stars": "10", "class_props": {"extends": null, "implements": ["Initializer"], "modifiers": ["public"]}}, {"id": 80250, "method_name": "parameterValues", "class_name": "ExtensionFunctions", "params": ["Request", "String"], "throws": null, "modifiers": ["public", "static"], "return_type": "List<String>", "snippet": "  public static List<String> parameterValues(Request httpRequest, String name)\n  {\n    List<String> parameterList = new ArrayList<>();\n    if (isMultipart(httpRequest))\n    {\n      try\n      {\n        Collection<MultiPart> parts = httpRequest.getParts();\n        if (parts != null)\n        {\n          for (MultiPart part : parts)\n          {\n            if (name.equals(part.getName()))\n            {\n              String value = ExtensionFunctions.toString(new CrLfNormalizer(part.getInputStream()), httpRequest.getCharacterEncoding());\n              parameterList.add(value);\n            }\n          }\n        }\n      }\n      catch (IOException e)\n      {\n        throw new RuntimeException(e);\n      }\n    }\n    else\n    {\n      String[] parameterValues = httpRequest.getParameterValues(name);\n      if (parameterValues != null)\n      {\n        for (String pv : parameterValues)\n        {\n          parameterList.add(CrLfNormalizer.normalize(pv));\n        }\n      }\n    }\n    return parameterList;\n  }", "url": "https://raw.githubusercontent.com/GuntherRademacher/rr/master/src/main/java/de/bottlecaps/railroad/core/ExtensionFunctions.java", "stars": "10", "class_props": {"extends": null, "implements": ["Initializer"], "modifiers": ["public"]}}, {"id": 80251, "method_name": "setSerializationProperty", "class_name": "ExtensionFunctions", "params": ["String", "String", "Response", "Serializer"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "  public static void setSerializationProperty(String name, String value, Response response, Serializer serializer)\n  {\n    Serializer.Property property = null;\n    for (Serializer.Property p : Serializer.Property.values())\n    {\n      if (p.toString().equals(name))\n      {\n        property = p;\n        break;\n      }\n    }\n    serializer.setOutputProperty(property, value);\n    switch (property)\n    {\n    case MEDIA_TYPE:\n      response.setContentType(value);\n      break;\n    case ENCODING:\n      response.setCharacterEncoding(value);\n      break;\n    default:\n      ;\n    }\n  }", "url": "https://raw.githubusercontent.com/GuntherRademacher/rr/master/src/main/java/de/bottlecaps/railroad/core/ExtensionFunctions.java", "stars": "10", "class_props": {"extends": null, "implements": ["Initializer"], "modifiers": ["public"]}}, {"id": 80252, "method_name": "parseXml", "class_name": "ExtensionFunctions", "params": ["XPathContext", "String", "String"], "throws": null, "modifiers": ["static", "private"], "return_type": "NodeInfo", "snippet": "  private static NodeInfo parseXml(XPathContext context, String xml, String contentType)\n  {\n    return parseXml(context, new StreamSource(new StringReader(xml)), contentType);\n  }", "url": "https://raw.githubusercontent.com/GuntherRademacher/rr/master/src/main/java/de/bottlecaps/railroad/core/ExtensionFunctions.java", "stars": "10", "class_props": {"extends": null, "implements": ["Initializer"], "modifiers": ["public"]}}, {"id": 80253, "method_name": "isXml", "class_name": "ExtensionFunctions", "params": ["String"], "throws": null, "modifiers": ["static", "private"], "return_type": "boolean", "snippet": "  private static boolean isXml(String contentType)\n  {\n    return contentType != null && (contentType.endsWith(\"/xml\") || contentType.endsWith(\"+xml\"));\n  }", "url": "https://raw.githubusercontent.com/GuntherRademacher/rr/master/src/main/java/de/bottlecaps/railroad/core/ExtensionFunctions.java", "stars": "10", "class_props": {"extends": null, "implements": ["Initializer"], "modifiers": ["public"]}}, {"id": 80254, "method_name": "isHtml", "class_name": "ExtensionFunctions", "params": ["String"], "throws": null, "modifiers": ["static", "private"], "return_type": "boolean", "snippet": "  private static boolean isHtml(String contentType)\n  {\n    return contentType != null && contentType.contains(\"html\") && ! isXml(contentType);\n  }", "url": "https://raw.githubusercontent.com/GuntherRademacher/rr/master/src/main/java/de/bottlecaps/railroad/core/ExtensionFunctions.java", "stars": "10", "class_props": {"extends": null, "implements": ["Initializer"], "modifiers": ["public"]}}, {"id": 80255, "method_name": "parseXml", "class_name": "ExtensionFunctions", "params": ["XPathContext", "StreamSource", "String"], "throws": null, "modifiers": ["static", "private"], "return_type": "NodeInfo", "snippet": "  private static NodeInfo parseXml(XPathContext context, StreamSource xml, String contentType)\n  {\n    try\n    {\n      XMLReader xmlReader;\n      if (isHtml(contentType))\n      {\n        xmlReader = new org.ccil.cowan.tagsoup.Parser();\n        InputStream is = xml.getInputStream();\n        if (is != null)\n        {\n          ByteArrayOutputStream baos = new ByteArrayOutputStream();\n          byte[] buffer = new byte[32768];\n          for (int n; (n = is.read(buffer, 0, buffer.length)) != -1; )\n          {\n            baos.write(buffer, 0, n);\n          }\n          baos.flush();\n          xml = new StreamSource(new StringReader(baos.toString(StandardCharsets.UTF_8.toString())));\n        }\n      }\n      else\n      {\n        xmlReader = createXmlReader();\n      }\n      xmlReader.setFeature(\"http://xml.org/sax/features/validation\", false);\n      ParseOptions parseOptions = new ParseOptions();\n      parseOptions.setXMLReader(xmlReader);\n      return context.getConfiguration().buildDocumentTree(xml, parseOptions).getRootNode();\n    }\n    catch (XPathException | SAXException | IOException | ParserConfigurationException e)\n    {\n      throw new RuntimeException(e);\n    }\n  }", "url": "https://raw.githubusercontent.com/GuntherRademacher/rr/master/src/main/java/de/bottlecaps/railroad/core/ExtensionFunctions.java", "stars": "10", "class_props": {"extends": null, "implements": ["Initializer"], "modifiers": ["public"]}}, {"id": 80256, "method_name": "createXmlReader", "class_name": "ExtensionFunctions", "params": [], "throws": ["SAXException", "SAXNotSupportedException", "ParserConfigurationException"], "modifiers": ["static", "private"], "return_type": "XMLReader", "snippet": "  private static XMLReader createXmlReader() throws SAXException, SAXNotSupportedException, ParserConfigurationException\n  {\n    SAXParserFactory parserFactory = SAXParserFactory.newInstance();\n    SAXParser parser = parserFactory.newSAXParser();\n    XMLReader xmlReader = parser.getXMLReader();\n    xmlReader.setEntityResolver(new EntityResolver()\n    {\n      @Override\n      public InputSource resolveEntity(String publicId, String systemId) throws SAXException, IOException\n      {\n        String id = publicId == null ? systemId : systemId == null ? publicId : publicId + \", \" + systemId;\n        throw new SAXParseException(\"Unsupported entity: \" + id, null);\n      }\n    });\n    try\n    {\n      xmlReader.setFeature(\"http://apache.org/xml/features/nonvalidating/load-external-dtd\", false);\n    }\n    catch (SAXNotRecognizedException e)\n    {\n    }\n    return xmlReader;\n  }", "url": "https://raw.githubusercontent.com/GuntherRademacher/rr/master/src/main/java/de/bottlecaps/railroad/core/ExtensionFunctions.java", "stars": "10", "class_props": {"extends": null, "implements": ["Initializer"], "modifiers": ["public"]}}, {"id": 80257, "method_name": "isMultipart", "class_name": "ExtensionFunctions", "params": ["Request"], "throws": null, "modifiers": ["static", "private"], "return_type": "boolean", "snippet": "  private static boolean isMultipart(Request request)\n  {\n    return request.getContentType() != null &&\n           request.getContentType().toLowerCase().indexOf(\"multipart/form-data\") > -1;\n  }", "url": "https://raw.githubusercontent.com/GuntherRademacher/rr/master/src/main/java/de/bottlecaps/railroad/core/ExtensionFunctions.java", "stars": "10", "class_props": {"extends": null, "implements": ["Initializer"], "modifiers": ["public"]}}, {"id": 80258, "method_name": "toString", "class_name": "ExtensionFunctions", "params": ["InputStream", "String"], "throws": null, "modifiers": ["static", "private"], "return_type": "String", "snippet": "  private static String toString(InputStream inputStream, String encoding)\n  {\n    if (encoding == null)\n    {\n      encoding = UTF_8;\n    }\n    try (Scanner s = new Scanner(inputStream, encoding)) {\n      s.useDelimiter(\"\\\\A\");\n      String value = s.hasNext() ? s.next() : \"\";\n      return value;\n    }\n  }", "url": "https://raw.githubusercontent.com/GuntherRademacher/rr/master/src/main/java/de/bottlecaps/railroad/core/ExtensionFunctions.java", "stars": "10", "class_props": {"extends": null, "implements": ["Initializer"], "modifiers": ["public"]}}, {"id": 80259, "method_name": "escapeXml", "class_name": "ExtensionFunctions", "params": ["String"], "throws": null, "modifiers": ["static", "private"], "return_type": "String", "snippet": "  private static String escapeXml(String string)\n  {\n    return string.replace(\"&\", \"&amp;\")\n                 .replace(\"<\", \"&lt;\")\n                 .replace(\">\", \"&gt;\");\n  }", "url": "https://raw.githubusercontent.com/GuntherRademacher/rr/master/src/main/java/de/bottlecaps/railroad/core/ExtensionFunctions.java", "stars": "10", "class_props": {"extends": null, "implements": ["Initializer"], "modifiers": ["public"]}}, {"id": 80260, "method_name": "fileName", "class_name": "ExtensionFunctions", "params": ["MultiPart"], "throws": null, "modifiers": ["static", "private"], "return_type": "String", "snippet": "  private static String fileName(MultiPart part)\n  {\n    for (String fragment : part.getHeader(\"Content-Disposition\").split(\";\"))\n    {\n      if (fragment.trim().startsWith(\"filename\"))\n      {\n        return fragment.substring(fragment.indexOf('=') + 1).trim().replace(\"\\\"\", \"\");\n      }\n    }\n    return null;\n  }", "url": "https://raw.githubusercontent.com/GuntherRademacher/rr/master/src/main/java/de/bottlecaps/railroad/core/ExtensionFunctions.java", "stars": "10", "class_props": {"extends": null, "implements": ["Initializer"], "modifiers": ["public"]}}, {"id": 80261, "method_name": "get", "class_name": "GlobalVariable", "params": ["XPathContext"], "throws": null, "modifiers": ["public"], "return_type": "T", "snippet": "    public T get(XPathContext context)\n    {\n      try\n      {\n        @SuppressWarnings(\"unchecked\")\n        ObjectValue<T> parameter = (ObjectValue<T>) context.getController().getParameter(structuredQName);\n        return parameter.getObject();\n      }\n      catch (RuntimeException e)\n      {\n        throw e;\n      }\n      catch (Exception e)\n      {\n        throw new RuntimeException(\"failed with exception\", e);\n      }\n    }", "url": "https://raw.githubusercontent.com/GuntherRademacher/rr/master/src/main/java/de/bottlecaps/railroad/core/ExtensionFunctions.java", "stars": "10", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "static"]}}, {"id": 80262, "method_name": "set", "class_name": "GlobalVariable", "params": ["T", "XQueryEvaluator"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void set(T value, XQueryEvaluator evaluator)\n    {\n      evaluator.setExternalVariable(qname, XdmValue.wrap(new ObjectValue<T>(value)));\n    }", "url": "https://raw.githubusercontent.com/GuntherRademacher/rr/master/src/main/java/de/bottlecaps/railroad/core/ExtensionFunctions.java", "stars": "10", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "static"]}}, {"id": 80263, "method_name": "getArgumentTypes", "class_name": "ExtensionFunction", "params": [], "throws": null, "modifiers": ["public"], "return_type": "SequenceType", "snippet": "    @Override public SequenceType[] getArgumentTypes() {return argumentTypes;}", "url": "https://raw.githubusercontent.com/GuntherRademacher/rr/master/src/main/java/de/bottlecaps/railroad/core/ExtensionFunctions.java", "stars": "10", "class_props": {"extends": "ExtensionFunctionDefinition", "implements": null, "modifiers": ["static", "private", "abstract"]}}, {"id": 80264, "method_name": "getResultType", "class_name": "ExtensionFunction", "params": ["SequenceType"], "throws": null, "modifiers": ["public"], "return_type": "SequenceType", "snippet": "    @Override public SequenceType getResultType(SequenceType[] arg0) {return resultType;}", "url": "https://raw.githubusercontent.com/GuntherRademacher/rr/master/src/main/java/de/bottlecaps/railroad/core/ExtensionFunctions.java", "stars": "10", "class_props": {"extends": "ExtensionFunctionDefinition", "implements": null, "modifiers": ["static", "private", "abstract"]}}, {"id": 80265, "method_name": "makeCallExpression", "class_name": "ExtensionFunction", "params": [], "throws": null, "modifiers": ["public"], "return_type": "ExtensionFunctionCall", "snippet": "    @Override public ExtensionFunctionCall makeCallExpression() {return call;}", "url": "https://raw.githubusercontent.com/GuntherRademacher/rr/master/src/main/java/de/bottlecaps/railroad/core/ExtensionFunctions.java", "stars": "10", "class_props": {"extends": "ExtensionFunctionDefinition", "implements": null, "modifiers": ["static", "private", "abstract"]}}, {"id": 80266, "method_name": "getFunctionQName", "class_name": "ExtensionFunction", "params": [], "throws": null, "modifiers": ["public"], "return_type": "StructuredQName", "snippet": "    public StructuredQName getFunctionQName()\n    {\n      javax.xml.namespace.QName qName = javax.xml.namespace.QName.valueOf(name);\n      String namespace = qName.getNamespaceURI();\n      String steps[] = namespace.replaceAll(\"/$\", \"\").split(\"/\");\n      return new StructuredQName(steps[steps.length - 1], namespace, qName.getLocalPart());\n    }", "url": "https://raw.githubusercontent.com/GuntherRademacher/rr/master/src/main/java/de/bottlecaps/railroad/core/ExtensionFunctions.java", "stars": "10", "class_props": {"extends": "ExtensionFunctionDefinition", "implements": null, "modifiers": ["static", "private", "abstract"]}}, {"id": 80267, "method_name": "getUnknownFields", "class_name": "SegmentResp", "params": [], "throws": null, "modifiers": ["final", "public"], "return_type": "com", "snippet": "  public final com.google.protobuf.UnknownFieldSet\n  getUnknownFields() {\n    return com.google.protobuf.UnknownFieldSet.getDefaultInstance();\n  }", "url": "https://raw.githubusercontent.com/zalopay-oss/jmeter-grpc-request/master/dist/benchmark/grpc-server/src/main/java/generated/xn/services/ex/api/grpcstream/protos/SegmentResp.java", "stars": "3", "class_props": {"extends": "com", "implements": ["SegmentRespOrBuilder"], "modifiers": ["final", "public"]}}, {"id": 80268, "method_name": "getDescriptor", "class_name": "SegmentResp", "params": [], "throws": null, "modifiers": ["final", "public", "static"], "return_type": "com", "snippet": "  public static final com.google.protobuf.Descriptors.Descriptor\n      getDescriptor() {\n    return generated.xn.services.ex.api.grpcstream.protos.SegmentProtos.internal_static_data_services_seg_SegmentResp_descriptor;\n  }", "url": "https://raw.githubusercontent.com/zalopay-oss/jmeter-grpc-request/master/dist/benchmark/grpc-server/src/main/java/generated/xn/services/ex/api/grpcstream/protos/SegmentResp.java", "stars": "3", "class_props": {"extends": "com", "implements": ["SegmentRespOrBuilder"], "modifiers": ["final", "public"]}}, {"id": 80269, "method_name": "internalGetFieldAccessorTable", "class_name": "SegmentResp", "params": [], "throws": null, "modifiers": ["protected"], "return_type": "com", "snippet": "  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable\n      internalGetFieldAccessorTable() {\n    return generated.xn.services.ex.api.grpcstream.protos.SegmentProtos.internal_static_data_services_seg_SegmentResp_fieldAccessorTable\n        .ensureFieldAccessorsInitialized(\n            generated.xn.services.ex.api.grpcstream.protos.SegmentResp.class, generated.xn.services.ex.api.grpcstream.protos.SegmentResp.Builder.class);\n  }", "url": "https://raw.githubusercontent.com/zalopay-oss/jmeter-grpc-request/master/dist/benchmark/grpc-server/src/main/java/generated/xn/services/ex/api/grpcstream/protos/SegmentResp.java", "stars": "3", "class_props": {"extends": "com", "implements": ["SegmentRespOrBuilder"], "modifiers": ["final", "public"]}}, {"id": 80270, "method_name": "getResult", "class_name": "SegmentResp", "params": [], "throws": null, "modifiers": ["public"], "return_type": "java", "snippet": "  public java.lang.String getResult() {\n    java.lang.Object ref = result_;\n    if (ref instanceof java.lang.String) {\n      return (java.lang.String) ref;\n    } else {\n      com.google.protobuf.ByteString bs = \n          (com.google.protobuf.ByteString) ref;\n      java.lang.String s = bs.toStringUtf8();\n      result_ = s;\n      return s;\n    }\n  }", "url": "https://raw.githubusercontent.com/zalopay-oss/jmeter-grpc-request/master/dist/benchmark/grpc-server/src/main/java/generated/xn/services/ex/api/grpcstream/protos/SegmentResp.java", "stars": "3", "class_props": {"extends": "com", "implements": ["SegmentRespOrBuilder"], "modifiers": ["final", "public"]}}, {"id": 80271, "method_name": "getResultBytes", "class_name": "SegmentResp", "params": [], "throws": null, "modifiers": ["public"], "return_type": "com", "snippet": "  public com.google.protobuf.ByteString\n      getResultBytes() {\n    java.lang.Object ref = result_;\n    if (ref instanceof java.lang.String) {\n      com.google.protobuf.ByteString b = \n          com.google.protobuf.ByteString.copyFromUtf8(\n              (java.lang.String) ref);\n      result_ = b;\n      return b;\n    } else {\n      return (com.google.protobuf.ByteString) ref;\n    }\n  }", "url": "https://raw.githubusercontent.com/zalopay-oss/jmeter-grpc-request/master/dist/benchmark/grpc-server/src/main/java/generated/xn/services/ex/api/grpcstream/protos/SegmentResp.java", "stars": "3", "class_props": {"extends": "com", "implements": ["SegmentRespOrBuilder"], "modifiers": ["final", "public"]}}, {"id": 80272, "method_name": "isInitialized", "class_name": "SegmentResp", "params": [], "throws": null, "modifiers": ["final", "public"], "return_type": "boolean", "snippet": "  public final boolean isInitialized() {\n    byte isInitialized = memoizedIsInitialized;\n    if (isInitialized == 1) return true;\n    if (isInitialized == 0) return false;\n\n    memoizedIsInitialized = 1;\n    return true;\n  }", "url": "https://raw.githubusercontent.com/zalopay-oss/jmeter-grpc-request/master/dist/benchmark/grpc-server/src/main/java/generated/xn/services/ex/api/grpcstream/protos/SegmentResp.java", "stars": "3", "class_props": {"extends": "com", "implements": ["SegmentRespOrBuilder"], "modifiers": ["final", "public"]}}, {"id": 80273, "method_name": "writeTo", "class_name": "SegmentResp", "params": ["com"], "throws": ["java.io.IOException"], "modifiers": ["public"], "return_type": "void", "snippet": "  public void writeTo(com.google.protobuf.CodedOutputStream output)\n                      throws java.io.IOException {\n    if (!getResultBytes().isEmpty()) {\n      com.google.protobuf.GeneratedMessageV3.writeString(output, 1, result_);\n    }\n  }", "url": "https://raw.githubusercontent.com/zalopay-oss/jmeter-grpc-request/master/dist/benchmark/grpc-server/src/main/java/generated/xn/services/ex/api/grpcstream/protos/SegmentResp.java", "stars": "3", "class_props": {"extends": "com", "implements": ["SegmentRespOrBuilder"], "modifiers": ["final", "public"]}}, {"id": 80274, "method_name": "getSerializedSize", "class_name": "SegmentResp", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "  public int getSerializedSize() {\n    int size = memoizedSize;\n    if (size != -1) return size;\n\n    size = 0;\n    if (!getResultBytes().isEmpty()) {\n      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, result_);\n    }\n    memoizedSize = size;\n    return size;\n  }", "url": "https://raw.githubusercontent.com/zalopay-oss/jmeter-grpc-request/master/dist/benchmark/grpc-server/src/main/java/generated/xn/services/ex/api/grpcstream/protos/SegmentResp.java", "stars": "3", "class_props": {"extends": "com", "implements": ["SegmentRespOrBuilder"], "modifiers": ["final", "public"]}}, {"id": 80275, "method_name": "equals", "class_name": "SegmentResp", "params": ["java"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "  public boolean equals(final java.lang.Object obj) {\n    if (obj == this) {\n     return true;\n    }\n    if (!(obj instanceof generated.xn.services.ex.api.grpcstream.protos.SegmentResp)) {\n      return super.equals(obj);\n    }\n    generated.xn.services.ex.api.grpcstream.protos.SegmentResp other = (generated.xn.services.ex.api.grpcstream.protos.SegmentResp) obj;\n\n    boolean result = true;\n    result = result && getResult()\n        .equals(other.getResult());\n    return result;\n  }", "url": "https://raw.githubusercontent.com/zalopay-oss/jmeter-grpc-request/master/dist/benchmark/grpc-server/src/main/java/generated/xn/services/ex/api/grpcstream/protos/SegmentResp.java", "stars": "3", "class_props": {"extends": "com", "implements": ["SegmentRespOrBuilder"], "modifiers": ["final", "public"]}}, {"id": 80276, "method_name": "hashCode", "class_name": "SegmentResp", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "  public int hashCode() {\n    if (memoizedHashCode != 0) {\n      return memoizedHashCode;\n    }\n    int hash = 41;\n    hash = (19 * hash) + getDescriptorForType().hashCode();\n    hash = (37 * hash) + RESULT_FIELD_NUMBER;\n    hash = (53 * hash) + getResult().hashCode();\n    hash = (29 * hash) + unknownFields.hashCode();\n    memoizedHashCode = hash;\n    return hash;\n  }", "url": "https://raw.githubusercontent.com/zalopay-oss/jmeter-grpc-request/master/dist/benchmark/grpc-server/src/main/java/generated/xn/services/ex/api/grpcstream/protos/SegmentResp.java", "stars": "3", "class_props": {"extends": "com", "implements": ["SegmentRespOrBuilder"], "modifiers": ["final", "public"]}}, {"id": 80277, "method_name": "parseFrom", "class_name": "SegmentResp", "params": ["com"], "throws": ["com.google.protobuf.InvalidProtocolBufferException"], "modifiers": ["public", "static"], "return_type": "generated", "snippet": "  public static generated.xn.services.ex.api.grpcstream.protos.SegmentResp parseFrom(\n      com.google.protobuf.ByteString data)\n      throws com.google.protobuf.InvalidProtocolBufferException {\n    return PARSER.parseFrom(data);\n  }", "url": "https://raw.githubusercontent.com/zalopay-oss/jmeter-grpc-request/master/dist/benchmark/grpc-server/src/main/java/generated/xn/services/ex/api/grpcstream/protos/SegmentResp.java", "stars": "3", "class_props": {"extends": "com", "implements": ["SegmentRespOrBuilder"], "modifiers": ["final", "public"]}}, {"id": 80278, "method_name": "parseFrom", "class_name": "SegmentResp", "params": ["com", "com"], "throws": ["com.google.protobuf.InvalidProtocolBufferException"], "modifiers": ["public", "static"], "return_type": "generated", "snippet": "  public static generated.xn.services.ex.api.grpcstream.protos.SegmentResp parseFrom(\n      com.google.protobuf.ByteString data,\n      com.google.protobuf.ExtensionRegistryLite extensionRegistry)\n      throws com.google.protobuf.InvalidProtocolBufferException {\n    return PARSER.parseFrom(data, extensionRegistry);\n  }", "url": "https://raw.githubusercontent.com/zalopay-oss/jmeter-grpc-request/master/dist/benchmark/grpc-server/src/main/java/generated/xn/services/ex/api/grpcstream/protos/SegmentResp.java", "stars": "3", "class_props": {"extends": "com", "implements": ["SegmentRespOrBuilder"], "modifiers": ["final", "public"]}}, {"id": 80279, "method_name": "parseFrom", "class_name": "SegmentResp", "params": ["byte"], "throws": ["com.google.protobuf.InvalidProtocolBufferException"], "modifiers": ["public", "static"], "return_type": "generated", "snippet": "  public static generated.xn.services.ex.api.grpcstream.protos.SegmentResp parseFrom(byte[] data)\n      throws com.google.protobuf.InvalidProtocolBufferException {\n    return PARSER.parseFrom(data);\n  }", "url": "https://raw.githubusercontent.com/zalopay-oss/jmeter-grpc-request/master/dist/benchmark/grpc-server/src/main/java/generated/xn/services/ex/api/grpcstream/protos/SegmentResp.java", "stars": "3", "class_props": {"extends": "com", "implements": ["SegmentRespOrBuilder"], "modifiers": ["final", "public"]}}, {"id": 80280, "method_name": "parseFrom", "class_name": "SegmentResp", "params": ["byte", "com"], "throws": ["com.google.protobuf.InvalidProtocolBufferException"], "modifiers": ["public", "static"], "return_type": "generated", "snippet": "  public static generated.xn.services.ex.api.grpcstream.protos.SegmentResp parseFrom(\n      byte[] data,\n      com.google.protobuf.ExtensionRegistryLite extensionRegistry)\n      throws com.google.protobuf.InvalidProtocolBufferException {\n    return PARSER.parseFrom(data, extensionRegistry);\n  }", "url": "https://raw.githubusercontent.com/zalopay-oss/jmeter-grpc-request/master/dist/benchmark/grpc-server/src/main/java/generated/xn/services/ex/api/grpcstream/protos/SegmentResp.java", "stars": "3", "class_props": {"extends": "com", "implements": ["SegmentRespOrBuilder"], "modifiers": ["final", "public"]}}, {"id": 80281, "method_name": "parseFrom", "class_name": "SegmentResp", "params": ["java"], "throws": ["java.io.IOException"], "modifiers": ["public", "static"], "return_type": "generated", "snippet": "  public static generated.xn.services.ex.api.grpcstream.protos.SegmentResp parseFrom(java.io.InputStream input)\n      throws java.io.IOException {\n    return com.google.protobuf.GeneratedMessageV3\n        .parseWithIOException(PARSER, input);\n  }", "url": "https://raw.githubusercontent.com/zalopay-oss/jmeter-grpc-request/master/dist/benchmark/grpc-server/src/main/java/generated/xn/services/ex/api/grpcstream/protos/SegmentResp.java", "stars": "3", "class_props": {"extends": "com", "implements": ["SegmentRespOrBuilder"], "modifiers": ["final", "public"]}}, {"id": 80282, "method_name": "parseFrom", "class_name": "SegmentResp", "params": ["java", "com"], "throws": ["java.io.IOException"], "modifiers": ["public", "static"], "return_type": "generated", "snippet": "  public static generated.xn.services.ex.api.grpcstream.protos.SegmentResp parseFrom(\n      java.io.InputStream input,\n      com.google.protobuf.ExtensionRegistryLite extensionRegistry)\n      throws java.io.IOException {\n    return com.google.protobuf.GeneratedMessageV3\n        .parseWithIOException(PARSER, input, extensionRegistry);\n  }", "url": "https://raw.githubusercontent.com/zalopay-oss/jmeter-grpc-request/master/dist/benchmark/grpc-server/src/main/java/generated/xn/services/ex/api/grpcstream/protos/SegmentResp.java", "stars": "3", "class_props": {"extends": "com", "implements": ["SegmentRespOrBuilder"], "modifiers": ["final", "public"]}}, {"id": 80283, "method_name": "parseDelimitedFrom", "class_name": "SegmentResp", "params": ["java"], "throws": ["java.io.IOException"], "modifiers": ["public", "static"], "return_type": "generated", "snippet": "  public static generated.xn.services.ex.api.grpcstream.protos.SegmentResp parseDelimitedFrom(java.io.InputStream input)\n      throws java.io.IOException {\n    return com.google.protobuf.GeneratedMessageV3\n        .parseDelimitedWithIOException(PARSER, input);\n  }", "url": "https://raw.githubusercontent.com/zalopay-oss/jmeter-grpc-request/master/dist/benchmark/grpc-server/src/main/java/generated/xn/services/ex/api/grpcstream/protos/SegmentResp.java", "stars": "3", "class_props": {"extends": "com", "implements": ["SegmentRespOrBuilder"], "modifiers": ["final", "public"]}}, {"id": 80284, "method_name": "parseDelimitedFrom", "class_name": "SegmentResp", "params": ["java", "com"], "throws": ["java.io.IOException"], "modifiers": ["public", "static"], "return_type": "generated", "snippet": "  public static generated.xn.services.ex.api.grpcstream.protos.SegmentResp parseDelimitedFrom(\n      java.io.InputStream input,\n      com.google.protobuf.ExtensionRegistryLite extensionRegistry)\n      throws java.io.IOException {\n    return com.google.protobuf.GeneratedMessageV3\n        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);\n  }", "url": "https://raw.githubusercontent.com/zalopay-oss/jmeter-grpc-request/master/dist/benchmark/grpc-server/src/main/java/generated/xn/services/ex/api/grpcstream/protos/SegmentResp.java", "stars": "3", "class_props": {"extends": "com", "implements": ["SegmentRespOrBuilder"], "modifiers": ["final", "public"]}}, {"id": 80285, "method_name": "parseFrom", "class_name": "SegmentResp", "params": ["com"], "throws": ["java.io.IOException"], "modifiers": ["public", "static"], "return_type": "generated", "snippet": "  public static generated.xn.services.ex.api.grpcstream.protos.SegmentResp parseFrom(\n      com.google.protobuf.CodedInputStream input)\n      throws java.io.IOException {\n    return com.google.protobuf.GeneratedMessageV3\n        .parseWithIOException(PARSER, input);\n  }", "url": "https://raw.githubusercontent.com/zalopay-oss/jmeter-grpc-request/master/dist/benchmark/grpc-server/src/main/java/generated/xn/services/ex/api/grpcstream/protos/SegmentResp.java", "stars": "3", "class_props": {"extends": "com", "implements": ["SegmentRespOrBuilder"], "modifiers": ["final", "public"]}}, {"id": 80286, "method_name": "parseFrom", "class_name": "SegmentResp", "params": ["com", "com"], "throws": ["java.io.IOException"], "modifiers": ["public", "static"], "return_type": "generated", "snippet": "  public static generated.xn.services.ex.api.grpcstream.protos.SegmentResp parseFrom(\n      com.google.protobuf.CodedInputStream input,\n      com.google.protobuf.ExtensionRegistryLite extensionRegistry)\n      throws java.io.IOException {\n    return com.google.protobuf.GeneratedMessageV3\n        .parseWithIOException(PARSER, input, extensionRegistry);\n  }", "url": "https://raw.githubusercontent.com/zalopay-oss/jmeter-grpc-request/master/dist/benchmark/grpc-server/src/main/java/generated/xn/services/ex/api/grpcstream/protos/SegmentResp.java", "stars": "3", "class_props": {"extends": "com", "implements": ["SegmentRespOrBuilder"], "modifiers": ["final", "public"]}}, {"id": 80287, "method_name": "newBuilderForType", "class_name": "SegmentResp", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Builder", "snippet": "  public Builder newBuilderForType() { return newBuilder(); }", "url": "https://raw.githubusercontent.com/zalopay-oss/jmeter-grpc-request/master/dist/benchmark/grpc-server/src/main/java/generated/xn/services/ex/api/grpcstream/protos/SegmentResp.java", "stars": "3", "class_props": {"extends": "com", "implements": ["SegmentRespOrBuilder"], "modifiers": ["final", "public"]}}, {"id": 80288, "method_name": "newBuilder", "class_name": "SegmentResp", "params": [], "throws": null, "modifiers": ["public", "static"], "return_type": "Builder", "snippet": "  public static Builder newBuilder() {\n    return DEFAULT_INSTANCE.toBuilder();\n  }", "url": "https://raw.githubusercontent.com/zalopay-oss/jmeter-grpc-request/master/dist/benchmark/grpc-server/src/main/java/generated/xn/services/ex/api/grpcstream/protos/SegmentResp.java", "stars": "3", "class_props": {"extends": "com", "implements": ["SegmentRespOrBuilder"], "modifiers": ["final", "public"]}}, {"id": 80289, "method_name": "newBuilder", "class_name": "SegmentResp", "params": ["generated"], "throws": null, "modifiers": ["public", "static"], "return_type": "Builder", "snippet": "  public static Builder newBuilder(generated.xn.services.ex.api.grpcstream.protos.SegmentResp prototype) {\n    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);\n  }", "url": "https://raw.githubusercontent.com/zalopay-oss/jmeter-grpc-request/master/dist/benchmark/grpc-server/src/main/java/generated/xn/services/ex/api/grpcstream/protos/SegmentResp.java", "stars": "3", "class_props": {"extends": "com", "implements": ["SegmentRespOrBuilder"], "modifiers": ["final", "public"]}}, {"id": 80290, "method_name": "toBuilder", "class_name": "SegmentResp", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Builder", "snippet": "  public Builder toBuilder() {\n    return this == DEFAULT_INSTANCE\n        ? new Builder() : new Builder().mergeFrom(this);\n  }", "url": "https://raw.githubusercontent.com/zalopay-oss/jmeter-grpc-request/master/dist/benchmark/grpc-server/src/main/java/generated/xn/services/ex/api/grpcstream/protos/SegmentResp.java", "stars": "3", "class_props": {"extends": "com", "implements": ["SegmentRespOrBuilder"], "modifiers": ["final", "public"]}}, {"id": 80291, "method_name": "newBuilderForType", "class_name": "SegmentResp", "params": ["com"], "throws": null, "modifiers": ["protected"], "return_type": "Builder", "snippet": "  protected Builder newBuilderForType(\n      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {\n    Builder builder = new Builder(parent);\n    return builder;\n  }", "url": "https://raw.githubusercontent.com/zalopay-oss/jmeter-grpc-request/master/dist/benchmark/grpc-server/src/main/java/generated/xn/services/ex/api/grpcstream/protos/SegmentResp.java", "stars": "3", "class_props": {"extends": "com", "implements": ["SegmentRespOrBuilder"], "modifiers": ["final", "public"]}}, {"id": 80292, "method_name": "getDefaultInstance", "class_name": "SegmentResp", "params": [], "throws": null, "modifiers": ["public", "static"], "return_type": "generated", "snippet": "  public static generated.xn.services.ex.api.grpcstream.protos.SegmentResp getDefaultInstance() {\n    return DEFAULT_INSTANCE;\n  }", "url": "https://raw.githubusercontent.com/zalopay-oss/jmeter-grpc-request/master/dist/benchmark/grpc-server/src/main/java/generated/xn/services/ex/api/grpcstream/protos/SegmentResp.java", "stars": "3", "class_props": {"extends": "com", "implements": ["SegmentRespOrBuilder"], "modifiers": ["final", "public"]}}, {"id": 80293, "method_name": "parser", "class_name": "SegmentResp", "params": [], "throws": null, "modifiers": ["public", "static"], "return_type": "com", "snippet": "  public static com.google.protobuf.Parser<SegmentResp> parser() {\n    return PARSER;\n  }", "url": "https://raw.githubusercontent.com/zalopay-oss/jmeter-grpc-request/master/dist/benchmark/grpc-server/src/main/java/generated/xn/services/ex/api/grpcstream/protos/SegmentResp.java", "stars": "3", "class_props": {"extends": "com", "implements": ["SegmentRespOrBuilder"], "modifiers": ["final", "public"]}}, {"id": 80294, "method_name": "getParserForType", "class_name": "SegmentResp", "params": [], "throws": null, "modifiers": ["public"], "return_type": "com", "snippet": "  public com.google.protobuf.Parser<SegmentResp> getParserForType() {\n    return PARSER;\n  }", "url": "https://raw.githubusercontent.com/zalopay-oss/jmeter-grpc-request/master/dist/benchmark/grpc-server/src/main/java/generated/xn/services/ex/api/grpcstream/protos/SegmentResp.java", "stars": "3", "class_props": {"extends": "com", "implements": ["SegmentRespOrBuilder"], "modifiers": ["final", "public"]}}, {"id": 80295, "method_name": "getDefaultInstanceForType", "class_name": "SegmentResp", "params": [], "throws": null, "modifiers": ["public"], "return_type": "generated", "snippet": "  public generated.xn.services.ex.api.grpcstream.protos.SegmentResp getDefaultInstanceForType() {\n    return DEFAULT_INSTANCE;\n  }", "url": "https://raw.githubusercontent.com/zalopay-oss/jmeter-grpc-request/master/dist/benchmark/grpc-server/src/main/java/generated/xn/services/ex/api/grpcstream/protos/SegmentResp.java", "stars": "3", "class_props": {"extends": "com", "implements": ["SegmentRespOrBuilder"], "modifiers": ["final", "public"]}}, {"id": 80296, "method_name": "getDescriptor", "class_name": "Builder", "params": [], "throws": null, "modifiers": ["final", "public", "static"], "return_type": "com", "snippet": "    public static final com.google.protobuf.Descriptors.Descriptor\n        getDescriptor() {\n      return generated.xn.services.ex.api.grpcstream.protos.SegmentProtos.internal_static_data_services_seg_SegmentResp_descriptor;\n    }", "url": "https://raw.githubusercontent.com/zalopay-oss/jmeter-grpc-request/master/dist/benchmark/grpc-server/src/main/java/generated/xn/services/ex/api/grpcstream/protos/SegmentResp.java", "stars": "3", "class_props": {"extends": "com", "implements": ["generated"], "modifiers": ["final", "public", "static"]}}, {"id": 80297, "method_name": "internalGetFieldAccessorTable", "class_name": "Builder", "params": [], "throws": null, "modifiers": ["protected"], "return_type": "com", "snippet": "    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable\n        internalGetFieldAccessorTable() {\n      return generated.xn.services.ex.api.grpcstream.protos.SegmentProtos.internal_static_data_services_seg_SegmentResp_fieldAccessorTable\n          .ensureFieldAccessorsInitialized(\n              generated.xn.services.ex.api.grpcstream.protos.SegmentResp.class, generated.xn.services.ex.api.grpcstream.protos.SegmentResp.Builder.class);\n    }", "url": "https://raw.githubusercontent.com/zalopay-oss/jmeter-grpc-request/master/dist/benchmark/grpc-server/src/main/java/generated/xn/services/ex/api/grpcstream/protos/SegmentResp.java", "stars": "3", "class_props": {"extends": "com", "implements": ["generated"], "modifiers": ["final", "public", "static"]}}, {"id": 80298, "method_name": "maybeForceBuilderInitialization", "class_name": "Builder", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void maybeForceBuilderInitialization() {\n      if (com.google.protobuf.GeneratedMessageV3\n              .alwaysUseFieldBuilders) {\n      }\n    }", "url": "https://raw.githubusercontent.com/zalopay-oss/jmeter-grpc-request/master/dist/benchmark/grpc-server/src/main/java/generated/xn/services/ex/api/grpcstream/protos/SegmentResp.java", "stars": "3", "class_props": {"extends": "com", "implements": ["generated"], "modifiers": ["final", "public", "static"]}}, {"id": 80299, "method_name": "clear", "class_name": "Builder", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Builder", "snippet": "    public Builder clear() {\n      super.clear();\n      result_ = \"\";\n\n      return this;\n    }", "url": "https://raw.githubusercontent.com/zalopay-oss/jmeter-grpc-request/master/dist/benchmark/grpc-server/src/main/java/generated/xn/services/ex/api/grpcstream/protos/SegmentResp.java", "stars": "3", "class_props": {"extends": "com", "implements": ["generated"], "modifiers": ["final", "public", "static"]}}, {"id": 80300, "method_name": "getDescriptorForType", "class_name": "Builder", "params": [], "throws": null, "modifiers": ["public"], "return_type": "com", "snippet": "    public com.google.protobuf.Descriptors.Descriptor\n        getDescriptorForType() {\n      return generated.xn.services.ex.api.grpcstream.protos.SegmentProtos.internal_static_data_services_seg_SegmentResp_descriptor;\n    }", "url": "https://raw.githubusercontent.com/zalopay-oss/jmeter-grpc-request/master/dist/benchmark/grpc-server/src/main/java/generated/xn/services/ex/api/grpcstream/protos/SegmentResp.java", "stars": "3", "class_props": {"extends": "com", "implements": ["generated"], "modifiers": ["final", "public", "static"]}}, {"id": 80301, "method_name": "getDefaultInstanceForType", "class_name": "Builder", "params": [], "throws": null, "modifiers": ["public"], "return_type": "generated", "snippet": "    public generated.xn.services.ex.api.grpcstream.protos.SegmentResp getDefaultInstanceForType() {\n      return generated.xn.services.ex.api.grpcstream.protos.SegmentResp.getDefaultInstance();\n    }", "url": "https://raw.githubusercontent.com/zalopay-oss/jmeter-grpc-request/master/dist/benchmark/grpc-server/src/main/java/generated/xn/services/ex/api/grpcstream/protos/SegmentResp.java", "stars": "3", "class_props": {"extends": "com", "implements": ["generated"], "modifiers": ["final", "public", "static"]}}, {"id": 80302, "method_name": "build", "class_name": "Builder", "params": [], "throws": null, "modifiers": ["public"], "return_type": "generated", "snippet": "    public generated.xn.services.ex.api.grpcstream.protos.SegmentResp build() {\n      generated.xn.services.ex.api.grpcstream.protos.SegmentResp result = buildPartial();\n      if (!result.isInitialized()) {\n        throw newUninitializedMessageException(result);\n      }\n      return result;\n    }", "url": "https://raw.githubusercontent.com/zalopay-oss/jmeter-grpc-request/master/dist/benchmark/grpc-server/src/main/java/generated/xn/services/ex/api/grpcstream/protos/SegmentResp.java", "stars": "3", "class_props": {"extends": "com", "implements": ["generated"], "modifiers": ["final", "public", "static"]}}, {"id": 80303, "method_name": "buildPartial", "class_name": "Builder", "params": [], "throws": null, "modifiers": ["public"], "return_type": "generated", "snippet": "    public generated.xn.services.ex.api.grpcstream.protos.SegmentResp buildPartial() {\n      generated.xn.services.ex.api.grpcstream.protos.SegmentResp result = new generated.xn.services.ex.api.grpcstream.protos.SegmentResp(this);\n      result.result_ = result_;\n      onBuilt();\n      return result;\n    }", "url": "https://raw.githubusercontent.com/zalopay-oss/jmeter-grpc-request/master/dist/benchmark/grpc-server/src/main/java/generated/xn/services/ex/api/grpcstream/protos/SegmentResp.java", "stars": "3", "class_props": {"extends": "com", "implements": ["generated"], "modifiers": ["final", "public", "static"]}}, {"id": 80304, "method_name": "clone", "class_name": "Builder", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Builder", "snippet": "    public Builder clone() {\n      return (Builder) super.clone();\n    }", "url": "https://raw.githubusercontent.com/zalopay-oss/jmeter-grpc-request/master/dist/benchmark/grpc-server/src/main/java/generated/xn/services/ex/api/grpcstream/protos/SegmentResp.java", "stars": "3", "class_props": {"extends": "com", "implements": ["generated"], "modifiers": ["final", "public", "static"]}}, {"id": 80305, "method_name": "setField", "class_name": "Builder", "params": ["com", "Object"], "throws": null, "modifiers": ["public"], "return_type": "Builder", "snippet": "    public Builder setField(\n        com.google.protobuf.Descriptors.FieldDescriptor field,\n        Object value) {\n      return (Builder) super.setField(field, value);\n    }", "url": "https://raw.githubusercontent.com/zalopay-oss/jmeter-grpc-request/master/dist/benchmark/grpc-server/src/main/java/generated/xn/services/ex/api/grpcstream/protos/SegmentResp.java", "stars": "3", "class_props": {"extends": "com", "implements": ["generated"], "modifiers": ["final", "public", "static"]}}, {"id": 80306, "method_name": "clearField", "class_name": "Builder", "params": ["com"], "throws": null, "modifiers": ["public"], "return_type": "Builder", "snippet": "    public Builder clearField(\n        com.google.protobuf.Descriptors.FieldDescriptor field) {\n      return (Builder) super.clearField(field);\n    }", "url": "https://raw.githubusercontent.com/zalopay-oss/jmeter-grpc-request/master/dist/benchmark/grpc-server/src/main/java/generated/xn/services/ex/api/grpcstream/protos/SegmentResp.java", "stars": "3", "class_props": {"extends": "com", "implements": ["generated"], "modifiers": ["final", "public", "static"]}}, {"id": 80307, "method_name": "clearOneof", "class_name": "Builder", "params": ["com"], "throws": null, "modifiers": ["public"], "return_type": "Builder", "snippet": "    public Builder clearOneof(\n        com.google.protobuf.Descriptors.OneofDescriptor oneof) {\n      return (Builder) super.clearOneof(oneof);\n    }", "url": "https://raw.githubusercontent.com/zalopay-oss/jmeter-grpc-request/master/dist/benchmark/grpc-server/src/main/java/generated/xn/services/ex/api/grpcstream/protos/SegmentResp.java", "stars": "3", "class_props": {"extends": "com", "implements": ["generated"], "modifiers": ["final", "public", "static"]}}, {"id": 80308, "method_name": "setRepeatedField", "class_name": "Builder", "params": ["com", "int", "Object"], "throws": null, "modifiers": ["public"], "return_type": "Builder", "snippet": "    public Builder setRepeatedField(\n        com.google.protobuf.Descriptors.FieldDescriptor field,\n        int index, Object value) {\n      return (Builder) super.setRepeatedField(field, index, value);\n    }", "url": "https://raw.githubusercontent.com/zalopay-oss/jmeter-grpc-request/master/dist/benchmark/grpc-server/src/main/java/generated/xn/services/ex/api/grpcstream/protos/SegmentResp.java", "stars": "3", "class_props": {"extends": "com", "implements": ["generated"], "modifiers": ["final", "public", "static"]}}, {"id": 80309, "method_name": "addRepeatedField", "class_name": "Builder", "params": ["com", "Object"], "throws": null, "modifiers": ["public"], "return_type": "Builder", "snippet": "    public Builder addRepeatedField(\n        com.google.protobuf.Descriptors.FieldDescriptor field,\n        Object value) {\n      return (Builder) super.addRepeatedField(field, value);\n    }", "url": "https://raw.githubusercontent.com/zalopay-oss/jmeter-grpc-request/master/dist/benchmark/grpc-server/src/main/java/generated/xn/services/ex/api/grpcstream/protos/SegmentResp.java", "stars": "3", "class_props": {"extends": "com", "implements": ["generated"], "modifiers": ["final", "public", "static"]}}, {"id": 80310, "method_name": "mergeFrom", "class_name": "Builder", "params": ["com"], "throws": null, "modifiers": ["public"], "return_type": "Builder", "snippet": "    public Builder mergeFrom(com.google.protobuf.Message other) {\n      if (other instanceof generated.xn.services.ex.api.grpcstream.protos.SegmentResp) {\n        return mergeFrom((generated.xn.services.ex.api.grpcstream.protos.SegmentResp)other);\n      } else {\n        super.mergeFrom(other);\n        return this;\n      }\n    }", "url": "https://raw.githubusercontent.com/zalopay-oss/jmeter-grpc-request/master/dist/benchmark/grpc-server/src/main/java/generated/xn/services/ex/api/grpcstream/protos/SegmentResp.java", "stars": "3", "class_props": {"extends": "com", "implements": ["generated"], "modifiers": ["final", "public", "static"]}}, {"id": 80311, "method_name": "mergeFrom", "class_name": "Builder", "params": ["generated"], "throws": null, "modifiers": ["public"], "return_type": "Builder", "snippet": "    public Builder mergeFrom(generated.xn.services.ex.api.grpcstream.protos.SegmentResp other) {\n      if (other == generated.xn.services.ex.api.grpcstream.protos.SegmentResp.getDefaultInstance()) return this;\n      if (!other.getResult().isEmpty()) {\n        result_ = other.result_;\n        onChanged();\n      }\n      onChanged();\n      return this;\n    }", "url": "https://raw.githubusercontent.com/zalopay-oss/jmeter-grpc-request/master/dist/benchmark/grpc-server/src/main/java/generated/xn/services/ex/api/grpcstream/protos/SegmentResp.java", "stars": "3", "class_props": {"extends": "com", "implements": ["generated"], "modifiers": ["final", "public", "static"]}}, {"id": 80312, "method_name": "isInitialized", "class_name": "Builder", "params": [], "throws": null, "modifiers": ["final", "public"], "return_type": "boolean", "snippet": "    public final boolean isInitialized() {\n      return true;\n    }", "url": "https://raw.githubusercontent.com/zalopay-oss/jmeter-grpc-request/master/dist/benchmark/grpc-server/src/main/java/generated/xn/services/ex/api/grpcstream/protos/SegmentResp.java", "stars": "3", "class_props": {"extends": "com", "implements": ["generated"], "modifiers": ["final", "public", "static"]}}, {"id": 80313, "method_name": "mergeFrom", "class_name": "Builder", "params": ["com", "com"], "throws": ["java.io.IOException"], "modifiers": ["public"], "return_type": "Builder", "snippet": "    public Builder mergeFrom(\n        com.google.protobuf.CodedInputStream input,\n        com.google.protobuf.ExtensionRegistryLite extensionRegistry)\n        throws java.io.IOException {\n      generated.xn.services.ex.api.grpcstream.protos.SegmentResp parsedMessage = null;\n      try {\n        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);\n      } catch (com.google.protobuf.InvalidProtocolBufferException e) {\n        parsedMessage = (generated.xn.services.ex.api.grpcstream.protos.SegmentResp) e.getUnfinishedMessage();\n        throw e.unwrapIOException();\n      } finally {\n        if (parsedMessage != null) {\n          mergeFrom(parsedMessage);\n        }\n      }\n      return this;\n    }", "url": "https://raw.githubusercontent.com/zalopay-oss/jmeter-grpc-request/master/dist/benchmark/grpc-server/src/main/java/generated/xn/services/ex/api/grpcstream/protos/SegmentResp.java", "stars": "3", "class_props": {"extends": "com", "implements": ["generated"], "modifiers": ["final", "public", "static"]}}, {"id": 80314, "method_name": "getResult", "class_name": "Builder", "params": [], "throws": null, "modifiers": ["public"], "return_type": "java", "snippet": "    public java.lang.String getResult() {\n      java.lang.Object ref = result_;\n      if (!(ref instanceof java.lang.String)) {\n        com.google.protobuf.ByteString bs =\n            (com.google.protobuf.ByteString) ref;\n        java.lang.String s = bs.toStringUtf8();\n        result_ = s;\n        return s;\n      } else {\n        return (java.lang.String) ref;\n      }\n    }", "url": "https://raw.githubusercontent.com/zalopay-oss/jmeter-grpc-request/master/dist/benchmark/grpc-server/src/main/java/generated/xn/services/ex/api/grpcstream/protos/SegmentResp.java", "stars": "3", "class_props": {"extends": "com", "implements": ["generated"], "modifiers": ["final", "public", "static"]}}, {"id": 80315, "method_name": "getResultBytes", "class_name": "Builder", "params": [], "throws": null, "modifiers": ["public"], "return_type": "com", "snippet": "    public com.google.protobuf.ByteString\n        getResultBytes() {\n      java.lang.Object ref = result_;\n      if (ref instanceof String) {\n        com.google.protobuf.ByteString b = \n            com.google.protobuf.ByteString.copyFromUtf8(\n                (java.lang.String) ref);\n        result_ = b;\n        return b;\n      } else {\n        return (com.google.protobuf.ByteString) ref;\n      }\n    }", "url": "https://raw.githubusercontent.com/zalopay-oss/jmeter-grpc-request/master/dist/benchmark/grpc-server/src/main/java/generated/xn/services/ex/api/grpcstream/protos/SegmentResp.java", "stars": "3", "class_props": {"extends": "com", "implements": ["generated"], "modifiers": ["final", "public", "static"]}}, {"id": 80316, "method_name": "setResult", "class_name": "Builder", "params": ["java"], "throws": null, "modifiers": ["public"], "return_type": "Builder", "snippet": "    public Builder setResult(\n        java.lang.String value) {\n      if (value == null) {\n    throw new NullPointerException();\n  }\n  \n      result_ = value;\n      onChanged();\n      return this;\n    }", "url": "https://raw.githubusercontent.com/zalopay-oss/jmeter-grpc-request/master/dist/benchmark/grpc-server/src/main/java/generated/xn/services/ex/api/grpcstream/protos/SegmentResp.java", "stars": "3", "class_props": {"extends": "com", "implements": ["generated"], "modifiers": ["final", "public", "static"]}}, {"id": 80317, "method_name": "clearResult", "class_name": "Builder", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Builder", "snippet": "    public Builder clearResult() {\n      \n      result_ = getDefaultInstance().getResult();\n      onChanged();\n      return this;\n    }", "url": "https://raw.githubusercontent.com/zalopay-oss/jmeter-grpc-request/master/dist/benchmark/grpc-server/src/main/java/generated/xn/services/ex/api/grpcstream/protos/SegmentResp.java", "stars": "3", "class_props": {"extends": "com", "implements": ["generated"], "modifiers": ["final", "public", "static"]}}, {"id": 80318, "method_name": "setResultBytes", "class_name": "Builder", "params": ["com"], "throws": null, "modifiers": ["public"], "return_type": "Builder", "snippet": "    public Builder setResultBytes(\n        com.google.protobuf.ByteString value) {\n      if (value == null) {\n    throw new NullPointerException();\n  }\n  checkByteStringIsUtf8(value);\n      \n      result_ = value;\n      onChanged();\n      return this;\n    }", "url": "https://raw.githubusercontent.com/zalopay-oss/jmeter-grpc-request/master/dist/benchmark/grpc-server/src/main/java/generated/xn/services/ex/api/grpcstream/protos/SegmentResp.java", "stars": "3", "class_props": {"extends": "com", "implements": ["generated"], "modifiers": ["final", "public", "static"]}}, {"id": 80319, "method_name": "setUnknownFields", "class_name": "Builder", "params": ["com"], "throws": null, "modifiers": ["final", "public"], "return_type": "Builder", "snippet": "    public final Builder setUnknownFields(\n        final com.google.protobuf.UnknownFieldSet unknownFields) {\n      return this;\n    }", "url": "https://raw.githubusercontent.com/zalopay-oss/jmeter-grpc-request/master/dist/benchmark/grpc-server/src/main/java/generated/xn/services/ex/api/grpcstream/protos/SegmentResp.java", "stars": "3", "class_props": {"extends": "com", "implements": ["generated"], "modifiers": ["final", "public", "static"]}}, {"id": 80320, "method_name": "mergeUnknownFields", "class_name": "Builder", "params": ["com"], "throws": null, "modifiers": ["final", "public"], "return_type": "Builder", "snippet": "    public final Builder mergeUnknownFields(\n        final com.google.protobuf.UnknownFieldSet unknownFields) {\n      return this;\n    }", "url": "https://raw.githubusercontent.com/zalopay-oss/jmeter-grpc-request/master/dist/benchmark/grpc-server/src/main/java/generated/xn/services/ex/api/grpcstream/protos/SegmentResp.java", "stars": "3", "class_props": {"extends": "com", "implements": ["generated"], "modifiers": ["final", "public", "static"]}}, {"id": 80321, "method_name": "execute", "class_name": "ExpirationDateRemoverAllatori", "params": ["Map<String,Clazz>", "boolean"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "  public boolean execute(Map<String, Clazz> classes, boolean verbose) {\n    try {\n      logger.info(\"Finding most common long ldc cst\");\n      long mostCommon = classes.values().stream().map(c -> c.node.methods).flatMap(List::stream).map(m -> m.instructions.spliterator()).flatMap(insns -> StreamSupport.stream(insns, false))\n          .filter(ain -> ain.getOpcode() == LDC && ((LdcInsnNode) ain).cst instanceof Long).map(ain -> (LdcInsnNode) ain)\n          .filter(ldc -> Math.abs((long) ldc.cst - System.currentTimeMillis()) < 157784760000L).collect(Collectors.groupingBy(ldc -> (long) ldc.cst, Collectors.counting())).entrySet().stream()\n          .max(Comparator.comparing(Entry::getValue)).map(Entry::getKey).orElseThrow(RuntimeException::new);\n      logger.info(\"Expiration date is \" + new Date(mostCommon).toString() + \", replacing\");\n      classes.values().stream().map(c -> c.node.methods).flatMap(List::stream).map(m -> m.instructions.spliterator()).flatMap(insns -> StreamSupport.stream(insns, false))\n          .filter(ain -> ain.getOpcode() == LDC && ((LdcInsnNode) ain).cst.equals(mostCommon)).map(ain -> (LdcInsnNode) ain).forEach(ldc -> ldc.cst = 1337133713371337L);\n      return true;\n    } catch (Exception e) {\n      logger.error(\"Failure\", e);\n      return false;\n    }\n  }", "url": "https://raw.githubusercontent.com/GraxCode/threadtear/master/src/me/nov/threadtear/execution/allatori/ExpirationDateRemoverAllatori.java", "stars": "140", "class_props": {"extends": "Execution", "implements": ["IConstantReferenceHandler"], "modifiers": ["public"]}}, {"id": 80322, "method_name": "counting", "class_name": "ExpirationDateRemoverAllatori", "params": [], "throws": null, "modifiers": ["public", "static"], "return_type": "Collector<T,?,Long>", "snippet": "  public static <T> Collector<T, ?, Long> counting() {\n    return Collectors.reducing(0L, (var0) -> {\n      return 1L;\n    }, Long::sum);\n  }", "url": "https://raw.githubusercontent.com/GraxCode/threadtear/master/src/me/nov/threadtear/execution/allatori/ExpirationDateRemoverAllatori.java", "stars": "140", "class_props": {"extends": "Execution", "implements": ["IConstantReferenceHandler"], "modifiers": ["public"]}}, {"id": 80323, "method_name": "getFieldValueOrNull", "class_name": "ExpirationDateRemoverAllatori", "params": ["BasicValue", "String", "String", "String"], "throws": null, "modifiers": ["public"], "return_type": "Object", "snippet": "  public Object getFieldValueOrNull(BasicValue v, String owner, String name, String desc) {\n    return null;\n  }", "url": "https://raw.githubusercontent.com/GraxCode/threadtear/master/src/me/nov/threadtear/execution/allatori/ExpirationDateRemoverAllatori.java", "stars": "140", "class_props": {"extends": "Execution", "implements": ["IConstantReferenceHandler"], "modifiers": ["public"]}}, {"id": 80324, "method_name": "getMethodReturnOrNull", "class_name": "ExpirationDateRemoverAllatori", "params": ["BasicValue", "String", "String", "String", "List<ConstantValue>"], "throws": null, "modifiers": ["public"], "return_type": "Object", "snippet": "  public Object getMethodReturnOrNull(BasicValue v, String owner, String name, String desc, List<? extends ConstantValue> values) {\n    return null;\n  }", "url": "https://raw.githubusercontent.com/GraxCode/threadtear/master/src/me/nov/threadtear/execution/allatori/ExpirationDateRemoverAllatori.java", "stars": "140", "class_props": {"extends": "Execution", "implements": ["IConstantReferenceHandler"], "modifiers": ["public"]}}, {"id": 80325, "method_name": "main", "class_name": "MyMathException", "params": ["String"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void main(String args[]){\n        try {\n            System.out.println(MyMath.div(10,0));\n        }catch (Exception e){\n            e.printStackTrace();\n        }\n\n    }", "url": "https://raw.githubusercontent.com/hzc869046779/JAVA-STUDY/master/src/javaStudy/ExceptionStudy/MyMathException.java", "stars": "10", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 80326, "method_name": "div", "class_name": "MyMath", "params": ["int", "int"], "throws": ["Exception"], "modifiers": ["public", "static"], "return_type": "int", "snippet": "    public static int div(int x,int y) throws Exception{\n        int temp=0;\n        System.out.println(\"\u9664\u6cd5\u8ba1\u7b97\u5f00\u59cb\");\n        try {\n            temp = x/y;\n        }catch (Exception e){\n            throw e;\n        }finally {\n            System.out.println(\"\u9664\u6cd5\u8ba1\u7b97\u7ed3\u675f\");\n        }\n        return temp;\n    }", "url": "https://raw.githubusercontent.com/hzc869046779/JAVA-STUDY/master/src/javaStudy/ExceptionStudy/MyMathException.java", "stars": "10", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 80327, "method_name": "getOperandString", "class_name": "TMM", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getOperandString() {\n        switch (mode) {\n        case MODE_INDEXED:\n            return String.format(\"$%02x,X,#$%02x\", (operand & 0x00ff), ((operand & 0xff00) >> 8));\n        default:\n            return super.getOperandString();\n        }\n    }", "url": "https://raw.githubusercontent.com/kemusiro/jr100-emulator-v2/master/src/jp/asamomiji/assembler/TMM.java", "stars": "4", "class_props": {"extends": "NonBranchInstruction", "implements": null, "modifiers": ["public"]}}, {"id": 80328, "method_name": "main", "class_name": "RunMirai", "params": ["String"], "throws": ["InterruptedException"], "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void main(String[] args) throws InterruptedException {\n        // \u9ed8\u8ba4\u5728 /test \u76ee\u5f55\u4e0b\u8fd0\u884c\n\n        MiraiConsolePureLoader.load(args[0], args[1]); // \u542f\u52a8 console\n\n        // \u963b\u6b62\u4e3b\u7ebf\u7a0b\u9000\u51fa\n        BuildersKt.runBlocking(GlobalScope.INSTANCE.getCoroutineContext(), (coroutineScope, continuation) -> CommandManager.INSTANCE.join(continuation));\n    }", "url": "https://raw.githubusercontent.com/luzy99/IOT-Terminal/master/MqttTrans/src/test/java/mirai/RunMirai.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 80329, "method_name": "getModel", "class_name": "DataSource", "params": [], "throws": null, "modifiers": ["public"], "return_type": "DataSourceModel", "snippet": "    public DataSourceModel getModel() {\n        return model;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/service/src/main/java/com/webank/wedatasphere/exchangis/datasource/domain/DataSource.java", "stars": "23", "class_props": {"extends": "DataSourceBase", "implements": null, "modifiers": ["public"]}}, {"id": 80330, "method_name": "setModel", "class_name": "DataSource", "params": ["DataSourceModel"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setModel(DataSourceModel model) {\n        this.model = model;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/service/src/main/java/com/webank/wedatasphere/exchangis/datasource/domain/DataSource.java", "stars": "23", "class_props": {"extends": "DataSourceBase", "implements": null, "modifiers": ["public"]}}, {"id": 80331, "method_name": "getAuthScopes", "class_name": "DataSource", "params": [], "throws": null, "modifiers": ["public"], "return_type": "List<String>", "snippet": "    public List<String> getAuthScopes() {\n        return authScopes;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/service/src/main/java/com/webank/wedatasphere/exchangis/datasource/domain/DataSource.java", "stars": "23", "class_props": {"extends": "DataSourceBase", "implements": null, "modifiers": ["public"]}}, {"id": 80332, "method_name": "setAuthScopes", "class_name": "DataSource", "params": ["List<String>"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setAuthScopes(List<String> authScopes) {\n        this.authScopes = authScopes;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/service/src/main/java/com/webank/wedatasphere/exchangis/datasource/domain/DataSource.java", "stars": "23", "class_props": {"extends": "DataSourceBase", "implements": null, "modifiers": ["public"]}}, {"id": 80333, "method_name": "setModifyUser", "class_name": "DataSource", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setModifyUser(String modifyUser) {\n        super.setModifyUser(modifyUser);\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/service/src/main/java/com/webank/wedatasphere/exchangis/datasource/domain/DataSource.java", "stars": "23", "class_props": {"extends": "DataSourceBase", "implements": null, "modifiers": ["public"]}}, {"id": 80334, "method_name": "setCreateUser", "class_name": "DataSource", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setCreateUser(String createUser) {\n        super.setCreateUser(createUser);\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/service/src/main/java/com/webank/wedatasphere/exchangis/datasource/domain/DataSource.java", "stars": "23", "class_props": {"extends": "DataSourceBase", "implements": null, "modifiers": ["public"]}}, {"id": 80335, "method_name": "getModifyUser", "class_name": "DataSource", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getModifyUser() {\n        return super.getModifyUser();\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/service/src/main/java/com/webank/wedatasphere/exchangis/datasource/domain/DataSource.java", "stars": "23", "class_props": {"extends": "DataSourceBase", "implements": null, "modifiers": ["public"]}}, {"id": 80336, "method_name": "getCreateUser", "class_name": "DataSource", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getCreateUser() {\n        return super.getCreateUser();\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/service/src/main/java/com/webank/wedatasphere/exchangis/datasource/domain/DataSource.java", "stars": "23", "class_props": {"extends": "DataSourceBase", "implements": null, "modifiers": ["public"]}}, {"id": 80337, "method_name": "onAttach", "class_name": "MainFragment", "params": ["Context"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onAttach(@NotNull Context context) {\n        super.onAttach(context);\n    }", "url": "https://raw.githubusercontent.com/idanapp/IdanPlusPlus/master/app/src/main/java/com/example/idan/plusplus/ui/MainFragment.java", "stars": "9", "class_props": {"extends": "BrowseSupportFragment", "implements": null, "modifiers": ["public"]}}, {"id": 80338, "method_name": "hasPermissions", "class_name": "MainFragment", "params": ["Context", "String"], "throws": null, "modifiers": ["static", "private"], "return_type": "boolean", "snippet": "    private static boolean hasPermissions(Context context, String... permissions) {\n        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.M && context != null && permissions != null) {\n            for (String permission : permissions) {\n                if (ActivityCompat.checkSelfPermission(context, permission) != PackageManager.PERMISSION_GRANTED) {\n                    return false;\n                }\n            }\n        }\n        return true;\n    }", "url": "https://raw.githubusercontent.com/idanapp/IdanPlusPlus/master/app/src/main/java/com/example/idan/plusplus/ui/MainFragment.java", "stars": "9", "class_props": {"extends": "BrowseSupportFragment", "implements": null, "modifiers": ["public"]}}, {"id": 80339, "method_name": "startUpdateTask", "class_name": "MainFragment", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void startUpdateTask()  {\n        GetUpdateAppAsyncTask updateAppAsyncTask = new GetUpdateAppAsyncTask(getActivity(), R.id.main_frame, (localVer, serverVer, file) -> {\n            if (localVer > 0 && serverVer > 0 && file != null) {\n                Intent intent = new Intent(getActivity(), AppUpdateDialogActivity.class);\n                intent.putExtra(\"NewVer\", serverVer);\n                intent.putExtra(\"OldVer\", localVer);\n                intent.putExtra(\"urlToUpdateFile\",file);\n                startActivity(intent);\n            } else if (localVer != -1 && serverVer != -1 && file != null) {\n                AlertDialog.Builder builder1 = new AlertDialog.Builder(getContext());\n                builder1.setTitle(Objects.requireNonNull(getActivity()).getString(R.string.UPDAE_ERROR_MSESSAGE_TITLE));\n                builder1.setNeutralButton(getActivity().getString(R.string.BTN_GOTIT), (dialogInterface, i) -> dialogInterface.dismiss());\n                builder1.setMessage(getActivity().getString(R.string.UPDAE_ERROR_MSESSAGE_TITLE));\n                AlertDialog alert11 = builder1.create();\n                alert11.setOnCancelListener(dialogInterface -> {\n                    getActivity().finish();\n                });\n                alert11.setOnDismissListener(dialogInterface -> {\n                    getActivity().finish();\n                });\n                alert11.show();\n            }\n        });\n        if (!BuildConfig.DEBUG) {\n            updateAppAsyncTask.execute();\n        }\n    }", "url": "https://raw.githubusercontent.com/idanapp/IdanPlusPlus/master/app/src/main/java/com/example/idan/plusplus/ui/MainFragment.java", "stars": "9", "class_props": {"extends": "BrowseSupportFragment", "implements": null, "modifiers": ["public"]}}, {"id": 80340, "method_name": "onRequestPermissionsResult", "class_name": "MainFragment", "params": ["int", "String", "int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onRequestPermissionsResult(int requestCode, @NonNull String[] permissions, @NonNull int[] grantResults) {\n        super.onRequestPermissionsResult(requestCode, permissions, grantResults);\n        if (requestCode == Constants.PERMISSION_REQUEST) {\n            if (grantResults.length > 0 && grantResults[0] == PackageManager.PERMISSION_GRANTED) {\n                try {\n\n                } catch (Exception e) {\n                    e.printStackTrace();\n                    getActivity().finish();\n                }\n            } else {\n                Toast.makeText(getContext(), \"The app was not allowed to write in your storage\", Toast.LENGTH_LONG).show();\n                Objects.requireNonNull(getActivity()).finish();\n            }\n        }\n    }", "url": "https://raw.githubusercontent.com/idanapp/IdanPlusPlus/master/app/src/main/java/com/example/idan/plusplus/ui/MainFragment.java", "stars": "9", "class_props": {"extends": "BrowseSupportFragment", "implements": null, "modifiers": ["public"]}}, {"id": 80341, "method_name": "onActivityCreated", "class_name": "MainFragment", "params": ["Bundle"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onActivityCreated(Bundle savedInstanceState) {\n        super.onActivityCreated(savedInstanceState);\n        prepareBackgroundManager();\n        setupUIElements();\n        setupEventListeners();\n        prepareEntranceTransition();\n\n        Objects.requireNonNull(getActivity()).getSupportFragmentManager().beginTransaction().add(R.id.main_frame, ((MainActivity)getActivity()).mSpinnerFragment).commit();\n        ListRowPresenter listRowPresenter = new ListRowPresenter();\n        mCategoryRowAdapter = new ArrayObjectAdapter(listRowPresenter);\n        mCategoryRowAdapter.clear();\n\n        loadStaticIsraelLiveChannelData();\n        loadStaticIsraelRadioChannelData();\n\n        startEntranceTransition();\n        setAdapter(mCategoryRowAdapter);\n        getActivity().getSupportFragmentManager().beginTransaction().remove(((MainActivity)getActivity()).mSpinnerFragment).commit();\n        switch (Utils.checkAppStart(getContext())) {\n            case NORMAL:\n                break;\n            case FIRST_TIME_VERSION:\n                showPopups( getString(R.string.WHAT_IS_NEW_TXT) +\n                        getString(R.string.ENGLISH_DISCLAMIER) +\n                        getString(R.string.HEBREW_DISCLAMIER));\n                break;\n            case FIRST_TIME:\n                showPopups(getString(R.string.ENGLISH_DISCLAMIER) +\n                        getString(R.string.HEBREW_DISCLAMIER));\n                break;\n            default:\n                break;\n        }\n        startUpdateTask();\n    }", "url": "https://raw.githubusercontent.com/idanapp/IdanPlusPlus/master/app/src/main/java/com/example/idan/plusplus/ui/MainFragment.java", "stars": "9", "class_props": {"extends": "BrowseSupportFragment", "implements": null, "modifiers": ["public"]}}, {"id": 80342, "method_name": "onDestroy", "class_name": "MainFragment", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onDestroy() {\n        if (null != mBackgroundTimer) {\n            mBackgroundTimer.cancel();\n            mBackgroundTimer = null;\n        }\n        mBackgroundManager = null;\n        Utils.disposedServices();\n        super.onDestroy();\n    }", "url": "https://raw.githubusercontent.com/idanapp/IdanPlusPlus/master/app/src/main/java/com/example/idan/plusplus/ui/MainFragment.java", "stars": "9", "class_props": {"extends": "BrowseSupportFragment", "implements": null, "modifiers": ["public"]}}, {"id": 80343, "method_name": "onStop", "class_name": "MainFragment", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onStop() {\n        if (mBackgroundManager != null)\n            mBackgroundManager.release();\n        super.onStop();\n    }", "url": "https://raw.githubusercontent.com/idanapp/IdanPlusPlus/master/app/src/main/java/com/example/idan/plusplus/ui/MainFragment.java", "stars": "9", "class_props": {"extends": "BrowseSupportFragment", "implements": null, "modifiers": ["public"]}}, {"id": 80344, "method_name": "onStart", "class_name": "MainFragment", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onStart() {\n        Utils.disposedServices();\n        if (Build.VERSION.SDK_INT >= 23) {\n            String[] PERMISSIONS = {\n                    android.Manifest.permission.WRITE_EXTERNAL_STORAGE,\n                    Manifest.permission.RECORD_AUDIO\n            };\n            if (!hasPermissions(getContext(), PERMISSIONS)) {\n                requestPermissions(PERMISSIONS,Constants.PERMISSION_REQUEST);\n            } else {\n                try {\n\n                } catch (Exception e) {\n                    e.printStackTrace();\n                    getActivity().finish();\n                }\n            }\n        } else {\n            try {\n\n            } catch (Exception e) {\n                e.printStackTrace();\n                getActivity().finish();\n            }\n        }\n        super.onStart();\n    }", "url": "https://raw.githubusercontent.com/idanapp/IdanPlusPlus/master/app/src/main/java/com/example/idan/plusplus/ui/MainFragment.java", "stars": "9", "class_props": {"extends": "BrowseSupportFragment", "implements": null, "modifiers": ["public"]}}, {"id": 80345, "method_name": "onResume", "class_name": "MainFragment", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onResume() {\n        super.onResume();\n    }", "url": "https://raw.githubusercontent.com/idanapp/IdanPlusPlus/master/app/src/main/java/com/example/idan/plusplus/ui/MainFragment.java", "stars": "9", "class_props": {"extends": "BrowseSupportFragment", "implements": null, "modifiers": ["public"]}}, {"id": 80346, "method_name": "prepareBackgroundManager", "class_name": "MainFragment", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void prepareBackgroundManager() {\n        mBackgroundManager = BackgroundManager.getInstance(Objects.requireNonNull(getActivity()));\n        mDefaultBackground = getResources().getDrawable(R.drawable.default_background, null);\n        mMetrics = new DisplayMetrics();\n        getActivity().getWindowManager().getDefaultDisplay().getMetrics(mMetrics);\n    }", "url": "https://raw.githubusercontent.com/idanapp/IdanPlusPlus/master/app/src/main/java/com/example/idan/plusplus/ui/MainFragment.java", "stars": "9", "class_props": {"extends": "BrowseSupportFragment", "implements": null, "modifiers": ["public"]}}, {"id": 80347, "method_name": "setupUIElements", "class_name": "MainFragment", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void setupUIElements() {\n        setBadgeDrawable(\n                Objects.requireNonNull(getActivity()).getResources().getDrawable(R.drawable.logo_new, null));\n        setTitle(getString(R.string.browse_title)); // Badge, when set, takes precedent over title\n        setHeadersState(HEADERS_ENABLED);\n        setHeadersTransitionOnBackEnabled(false);\n        setBrandColor(ContextCompat.getColor(getActivity(), R.color.fastlane_background));\n        setHeaderPresenterSelector(new PresenterSelector() {\n            @Override\n            public Presenter getPresenter(Object o) {\n                return new IconHeaderItemPresenter();\n            }\n        });\n    }", "url": "https://raw.githubusercontent.com/idanapp/IdanPlusPlus/master/app/src/main/java/com/example/idan/plusplus/ui/MainFragment.java", "stars": "9", "class_props": {"extends": "BrowseSupportFragment", "implements": null, "modifiers": ["public"]}}, {"id": 80348, "method_name": "setupEventListeners", "class_name": "MainFragment", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void setupEventListeners() {\n        setOnItemViewClickedListener(new ItemViewClickedListener());\n        setOnItemViewSelectedListener(new ItemViewSelectedListener());\n    }", "url": "https://raw.githubusercontent.com/idanapp/IdanPlusPlus/master/app/src/main/java/com/example/idan/plusplus/ui/MainFragment.java", "stars": "9", "class_props": {"extends": "BrowseSupportFragment", "implements": null, "modifiers": ["public"]}}, {"id": 80349, "method_name": "loadStaticIsraelLiveChannelData", "class_name": "MainFragment", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void loadStaticIsraelLiveChannelData() {\n        List<GridItem> list = Utils.getStaticIsraelLiveChannelsData(getContext());\n        GridCardPresenter gridCardPresenter = new GridCardPresenter(mThis);\n        HeaderItem header = new HeaderItem(1,getString(R.string.ISRAEL_LIVE_CHANNELS_CATEGORY));\n        ArrayObjectAdapter listRowAdapter = new ArrayObjectAdapter(gridCardPresenter);\n        listRowAdapter.addAll(0,list);\n        mCategoryRowAdapter.add(new ListRow(header, listRowAdapter));\n    }", "url": "https://raw.githubusercontent.com/idanapp/IdanPlusPlus/master/app/src/main/java/com/example/idan/plusplus/ui/MainFragment.java", "stars": "9", "class_props": {"extends": "BrowseSupportFragment", "implements": null, "modifiers": ["public"]}}, {"id": 80350, "method_name": "loadStaticIsraelRadioChannelData", "class_name": "MainFragment", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void loadStaticIsraelRadioChannelData() {\n        List<GridItem> list = Utils.getStaticIsraelRadioData(getContext());\n        GridCardPresenter gridCardPresenter = new GridCardPresenter(mThis);\n        HeaderItem header = new HeaderItem(0,getString(R.string.ISRAEL_RADIO_CHANNELS_CATEGORY));\n        ArrayObjectAdapter listRowAdapter = new ArrayObjectAdapter(gridCardPresenter);\n        listRowAdapter.addAll(0,list);\n        mCategoryRowAdapter.add(new ListRow(header, listRowAdapter));\n    }", "url": "https://raw.githubusercontent.com/idanapp/IdanPlusPlus/master/app/src/main/java/com/example/idan/plusplus/ui/MainFragment.java", "stars": "9", "class_props": {"extends": "BrowseSupportFragment", "implements": null, "modifiers": ["public"]}}, {"id": 80351, "method_name": "showPopups", "class_name": "MainFragment", "params": ["String"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void showPopups(String msg) {\n        AlertDialog.Builder builder1 = new AlertDialog.Builder(getContext());\n        builder1.setMessage(Html.fromHtml(msg));\n        builder1.setCancelable(true);\n        builder1.setPositiveButton(\n                R.string.BTN_GOTIT,\n                (dialog, id) -> dialog.cancel());\n\n        AlertDialog alert11 = builder1.create();\n        alert11.show();\n        ((TextView)alert11.findViewById(android.R.id.message)).setMovementMethod(LinkMovementMethod.getInstance());\n    }", "url": "https://raw.githubusercontent.com/idanapp/IdanPlusPlus/master/app/src/main/java/com/example/idan/plusplus/ui/MainFragment.java", "stars": "9", "class_props": {"extends": "BrowseSupportFragment", "implements": null, "modifiers": ["public"]}}, {"id": 80352, "method_name": "onItemClicked", "class_name": "ItemViewClickedListener", "params": ["Presenter", "Object", "RowPresenter", "Row"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "        public void onItemClicked(Presenter.ViewHolder itemViewHolder, Object item,\n                                  RowPresenter.ViewHolder rowViewHolder, Row row) {\n            //showPopups();\n            if (item instanceof GridItem) {\n                GridItem gridItem = (GridItem)item;\n                Utils.gridItemClicked(getActivity(),R.id.main_frame,gridItem);\n            }\n\n        }", "url": "https://raw.githubusercontent.com/idanapp/IdanPlusPlus/master/app/src/main/java/com/example/idan/plusplus/ui/MainFragment.java", "stars": "9", "class_props": {"extends": null, "implements": ["OnItemViewClickedListener"], "modifiers": ["final", "private"]}}, {"id": 80353, "method_name": "onItemSelected", "class_name": "ItemViewSelectedListener", "params": ["Presenter", "Object", "RowPresenter", "Row"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "        public void onItemSelected(Presenter.ViewHolder itemViewHolder, Object item,\n                                   RowPresenter.ViewHolder rowViewHolder, Row row) {\n\n        }", "url": "https://raw.githubusercontent.com/idanapp/IdanPlusPlus/master/app/src/main/java/com/example/idan/plusplus/ui/MainFragment.java", "stars": "9", "class_props": {"extends": null, "implements": ["OnItemViewSelectedListener"], "modifiers": ["final", "private"]}}, {"id": 80354, "method_name": "saisirInfosIdentiteDepuisAccueil_devrait_retourner_la_page_de_saisie_d_identite_quand_le_cookie_code_postal_n_est_pas_present", "class_name": "SaisieIdentiteDemandeurControllerTest", "params": [], "throws": ["Exception"], "modifiers": [], "return_type": "void", "snippet": "    void saisirInfosIdentiteDepuisAccueil_devrait_retourner_la_page_de_saisie_d_identite_quand_le_cookie_code_postal_n_est_pas_present() throws Exception {\n        // Given\n        Cookie cookieTypeRemettant = new Cookie(NOM_COOKIE_TYPE_REMETTANT, TYPE_REMETTANT);\n\n        // When Then\n        mockMvc.perform(MockMvcRequestBuilders.get(\"/saisie-identite-demandeur\")\n                .cookie(cookieTypeRemettant))\n                .andExpect(view().name(\"redirect:/\"))\n                .andExpect(status().is3xxRedirection());\n    }", "url": "https://raw.githubusercontent.com/LAB-MI/remise-masques-covid-19/master/src/test/java/fr/gouv/interieur/dmgp/remettant/application/ui/SaisieIdentiteDemandeurControllerTest.java", "stars": "5", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 80355, "method_name": "saisirInfosIdentiteDepuisAccueil_devrait_retourner_la_page_de_saisie_d_identite_quand_le_cookie_type_remettant_n_est_pas_present", "class_name": "SaisieIdentiteDemandeurControllerTest", "params": [], "throws": ["Exception"], "modifiers": [], "return_type": "void", "snippet": "    void saisirInfosIdentiteDepuisAccueil_devrait_retourner_la_page_de_saisie_d_identite_quand_le_cookie_type_remettant_n_est_pas_present() throws Exception {\n        // Given\n        Cookie cookieCodePostal = new Cookie(NOM_COOKIE_CODE_POSTAL_REMETTANT, CODE_POSTAL);\n\n        // When Then\n        mockMvc.perform(MockMvcRequestBuilders.get(\"/saisie-identite-demandeur\")\n                .cookie(cookieCodePostal))\n                .andExpect(view().name(\"redirect:/\"))\n                .andExpect(status().is3xxRedirection());\n    }", "url": "https://raw.githubusercontent.com/LAB-MI/remise-masques-covid-19/master/src/test/java/fr/gouv/interieur/dmgp/remettant/application/ui/SaisieIdentiteDemandeurControllerTest.java", "stars": "5", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 80356, "method_name": "saisirInfosIdentiteDepuisAccueil_devrait_retourner_la_page_de_saisie_d_identite_quand_les_cookies_sont_presents", "class_name": "SaisieIdentiteDemandeurControllerTest", "params": [], "throws": ["Exception"], "modifiers": [], "return_type": "void", "snippet": "    void saisirInfosIdentiteDepuisAccueil_devrait_retourner_la_page_de_saisie_d_identite_quand_les_cookies_sont_presents() throws Exception {\n        Cookie cookieCodePostal = new Cookie(NOM_COOKIE_CODE_POSTAL_REMETTANT, CODE_POSTAL);\n        Cookie cookieTypeRemettant = new Cookie(NOM_COOKIE_TYPE_REMETTANT, TYPE_REMETTANT);\n\n        // When Then\n        mockMvc.perform(MockMvcRequestBuilders.get(\"/saisie-identite-demandeur\")\n                .cookie(cookieCodePostal, cookieTypeRemettant))\n                .andExpect(view().name(\"saisie-identite-demandeur\"))\n                .andExpect(status().isOk())\n                .andExpect(content().string(containsString(\"Informations sur le demandeur de masques\")));\n    }", "url": "https://raw.githubusercontent.com/LAB-MI/remise-masques-covid-19/master/src/test/java/fr/gouv/interieur/dmgp/remettant/application/ui/SaisieIdentiteDemandeurControllerTest.java", "stars": "5", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 80357, "method_name": "saisirInfosIdentite_devrait_creer_les_cookies_remettant_et_retourner_la_page_de_saisie_d_identite", "class_name": "SaisieIdentiteDemandeurControllerTest", "params": [], "throws": ["Exception"], "modifiers": [], "return_type": "void", "snippet": "    void saisirInfosIdentite_devrait_creer_les_cookies_remettant_et_retourner_la_page_de_saisie_d_identite() throws Exception {\n        // When Then\n        String codePostal = \"97420\";\n        String typeRemettant = \"Mairie\";\n        mockMvc.perform(MockMvcRequestBuilders.post(\"/saisie-identite-demandeur\")\n                .param(\"code-postal\", codePostal)\n                .param(\"type-remettant\", typeRemettant))\n                .andExpect(view().name(\"saisie-identite-demandeur\"))\n                .andExpect(expectedCookie(NOM_COOKIE_CODE_POSTAL_REMETTANT, codePostal))\n                .andExpect(expectedCookie(NOM_COOKIE_TYPE_REMETTANT, typeRemettant))\n                .andExpect(status().isOk())\n                .andExpect(content().string(containsString(\"Informations sur le demandeur de masques\")));\n    }", "url": "https://raw.githubusercontent.com/LAB-MI/remise-masques-covid-19/master/src/test/java/fr/gouv/interieur/dmgp/remettant/application/ui/SaisieIdentiteDemandeurControllerTest.java", "stars": "5", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 80358, "method_name": "expectedCookie", "class_name": "SaisieIdentiteDemandeurControllerTest", "params": ["String", "String"], "throws": null, "modifiers": ["private"], "return_type": "ResultMatcher", "snippet": "    private ResultMatcher expectedCookie(String nom, String valeur) {\n        return matchAll(\n                cookie().value(nom, valeur),\n                cookie().httpOnly(nom, true),\n                cookie().path(nom, \"/\"),\n                cookie().secure(nom, false),\n                cookie().maxAge(nom, DUREE_DE_VIE_COOKIE_JOURS * 24 * 60 * 60)\n        );\n    }", "url": "https://raw.githubusercontent.com/LAB-MI/remise-masques-covid-19/master/src/test/java/fr/gouv/interieur/dmgp/remettant/application/ui/SaisieIdentiteDemandeurControllerTest.java", "stars": "5", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 80359, "method_name": "setView", "class_name": "BootLogoFragment", "params": [], "throws": null, "modifiers": ["protected"], "return_type": "int", "snippet": "    protected int setView() {\n        return R.layout.boot_logo;\n    }", "url": "https://raw.githubusercontent.com/CoboVault/cobo-vault-cold/master/app/src/main/java/com/cobo/cold/ui/fragment/BootLogoFragment.java", "stars": "13", "class_props": {"extends": "BaseFragment", "implements": null, "modifiers": ["public"]}}, {"id": 80360, "method_name": "init", "class_name": "BootLogoFragment", "params": ["View"], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void init(View view) {\n        new Handler().postDelayed(()-> {\n            if (Utilities.hasLanguageSet(mActivity)\n                    && Utilities.hasVaultCreated(mActivity)) {\n                navigate(R.id.action_splash_to_securityCheck);\n            } else {\n                navigate(R.id.action_splash_to_setupLanguage);\n            }\n        }, SPLASH_DURATION);\n    }", "url": "https://raw.githubusercontent.com/CoboVault/cobo-vault-cold/master/app/src/main/java/com/cobo/cold/ui/fragment/BootLogoFragment.java", "stars": "13", "class_props": {"extends": "BaseFragment", "implements": null, "modifiers": ["public"]}}, {"id": 80361, "method_name": "initData", "class_name": "BootLogoFragment", "params": ["Bundle"], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void initData(Bundle savedInstanceState) {\n\n    }", "url": "https://raw.githubusercontent.com/CoboVault/cobo-vault-cold/master/app/src/main/java/com/cobo/cold/ui/fragment/BootLogoFragment.java", "stars": "13", "class_props": {"extends": "BaseFragment", "implements": null, "modifiers": ["public"]}}, {"id": 80362, "method_name": "resolve", "class_name": "MethodResolver", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void resolve() {\n    annotationBuilder.parseStatement(method);\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/builder/annotation/MethodResolver.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 80363, "method_name": "onCreate", "class_name": "VideoFragment", "params": ["Bundle"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n\n\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/app/src/main/java/com/example/gsyvideoplayer/fragment/VideoFragment.java", "stars": "2", "class_props": {"extends": "Fragment", "implements": null, "modifiers": ["public"]}}, {"id": 80364, "method_name": "onCreateView", "class_name": "VideoFragment", "params": ["LayoutInflater", "ViewGroup", "Bundle"], "throws": null, "modifiers": ["public"], "return_type": "View", "snippet": "    public View onCreateView(LayoutInflater inflater, ViewGroup container,\n                             Bundle savedInstanceState) {\n        // Inflate the layout for this fragment\n        View view = inflater.inflate(R.layout.fragment_video, container, false);\n\n        ButterKnife.bind(this, view);\n\n        resolveData();\n\n        final RecyclerNormalAdapter recyclerNormalAdapter = new RecyclerNormalAdapter(getActivity(), dataList);\n        linearLayoutManager = new LinearLayoutManager(getActivity());\n        videoList.setLayoutManager(linearLayoutManager);\n        videoList.setAdapter(recyclerNormalAdapter);\n\n        videoList.addOnScrollListener(new RecyclerView.OnScrollListener() {\n\n            int firstVisibleItem, lastVisibleItem;\n\n            @Override\n            public void onScrollStateChanged(RecyclerView recyclerView, int newState) {\n                super.onScrollStateChanged(recyclerView, newState);\n            }\n\n            @Override\n            public void onScrolled(RecyclerView recyclerView, int dx, int dy) {\n                super.onScrolled(recyclerView, dx, dy);\n                firstVisibleItem = linearLayoutManager.findFirstVisibleItemPosition();\n                lastVisibleItem = linearLayoutManager.findLastVisibleItemPosition();\n                //\u5927\u4e8e0\u8bf4\u660e\u6709\u64ad\u653e\n                if (GSYVideoManager.instance().getPlayPosition() >= 0) {\n                    //\u5f53\u524d\u64ad\u653e\u7684\u4f4d\u7f6e\n                    int position = GSYVideoManager.instance().getPlayPosition();\n                    //\u5bf9\u5e94\u7684\u64ad\u653e\u5217\u8868TAG\n                    if (GSYVideoManager.instance().getPlayTag().equals(RecyclerItemNormalHolder.TAG)\n                            && (position < firstVisibleItem || position > lastVisibleItem)) {\n                        //\u5982\u679c\u6ed1\u51fa\u53bb\u4e86\u4e0a\u9762\u548c\u4e0b\u9762\u5c31\u662f\u5426\uff0c\u548c\u4eca\u65e5\u5934\u6761\u4e00\u6837\n                        if(!GSYVideoManager.isFullState(getActivity())) {\n                            GSYVideoManager.releaseAllVideos();\n                            recyclerNormalAdapter.notifyDataSetChanged();\n                        }\n                    }\n                }\n            }\n        });\n\n        return view;\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/app/src/main/java/com/example/gsyvideoplayer/fragment/VideoFragment.java", "stars": "2", "class_props": {"extends": "Fragment", "implements": null, "modifiers": ["public"]}}, {"id": 80365, "method_name": "onBackPressed", "class_name": "VideoFragment", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean onBackPressed() {\n        if (GSYVideoManager.backFromWindowFull(getActivity())) {\n            return true;\n        }\n        return false;\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/app/src/main/java/com/example/gsyvideoplayer/fragment/VideoFragment.java", "stars": "2", "class_props": {"extends": "Fragment", "implements": null, "modifiers": ["public"]}}, {"id": 80366, "method_name": "onPause", "class_name": "VideoFragment", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onPause() {\n        super.onPause();\n        GSYVideoManager.onPause();\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/app/src/main/java/com/example/gsyvideoplayer/fragment/VideoFragment.java", "stars": "2", "class_props": {"extends": "Fragment", "implements": null, "modifiers": ["public"]}}, {"id": 80367, "method_name": "onResume", "class_name": "VideoFragment", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onResume() {\n        super.onResume();\n        GSYVideoManager.onResume();\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/app/src/main/java/com/example/gsyvideoplayer/fragment/VideoFragment.java", "stars": "2", "class_props": {"extends": "Fragment", "implements": null, "modifiers": ["public"]}}, {"id": 80368, "method_name": "onDestroy", "class_name": "VideoFragment", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onDestroy() {\n        super.onDestroy();\n        GSYVideoManager.releaseAllVideos();\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/app/src/main/java/com/example/gsyvideoplayer/fragment/VideoFragment.java", "stars": "2", "class_props": {"extends": "Fragment", "implements": null, "modifiers": ["public"]}}, {"id": 80369, "method_name": "resolveData", "class_name": "VideoFragment", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void resolveData() {\n        for (int i = 0; i < 19; i++) {\n            VideoModel videoModel = new VideoModel();\n            dataList.add(videoModel);\n        }\n        if (recyclerBaseAdapter != null)\n            recyclerBaseAdapter.notifyDataSetChanged();\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/app/src/main/java/com/example/gsyvideoplayer/fragment/VideoFragment.java", "stars": "2", "class_props": {"extends": "Fragment", "implements": null, "modifiers": ["public"]}}, {"id": 80370, "method_name": "Update", "class_name": "RigidBody", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void Update() {\n\t\tthis.yVelocity += acceleration * mass;\n\t\t\n\t\tfor(GameObject obj : gameObject.getParentScene().gameObjects) {\n\t\t\tif(obj.getID() == gameObject.getID())\n\t\t\t\tcontinue;\n\t\t\tif(obj.getComponent(\"Box Collider\") != null) {\n\t\t\t\tVector2 gameObjectPos = gameObject.getTransform().getPosition();\n\t\t\t\tVector2 colliderObjectPos = obj.getTransform().getPosition();\n\t\t\t\tVector2 gameObjectScale = gameObject.getTransform().getScale();\n\t\t\t\tVector2 colliderObjectScale = obj.getTransform().getScale();\n\t\t\t\t\n\t\t\t\tif(gameObjectPos.getX() + gameObjectScale.getX() < colliderObjectPos.getX()) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif(gameObjectPos.getX() > colliderObjectPos.getX() + colliderObjectScale.getX()) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif(gameObjectPos.getY() > colliderObjectPos.getY() + colliderObjectScale.getY()) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif(gameObjectPos.getY() + gameObjectScale.getY() < colliderObjectPos.getY()) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif(gameObjectPos.getY() + gameObjectScale.getY() > colliderObjectPos.getY() + 16 && gameObjectPos.getY() < colliderObjectPos.getY() + colliderObjectScale.getY() - 16) {\n\t\t\t\t\tif(((BoxCollider) obj.getComponent(\"Box Collider\")).trigger)\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\tif(gameObjectPos.getX() < colliderObjectPos.getX()) {\n\t\t\t\t\t\t// Right\n\t\t\t\t\t\tgameObjectPos.setX(colliderObjectPos.getX() - gameObjectScale.getX() - 1);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tif(gameObjectPos.getX() + gameObjectScale.getX() > colliderObjectPos.getX()) {\n\t\t\t\t\t\t// Left\n\t\t\t\t\t\tgameObjectPos.setX(colliderObjectPos.getX() + colliderObjectScale.getX() + 1);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif(gameObjectPos.getY() + gameObjectScale.getY() >= colliderObjectPos.getY()) {\n\t\t\t\t\tif(((BoxCollider) obj.getComponent(\"Box Collider\")).trigger)\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t// Bottom\n\t\t\t\t\tif(gameObjectPos.getY() + gameObjectScale.getY() > colliderObjectPos.getY()) {\n\t\t\t\t\t\tif(gameObjectPos.getY() + gameObjectScale.getY() < colliderObjectPos.getY() + 16) {\n\t\t\t\t\t\t\tgameObjectPos.subtractY(1);;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t// Top\n\t\t\t\t\tif(gameObjectPos.getY() + gameObjectScale.getY() > colliderObjectPos.getY()) {\n\t\t\t\t\t\tif(gameObjectPos.getY() + gameObjectScale.getY() > colliderObjectPos.getY() + colliderObjectScale.getY() - 16) {\n\t\t\t\t\t\t\tgameObjectPos.addY(1);;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tthis.yVelocity = 0;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tgameObject.getTransform().translate(new Vector2((int) xVelocity, (int) yVelocity));\n\t\txVelocity = 0;\n\t\t\n\t}", "url": "https://raw.githubusercontent.com/jabo-bernardo/Kree-Java/master/src/dev/jabo/kree/components/RigidBody.java", "stars": "33", "class_props": {"extends": "Component", "implements": null, "modifiers": ["public"]}}, {"id": 80371, "method_name": "addHorizontalForce", "class_name": "RigidBody", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void addHorizontalForce(int xForce) {\n\t\tthis.xVelocity = xForce;\n\t}", "url": "https://raw.githubusercontent.com/jabo-bernardo/Kree-Java/master/src/dev/jabo/kree/components/RigidBody.java", "stars": "33", "class_props": {"extends": "Component", "implements": null, "modifiers": ["public"]}}, {"id": 80372, "method_name": "setMass", "class_name": "RigidBody", "params": ["float"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void setMass(float mass) {\n\t\tthis.mass = mass;\n\t}", "url": "https://raw.githubusercontent.com/jabo-bernardo/Kree-Java/master/src/dev/jabo/kree/components/RigidBody.java", "stars": "33", "class_props": {"extends": "Component", "implements": null, "modifiers": ["public"]}}, {"id": 80373, "method_name": "Render", "class_name": "RigidBody", "params": ["Graphics"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void Render(Graphics g) {\n\t\t\n\t}", "url": "https://raw.githubusercontent.com/jabo-bernardo/Kree-Java/master/src/dev/jabo/kree/components/RigidBody.java", "stars": "33", "class_props": {"extends": "Component", "implements": null, "modifiers": ["public"]}}, {"id": 80374, "method_name": "validate", "class_name": "JobCallbackValidator", "params": ["String", "Props", "Props", "Collection<String>"], "throws": null, "modifiers": ["public", "static"], "return_type": "int", "snippet": "  public static int validate(final String jobName, final Props serverProps, final Props jobProps,\n      final Collection<String> errors) {\n    final int maxNumCallback =\n        serverProps.getInt(\n            JobCallbackConstants.MAX_CALLBACK_COUNT_PROPERTY_KEY,\n            JobCallbackConstants.DEFAULT_MAX_CALLBACK_COUNT);\n\n    final int maxPostBodyLength =\n        serverProps.getInt(MAX_POST_BODY_LENGTH_PROPERTY_KEY,\n            DEFAULT_POST_BODY_LENGTH);\n\n    int totalCallbackCount = 0;\n    for (final JobCallbackStatusEnum jobStatus : JobCallbackStatusEnum.values()) {\n      totalCallbackCount +=\n          validateBasedOnStatus(jobProps, errors, jobStatus, maxNumCallback,\n              maxPostBodyLength);\n    }\n\n    if (logger.isDebugEnabled()) {\n      logger.debug(\"Found \" + totalCallbackCount + \" job callbacks for job \"\n          + jobName);\n    }\n    return totalCallbackCount;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/jobcallback/JobCallbackValidator.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 80375, "method_name": "validateBasedOnStatus", "class_name": "JobCallbackValidator", "params": ["Props", "Collection<String>", "JobCallbackStatusEnum", "int", "int"], "throws": null, "modifiers": ["static", "private"], "return_type": "int", "snippet": "  private static int validateBasedOnStatus(final Props jobProps,\n      final Collection<String> errors, final JobCallbackStatusEnum jobStatus,\n      final int maxNumCallback, final int maxPostBodyLength) {\n\n    int callbackCount = 0;\n    // replace property templates with status\n    final String jobCallBackUrl =\n        JOB_CALLBACK_URL_TEMPLATE.replaceFirst(STATUS_TOKEN, jobStatus.name()\n            .toLowerCase());\n\n    final String requestMethod =\n        JOB_CALLBACK_REQUEST_METHOD_TEMPLATE.replaceFirst(STATUS_TOKEN,\n            jobStatus.name().toLowerCase());\n\n    final String httpBody =\n        JOB_CALLBACK_BODY_TEMPLATE.replaceFirst(STATUS_TOKEN, jobStatus.name()\n            .toLowerCase());\n\n    for (int i = 0; i <= maxNumCallback; i++) {\n      // callback url\n      final String callbackUrlKey =\n          jobCallBackUrl.replaceFirst(SEQUENCE_TOKEN, Integer.toString(i));\n      final String callbackUrlValue = jobProps.get(callbackUrlKey);\n\n      // sequence number should start at 1, this is to check for sequence\n      // number that starts a 0\n      if (i == 0) {\n        if (callbackUrlValue != null) {\n          errors.add(\"Sequence number starts at 1, not 0\");\n        }\n        continue;\n      }\n\n      if (callbackUrlValue == null || callbackUrlValue.length() == 0) {\n        break;\n      } else {\n        final String requestMethodKey =\n            requestMethod.replaceFirst(SEQUENCE_TOKEN, Integer.toString(i));\n\n        final String methodValue = jobProps.getString(requestMethodKey, HTTP_GET);\n\n        if (HTTP_POST.equals(methodValue)) {\n          // now try to get the post body\n          final String postBodyKey =\n              httpBody.replaceFirst(SEQUENCE_TOKEN, Integer.toString(i));\n          final String postBodyValue = jobProps.get(postBodyKey);\n          if (postBodyValue == null || postBodyValue.length() == 0) {\n            errors.add(\"No POST body was specified for job callback '\"\n                + callbackUrlValue + \"'\");\n          } else if (postBodyValue.length() > maxPostBodyLength) {\n            errors.add(\"POST body length is : \" + postBodyValue.length()\n                + \" which is larger than supported length of \"\n                + maxPostBodyLength);\n          } else {\n            callbackCount++;\n          }\n        } else if (HTTP_GET.equals(methodValue)) {\n          // that's cool\n          callbackCount++;\n        } else {\n          errors.add(\"Unsupported request method: \" + methodValue\n              + \" Only POST and GET are supported\");\n        }\n      }\n    }\n\n    return callbackCount;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/jobcallback/JobCallbackValidator.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 80376, "method_name": "generateRandomString", "class_name": "Code01_TrieTree", "params": ["int"], "throws": null, "modifiers": ["public", "static"], "return_type": "String", "snippet": "\tpublic static String generateRandomString(int strLen) {\n\t\tchar[] ans = new char[(int) (Math.random() * strLen) + 1];\n\t\tfor (int i = 0; i < ans.length; i++) {\n\t\t\tint value = (int) (Math.random() * 6);\n\t\t\tans[i] = (char) (97 + value);\n\t\t}\n\t\treturn String.valueOf(ans);\n\t}", "url": "https://raw.githubusercontent.com/algorithmzuo/algorithmbasic2020/master/src/class05/Code01_TrieTree.java", "stars": "27", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 80377, "method_name": "generateRandomStringArray", "class_name": "Code01_TrieTree", "params": ["int", "int"], "throws": null, "modifiers": ["public", "static"], "return_type": "String", "snippet": "\tpublic static String[] generateRandomStringArray(int arrLen, int strLen) {\n\t\tString[] ans = new String[(int) (Math.random() * arrLen) + 1];\n\t\tfor (int i = 0; i < ans.length; i++) {\n\t\t\tans[i] = generateRandomString(strLen);\n\t\t}\n\t\treturn ans;\n\t}", "url": "https://raw.githubusercontent.com/algorithmzuo/algorithmbasic2020/master/src/class05/Code01_TrieTree.java", "stars": "27", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 80378, "method_name": "main", "class_name": "Code01_TrieTree", "params": ["String"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "\tpublic static void main(String[] args) {\n\t\tint arrLen = 100;\n\t\tint strLen = 20;\n\t\tint testTimes = 100000;\n\t\tfor (int i = 0; i < testTimes; i++) {\n\t\t\tString[] arr = generateRandomStringArray(arrLen, strLen);\n\t\t\tTrie1 trie1 = new Trie1();\n\t\t\tTrie2 trie2 = new Trie2();\n\t\t\tRight right = new Right();\n\t\t\tfor (int j = 0; j < arr.length; j++) {\n\t\t\t\tdouble decide = Math.random();\n\t\t\t\tif (decide < 0.25) {\n\t\t\t\t\ttrie1.insert(arr[j]);\n\t\t\t\t\ttrie2.insert(arr[j]);\n\t\t\t\t\tright.insert(arr[j]);\n\t\t\t\t} else if (decide < 0.5) {\n\t\t\t\t\ttrie1.delete(arr[j]);\n\t\t\t\t\ttrie2.delete(arr[j]);\n\t\t\t\t\tright.delete(arr[j]);\n\t\t\t\t} else if (decide < 0.75) {\n\t\t\t\t\tint ans1 = trie1.search(arr[j]);\n\t\t\t\t\tint ans2 = trie2.search(arr[j]);\n\t\t\t\t\tint ans3 = right.search(arr[j]);\n\t\t\t\t\tif (ans1 != ans2 || ans2 != ans3) {\n\t\t\t\t\t\tSystem.out.println(\"Oops!\");\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tint ans1 = trie1.prefixNumber(arr[j]);\n\t\t\t\t\tint ans2 = trie2.prefixNumber(arr[j]);\n\t\t\t\t\tint ans3 = right.prefixNumber(arr[j]);\n\t\t\t\t\tif (ans1 != ans2 || ans2 != ans3) {\n\t\t\t\t\t\tSystem.out.println(\"Oops!\");\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tSystem.out.println(\"finish!\");\n\n\t}", "url": "https://raw.githubusercontent.com/algorithmzuo/algorithmbasic2020/master/src/class05/Code01_TrieTree.java", "stars": "27", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 80379, "method_name": "insert", "class_name": "Trie1", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\t\tpublic void insert(String word) {\n\t\t\tif (word == null) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tchar[] chs = word.toCharArray();\n\t\t\tNode1 node = root;\n\t\t\tnode.pass++;\n\t\t\tint index = 0;\n\t\t\tfor (int i = 0; i < chs.length; i++) { // \u4ece\u5de6\u5f80\u53f3\u904d\u5386\u5b57\u7b26\n\t\t\t\tindex = chs[i] - 'a'; // \u7531\u5b57\u7b26\uff0c\u5bf9\u5e94\u6210\u8d70\u5411\u54ea\u6761\u8def\n\t\t\t\tif (node.nexts[index] == null) {\n\t\t\t\t\tnode.nexts[index] = new Node1();\n\t\t\t\t}\n\t\t\t\tnode = node.nexts[index];\n\t\t\t\tnode.pass++;\n\t\t\t}\n\t\t\tnode.end++;\n\t\t}", "url": "https://raw.githubusercontent.com/algorithmzuo/algorithmbasic2020/master/src/class05/Code01_TrieTree.java", "stars": "27", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "static"]}}, {"id": 80380, "method_name": "delete", "class_name": "Trie1", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\t\tpublic void delete(String word) {\n\t\t\tif (search(word) != 0) {\n\t\t\t\tchar[] chs = word.toCharArray();\n\t\t\t\tNode1 node = root;\n\t\t\t\tnode.pass--;\n\t\t\t\tint index = 0;\n\t\t\t\tfor (int i = 0; i < chs.length; i++) {\n\t\t\t\t\tindex = chs[i] - 'a';\n\t\t\t\t\tif (--node.nexts[index].pass == 0) {\n\t\t\t\t\t\tnode.nexts[index] = null;\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tnode = node.nexts[index];\n\t\t\t\t}\n\t\t\t\tnode.end--;\n\t\t\t}\n\t\t}", "url": "https://raw.githubusercontent.com/algorithmzuo/algorithmbasic2020/master/src/class05/Code01_TrieTree.java", "stars": "27", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "static"]}}, {"id": 80381, "method_name": "search", "class_name": "Trie1", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "\t\tpublic int search(String word) {\n\t\t\tif (word == null) {\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t\tchar[] chs = word.toCharArray();\n\t\t\tNode1 node = root;\n\t\t\tint index = 0;\n\t\t\tfor (int i = 0; i < chs.length; i++) {\n\t\t\t\tindex = chs[i] - 'a';\n\t\t\t\tif (node.nexts[index] == null) {\n\t\t\t\t\treturn 0;\n\t\t\t\t}\n\t\t\t\tnode = node.nexts[index];\n\t\t\t}\n\t\t\treturn node.end;\n\t\t}", "url": "https://raw.githubusercontent.com/algorithmzuo/algorithmbasic2020/master/src/class05/Code01_TrieTree.java", "stars": "27", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "static"]}}, {"id": 80382, "method_name": "prefixNumber", "class_name": "Trie1", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "\t\tpublic int prefixNumber(String pre) {\n\t\t\tif (pre == null) {\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t\tchar[] chs = pre.toCharArray();\n\t\t\tNode1 node = root;\n\t\t\tint index = 0;\n\t\t\tfor (int i = 0; i < chs.length; i++) {\n\t\t\t\tindex = chs[i] - 'a';\n\t\t\t\tif (node.nexts[index] == null) {\n\t\t\t\t\treturn 0;\n\t\t\t\t}\n\t\t\t\tnode = node.nexts[index];\n\t\t\t}\n\t\t\treturn node.pass;\n\t\t}", "url": "https://raw.githubusercontent.com/algorithmzuo/algorithmbasic2020/master/src/class05/Code01_TrieTree.java", "stars": "27", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "static"]}}, {"id": 80383, "method_name": "insert", "class_name": "Trie2", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\t\tpublic void insert(String word) {\n\t\t\tif (word == null) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tchar[] chs = word.toCharArray();\n\t\t\tNode2 node = root;\n\t\t\tnode.pass++;\n\t\t\tint index = 0;\n\t\t\tfor (int i = 0; i < chs.length; i++) {\n\t\t\t\tindex = (int) chs[i];\n\t\t\t\tif (!node.nexts.containsKey(index)) {\n\t\t\t\t\tnode.nexts.put(index, new Node2());\n\t\t\t\t}\n\t\t\t\tnode = node.nexts.get(index);\n\t\t\t\tnode.pass++;\n\t\t\t}\n\t\t\tnode.end++;\n\t\t}", "url": "https://raw.githubusercontent.com/algorithmzuo/algorithmbasic2020/master/src/class05/Code01_TrieTree.java", "stars": "27", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "static"]}}, {"id": 80384, "method_name": "delete", "class_name": "Trie2", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\t\tpublic void delete(String word) {\n\t\t\tif (search(word) != 0) {\n\t\t\t\tchar[] chs = word.toCharArray();\n\t\t\t\tNode2 node = root;\n\t\t\t\tnode.pass--;\n\t\t\t\tint index = 0;\n\t\t\t\tfor (int i = 0; i < chs.length; i++) {\n\t\t\t\t\tindex = (int) chs[i];\n\t\t\t\t\tif (--node.nexts.get(index).pass == 0) {\n\t\t\t\t\t\tnode.nexts.remove(index);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tnode = node.nexts.get(index);\n\t\t\t\t}\n\t\t\t\tnode.end--;\n\t\t\t}\n\t\t}", "url": "https://raw.githubusercontent.com/algorithmzuo/algorithmbasic2020/master/src/class05/Code01_TrieTree.java", "stars": "27", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "static"]}}, {"id": 80385, "method_name": "search", "class_name": "Trie2", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "\t\tpublic int search(String word) {\n\t\t\tif (word == null) {\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t\tchar[] chs = word.toCharArray();\n\t\t\tNode2 node = root;\n\t\t\tint index = 0;\n\t\t\tfor (int i = 0; i < chs.length; i++) {\n\t\t\t\tindex = (int) chs[i];\n\t\t\t\tif (!node.nexts.containsKey(index)) {\n\t\t\t\t\treturn 0;\n\t\t\t\t}\n\t\t\t\tnode = node.nexts.get(index);\n\t\t\t}\n\t\t\treturn node.end;\n\t\t}", "url": "https://raw.githubusercontent.com/algorithmzuo/algorithmbasic2020/master/src/class05/Code01_TrieTree.java", "stars": "27", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "static"]}}, {"id": 80386, "method_name": "prefixNumber", "class_name": "Trie2", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "\t\tpublic int prefixNumber(String pre) {\n\t\t\tif (pre == null) {\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t\tchar[] chs = pre.toCharArray();\n\t\t\tNode2 node = root;\n\t\t\tint index = 0;\n\t\t\tfor (int i = 0; i < chs.length; i++) {\n\t\t\t\tindex = (int) chs[i];\n\t\t\t\tif (!node.nexts.containsKey(index)) {\n\t\t\t\t\treturn 0;\n\t\t\t\t}\n\t\t\t\tnode = node.nexts.get(index);\n\t\t\t}\n\t\t\treturn node.pass;\n\t\t}", "url": "https://raw.githubusercontent.com/algorithmzuo/algorithmbasic2020/master/src/class05/Code01_TrieTree.java", "stars": "27", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "static"]}}, {"id": 80387, "method_name": "insert", "class_name": "Right", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\t\tpublic void insert(String word) {\n\t\t\tif (!box.containsKey(word)) {\n\t\t\t\tbox.put(word, 1);\n\t\t\t} else {\n\t\t\t\tbox.put(word, box.get(word) + 1);\n\t\t\t}\n\t\t}", "url": "https://raw.githubusercontent.com/algorithmzuo/algorithmbasic2020/master/src/class05/Code01_TrieTree.java", "stars": "27", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "static"]}}, {"id": 80388, "method_name": "delete", "class_name": "Right", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\t\tpublic void delete(String word) {\n\t\t\tif (box.containsKey(word)) {\n\t\t\t\tif (box.get(word) == 1) {\n\t\t\t\t\tbox.remove(word);\n\t\t\t\t} else {\n\t\t\t\t\tbox.put(word, box.get(word) - 1);\n\t\t\t\t}\n\t\t\t}\n\t\t}", "url": "https://raw.githubusercontent.com/algorithmzuo/algorithmbasic2020/master/src/class05/Code01_TrieTree.java", "stars": "27", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "static"]}}, {"id": 80389, "method_name": "search", "class_name": "Right", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "\t\tpublic int search(String word) {\n\t\t\tif (!box.containsKey(word)) {\n\t\t\t\treturn 0;\n\t\t\t} else {\n\t\t\t\treturn box.get(word);\n\t\t\t}\n\t\t}", "url": "https://raw.githubusercontent.com/algorithmzuo/algorithmbasic2020/master/src/class05/Code01_TrieTree.java", "stars": "27", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "static"]}}, {"id": 80390, "method_name": "prefixNumber", "class_name": "Right", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "\t\tpublic int prefixNumber(String pre) {\n\t\t\tint count = 0;\n\t\t\tfor (String cur : box.keySet()) {\n\t\t\t\tif (cur.startsWith(pre)) {\n\t\t\t\t\tcount++;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn count;\n\t\t}", "url": "https://raw.githubusercontent.com/algorithmzuo/algorithmbasic2020/master/src/class05/Code01_TrieTree.java", "stars": "27", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "static"]}}, {"id": 80391, "method_name": "setRemindText", "class_name": "SimplePreference", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setRemindText(String s) {\n        remind = s;\n        notifyChanged();\n    }", "url": "https://raw.githubusercontent.com/CoboVault/cobo-vault-cold/master/app/src/main/java/com/cobo/cold/ui/preference/SimplePreference.java", "stars": "13", "class_props": {"extends": "Preference", "implements": null, "modifiers": ["public"]}}, {"id": 80392, "method_name": "setSummary", "class_name": "SimplePreference", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setSummary(int summaryResId) {\n        super.setSummary(summaryResId);\n    }", "url": "https://raw.githubusercontent.com/CoboVault/cobo-vault-cold/master/app/src/main/java/com/cobo/cold/ui/preference/SimplePreference.java", "stars": "13", "class_props": {"extends": "Preference", "implements": null, "modifiers": ["public"]}}, {"id": 80393, "method_name": "onBindViewHolder", "class_name": "SimplePreference", "params": ["PreferenceViewHolder"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onBindViewHolder(PreferenceViewHolder holder) {\n        super.onBindViewHolder(holder);\n        TextView remind = (TextView) holder.findViewById(R.id.remind);\n        remind.setText(this.remind);\n        this.holder = holder;\n    }", "url": "https://raw.githubusercontent.com/CoboVault/cobo-vault-cold/master/app/src/main/java/com/cobo/cold/ui/preference/SimplePreference.java", "stars": "13", "class_props": {"extends": "Preference", "implements": null, "modifiers": ["public"]}}, {"id": 80394, "method_name": "getViewHolder", "class_name": "SimplePreference", "params": [], "throws": null, "modifiers": ["public"], "return_type": "PreferenceViewHolder", "snippet": "    public PreferenceViewHolder getViewHolder() {\n        return holder;\n    }", "url": "https://raw.githubusercontent.com/CoboVault/cobo-vault-cold/master/app/src/main/java/com/cobo/cold/ui/preference/SimplePreference.java", "stars": "13", "class_props": {"extends": "Preference", "implements": null, "modifiers": ["public"]}}, {"id": 80395, "method_name": "getIndividualCacheDirectory", "class_name": "StorageUtils", "params": ["Context"], "throws": null, "modifiers": ["public", "static"], "return_type": "File", "snippet": "    public static File getIndividualCacheDirectory(Context context) {\n        File cacheDir = getCacheDirectory(context, true);\n        return new File(cacheDir, INDIVIDUAL_DIR_NAME);\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/com/shuyu/gsyvideoplayer/utils/StorageUtils.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 80396, "method_name": "getCacheDirectory", "class_name": "StorageUtils", "params": ["Context", "boolean"], "throws": null, "modifiers": ["static", "private"], "return_type": "File", "snippet": "    private static File getCacheDirectory(Context context, boolean preferExternal) {\n        File appCacheDir = null;\n        String externalStorageState;\n        try {\n            externalStorageState = Environment.getExternalStorageState();\n        } catch (NullPointerException e) { // (sh)it happens\n            externalStorageState = \"\";\n        }\n        if (preferExternal && MEDIA_MOUNTED.equals(externalStorageState)) {\n            appCacheDir = getExternalCacheDir(context);\n        }\n        if (appCacheDir == null) {\n            appCacheDir = context.getCacheDir();\n        }\n        if (appCacheDir == null) {\n            String cacheDirPath = \"/data/data/\" + context.getPackageName() + \"/cache/\";\n            appCacheDir = new File(cacheDirPath);\n        }\n        return appCacheDir;\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/com/shuyu/gsyvideoplayer/utils/StorageUtils.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 80397, "method_name": "getExternalCacheDir", "class_name": "StorageUtils", "params": ["Context"], "throws": null, "modifiers": ["static", "private"], "return_type": "File", "snippet": "    private static File getExternalCacheDir(Context context) {\n        File dataDir = new File(new File(Environment.getExternalStorageDirectory(), \"Android\"), \"data\");\n        File appCacheDir = new File(new File(dataDir, context.getPackageName()), \"cache\");\n        if (!appCacheDir.exists()) {\n            if (!appCacheDir.mkdirs()) {\n                return null;\n            }\n        }\n        return appCacheDir;\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/com/shuyu/gsyvideoplayer/utils/StorageUtils.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 80398, "method_name": "createMessageRequest", "class_name": "SIPRequestHeaderProvider", "params": ["Device", "String", "String", "String", "String"], "throws": ["ParseException", "InvalidArgumentException"], "modifiers": ["public"], "return_type": "Request", "snippet": "\tpublic Request createMessageRequest(Device device, String content, String viaTag, String fromTag, String toTag) throws ParseException, InvalidArgumentException {\n\t\tRequest request = null;\n\t\tHost host = device.getHost();\n\t\t// sipuri\n\t\tSipURI requestURI = layer.getAddressFactory().createSipURI(device.getDeviceId(), host.getAddress());\n\t\t// via\n\t\tArrayList<ViaHeader> viaHeaders = new ArrayList<ViaHeader>();\n\t\tViaHeader viaHeader = layer.getHeaderFactory().createViaHeader(sipConfig.getSipIp(), sipConfig.getSipPort(),\n\t\t\t\tdevice.getTransport(), viaTag);\n\t\tviaHeaders.add(viaHeader);\n\t\t// from\n\t\tSipURI fromSipURI = layer.getAddressFactory().createSipURI(device.getDeviceId(),\n\t\t\t\tsipConfig.getSipIp() + \":\" + sipConfig.getSipPort());\n\t\tAddress fromAddress = layer.getAddressFactory().createAddress(fromSipURI);\n\t\tFromHeader fromHeader = layer.getHeaderFactory().createFromHeader(fromAddress, fromTag);\n\t\t// to\n\t\tSipURI toSipURI = layer.getAddressFactory().createSipURI(device.getDeviceId(), host.getAddress());\n\t\tAddress toAddress = layer.getAddressFactory().createAddress(toSipURI);\n\t\tToHeader toHeader = layer.getHeaderFactory().createToHeader(toAddress, toTag);\n\t\t// callid\n\t\tCallIdHeader callIdHeader = device.getTransport().equals(\"TCP\") ? layer.getTcpSipProvider().getNewCallId()\n\t\t\t\t: layer.getUdpSipProvider().getNewCallId();\n\t\t// Forwards\n\t\tMaxForwardsHeader maxForwards = layer.getHeaderFactory().createMaxForwardsHeader(70);\n\t\t// ceq\n\t\tCSeqHeader cSeqHeader = layer.getHeaderFactory().createCSeqHeader(1L, Request.MESSAGE);\n\n\t\trequest = layer.getMessageFactory().createRequest(requestURI, Request.MESSAGE, callIdHeader, cSeqHeader, fromHeader,\n\t\t\t\ttoHeader, viaHeaders, maxForwards);\n\t\tContentTypeHeader contentTypeHeader = layer.getHeaderFactory().createContentTypeHeader(\"Application\", \"MANSCDP+xml\");\n\t\trequest.setContent(content, contentTypeHeader);\n\t\treturn request;\n\t}", "url": "https://raw.githubusercontent.com/swwheihei/wvp/master/src/main/java/com/genersoft/iot/vmp/gb28181/transmit/cmd/SIPRequestHeaderProvider.java", "stars": "29", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 80399, "method_name": "createInviteRequest", "class_name": "SIPRequestHeaderProvider", "params": ["Device", "String", "String", "String", "String"], "throws": ["ParseException", "InvalidArgumentException"], "modifiers": ["public"], "return_type": "Request", "snippet": "\tpublic Request createInviteRequest(Device device, String content, String viaTag, String fromTag, String toTag) throws ParseException, InvalidArgumentException {\n\t\tRequest request = null;\n\t\tHost host = device.getHost();\n\t\t//\u8bf7\u6c42\u884c\n\t\tSipURI requestLine = layer.getAddressFactory().createSipURI(device.getDeviceId(), host.getAddress());\n\t\t//via\n\t\tArrayList<ViaHeader> viaHeaders = new ArrayList<ViaHeader>();\n\t\tViaHeader viaHeader = layer.getHeaderFactory().createViaHeader(sipConfig.getSipIp(), sipConfig.getSipPort(), device.getTransport(), viaTag);\n\t\tviaHeader.setRPort();\n\t\tviaHeaders.add(viaHeader);\n\t\t//from\n\t\tSipURI fromSipURI = layer.getAddressFactory().createSipURI(device.getDeviceId(),sipConfig.getSipIp()+\":\"+sipConfig.getSipPort());\n\t\tAddress fromAddress = layer.getAddressFactory().createAddress(fromSipURI);\n\t\tFromHeader fromHeader = layer.getHeaderFactory().createFromHeader(fromAddress, fromTag); //\u5fc5\u987b\u8981\u6709\u6807\u8bb0\uff0c\u5426\u5219\u65e0\u6cd5\u521b\u5efa\u4f1a\u8bdd\uff0c\u65e0\u6cd5\u56de\u5e94ack\n\t\t//to\n\t\tSipURI toSipURI = layer.getAddressFactory().createSipURI(device.getDeviceId(),host.getAddress()); \n\t\tAddress toAddress = layer.getAddressFactory().createAddress(toSipURI);\n\t\tToHeader toHeader = layer.getHeaderFactory().createToHeader(toAddress,null);\n\n\t\t//callid\n\t\tCallIdHeader callIdHeader = null;\n\t\tif(device.getTransport().equals(\"TCP\")) {\n\t\t\tcallIdHeader = layer.getTcpSipProvider().getNewCallId();\n\t\t}\n\t\tif(device.getTransport().equals(\"UDP\")) {\n\t\t\tcallIdHeader = layer.getUdpSipProvider().getNewCallId();\n\t\t}\n\t\t\n\t\t//Forwards\n\t\tMaxForwardsHeader maxForwards = layer.getHeaderFactory().createMaxForwardsHeader(70);\n\t\t//ceq\n\t\tCSeqHeader cSeqHeader = layer.getHeaderFactory().createCSeqHeader(1L, Request.INVITE);\n\t\trequest = layer.getMessageFactory().createRequest(requestLine, Request.INVITE, callIdHeader, cSeqHeader,fromHeader, toHeader, viaHeaders, maxForwards);\n\t\tContentTypeHeader contentTypeHeader = layer.getHeaderFactory().createContentTypeHeader(\"Application\", \"SDP\");\n\t\trequest.setContent(content, contentTypeHeader);\n\t\treturn request;\n\t}", "url": "https://raw.githubusercontent.com/swwheihei/wvp/master/src/main/java/com/genersoft/iot/vmp/gb28181/transmit/cmd/SIPRequestHeaderProvider.java", "stars": "29", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 80400, "method_name": "main", "class_name": "MqttServer", "params": ["String"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void main(String[] args) {\n//        try {\n//            MqttServer mm = new MqttServer();\n//            mm.connection.listener(new Listener() {\n//                @Override\n//                public void onConnected() {\n//                }\n//\n//                @Override\n//                public void onDisconnected() {\n//                }\n//\n//                @Override\n//                public void onPublish(UTF8Buffer topic, Buffer body, Runnable ack) {\n//                    String topi = new String(topic.toByteArray());\n//                    System.out.println(\"=============receive msg================\\n\"\n//                            + new String(topi) + new String(body.toByteArray()));\n//                    ack.run();\n//                }\n//\n//                @Override\n//                public void onFailure(Throwable value) {\n//                }\n//            });\n//            while (true) {\n//\n//            }\n//\n//        } catch (Exception e) {\n//            e.printStackTrace();\n//        }\n        connect();\n        HashMap<String, ArrayList<Double>> re = getData();\n        System.out.println(re);\n    }", "url": "https://raw.githubusercontent.com/luzy99/IOT-Terminal/master/MqttTrans/src/main/java/com/m5go/plugin/MqttServer.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 80401, "method_name": "connect", "class_name": "MqttServer", "params": [], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void connect() {\n        try {\n            //\u52a0\u8f7d\u9a71\u52a8\u7a0b\u5e8f\n            Class.forName(driver);\n            conn = DriverManager.getConnection(url, user, password);\n            System.out.println(\"Connection to Mysql has been established.\");\n\n//            Statement s = conn.createStatement();\n//            String sql=\t\"CREATE TABLE IF NOT EXISTS todolist (\"\n//                    +\"memoID INTEGER PRIMARY KEY autoincrement,\"\n//                    +\"title TEXT,\"\n//                    +\"address TEXT,\"\n//                    +\"startTime integer,\"\n//                    +\"endTime integer,\"\n//                    +\"detail TEXT,\"\n//                    +\"alarm integer,\"\n//                    +\"remindTime integer,\"\n//                    +\"editTime integer\"\n//                    +\")\";\n//            s.executeUpdate(sql);\n        } catch (SQLException | ClassNotFoundException e) {\n            System.out.println(e.getMessage());\n        }\n    }", "url": "https://raw.githubusercontent.com/luzy99/IOT-Terminal/master/MqttTrans/src/main/java/com/m5go/plugin/MqttServer.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 80402, "method_name": "saveToDB", "class_name": "MqttServer", "params": ["String"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void saveToDB(String payload) {\n        JsonObject resObj = JsonParser.parseString(payload).getAsJsonObject();\n        float tmp = resObj.get(\"tmp\").getAsFloat();\n        float hum = resObj.get(\"hum\").getAsFloat();\n        float press = resObj.get(\"press\").getAsFloat();\n        long time = resObj.get(\"time\").getAsLong() * 1000;\n\n        PreparedStatement s;\n\n        try {\n            s = conn.prepareStatement(\n                    \"INSERT INTO env (\"\n                            + \"tmp,hum,press,time)\"\n                            + \"VALUES(?,?,?,?)\");\n            s.setFloat(1, tmp);\n            s.setFloat(2, hum);\n            s.setFloat(3, press);\n            s.setTimestamp(4, new Timestamp(time));\n\n            s.executeUpdate();\n        } catch (SQLException e) {\n            e.printStackTrace();\n        }\n    }", "url": "https://raw.githubusercontent.com/luzy99/IOT-Terminal/master/MqttTrans/src/main/java/com/m5go/plugin/MqttServer.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 80403, "method_name": "getData", "class_name": "MqttServer", "params": [], "throws": null, "modifiers": ["public", "static"], "return_type": "HashMap<String,ArrayList>", "snippet": "    public static HashMap<String, ArrayList<Double>> getData() {\n        PreparedStatement s;\n        HashMap<String, ArrayList<Double>> result = new HashMap<String, ArrayList<Double>>();\n        ArrayList<Double> tmp = new ArrayList<Double>();\n        ArrayList<Double> hum = new ArrayList<Double>();\n        ArrayList<Double> time = new ArrayList<Double>();\n        long yesterday = System.currentTimeMillis() - 24 * 3600 * 1000;\n        try {\n            s = conn.prepareStatement(\n                    \"SELECT tmp,hum,time FROM env WHERE time > ?\");\n            s.setLong(1, yesterday);\n\n            ResultSet rs = s.executeQuery();\n            ResultSetMetaData rm = rs.getMetaData();\n            while (rs.next()) {\n                tmp.add(rs.getDouble(1));\n                hum.add(rs.getDouble(2));\n                time.add((double) rs.getTimestamp(3).getTime());\n            }\n            result.put(\"tmp\", tmp);\n            result.put(\"hum\", hum);\n            result.put(\"time\", time);\n        } catch (SQLException e) {\n            e.printStackTrace();\n        }\n        return result;\n    }", "url": "https://raw.githubusercontent.com/luzy99/IOT-Terminal/master/MqttTrans/src/main/java/com/m5go/plugin/MqttServer.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 80404, "method_name": "init", "class_name": "DBTreeNode", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void init() {\n        if (getChildren().size() > 0 || isLoading()) {\n            return;\n        }\n        setLoading(true);\n        if (!getChildren().isEmpty()) {\n            getChildren().clear();\n        }\n        //Start connecting to database\n        var pool = DATABASE_SOURCE.createPool(param.get());\n        var future = pool.getDql().showDatabase();\n        future.onSuccess(sc ->\n        {\n            var schemeTreeNodes = sc.stream().map(s -> new SchemeTreeNode(s, param.get())).collect(Collectors.toList());\n            Platform.runLater(() -> getChildren().addAll(schemeTreeNodes));\n            setLoading(false);\n            Platform.runLater(() -> {\n                //dynamic add MenuItem\n                addMenuItem(0, loseConnect);\n                addMenuItem(flush);\n                removeMenu(openConnect);\n                if (!isExpanded()) {\n                    setExpanded(true);\n                }\n            });\n\n        });\n        future.onFailure(t -> initFailed(t, \"\u8fde\u63a5\u6570\u636e\u5e93\u5931\u8d25\"));\n    }", "url": "https://raw.githubusercontent.com/GZYangKui/openjfx-database/master/app/src/main/java/com/openjfx/database/app/controls/impl/DBTreeNode.java", "stars": "18", "class_props": {"extends": "BaseTreeNode", "implements": null, "modifiers": ["public"]}}, {"id": 80405, "method_name": "removeAllTab", "class_name": "DBTreeNode", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void removeAllTab() {\n        var message = new JsonObject();\n        message.put(ACTION, MainTabPane.EventBusAction.REMOVE_MANY);\n        message.put(FLAG, getUuid());\n        //Move out the tabs related to the current database\n        VertexUtils.send(MainTabPane.EVENT_BUS_ADDRESS, message);\n    }", "url": "https://raw.githubusercontent.com/GZYangKui/openjfx-database/master/app/src/main/java/com/openjfx/database/app/controls/impl/DBTreeNode.java", "stars": "18", "class_props": {"extends": "BaseTreeNode", "implements": null, "modifiers": ["public"]}}, {"id": 80406, "method_name": "getFileId", "class_name": "FileDownload", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getFileId() {\n        return fileId;\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/ws/helpdesk/FileDownload.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 80407, "method_name": "setFileId", "class_name": "FileDownload", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setFileId(int value) {\n        this.fileId = value;\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/ws/helpdesk/FileDownload.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 80408, "method_name": "getContractId", "class_name": "FileDownload", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getContractId() {\n        return contractId;\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/ws/helpdesk/FileDownload.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 80409, "method_name": "setContractId", "class_name": "FileDownload", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setContractId(int value) {\n        this.contractId = value;\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/ws/helpdesk/FileDownload.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}]