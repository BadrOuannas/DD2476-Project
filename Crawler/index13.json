[{"id": 59999, "method_name": "getSignatures", "class_name": "BaseVM", "params": [], "throws": null, "modifiers": [], "return_type": "Signature", "snippet": "    Signature[] getSignatures() {\n        if (apkFile == null) {\n            return null;\n        }\n        if (signatures != null) {\n            return signatures;\n        }\n\n        ApkFile apkFile = null;\n        try {\n            apkFile = new ApkFile(this.apkFile);\n            List<Signature> signatures = new ArrayList<>(10);\n            for (ApkSigner signer : apkFile.getApkSingers()) {\n                for (CertificateMeta meta : signer.getCertificateMetas()) {\n                    signatures.add(new Signature(this, meta));\n                }\n            }\n            this.signatures = signatures.toArray(new Signature[0]);\n            return this.signatures;\n        } catch (IOException | CertificateException e) {\n            throw new IllegalStateException(e);\n        } finally {\n            IOUtils.closeQuietly(apkFile);\n        }\n    }", "url": "https://raw.githubusercontent.com/wmm1996528/unidbg_douyin10/master/src/main/java/com/github/unidbg/linux/android/dvm/BaseVM.java", "stars": "16", "class_props": {"extends": null, "implements": ["VM"], "modifiers": ["public", "abstract"]}}, {"id": 60000, "method_name": "getPackageName", "class_name": "BaseVM", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getPackageName() {\n        if (apkFile == null) {\n            return null;\n        }\n        if (apkMeta != null) {\n            return apkMeta.getPackageName();\n        }\n\n        ApkFile apkFile = null;\n        try {\n            apkFile = new ApkFile(this.apkFile);\n            apkMeta = apkFile.getApkMeta();\n            return apkMeta.getPackageName();\n        } catch (IOException e) {\n            throw new IllegalStateException(e);\n        } finally {\n            IOUtils.closeQuietly(apkFile);\n        }\n    }", "url": "https://raw.githubusercontent.com/wmm1996528/unidbg_douyin10/master/src/main/java/com/github/unidbg/linux/android/dvm/BaseVM.java", "stars": "16", "class_props": {"extends": null, "implements": ["VM"], "modifiers": ["public", "abstract"]}}, {"id": 60001, "method_name": "getManifestXml", "class_name": "BaseVM", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getManifestXml() {\n        if (apkFile == null) {\n            return null;\n        }\n\n        ApkFile apkFile = null;\n        try {\n            apkFile = new ApkFile(this.apkFile);\n            return apkFile.getManifestXml();\n        } catch (IOException e) {\n            throw new IllegalStateException(e);\n        } finally {\n            IOUtils.closeQuietly(apkFile);\n        }\n    }", "url": "https://raw.githubusercontent.com/wmm1996528/unidbg_douyin10/master/src/main/java/com/github/unidbg/linux/android/dvm/BaseVM.java", "stars": "16", "class_props": {"extends": null, "implements": ["VM"], "modifiers": ["public", "abstract"]}}, {"id": 60002, "method_name": "openAsset", "class_name": "BaseVM", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "byte", "snippet": "    public byte[] openAsset(String fileName) {\n        if (apkFile == null) {\n            return null;\n        }\n\n        ApkFile apkFile = null;\n        try {\n            apkFile = new ApkFile(this.apkFile);\n            return apkFile.getFileData(\"assets/\" + fileName);\n        } catch (IOException e) {\n            throw new IllegalStateException(e);\n        } finally {\n            IOUtils.closeQuietly(apkFile);\n        }\n    }", "url": "https://raw.githubusercontent.com/wmm1996528/unidbg_douyin10/master/src/main/java/com/github/unidbg/linux/android/dvm/BaseVM.java", "stars": "16", "class_props": {"extends": null, "implements": ["VM"], "modifiers": ["public", "abstract"]}}, {"id": 60003, "method_name": "getVersionName", "class_name": "BaseVM", "params": [], "throws": null, "modifiers": [], "return_type": "String", "snippet": "    String getVersionName() {\n        if (apkFile == null) {\n            return null;\n        }\n        if (apkMeta != null) {\n            return apkMeta.getVersionName();\n        }\n\n        ApkFile apkFile = null;\n        try {\n            apkFile = new ApkFile(this.apkFile);\n            apkMeta = apkFile.getApkMeta();\n            return apkMeta.getVersionName();\n        } catch (IOException e) {\n            throw new IllegalStateException(e);\n        } finally {\n            IOUtils.closeQuietly(apkFile);\n        }\n    }", "url": "https://raw.githubusercontent.com/wmm1996528/unidbg_douyin10/master/src/main/java/com/github/unidbg/linux/android/dvm/BaseVM.java", "stars": "16", "class_props": {"extends": null, "implements": ["VM"], "modifiers": ["public", "abstract"]}}, {"id": 60004, "method_name": "loadLibrary", "class_name": "BaseVM", "params": ["File", "boolean"], "throws": ["IOException"], "modifiers": ["final", "public"], "return_type": "DalvikModule", "snippet": "    public final DalvikModule loadLibrary(File elfFile, boolean forceCallInit) throws IOException {\n        Module module = emulator.getMemory().load(new ElfLibraryFile(elfFile), forceCallInit);\n        return new DalvikModule(this, module);\n    }", "url": "https://raw.githubusercontent.com/wmm1996528/unidbg_douyin10/master/src/main/java/com/github/unidbg/linux/android/dvm/BaseVM.java", "stars": "16", "class_props": {"extends": null, "implements": ["VM"], "modifiers": ["public", "abstract"]}}, {"id": 60005, "method_name": "printMemoryInfo", "class_name": "BaseVM", "params": [], "throws": null, "modifiers": ["final", "public"], "return_type": "void", "snippet": "    public final void printMemoryInfo() {\n        System.gc();\n        MemoryMXBean memoryMXBean = ManagementFactory.getMemoryMXBean();\n        MemoryUsage heap = memoryMXBean.getHeapMemoryUsage();\n        MemoryUsage nonheap = memoryMXBean.getNonHeapMemoryUsage();\n        System.err.println(\"globalObjectSize=\" + globalObjectMap.size() + \", localObjectSize=\" + localObjectMap.size() + \", classSize=\" + classMap.size());\n        System.err.println(\"heap: \" + memoryUsage(heap) + \", nonheap: \" + memoryUsage(nonheap));\n    }", "url": "https://raw.githubusercontent.com/wmm1996528/unidbg_douyin10/master/src/main/java/com/github/unidbg/linux/android/dvm/BaseVM.java", "stars": "16", "class_props": {"extends": null, "implements": ["VM"], "modifiers": ["public", "abstract"]}}, {"id": 60006, "method_name": "toMB", "class_name": "BaseVM", "params": ["long"], "throws": null, "modifiers": ["private"], "return_type": "String", "snippet": "    private String toMB(long memory) {\n        return (memory * 100 / (1024 * 1024)) / 100F + \"MB\";\n    }", "url": "https://raw.githubusercontent.com/wmm1996528/unidbg_douyin10/master/src/main/java/com/github/unidbg/linux/android/dvm/BaseVM.java", "stars": "16", "class_props": {"extends": null, "implements": ["VM"], "modifiers": ["public", "abstract"]}}, {"id": 60007, "method_name": "memoryUsage", "class_name": "BaseVM", "params": ["MemoryUsage"], "throws": null, "modifiers": ["private"], "return_type": "String", "snippet": "    private String memoryUsage(MemoryUsage usage) {\n        return \"init=\" + toMB(usage.getInit()) + \", used=\"\n                + toMB(usage.getUsed()) + \", committed=\"\n                + toMB(usage.getCommitted()) + \", max=\"\n                + toMB(usage.getMax());\n    }", "url": "https://raw.githubusercontent.com/wmm1996528/unidbg_douyin10/master/src/main/java/com/github/unidbg/linux/android/dvm/BaseVM.java", "stars": "16", "class_props": {"extends": null, "implements": ["VM"], "modifiers": ["public", "abstract"]}}, {"id": 60008, "method_name": "callJNI_OnLoad", "class_name": "BaseVM", "params": ["Emulator<?>", "Module"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void callJNI_OnLoad(Emulator<?> emulator, Module module) {\n        new DalvikModule(this, module).callJNI_OnLoad(emulator);\n    }", "url": "https://raw.githubusercontent.com/wmm1996528/unidbg_douyin10/master/src/main/java/com/github/unidbg/linux/android/dvm/BaseVM.java", "stars": "16", "class_props": {"extends": null, "implements": ["VM"], "modifiers": ["public", "abstract"]}}, {"id": 60009, "method_name": "getName", "class_name": "ApkLibraryFile", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "        public String getName() {\n            return soName;\n        }", "url": "https://raw.githubusercontent.com/wmm1996528/unidbg_douyin10/master/src/main/java/com/github/unidbg/linux/android/dvm/BaseVM.java", "stars": "16", "class_props": {"extends": null, "implements": ["LibraryFile"], "modifiers": ["private"]}}, {"id": 60010, "method_name": "getMapRegionName", "class_name": "ApkLibraryFile", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "        public String getMapRegionName() {\n            return \"/data/app-lib/\" + packageName + \"-1/\" + soName;\n        }", "url": "https://raw.githubusercontent.com/wmm1996528/unidbg_douyin10/master/src/main/java/com/github/unidbg/linux/android/dvm/BaseVM.java", "stars": "16", "class_props": {"extends": null, "implements": ["LibraryFile"], "modifiers": ["private"]}}, {"id": 60011, "method_name": "resolveLibrary", "class_name": "ApkLibraryFile", "params": ["Emulator<?>", "String"], "throws": ["IOException"], "modifiers": ["public"], "return_type": "LibraryFile", "snippet": "        public LibraryFile resolveLibrary(Emulator<?> emulator, String soName) throws IOException {\n            byte[] libData = findLibrary(apkFile, soName);\n            return libData == null ? null : new ApkLibraryFile(apkFile, soName, libData);\n        }", "url": "https://raw.githubusercontent.com/wmm1996528/unidbg_douyin10/master/src/main/java/com/github/unidbg/linux/android/dvm/BaseVM.java", "stars": "16", "class_props": {"extends": null, "implements": ["LibraryFile"], "modifiers": ["private"]}}, {"id": 60012, "method_name": "readToByteArray", "class_name": "ApkLibraryFile", "params": [], "throws": null, "modifiers": ["public"], "return_type": "byte", "snippet": "        public byte[] readToByteArray() {\n            return soData;\n        }", "url": "https://raw.githubusercontent.com/wmm1996528/unidbg_douyin10/master/src/main/java/com/github/unidbg/linux/android/dvm/BaseVM.java", "stars": "16", "class_props": {"extends": null, "implements": ["LibraryFile"], "modifiers": ["private"]}}, {"id": 60013, "method_name": "mapBuffer", "class_name": "ApkLibraryFile", "params": [], "throws": null, "modifiers": ["public"], "return_type": "ByteBuffer", "snippet": "        public ByteBuffer mapBuffer() {\n            return ByteBuffer.wrap(soData);\n        }", "url": "https://raw.githubusercontent.com/wmm1996528/unidbg_douyin10/master/src/main/java/com/github/unidbg/linux/android/dvm/BaseVM.java", "stars": "16", "class_props": {"extends": null, "implements": ["LibraryFile"], "modifiers": ["private"]}}, {"id": 60014, "method_name": "getPath", "class_name": "ApkLibraryFile", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "        public String getPath() {\n            return \"/data/app-lib/\" + packageName + \"-1\";\n        }", "url": "https://raw.githubusercontent.com/wmm1996528/unidbg_douyin10/master/src/main/java/com/github/unidbg/linux/android/dvm/BaseVM.java", "stars": "16", "class_props": {"extends": null, "implements": ["LibraryFile"], "modifiers": ["private"]}}, {"id": 60015, "method_name": "doFilterInternal", "class_name": "JwtAuthorizationFilter", "params": ["HttpServletRequest", "HttpServletResponse", "FilterChain"], "throws": ["IOException", "ServletException"], "modifiers": ["protected"], "return_type": "void", "snippet": "\tprotected void doFilterInternal(HttpServletRequest request, HttpServletResponse response, FilterChain filterChain)\n\t\t\tthrows IOException, ServletException {\n\t\tvar authentication = this.parseToken(request);\n\t\tif (authentication != null) {\n\t\t\tSecurityContextHolder.getContext().setAuthentication(authentication);\n\t\t}\n\t\telse {\n\t\t\tSecurityContextHolder.clearContext();\n\t\t}\n\t\tfilterChain.doFilter(request, response);\n\t}", "url": "https://raw.githubusercontent.com/joshlong/security-jwt-fun/master/jwt-servlet/src/main/java/com/joshlong/jwt/JwtAuthorizationFilter.java", "stars": "4", "class_props": {"extends": "BasicAuthenticationFilter", "implements": null, "modifiers": ["public"]}}, {"id": 60016, "method_name": "parseToken", "class_name": "JwtAuthorizationFilter", "params": ["HttpServletRequest"], "throws": null, "modifiers": ["private"], "return_type": "UsernamePasswordAuthenticationToken", "snippet": "\tprivate UsernamePasswordAuthenticationToken parseToken(HttpServletRequest request) {\n\t\tvar token = request.getHeader(HttpHeaders.AUTHORIZATION);\n\t\tvar bearerPrefix = \"bearer \";\n\t\tif (StringUtils.hasText(token) && token.toLowerCase().startsWith(bearerPrefix)) {\n\t\t\tvar claims = token.substring(bearerPrefix.length());\n\t\t\ttry {\n\t\t\t\tvar claimsJws = Jwts.parser().setSigningKey(jwtSecret.getBytes()).parseClaimsJws(claims);\n\t\t\t\tvar username = claimsJws.getBody().getSubject();\n\t\t\t\tif (StringUtils.isEmpty(username)) {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t\treturn new UsernamePasswordAuthenticationToken(username, null,\n\t\t\t\t\t\tList.of(new SimpleGrantedAuthority(\"USER\")));\n\t\t\t}\n\t\t\tcatch (JwtException exception) {\n\t\t\t\tlog.warn(\"exception : {} failed : {}\", token, exception.getMessage());\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t}", "url": "https://raw.githubusercontent.com/joshlong/security-jwt-fun/master/jwt-servlet/src/main/java/com/joshlong/jwt/JwtAuthorizationFilter.java", "stars": "4", "class_props": {"extends": "BasicAuthenticationFilter", "implements": null, "modifiers": ["public"]}}, {"id": 60017, "method_name": "onFocusChange", "class_name": "MoreViewHolder", "params": ["View", "boolean"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onFocusChange(View v, boolean hasFocus) {\n        if (hasFocus) {\n            textview.setVisibility(View.VISIBLE);\n        } else {\n            textview.setVisibility(View.GONE);\n        }\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/tv/src/main/java/butter/droid/tv/presenters/MoreViewHolder.java", "stars": "4", "class_props": {"extends": "Presenter", "implements": ["View"], "modifiers": ["public"]}}, {"id": 60018, "method_name": "generateData", "class_name": "QuickDataGenerator", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void generateData() {\n        super.generate(NUMBER_OF_GARDEN_FIELDS_TO_GENERATE, NUMBER_OF_USERS_TO_GENERATE, NUMBER_OF_OPEN_LEASINGS_TO_GENERATE,\n            NUMBER_OF_RESERVED_LEASINGS_TO_GENERATE, NUMBER_OF_MESSAGES_THREADS, NUMBER_OF_MESSAGES,\n            MIN_NUMBER_OF_IMAGES_PER_GARDENFIELD, MAX_NUMBER_OF_IMAGES_PER_GARDENFIELD, BATCH_SIZE);\n    }", "url": "https://raw.githubusercontent.com/gardle/gardle-web/master/src/main/java/com/gardle/datagenerator/QuickDataGenerator.java", "stars": "2", "class_props": {"extends": "DataGenerator", "implements": null, "modifiers": ["public"]}}, {"id": 60019, "method_name": "create", "class_name": "FaceEngineFactory", "params": [], "throws": ["Exception"], "modifiers": ["public"], "return_type": "FaceEngine", "snippet": "    public FaceEngine create() throws Exception {\n\n        EngineConfiguration engineConfiguration = EngineConfiguration.builder()\n                .functionConfiguration(functionConfiguration)\n                .detectFaceMaxNum(detectFaceMaxNum)\n                .detectFaceScaleVal(detectFaceScaleVal)\n                .detectMode(detectMode)\n                .detectFaceOrientPriority(detectFaceOrientPriority)\n                .build();\n        FaceEngine faceEngine = new FaceEngine(libPath);\n        faceEngine.active(appId, sdkKey);\n        faceEngine.init(engineConfiguration);\n\n        return faceEngine;\n    }", "url": "https://raw.githubusercontent.com/ck003/face_recognition/master/src/main/java/me/kyriechen/face_recognition/factory/FaceEngineFactory.java", "stars": "2", "class_props": {"extends": "BasePooledObjectFactory", "implements": null, "modifiers": ["public"]}}, {"id": 60020, "method_name": "wrap", "class_name": "FaceEngineFactory", "params": ["FaceEngine"], "throws": null, "modifiers": ["public"], "return_type": "PooledObject<FaceEngine>", "snippet": "    public PooledObject<FaceEngine> wrap(FaceEngine faceEngine) {\n        return new DefaultPooledObject<>(faceEngine);\n    }", "url": "https://raw.githubusercontent.com/ck003/face_recognition/master/src/main/java/me/kyriechen/face_recognition/factory/FaceEngineFactory.java", "stars": "2", "class_props": {"extends": "BasePooledObjectFactory", "implements": null, "modifiers": ["public"]}}, {"id": 60021, "method_name": "destroyObject", "class_name": "FaceEngineFactory", "params": ["PooledObject<FaceEngine>"], "throws": ["Exception"], "modifiers": ["public"], "return_type": "void", "snippet": "    public void destroyObject(PooledObject<FaceEngine> p) throws Exception {\n        FaceEngine faceEngine = p.getObject();\n        int result = faceEngine.unInit();\n        super.destroyObject(p);\n    }", "url": "https://raw.githubusercontent.com/ck003/face_recognition/master/src/main/java/me/kyriechen/face_recognition/factory/FaceEngineFactory.java", "stars": "2", "class_props": {"extends": "BasePooledObjectFactory", "implements": null, "modifiers": ["public"]}}, {"id": 60022, "method_name": "listUserPage", "class_name": "UserServiceImpl", "params": ["UserQueryVO"], "throws": null, "modifiers": ["public"], "return_type": "Page<User>", "snippet": "    public Page<User> listUserPage(UserQueryVO queryVO) {\n        Page<User> page = new Page<>(queryVO.getCurrent(), queryVO.getSize());\n        List<User> users = baseMapper.selectUserList(queryVO, page);\n        return page.setRecords(users);\n    }", "url": "https://raw.githubusercontent.com/IzzyPrime/Admin/master/src/main/java/com/kalvin/kvf/modules/sys/service/UserServiceImpl.java", "stars": "10", "class_props": {"extends": "ServiceImpl", "implements": ["IUserService"], "modifiers": ["public"]}}, {"id": 60023, "method_name": "getByUsername", "class_name": "UserServiceImpl", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "User", "snippet": "    public User getByUsername(String username) {\n        return super.getOne(new LambdaQueryWrapper<User>().eq(User::getUsername, username));\n    }", "url": "https://raw.githubusercontent.com/IzzyPrime/Admin/master/src/main/java/com/kalvin/kvf/modules/sys/service/UserServiceImpl.java", "stars": "10", "class_props": {"extends": "ServiceImpl", "implements": ["IUserService"], "modifiers": ["public"]}}, {"id": 60024, "method_name": "updateUserPassword", "class_name": "UserServiceImpl", "params": ["Long", "String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void updateUserPassword(Long id, String password) {\n        super.update(new LambdaUpdateWrapper<User>()\n                .set(User::getPassword, password)\n                .eq(User::getId, id));\n    }", "url": "https://raw.githubusercontent.com/IzzyPrime/Admin/master/src/main/java/com/kalvin/kvf/modules/sys/service/UserServiceImpl.java", "stars": "10", "class_props": {"extends": "ServiceImpl", "implements": ["IUserService"], "modifiers": ["public"]}}, {"id": 60025, "method_name": "number", "class_name": "DataTypeHelper", "params": ["String"], "throws": null, "modifiers": ["public", "static"], "return_type": "boolean", "snippet": "    public static boolean number(final String type) {\n        return isFixType(NUMBER, type);\n    }", "url": "https://raw.githubusercontent.com/GZYangKui/openjfx-database/master/database/src/main/java/com/openjfx/database/DataTypeHelper.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 60026, "method_name": "dateTime", "class_name": "DataTypeHelper", "params": ["String"], "throws": null, "modifiers": ["public", "static"], "return_type": "boolean", "snippet": "    public static boolean dateTime(final String type) {\n        return isFixType(DATETIME, type);\n    }", "url": "https://raw.githubusercontent.com/GZYangKui/openjfx-database/master/database/src/main/java/com/openjfx/database/DataTypeHelper.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 60027, "method_name": "isFixType", "class_name": "DataTypeHelper", "params": ["String", "String"], "throws": null, "modifiers": ["static", "private"], "return_type": "boolean", "snippet": "    private static boolean isFixType(final String[] ss, final String type) {\n        for (String s : ss) {\n            if (type.toUpperCase().startsWith(s)) {\n                return true;\n            }\n        }\n        return false;\n    }", "url": "https://raw.githubusercontent.com/GZYangKui/openjfx-database/master/database/src/main/java/com/openjfx/database/DataTypeHelper.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 60028, "method_name": "elasticsearchProperties", "class_name": "ElasticsearchTestConfiguration", "params": ["ElasticsearchProperties"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void elasticsearchProperties(ElasticsearchProperties elasticsearchProperties) {\n        File tempdir = Files.newTemporaryFolder();\n        elasticsearchProperties.getProperties().put(\"path.home\", tempdir.getAbsolutePath());\n    }", "url": "https://raw.githubusercontent.com/Vondser/mmwms-antd/master/src/test/java/com/meimos/myapp/config/ElasticsearchTestConfiguration.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 60029, "method_name": "deleteNotification", "class_name": "NotificationUtil", "params": ["Context", "int", "String"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void deleteNotification(Context context, int notificationId, String channelId) {\n        NotificationManager notificationManager = (NotificationManager) context.getSystemService(context.NOTIFICATION_SERVICE);\n        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.O) {\n            notificationManager.deleteNotificationChannel(channelId);\n        }\n        notificationManager.cancel(notificationId);\n    }", "url": "https://raw.githubusercontent.com/Florizt/RxMVVM/master/rxmvvmlib/src/main/java/com/rx/rxmvvmlib/util/NotificationUtil.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 60030, "method_name": "buildNotification", "class_name": "NotificationUtil", "params": ["Context", "String", "String", "Class", "String"], "throws": null, "modifiers": ["public", "static"], "return_type": "Notification", "snippet": "    public static Notification buildNotification(Context context, String channelId, String channelName, Class clazz,String contentText) {\n        Intent intent2 = new Intent();\n        intent2.setClass(UIUtils.getContext(), clazz);\n        intent2.setFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP);\n        PendingIntent intentContent = PendingIntent.getActivity(UIUtils.getContext(), 304, intent2, PendingIntent.FLAG_UPDATE_CURRENT);\n\n        NotificationManager notificationManager = (NotificationManager) UIUtils.getContext().getSystemService(Context.NOTIFICATION_SERVICE);\n        Notification.Builder builder = new Notification.Builder(UIUtils.getContext())\n                .setContentIntent(intentContent)\n                .setShowWhen(true)\n                .setWhen(System.currentTimeMillis())\n                .setPriority(Notification.PRIORITY_HIGH)\n                .setOngoing(true)\n                .setOnlyAlertOnce(true)\n                .setVibrate(new long[]{0})\n                .setSound(null, null)\n                .setSmallIcon(context.getApplicationContext().getApplicationInfo().icon)\n                .setContentTitle(context.getString(R.string.app_name))\n                .setContentText(contentText);\n\n        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.O) {\n            if (notificationManager != null) {\n                notificationManager.createNotificationChannel(buildChannel(channelId, channelName));\n            }\n            builder.setChannelId(channelId);\n        }\n        return builder.build();\n    }", "url": "https://raw.githubusercontent.com/Florizt/RxMVVM/master/rxmvvmlib/src/main/java/com/rx/rxmvvmlib/util/NotificationUtil.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 60031, "method_name": "buildChannel", "class_name": "NotificationUtil", "params": ["String", "String"], "throws": null, "modifiers": ["public", "static"], "return_type": "NotificationChannel", "snippet": "    public static NotificationChannel buildChannel(String channelId, String channelName) {\n        NotificationChannel notificationChannel = null;\n        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.O) {\n            notificationChannel = new NotificationChannel(channelId, channelName, NotificationManager.IMPORTANCE_LOW);\n            notificationChannel.enableLights(false);\n            notificationChannel.enableVibration(false);\n            notificationChannel.setVibrationPattern(new long[]{0});\n            notificationChannel.setSound(null, null);\n        }\n        return notificationChannel;\n    }", "url": "https://raw.githubusercontent.com/Florizt/RxMVVM/master/rxmvvmlib/src/main/java/com/rx/rxmvvmlib/util/NotificationUtil.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 60032, "method_name": "deleteAllNotification", "class_name": "NotificationUtil", "params": ["Context"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void deleteAllNotification(Context context) {\n        NotificationManager notificationManager = (NotificationManager) context.getSystemService(context.NOTIFICATION_SERVICE);\n        notificationManager.cancelAll();\n\n        if (RomUtil.isSamsung()) {\n            Intent intent = new Intent(\"android.intent.action.BADGE_COUNT_UPDATE\");\n            intent.putExtra(\"badge_count\", 0);\n            intent.putExtra(\"badge_count_package_name\", context.getPackageName());\n            intent.putExtra(\"badge_count_class_name\", getLaunchIntentForPackage(context));\n\n            if (canResolveBroadcast(context, intent)) {\n                context.sendBroadcast(intent);\n            }\n        } else if (RomUtil.isHuawei()) {\n            Bundle bunlde = new Bundle();\n            bunlde.putString(\"package\", context.getPackageName()); // com.test.badge is your package name\n            bunlde.putString(\"class\", getLaunchIntentForPackage(context)); // com.test. badge.MainActivity is your apk main activity\n            bunlde.putInt(\"badgenumber\", 0);\n            context.getContentResolver().call(Uri.parse(\"content://com.huawei.android.launcher.settings/badge/\"), \"change_badge\", null, bunlde);\n        } else if (RomUtil.isVivo()) {\n            try {\n                Intent intent = new Intent(\"launcher.action.CHANGE_APPLICATION_NOTIFICATION_NUM\");\n                intent.putExtra(\"packageName\", context.getPackageName());\n                String launchClassName = context.getPackageManager().getLaunchIntentForPackage(context.getPackageName()).getComponent().getClassName();\n                intent.putExtra(\"className\", launchClassName);\n                intent.putExtra(\"notificationNum\", 0);\n                context.sendBroadcast(intent);\n            } catch (Exception e) {\n\n            }\n        }\n    }", "url": "https://raw.githubusercontent.com/Florizt/RxMVVM/master/rxmvvmlib/src/main/java/com/rx/rxmvvmlib/util/NotificationUtil.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 60033, "method_name": "canResolveBroadcast", "class_name": "NotificationUtil", "params": ["Context", "Intent"], "throws": null, "modifiers": ["public", "static"], "return_type": "boolean", "snippet": "    public static boolean canResolveBroadcast(Context context, Intent intent) {\n        PackageManager packageManager = context.getPackageManager();\n        List<ResolveInfo> receivers = packageManager.queryBroadcastReceivers(intent, 0);\n        return receivers != null && receivers.size() > 0;\n    }", "url": "https://raw.githubusercontent.com/Florizt/RxMVVM/master/rxmvvmlib/src/main/java/com/rx/rxmvvmlib/util/NotificationUtil.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 60034, "method_name": "getLaunchIntentForPackage", "class_name": "NotificationUtil", "params": ["Context"], "throws": null, "modifiers": ["public", "static"], "return_type": "String", "snippet": "    public static String getLaunchIntentForPackage(Context context) {\n        return context.getPackageManager().getLaunchIntentForPackage(context.getPackageName()).getComponent().getClassName();\n    }", "url": "https://raw.githubusercontent.com/Florizt/RxMVVM/master/rxmvvmlib/src/main/java/com/rx/rxmvvmlib/util/NotificationUtil.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 60035, "method_name": "registerEventBus", "class_name": "MainTabPane", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void registerEventBus() {\n        VertexUtils.eventBus().<JsonObject>consumer(EVENT_BUS_ADDRESS, handler -> {\n            JsonObject body = handler.body();\n            String action = body.getString(ACTION);\n            String flag = body.getString(FLAG);\n            EventBusAction busAction = EventBusAction.valueOf(action);\n            final List<Tab> tabs = new ArrayList<>();\n            //\u79fb\u51fa\u4e00\u4e2aTab\n            if (busAction == EventBusAction.REMOVE) {\n                this.getTabs().stream().filter(it -> ((TableTab) it)\n                        .getModel().getFlag().equals(flag)).findAny().ifPresent(tabs::add);\n            }\n            //\u79fb\u51fa\u591a\u4e2aTab\n            if (busAction == EventBusAction.REMOVE_MANY) {\n                List<Tab> tt = this.getTabs().stream().filter(\n                        it -> ((TableTab) it).getModel().getFlag().startsWith(flag)\n                ).collect(Collectors.toList());\n                tabs.addAll(tt);\n            }\n            //\u6e05\u7a7atab\n            if (busAction == EventBusAction.CLEAR) {\n                tabs.addAll(getTabs());\n            }\n            if (!tabs.isEmpty()) {\n                Platform.runLater(() -> getTabs().removeAll(tabs));\n            }\n        });\n    }", "url": "https://raw.githubusercontent.com/GZYangKui/openjfx-database/master/app/src/main/java/com/openjfx/database/app/component/MainTabPane.java", "stars": "18", "class_props": {"extends": "TabPane", "implements": null, "modifiers": ["public"]}}, {"id": 60036, "method_name": "create", "class_name": "ColonyInvadedIncident", "params": ["Empire", "Empire", "StarSystem", "int"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void create(Empire attacker, Empire defender, StarSystem sys, int popLost) {\n        ColonyInvadedIncident inc = new ColonyInvadedIncident(attacker, defender, sys, popLost);\n        EmpireView ev = defender.viewForEmpire(attacker);\n        ev.embassy().addIncident(inc);\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/incidents/ColonyInvadedIncident.java", "stars": "74", "class_props": {"extends": "DiplomaticIncident", "implements": null, "modifiers": ["public"]}}, {"id": 60037, "method_name": "systemName", "class_name": "ColonyInvadedIncident", "params": [], "throws": null, "modifiers": ["private"], "return_type": "String", "snippet": "    private String systemName() { return player().sv.name(sysId); }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/incidents/ColonyInvadedIncident.java", "stars": "74", "class_props": {"extends": "DiplomaticIncident", "implements": null, "modifiers": ["public"]}}, {"id": 60038, "method_name": "title", "class_name": "ColonyInvadedIncident", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String title()            { return text(\"INC_INVADED_COLONY_TITLE\", systemName()); }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/incidents/ColonyInvadedIncident.java", "stars": "74", "class_props": {"extends": "DiplomaticIncident", "implements": null, "modifiers": ["public"]}}, {"id": 60039, "method_name": "description", "class_name": "ColonyInvadedIncident", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String description()      { return  decode(text(\"INC_INVADED_COLONY_DESC\")); }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/incidents/ColonyInvadedIncident.java", "stars": "74", "class_props": {"extends": "DiplomaticIncident", "implements": null, "modifiers": ["public"]}}, {"id": 60040, "method_name": "warningMessageId", "class_name": "ColonyInvadedIncident", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String warningMessageId() { return DialogueManager.WARNING_COLONY_INVADED; }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/incidents/ColonyInvadedIncident.java", "stars": "74", "class_props": {"extends": "DiplomaticIncident", "implements": null, "modifiers": ["public"]}}, {"id": 60041, "method_name": "declareWarId", "class_name": "ColonyInvadedIncident", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String declareWarId()     { return DialogueManager.DECLARE_ATTACKED_WAR; }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/incidents/ColonyInvadedIncident.java", "stars": "74", "class_props": {"extends": "DiplomaticIncident", "implements": null, "modifiers": ["public"]}}, {"id": 60042, "method_name": "triggersWar", "class_name": "ColonyInvadedIncident", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean triggersWar()     { return popLost >= 10; }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/incidents/ColonyInvadedIncident.java", "stars": "74", "class_props": {"extends": "DiplomaticIncident", "implements": null, "modifiers": ["public"]}}, {"id": 60043, "method_name": "key", "class_name": "ColonyInvadedIncident", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String key() {\n        return concat(systemName(), \":\", str(dateOccurred));\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/incidents/ColonyInvadedIncident.java", "stars": "74", "class_props": {"extends": "DiplomaticIncident", "implements": null, "modifiers": ["public"]}}, {"id": 60044, "method_name": "decode", "class_name": "ColonyInvadedIncident", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String decode(String s) {\n        String s1 = super.decode(s);\n        s1 = s1.replace(\"[system]\", systemName());\n        s1 = s1.replace(\"[amt]\", str(popLost));\n        s1 = galaxy().empire(empAttacker).replaceTokens(s1, \"attacker\");\n        s1 = galaxy().empire(empDefender).replaceTokens(s1, \"defender\");\n        return s1;\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/incidents/ColonyInvadedIncident.java", "stars": "74", "class_props": {"extends": "DiplomaticIncident", "implements": null, "modifiers": ["public"]}}, {"id": 60045, "method_name": "getInstance", "class_name": "SpUtil", "params": ["Context"], "throws": null, "modifiers": ["static", "private"], "return_type": "SharedPreferences", "snippet": "    private static SharedPreferences getInstance(Context context) {\n        if (sp == null) {\n            sp = context.getSharedPreferences(context.getPackageName(), Context.MODE_PRIVATE);\n        }\n        return sp;\n    }", "url": "https://raw.githubusercontent.com/Aivacom/JLYLiveChat-android/master/app/src/main/java/com/mediaroom/utils/SpUtil.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 60046, "method_name": "putString", "class_name": "SpUtil", "params": ["Context", "String", "String"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void putString(Context context, String key, String value) {\n        SharedPreferences preferences = getInstance(context);\n        //\u5b58\u5165\u6570\u636e\n        Editor editor = preferences.edit();\n        editor.putString(key, value);\n        editor.commit();\n    }", "url": "https://raw.githubusercontent.com/Aivacom/JLYLiveChat-android/master/app/src/main/java/com/mediaroom/utils/SpUtil.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 60047, "method_name": "getString", "class_name": "SpUtil", "params": ["Context", "String"], "throws": null, "modifiers": ["public", "static"], "return_type": "String", "snippet": "    public static String getString(Context context, String key) {\n        SharedPreferences preferences = getInstance(context);\n        return preferences.getString(key, \"\");\n    }", "url": "https://raw.githubusercontent.com/Aivacom/JLYLiveChat-android/master/app/src/main/java/com/mediaroom/utils/SpUtil.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 60048, "method_name": "getString", "class_name": "SpUtil", "params": ["Context", "String", "String"], "throws": null, "modifiers": ["public", "static"], "return_type": "String", "snippet": "    public static String getString(Context context, String key, String value) {\n        SharedPreferences preferences = getInstance(context);\n        return preferences.getString(key, value);\n    }", "url": "https://raw.githubusercontent.com/Aivacom/JLYLiveChat-android/master/app/src/main/java/com/mediaroom/utils/SpUtil.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 60049, "method_name": "putBoolean", "class_name": "SpUtil", "params": ["Context", "String", "boolean"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void putBoolean(Context context, String key, boolean value) {\n        SharedPreferences sp = getInstance(context);\n        Editor editor = sp.edit();\n        editor.putBoolean(key, value);\n        editor.commit();\n    }", "url": "https://raw.githubusercontent.com/Aivacom/JLYLiveChat-android/master/app/src/main/java/com/mediaroom/utils/SpUtil.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 60050, "method_name": "getBoolean", "class_name": "SpUtil", "params": ["Context", "String", "boolean"], "throws": null, "modifiers": ["public", "static"], "return_type": "boolean", "snippet": "    public static boolean getBoolean(Context context, String key, boolean defValue) {\n        SharedPreferences sp = getInstance(context);\n        return sp.getBoolean(key, defValue);\n    }", "url": "https://raw.githubusercontent.com/Aivacom/JLYLiveChat-android/master/app/src/main/java/com/mediaroom/utils/SpUtil.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 60051, "method_name": "putLong", "class_name": "SpUtil", "params": ["Context", "String", "long"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void putLong(Context context, String key, long value) {\n        SharedPreferences sp = getInstance(context);\n        Editor editor = sp.edit();\n        editor.putLong(key, value);\n        editor.commit();\n    }", "url": "https://raw.githubusercontent.com/Aivacom/JLYLiveChat-android/master/app/src/main/java/com/mediaroom/utils/SpUtil.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 60052, "method_name": "getLong", "class_name": "SpUtil", "params": ["Context", "String", "long"], "throws": null, "modifiers": ["public", "static"], "return_type": "long", "snippet": "    public static long getLong(Context context, String key, long defValue) {\n        SharedPreferences sp = getInstance(context);\n        return sp.getLong(key, defValue);\n    }", "url": "https://raw.githubusercontent.com/Aivacom/JLYLiveChat-android/master/app/src/main/java/com/mediaroom/utils/SpUtil.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 60053, "method_name": "putInt", "class_name": "SpUtil", "params": ["Context", "String", "int"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void putInt(Context context, String key, int value) {\n        SharedPreferences sp = getInstance(context);\n        Editor editor = sp.edit();\n        editor.putInt(key, value);\n        editor.commit();\n    }", "url": "https://raw.githubusercontent.com/Aivacom/JLYLiveChat-android/master/app/src/main/java/com/mediaroom/utils/SpUtil.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 60054, "method_name": "getInt", "class_name": "SpUtil", "params": ["Context", "String", "int"], "throws": null, "modifiers": ["public", "static"], "return_type": "int", "snippet": "    public static int getInt(Context context, String key, int defValue) {\n        SharedPreferences sp = getInstance(context);\n        return sp.getInt(key, defValue);\n    }", "url": "https://raw.githubusercontent.com/Aivacom/JLYLiveChat-android/master/app/src/main/java/com/mediaroom/utils/SpUtil.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 60055, "method_name": "putObject", "class_name": "SpUtil", "params": ["Context", "String", "T"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static <T extends Serializable> void putObject(Context context, String key, T obj) {\n        try {\n            put(context, key, obj);\n        } catch (Exception e) {\n            e.printStackTrace();\n        }\n    }", "url": "https://raw.githubusercontent.com/Aivacom/JLYLiveChat-android/master/app/src/main/java/com/mediaroom/utils/SpUtil.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 60056, "method_name": "getObject", "class_name": "SpUtil", "params": ["Context", "String"], "throws": null, "modifiers": ["public", "static"], "return_type": "T", "snippet": "    public static <T extends Serializable> T getObject(Context context, String key) {\n        try {\n            return (T) get(context, key);\n        } catch (Exception e) {\n            e.printStackTrace();\n        }\n        return null;\n    }", "url": "https://raw.githubusercontent.com/Aivacom/JLYLiveChat-android/master/app/src/main/java/com/mediaroom/utils/SpUtil.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 60057, "method_name": "putList", "class_name": "SpUtil", "params": ["Context", "String", "List<Serializable>"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void putList(Context context, String key, List<? extends Serializable> list) {\n        try {\n            put(context, key, list);\n        } catch (Exception e) {\n            e.printStackTrace();\n        }\n    }", "url": "https://raw.githubusercontent.com/Aivacom/JLYLiveChat-android/master/app/src/main/java/com/mediaroom/utils/SpUtil.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 60058, "method_name": "getList", "class_name": "SpUtil", "params": ["Context", "String"], "throws": null, "modifiers": ["public", "static"], "return_type": "List<E>", "snippet": "    public static <E extends Serializable> List<E> getList(Context context, String key) {\n        try {\n            return (List<E>) get(context, key);\n        } catch (Exception e) {\n            e.printStackTrace();\n        }\n        return null;\n    }", "url": "https://raw.githubusercontent.com/Aivacom/JLYLiveChat-android/master/app/src/main/java/com/mediaroom/utils/SpUtil.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 60059, "method_name": "putMap", "class_name": "SpUtil", "params": ["Context", "String", "Map<K,V>"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static <K extends Serializable, V extends Serializable> void putMap(Context context,\n                                                                               String key, Map<K, V> map) {\n        try {\n            put(context, key, map);\n        } catch (Exception e) {\n            e.printStackTrace();\n        }\n    }", "url": "https://raw.githubusercontent.com/Aivacom/JLYLiveChat-android/master/app/src/main/java/com/mediaroom/utils/SpUtil.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 60060, "method_name": "getMap", "class_name": "SpUtil", "params": ["Context", "String"], "throws": null, "modifiers": ["public", "static"], "return_type": "Map<K,V>", "snippet": "    public static <K extends Serializable, V extends Serializable> Map<K, V> getMap(Context context,\n                                                                                    String key) {\n        try {\n            return (Map<K, V>) get(context, key);\n        } catch (Exception e) {\n            e.printStackTrace();\n        }\n        return null;\n    }", "url": "https://raw.githubusercontent.com/Aivacom/JLYLiveChat-android/master/app/src/main/java/com/mediaroom/utils/SpUtil.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 60061, "method_name": "put", "class_name": "SpUtil", "params": ["Context", "String", "Object"], "throws": ["IOException"], "modifiers": ["static", "private"], "return_type": "void", "snippet": "    private static void put(Context context, String key, Object obj)\n            throws IOException {\n        if (obj == null) {//\u5224\u65ad\u5bf9\u8c61\u662f\u5426\u4e3a\u7a7a\n            return;\n        }\n        ByteArrayOutputStream baos = new ByteArrayOutputStream();\n        ObjectOutputStream oos = null;\n        oos = new ObjectOutputStream(baos);\n        oos.writeObject(obj);\n        // \u5c06\u5bf9\u8c61\u653e\u5230OutputStream\u4e2d\n        // \u5c06\u5bf9\u8c61\u8f6c\u6362\u6210byte\u6570\u7ec4\uff0c\u5e76\u5c06\u5176\u8fdb\u884cbase64\u7f16\u7801\n        String objectStr = new String(Base64.encode(baos.toByteArray(), Base64.DEFAULT));\n        baos.close();\n        oos.close();\n\n        putString(context, key, objectStr);\n    }", "url": "https://raw.githubusercontent.com/Aivacom/JLYLiveChat-android/master/app/src/main/java/com/mediaroom/utils/SpUtil.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 60062, "method_name": "get", "class_name": "SpUtil", "params": ["Context", "String"], "throws": ["IOException", "ClassNotFoundException"], "modifiers": ["static", "private"], "return_type": "Object", "snippet": "    private static Object get(Context context, String key)\n            throws IOException, ClassNotFoundException {\n        String wordBase64 = getString(context, key);\n        // \u5c06base64\u683c\u5f0f\u5b57\u7b26\u4e32\u8fd8\u539f\u6210byte\u6570\u7ec4\n        if (TextUtils.isEmpty(wordBase64)) { //\u4e0d\u53ef\u5c11\uff0c\u5426\u5219\u5728\u4e0b\u9762\u4f1a\u62a5java.io.StreamCorruptedException\n            return null;\n        }\n        byte[] objBytes = Base64.decode(wordBase64.getBytes(), Base64.DEFAULT);\n        ByteArrayInputStream bais = new ByteArrayInputStream(objBytes);\n        ObjectInputStream ois = new ObjectInputStream(bais);\n        // \u5c06byte\u6570\u7ec4\u8f6c\u6362\u6210product\u5bf9\u8c61\n        Object obj = ois.readObject();\n        bais.close();\n        ois.close();\n        return obj;\n    }", "url": "https://raw.githubusercontent.com/Aivacom/JLYLiveChat-android/master/app/src/main/java/com/mediaroom/utils/SpUtil.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 60063, "method_name": "createConfigFile", "class_name": "ConfigFileGen", "params": ["InitConfigEntity"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void createConfigFile(InitConfigEntity config) {\n\n        // \u751f\u6210 configtx.yaml \u6587\u4ef6,\u5176\u5b83\u673a\u6784\u5728profile\u4e2d\u53ea\u6709PrivateChannel\u914d\u7f6e\uff0c\u9700\u5728\u5b50\u7c7b\u5177\u4f53\u5b9e\u73b0\n        if (fabricConfigGen.configTxGen(config)) {\n            // log.info(\"\u751f\u6210 configtx.yaml \u6587\u4ef6\u6210\u529f\");\n            log.info(\"the configtx.yaml file was generated successfully\");\n        } else {\n            // log.error(\"\u751f\u6210 configtx.yaml \u6587\u4ef6\u5931\u8d25\");\n            log.error(\"Failed to generate configtx.yaml file\");\n        }\n\n        // \u751f\u6210 crypto-config.yaml \u6587\u4ef6\n        if (fabricConfigGen.cryptoGen(config)) {\n            // log.info(\"\u751f\u6210 crypto-config.yaml \u6587\u4ef6\u6210\u529f\");\n            log.info(\"the crypto-config.yaml file was generated successfully\");\n        } else {\n            // log.error(\"\u751f\u6210 crypto-config.yaml \u6587\u4ef6\u5931\u8d25\");\n            log.error(\"Failed to generate crypto-config.yaml file\");\n        }\n\n        // \u521b\u5efa crypto-config \u76ee\u5f55\u548c\u8bc1\u4e66\n        if (createNewCerts()) {\n            // log.info(\"\u521b\u5efa\u8bc1\u4e66\u6210\u529f\");\n            log.info(\"Successfully created certificate\");\n        } else {\n            // log.error(\"\u521b\u5efa\u8bc1\u4e66\u5931\u8d25\");\n            log.error(\"Failed to create certificate\");\n        }\n\n        // \u751f\u6210 orderer docker compose yaml \u6587\u4ef6\n        if (dockerConfigGen.ordererComposeFileGen(config)) {\n            // log.info(\"\u751f\u6210 docker-compose-orderer.yaml \u6587\u4ef6\u6210\u529f\");\n            log.info(\"the docker-compose-orderer.yaml file was generated successfully\");\n        } else {\n            // log.error(\"\u751f\u6210 docker-compose-orderer.yaml \u6587\u4ef6\u5931\u8d25\");\n            log.error(\"Failed to generate docker-compose-orderer.yaml file\");\n        }\n\n        // \u751f\u6210 peer docker compose yaml \u6587\u4ef6,\u672c\u914d\u7f6e\u6587\u4ef6\u4e0d\u533a\u5206\u53d1\u8d77\u673a\u6784\u4e0e\u5176\u4ed6\u673a\u6784\uff0c\u53ef\u5177\u4f53\u5b9e\u73b0\n        if (dockerConfigGen.peerComposeFileGen(config)) {\n            // log.info(\"\u751f\u6210 docker-compose-peer.yaml \u6587\u4ef6\u6210\u529f\");\n            log.info(\"the docker-compose-peer.yaml file was generated successfully\");\n        } else {\n            // log.error(\"\u751f\u6210 docker-compose-peer.yaml \u6587\u4ef6\u5931\u8d25\");\n            log.error(\"Failed to generate docker-compose-peer.yaml file\");\n        }\n    }", "url": "https://raw.githubusercontent.com/zeoio/fabric-toolkit/master/bcp-install-biz/src/main/java/com/cgb/bcpinstall/config/ConfigFileGen.java", "stars": "7", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 60064, "method_name": "createNewCerts", "class_name": "ConfigFileGen", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean createNewCerts() {\n        return createCerts(\"up\");\n    }", "url": "https://raw.githubusercontent.com/zeoio/fabric-toolkit/master/bcp-install-biz/src/main/java/com/cgb/bcpinstall/config/ConfigFileGen.java", "stars": "7", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 60065, "method_name": "createExtendCerts", "class_name": "ConfigFileGen", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean createExtendCerts() {\n        return createCerts(\"extend\");\n    }", "url": "https://raw.githubusercontent.com/zeoio/fabric-toolkit/master/bcp-install-biz/src/main/java/com/cgb/bcpinstall/config/ConfigFileGen.java", "stars": "7", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 60066, "method_name": "createCerts", "class_name": "ConfigFileGen", "params": ["String"], "throws": null, "modifiers": ["private"], "return_type": "boolean", "snippet": "    private boolean createCerts(String mode) {\n        String workingDir = modeService.getInitDir() + \"fabric-net/cryptoAndConfig\";\n        String shellFilePath = modeService.getInitDir() + \"generate.sh\";\n        try {\n            ProcessUtil.Result result = ProcessUtil.execCmd(\"bash \" + shellFilePath + \" \" + mode, new String[]{\"CRYPTTOGEN_FILE_PATH\" + \"=\" + CacheUtil.getCryptogenFilePath()}, workingDir);\n            if (result.getCode() == 0) {\n                return true;\n            }\n        } catch (Exception e) {\n            e.printStackTrace();\n        }\n        return false;\n    }", "url": "https://raw.githubusercontent.com/zeoio/fabric-toolkit/master/bcp-install-biz/src/main/java/com/cgb/bcpinstall/config/ConfigFileGen.java", "stars": "7", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 60067, "method_name": "onFinish", "class_name": "EventListenersListener", "params": [], "throws": null, "modifiers": ["public", "abstract"], "return_type": "void", "snippet": "    public abstract void onFinish();\n    public void Add(AbstractEventListener abstractEventListener)  {\n        if(Locked)\n            throw new RuntimeException(\"Event Listeners Listener Locked\");\n        retrievalEventListeners.add(abstractEventListener);\n    }", "url": "https://raw.githubusercontent.com/islammohsen/FirebaseDao/master/firbasedao/src/main/java/com/example/firbasedao/Listeners/EventListenersListener.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 60068, "method_name": "Add", "class_name": "EventListenersListener", "params": ["AbstractEventListener"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void Add(AbstractEventListener abstractEventListener)  {\n        if(Locked)\n            throw new RuntimeException(\"Event Listeners Listener Locked\");\n        retrievalEventListeners.add(abstractEventListener);\n    }", "url": "https://raw.githubusercontent.com/islammohsen/FirebaseDao/master/firbasedao/src/main/java/com/example/firbasedao/Listeners/EventListenersListener.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 60069, "method_name": "OnFinishAddingListeners", "class_name": "EventListenersListener", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void OnFinishAddingListeners()\n    {\n        Locked = true;\n        if(retrievalEventListeners.size() == 0)\n            onFinish();\n    }", "url": "https://raw.githubusercontent.com/islammohsen/FirebaseDao/master/firbasedao/src/main/java/com/example/firbasedao/Listeners/EventListenersListener.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 60070, "method_name": "notify", "class_name": "EventListenersListener", "params": ["AbstractEventListener"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void notify(AbstractEventListener abstractEventListener)  {\n        if(Locked == false)\n            throw new RuntimeException(\"Event Listeners Listener not Locked\");\n        retrievalEventListeners.remove(abstractEventListener);\n        if(retrievalEventListeners.size() == 0)\n            onFinish();\n    }", "url": "https://raw.githubusercontent.com/islammohsen/FirebaseDao/master/firbasedao/src/main/java/com/example/firbasedao/Listeners/EventListenersListener.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 60071, "method_name": "onCreate", "class_name": "TVLaunchActivity", "params": ["Bundle"], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "\tprotected void onCreate(Bundle savedInstanceState) {\n\t\tsuper.onCreate(savedInstanceState);\n\n\t\tIntent recommendationIntent = new Intent(this, RecommendationService.class);\n\t\tstartService(recommendationIntent);\n\n\t\tif (ContextCompat.checkSelfPermission(this, Manifest.permission.RECORD_AUDIO) != PackageManager.PERMISSION_GRANTED) {\n\t\t\tActivityCompat.requestPermissions(this, new String[]{Manifest.permission.RECORD_AUDIO, Manifest.permission.WRITE_EXTERNAL_STORAGE}, PERMISSIONS_REQUEST);\n\t\t\treturn;\n\t\t}\n\n\t\tproceedCreate();\n\t}", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/tv/src/main/java/butter/droid/tv/activities/TVLaunchActivity.java", "stars": "4", "class_props": {"extends": "Activity", "implements": null, "modifiers": ["public"]}}, {"id": 60072, "method_name": "proceedCreate", "class_name": "TVLaunchActivity", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "\tprivate void proceedCreate() {\n\t\tBoolean firstRun = PrefUtils.get(this, Prefs.FIRST_RUN, true);\n\n\t\tif (firstRun) {\n\t\t\t//run the welcome wizard\n\t\t\tTVWelcomeActivity.startActivity(this);\n\t\t} else {\n\t\t\tString action = getIntent().getAction();\n\t\t\tUri data = getIntent().getData();\n\t\t\tif (action != null && action.equals(Intent.ACTION_VIEW) && data != null) {\n\t\t\t\tString streamUrl = data.toString();\n\t\t\t\ttry {\n\t\t\t\t\tstreamUrl = URLDecoder.decode(streamUrl, \"utf-8\");\n\t\t\t\t\tTVStreamLoadingActivity.startActivity(this, new StreamInfo(streamUrl));\n\t\t\t\t\tfinish();\n\t\t\t\t\treturn;\n\t\t\t\t} catch (UnsupportedEncodingException e) {\n\t\t\t\t\te.printStackTrace();\n\t\t\t\t}\n\t\t\t}\n\t\t\tTVMainActivity.startActivity(this);\n\t\t}\n\t}", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/tv/src/main/java/butter/droid/tv/activities/TVLaunchActivity.java", "stars": "4", "class_props": {"extends": "Activity", "implements": null, "modifiers": ["public"]}}, {"id": 60073, "method_name": "onRequestPermissionsResult", "class_name": "TVLaunchActivity", "params": ["int", "String", "int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void onRequestPermissionsResult(int requestCode, @NonNull String permissions[], @NonNull int[] grantResults) {\n\t\tswitch (requestCode) {\n\t\t\tcase PERMISSIONS_REQUEST: {\n\t\t\t\tif (grantResults.length == 2 && grantResults[0] == PackageManager.PERMISSION_GRANTED && grantResults[1] == PackageManager.PERMISSION_GRANTED) {\n\t\t\t\t\tproceedCreate();\n\t\t\t\t} else {\n\t\t\t\t\tfinish();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/tv/src/main/java/butter/droid/tv/activities/TVLaunchActivity.java", "stars": "4", "class_props": {"extends": "Activity", "implements": null, "modifiers": ["public"]}}, {"id": 60074, "method_name": "printStackTrace", "class_name": "AuthenticationFailedException", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void printStackTrace() {\n        super.printStackTrace();\n    }", "url": "https://raw.githubusercontent.com/aayush-grover/SoundCloud-Rest-Api/master/musichoster-service/src/main/java/com/upgrad/musichoster/service/exception/AuthenticationFailedException.java", "stars": "2", "class_props": {"extends": "Exception", "implements": null, "modifiers": ["public"]}}, {"id": 60075, "method_name": "printStackTrace", "class_name": "AuthenticationFailedException", "params": ["PrintStream"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void printStackTrace(PrintStream s) {\n        super.printStackTrace(s);\n    }", "url": "https://raw.githubusercontent.com/aayush-grover/SoundCloud-Rest-Api/master/musichoster-service/src/main/java/com/upgrad/musichoster/service/exception/AuthenticationFailedException.java", "stars": "2", "class_props": {"extends": "Exception", "implements": null, "modifiers": ["public"]}}, {"id": 60076, "method_name": "printStackTrace", "class_name": "AuthenticationFailedException", "params": ["PrintWriter"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void printStackTrace(PrintWriter s) {\n        super.printStackTrace(s);\n    }", "url": "https://raw.githubusercontent.com/aayush-grover/SoundCloud-Rest-Api/master/musichoster-service/src/main/java/com/upgrad/musichoster/service/exception/AuthenticationFailedException.java", "stars": "2", "class_props": {"extends": "Exception", "implements": null, "modifiers": ["public"]}}, {"id": 60077, "method_name": "findAll", "class_name": "UserBusiness", "params": ["int", "int"], "throws": null, "modifiers": ["public"], "return_type": "Page<UserEntity>", "snippet": "\tpublic Page<UserEntity> findAll(int page, int pageSize) {\n\t\t// TODO Auto-generated method stub\n\t\treturn null;\n\t}", "url": "https://raw.githubusercontent.com/bruinli28/stockmarket/master/cloud-user-service/src/main/java/com/iiht/stock/service/UserBusiness.java", "stars": "2", "class_props": {"extends": null, "implements": ["UserService"], "modifiers": ["public"]}}, {"id": 60078, "method_name": "findUserById", "class_name": "UserBusiness", "params": ["Integer"], "throws": null, "modifiers": ["public"], "return_type": "UserEntity", "snippet": "\tpublic UserEntity findUserById(Integer id) {\n\t\treturn userRepository.findById(id);\n\t}", "url": "https://raw.githubusercontent.com/bruinli28/stockmarket/master/cloud-user-service/src/main/java/com/iiht/stock/service/UserBusiness.java", "stars": "2", "class_props": {"extends": null, "implements": ["UserService"], "modifiers": ["public"]}}, {"id": 60079, "method_name": "findAllUsers", "class_name": "UserBusiness", "params": [], "throws": null, "modifiers": ["public"], "return_type": "List<UserEntity>", "snippet": "\tpublic List<UserEntity> findAllUsers(){\n\t\treturn userRepository.findAll();\n\t}", "url": "https://raw.githubusercontent.com/bruinli28/stockmarket/master/cloud-user-service/src/main/java/com/iiht/stock/service/UserBusiness.java", "stars": "2", "class_props": {"extends": null, "implements": ["UserService"], "modifiers": ["public"]}}, {"id": 60080, "method_name": "registUser", "class_name": "UserBusiness", "params": ["UserEntity"], "throws": null, "modifiers": ["public"], "return_type": "UserEntity", "snippet": "\tpublic UserEntity registUser(UserEntity user){\n\t\treturn userRepository.saveAndFlush(user);\n\t}", "url": "https://raw.githubusercontent.com/bruinli28/stockmarket/master/cloud-user-service/src/main/java/com/iiht/stock/service/UserBusiness.java", "stars": "2", "class_props": {"extends": null, "implements": ["UserService"], "modifiers": ["public"]}}, {"id": 60081, "method_name": "update", "class_name": "UserBusiness", "params": ["UserEntity"], "throws": null, "modifiers": ["public"], "return_type": "UserEntity", "snippet": "\tpublic UserEntity update(UserEntity user) {\n\t\treturn userRepository.save(user);\n\t}", "url": "https://raw.githubusercontent.com/bruinli28/stockmarket/master/cloud-user-service/src/main/java/com/iiht/stock/service/UserBusiness.java", "stars": "2", "class_props": {"extends": null, "implements": ["UserService"], "modifiers": ["public"]}}, {"id": 60082, "method_name": "updateUser", "class_name": "UserBusiness", "params": ["UserEntity"], "throws": null, "modifiers": ["public"], "return_type": "UserEntity", "snippet": "\tpublic UserEntity updateUser(UserEntity user) {\n\t\treturn userRepository.save(user);\n\t}", "url": "https://raw.githubusercontent.com/bruinli28/stockmarket/master/cloud-user-service/src/main/java/com/iiht/stock/service/UserBusiness.java", "stars": "2", "class_props": {"extends": null, "implements": ["UserService"], "modifiers": ["public"]}}, {"id": 60083, "method_name": "activeUser", "class_name": "UserBusiness", "params": ["Integer"], "throws": null, "modifiers": ["public"], "return_type": "UserEntity", "snippet": "\tpublic UserEntity activeUser(Integer id) {\n\t\tint flag = userRepository.activeUser(id);\n\t\treturn userRepository.findById(id);\n\t}", "url": "https://raw.githubusercontent.com/bruinli28/stockmarket/master/cloud-user-service/src/main/java/com/iiht/stock/service/UserBusiness.java", "stars": "2", "class_props": {"extends": null, "implements": ["UserService"], "modifiers": ["public"]}}, {"id": 60084, "method_name": "delete", "class_name": "UserBusiness", "params": ["Integer"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void delete(Integer id) {\n\t\tuserRepository.delete(id);\n\t}", "url": "https://raw.githubusercontent.com/bruinli28/stockmarket/master/cloud-user-service/src/main/java/com/iiht/stock/service/UserBusiness.java", "stars": "2", "class_props": {"extends": null, "implements": ["UserService"], "modifiers": ["public"]}}, {"id": 60085, "method_name": "masterVolume", "class_name": "Sound", "params": [], "throws": null, "modifiers": ["public"], "return_type": "float", "snippet": "        public float masterVolume() {\n            if (music)\n                return SoundManager.musicLevel / 10.0f;\n            else\n                return SoundManager.soundLevel/ 10.0f;\n        }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/util/sound/SoundManager.java", "stars": "74", "class_props": {"extends": null, "implements": null, "modifiers": ["private"]}}, {"id": 60086, "method_name": "setVolume", "class_name": "Sound", "params": ["float"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "        public void setVolume(float vol) {\n            if (filename.endsWith(\"wav\"))\n                WavClip.setVolume(filename, vol);\n        }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/util/sound/SoundManager.java", "stars": "74", "class_props": {"extends": null, "implements": null, "modifiers": ["private"]}}, {"id": 60087, "method_name": "play", "class_name": "Sound", "params": ["float"], "throws": null, "modifiers": ["public"], "return_type": "SoundClip", "snippet": "        public SoundClip play(float gain) {\n            if (filename.endsWith(\"wav\"))\n                return WavClip.play(filename, gain, masterVolume());\n            else\n                return null;\n        }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/util/sound/SoundManager.java", "stars": "74", "class_props": {"extends": null, "implements": null, "modifiers": ["private"]}}, {"id": 60088, "method_name": "playContinuously", "class_name": "Sound", "params": ["float"], "throws": null, "modifiers": ["public"], "return_type": "SoundClip", "snippet": "        public SoundClip playContinuously(float gain) {\n            if (filename.endsWith(\"wav\"))\n                return WavClip.playContinuously(filename, gain, style, masterVolume());\n            else\n                return null;\n        }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/util/sound/SoundManager.java", "stars": "74", "class_props": {"extends": null, "implements": null, "modifiers": ["private"]}}, {"id": 60089, "method_name": "getTag", "class_name": "WriteParamsCallable", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getTag() {\n        return \"WriteParamsCallable\";\n    }", "url": "https://raw.githubusercontent.com/luca020400/face/master/java/co/aospa/facesense/camera/callables/WriteParamsCallable.java", "stars": "13", "class_props": {"extends": "CameraCallable", "implements": null, "modifiers": ["public"]}}, {"id": 60090, "method_name": "call", "class_name": "WriteParamsCallable", "params": [], "throws": null, "modifiers": ["public"], "return_type": "CallableReturn", "snippet": "    public CallableReturn call() {\n        Camera camera = getCameraData().mCamera;\n        if (camera == null) {\n            return new CallableReturn(new Exception(\"Camera isn't opened\"));\n        }\n        try {\n            camera.setParameters(getCameraParameters());\n            return new CallableReturn((Object) null);\n        } catch (Exception e) {\n            return new CallableReturn(e);\n        }\n    }", "url": "https://raw.githubusercontent.com/luca020400/face/master/java/co/aospa/facesense/camera/callables/WriteParamsCallable.java", "stars": "13", "class_props": {"extends": "CameraCallable", "implements": null, "modifiers": ["public"]}}, {"id": 60091, "method_name": "auth", "class_name": "WebUploadFileConfig", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Auth", "snippet": "    public Auth auth(){\n        return Auth.create(accessKey, secretKey);\n    }", "url": "https://raw.githubusercontent.com/harry-xqb/rent-house/master/src/main/java/com/harry/renthouse/config/WebUploadFileConfig.java", "stars": "3", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 60092, "method_name": "qiniuConfiguration", "class_name": "WebUploadFileConfig", "params": [], "throws": null, "modifiers": ["public"], "return_type": "com", "snippet": "    public com.qiniu.storage.Configuration qiniuConfiguration(){\n        return new com.qiniu.storage.Configuration(Region.region2());\n    }", "url": "https://raw.githubusercontent.com/harry-xqb/rent-house/master/src/main/java/com/harry/renthouse/config/WebUploadFileConfig.java", "stars": "3", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 60093, "method_name": "uploadManager", "class_name": "WebUploadFileConfig", "params": [], "throws": null, "modifiers": ["public"], "return_type": "UploadManager", "snippet": "    public UploadManager uploadManager(){\n        return new UploadManager(qiniuConfiguration());\n    }", "url": "https://raw.githubusercontent.com/harry-xqb/rent-house/master/src/main/java/com/harry/renthouse/config/WebUploadFileConfig.java", "stars": "3", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 60094, "method_name": "bucketManager", "class_name": "WebUploadFileConfig", "params": [], "throws": null, "modifiers": ["public"], "return_type": "BucketManager", "snippet": "    public BucketManager bucketManager(){\n        return new BucketManager(auth(), qiniuConfiguration());\n    }", "url": "https://raw.githubusercontent.com/harry-xqb/rent-house/master/src/main/java/com/harry/renthouse/config/WebUploadFileConfig.java", "stars": "3", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 60095, "method_name": "calculateHash_nonZeroValue", "class_name": "DefaultHasherTest", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Stream<DynamicTest>", "snippet": "    public Stream<DynamicTest> calculateHash_nonZeroValue() {\n        String key = \"Best key123_ever+:.!\";\n        int seed = 1231238;\n\n        return Arrays\n                .stream(DefaultHasher.values())\n                .map(hasher -> dynamicTest(\n                        hasher.name(),\n                        () -> assertTrue(hasher.hash(key, seed) != 0))\n                );\n    }", "url": "https://raw.githubusercontent.com/ishugaliy/allgood-consistent-hash/master/src/test/java/org/ishugaliy/allgood/consistent/hash/hasher/DefaultHasherTest.java", "stars": "9", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 60096, "method_name": "calculateHash_true", "class_name": "DefaultHasherTest", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Stream<DynamicTest>", "snippet": "    public Stream<DynamicTest> calculateHash_true() {\n        String key1 = \"Best key123_ever+:.!\";\n        String key2 = \"Another best2431\";\n        int seed = 1231238;\n\n        return Arrays\n                .stream(DefaultHasher.values())\n                .map(hasher -> dynamicTest(\n                        hasher.name(),\n                        () -> assertNotEquals(hasher.hash(key1, seed), hasher.hash(key2, seed)))\n                );\n    }", "url": "https://raw.githubusercontent.com/ishugaliy/allgood-consistent-hash/master/src/test/java/org/ishugaliy/allgood/consistent/hash/hasher/DefaultHasherTest.java", "stars": "9", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 60097, "method_name": "checkType", "class_name": "ExprGT", "params": [], "throws": ["TypeException"], "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void checkType() throws TypeException {\n\t\tthis.getLeft().checkType();\n\t\tthis.getRight().checkType();\n\t\tTypeCode[] typeCodes = {TypeCode.INTEGER, TypeCode.FLOAT};\n\t\tgetLeft().getType().assertType(this, typeCodes);\n\t\tgetLeft().getType().assertType(this, getRight().getType());\n\t}", "url": "https://raw.githubusercontent.com/RhenaudTheLukark/Lea2C/master/src/fr/ubordeaux/deptinfo/compilation/lea/abstract_syntax/ExprGT.java", "stars": "3", "class_props": {"extends": "ExprBinary", "implements": null, "modifiers": ["public"]}}, {"id": 60098, "method_name": "generateCode", "class_name": "ExprGT", "params": [], "throws": ["CodeException"], "modifiers": ["public"], "return_type": "String", "snippet": "\tpublic String generateCode() throws CodeException {\n\t\tString result;\n\t\tresult = \"(\" + getLeft().generateCode()\n\t\t\t\t+ \" > \" + getRight().generateCode() + \")\";\n\t\treturn result;\n\t}", "url": "https://raw.githubusercontent.com/RhenaudTheLukark/Lea2C/master/src/fr/ubordeaux/deptinfo/compilation/lea/abstract_syntax/ExprGT.java", "stars": "3", "class_props": {"extends": "ExprBinary", "implements": null, "modifiers": ["public"]}}, {"id": 60099, "method_name": "constEval", "class_name": "ExprGT", "params": ["Environment<ExprVALUE>"], "throws": ["EnvironmentException", "TypeException"], "modifiers": ["public"], "return_type": "Object", "snippet": "\tpublic Object constEval(Environment<ExprVALUE> environment) throws EnvironmentException, TypeException {\n\t\tObject o1 = getLeft().constEval(environment);\n\t\tObject o2 = getRight().constEval(environment);\n\t\tif ((o1 instanceof Integer) && (o2 instanceof Integer)) \n\t\t\treturn new Boolean((Integer)o1 > (Integer)o2);\n\t\telse if ((o1 instanceof Float) && (o2 instanceof Float)) \n\t\t\treturn new Boolean((Float)o1 > (Float)o2);\n\t\telse\n\t\t\tthrow new TypeException(\"Impossible de calculer la constante, erreur de type\", line, column);\n\t}", "url": "https://raw.githubusercontent.com/RhenaudTheLukark/Lea2C/master/src/fr/ubordeaux/deptinfo/compilation/lea/abstract_syntax/ExprGT.java", "stars": "3", "class_props": {"extends": "ExprBinary", "implements": null, "modifiers": ["public"]}}, {"id": 60100, "method_name": "toString", "class_name": "ExprGT", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "\tpublic String toString() {\n\t\treturn \"(\" + this.getLeft() + \" > \" + this.getRight() + \")\";\n\t}", "url": "https://raw.githubusercontent.com/RhenaudTheLukark/Lea2C/master/src/fr/ubordeaux/deptinfo/compilation/lea/abstract_syntax/ExprGT.java", "stars": "3", "class_props": {"extends": "ExprBinary", "implements": null, "modifiers": ["public"]}}, {"id": 60101, "method_name": "onCreateViewHolder", "class_name": "MessageAdapter", "params": ["ViewGroup", "int"], "throws": null, "modifiers": ["public"], "return_type": "RecyclerView", "snippet": "    public RecyclerView.ViewHolder onCreateViewHolder(@NonNull ViewGroup parent, int viewType) {\n        if (viewType==SEND_TYPE){\n            View view= LayoutInflater.from(parent.getContext()).inflate(R.layout.message_send_layout,parent,false);\n         return new FrameSendHolder(view);\n        }else if (viewType==RECEIVE_TYPE){\n            View view=LayoutInflater.from(parent.getContext()).inflate(R.layout.message_receive_layout,parent,false);\n            return new FrameReceiveHolder(view);\n        }\n        return null;\n    }", "url": "https://raw.githubusercontent.com/mrchengwenlong/NettyIM/master/app/src/main/java/com/takiku/nettyim/widget/MessageAdapter.java", "stars": "23", "class_props": {"extends": "RecyclerView", "implements": null, "modifiers": ["public"]}}, {"id": 60102, "method_name": "setMessageList", "class_name": "MessageAdapter", "params": ["List<AppMessage>"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setMessageList(List<AppMessage> messageList){\n        this.list=messageList;\n    }", "url": "https://raw.githubusercontent.com/mrchengwenlong/NettyIM/master/app/src/main/java/com/takiku/nettyim/widget/MessageAdapter.java", "stars": "23", "class_props": {"extends": "RecyclerView", "implements": null, "modifiers": ["public"]}}, {"id": 60103, "method_name": "addMessage", "class_name": "MessageAdapter", "params": ["AppMessage"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void addMessage(AppMessage appMessage){\n        for (int i=0;i<list.size();i++){\n            AppMessage target=list.get(i);\n            if (target.getHead().getMsgId().equals(appMessage.getHead().getMsgId())){\n                target=appMessage;\n                return;\n            }\n        }\n        list.add(appMessage);\n        notifyItemChanged(getItemCount()-1);\n\n    }", "url": "https://raw.githubusercontent.com/mrchengwenlong/NettyIM/master/app/src/main/java/com/takiku/nettyim/widget/MessageAdapter.java", "stars": "23", "class_props": {"extends": "RecyclerView", "implements": null, "modifiers": ["public"]}}, {"id": 60104, "method_name": "onBindViewHolder", "class_name": "MessageAdapter", "params": ["RecyclerView", "int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onBindViewHolder(@NonNull RecyclerView.ViewHolder holder, int position) {\n        if (holder instanceof FrameReceiveHolder) {\n            FrameReceiveHolder receiveHolder = (FrameReceiveHolder) holder;\n            receiveHolder.contentView.setText(list.get(position).getBody());\n            switch (list.get(position).msgStatus) {\n                case MSG_STATUS_SEND:\n                    receiveHolder.errorView.setVisibility(View.GONE);\n                    receiveHolder.statusView.setText(\"\u5df2\u53d1\u9001\");\n                    break;\n                case MSG_STATUS_FAILED:\n                    receiveHolder.errorView.setVisibility(View.VISIBLE);\n                    receiveHolder.statusView.setText(\"\u53d1\u9001\u5931\u8d25\");\n\n                case MSG_STATUS_READ:\n                    receiveHolder.errorView.setVisibility(View.GONE);\n                    receiveHolder.statusView.setText(\"\u5df2\u8bfb\");\n                    break;\n                case MSG_STATUS_SENDING:\n                    receiveHolder.errorView.setVisibility(View.GONE);\n                    receiveHolder.statusView.setText(\"\u53d1\u9001\u4e2d...\");\n                    break;\n            }\n        } else if (holder instanceof FrameSendHolder) {\n            FrameSendHolder frameSendHolder= (FrameSendHolder) holder;\n            frameSendHolder.contentView.setText(list.get(position).getBody());\n            switch (list.get(position).msgStatus) {\n                case MSG_STATUS_SEND:\n                    frameSendHolder.errorView.setVisibility(View.GONE);\n                    frameSendHolder.statusView.setText(\"\u5df2\u53d1\u9001\");\n                    break;\n                case MSG_STATUS_FAILED:\n                    frameSendHolder.errorView.setVisibility(View.VISIBLE);\n                    frameSendHolder.statusView.setText(\"\u53d1\u9001\u5931\u8d25\");\n\n                case MSG_STATUS_READ:\n                    frameSendHolder.errorView.setVisibility(View.GONE);\n                    frameSendHolder.statusView.setText(\"\u5df2\u8bfb\");\n                    break;\n                case MSG_STATUS_SENDING:\n                    frameSendHolder.errorView.setVisibility(View.GONE);\n                    frameSendHolder.statusView.setText(\"\u53d1\u9001\u4e2d...\");\n                    break;\n            }\n        }\n    }", "url": "https://raw.githubusercontent.com/mrchengwenlong/NettyIM/master/app/src/main/java/com/takiku/nettyim/widget/MessageAdapter.java", "stars": "23", "class_props": {"extends": "RecyclerView", "implements": null, "modifiers": ["public"]}}, {"id": 60105, "method_name": "getItemCount", "class_name": "MessageAdapter", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getItemCount() {\n        return list.size();\n    }", "url": "https://raw.githubusercontent.com/mrchengwenlong/NettyIM/master/app/src/main/java/com/takiku/nettyim/widget/MessageAdapter.java", "stars": "23", "class_props": {"extends": "RecyclerView", "implements": null, "modifiers": ["public"]}}, {"id": 60106, "method_name": "getItemViewType", "class_name": "MessageAdapter", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getItemViewType(int position) {\n        if (list.get(position).getHead().getFromId().equals(myselfId)){\n            return SEND_TYPE;\n        }else {\n            return RECEIVE_TYPE;\n        }\n    }", "url": "https://raw.githubusercontent.com/mrchengwenlong/NettyIM/master/app/src/main/java/com/takiku/nettyim/widget/MessageAdapter.java", "stars": "23", "class_props": {"extends": "RecyclerView", "implements": null, "modifiers": ["public"]}}, {"id": 60107, "method_name": "onItemChange", "class_name": "MessageAdapter", "params": ["AppMessage"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onItemChange(AppMessage appMessage){\n            for (int i=0;i<list.size();i++){\n                AppMessage target=list.get(i);\n                if (target.getHead().getMsgId().equals(appMessage.getHead().getMsgId())){\n                       target=appMessage;\n                       notifyItemChanged(i);\n                       break;\n                }\n            }\n    }", "url": "https://raw.githubusercontent.com/mrchengwenlong/NettyIM/master/app/src/main/java/com/takiku/nettyim/widget/MessageAdapter.java", "stars": "23", "class_props": {"extends": "RecyclerView", "implements": null, "modifiers": ["public"]}}, {"id": 60108, "method_name": "doInBackground", "class_name": "ServerConnectTask", "params": ["Server"], "throws": null, "modifiers": ["protected"], "return_type": "Intent", "snippet": "    protected Intent doInBackground(Server... params) {\n        Server server = params[0];\n\n        /* Convert input method defined in settings to an integer format used by Humla. */\n        int inputMethod = mSettings.getHumlaInputMethod();\n\n        int audioSource = mSettings.isHandsetMode() ?\n                MediaRecorder.AudioSource.DEFAULT : MediaRecorder.AudioSource.MIC;\n        int audioStream = mSettings.isHandsetMode() ?\n                AudioManager.STREAM_VOICE_CALL : AudioManager.STREAM_MUSIC;\n\n        String applicationVersion = \"\";\n        try {\n            applicationVersion = mContext.getPackageManager().getPackageInfo(mContext.getPackageName(), 0).versionName;\n        } catch (PackageManager.NameNotFoundException e) {\n            e.printStackTrace();\n        }\n\n        Intent connectIntent = new Intent(mContext, MumlaService.class);\n        connectIntent.putExtra(HumlaService.EXTRAS_SERVER, server);\n        connectIntent.putExtra(HumlaService.EXTRAS_CLIENT_NAME, mContext.getString(R.string.app_name)+\" \"+applicationVersion);\n        connectIntent.putExtra(HumlaService.EXTRAS_TRANSMIT_MODE, inputMethod);\n        connectIntent.putExtra(HumlaService.EXTRAS_DETECTION_THRESHOLD, mSettings.getDetectionThreshold());\n        connectIntent.putExtra(HumlaService.EXTRAS_AMPLITUDE_BOOST, mSettings.getAmplitudeBoostMultiplier());\n        connectIntent.putExtra(HumlaService.EXTRAS_AUTO_RECONNECT, mSettings.isAutoReconnectEnabled());\n        connectIntent.putExtra(HumlaService.EXTRAS_AUTO_RECONNECT_DELAY, MumlaService.RECONNECT_DELAY);\n        connectIntent.putExtra(HumlaService.EXTRAS_USE_OPUS, !mSettings.isOpusDisabled());\n        connectIntent.putExtra(HumlaService.EXTRAS_INPUT_RATE, mSettings.getInputSampleRate());\n        connectIntent.putExtra(HumlaService.EXTRAS_INPUT_QUALITY, mSettings.getInputQuality());\n        connectIntent.putExtra(HumlaService.EXTRAS_FORCE_TCP, mSettings.isTcpForced());\n        connectIntent.putExtra(HumlaService.EXTRAS_USE_TOR, mSettings.isTorEnabled());\n        connectIntent.putStringArrayListExtra(HumlaService.EXTRAS_ACCESS_TOKENS, (ArrayList<String>) mDatabase.getAccessTokens(server.getId()));\n        connectIntent.putExtra(HumlaService.EXTRAS_AUDIO_SOURCE, audioSource);\n        connectIntent.putExtra(HumlaService.EXTRAS_AUDIO_STREAM, audioStream);\n        connectIntent.putExtra(HumlaService.EXTRAS_FRAMES_PER_PACKET, mSettings.getFramesPerPacket());\n        connectIntent.putExtra(HumlaService.EXTRAS_TRUST_STORE, MumlaTrustStore.getTrustStorePath(mContext));\n        connectIntent.putExtra(HumlaService.EXTRAS_TRUST_STORE_PASSWORD, MumlaTrustStore.getTrustStorePassword());\n        connectIntent.putExtra(HumlaService.EXTRAS_TRUST_STORE_FORMAT, MumlaTrustStore.getTrustStoreFormat());\n        connectIntent.putExtra(HumlaService.EXTRAS_HALF_DUPLEX, mSettings.isHalfDuplex());\n        connectIntent.putExtra(HumlaService.EXTRAS_ENABLE_PREPROCESSOR, mSettings.isPreprocessorEnabled());\n        if (server.isSaved()) {\n            ArrayList<Integer> muteHistory = (ArrayList<Integer>) mDatabase.getLocalMutedUsers(server.getId());\n            ArrayList<Integer> ignoreHistory = (ArrayList<Integer>) mDatabase.getLocalIgnoredUsers(server.getId());\n            connectIntent.putExtra(HumlaService.EXTRAS_LOCAL_MUTE_HISTORY, muteHistory);\n            connectIntent.putExtra(HumlaService.EXTRAS_LOCAL_IGNORE_HISTORY, ignoreHistory);\n        }\n\n        if (mSettings.isUsingCertificate()) {\n            long certificateId = mSettings.getDefaultCertificate();\n            byte[] certificate = mDatabase.getCertificateData(certificateId);\n            if (certificate != null)\n                connectIntent.putExtra(HumlaService.EXTRAS_CERTIFICATE, certificate);\n            // TODO(acomminos): handle the case where a certificate's data is unavailable.\n        }\n\n        connectIntent.setAction(HumlaService.ACTION_CONNECT);\n        return connectIntent;\n    }", "url": "https://raw.githubusercontent.com/quite/mumla/master/app/src/main/java/se/lublin/mumla/app/ServerConnectTask.java", "stars": "9", "class_props": {"extends": "AsyncTask", "implements": null, "modifiers": ["public"]}}, {"id": 60109, "method_name": "onPostExecute", "class_name": "ServerConnectTask", "params": ["Intent"], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void onPostExecute(Intent intent) {\n        super.onPostExecute(intent);\n        mContext.startService(intent);\n    }", "url": "https://raw.githubusercontent.com/quite/mumla/master/app/src/main/java/se/lublin/mumla/app/ServerConnectTask.java", "stars": "9", "class_props": {"extends": "AsyncTask", "implements": null, "modifiers": ["public"]}}, {"id": 60110, "method_name": "onCreateViewHolder", "class_name": "AdapterHighlights", "params": ["ViewGroup", "int"], "throws": null, "modifiers": ["public"], "return_type": "RecyclerView", "snippet": "    public RecyclerView.ViewHolder onCreateViewHolder(@NonNull ViewGroup viewGroup, int viewType) {\n\n\n        if (viewType == VIEW_TYPE_TUTORIAL_STEP) {\n\n            return ViewHolderTutorialStep.create(viewGroup,context,fragment,this);\n        }\n        else if(viewType==VIEW_TYPE_HIGHLIGHT)\n        {\n            return ViewHolderHighlight.create(viewGroup,context,fragment,this);\n        }\n\n\n        return null;\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/UtilityScreens/zHighlightSlider/AdapterHighlights.java", "stars": "10", "class_props": {"extends": "RecyclerView", "implements": null, "modifiers": ["public"]}}, {"id": 60111, "method_name": "onBindViewHolder", "class_name": "AdapterHighlights", "params": ["RecyclerView", "int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onBindViewHolder(@NonNull RecyclerView.ViewHolder holder, int position) {\n\n\n        if(holder instanceof ViewHolderHighlight)\n        {\n            ((ViewHolderHighlight) holder).setItem((HighlightItem) dataset.get(position));\n        }\n        else if(holder instanceof ViewHolderTutorialStep)\n        {\n            ((ViewHolderTutorialStep) holder).setItem((TutorialStep) dataset.get(position));\n        }\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/UtilityScreens/zHighlightSlider/AdapterHighlights.java", "stars": "10", "class_props": {"extends": "RecyclerView", "implements": null, "modifiers": ["public"]}}, {"id": 60112, "method_name": "getItemCount", "class_name": "AdapterHighlights", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getItemCount() {\n        return dataset.size();\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/UtilityScreens/zHighlightSlider/AdapterHighlights.java", "stars": "10", "class_props": {"extends": "RecyclerView", "implements": null, "modifiers": ["public"]}}, {"id": 60113, "method_name": "getItemViewType", "class_name": "AdapterHighlights", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getItemViewType(int position) {\n\n        super.getItemViewType(position);\n\n\n        if (position == dataset.size()) {\n\n            return VIEW_TYPE_PROGRESS_BAR;\n        }\n        else if (dataset.get(position) instanceof HighlightItem) {\n\n            return VIEW_TYPE_HIGHLIGHT;\n        }\n        else if (dataset.get(position) instanceof TutorialStep) {\n\n            return VIEW_TYPE_TUTORIAL_STEP;\n        }\n\n        return -1;\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/UtilityScreens/zHighlightSlider/AdapterHighlights.java", "stars": "10", "class_props": {"extends": "RecyclerView", "implements": null, "modifiers": ["public"]}}, {"id": 60114, "method_name": "setLoadMore", "class_name": "AdapterHighlights", "params": ["boolean"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setLoadMore(boolean loadMore)\n    {\n        this.loadMore = loadMore;\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/UtilityScreens/zHighlightSlider/AdapterHighlights.java", "stars": "10", "class_props": {"extends": "RecyclerView", "implements": null, "modifiers": ["public"]}}, {"id": 60115, "method_name": "setup", "class_name": "UserJWTControllerIT", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setup() {\n        UserJWTController userJWTController = new UserJWTController(tokenProvider, authenticationManager, userService);\n        this.mockMvc = MockMvcBuilders.standaloneSetup(userJWTController)\n            .setControllerAdvice(exceptionTranslator)\n            .build();\n    }", "url": "https://raw.githubusercontent.com/gardle/gardle-web/master/src/test/java/com/gardle/web/rest/UserJWTControllerIT.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 60116, "method_name": "testAuthorize", "class_name": "UserJWTControllerIT", "params": [], "throws": ["Exception"], "modifiers": ["public"], "return_type": "void", "snippet": "    public void testAuthorize() throws Exception {\n        User user = new User();\n        user.setLogin(\"user-jwt-controller\");\n        user.setEmail(\"user-jwt-controller@example.com\");\n        user.setActivated(true);\n        user.setPassword(passwordEncoder.encode(\"test\"));\n        user.setBankAccountIBAN(DEFAULT_IBAN);\n        userRepository.saveAndFlush(user);\n\n        LoginVM login = new LoginVM();\n        login.setUsername(\"user-jwt-controller\");\n        login.setPassword(\"test\");\n        mockMvc.perform(post(\"/api/v1/authenticate\")\n            .contentType(TestUtil.APPLICATION_JSON_UTF8)\n            .content(TestUtil.convertObjectToJsonBytes(login)))\n            .andExpect(status().isOk())\n            .andExpect(jsonPath(\"$.id_token\").isString())\n            .andExpect(jsonPath(\"$.id_token\").isNotEmpty())\n            .andExpect(header().string(\"Authorization\", not(nullValue())))\n            .andExpect(header().string(\"Authorization\", not(isEmptyString())));\n    }", "url": "https://raw.githubusercontent.com/gardle/gardle-web/master/src/test/java/com/gardle/web/rest/UserJWTControllerIT.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 60117, "method_name": "testAuthorizeWithRememberMe", "class_name": "UserJWTControllerIT", "params": [], "throws": ["Exception"], "modifiers": ["public"], "return_type": "void", "snippet": "    public void testAuthorizeWithRememberMe() throws Exception {\n        User user = new User();\n        user.setLogin(\"user-jwt-controller-remember-me\");\n        user.setEmail(\"user-jwt-controller-remember-me@example.com\");\n        user.setActivated(true);\n        user.setPassword(passwordEncoder.encode(\"test\"));\n        user.setBankAccountIBAN(DEFAULT_IBAN);\n\n        userRepository.saveAndFlush(user);\n\n        LoginVM login = new LoginVM();\n        login.setUsername(\"user-jwt-controller-remember-me\");\n        login.setPassword(\"test\");\n        login.setRememberMe(true);\n        mockMvc.perform(post(\"/api/v1/authenticate\")\n            .contentType(TestUtil.APPLICATION_JSON_UTF8)\n            .content(TestUtil.convertObjectToJsonBytes(login)))\n            .andExpect(status().isOk())\n            .andExpect(jsonPath(\"$.id_token\").isString())\n            .andExpect(jsonPath(\"$.id_token\").isNotEmpty())\n            .andExpect(header().string(\"Authorization\", not(nullValue())))\n            .andExpect(header().string(\"Authorization\", not(isEmptyString())));\n    }", "url": "https://raw.githubusercontent.com/gardle/gardle-web/master/src/test/java/com/gardle/web/rest/UserJWTControllerIT.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 60118, "method_name": "testAuthorizeFails", "class_name": "UserJWTControllerIT", "params": [], "throws": ["Exception"], "modifiers": ["public"], "return_type": "void", "snippet": "    public void testAuthorizeFails() throws Exception {\n        LoginVM login = new LoginVM();\n        login.setUsername(\"wrong-user\");\n        login.setPassword(\"wrong password\");\n        mockMvc.perform(post(\"/api/v1/authenticate\")\n            .contentType(TestUtil.APPLICATION_JSON_UTF8)\n            .content(TestUtil.convertObjectToJsonBytes(login)))\n            .andExpect(status().isUnauthorized())\n            .andExpect(jsonPath(\"$.id_token\").doesNotExist())\n            .andExpect(header().doesNotExist(\"Authorization\"));\n    }", "url": "https://raw.githubusercontent.com/gardle/gardle-web/master/src/test/java/com/gardle/web/rest/UserJWTControllerIT.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 60119, "method_name": "main", "class_name": "TC12_Carwale", "params": ["String"], "throws": ["InterruptedException"], "modifiers": ["public", "static"], "return_type": "void", "snippet": "\tpublic static void main(String[] args) throws InterruptedException {\n\t\t\n\t\tSystem.setProperty(\"webdriver.chrome.driver\", \"./drivers/chromedriver.exe\");\n\n\t\tChromeOptions options = new ChromeOptions();\n\t\toptions.addArguments(\"--disable-notifications\");\n\t\tChromeDriver driver = new ChromeDriver(options);\n\t\tWebDriverWait wait = new WebDriverWait(driver,30);\n\t\t\n\t\t//1) Go to https://www.carwale.com/\n\t\tdriver.get(\"https://www.carwale.com/\");\n\t\tdriver.manage().window().maximize();\n\t\tdriver.manage().timeouts().implicitlyWait(30, TimeUnit.SECONDS);\t\t\n\t\t\n\t\t//2) Click on Used\n\t\tdriver.findElementByXPath(\"//li[@data-tabs='usedCars']\").click();\n\t\t\n\t\t//3) Select the City as Chennai\n\t\tWebElement eleSearch = driver.findElementById(\"usedCarsList\");\n\t\twait.until(ExpectedConditions.elementToBeClickable(eleSearch)).sendKeys(\"Chennai\");\n\t\tThread.sleep(1000);\n\t\teleSearch.sendKeys(Keys.ENTER);\n\t\t\n\t\t//4) Select budget min (8L) and max(12L) and Click Search\n\t\tThread.sleep(500);\n\t\tWebElement eleMin = driver.findElementByXPath(\"//li[@data-min-price='8']\");\n\t\twait.until(ExpectedConditions.elementToBeClickable(eleMin)).click();\n\t\t\n\t\tThread.sleep(500);\n\t\tWebElement eleMax = driver.findElementByXPath(\"//li[@data-max-price='12']\");\n\t\twait.until(ExpectedConditions.elementToBeClickable(eleMax)).click();\n\t\t\n\t\tThread.sleep(1000);\n\t\tdriver.findElementById(\"btnFindCar\").click();\n\t\t\n\t\t//Handling pop-up\n\t\tWebElement eleQuery = driver.findElementById(\"placesQuery\");\n\t\twait.until(ExpectedConditions.visibilityOf(eleQuery)).sendKeys(\"Chennai\");\n\t\tThread.sleep(500);\n\t\tdriver.findElementByXPath(\"//a[@cityname='chennai,tamilnadu']\").click();\n\t\tThread.sleep(3000);\n\t\t\n\t\t//5) Select Cars with Photos under Only Show Cars With\n\t\tWebElement elePhotos = driver.findElementByXPath(\"//span[text()='Cars with Photos']\");\n\t\twait.until(ExpectedConditions.elementToBeClickable(elePhotos)).click();\n\t\tThread.sleep(3000);\n\t\t\n\t\t//6) Select Manufacturer as \"Hyundai\" --> Creta\n\t\tWebElement eleHyundai = driver.findElementByXPath(\"//span[text()=' Hyundai ']\");\n\t\twait.until(ExpectedConditions.elementToBeClickable(eleHyundai));\n\t\tJavascriptExecutor js =(JavascriptExecutor) driver;\n\t\tjs.executeScript(\"arguments[0].click();\",eleHyundai);\n\t\t\n\t\tWebElement eleCreta = driver.findElementByXPath(\"//span[text()='Creta']\");\n\t\twait.until(ExpectedConditions.visibilityOf(eleCreta));\n\t\tjs.executeScript(\"arguments[0].click();\",eleCreta);\n\t\tThread.sleep(2000);\n\t\t\n\t\t//7) Select Fuel Type as Petrol\n\t\tjs.executeScript(\"arguments[0].click();\", driver.findElementByXPath(\"//h3[contains(text(),'Fuel Type')]\"));\n\t\t\n\t\tWebElement elePetrol = driver.findElementByXPath(\"(//span[text()='Petrol'])[1]\");\n\t\twait.until(ExpectedConditions.visibilityOf(elePetrol));\n\t\tjs.executeScript(\"arguments[0].click();\",elePetrol);\n\t\t\n\t\t//8) Select Best Match as \"KM: Low to High\"\n\t\tWebElement eleSort = driver.findElementById(\"sort\");\n\t\tSelect sort = new Select(eleSort);\n\t\twait.until(ExpectedConditions.elementToBeClickable(eleSort));\n\t\tsort.selectByVisibleText(\"KM: Low to High\");\n\t\tThread.sleep(1000);\n\t\t\n\t\t//9) Validate the Cars are listed with KMs Low to High\n\t\tList<WebElement> eleKM = driver.findElementsByXPath(\"//span[@class='slkms vehicle-data__item']\");\n\t\tList<Integer> ListIntkm = new ArrayList<Integer>();\n\t\tSystem.out.println(\"Kilometers before sort...\");\n\t\tfor (int i = 0; i < eleKM.size(); i++) {\n\t\t\tString strKM = eleKM.get(i).getText();\n\t\t\tSystem.out.println(strKM); \n\t\t\tint intKM = Integer.parseInt(strKM.replaceAll(\"\\\\D\", \"\"));\n\t\t\tListIntkm.add(intKM);\n\t\t}\n\t\t\n\t\t//Copy List ListIntkm to another List ListSortKm\n\t\tList<Integer> ListSortKm = new ArrayList<Integer>(ListIntkm);\n\t\tCollections.sort(ListSortKm);\n\t\tSystem.out.println(\"Kilometers after sort...\");\n\t\tfor (Integer eachKM : ListSortKm) {\n\t\t\tSystem.out.println(eachKM+\" km\");\n\t\t}\n\t\t\n\t\tif(ListIntkm.equals(ListSortKm))\n\t\t\tSystem.out.println(\"The cars are listed with KMs Low to High\");\t\t\t\n\t\telse\n\t\t\tSystem.out.println(\"The cars are not listed with KMs Low to High\");\t\t\n\t\t\t\n\t\t//10) Add the least KM ran car to Wishlist\n\t\tInteger leastKM = ListSortKm.get(0);\n\t\tSystem.out.println(\"Least KM utilised by Hyundai Creta car: \"+leastKM);\n\t\tThread.sleep(1000);\n\t\t//WebElement eleWish = driver.findElementByXPath(\"(//span[@class='shortlist-icon--inactive shortlist'])[1]\");\n\t\tfor (int i = 0; i < ListIntkm.size(); i++) {\n\t\t\tif(ListIntkm.get(i).equals(ListSortKm.get(0))) {\n\t\t\t\tWebElement eleWish = driver.findElementByXPath(\"(//span[@class='shortlist-icon--inactive shortlist'])[\"+(i+1)+\"]\");\n\t\t\t\tjs.executeScript(\"arguments[0].click();\", eleWish);\n\t\t\t\tThread.sleep(1000);\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t}\n\t\t\n\t\t//11) Go to Wishlist and Click on More Details\n\t\tWebElement eleCompare = driver.findElementByXPath(\"//li[@data-action='ShortList&CompareWindow_Click']\");\n\t\twait.until(ExpectedConditions.visibilityOf(eleCompare)).click();\n\t\tThread.sleep(500);\n\t\t\n\t\tWebElement eleMore = driver.findElementByXPath(\"//a[contains(text(),'More details')]\");\n\t\twait.until(ExpectedConditions.visibilityOf(eleMore)).click();\n\t\t\n\t\tSet<String> setWin = driver.getWindowHandles();\n\t\tList<String> listWin = new ArrayList<String>(setWin);\n\t\tdriver.switchTo().window(listWin.get(1));\n\t\t\n\t\t//12) Print all the details under Overview \n\t\tList<WebElement> eleDesc = driver.findElementsByXPath(\"//div[@id='overview']//div[@class='equal-width text-light-grey']\");\n\t\tList<WebElement> eleValues = driver.findElementsByXPath(\"//div[@id='overview']//div[@class='equal-width dark-text']\");\n\t\tMap<String,String> map = new LinkedHashMap<String,String>();\n\t\t\n\t\tfor (int i = 0; i < eleDesc.size(); i++) {\n\t\t\tString desc = eleDesc.get(i).getText();\n\t\t\tString value = eleValues.get(i).getText();\n\t\t\tmap.put(desc, value);\n\t\t}\n\t\t\n\t\tfor (Entry<String,String> eachEntry : map.entrySet()) {\n\t\t\tSystem.out.print(eachEntry.getKey()+\"--->\"+eachEntry.getValue());\n\t\t\tSystem.out.println();\n\t\t}\n\t\t\n\t\t//13) Close all browsers.\n\t\tdriver.quit();\n\t}", "url": "https://raw.githubusercontent.com/Nivashini-J/SeleniumBeginner/master/TC12_Carwale.java", "stars": "19", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 60120, "method_name": "create", "class_name": "ViewHolderItemAdmin", "params": ["ViewGroup", "Context", "Fragment", "RecyclerView", "Map<Integer,Item>"], "throws": null, "modifiers": ["public", "static"], "return_type": "ViewHolderItemAdmin", "snippet": "    public static ViewHolderItemAdmin create(ViewGroup parent, Context context, Fragment fragment,\n                                             RecyclerView.Adapter adapter,\n                                             Map<Integer, Item> selectedItems\n\n    )\n    {\n\n        View view = LayoutInflater.from(parent.getContext()).inflate(R.layout.list_item_item_for_admin,parent,false);\n        return new ViewHolderItemAdmin(view,context,fragment,adapter,selectedItems);\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/ItemCatalogue/ItemsDatabaseForAdmin/ViewHolders/ViewHolderItemAdmin.java", "stars": "10", "class_props": {"extends": "RecyclerView", "implements": ["PopupMenu"], "modifiers": ["public"]}}, {"id": 60121, "method_name": "setItem", "class_name": "ViewHolderItemAdmin", "params": ["Item"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setItem(Item item) {\n\n        this.item = item;\n\n        categoryName.setText(item.getItemName());\n\n        ItemStats itemStats = item.getItemStats();\n\n        priceRange.setText(\"Price Range :\\n \" + PrefGeneral.getCurrencySymbol(context) + String.format(\" %.2f\",itemStats.getMin_price()) + \" - \" + String.format(\"%.2f\",itemStats.getMax_price()) + \" per \" + item.getQuantityUnit());\n        priceAverage.setText(\"Price Average :\\n \" + PrefGeneral.getCurrencySymbol(context) + String.format(\" %.2f\",itemStats.getAvg_price()) + \" per \" + item.getQuantityUnit());\n        shopCount.setText(\"Available in \" + itemStats.getShopCount() + \" Shops\");\n        itemRating.setText(String.format(\"%.2f\",itemStats.getRating_avg()));\n        ratingCount.setText(\"( \" + itemStats.getRatingCount() + \" Ratings )\");\n\n\n        if(selectedItems.containsKey(item.getItemID()))\n        {\n            //context.getResources().getColor(R.color.gplus_color_2)\n            itemCategoryListItem.setBackgroundColor(ContextCompat.getColor(context,R.color.gplus_color_2));\n        }\n        else\n        {\n            //context.getResources().getColor(R.color.white)\n            itemCategoryListItem.setBackgroundColor(ContextCompat.getColor(context,R.color.white));\n        }\n\n\n\n        String imagePath = PrefGeneral.getServiceURL(context)\n                + \"/api/v1/Item/Image/three_hundred_\" + item.getItemImageURL() + \".jpg\";\n\n\n        Drawable drawable = VectorDrawableCompat\n                .create(context.getResources(),\n                        R.drawable.ic_nature_people_white_48px, context.getTheme());\n\n        Picasso.get()\n                .load(imagePath)\n                .placeholder(drawable)\n                .into(categoryImage);\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/ItemCatalogue/ItemsDatabaseForAdmin/ViewHolders/ViewHolderItemAdmin.java", "stars": "10", "class_props": {"extends": "RecyclerView", "implements": ["PopupMenu"], "modifiers": ["public"]}}, {"id": 60122, "method_name": "listItemClick", "class_name": "ViewHolderItemAdmin", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void listItemClick()\n    {\n\n\n\n\n        if(selectedItems.containsKey(\n                item.getItemID()\n        ))\n        {\n            selectedItems.remove(item.getItemID());\n        }\n        else\n        {\n\n            selectedItems.put(item.getItemID(),item);\n\n        }\n\n\n\n        if(fragment instanceof ListItemClick)\n        {\n            ((ListItemClick) fragment).notifyItemSelected();\n        }\n\n\n        adapter.notifyItemChanged(getLayoutPosition());\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/ItemCatalogue/ItemsDatabaseForAdmin/ViewHolders/ViewHolderItemAdmin.java", "stars": "10", "class_props": {"extends": "RecyclerView", "implements": ["PopupMenu"], "modifiers": ["public"]}}, {"id": 60123, "method_name": "optionsOverflowClick", "class_name": "ViewHolderItemAdmin", "params": ["View"], "throws": null, "modifiers": [], "return_type": "void", "snippet": "    void optionsOverflowClick(View v)\n    {\n        PopupMenu popup = new PopupMenu(context, v);\n        MenuInflater inflater = popup.getMenuInflater();\n        inflater.inflate(R.menu.item_category_item_overflow, popup.getMenu());\n        popup.setOnMenuItemClickListener(this);\n        popup.show();\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/ItemCatalogue/ItemsDatabaseForAdmin/ViewHolders/ViewHolderItemAdmin.java", "stars": "10", "class_props": {"extends": "RecyclerView", "implements": ["PopupMenu"], "modifiers": ["public"]}}, {"id": 60124, "method_name": "onMenuItemClick", "class_name": "ViewHolderItemAdmin", "params": ["MenuItem"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean onMenuItemClick(MenuItem menuItem) {\n\n        switch (menuItem.getItemId()) {\n            case R.id.action_remove:\n\n                AlertDialog.Builder builder = new AlertDialog.Builder(context);\n\n                builder.setTitle(\"Confirm Delete Item !\")\n                        .setMessage(\"Do you want to delete this Item ?\")\n                        .setPositiveButton(\"Yes\", new DialogInterface.OnClickListener() {\n                            @Override\n                            public void onClick(DialogInterface dialog, int which) {\n\n\n                                if(fragment instanceof ListItemClick)\n                                {\n                                    ((ListItemClick) fragment).notifyDeleteItem(item,getAdapterPosition());\n                                }\n\n                            }\n                        })\n                        .setNegativeButton(\"No\", new DialogInterface.OnClickListener() {\n                            @Override\n                            public void onClick(DialogInterface dialog, int which) {\n\n\n                                showToastMessage(\"Cancelled !\");\n                            }\n                        })\n                        .show();\n\n\n                break;\n\n            case R.id.action_edit:\n\n                    PrefItem.saveItem(this.item, context);\n\n                    Intent intentEdit = new Intent(context, EditItem.class);\n                    intentEdit.putExtra(EditItemFragmentNew.EDIT_MODE_INTENT_KEY, EditItemFragmentNew.MODE_UPDATE);\n                    context.startActivity(intentEdit);\n\n                break;\n\n\n//                case R.id.action_detach:\n//\n//                    if (dataset.get(getLayoutPosition()) instanceof Item) {\n//                        notificationReceiver.detachItem((Item) dataset.get(getLayoutPosition()));\n//                    }\n//                    break;\n\n\n            case R.id.action_change_parent:\n\n\n\n                if(fragment instanceof ListItemClick)\n                {\n                    ((ListItemClick) fragment).changeParentItem(this.item);\n                }\n\n\n                break;\n\n            default:\n                break;\n\n        }\n\n        return false;\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/ItemCatalogue/ItemsDatabaseForAdmin/ViewHolders/ViewHolderItemAdmin.java", "stars": "10", "class_props": {"extends": "RecyclerView", "implements": ["PopupMenu"], "modifiers": ["public"]}}, {"id": 60125, "method_name": "showToastMessage", "class_name": "ViewHolderItemAdmin", "params": ["String"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void showToastMessage(String message)\n    {\n        Toast.makeText(context,message,Toast.LENGTH_SHORT).show();\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/ItemCatalogue/ItemsDatabaseForAdmin/ViewHolders/ViewHolderItemAdmin.java", "stars": "10", "class_props": {"extends": "RecyclerView", "implements": ["PopupMenu"], "modifiers": ["public"]}}, {"id": 60126, "method_name": "isHeartbeatResp", "class_name": "DefaultHeartbeatRespHandler", "params": ["Object"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean isHeartbeatResp(Object msg) {\n        PackProtobuf.Pack pack= (PackProtobuf.Pack) msg;\n        return pack.getPackType()==PackProtobuf.Pack.PackType.REPLY&&pack.getReply().getReplyType()==HEART_REPLY_TYPE;\n    }", "url": "https://raw.githubusercontent.com/mrchengwenlong/NettyIM/master/im_lib/src/main/java/com/takiku/im_lib/internal/DefaultHeartbeatRespHandler.java", "stars": "23", "class_props": {"extends": null, "implements": ["HeartbeatRespHandler"], "modifiers": ["public"]}}, {"id": 60127, "method_name": "handleHeartbeatResp", "class_name": "DefaultHeartbeatRespHandler", "params": ["GeneratedMessageV3"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void handleHeartbeatResp(GeneratedMessageV3 heartbeatResp) {\n\n      //TODO \u5b9e\u73b0\u5fc3\u8df3\u5305\u54cd\u5e94\u5904\u7406\n    }", "url": "https://raw.githubusercontent.com/mrchengwenlong/NettyIM/master/im_lib/src/main/java/com/takiku/im_lib/internal/DefaultHeartbeatRespHandler.java", "stars": "23", "class_props": {"extends": null, "implements": ["HeartbeatRespHandler"], "modifiers": ["public"]}}, {"id": 60128, "method_name": "setValue", "class_name": "ParameterEmailValue", "params": ["String"], "throws": ["BGException"], "modifiers": ["public"], "return_type": "void", "snippet": "    public void setValue(String value) throws BGException {\n        check(value);\n        this.value = value;\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/model/param/ParameterEmailValue.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 60129, "method_name": "getValue", "class_name": "ParameterEmailValue", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getValue() {\n        return value;\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/model/param/ParameterEmailValue.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 60130, "method_name": "getUsername", "class_name": "ParameterEmailValue", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getUsername() {\n        if (value.indexOf(\"@\") == -1) {\n            return \"\";\n        }\n        return value.split(\"@\")[0];\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/model/param/ParameterEmailValue.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 60131, "method_name": "getDomain", "class_name": "ParameterEmailValue", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getDomain() {\n        try {\n            return value.split(\"@\")[1];\n        } catch (IndexOutOfBoundsException e) {\n            return \"\";\n        }\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/model/param/ParameterEmailValue.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 60132, "method_name": "getComment", "class_name": "ParameterEmailValue", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getComment() {\n        return comment;\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/model/param/ParameterEmailValue.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 60133, "method_name": "setComment", "class_name": "ParameterEmailValue", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setComment(String comment) {\n        this.comment = comment;\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/model/param/ParameterEmailValue.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 60134, "method_name": "check", "class_name": "ParameterEmailValue", "params": ["String"], "throws": ["BGException"], "modifiers": ["private"], "return_type": "void", "snippet": "    private void check(String email) throws BGException {\n        if (!Utils.validateEmail(email)) {\n            throw new BGMessageException(\"\u041d\u0435\u0432\u0435\u0440\u043d\u043e\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u0430 email!\");\n        }\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/model/param/ParameterEmailValue.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 60135, "method_name": "getEmails", "class_name": "ParameterEmailValue", "params": ["List<ParameterEmailValue>"], "throws": null, "modifiers": ["final", "public", "static"], "return_type": "String", "snippet": "    public static final String getEmails(List<ParameterEmailValue> emails) {\n        StringBuffer result = new StringBuffer();\n        for (ParameterEmailValue val : emails) {\n            if (result.length() > 0) {\n                result.append(\" \");\n            }\n            result.append(val.getValue());\n            if (!\"\".equals(val.getComment())) {\n                result.append(\" [ \" + val.getComment() + \" ]\");\n            }\n            result.append(\";\");\n        }\n        return result.toString();\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/model/param/ParameterEmailValue.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 60136, "method_name": "equals", "class_name": "ParameterEmailValue", "params": ["Object"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean equals(Object object) {\n        if (!(object instanceof ParameterEmailValue))\n            return false;\n\n        ParameterEmailValue emailValue = (ParameterEmailValue) object;\n\n        if (!value.equals(emailValue.value))\n            return false;\n        if (!comment.equals(emailValue.comment))\n            return false;\n\n        return true;\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/model/param/ParameterEmailValue.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 60137, "method_name": "getPublicKeyFromKeycloak", "class_name": "KeyHelper", "params": ["String"], "throws": ["IOException"], "modifiers": ["public", "static"], "return_type": "String", "snippet": "\tpublic static String getPublicKeyFromKeycloak(String url) throws IOException {\n\t\tURL jsonUrl = new URL(url);\n\t\tKeyCloakPublicKey publicKey = objectMapper.readValue(jsonUrl, KeyCloakPublicKey.class);\n\t\treturn publicKey.getPublicKey();\n\t}", "url": "https://raw.githubusercontent.com/DP-3T/dp3t-sdk-backend/develop/dpppt-backend-sdk/dpppt-backend-sdk-ws/src/main/java/org/dpppt/backend/sdk/ws/util/KeyHelper.java", "stars": "125", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 60138, "method_name": "checkFileHeader", "class_name": "ZipHelper", "params": ["ZipFile", "String"], "throws": null, "modifiers": ["public", "static"], "return_type": "boolean", "snippet": "    public static boolean checkFileHeader(@NonNull ZipFile zipFile, @NonNull String fileName) {\n        try {\n            return zipFile.getFileHeader(fileName) != null;\n        } catch (ZipException e) {\n            e.printStackTrace();\n            return false;\n        }\n    }", "url": "https://raw.githubusercontent.com/CoboVault/cobo-vault-cold/master/app/src/main/java/com/cobo/cold/update/utils/ZipHelper.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 60139, "method_name": "extract", "class_name": "ZipHelper", "params": ["ZipFile", "String", "String", "String"], "throws": ["ZipException"], "modifiers": ["public", "static"], "return_type": "File", "snippet": "    public static File extract(@NonNull ZipFile zipFile, @NonNull String fileName,\n                               @NonNull String password, @NonNull String destPath) throws ZipException {\n        if (zipFile.isEncrypted() || !TextUtils.isEmpty(fileName)) {\n            zipFile.setPassword(password);\n        }\n\n        final String randomName = UUID.randomUUID().toString();\n\n        zipFile.extractFile(fileName, destPath, null, randomName);\n        return new File(destPath, randomName);\n    }", "url": "https://raw.githubusercontent.com/CoboVault/cobo-vault-cold/master/app/src/main/java/com/cobo/cold/update/utils/ZipHelper.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 60140, "method_name": "wrapUpdateZipFile", "class_name": "ZipHelper", "params": ["File"], "throws": ["ZipException"], "modifiers": ["public", "static"], "return_type": "ZipFile", "snippet": "    public static ZipFile wrapUpdateZipFile(@NonNull File file) throws ZipException {\n        final ZipFile zipFile = new ZipFile(file);\n\n        if (zipFile.isValidZipFile()) {\n            return zipFile;\n        } else {\n            return null;\n        }\n    }", "url": "https://raw.githubusercontent.com/CoboVault/cobo-vault-cold/master/app/src/main/java/com/cobo/cold/update/utils/ZipHelper.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 60141, "method_name": "verificaUsuario", "class_name": "UsuarioDao", "params": ["String", "String"], "throws": null, "modifiers": ["public"], "return_type": "Usuario", "snippet": "\tpublic Usuario verificaUsuario(String email, String senha) {\n\t\tEntityManager em = JPAUtil.getEntityManager();\n\t\tTypedQuery<Usuario> query = em.createQuery(\"from Usuario u where u.email = :email \" + \"and u.senha = :senha\", Usuario.class);\n\t\tquery.setParameter(\"email\", email);\n\t\tquery.setParameter(\"senha\", senha);\n\n\t\ttry {\n\t\t\treturn query.getSingleResult();\n\n\t\t} catch (NoResultException e) {\n\t\t\treturn null;\n\t\t} finally {\n\t\t\tem.close();\n\t\t}\n\t}", "url": "https://raw.githubusercontent.com/emanoel2712/MeusPedidos/master/src/main/java/br/senac/sc/meuspedidos/dao/UsuarioDao.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 60142, "method_name": "salvar", "class_name": "UsuarioDao", "params": ["Usuario"], "throws": null, "modifiers": ["public"], "return_type": "Usuario", "snippet": "\tpublic Usuario salvar(Usuario usuario) {\n\t\tEntityManager em = JPAUtil.getEntityManager();\n\t\tEntityTransaction trx = em.getTransaction();\n\n\t\ttrx.begin();\n\t\tusuario = em.merge(usuario);\n\t\ttrx.commit();\n\t\tem.close();\n\n\t\treturn usuario;\n\n\t}", "url": "https://raw.githubusercontent.com/emanoel2712/MeusPedidos/master/src/main/java/br/senac/sc/meuspedidos/dao/UsuarioDao.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 60143, "method_name": "buscarTodos", "class_name": "UsuarioDao", "params": [], "throws": null, "modifiers": ["public"], "return_type": "List<Usuario>", "snippet": "\tpublic List<Usuario> buscarTodos() {\n\t\tEntityManager em = JPAUtil.getEntityManager();\n\t\tTypedQuery<Usuario> query = em.createQuery(\"from Usuario\", Usuario.class);\n\t\treturn query.getResultList();\n\t}", "url": "https://raw.githubusercontent.com/emanoel2712/MeusPedidos/master/src/main/java/br/senac/sc/meuspedidos/dao/UsuarioDao.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 60144, "method_name": "excluir", "class_name": "UsuarioDao", "params": ["Usuario"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void excluir(Usuario usuario) {\n\t\tEntityManager em = JPAUtil.getEntityManager();\n\t\tEntityTransaction trx = em.getTransaction();\n\n\t\ttrx.begin();\n\n\t\tem.remove(em.find(Produto.class, usuario.getId()));\n\n\t\ttrx.commit();\n\n\t\tem.close();\n\n\t}", "url": "https://raw.githubusercontent.com/emanoel2712/MeusPedidos/master/src/main/java/br/senac/sc/meuspedidos/dao/UsuarioDao.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 60145, "method_name": "buscarPorId", "class_name": "UsuarioDao", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "Usuario", "snippet": "\tpublic Usuario buscarPorId(int id) {\n\t\tEntityManager em = JPAUtil.getEntityManager();\n\n\t\ttry {\n\t\t\treturn em.find(Usuario.class, id);\n\n\t\t} finally {\n\t\t\tem.close();\n\t\t}\n\n\t}", "url": "https://raw.githubusercontent.com/emanoel2712/MeusPedidos/master/src/main/java/br/senac/sc/meuspedidos/dao/UsuarioDao.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 60146, "method_name": "getUserList", "class_name": "UserListEvent", "params": [], "throws": null, "modifiers": ["public"], "return_type": "List<Map>", "snippet": "\tpublic List<Map<String, String>> getUserList() {\n\t\treturn userList;\n\t}", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/event/user/UserListEvent.java", "stars": "12", "class_props": {"extends": "UserEvent", "implements": null, "modifiers": ["public"]}}, {"id": 60147, "method_name": "main", "class_name": "MyName", "params": ["String"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "\tpublic static void main(String args[]) {\n\t\tString firstName = \"Beknazar\";\n\t\tString lastName = \"Suranchiyev\";\n\t\tString fullName = firstName + \" \" + lastName;\n\n\t\tSystem.out.println(\"Hi there, my name is \" + fullName);\n\t}", "url": "https://raw.githubusercontent.com/Suranchiyev/java-sdet-2020/master/src/day3/MyName.java", "stars": "21", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 60148, "method_name": "introduce_name", "class_name": "Trader", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "\tvoid introduce_name() {\n\t\tSystem.out.println(\"Hi, I am willing to trade potatoes for dollars.\\n\" + \"My name is \" + name);\n\t}", "url": "https://raw.githubusercontent.com/suncloudsmoon/Random-Trading/master/Random%20Trading/src/Trader.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 60149, "method_name": "mood_for_trading", "class_name": "Trader", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "\tvoid mood_for_trading() {\n\t\tSystem.out.println(\"Trader \" + name + \" mood: \" + mood);\n\t}", "url": "https://raw.githubusercontent.com/suncloudsmoon/Random-Trading/master/Random%20Trading/src/Trader.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 60150, "method_name": "trading_experience", "class_name": "Trader", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "\tvoid trading_experience() {\n\t\tSystem.out.println(\"Trader \" + name + \" Experience: \" + experience);\n\t}", "url": "https://raw.githubusercontent.com/suncloudsmoon/Random-Trading/master/Random%20Trading/src/Trader.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 60151, "method_name": "trader_rating_5stars", "class_name": "Trader", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "\tvoid trader_rating_5stars() {\n\t\tif (mood.equals(\"happy\")) {\n\t\t\tint rating = 5;\n\t\t\tSystem.out.println(\"Trader \" + name + \" rating is : \" + rating + \" stars!\");\n\t\t} else if (mood.equals(\"angry\")) {\n\t\t\tint rating = 1;\n\t\t\tSystem.out.println(\"Trader \" + name + \" rating is \" + rating + \" stars :(\");\n\t\t} else {\n\t\t\tString unknown = \"Unknown trader with no previous ratings \ud83d\udc7f\";\n\t\t\tSystem.out.println(unknown);\n\t\t}\n\t}", "url": "https://raw.githubusercontent.com/suncloudsmoon/Random-Trading/master/Random%20Trading/src/Trader.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 60152, "method_name": "interdiction", "class_name": "ShipCombatManager", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean interdiction()              { return interdiction; }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/combat/ShipCombatManager.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base"], "modifiers": ["public"]}}, {"id": 60153, "method_name": "results", "class_name": "ShipCombatManager", "params": [], "throws": null, "modifiers": ["public"], "return_type": "ShipCombatResults", "snippet": "    public ShipCombatResults results()         { return results; }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/combat/ShipCombatManager.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base"], "modifiers": ["public"]}}, {"id": 60154, "method_name": "system", "class_name": "ShipCombatManager", "params": [], "throws": null, "modifiers": ["public"], "return_type": "StarSystem", "snippet": "    public StarSystem system()                 { return system; }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/combat/ShipCombatManager.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base"], "modifiers": ["public"]}}, {"id": 60155, "method_name": "currentStack", "class_name": "ShipCombatManager", "params": [], "throws": null, "modifiers": ["public"], "return_type": "CombatStack", "snippet": "    public CombatStack currentStack()          { return currentStack; }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/combat/ShipCombatManager.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base"], "modifiers": ["public"]}}, {"id": 60156, "method_name": "activeStacks", "class_name": "ShipCombatManager", "params": [], "throws": null, "modifiers": ["public"], "return_type": "List<CombatStack>", "snippet": "    public List<CombatStack> activeStacks()    { return results.activeStacks(); }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/combat/ShipCombatManager.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base"], "modifiers": ["public"]}}, {"id": 60157, "method_name": "ui", "class_name": "ShipCombatManager", "params": ["ShipBattleUI"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void ui(ShipBattleUI panel)         { ui = panel; }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/combat/ShipCombatManager.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base"], "modifiers": ["public"]}}, {"id": 60158, "method_name": "showAnimations", "class_name": "ShipCombatManager", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean showAnimations()            { return showAnimations && (ui != null) && playerInBattle; }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/combat/ShipCombatManager.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base"], "modifiers": ["public"]}}, {"id": 60159, "method_name": "allStacks", "class_name": "ShipCombatManager", "params": [], "throws": null, "modifiers": ["public"], "return_type": "List<CombatStack>", "snippet": "    public List<CombatStack> allStacks()       { return allStacks; }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/combat/ShipCombatManager.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base"], "modifiers": ["public"]}}, {"id": 60160, "method_name": "setInitialPause", "class_name": "ShipCombatManager", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setInitialPause()              { initialPause = true; }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/combat/ShipCombatManager.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base"], "modifiers": ["public"]}}, {"id": 60161, "method_name": "involves", "class_name": "ShipCombatManager", "params": ["Empire"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean involves(Empire emp) {\n        return (results.attacker() == emp) || (results.defender() == emp);\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/combat/ShipCombatManager.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base"], "modifiers": ["public"]}}, {"id": 60162, "method_name": "battle", "class_name": "ShipCombatManager", "params": ["StarSystem"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void battle(StarSystem sys) {\n        playerInBattle = false;\n        if (sys.hasMonster()) {\n            battle(sys, sys.monster());\n            galaxy().ships.disembarkFleets(system.id);\n            return;                   \n        }\n        empiresInConflict = sys.empiresInConflict();\n        log(\"Ship Combat starting in \", player().sv.name(sys.id), \" between empires: \", empiresInConflict.toString());\n\n        // build list of possible conflcts, where two orbiting fleets are in conflict at this system\n        List<EmpireMatchup> matchups = new ArrayList<>();\n        for (Empire e1: empiresInConflict) {\n            for (Empire e2: empiresInConflict) {\n                if (e1.aggressiveWith(e2, sys)) {\n                    boolean alreadyAdded = false;\n                    for (EmpireMatchup m: matchups) {\n                        if (m.matches(e1,e2))\n                            alreadyAdded = true;\n                        \n                    }\n                    if (!alreadyAdded)\n                        matchups.add(new EmpireMatchup(e1,e2));\n                }\n            }\n        }\n        \n        // randomize the order that we do the potential combats\n        Collections.shuffle(matchups);\n        \n        // decide for each matchup if we should start combat\n        // if a fleet retreats or is destroyed in one combat, it will \n        //  be \"null\" in subsequent potential combats\n        while (!matchups.isEmpty()) {\n            EmpireMatchup match = matchups.get(0);\n            matchups.remove(match);\n            Empire emp1 = match.emp1;\n            Empire emp2 = match.emp2;\n            ShipFleet fleet1 = sys.orbitingFleetForEmpire(emp1);\n            ShipFleet fleet2 = sys.orbitingFleetForEmpire(emp2);\n            boolean fleet1Armed = (fleet1 != null) && fleet1.isArmed(sys);\n            boolean fleet2Armed = (fleet2 != null) && fleet2.isArmed(sys);\n            Empire homeEmpire = sys.empire();\n            boolean startCombat = false;\n            // if both fleets are armed, we always have combat\n            if (fleet1Armed && fleet2Armed) \n                startCombat = true; \n            // if we have a colony that belongs to either of the fleets, combat \n            // rules are different\n            else if (sys.isColonized()  && ((sys.empire() == emp1) || (sys.empire() == emp2))) {\n                // if colony is armed, we have combat\n                if (sys.colony().defense().isArmed())\n                    startCombat = true;\n                // else if colony is unarmed we might have combat if one of the fleets is armed\n                // and there is a home fleet. If no home fleet, then this goes to the bombardment phase\n                else if (fleet1Armed || fleet2Armed) {\n                    if ((fleet1 != null) && (fleet1.empire() == homeEmpire)) \n                        startCombat = true;\n                    else if ((fleet2 != null) && (fleet2.empire() == homeEmpire)) \n                        startCombat = true;\n               }\n            }\n            // else there is no colony in combat.. start battle if at least one fleet is armed\n            else if (fleet1Armed || fleet2Armed)\n                startCombat = true;\n            // if any of those choices matched, begin combat\n            if (startCombat) {\n                battle(sys, emp1, emp2);\n                Empire victor = results.victor();\n                if (emp1 != victor)\n                    retreatEmpire(emp1);\n                if (emp2 != victor)\n                    retreatEmpire(emp2);\n                galaxy().ships.disembarkFleets(system.id);\n            }\n        }\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/combat/ShipCombatManager.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base"], "modifiers": ["public"]}}, {"id": 60163, "method_name": "battle", "class_name": "ShipCombatManager", "params": ["StarSystem", "SpaceMonster"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void battle(StarSystem sys, SpaceMonster monster) {\n        monster.initCombat();\n        empiresInConflict = sys.empiresInConflict();\n        List<Empire> empires = new ArrayList<>(empiresInConflict);\n        Collections.shuffle(empires);\n        for (Empire emp: empires) {\n            battle(sys, emp, monster);\n            if (!monster.alive())\n                break;\n        }    \n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/combat/ShipCombatManager.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base"], "modifiers": ["public"]}}, {"id": 60164, "method_name": "validSquare", "class_name": "ShipCombatManager", "params": ["int", "int"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean validSquare(int x, int y) {\n        if ((x < 0) || (y< 0) || (x>maxX) || (y>maxY))\n            return false;\n        return !asteroidMap[x][y];\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/combat/ShipCombatManager.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base"], "modifiers": ["public"]}}, {"id": 60165, "method_name": "battle", "class_name": "ShipCombatManager", "params": ["StarSystem", "Empire", "Empire"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void battle(StarSystem sys, Empire emp1, Empire emp2) {\n        finished = false;\n        playerInBattle = emp1.isPlayer() || emp2.isPlayer();\n        \n        ShipFleet fl1 = sys.orbitingFleetForEmpire(emp1);\n        ShipFleet fl2 = sys.orbitingFleetForEmpire(emp2);\n        \n        if (fl1 != null)\n            emp2.encounterFleet(fl1);\n        if (fl2 != null)\n            emp1.encounterFleet(fl2);\n        \n        beginInSystem(sys, emp1, emp2);\n        log(\"Resolving ship battle between empire1:\", emp1.name(), \"  empire2:\", emp2.name());\n        ui = null;\n\n        setupBattle(emp1, emp2);\n\n        if (combatIsFinished())\n            return;\n\n        checkDeclareWar(emp1, emp2);\n        checkDeclareWar(emp2, emp1);\n\n        if (playerInBattle())\n            RotPUI.instance().promptForShipCombat(this);\n        else {\n            resolveAllCombat();\n            endOfCombat(true);\n        }\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/combat/ShipCombatManager.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base"], "modifiers": ["public"]}}, {"id": 60166, "method_name": "battle", "class_name": "ShipCombatManager", "params": ["StarSystem", "Empire", "SpaceMonster"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void battle(StarSystem sys, Empire emp, SpaceMonster monster) {\n        finished = false;\n        playerInBattle = emp.isPlayer();\n        system = sys;\n        results = new ShipCombatResults(this, system, emp, monster);\n        if (system.empire() == emp)\n            emp.lastAttacker(monster);\n        monster.lastAttacker(emp);\n        log(\"Resolving ship battle between empire1:\", emp.name(), \"  monster:\", monster.name());\n        setupBattle(emp, monster);\n        if (combatIsFinished())\n            return;\n\n        if (emp.isPlayer())\n            RotPUI.instance().promptForShipCombat(this);\n        else {\n            resolveAllCombat();\n            endOfCombat(true);\n        }\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/combat/ShipCombatManager.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base"], "modifiers": ["public"]}}, {"id": 60167, "method_name": "beginInSystem", "class_name": "ShipCombatManager", "params": ["StarSystem", "Empire", "Empire"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void beginInSystem(StarSystem s, Empire emp1, Empire emp2) {\n        system = s;\n        results = new ShipCombatResults(this, system, emp1, emp2);\n        \n        // set last attacker for colony empire in case genocide occurs\n        if (system.empire() == emp1)\n            emp1.lastAttacker(emp2);\n        else if (system.empire() == emp2)\n            emp2.lastAttacker(emp1);\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/combat/ShipCombatManager.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base"], "modifiers": ["public"]}}, {"id": 60168, "method_name": "playerInBattle", "class_name": "ShipCombatManager", "params": [], "throws": null, "modifiers": ["private"], "return_type": "boolean", "snippet": "    private boolean playerInBattle() {\n        for (CombatStack st : results.activeStacks()) {\n            if (st.isPlayer())\n                return true;\n        }\n        return false;\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/combat/ShipCombatManager.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base"], "modifiers": ["public"]}}, {"id": 60169, "method_name": "toggleAutoComplete", "class_name": "ShipCombatManager", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void toggleAutoComplete() {\n        autoComplete = !autoComplete;\n        log(\"Toggling Auto Complete: \"+autoComplete);\n        if (autoComplete) {\n            autoRunThread = new Thread(autoRunProcess());\n            autoRunThread.start();\n        }\n        else\n            continueToNextPlayerStack();\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/combat/ShipCombatManager.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base"], "modifiers": ["public"]}}, {"id": 60170, "method_name": "resolveAllCombat", "class_name": "ShipCombatManager", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void resolveAllCombat() {\n        autoComplete = true;\n        autoResolve = true;\n        performingStackTurn = true;\n        while (shouldContinue())\n            performNextStackTurn();\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/combat/ShipCombatManager.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base"], "modifiers": ["public"]}}, {"id": 60171, "method_name": "shouldContinue", "class_name": "ShipCombatManager", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean shouldContinue() {\n        return autoComplete && !combatIsFinished();\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/combat/ShipCombatManager.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base"], "modifiers": ["public"]}}, {"id": 60172, "method_name": "continueToNextPlayerStack", "class_name": "ShipCombatManager", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void continueToNextPlayerStack() {\n        log(\"Continuing To Next Player Stack\");\n        if (combatIsFinished()) \n            return;\n        \n        performingStackTurn = true;\n        \n        \n        if (initialPause) {\n            initialPause = false;\n            ui.paintAllImmediately();     \n            sleep(1000);\n        }\n        currentStack.performTurn();\n        boolean playerTurn = false;\n        while (!playerTurn) {\n            if (!currentStack.usingAI() && !currentStack.isTurnComplete())\n                playerTurn = true;\n            else\n                performNextStackTurn();\n            if (combatIsFinished()) \n                return;\n        }\n\n        performingStackTurn = false;\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/combat/ShipCombatManager.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base"], "modifiers": ["public"]}}, {"id": 60173, "method_name": "autoRunProcess", "class_name": "ShipCombatManager", "params": [], "throws": null, "modifiers": ["private"], "return_type": "Runnable", "snippet": "    private Runnable autoRunProcess() {\n        return () -> {\n            performingStackTurn = true;\n            while (shouldContinue())\n                performNextStackTurn();\n            performingStackTurn = false;\n        };\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/combat/ShipCombatManager.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base"], "modifiers": ["public"]}}, {"id": 60174, "method_name": "canScan", "class_name": "ShipCombatManager", "params": ["Empire", "CombatStack"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean canScan(Empire civ, CombatStack st) {\n        if (st.empire == civ)\n            return true;\n        if (st.cloaked)\n            return false;\n        if (system.empire() == civ)\n            return true;\n\n        for (CombatStack stack : results.activeStacks()) {\n            if ((stack.empire == civ) && stack.canScan())\n                return true;\n        }\n        return false;\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/combat/ShipCombatManager.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base"], "modifiers": ["public"]}}, {"id": 60175, "method_name": "setupBombardment", "class_name": "ShipCombatManager", "params": ["StarSystem", "ShipFleet"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setupBombardment(StarSystem sys, ShipFleet fleet) {\n        ui = null;\n        system = sys;\n        checkDeclareWar(fleet.empire(), system.empire());\n\n        beginInSystem(system, fleet.empire(), null);\n\n        if (results.colonyStack != null)\n            addStackToCombat(results.colonyStack);\n\n        addInitialStacks(fleet.empire());\n        scanShips();\n        addEmpiresToCombat();\n        results().defender = system.empire();\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/combat/ShipCombatManager.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base"], "modifiers": ["public"]}}, {"id": 60176, "method_name": "checkDeclareWar", "class_name": "ShipCombatManager", "params": ["Empire", "Empire"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void checkDeclareWar(Empire emp1, Empire emp2) {\n        // decide if we should declare war\n        if (emp1.isPlayer())\n            return;  // player can declare his own wars\n        \n        // dont automaticall trigger war over uncolonized systems\n        if (!system.isColonized())\n            return;\n        \n        // don't automatially trigger when emp2 stumbled into our system\n        if (system.empire() == emp1)\n            return;\n        DiplomaticEmbassy emb1 = emp1.viewForEmpire(emp2).embassy();\n        if (!emb1.anyWar()) {\n            if (emb1.onWarFooting())\n                emb1.declareWar();\n        }\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/combat/ShipCombatManager.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base"], "modifiers": ["public"]}}, {"id": 60177, "method_name": "setupBattle", "class_name": "ShipCombatManager", "params": ["Empire", "Empire"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void setupBattle(Empire emp1, Empire emp2) {\n        raiseHostilityLevels();\n\n        turnCounter = 0;\n        interdiction = false;\n        performingStackTurn = false;\n        autoComplete = false;\n        autoResolve = false;\n        showAnimations = true;\n        redrawMap = true;\n        initCombatStacks(emp1, emp2);\n\n        if (combatIsFinished())\n            return;\n\n        placeAsteroids();\n        placeCombatStacks();\n        allStacks.clear();\n        allStacks.addAll(results.activeStacks());\n\n        Collections.sort(results.activeStacks(), CombatStack.INITIATIVE);\n        currentStack = results.activeStacks().get(0);\n        currentStack.beginTurn();\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/combat/ShipCombatManager.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base"], "modifiers": ["public"]}}, {"id": 60178, "method_name": "setupBattle", "class_name": "ShipCombatManager", "params": ["Empire", "SpaceMonster"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void setupBattle(Empire emp, SpaceMonster monster) {\n        turnCounter = 0;\n        interdiction = false;\n        performingStackTurn = false;\n        autoComplete = false;\n        autoResolve = false;\n        showAnimations = true;\n        redrawMap = true;\n        initCombatStacks(emp, monster);\n\n        if (combatIsFinished())\n            return;\n\n        placeAsteroids();\n        placeCombatStacks();\n        allStacks.clear();\n        allStacks.addAll(results.activeStacks());\n\n        Collections.sort(results.activeStacks(), CombatStack.INITIATIVE);\n        currentStack = results.activeStacks().get(0);\n        currentStack.beginTurn();\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/combat/ShipCombatManager.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base"], "modifiers": ["public"]}}, {"id": 60179, "method_name": "endOfCombat", "class_name": "ShipCombatManager", "params": ["boolean"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void endOfCombat(boolean logIncidents) {\n        // send retreating ships on their way\n        results.killRebels();\n\n        results.refreshSystemScans();\n\n        if (logIncidents)\n            results.logIncidents();\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/combat/ShipCombatManager.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base"], "modifiers": ["public"]}}, {"id": 60180, "method_name": "retreatStack", "class_name": "ShipCombatManager", "params": ["CombatStackShip", "StarSystem"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void retreatStack(CombatStackShip stack, StarSystem s) {\n        log(\"Retreating: \", stack.fullName());\n        performingStackTurn = true;\n        stack.drawRetreat();\n        results.addShipsRetreated(stack.design, stack.num);\n        removeFromCombat(stack);\n        stack.retreatToSystem(s);\n        //turnDone(stack);\n        performingStackTurn = false;\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/combat/ShipCombatManager.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base"], "modifiers": ["public"]}}, {"id": 60181, "method_name": "destroyStack", "class_name": "ShipCombatManager", "params": ["CombatStack"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void destroyStack(CombatStack stack) {\n        log(\"Destroyed: \", stack.fullName());\n        if (stack instanceof CombatStackShip)\n            results.addShipStackDestroyed(((CombatStackShip)stack).design, stack.num);\n        else if (stack instanceof CombatStackColony)\n            results.addBasesDestroyed(stack.num);\n\n        stack.becomeDestroyed();\n        \n        if (!stack.isColony())\n           removeFromCombat(stack);\n        if (stack == currentStack)\n            turnDone(stack);\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/combat/ShipCombatManager.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base"], "modifiers": ["public"]}}, {"id": 60182, "method_name": "raiseHostilityLevels", "class_name": "ShipCombatManager", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void raiseHostilityLevels() {\n        List<ShipFleet> fleets = system.orbitingFleets();\n        for (ShipFleet fl : fleets)\n            fl.empire().sv.raiseHostility(system.id);\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/combat/ShipCombatManager.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base"], "modifiers": ["public"]}}, {"id": 60183, "method_name": "addInitialStacks", "class_name": "ShipCombatManager", "params": ["Empire"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void addInitialStacks(Empire emp) {\n        CombatStack colonyWard = null;\n        if ((results.colonyStack != null) && (results.colonyStack.colony.empire() == emp))\n            colonyWard = results.colonyStack;\n        \n        ShipFleet fl = system.orbitingFleetForEmpire(emp);\n        if (fl == null)\n            return;\n\n        fl.system(system);\n        fl.retreating(false);\n        for (int i=0;i<ShipDesignLab.MAX_DESIGNS;i++) {\n            if (fl.num(i) > 0) {\n                ShipDesign d = fl.empire().shipLab().design(i);\n                if (d != null) {\n                    CombatStackShip stack = new CombatStackShip(fl, i, this);\n                    if (stack.isArmed())\n                        stack.ward(colonyWard);\n                    addStackToCombat(stack);\n                }\n            }\n        }\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/combat/ShipCombatManager.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base"], "modifiers": ["public"]}}, {"id": 60184, "method_name": "initCombatStacks", "class_name": "ShipCombatManager", "params": ["Empire", "Empire"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void initCombatStacks(Empire emp1, Empire emp2) {\n        if (results.colonyStack != null)\n            addStackToCombat(results.colonyStack);\n\n        addInitialStacks(emp1);\n        addInitialStacks(emp2);\n        scanShips();\n\n        // unless system has monster, remove any stacks that want to retreat\n        if (system.hasMonster())\n            return;\n\n        boolean retreating = true;\n        List<CombatStack> retreatingFleets = new ArrayList<>();\n\n        while (retreating) {\n            retreatingFleets.clear();\n            for (CombatStack st : results.activeStacks()) {\n                if (st.usingAI() && st.wantToRetreat()) {\n                    if (st.retreat())\n                        retreatingFleets.add(st);\n                }\n            }\n            results.activeStacks().removeAll(retreatingFleets);\n            retreating = !retreatingFleets.isEmpty();\n        }\n        List<Empire> passives = new ArrayList<>();\n        passives.add(emp1);\n        passives.add(emp2);\n        // ships & armed colonies mean there is still a\n        // \"combatable\" stack for the empire\n        for (CombatStack st: results.activeStacks()) {\n            if (st.isArmed() || !st.isColony())\n                passives.remove(st.empire);\n        }\n        for (Empire passiveEmp: passives) {\n            log(\"retreating empires from init: \",passives.toString());\n            empiresInConflict.remove(passiveEmp);\n        }\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/combat/ShipCombatManager.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base"], "modifiers": ["public"]}}, {"id": 60185, "method_name": "initCombatStacks", "class_name": "ShipCombatManager", "params": ["Empire", "SpaceMonster"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void initCombatStacks(Empire emp, SpaceMonster monster) {\n        if (results.colonyStack != null)\n            addStackToCombat(results.colonyStack);\n\n        addInitialStacks(emp);\n        for (CombatStack st: monster.combatStacks()) {\n            if (!st.destroyed())\n                addStackToCombat(st);\n        }\n\n        // unless system has monster, remove any stacks that want to retreat\n        if (system.hasMonster())\n            return;\n\n        boolean retreating = true;\n        List<CombatStack> retreatingFleets = new ArrayList<>();\n\n        while (retreating) {\n            retreatingFleets.clear();\n            for (CombatStack st : results.activeStacks()) {\n                if (st.usingAI() && st.wantToRetreat()) {\n                    if (st.retreat())\n                        retreatingFleets.add(st);\n                }\n            }\n            results.activeStacks().removeAll(retreatingFleets);\n            retreating = !retreatingFleets.isEmpty();\n        }\n        List<Empire> passives = new ArrayList<>();\n        passives.add(emp);\n        // ships & armed colonies mean there is still a\n        // \"combatable\" stack for the empire\n        for (CombatStack st: results.activeStacks()) {\n            if (st.isArmed() || !st.isColony())\n                passives.remove(st.empire);\n        }\n        for (Empire passiveEmp: passives) {\n            log(\"retreating empires from init: \",passives.toString());\n            empiresInConflict.remove(passiveEmp);\n        }\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/combat/ShipCombatManager.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base"], "modifiers": ["public"]}}, {"id": 60186, "method_name": "retreatEmpire", "class_name": "ShipCombatManager", "params": ["Empire"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void retreatEmpire(Empire e) {\n        List<CombatStack> retreatingStacks = new ArrayList<>();\n\n        List<CombatStack> activeStacks = new ArrayList<>(results.activeStacks());\n        for (CombatStack st : activeStacks) {\n            if ((st.empire == e) && st.isShip()) {\n                CombatStackShip ship = (CombatStackShip) st;\n                if (ship.retreat()) {\n                    retreatingStacks.add(ship);\n                    ship.drawRetreat();\n                }\n            }\n        }\n        for (CombatStack st: retreatingStacks)\n            results.activeStacks().remove(st);\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/combat/ShipCombatManager.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base"], "modifiers": ["public"]}}, {"id": 60187, "method_name": "addEmpiresToCombat", "class_name": "ShipCombatManager", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void addEmpiresToCombat() {\n        boolean playerInCombat = false;\n        List<Empire> empiresInCombat = new ArrayList<>();\n        for (CombatStack st : results.activeStacks()) {\n            if (st.isPlayer())\n                playerInCombat = true;\n            if (!empiresInCombat.contains(st.empire))\n                empiresInCombat.add(st.empire);\n        }\n\n        // build civs array, placing player ships first\n        results.clearEmpires();\n        if (playerInCombat) {\n            results.addEmpire(player());\n            empiresInCombat.remove(player());\n        }\n\n        for (Empire c : empiresInCombat)\n            results.addEmpire(c);\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/combat/ShipCombatManager.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base"], "modifiers": ["public"]}}, {"id": 60188, "method_name": "placeAsteroids", "class_name": "ShipCombatManager", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void placeAsteroids() {\n        boolean isAsteroidSystem = system().planet().type().isAsteroids();\n        CombatStackColony colony = results().colonyStack;\n        int beltW = isAsteroidSystem ? 8: 4;\n        int startX = 0;\n        if (isAsteroidSystem)\n            startX = 1;\n        else if (colony == null)\n            startX = 3;\n        else if (colony.isPlayer())\n            startX = 4;\n        else\n            startX = 2;\n        int endX = startX+beltW;\n        for (int x=startX; x<endX;x++) {\n            int num = 0;\n            for (int y=0;y<=maxY;y++) {\n                asteroidMap[x][y] = false;\n                if ((num < 4) && (random() < 0.375)) {\n                    num++;\n                    asteroidMap[x][y] = true;\n                }\n            }\n        }\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/combat/ShipCombatManager.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base"], "modifiers": ["public"]}}, {"id": 60189, "method_name": "trimAsteroids", "class_name": "ShipCombatManager", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void trimAsteroids() {\n        for (int x=0; x<=maxX; x++) {\n            for (int y=0;y<=maxY; y++) {\n                if (asteroidMap[x][y] && (random() < .03)) {\n                    asteroidMap[x][y] = false;\n                    redrawMap = true;\n                    break;\n                }\n            }\n        }\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/combat/ShipCombatManager.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base"], "modifiers": ["public"]}}, {"id": 60190, "method_name": "placeCombatStacks", "class_name": "ShipCombatManager", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void placeCombatStacks() {\n        addEmpiresToCombat();\n\n        int[] posnAdj = { 0,9 };\n        int empIndex = 0;\n        // for each empire, place ship stacks\n        for (Empire c : results.empires()) {\n            int stackIndex = 0;\n            for (CombatStack st : results.activeStacks()) {\n                if (st.empire == c) {\n                    int stackPosn = startingPosn[stackIndex] + posnAdj[empIndex];\n                    st.x = stackPosn % 10;\n                    st.y = stackPosn / 10;\n                    if (st.x > 5)\n                        st.reverse();\n                    stackIndex++;\n                    log(\"Ship Stack: \"+st);\n                }\n            }\n            empIndex++;\n        }\n\n        // set interdiction flag\n        interdiction = false;\n\n        if (results.colonyStack != null) {\n            if (results.colonyStack.colony.hasInterdiction()) {\n                for (CombatStack st : results.activeStacks()) {\n                    if (st.hasTeleporting() && st.aggressiveWith(results.colonyStack))\n                        interdiction = true;\n                }\n            }\n        }\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/combat/ShipCombatManager.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base"], "modifiers": ["public"]}}, {"id": 60191, "method_name": "moveStackNearest", "class_name": "ShipCombatManager", "params": ["CombatStack", "int", "int"], "throws": null, "modifiers": ["public"], "return_type": "CombatStack", "snippet": "    public CombatStack moveStackNearest(CombatStack newStack, int x, int y) {\n        float minDist = Float.MAX_VALUE;\n        List<Integer> nearX = new ArrayList<>();\n        List<Integer> nearY = new ArrayList<>();\n        for (int x1=0;x1<=maxX;x1++) {\n            for (int y1=0;y1<=maxY;y1++) {\n                if (asteroidMap[x1][y1])\n                    continue;\n                float dist = distance(x, y,x1, y1);\n                if ((dist == 0) || (dist > minDist))\n                    continue;\n                CombatStack prevStack = stackAt(x1,y1);\n                if ((prevStack != null) && !newStack.canEat(prevStack))\n                    continue;\n                if (dist < minDist) {\n                    nearX.clear();\n                    nearY.clear();\n                }\n                minDist = dist;\n                nearX.add(x1);\n                nearY.add(y1);\n            }\n        } \n        int index = roll(0, nearX.size()-1);\n        int tgtX = nearX.get(index);\n        int tgtY = nearY.get(index);\n        CombatStack tgtStack = stackAt(tgtX, tgtY);\n        this.moveStack(newStack, tgtX, tgtY);\n        //newStack.x = tgtX;\n        //newStack.y = tgtY;\n        return tgtStack;\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/combat/ShipCombatManager.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base"], "modifiers": ["public"]}}, {"id": 60192, "method_name": "scanShips", "class_name": "ShipCombatManager", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void scanShips() {\n        // scan only if have scanners and NOT same civ as planet (already scanned)\n        for (CombatStack st : results.activeStacks()) {\n            if (st.canScan()) {\n                for (CombatStack st2 : results.activeStacks()) {\n                    if (st2.isShip()) {\n                        CombatStackShip sh2 = (CombatStackShip) st2;\n                        st.empire.scanDesign(sh2.design, st2.empire);\n                    }\n                }\n            }\n        }\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/combat/ShipCombatManager.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base"], "modifiers": ["public"]}}, {"id": 60193, "method_name": "remainingStacksInConflict", "class_name": "ShipCombatManager", "params": [], "throws": null, "modifiers": ["private"], "return_type": "boolean", "snippet": "    private boolean remainingStacksInConflict() {\n        // check remaining stacks for conflict, excluding unarmed colony stacks\n        // which may have been added as potential bombing targets\n        List<CombatStack> combatableStacks = new ArrayList<>();\n        List<CombatStack> activeStacks = new ArrayList<>(results.activeStacks());\n        for (CombatStack st: activeStacks) {\n            if (st.isColony()) {\n                if (st.isArmed())\n                    combatableStacks.add(st);\n            }\n            else\n                combatableStacks.add(st);\n        }\n        for (CombatStack stack1 : combatableStacks) {\n            for (CombatStack stack2 : combatableStacks) {\n                if (stack1.isArmed() || stack2.isArmed()) {\n                    if ((stack1 != stack2) && stack1.hostileTo(stack2, system))\n                        return true;\n                }\n            }\n        }\n        return false;\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/combat/ShipCombatManager.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base"], "modifiers": ["public"]}}, {"id": 60194, "method_name": "addStackToCombat", "class_name": "ShipCombatManager", "params": ["CombatStack"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void addStackToCombat(CombatStack st) {\n        st.mgr = this;\n\n        if (st.isMissile()) {\n            CombatStackMissile miss =(CombatStackMissile) st;\n            miss.target.addMissile(miss);\n            return;\n        }\n        results.activeStacks().add(st);\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/combat/ShipCombatManager.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base"], "modifiers": ["public"]}}, {"id": 60195, "method_name": "stackAt", "class_name": "ShipCombatManager", "params": ["int", "int"], "throws": null, "modifiers": ["public"], "return_type": "CombatStack", "snippet": "    public CombatStack stackAt(int x, int y) {\n        for (CombatStack st : results.activeStacks()) {\n            if (st.atGrid(x,y))\n                return st;\n        }\n        return null;\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/combat/ShipCombatManager.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base"], "modifiers": ["public"]}}, {"id": 60196, "method_name": "canMoveTo", "class_name": "ShipCombatManager", "params": ["CombatStack", "int", "int"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean canMoveTo(CombatStack st, int x, int y) {\n        if ((x < 0) || (x > maxX) || (y < 0) || (y > maxY))\n            return false;\n\n        if (!st.canCollide() && (stackAt(x, y) != null))\n            return false;\n\n        if (st.canTeleport() && !interdiction)\n            return true;\n\n        return st.canMoveTo(x, y);\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/combat/ShipCombatManager.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base"], "modifiers": ["public"]}}, {"id": 60197, "method_name": "canTacticallyMoveTo", "class_name": "ShipCombatManager", "params": ["CombatStack", "int", "int"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean canTacticallyMoveTo(CombatStack st, int x, int y) {\n        if ((x < 0) || (x > maxX) || (y < 0) || (y > maxY))\n            return false;\n\n        if (asteroidMap[x][y])\n            return false;\n\n        if (!st.canCollide() && (stackAt(x, y) != null))\n            return false;\n\n        return st.canMoveTo(x, y);\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/combat/ShipCombatManager.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base"], "modifiers": ["public"]}}, {"id": 60198, "method_name": "canTeleportTo", "class_name": "ShipCombatManager", "params": ["CombatStack", "int", "int"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean canTeleportTo(CombatStack st, int x, int y) {\n        if ((x < 0) || (x > maxX) || (y < 0) || (y > maxY))\n            return false;\n\n        if (asteroidMap[x][y])\n            return false;\n\n        if (!st.canCollide() && (stackAt(x, y) != null))\n            return false;\n\n        if (st.canTeleport() && !interdiction)\n            return true;\n\n        return false;\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/combat/ShipCombatManager.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base"], "modifiers": ["public"]}}, {"id": 60199, "method_name": "finished", "class_name": "ShipCombatManager", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean finished()    { return finished; }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/combat/ShipCombatManager.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base"], "modifiers": ["public"]}}, {"id": 60200, "method_name": "combatIsFinished", "class_name": "ShipCombatManager", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean combatIsFinished() {\n        if (finished)\n            return true;\n        // stop after max turns to avoid infinite looping\n        if (turnCounter > MAX_TURNS) {\n            retreatEmpire(results.attacker());\n            log(\"combat finished-- max turns exceeded. Retreating: \"+results.attacker());\n            finished = true;\n            if (showAnimations())\n                ui.showResult();\n            return true;\n        }\n\n        // no one is in conflict, the battle is over\n        if (!remainingStacksInConflict()) {\n            log(\"combat finished-- remaining stacks unarmed or not in conflict\");\n            finished = true;\n            if (showAnimations())\n                ui.showResult();\n            endOfCombat(true);\n            return true;\n        }\n        return false;\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/combat/ShipCombatManager.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base"], "modifiers": ["public"]}}, {"id": 60201, "method_name": "turnDone", "class_name": "ShipCombatManager", "params": ["CombatStack"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void turnDone(CombatStack st) {\n        log(st.fullName(), \" - Done\");\n        st.endTurn();\n\n        List<CombatStack> stacks = new ArrayList<>(results.activeStacks());\n        if (stacks.isEmpty()) {\n            endOfCombat(true);\n            return;\n        }\n        \n        int i = stacks.indexOf(st);\n        if (i+1 == stacks.size()) {\n            Collections.sort(results.activeStacks(), CombatStack.INITIATIVE);\n            stacks = new ArrayList<>(results.activeStacks());\n            currentStack = stacks.get(0);\n            turnCounter++;\n            trimAsteroids();\n        }\n        else\n            currentStack = stacks.get(i+1);\n\n        currentStack.beginTurn();\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/combat/ShipCombatManager.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base"], "modifiers": ["public"]}}, {"id": 60202, "method_name": "performNextStackTurn", "class_name": "ShipCombatManager", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void performNextStackTurn() {\n        generateRiskMap(currentStack);\n        currentStack.performTurn();\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/combat/ShipCombatManager.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base"], "modifiers": ["public"]}}, {"id": 60203, "method_name": "removeFromCombat", "class_name": "ShipCombatManager", "params": ["CombatStack"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void removeFromCombat(CombatStack st) {\n        if (currentStack == st)\n            turnDone(st);\n        activeStacks().remove(st);\n        if (!st.isColony())\n            allStacks.remove(st);\n        if (st.isMissile()) {\n            CombatStackMissile miss = (CombatStackMissile) st;\n            miss.target.missiles().remove(miss);\n        }\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/combat/ShipCombatManager.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base"], "modifiers": ["public"]}}, {"id": 60204, "method_name": "performMoveStackToPoint", "class_name": "ShipCombatManager", "params": ["CombatStack", "int", "int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void performMoveStackToPoint(CombatStack st, int x, int y) {\n        if (!st.canMove())\n            return;\n        else if ((x == st.x) && (y == st.y))\n            return;\n        else if (st.canMoveTo(x, y))\n            moveStack(st, x, y);\n        else\n            teleportStack(st, x, y);\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/combat/ShipCombatManager.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base"], "modifiers": ["public"]}}, {"id": 60205, "method_name": "performMoveStackAlongPath", "class_name": "ShipCombatManager", "params": ["CombatStack", "FlightPath"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void performMoveStackAlongPath(CombatStack st, FlightPath path) {\n        // if proposed path is too long for this stack's remaining\n        // move but the stack can teleport, then do that,\n        if ((path.size() > st.move) && st.canTeleport) {\n            teleportStack(st, path.destX(), path.destY());\n            return;\n        }\n\n        // proposed path may be too long for this stack. If stack\n        // can't teleport, cut down length of path\n        if (path.size() > st.move) \n            path.limitMoves((int)st.move);\n\n        // movet the stack along it's path until done or destroyed (by missiles)\n        for (int i=0;i<path.size();i++) {\n            if (!st.destroyed()) \n                moveStack(st, path.mapX(i), path.mapY(i));\n        }\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/combat/ShipCombatManager.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base"], "modifiers": ["public"]}}, {"id": 60206, "method_name": "moveStack", "class_name": "ShipCombatManager", "params": ["CombatStack", "int", "int"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean moveStack(CombatStack st, int x1, int y1) {\n        log(currentStack.fullName(), \" moving to: \", str(x1), \",\", str(y1));\n        return st.moveTo(x1,y1);\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/combat/ShipCombatManager.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base"], "modifiers": ["public"]}}, {"id": 60207, "method_name": "teleportStack", "class_name": "ShipCombatManager", "params": ["CombatStack", "int", "int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void teleportStack(CombatStack st, int x1, int y1) {\n        log(currentStack.fullName() + \" teleporting to: \" + x1 + \",\" + y1);\n        st.teleportTo(x1,y1, 0.1f);\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/combat/ShipCombatManager.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base"], "modifiers": ["public"]}}, {"id": 60208, "method_name": "performAttackTarget", "class_name": "ShipCombatManager", "params": ["CombatStack"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void performAttackTarget(CombatStack st) {\n        while (st.selectBestWeapon(st.target)) \n            st.fireWeapon(st.target);\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/combat/ShipCombatManager.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base"], "modifiers": ["public"]}}, {"id": 60209, "method_name": "attackTarget", "class_name": "ShipCombatManager", "params": ["CombatStack"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void attackTarget(CombatStack st) {\n        //log(\"mgr attackTarget done:\" + st.civ.race.name + st.name());\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/combat/ShipCombatManager.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base"], "modifiers": ["public"]}}, {"id": 60210, "method_name": "generateRiskMap", "class_name": "ShipCombatManager", "params": ["CombatStack"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void generateRiskMap(CombatStack st) {\n        for (int x=0;x<=maxX;x++) {\n            for (int y=0;y<maxY;y++)\n                    riskMap[x][y] = riskAt(st, x, y);\n        }\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/combat/ShipCombatManager.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base"], "modifiers": ["public"]}}, {"id": 60211, "method_name": "riskAt", "class_name": "ShipCombatManager", "params": ["CombatStack", "int", "int"], "throws": null, "modifiers": ["private"], "return_type": "double", "snippet": "    private double riskAt(CombatStack stack, int x, int y) {\n        return 0.0d;\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/combat/ShipCombatManager.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base"], "modifiers": ["public"]}}, {"id": 60212, "method_name": "validMoveMap", "class_name": "ShipCombatManager", "params": ["CombatStack"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean[] validMoveMap(CombatStack stack) {\n        int gridW = maxX+3;\n        int gridH = maxY+3;\n        boolean[] valid = new boolean[gridW*gridH];\n\n        // outside borders are non-traversable\n        for (int x=0;x<gridW;x++) {\n            for (int y=0;y<gridH;y++)\n                valid[y*gridW+x] = (x>0) && (x<gridW-1) && (y>0) && (y<gridH-1);\n        }\n\n        // asteroids are not traversable\n        for (int x=0;x<=maxX;x++) {\n            for (int y=0;y<=maxY;y++) {\n                if (asteroidMap[x][y])\n                    valid[(y+1)*gridW+(x+1)] = false;\n            }\n        }\n\n        // combat stacks are not traversable\n        // enemy stacks may have a repulsor range that is also not traversable\n        List<CombatStack> stacks = new ArrayList<>(results.activeStacks());\n        for (CombatStack s: stacks) {            \n            int r = stack.cloaked || (s.empire == stack.empire) || s.inStasis || stack.ignoreRepulsors() ? 0 : s.repulsorRange();\n            if ((r == 0) && stack.canEat(s)) \n                continue;\n            else if (r == 0) \n                valid[(s.y+1)*gridW+(s.x+1)] = false;\n            else {\n                for (int x=0-r;x<=r;x++) {\n                    for (int y=0-r;y<=r;y++) {\n                        int x0 = s.x+x+1;\n                        int y0 = s.y+y+1;\n                        valid[y0*gridW+x0] = false;\n                    }\n                }\n            }\n        }\n        return valid;\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/combat/ShipCombatManager.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base"], "modifiers": ["public"]}}, {"id": 60213, "method_name": "matches", "class_name": "EmpireMatchup", "params": ["Empire", "Empire"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "        public boolean matches (Empire e1, Empire e2) {\n            if ((emp1 == e1) && (emp2 == e2))\n                return true;\n            if ((emp1 == e2) && (emp2 == e1))\n                return true;\n            return false;\n        }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/combat/ShipCombatManager.java", "stars": "74", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 60214, "method_name": "includes", "class_name": "EmpireMatchup", "params": ["Empire"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "        public boolean includes(Empire e1) {\n            return (emp1 == e1) || (emp2 == e1);\n        }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/combat/ShipCombatManager.java", "stars": "74", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 60215, "method_name": "processChanging", "class_name": "ProcessChangingListener", "params": ["ProcessChangingEvent", "ConnectionSet"], "throws": ["BGException"], "modifiers": ["private"], "return_type": "void", "snippet": "\tprivate void processChanging( ProcessChangingEvent e, ConnectionSet conSet )\n\t\tthrows BGException\n\t{\n\t\tif( !e.isStatus() )\n\t\t{\n\t\t\treturn;\n\t\t}\n\t\t\n\t\tProcessType type = ProcessTypeCache.getProcessType( e.getProcess().getTypeId() );\n\t\t\n\t\tString paramKey = \"bgbilling:processToStatus.\" + e.getForm().getParamInt( \"statusId\", -1 ) + \".needLinkedProblemsStatus\";\n\t\t\n\t\tString needStatus = null;\n\t\tif( Utils.isBlankString( needStatus = type.getProperties().getConfigMap().get( paramKey ) ) )\n\t\t{\n\t\t\treturn;\n\t\t}\n\t\t\n\t\tProcessLinkDAO linkDao = new ProcessLinkDAO( conSet.getConnection() );\n\t\tList<CommonObjectLink> linkList = linkDao.getObjectLinksWithType( e.getProcess().getId(), \"bgbilling-problem%\" );\n\n\t\tif( linkList.size() == 0 )\n\t\t{\n\t\t\treturn;\n\t\t}\n\n\t\tMap<String, Integer> billingStatusMap = new HashMap<String, Integer>();\n\t\tfor( String token : needStatus.split( \";\" ) )\n\t\t{\n\t\t\tString[] pair = token.split( \":\" );\n\t\t\tif( pair.length != 2 )\n\t\t\t{\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tbillingStatusMap.put( pair[0], Utils.parseInt( pair[1] ) );\n\t\t}\n\n\t\tfor( CommonObjectLink link : linkList )\n\t\t{\n\t\t\tString billingId = StringUtils.substringAfter( link.getLinkedObjectType(), \":\" );\n\n\t\t\t// \u0432 \u0434\u0430\u043d\u043d\u043e\u043c \u0431\u0438\u043b\u043b\u0438\u043d\u0433\u0435 \u043d\u0435\u0442 \u0442\u0440\u0435\u0431\u043e\u0432\u0430\u043d\u0438\u044f \u043f\u043e \u0441\u0442\u0430\u0442\u0443\u0441\u0443 \u043f\u0440\u043e\u0431\u043b\u0435\u043c\u044b\n\t\t\tInteger needStatusCode = billingStatusMap.get( billingId );\n\t\t\tif( needStatusCode == null )\n\t\t\t{\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tRequest req = new Request();\n\t\t\treq.setModule( \"ru.bitel.bgbilling.plugins.crm\" );\n\t\t\treq.setAction( \"RegisterProblemTable\" );\n\t\t\treq.setAttribute( \"id\", link.getLinkedObjectId() );\n\n\t\t\tDocument doc = new BillingDAO( e.getUser(), billingId ).doRequest( req );\n\t\t\tint statusCode = Utils.parseInt( XMLUtils.selectText( doc, \"/data/table/data/row/@status_code\" ) );\n\n\t\t\tif( statusCode != needStatusCode )\n\t\t\t{\n\t\t\t\tthrow new BGMessageException( \"\u0421\u043c\u0435\u043d\u0430 \u0441\u0442\u0430\u0442\u0443\u0441\u0430 \u043d\u0435\u0432\u043e\u0437\u043c\u043e\u0436\u043d\u0430. \u041a \u043f\u0440\u043e\u0446\u0435\u0441\u0441\u0443 \u043f\u0440\u0438\u0432\u044f\u0437\u0430\u043d\u044b \u043f\u0440\u043e\u0431\u043b\u0435\u043c\u044b \u0431\u0438\u043b\u043b\u0438\u043d\u0433\u0430 \u0432 \u043f\u0440\u0435\u043f\u044f\u0442\u0441\u0442\u0432\u0443\u044e\u0449\u0438\u0445 \u0441\u043c\u0435\u043d\u0435 \u0441\u0442\u0430\u0442\u0443\u0441\u0430\u0445.\" );\n\t\t\t}\t\t\t\t\n\t\t}\n\t}", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/event/listener/ProcessChangingListener.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 60216, "method_name": "getObjectWriter", "class_name": "CustomSerializeConfig", "params": ["Class<?>"], "throws": null, "modifiers": ["public"], "return_type": "ObjectSerializer", "snippet": "    public ObjectSerializer getObjectWriter(Class<?> clazz) {\n        ObjectSerializer writer = this.get(clazz);\n        if (writer == null) {\n            if (StatusCode.class.isAssignableFrom(clazz)) {\n                this.put(clazz, StatusCodeSerializer.INSTANCE);\n            }\n            if (LocalDateTime.class.isAssignableFrom(clazz)) {\n                this.put(clazz, JodaTimeDeserializer.instance);\n            }\n            if (LocalDate.class.isAssignableFrom(clazz)) {\n                this.put(clazz, JodaTimeDeserializer.instance);\n            }\n            if (LocalTime.class.isAssignableFrom(clazz)) {\n                this.put(clazz, JodaTimeDeserializer.instance);\n            }\n        }\n\n        return super.getObjectWriter(clazz);\n    }", "url": "https://raw.githubusercontent.com/zeoio/fabric-toolkit/master/bcp-install-common/src/main/java/com/cgb/bcpinstall/common/fastJson/CustomSerializeConfig.java", "stars": "7", "class_props": {"extends": "SerializeConfig", "implements": null, "modifiers": ["public"]}}, {"id": 60217, "method_name": "filter", "class_name": "StaticLatticeInstruction", "params": ["ProgramInstance", "LongStream"], "throws": null, "modifiers": ["public"], "return_type": "LongStream", "snippet": "    public LongStream filter(ProgramInstance program, LongStream seeds) {\n        Optimize.Builder builder = Optimize.Builder.ofSize(lattice.getRowCount());\n        for (int i = 0; i < rangeConstraints.size(); i++) {\n            RangeObservation observation = program.getObservation(rangeConstraints.get(i));\n            builder.withLowerBound(i, new BigFraction(observation.getMin())).withUpperBound(i, new BigFraction(observation.getMax()));\n        }\n        return Enumerate.enumerate(lattice, translation, builder.build())\n                .mapToLong(vec -> vecToSeed.nextSeed(vec.get(0).getNumerator().longValue()));\n    }", "url": "https://raw.githubusercontent.com/mjtb49/LattiCG/master/src/randomreverser/reversal/instruction/StaticLatticeInstruction.java", "stars": "14", "class_props": {"extends": "Instruction", "implements": null, "modifiers": ["public"]}}, {"id": 60218, "method_name": "writeOperands", "class_name": "StaticLatticeInstruction", "params": ["StringBuilder", "boolean", "Function<Constraint,String>"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void writeOperands(StringBuilder output, boolean verbose, Function<Constraint<?>, String> constraintNames) {\n        if (verbose) {\n            output.append(\"/* lattice = */ \");\n        }\n        output.append(lattice.toString().replaceAll(\"}", "url": "https://raw.githubusercontent.com/mjtb49/LattiCG/master/src/randomreverser/reversal/instruction/StaticLatticeInstruction.java", "stars": "14", "class_props": {"extends": "Instruction", "implements": null, "modifiers": ["public"]}}, {"id": 60219, "method_name": "readOperands", "class_name": "StaticLatticeInstruction", "params": ["StringParser", "LCG", "Function<String,Constraint>"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void readOperands(StringParser parser, LCG lcg, Function<String, Constraint<?>> constraintRetriever) {\n        lattice = BigMatrix.parse(parser);\n        translation = BigVector.parse(parser);\n        rangeConstraints = new ArrayList<>();\n        for (int i = 0; i < lattice.getRowCount(); i++) {\n            Token constraintToken = parser.consume();\n            Constraint<?> constraint = constraintRetriever.apply(constraintToken.getText());\n            if (constraint == null) {\n                throw new ParseException(\"Undeclared constraint '\" + constraintToken.getText() + \"'\", constraintToken);\n            }\n            if (!(constraint instanceof RangeConstraint)) {\n                throw new ParseException(\"static_lattice can only take range constraints, not '\" + constraintToken.getText() + \"'\", constraintToken);\n            }\n            rangeConstraints.add((RangeConstraint) constraint);\n        }\n        long multiplier = parser.consumeInteger().getFirst().longValue();\n        long addend = parser.consumeInteger().getFirst().longValue();\n        this.vecToSeed = new LCG(multiplier, addend, lcg.modulus);\n    }", "url": "https://raw.githubusercontent.com/mjtb49/LattiCG/master/src/randomreverser/reversal/instruction/StaticLatticeInstruction.java", "stars": "14", "class_props": {"extends": "Instruction", "implements": null, "modifiers": ["public"]}}, {"id": 60220, "method_name": "getOrder", "class_name": "BeforeConfigFileApplicationListener", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getOrder() {\n        // \u6bd4 ConfigFileApplicationListener \u4f18\u5148\u7ea7\u66f4\u9ad8\n        return ConfigFileApplicationListener.DEFAULT_ORDER - 1;\n    }", "url": "https://raw.githubusercontent.com/mqxu/spring-boot-review/master/spring-boot-application/src/main/java/com/soft1851/springboot/listener/BeforeConfigFileApplicationListener.java", "stars": "3", "class_props": {"extends": null, "implements": ["SmartApplicationListener"], "modifiers": ["public"]}}, {"id": 60221, "method_name": "supportsEventType", "class_name": "BeforeConfigFileApplicationListener", "params": ["Class<ApplicationEvent>"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean supportsEventType(Class<? extends ApplicationEvent> aClass) {\n        return false;\n    }", "url": "https://raw.githubusercontent.com/mqxu/spring-boot-review/master/spring-boot-application/src/main/java/com/soft1851/springboot/listener/BeforeConfigFileApplicationListener.java", "stars": "3", "class_props": {"extends": null, "implements": ["SmartApplicationListener"], "modifiers": ["public"]}}, {"id": 60222, "method_name": "onApplicationEvent", "class_name": "BeforeConfigFileApplicationListener", "params": ["ApplicationEvent"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onApplicationEvent(ApplicationEvent event) {\n        if (event instanceof ApplicationEnvironmentPreparedEvent) {\n            ApplicationEnvironmentPreparedEvent preparedEvent = (ApplicationEnvironmentPreparedEvent) event;\n            Environment environment = preparedEvent.getEnvironment();\n            log.info(\">>>>>>>>>>>>>>>>>>> environment.getProperty(\\\"name\\\") : \" + environment.getProperty(\"name\"));\n        }\n    }", "url": "https://raw.githubusercontent.com/mqxu/spring-boot-review/master/spring-boot-application/src/main/java/com/soft1851/springboot/listener/BeforeConfigFileApplicationListener.java", "stars": "3", "class_props": {"extends": null, "implements": ["SmartApplicationListener"], "modifiers": ["public"]}}, {"id": 60223, "method_name": "isSpecial", "class_name": "ShipSpecial", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean isSpecial()         { return true;  }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/ships/ShipSpecial.java", "stars": "74", "class_props": {"extends": "ShipComponent", "implements": null, "modifiers": ["public"]}}, {"id": 60224, "method_name": "isFuelRange", "class_name": "ShipSpecial", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean isFuelRange()       { return false;  }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/ships/ShipSpecial.java", "stars": "74", "class_props": {"extends": "ShipComponent", "implements": null, "modifiers": ["public"]}}, {"id": 60225, "method_name": "isColonySpecial", "class_name": "ShipSpecial", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean isColonySpecial()   { return false;  }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/ships/ShipSpecial.java", "stars": "74", "class_props": {"extends": "ShipComponent", "implements": null, "modifiers": ["public"]}}, {"id": 60226, "method_name": "allowsCloaking", "class_name": "ShipSpecial", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean allowsCloaking()    { return false;  }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/ships/ShipSpecial.java", "stars": "74", "class_props": {"extends": "ShipComponent", "implements": null, "modifiers": ["public"]}}, {"id": 60227, "method_name": "allowsTeleporting", "class_name": "ShipSpecial", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean allowsTeleporting() { return false;  }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/ships/ShipSpecial.java", "stars": "74", "class_props": {"extends": "ShipComponent", "implements": null, "modifiers": ["public"]}}, {"id": 60228, "method_name": "allowsScanning", "class_name": "ShipSpecial", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean allowsScanning()    { return false;  }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/ships/ShipSpecial.java", "stars": "74", "class_props": {"extends": "ShipComponent", "implements": null, "modifiers": ["public"]}}, {"id": 60229, "method_name": "canAttackPlanets", "class_name": "ShipSpecial", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean canAttackPlanets()  { return isWeapon(); }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/ships/ShipSpecial.java", "stars": "74", "class_props": {"extends": "ShipComponent", "implements": null, "modifiers": ["public"]}}, {"id": 60230, "method_name": "speedBonus", "class_name": "ShipSpecial", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int speedBonus()            { return 0; }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/ships/ShipSpecial.java", "stars": "74", "class_props": {"extends": "ShipComponent", "implements": null, "modifiers": ["public"]}}, {"id": 60231, "method_name": "initiativeBonus", "class_name": "ShipSpecial", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int initiativeBonus()       { return 0; }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/ships/ShipSpecial.java", "stars": "74", "class_props": {"extends": "ShipComponent", "implements": null, "modifiers": ["public"]}}, {"id": 60232, "method_name": "attackBonus", "class_name": "ShipSpecial", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int attackBonus()           { return 0; }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/ships/ShipSpecial.java", "stars": "74", "class_props": {"extends": "ShipComponent", "implements": null, "modifiers": ["public"]}}, {"id": 60233, "method_name": "defenseBonus", "class_name": "ShipSpecial", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int defenseBonus()          { return 0; }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/ships/ShipSpecial.java", "stars": "74", "class_props": {"extends": "ShipComponent", "implements": null, "modifiers": ["public"]}}, {"id": 60234, "method_name": "blackHoleDef", "class_name": "ShipSpecial", "params": [], "throws": null, "modifiers": ["public"], "return_type": "float", "snippet": "    public float blackHoleDef()        { return 0; }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/ships/ShipSpecial.java", "stars": "74", "class_props": {"extends": "ShipComponent", "implements": null, "modifiers": ["public"]}}, {"id": 60235, "method_name": "beamRangeBonus", "class_name": "ShipSpecial", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int beamRangeBonus()        { return 0; }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/ships/ShipSpecial.java", "stars": "74", "class_props": {"extends": "ShipComponent", "implements": null, "modifiers": ["public"]}}, {"id": 60236, "method_name": "beamShieldMod", "class_name": "ShipSpecial", "params": [], "throws": null, "modifiers": ["public"], "return_type": "float", "snippet": "    public float beamShieldMod()       { return 1; }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/ships/ShipSpecial.java", "stars": "74", "class_props": {"extends": "ShipComponent", "implements": null, "modifiers": ["public"]}}, {"id": 60237, "method_name": "missileIntercept", "class_name": "ShipSpecial", "params": ["ShipWeaponMissileType"], "throws": null, "modifiers": ["public"], "return_type": "float", "snippet": "    public float missileIntercept(ShipWeaponMissileType wpn)   { return 0; }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/ships/ShipSpecial.java", "stars": "74", "class_props": {"extends": "ShipComponent", "implements": null, "modifiers": ["public"]}}, {"id": 60238, "method_name": "shipRepairPct", "class_name": "ShipSpecial", "params": [], "throws": null, "modifiers": ["public"], "return_type": "float", "snippet": "    public float shipRepairPct()       { return 0; }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/ships/ShipSpecial.java", "stars": "74", "class_props": {"extends": "ShipComponent", "implements": null, "modifiers": ["public"]}}, {"id": 60239, "method_name": "missPct", "class_name": "ShipSpecial", "params": [], "throws": null, "modifiers": ["public"], "return_type": "float", "snippet": "    public float missPct()             { return 0; }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/ships/ShipSpecial.java", "stars": "74", "class_props": {"extends": "ShipComponent", "implements": null, "modifiers": ["public"]}}, {"id": 60240, "method_name": "designGroup", "class_name": "ShipSpecial", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String designGroup()        { return name(); }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/ships/ShipSpecial.java", "stars": "74", "class_props": {"extends": "ShipComponent", "implements": null, "modifiers": ["public"]}}, {"id": 60241, "method_name": "fieldValue", "class_name": "ShipSpecial", "params": ["int", "ShipDesign", "int"], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String fieldValue(int n, ShipDesign d, int bank) {\n        switch(n) {\n            case 0: return name().isEmpty() ? text(\"SHIP_DESIGN_COMPONENT_NONE\") : name();\n            case 1: return str((int)(cost(d)+(enginesRequired(d)*d.engine().cost(d))));\n            case 2: return str((int)size(d));\n            case 3: return str((int)power(d));\n            case 4: return str((int)space(d));\n            case 5: return desc();\n        }\n        return \"\";\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/ships/ShipSpecial.java", "stars": "74", "class_props": {"extends": "ShipComponent", "implements": null, "modifiers": ["public"]}}, {"id": 60242, "method_name": "onInterceptTouchEvent", "class_name": "AHorizontalScrollView", "params": ["android"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "\tpublic boolean onInterceptTouchEvent (android.view.MotionEvent p0)\n\t{\n\t\treturn n_onInterceptTouchEvent (p0);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc643f46942d9dd1fff9/AHorizontalScrollView.java", "stars": "2", "class_props": {"extends": "android", "implements": ["mono"], "modifiers": ["public"]}}, {"id": 60243, "method_name": "n_onInterceptTouchEvent", "class_name": "AHorizontalScrollView", "params": ["android"], "throws": null, "modifiers": ["private", "native"], "return_type": "boolean", "snippet": "\tprivate native boolean n_onInterceptTouchEvent (android.view.MotionEvent p0);\n\n\n\tpublic boolean onTouchEvent (android.view.MotionEvent p0)\n\t{\n\t\treturn n_onTouchEvent (p0);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc643f46942d9dd1fff9/AHorizontalScrollView.java", "stars": "2", "class_props": {"extends": "android", "implements": ["mono"], "modifiers": ["public"]}}, {"id": 60244, "method_name": "onTouchEvent", "class_name": "AHorizontalScrollView", "params": ["android"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "\tpublic boolean onTouchEvent (android.view.MotionEvent p0)\n\t{\n\t\treturn n_onTouchEvent (p0);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc643f46942d9dd1fff9/AHorizontalScrollView.java", "stars": "2", "class_props": {"extends": "android", "implements": ["mono"], "modifiers": ["public"]}}, {"id": 60245, "method_name": "n_onTouchEvent", "class_name": "AHorizontalScrollView", "params": ["android"], "throws": null, "modifiers": ["private", "native"], "return_type": "boolean", "snippet": "\tprivate native boolean n_onTouchEvent (android.view.MotionEvent p0);\n\n\n\tpublic void onScrollChanged (int p0, int p1, int p2, int p3)\n\t{\n\t\tn_onScrollChanged (p0, p1, p2, p3);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc643f46942d9dd1fff9/AHorizontalScrollView.java", "stars": "2", "class_props": {"extends": "android", "implements": ["mono"], "modifiers": ["public"]}}, {"id": 60246, "method_name": "onScrollChanged", "class_name": "AHorizontalScrollView", "params": ["int", "int", "int", "int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void onScrollChanged (int p0, int p1, int p2, int p3)\n\t{\n\t\tn_onScrollChanged (p0, p1, p2, p3);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc643f46942d9dd1fff9/AHorizontalScrollView.java", "stars": "2", "class_props": {"extends": "android", "implements": ["mono"], "modifiers": ["public"]}}, {"id": 60247, "method_name": "n_onScrollChanged", "class_name": "AHorizontalScrollView", "params": ["int", "int", "int", "int"], "throws": null, "modifiers": ["private", "native"], "return_type": "void", "snippet": "\tprivate native void n_onScrollChanged (int p0, int p1, int p2, int p3);\n\n\n\tpublic void draw (android.graphics.Canvas p0)\n\t{\n\t\tn_draw (p0);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc643f46942d9dd1fff9/AHorizontalScrollView.java", "stars": "2", "class_props": {"extends": "android", "implements": ["mono"], "modifiers": ["public"]}}, {"id": 60248, "method_name": "draw", "class_name": "AHorizontalScrollView", "params": ["android"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void draw (android.graphics.Canvas p0)\n\t{\n\t\tn_draw (p0);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc643f46942d9dd1fff9/AHorizontalScrollView.java", "stars": "2", "class_props": {"extends": "android", "implements": ["mono"], "modifiers": ["public"]}}, {"id": 60249, "method_name": "n_draw", "class_name": "AHorizontalScrollView", "params": ["android"], "throws": null, "modifiers": ["private", "native"], "return_type": "void", "snippet": "\tprivate native void n_draw (android.graphics.Canvas p0);\n\n\n\tpublic boolean isHorizontalScrollBarEnabled ()\n\t{\n\t\treturn n_isHorizontalScrollBarEnabled ();\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc643f46942d9dd1fff9/AHorizontalScrollView.java", "stars": "2", "class_props": {"extends": "android", "implements": ["mono"], "modifiers": ["public"]}}, {"id": 60250, "method_name": "isHorizontalScrollBarEnabled", "class_name": "AHorizontalScrollView", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "\tpublic boolean isHorizontalScrollBarEnabled ()\n\t{\n\t\treturn n_isHorizontalScrollBarEnabled ();\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc643f46942d9dd1fff9/AHorizontalScrollView.java", "stars": "2", "class_props": {"extends": "android", "implements": ["mono"], "modifiers": ["public"]}}, {"id": 60251, "method_name": "n_isHorizontalScrollBarEnabled", "class_name": "AHorizontalScrollView", "params": [], "throws": null, "modifiers": ["private", "native"], "return_type": "boolean", "snippet": "\tprivate native boolean n_isHorizontalScrollBarEnabled ();\n\n\n\tpublic void setHorizontalScrollBarEnabled (boolean p0)\n\t{\n\t\tn_setHorizontalScrollBarEnabled (p0);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc643f46942d9dd1fff9/AHorizontalScrollView.java", "stars": "2", "class_props": {"extends": "android", "implements": ["mono"], "modifiers": ["public"]}}, {"id": 60252, "method_name": "setHorizontalScrollBarEnabled", "class_name": "AHorizontalScrollView", "params": ["boolean"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void setHorizontalScrollBarEnabled (boolean p0)\n\t{\n\t\tn_setHorizontalScrollBarEnabled (p0);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc643f46942d9dd1fff9/AHorizontalScrollView.java", "stars": "2", "class_props": {"extends": "android", "implements": ["mono"], "modifiers": ["public"]}}, {"id": 60253, "method_name": "n_setHorizontalScrollBarEnabled", "class_name": "AHorizontalScrollView", "params": ["boolean"], "throws": null, "modifiers": ["private", "native"], "return_type": "void", "snippet": "\tprivate native void n_setHorizontalScrollBarEnabled (boolean p0);\n\n\tprivate java.util.ArrayList refList;\n\tpublic void monodroidAddReference (java.lang.Object obj)\n\t{\n\t\tif (refList == null)\n\t\t\trefList = new java.util.ArrayList ();\n\t\trefList.add (obj);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc643f46942d9dd1fff9/AHorizontalScrollView.java", "stars": "2", "class_props": {"extends": "android", "implements": ["mono"], "modifiers": ["public"]}}, {"id": 60254, "method_name": "monodroidAddReference", "class_name": "AHorizontalScrollView", "params": ["java"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void monodroidAddReference (java.lang.Object obj)\n\t{\n\t\tif (refList == null)\n\t\t\trefList = new java.util.ArrayList ();\n\t\trefList.add (obj);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc643f46942d9dd1fff9/AHorizontalScrollView.java", "stars": "2", "class_props": {"extends": "android", "implements": ["mono"], "modifiers": ["public"]}}, {"id": 60255, "method_name": "monodroidClearReferences", "class_name": "AHorizontalScrollView", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void monodroidClearReferences ()\n\t{\n\t\tif (refList != null)\n\t\t\trefList.clear ();\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc643f46942d9dd1fff9/AHorizontalScrollView.java", "stars": "2", "class_props": {"extends": "android", "implements": ["mono"], "modifiers": ["public"]}}, {"id": 60256, "method_name": "findAll", "class_name": "GatheringService", "params": [], "throws": null, "modifiers": ["public"], "return_type": "List<Gathering>", "snippet": "\tpublic List<Gathering> findAll() {\n\t\treturn gatheringDao.findAll();\n\t}", "url": "https://raw.githubusercontent.com/1127140426/tensquare/master/tensquare_gathering/src/main/java/com/tensquare/gathering/service/GatheringService.java", "stars": "34", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 60257, "method_name": "findSearch", "class_name": "GatheringService", "params": ["Map", "int", "int"], "throws": null, "modifiers": ["public"], "return_type": "Page<Gathering>", "snippet": "\tpublic Page<Gathering> findSearch(Map whereMap, int page, int size) {\n\t\tSpecification<Gathering> specification = createSpecification(whereMap);\n\t\tPageRequest pageRequest =  PageRequest.of(page-1, size);\n\t\treturn gatheringDao.findAll(specification, pageRequest);\n\t}", "url": "https://raw.githubusercontent.com/1127140426/tensquare/master/tensquare_gathering/src/main/java/com/tensquare/gathering/service/GatheringService.java", "stars": "34", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 60258, "method_name": "findSearch", "class_name": "GatheringService", "params": ["Map"], "throws": null, "modifiers": ["public"], "return_type": "List<Gathering>", "snippet": "\tpublic List<Gathering> findSearch(Map whereMap) {\n\t\tSpecification<Gathering> specification = createSpecification(whereMap);\n\t\treturn gatheringDao.findAll(specification);\n\t}", "url": "https://raw.githubusercontent.com/1127140426/tensquare/master/tensquare_gathering/src/main/java/com/tensquare/gathering/service/GatheringService.java", "stars": "34", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 60259, "method_name": "findById", "class_name": "GatheringService", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "Gathering", "snippet": "\tpublic Gathering findById(String id) {\n\t\treturn gatheringDao.findById(id).get();\n\t}", "url": "https://raw.githubusercontent.com/1127140426/tensquare/master/tensquare_gathering/src/main/java/com/tensquare/gathering/service/GatheringService.java", "stars": "34", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 60260, "method_name": "add", "class_name": "GatheringService", "params": ["Gathering"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void add(Gathering gathering) {\n\t\tgathering.setId( idWorker.nextId()+\"\" );\n\t\tgatheringDao.save(gathering);\n\t}", "url": "https://raw.githubusercontent.com/1127140426/tensquare/master/tensquare_gathering/src/main/java/com/tensquare/gathering/service/GatheringService.java", "stars": "34", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 60261, "method_name": "update", "class_name": "GatheringService", "params": ["Gathering"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void update(Gathering gathering) {\n\t\tgatheringDao.save(gathering);\n\t}", "url": "https://raw.githubusercontent.com/1127140426/tensquare/master/tensquare_gathering/src/main/java/com/tensquare/gathering/service/GatheringService.java", "stars": "34", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 60262, "method_name": "deleteById", "class_name": "GatheringService", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void deleteById(String id) {\n\t\tgatheringDao.deleteById(id);\n\t}", "url": "https://raw.githubusercontent.com/1127140426/tensquare/master/tensquare_gathering/src/main/java/com/tensquare/gathering/service/GatheringService.java", "stars": "34", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 60263, "method_name": "createSpecification", "class_name": "GatheringService", "params": ["Map"], "throws": null, "modifiers": ["private"], "return_type": "Specification<Gathering>", "snippet": "\tprivate Specification<Gathering> createSpecification(Map searchMap) {\n\n\t\treturn new Specification<Gathering>() {\n\n\t\t\t@Override\n\t\t\tpublic Predicate toPredicate(Root<Gathering> root, CriteriaQuery<?> query, CriteriaBuilder cb) {\n\t\t\t\tList<Predicate> predicateList = new ArrayList<Predicate>();\n                // \u7f16\u53f7\n                if (searchMap.get(\"id\")!=null && !\"\".equals(searchMap.get(\"id\"))) {\n                \tpredicateList.add(cb.like(root.get(\"id\").as(String.class), \"%\"+(String)searchMap.get(\"id\")+\"%\"));\n                }\n                // \u6d3b\u52a8\u540d\u79f0\n                if (searchMap.get(\"name\")!=null && !\"\".equals(searchMap.get(\"name\"))) {\n                \tpredicateList.add(cb.like(root.get(\"name\").as(String.class), \"%\"+(String)searchMap.get(\"name\")+\"%\"));\n                }\n                // \u5927\u4f1a\u7b80\u4ecb\n                if (searchMap.get(\"summary\")!=null && !\"\".equals(searchMap.get(\"summary\"))) {\n                \tpredicateList.add(cb.like(root.get(\"summary\").as(String.class), \"%\"+(String)searchMap.get(\"summary\")+\"%\"));\n                }\n                // \u8be6\u7ec6\u8bf4\u660e\n                if (searchMap.get(\"detail\")!=null && !\"\".equals(searchMap.get(\"detail\"))) {\n                \tpredicateList.add(cb.like(root.get(\"detail\").as(String.class), \"%\"+(String)searchMap.get(\"detail\")+\"%\"));\n                }\n                // \u4e3b\u529e\u65b9\n                if (searchMap.get(\"sponsor\")!=null && !\"\".equals(searchMap.get(\"sponsor\"))) {\n                \tpredicateList.add(cb.like(root.get(\"sponsor\").as(String.class), \"%\"+(String)searchMap.get(\"sponsor\")+\"%\"));\n                }\n                // \u6d3b\u52a8\u56fe\u7247\n                if (searchMap.get(\"image\")!=null && !\"\".equals(searchMap.get(\"image\"))) {\n                \tpredicateList.add(cb.like(root.get(\"image\").as(String.class), \"%\"+(String)searchMap.get(\"image\")+\"%\"));\n                }\n                // \u4e3e\u529e\u5730\u70b9\n                if (searchMap.get(\"address\")!=null && !\"\".equals(searchMap.get(\"address\"))) {\n                \tpredicateList.add(cb.like(root.get(\"address\").as(String.class), \"%\"+(String)searchMap.get(\"address\")+\"%\"));\n                }\n                // \u662f\u5426\u53ef\u89c1\n                if (searchMap.get(\"state\")!=null && !\"\".equals(searchMap.get(\"state\"))) {\n                \tpredicateList.add(cb.like(root.get(\"state\").as(String.class), \"%\"+(String)searchMap.get(\"state\")+\"%\"));\n                }\n                // \u57ce\u5e02\n                if (searchMap.get(\"city\")!=null && !\"\".equals(searchMap.get(\"city\"))) {\n                \tpredicateList.add(cb.like(root.get(\"city\").as(String.class), \"%\"+(String)searchMap.get(\"city\")+\"%\"));\n                }\n\t\t\t\t\n\t\t\t\treturn cb.and( predicateList.toArray(new Predicate[predicateList.size()]));\n\n\t\t\t}\n\t\t};\n\n\t}", "url": "https://raw.githubusercontent.com/1127140426/tensquare/master/tensquare_gathering/src/main/java/com/tensquare/gathering/service/GatheringService.java", "stars": "34", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 60264, "method_name": "onCreateViewHolder", "class_name": "OnSellContentAdapter", "params": ["ViewGroup", "int"], "throws": null, "modifiers": ["public"], "return_type": "InnerHolder", "snippet": "    public InnerHolder onCreateViewHolder(@NonNull ViewGroup parent,int viewType) {\n        View itemView = LayoutInflater.from(parent.getContext()).inflate(R.layout.item_on_sell_content,parent,false);\n        return new InnerHolder(itemView);\n    }", "url": "https://raw.githubusercontent.com/TrillGates/TaobaoUnion/master/app/src/main/java/com/sunofbeaches/taobaounion/ui/adapter/OnSellContentAdapter.java", "stars": "9", "class_props": {"extends": "RecyclerView", "implements": null, "modifiers": ["public"]}}, {"id": 60265, "method_name": "onBindViewHolder", "class_name": "OnSellContentAdapter", "params": ["InnerHolder", "int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onBindViewHolder(@NonNull InnerHolder holder,int position) {\n        //\u7ed1\u5b9a\u6570\u636e\n        OnSellContent.DataBean.TbkDgOptimusMaterialResponseBean.ResultListBean.MapDataBean mapDataBean = mData.get(position);\n        holder.setData(mapDataBean);\n        holder.itemView.setOnClickListener(new View.OnClickListener() {\n            @Override\n            public void onClick(View v) {\n                if(mContentItemClickListener != null) {\n                    mContentItemClickListener.onSellItemClick(mapDataBean);\n                }\n            }\n        });\n    }", "url": "https://raw.githubusercontent.com/TrillGates/TaobaoUnion/master/app/src/main/java/com/sunofbeaches/taobaounion/ui/adapter/OnSellContentAdapter.java", "stars": "9", "class_props": {"extends": "RecyclerView", "implements": null, "modifiers": ["public"]}}, {"id": 60266, "method_name": "getItemCount", "class_name": "OnSellContentAdapter", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getItemCount() {\n        return mData.size();\n    }", "url": "https://raw.githubusercontent.com/TrillGates/TaobaoUnion/master/app/src/main/java/com/sunofbeaches/taobaounion/ui/adapter/OnSellContentAdapter.java", "stars": "9", "class_props": {"extends": "RecyclerView", "implements": null, "modifiers": ["public"]}}, {"id": 60267, "method_name": "setData", "class_name": "OnSellContentAdapter", "params": ["OnSellContent"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setData(OnSellContent result) {\n        this.mData.clear();\n        this.mData.addAll(result.getData().getTbk_dg_optimus_material_response().getResult_list().getMap_data());\n        notifyDataSetChanged();\n    }", "url": "https://raw.githubusercontent.com/TrillGates/TaobaoUnion/master/app/src/main/java/com/sunofbeaches/taobaounion/ui/adapter/OnSellContentAdapter.java", "stars": "9", "class_props": {"extends": "RecyclerView", "implements": null, "modifiers": ["public"]}}, {"id": 60268, "method_name": "onMoreLoaded", "class_name": "OnSellContentAdapter", "params": ["OnSellContent"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onMoreLoaded(OnSellContent moreResult) {\n        List<OnSellContent.DataBean.TbkDgOptimusMaterialResponseBean.ResultListBean.MapDataBean> moreData = moreResult.getData().getTbk_dg_optimus_material_response().getResult_list().getMap_data();\n        //\u539f\u6570\u636e\u7684\u957f\u5ea6\n        int oldDataSize = this.mData.size();\n        this.mData.addAll(moreData);\n        notifyItemRangeChanged(oldDataSize - 1,moreData.size());\n    }", "url": "https://raw.githubusercontent.com/TrillGates/TaobaoUnion/master/app/src/main/java/com/sunofbeaches/taobaounion/ui/adapter/OnSellContentAdapter.java", "stars": "9", "class_props": {"extends": "RecyclerView", "implements": null, "modifiers": ["public"]}}, {"id": 60269, "method_name": "setOnSellPageItemClickListener", "class_name": "OnSellContentAdapter", "params": ["OnSellPageItemClickListener"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setOnSellPageItemClickListener(OnSellPageItemClickListener listener) {\n        this.mContentItemClickListener = listener;\n    }", "url": "https://raw.githubusercontent.com/TrillGates/TaobaoUnion/master/app/src/main/java/com/sunofbeaches/taobaounion/ui/adapter/OnSellContentAdapter.java", "stars": "9", "class_props": {"extends": "RecyclerView", "implements": null, "modifiers": ["public"]}}, {"id": 60270, "method_name": "setData", "class_name": "InnerHolder", "params": ["OnSellContent"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "        public void setData(OnSellContent.DataBean.TbkDgOptimusMaterialResponseBean.ResultListBean.MapDataBean data) {\n            titleTv.setText(data.getTitle());\n            // LogUtils.d(this,\"pic url --- > \" + data.getPict_url());\n            String coverPath = UrlUtils.getCoverPath(data.getPict_url());\n            Glide.with(cover.getContext()).load(coverPath).into(cover);\n            String originalPrise = data.getZk_final_price();\n            originalPriseTv.setText(\"\uffe5\" + originalPrise + \" \");\n            originalPriseTv.setPaintFlags(Paint.STRIKE_THRU_TEXT_FLAG);\n            int couponAmount = data.getCoupon_amount();\n            float originPriseFloat = Float.parseFloat(originalPrise);\n            float finalPrise = originPriseFloat - couponAmount;\n            offPriseTv.setText(\"\u5238\u540e\u4ef7\uff1a\" + String.format(\"%.2f\",finalPrise));\n        }", "url": "https://raw.githubusercontent.com/TrillGates/TaobaoUnion/master/app/src/main/java/com/sunofbeaches/taobaounion/ui/adapter/OnSellContentAdapter.java", "stars": "9", "class_props": {"extends": "RecyclerView", "implements": null, "modifiers": ["public"]}}, {"id": 60271, "method_name": "getAll", "class_name": "AuditResource", "params": ["Pageable"], "throws": null, "modifiers": ["public"], "return_type": "ResponseEntity<List>", "snippet": "    public ResponseEntity<List<AuditEvent>> getAll(Pageable pageable) {\n        Page<AuditEvent> page = auditEventService.findAll(pageable);\n        HttpHeaders headers = PaginationUtil.generatePaginationHttpHeaders(ServletUriComponentsBuilder.fromCurrentRequest(), page);\n        return new ResponseEntity<>(page.getContent(), headers, HttpStatus.OK);\n    }", "url": "https://raw.githubusercontent.com/Vondser/mmwms-antd/master/src/main/java/com/meimos/myapp/web/rest/AuditResource.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 60272, "method_name": "getByDates", "class_name": "AuditResource", "params": ["LocalDate", "LocalDate", "Pageable"], "throws": null, "modifiers": ["public"], "return_type": "ResponseEntity<List>", "snippet": "    public ResponseEntity<List<AuditEvent>> getByDates(\n        @RequestParam(value = \"fromDate\") LocalDate fromDate,\n        @RequestParam(value = \"toDate\") LocalDate toDate,\n        Pageable pageable\n    ) {\n        Instant from = fromDate.atStartOfDay(ZoneId.systemDefault()).toInstant();\n        Instant to = toDate.atStartOfDay(ZoneId.systemDefault()).plusDays(1).toInstant();\n\n        Page<AuditEvent> page = auditEventService.findByDates(from, to, pageable);\n        HttpHeaders headers = PaginationUtil.generatePaginationHttpHeaders(ServletUriComponentsBuilder.fromCurrentRequest(), page);\n        return new ResponseEntity<>(page.getContent(), headers, HttpStatus.OK);\n    }", "url": "https://raw.githubusercontent.com/Vondser/mmwms-antd/master/src/main/java/com/meimos/myapp/web/rest/AuditResource.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 60273, "method_name": "get", "class_name": "AuditResource", "params": ["Long"], "throws": null, "modifiers": ["public"], "return_type": "ResponseEntity<AuditEvent>", "snippet": "    public ResponseEntity<AuditEvent> get(@PathVariable Long id) {\n        return ResponseUtil.wrapOrNotFound(auditEventService.find(id));\n    }", "url": "https://raw.githubusercontent.com/Vondser/mmwms-antd/master/src/main/java/com/meimos/myapp/web/rest/AuditResource.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 60274, "method_name": "isAI", "class_name": "AI", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean isAI()     {  return empire.isAI(); }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/ai/AI.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base"], "modifiers": ["public"]}}, {"id": 60275, "method_name": "isPlayer", "class_name": "AI", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean isPlayer() {  return empire.isPlayer(); }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/ai/AI.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base"], "modifiers": ["public"]}}, {"id": 60276, "method_name": "shipCaptain", "class_name": "AI", "params": [], "throws": null, "modifiers": ["public"], "return_type": "ShipCaptain", "snippet": "    public ShipCaptain shipCaptain()                   { return captain; }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/ai/AI.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base"], "modifiers": ["public"]}}, {"id": 60277, "method_name": "general", "class_name": "AI", "params": [], "throws": null, "modifiers": ["public"], "return_type": "General", "snippet": "    public General general()                           { return general; }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/ai/AI.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base"], "modifiers": ["public"]}}, {"id": 60278, "method_name": "diplomat", "class_name": "AI", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Diplomat", "snippet": "    public Diplomat diplomat()                         { return diplomat; }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/ai/AI.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base"], "modifiers": ["public"]}}, {"id": 60279, "method_name": "fleetCommander", "class_name": "AI", "params": [], "throws": null, "modifiers": ["public"], "return_type": "FleetCommander", "snippet": "    public FleetCommander fleetCommander()             { return fleetCommander; }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/ai/AI.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base"], "modifiers": ["public"]}}, {"id": 60280, "method_name": "governor", "class_name": "AI", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Governor", "snippet": "    public Governor governor()                         { return governor; }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/ai/AI.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base"], "modifiers": ["public"]}}, {"id": 60281, "method_name": "treasurer", "class_name": "AI", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Treasurer", "snippet": "    public Treasurer treasurer()                       { return treasurer; }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/ai/AI.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base"], "modifiers": ["public"]}}, {"id": 60282, "method_name": "scientist", "class_name": "AI", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Scientist", "snippet": "    public Scientist scientist()                       { return scientist; }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/ai/AI.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base"], "modifiers": ["public"]}}, {"id": 60283, "method_name": "shipDesigner", "class_name": "AI", "params": [], "throws": null, "modifiers": ["public"], "return_type": "ShipDesigner", "snippet": "    public ShipDesigner shipDesigner()                 { return shipDesigner; }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/ai/AI.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base"], "modifiers": ["public"]}}, {"id": 60284, "method_name": "spyMaster", "class_name": "AI", "params": [], "throws": null, "modifiers": ["public"], "return_type": "SpyMaster", "snippet": "    public SpyMaster spyMaster()                       { return spyMaster; }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/ai/AI.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base"], "modifiers": ["public"]}}, {"id": 60285, "method_name": "bestSystemsForInvasion", "class_name": "AI", "params": ["EmpireView"], "throws": null, "modifiers": ["public"], "return_type": "List<StarSystem>", "snippet": "    public List<StarSystem> bestSystemsForInvasion(EmpireView v) {\n        // invoked when going to war\n        List<StarSystem> systems = empire.systemsInShipRange(v.empire());\n        Collections.sort(systems,StarSystem.INVASION_PRIORITY);\n        return systems;\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/ai/AI.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base"], "modifiers": ["public"]}}, {"id": 60286, "method_name": "targetPopPct", "class_name": "AI", "params": ["StarSystem"], "throws": null, "modifiers": ["public"], "return_type": "float", "snippet": "    public float targetPopPct(StarSystem sys) {\n        SystemView sv = empire.sv.view(id(sys));\n        if (sv.borderSystem()) return .75f;\n\n        Planet p = sys.planet();\n        if (p.isResourceRich()) return .75f;\n        if (p.isResourceUltraRich()) return .75f;\n        if (p.isArtifact()) return .75f;\n        if (p.isOrionArtifact()) return .75f;\n        if (p.currentSize() <= 20) return .75f;\n\n        if (sv.supportSystem()) return .5f;\n        if (p.currentSize() <= 40) return .5f;\n\n        return .25f;\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/ai/AI.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base"], "modifiers": ["public"]}}, {"id": 60287, "method_name": "createColony", "class_name": "AI", "params": ["StarSystem", "int"], "throws": null, "modifiers": ["private"], "return_type": "ColonyTransporter", "snippet": "    private ColonyTransporter createColony(StarSystem sys, int minTransports) {\n        int sysId = id(sys);\n        int popNeeded = (int) empire.sv.popNeeded(sysId);        \n        int maxPopToGive = (int) empire.sv.maxPopToGive(sysId);\n        if ((popNeeded < minTransports) && (maxPopToGive < minTransports))\n            return null;\n\n        return new ColonyTransporter(sys.colony(), popNeeded, maxPopToGive, minTransports);\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/ai/AI.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base"], "modifiers": ["public"]}}, {"id": 60288, "method_name": "sendTransports", "class_name": "AI", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void sendTransports() {\n        long tm0 = System.currentTimeMillis();\n        int minTransportSize = 5;\n        List<ColonyTransporter> needy = new ArrayList<>();\n        List<ColonyTransporter> givey = new ArrayList<>();\n        for (StarSystem sys: empire.allColonizedSystems()) {\n            ColonyTransporter col = createColony(sys, minTransportSize);\n            if (col != null) {\n                if ((col.popNeeded >= minTransportSize) && (col.popNeeded >= col.maxPopToGive))\n                    needy.add(col);\n                else if ((col.maxPopToGive >= minTransportSize) && (col.maxPopToGive > col.popNeeded))\n                    givey.add(col);\n            }\n        }\n\n        if (needy.isEmpty() || givey.isEmpty()) {\n            log(\"sendTransports (NONE): \"+empire.raceName()+\"   \"+(System.currentTimeMillis()-tm0)+\"ms\");\n            return;\n        }\n\n        Collections.sort(needy,TRANSPORT_PRIORITY);\n        boolean transporting = true;\n\n        while(transporting) {\n            transporting = false;\n            if (!needy.isEmpty()) {\n                if (!givey.isEmpty()) {\n                    ColonyTransporter needer = needy.get(0);\n                    TARGET_COLONY = needer;\n                    Collections.sort(givey,DISTANCE_TO_TARGET);\n                    int j = 0;\n                    while(!transporting && (j < givey.size())) {\n                        ColonyTransporter giver = givey.get(j);\n                        j++;\n                        if ((giver.maxPopToGive >= minTransportSize) && (giver.transportPriority < needer.transportPriority)) {\n                            float needed = needer.popNeeded - ((int) (Math.ceil(giver.transportTimeTo(needer))) * needer.growth);\n                            int trPop = (int) min(needed, giver.maxPopToGive);\n                            if (trPop >= minTransportSize) {\n                                giver.sendTransportsTo(needer, trPop);\n                                transporting = true;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        long tm1 = System.currentTimeMillis();\n        log(\"sendTransports: \"+empire.raceName()+\"   \"+(tm1-tm0)+\"ms\");\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/ai/AI.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base"], "modifiers": ["public"]}}, {"id": 60289, "method_name": "checkColonize", "class_name": "AI", "params": ["StarSystem", "ShipFleet"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void checkColonize(StarSystem sys, ShipFleet fl) {\n        if (fl.retreating())\n            return;\n        if (sys.orbitingShipsInConflict())\n            return;\n\n        if (empire.sv.isColonized(sys.id))\n            return;\n        if (!empire.canColonize(sys.planet()))\n            return;\n\n        ShipDesign bestDesign = shipDesigner().bestDesignToColonize(fl, sys);\n        // if no useable colony design, exit\n        if (bestDesign == null)\n            return;\n\n        // AT THIS POINT, the fleet can definitely colonize the planet\n        // confirm if player controlled\n        if (empire.isAIControlled())\n            fl.colonizeSystem(sys, bestDesign);\n        else\n            ColonizeSystemNotification.create(sys.id, fl, bestDesign);\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/ai/AI.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base"], "modifiers": ["public"]}}, {"id": 60290, "method_name": "promptForBombardment", "class_name": "AI", "params": ["StarSystem", "ShipFleet"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean promptForBombardment(StarSystem sys, ShipFleet fl) {\n        // if player, prompt for decision to bomb instead of deciding here\n        if (isPlayer()) {\n            BombardSystemNotification.create(id(sys), fl);\n            return false;\n        }\n        \n        // estimate bombardment damage and resulting population loss\n        float damage = fl.expectedBombardDamage();\n        float popLoss = damage / 200;\n        float sysPop = empire.sv.population(id(sys));\n\n        // if colony will NOT be destroyed, then bombs away!\n        if (popLoss < (sysPop * .9))\n            return true;\n\n        Empire fleetEmp = fl.empire();\n        // determine number of troops in transit\n        int transports = fleetEmp.transportsInTransit(sys);\n\n        // if none in transit, then bombs away!\n        if (transports < 1)\n            return true;\n\n        // determine population troop loss in combat\n        float killRatio = fleetEmp.troopKillRatio(sys);\n\n        // if troops in transit CANNOT capture planet and will die anyway, then bombs away!\n        if ((transports * killRatio) < sysPop)\n            return true;\n\n        // else don't bomb\n        return false;\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/ai/AI.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base"], "modifiers": ["public"]}}, {"id": 60291, "method_name": "x", "class_name": "ColonyTransporter", "params": [], "throws": null, "modifiers": ["public"], "return_type": "float", "snippet": "        public float x() { return x; }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/ai/AI.java", "stars": "74", "class_props": {"extends": null, "implements": ["IMappedObject"], "modifiers": []}}, {"id": 60292, "method_name": "y", "class_name": "ColonyTransporter", "params": [], "throws": null, "modifiers": ["public"], "return_type": "float", "snippet": "        public float y() { return y; }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/ai/AI.java", "stars": "74", "class_props": {"extends": null, "implements": ["IMappedObject"], "modifiers": []}}, {"id": 60293, "method_name": "transportTimeTo", "class_name": "ColonyTransporter", "params": ["ColonyTransporter"], "throws": null, "modifiers": ["public"], "return_type": "float", "snippet": "        public float transportTimeTo(ColonyTransporter dest) {\n            return colony.starSystem().transportTimeTo(dest.colony.starSystem());\n        }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/ai/AI.java", "stars": "74", "class_props": {"extends": null, "implements": ["IMappedObject"], "modifiers": []}}, {"id": 60294, "method_name": "sendTransportsTo", "class_name": "ColonyTransporter", "params": ["ColonyTransporter", "int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "        public void sendTransportsTo(ColonyTransporter dest, int trPop) {\n            colony.scheduleTransportsToSystem(dest.colony.starSystem(), trPop);\n            maxPopToGive = 0;\n            dest.popNeeded -= trPop;\n        }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/ai/AI.java", "stars": "74", "class_props": {"extends": null, "implements": ["IMappedObject"], "modifiers": []}}, {"id": 60295, "method_name": "empire", "class_name": "DiplomaticEmbassy", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Empire", "snippet": "    public Empire empire()                               { return view.empire(); }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/empires/DiplomaticEmbassy.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Serializable"], "modifiers": ["public"]}}, {"id": 60296, "method_name": "owner", "class_name": "DiplomaticEmbassy", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Empire", "snippet": "    public Empire owner()                                { return view.owner(); }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/empires/DiplomaticEmbassy.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Serializable"], "modifiers": ["public"]}}, {"id": 60297, "method_name": "treatyDate", "class_name": "DiplomaticEmbassy", "params": [], "throws": null, "modifiers": ["public"], "return_type": "float", "snippet": "    public float treatyDate()                            { return treatyDate; }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/empires/DiplomaticEmbassy.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Serializable"], "modifiers": ["public"]}}, {"id": 60298, "method_name": "treaty", "class_name": "DiplomaticEmbassy", "params": [], "throws": null, "modifiers": ["public"], "return_type": "DiplomaticTreaty", "snippet": "    public DiplomaticTreaty treaty()                     { return treaty; }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/empires/DiplomaticEmbassy.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Serializable"], "modifiers": ["public"]}}, {"id": 60299, "method_name": "allIncidents", "class_name": "DiplomaticEmbassy", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Collection<DiplomaticIncident>", "snippet": "    public Collection<DiplomaticIncident> allIncidents() { return incidents.values(); }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/empires/DiplomaticEmbassy.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Serializable"], "modifiers": ["public"]}}, {"id": 60300, "method_name": "requestCount", "class_name": "DiplomaticEmbassy", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int requestCount()                            { return requestCount; }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/empires/DiplomaticEmbassy.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Serializable"], "modifiers": ["public"]}}, {"id": 60301, "method_name": "relations", "class_name": "DiplomaticEmbassy", "params": [], "throws": null, "modifiers": ["public"], "return_type": "float", "snippet": "    public float relations()                             { return relations; }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/empires/DiplomaticEmbassy.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Serializable"], "modifiers": ["public"]}}, {"id": 60302, "method_name": "contact", "class_name": "DiplomaticEmbassy", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean contact()                             { return contact; }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/empires/DiplomaticEmbassy.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Serializable"], "modifiers": ["public"]}}, {"id": 60303, "method_name": "onWarFooting", "class_name": "DiplomaticEmbassy", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean onWarFooting()                        { return warFooting; }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/empires/DiplomaticEmbassy.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Serializable"], "modifiers": ["public"]}}, {"id": 60304, "method_name": "beginWarPreparations", "class_name": "DiplomaticEmbassy", "params": ["String", "DiplomaticIncident"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void beginWarPreparations(String cb, DiplomaticIncident inc) {\n        // dont replace an existing casus belli unless the new one is worse\n        if (casusBelliInc != null) {\n            if (casusBelliInc.moreSevere(inc))\n                return;\n        }\n        warFooting = true;\n        casusBelli = cb;\n        casusBelliInc = inc;\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/empires/DiplomaticEmbassy.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Serializable"], "modifiers": ["public"]}}, {"id": 60305, "method_name": "endWarPreparations", "class_name": "DiplomaticEmbassy", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void endWarPreparations() {\n        warFooting = false;\n        casusBelli = null;\n        casusBelliInc = null;\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/empires/DiplomaticEmbassy.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Serializable"], "modifiers": ["public"]}}, {"id": 60306, "method_name": "evaluateWarPreparations", "class_name": "DiplomaticEmbassy", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void evaluateWarPreparations() {\n        if (casusBelliInc == null)\n            return;\n        if (casusBelliInc.currentSeverity() == 0) \n            endWarPreparations();\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/empires/DiplomaticEmbassy.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Serializable"], "modifiers": ["public"]}}, {"id": 60307, "method_name": "contact", "class_name": "DiplomaticEmbassy", "params": ["boolean"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void contact(boolean b)                       { contact = b; }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/empires/DiplomaticEmbassy.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Serializable"], "modifiers": ["public"]}}, {"id": 60308, "method_name": "newIncidents", "class_name": "DiplomaticEmbassy", "params": [], "throws": null, "modifiers": ["public"], "return_type": "List<DiplomaticIncident>", "snippet": "    public List<DiplomaticIncident> newIncidents() {\n        if (newIncidents == null)\n            newIncidents = new ArrayList<>();\n        return newIncidents;\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/empires/DiplomaticEmbassy.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Serializable"], "modifiers": ["public"]}}, {"id": 60309, "method_name": "offeredTechs", "class_name": "DiplomaticEmbassy", "params": [], "throws": null, "modifiers": ["private"], "return_type": "HashMap<String,List>", "snippet": "    private HashMap<String, List<String>> offeredTechs() {\n        if (offeredTechs == null)\n            offeredTechs = new HashMap<>();\n        return offeredTechs;\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/empires/DiplomaticEmbassy.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Serializable"], "modifiers": ["public"]}}, {"id": 60310, "method_name": "currentSpyIncidentSeverity", "class_name": "DiplomaticEmbassy", "params": [], "throws": null, "modifiers": ["public"], "return_type": "float", "snippet": "    public float currentSpyIncidentSeverity() {\n        float sev = 0;\n        for (DiplomaticIncident inc: allIncidents()) {\n            if (inc.isSpying())\n                sev += inc.currentSeverity();\n        }\n        return max(-100,sev);\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/empires/DiplomaticEmbassy.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Serializable"], "modifiers": ["public"]}}, {"id": 60311, "method_name": "nextTurn", "class_name": "DiplomaticEmbassy", "params": ["float"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void nextTurn(float prod) {\n        evaluateWarPreparations();\n        treaty.nextTurn(empire());\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/empires/DiplomaticEmbassy.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Serializable"], "modifiers": ["public"]}}, {"id": 60312, "method_name": "finalWar", "class_name": "DiplomaticEmbassy", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean finalWar()               { return treaty.isFinalWar(); \t}", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/empires/DiplomaticEmbassy.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Serializable"], "modifiers": ["public"]}}, {"id": 60313, "method_name": "war", "class_name": "DiplomaticEmbassy", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean war()                    { return treaty.isWar(); \t}", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/empires/DiplomaticEmbassy.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Serializable"], "modifiers": ["public"]}}, {"id": 60314, "method_name": "noTreaty", "class_name": "DiplomaticEmbassy", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean noTreaty()               { return treaty.isNoTreaty(); }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/empires/DiplomaticEmbassy.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Serializable"], "modifiers": ["public"]}}, {"id": 60315, "method_name": "pact", "class_name": "DiplomaticEmbassy", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean pact()                   { return treaty.isPact(); }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/empires/DiplomaticEmbassy.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Serializable"], "modifiers": ["public"]}}, {"id": 60316, "method_name": "alliance", "class_name": "DiplomaticEmbassy", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean alliance()               { return treaty.isAlliance(); }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/empires/DiplomaticEmbassy.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Serializable"], "modifiers": ["public"]}}, {"id": 60317, "method_name": "unity", "class_name": "DiplomaticEmbassy", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean unity()                  { return treaty.isUnity(); }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/empires/DiplomaticEmbassy.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Serializable"], "modifiers": ["public"]}}, {"id": 60318, "method_name": "readyForTrade", "class_name": "DiplomaticEmbassy", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean readyForTrade(int level) {\n        // trade cooldown timer must be back to zero -AND-\n        // new trade level must exceed last requested level by 25% * each consecutive refusal\n        return (tradeTimer <= 0)\n        && (level > (lastRequestedTradeLevel*(1+(tradeRefusalCount/4.0))));\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/empires/DiplomaticEmbassy.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Serializable"], "modifiers": ["public"]}}, {"id": 60319, "method_name": "resetTradeTimer", "class_name": "DiplomaticEmbassy", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void resetTradeTimer(int level)  {\n        if (empire().isPlayer())\n            tradeTimer = 1;\n        else {\n            tradeTimer = TRADE_DELAY;\n            lastRequestedTradeLevel = level;\n        }\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/empires/DiplomaticEmbassy.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Serializable"], "modifiers": ["public"]}}, {"id": 60320, "method_name": "tradeRefused", "class_name": "DiplomaticEmbassy", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void tradeRefused()              { tradeRefusalCount++; }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/empires/DiplomaticEmbassy.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Serializable"], "modifiers": ["public"]}}, {"id": 60321, "method_name": "tradeAccepted", "class_name": "DiplomaticEmbassy", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void tradeAccepted()             { tradeRefusalCount = 0; }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/empires/DiplomaticEmbassy.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Serializable"], "modifiers": ["public"]}}, {"id": 60322, "method_name": "alreadyOfferedTrade", "class_name": "DiplomaticEmbassy", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean alreadyOfferedTrade()    { return tradeTimer == TRADE_DELAY; }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/empires/DiplomaticEmbassy.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Serializable"], "modifiers": ["public"]}}, {"id": 60323, "method_name": "readyForTech", "class_name": "DiplomaticEmbassy", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean readyForTech()           { return techTimer <= 0; }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/empires/DiplomaticEmbassy.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Serializable"], "modifiers": ["public"]}}, {"id": 60324, "method_name": "resetTechTimer", "class_name": "DiplomaticEmbassy", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void resetTechTimer()            { techTimer = TECH_DELAY; }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/empires/DiplomaticEmbassy.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Serializable"], "modifiers": ["public"]}}, {"id": 60325, "method_name": "alreadyOfferedTech", "class_name": "DiplomaticEmbassy", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean alreadyOfferedTech()     { return techTimer == TECH_DELAY; }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/empires/DiplomaticEmbassy.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Serializable"], "modifiers": ["public"]}}, {"id": 60326, "method_name": "readyForPeace", "class_name": "DiplomaticEmbassy", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean readyForPeace()          { return peaceTimer <= 0; }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/empires/DiplomaticEmbassy.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Serializable"], "modifiers": ["public"]}}, {"id": 60327, "method_name": "resetPeaceTimer", "class_name": "DiplomaticEmbassy", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void resetPeaceTimer()           { resetPeaceTimer(1); }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/empires/DiplomaticEmbassy.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Serializable"], "modifiers": ["public"]}}, {"id": 60328, "method_name": "resetPeaceTimer", "class_name": "DiplomaticEmbassy", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void resetPeaceTimer(int mult)   { peaceTimer = mult*PEACE_DELAY; }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/empires/DiplomaticEmbassy.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Serializable"], "modifiers": ["public"]}}, {"id": 60329, "method_name": "alreadyOfferedPeace", "class_name": "DiplomaticEmbassy", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean alreadyOfferedPeace()    { return peaceTimer == PEACE_DELAY; }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/empires/DiplomaticEmbassy.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Serializable"], "modifiers": ["public"]}}, {"id": 60330, "method_name": "readyForPact", "class_name": "DiplomaticEmbassy", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean readyForPact()           { return pactTimer <= 0; }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/empires/DiplomaticEmbassy.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Serializable"], "modifiers": ["public"]}}, {"id": 60331, "method_name": "resetPactTimer", "class_name": "DiplomaticEmbassy", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void resetPactTimer()            { pactTimer = PACT_DELAY; }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/empires/DiplomaticEmbassy.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Serializable"], "modifiers": ["public"]}}, {"id": 60332, "method_name": "alreadyOfferedPact", "class_name": "DiplomaticEmbassy", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean alreadyOfferedPact()     { return pactTimer == PACT_DELAY; }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/empires/DiplomaticEmbassy.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Serializable"], "modifiers": ["public"]}}, {"id": 60333, "method_name": "readyForAlliance", "class_name": "DiplomaticEmbassy", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean readyForAlliance()       { return allianceTimer <= 0; }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/empires/DiplomaticEmbassy.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Serializable"], "modifiers": ["public"]}}, {"id": 60334, "method_name": "resetAllianceTimer", "class_name": "DiplomaticEmbassy", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void resetAllianceTimer()        { allianceTimer = ALLIANCE_DELAY; }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/empires/DiplomaticEmbassy.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Serializable"], "modifiers": ["public"]}}, {"id": 60335, "method_name": "alreadyOfferedAlliance", "class_name": "DiplomaticEmbassy", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean alreadyOfferedAlliance() { return allianceTimer == ALLIANCE_DELAY; }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/empires/DiplomaticEmbassy.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Serializable"], "modifiers": ["public"]}}, {"id": 60336, "method_name": "readyForJointWar", "class_name": "DiplomaticEmbassy", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean readyForJointWar()       { return jointWarTimer <= 0; }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/empires/DiplomaticEmbassy.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Serializable"], "modifiers": ["public"]}}, {"id": 60337, "method_name": "resetJointWarTimer", "class_name": "DiplomaticEmbassy", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void resetJointWarTimer()        { jointWarTimer = empire().isPlayer() ? JOINT_WAR_DELAY : 1; }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/empires/DiplomaticEmbassy.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Serializable"], "modifiers": ["public"]}}, {"id": 60338, "method_name": "alreadyOfferedJointWar", "class_name": "DiplomaticEmbassy", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean alreadyOfferedJointWar() { return jointWarTimer == JOINT_WAR_DELAY; }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/empires/DiplomaticEmbassy.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Serializable"], "modifiers": ["public"]}}, {"id": 60339, "method_name": "minimumPraiseLevel", "class_name": "DiplomaticEmbassy", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int minimumPraiseLevel()         { return max(10, minimumPraiseLevel); }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/empires/DiplomaticEmbassy.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Serializable"], "modifiers": ["public"]}}, {"id": 60340, "method_name": "minimumWarnLevel", "class_name": "DiplomaticEmbassy", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int minimumWarnLevel()           { return max(10, minimumWarnLevel); }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/empires/DiplomaticEmbassy.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Serializable"], "modifiers": ["public"]}}, {"id": 60341, "method_name": "praiseSent", "class_name": "DiplomaticEmbassy", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void praiseSent()                { minimumPraiseLevel = minimumPraiseLevel()+10;  }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/empires/DiplomaticEmbassy.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Serializable"], "modifiers": ["public"]}}, {"id": 60342, "method_name": "warningSent", "class_name": "DiplomaticEmbassy", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void warningSent()               { minimumWarnLevel = minimumWarnLevel()+5;  }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/empires/DiplomaticEmbassy.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Serializable"], "modifiers": ["public"]}}, {"id": 60343, "method_name": "giveExpansionWarning", "class_name": "DiplomaticEmbassy", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void giveExpansionWarning()      { warningLevel = 1; }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/empires/DiplomaticEmbassy.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Serializable"], "modifiers": ["public"]}}, {"id": 60344, "method_name": "gaveExpansionWarning", "class_name": "DiplomaticEmbassy", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean gaveExpansionWarning()   { return warningLevel > 0; }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/empires/DiplomaticEmbassy.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Serializable"], "modifiers": ["public"]}}, {"id": 60345, "method_name": "noteRequest", "class_name": "DiplomaticEmbassy", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void noteRequest() {\n        if (requestCount == currentMaxRequests)\n            currentMaxRequests--;\n        requestCount++;\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/empires/DiplomaticEmbassy.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Serializable"], "modifiers": ["public"]}}, {"id": 60346, "method_name": "tooManyRequests", "class_name": "DiplomaticEmbassy", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean tooManyRequests()        { return requestCount > currentMaxRequests; }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/empires/DiplomaticEmbassy.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Serializable"], "modifiers": ["public"]}}, {"id": 60347, "method_name": "otherRelations", "class_name": "DiplomaticEmbassy", "params": [], "throws": null, "modifiers": ["public"], "return_type": "float", "snippet": "    public float otherRelations()          { return otherEmbassy().relations(); }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/empires/DiplomaticEmbassy.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Serializable"], "modifiers": ["public"]}}, {"id": 60348, "method_name": "contactAge", "class_name": "DiplomaticEmbassy", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int contactAge()                 { return (galaxy().currentYear() - contactYear); }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/empires/DiplomaticEmbassy.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Serializable"], "modifiers": ["public"]}}, {"id": 60349, "method_name": "otherEmbassy", "class_name": "DiplomaticEmbassy", "params": [], "throws": null, "modifiers": ["public"], "return_type": "DiplomaticEmbassy", "snippet": "    public DiplomaticEmbassy otherEmbassy() { return view.otherView().embassy(); }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/empires/DiplomaticEmbassy.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Serializable"], "modifiers": ["public"]}}, {"id": 60350, "method_name": "tradePraised", "class_name": "DiplomaticEmbassy", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean tradePraised()           { return tradePraised; }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/empires/DiplomaticEmbassy.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Serializable"], "modifiers": ["public"]}}, {"id": 60351, "method_name": "tradePraised", "class_name": "DiplomaticEmbassy", "params": ["boolean"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void tradePraised(boolean b)     { tradePraised = b; }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/empires/DiplomaticEmbassy.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Serializable"], "modifiers": ["public"]}}, {"id": 60352, "method_name": "encroaching", "class_name": "DiplomaticEmbassy", "params": ["StarSystem"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean encroaching(StarSystem sys) {\n        for (DiplomaticIncident inc: allIncidents()) {\n            if (inc instanceof EncroachmentIncident) {\n                EncroachmentIncident enInc = (EncroachmentIncident) inc;\n                if (enInc.sysId() == sys.id)\n                    return true;\n            }\n        }\n        return false;\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/empires/DiplomaticEmbassy.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Serializable"], "modifiers": ["public"]}}, {"id": 60353, "method_name": "logTechExchangeRequest", "class_name": "DiplomaticEmbassy", "params": ["Tech", "List<Tech>"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void logTechExchangeRequest(Tech wantedTech, List<Tech> counterTechs) {\n        if (!offeredTechs().containsKey(wantedTech.id()))\n            offeredTechs().put(wantedTech.id(), new ArrayList<>());\n\n        List<String> list = offeredTechs().get(wantedTech.id());\n        for (Tech t: counterTechs) {\n            if (!list.contains(t.id()))\n                list.add(t.id());\n        }\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/empires/DiplomaticEmbassy.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Serializable"], "modifiers": ["public"]}}, {"id": 60354, "method_name": "alreadyOfferedTechs", "class_name": "DiplomaticEmbassy", "params": ["Tech"], "throws": null, "modifiers": ["public"], "return_type": "List<Tech>", "snippet": "    public List<Tech> alreadyOfferedTechs(Tech wantedTech) {\n        if (!offeredTechs().containsKey(wantedTech.id()))\n            return null;\n\n        List<Tech> techs = new ArrayList<>();\n        for (String s: offeredTechs().get(wantedTech.id()))\n            techs.add(tech(s));\n\n        return techs;\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/empires/DiplomaticEmbassy.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Serializable"], "modifiers": ["public"]}}, {"id": 60355, "method_name": "withdrawAmbassador", "class_name": "DiplomaticEmbassy", "params": ["int"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void withdrawAmbassador(int turns) {\n        diplomatGoneTimer = turns;\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/empires/DiplomaticEmbassy.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Serializable"], "modifiers": ["public"]}}, {"id": 60356, "method_name": "withdrawAmbassador", "class_name": "DiplomaticEmbassy", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void withdrawAmbassador() {\n        int baseTurns = 2;\n        if (empire().leader().isDiplomat())\n            baseTurns /= 2;\n        else if (empire().leader().isXenophobic())\n            baseTurns *= 2;\n\n        if (finalWar())\n            baseTurns = 9999;\n        else if (war())\n            baseTurns *= 2;\n        withdrawAmbassador(baseTurns+1);\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/empires/DiplomaticEmbassy.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Serializable"], "modifiers": ["public"]}}, {"id": 60357, "method_name": "assessTurn", "class_name": "DiplomaticEmbassy", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void assessTurn() {\n        log(view+\" Embassy: assess turn\");\n        checkForIncidents();\n\n        recalculateRelationsLevel();\n\n        // player refusals are remembered for the \n        // entire duration to avoid the AI spamming the player\n        // AI  refusals are completely reset after each turn\n        // to allow players to continue asking once each turn\n        // if they want\n        if (view.owner().isPlayer()) {\n            tradeTimer--;\n            techTimer--;\n            peaceTimer--;\n            pactTimer--;\n            allianceTimer--;\n        }\n        else {\n            tradeTimer = 0;\n            techTimer = 0;\n            peaceTimer = 0;\n            pactTimer = 0;\n            allianceTimer = 0;\n\n        }\n        diplomatGoneTimer--;\n        requestCount = 0;\n        currentMaxRequests = Math.min(currentMaxRequests+1, MAX_REQUESTS_TURN);\n        minimumPraiseLevel = min(20,minimumPraiseLevel);\n        minimumWarnLevel = min(20, minimumWarnLevel);\n        minimumPraiseLevel = minimumPraiseLevel() - 1;\n        minimumWarnLevel = minimumWarnLevel() - 1;\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/empires/DiplomaticEmbassy.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Serializable"], "modifiers": ["public"]}}, {"id": 60358, "method_name": "recallAmbassador", "class_name": "DiplomaticEmbassy", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void recallAmbassador()     { diplomatGoneTimer = Integer.MAX_VALUE; }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/empires/DiplomaticEmbassy.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Serializable"], "modifiers": ["public"]}}, {"id": 60359, "method_name": "openEmbassy", "class_name": "DiplomaticEmbassy", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void openEmbassy()          { diplomatGoneTimer = 0; }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/empires/DiplomaticEmbassy.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Serializable"], "modifiers": ["public"]}}, {"id": 60360, "method_name": "diplomatGone", "class_name": "DiplomaticEmbassy", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean diplomatGone()      { return diplomatGoneTimer > 0;  }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/empires/DiplomaticEmbassy.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Serializable"], "modifiers": ["public"]}}, {"id": 60361, "method_name": "wantWar", "class_name": "DiplomaticEmbassy", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean wantWar()           { return otherEmbassy().relations() < -50; }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/empires/DiplomaticEmbassy.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Serializable"], "modifiers": ["public"]}}, {"id": 60362, "method_name": "isAlly", "class_name": "DiplomaticEmbassy", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean isAlly()            { return (alliance() || unity()); }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/empires/DiplomaticEmbassy.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Serializable"], "modifiers": ["public"]}}, {"id": 60363, "method_name": "alliedWithEnemy", "class_name": "DiplomaticEmbassy", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean alliedWithEnemy() {\n        List<Empire> myEnemies = owner().enemies();\n        List<Empire> hisAllies = empire().allies();\n        for (Empire cv1 : myEnemies) {\n            for (Empire cv2 : hisAllies) {\n                if (cv1 == cv2)\n                    return true;\n            }\n        }\n        return false;\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/empires/DiplomaticEmbassy.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Serializable"], "modifiers": ["public"]}}, {"id": 60364, "method_name": "canAttackWithoutPenalty", "class_name": "DiplomaticEmbassy", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean canAttackWithoutPenalty() { return anyWar() || noTreaty(); }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/empires/DiplomaticEmbassy.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Serializable"], "modifiers": ["public"]}}, {"id": 60365, "method_name": "canAttackWithoutPenalty", "class_name": "DiplomaticEmbassy", "params": ["StarSystem"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean canAttackWithoutPenalty(StarSystem s) {\n        if (anyWar() || noTreaty())\n            return true;\n        if (pact())\n            return s.hasColonyForEmpire(owner());\n        return false;\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/empires/DiplomaticEmbassy.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Serializable"], "modifiers": ["public"]}}, {"id": 60366, "method_name": "peaceTreatyInEffect", "class_name": "DiplomaticEmbassy", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean peaceTreatyInEffect()   { return peaceDuration > 0; }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/empires/DiplomaticEmbassy.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Serializable"], "modifiers": ["public"]}}, {"id": 60367, "method_name": "setTreaty", "class_name": "DiplomaticEmbassy", "params": ["DiplomaticTreaty"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void setTreaty(DiplomaticTreaty tr) {\n        treaty = tr;\n        otherEmbassy().treaty = tr;\n        view.setSuggestedAllocations();\n        view.otherView().setSuggestedAllocations();\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/empires/DiplomaticEmbassy.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Serializable"], "modifiers": ["public"]}}, {"id": 60368, "method_name": "isFriend", "class_name": "DiplomaticEmbassy", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean isFriend()    { return pact() || alliance() || unity(); }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/empires/DiplomaticEmbassy.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Serializable"], "modifiers": ["public"]}}, {"id": 60369, "method_name": "anyWar", "class_name": "DiplomaticEmbassy", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean anyWar()      { return war() || finalWar(); }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/empires/DiplomaticEmbassy.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Serializable"], "modifiers": ["public"]}}, {"id": 60370, "method_name": "atPeace", "class_name": "DiplomaticEmbassy", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean atPeace()     { return !anyWar() && peaceTreatyInEffect(); }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/empires/DiplomaticEmbassy.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Serializable"], "modifiers": ["public"]}}, {"id": 60371, "method_name": "exchangeTechnology", "class_name": "DiplomaticEmbassy", "params": ["Tech", "Tech"], "throws": null, "modifiers": ["public"], "return_type": "DiplomaticIncident", "snippet": "    public DiplomaticIncident exchangeTechnology(Tech offeredTech, Tech requestedTech) {\n        // civ() is the requestor, and will be learning the requested tech\n        // owner() is the requestee, who will be learning the counter-offered tech\n        owner().tech().acquireTechThroughTrade(offeredTech.id, empire().id);\n        empire().tech().acquireTechThroughTrade(requestedTech.id, owner().id);\n        DiplomaticIncident inc = ExchangeTechnologyIncident.create(owner(), empire(), offeredTech, requestedTech);\n        addIncident(inc);\n        otherEmbassy().addIncident(ExchangeTechnologyIncident.create(empire(), owner(), requestedTech, offeredTech));\n        return inc;\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/empires/DiplomaticEmbassy.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Serializable"], "modifiers": ["public"]}}, {"id": 60372, "method_name": "establishTradeTreaty", "class_name": "DiplomaticEmbassy", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "DiplomaticIncident", "snippet": "    public DiplomaticIncident establishTradeTreaty(int level) {\n        view.embassy().tradePraised(false);\n        treatyDate = galaxy().currentTime();\n        otherEmbassy().treatyDate = galaxy().currentTime();\n        view.trade().startRoute(level);\n        DiplomaticIncident inc = SignTradeIncident.create(owner(), empire(), level);\n        addIncident(inc);\n        otherEmbassy().addIncident(SignTradeIncident.create(empire(), owner(), level));\n        return inc;\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/empires/DiplomaticEmbassy.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Serializable"], "modifiers": ["public"]}}, {"id": 60373, "method_name": "declareFinalWar", "class_name": "DiplomaticEmbassy", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void declareFinalWar() {\n        beginFinalWar();\n        otherEmbassy().beginFinalWar();\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/empires/DiplomaticEmbassy.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Serializable"], "modifiers": ["public"]}}, {"id": 60374, "method_name": "beginFinalWar", "class_name": "DiplomaticEmbassy", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void beginFinalWar() {\n        treaty = new TreatyFinalWar(view.owner(), view.empire());\n        view.trade().stopRoute();\n        if (empire().isPlayer())\n            galaxy().giveAdvice(\"MAIN_ADVISOR_RALLY_POINTS\");\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/empires/DiplomaticEmbassy.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Serializable"], "modifiers": ["public"]}}, {"id": 60375, "method_name": "demandTribute", "class_name": "DiplomaticEmbassy", "params": [], "throws": null, "modifiers": ["public"], "return_type": "DiplomaticIncident", "snippet": "    public DiplomaticIncident demandTribute() {\n        DiplomaticIncident inc = DemandTributeIncident.create(owner(), empire(), true);\n        addIncident(inc);\n        otherEmbassy().addIncident(DemandTributeIncident.create(empire(), owner(), false));\n        return inc;\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/empires/DiplomaticEmbassy.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Serializable"], "modifiers": ["public"]}}, {"id": 60376, "method_name": "declareJointWar", "class_name": "DiplomaticEmbassy", "params": [], "throws": null, "modifiers": ["public"], "return_type": "DiplomaticIncident", "snippet": "    public DiplomaticIncident declareJointWar() {\n        // when we are declaring a war as a result of a joint war request, ignore\n        // any existing casus belli. This ensures that a DeclareWarIncident is returned \n        // instead of some existing casus belli incident. This ensures that [other...]\n        // tags are replaced properly in the war announcement to the player\n        casusBelli = null;\n        casusBelliInc = null;\n        return declareWar();\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/empires/DiplomaticEmbassy.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Serializable"], "modifiers": ["public"]}}, {"id": 60377, "method_name": "declareWar", "class_name": "DiplomaticEmbassy", "params": [], "throws": null, "modifiers": ["public"], "return_type": "DiplomaticIncident", "snippet": "    public DiplomaticIncident declareWar() {\n        endTreaty();\n        int oathBreakType = 0;\n        if (alliance())\n            oathBreakType = 1;\n        else if (pact())\n            oathBreakType = 2;\n\n        view.trade().stopRoute();\n\n        // if we're not at war yet, inform player that war is upon him\n        if (view.empire().isPlayer() && !anyWar()) {\n           if (casusBelli == null)\n                DiplomaticNotification.createAndNotify(view, DialogueManager.DECLARE_HATE_WAR);\n            else\n                DiplomaticNotification.createAndNotify(view, casusBelli);\n        }\n\n        setTreaty(new TreatyWar(view.owner(), view.empire()));\n        resetPeaceTimer(3);\n        withdrawAmbassador();\n        otherEmbassy().withdrawAmbassador();\n\n        // add war-causing incident to embassy\n        DiplomaticIncident inc = casusBelliInc;\n        if (inc == null) {\n            if (casusBelli == null)\n                inc = DeclareWarIncident.create(owner(), empire());\n            else {\n                switch(casusBelli) {\n                    case DialogueManager.DECLARE_ERRATIC_WAR :\n                        inc = ErraticWarIncident.create(owner(), empire()); break;\n                    case DialogueManager.DECLARE_HATE_WAR:\n                    default:\n                        inc = DeclareWarIncident.create(owner(), empire());\n                        oathBreakType = 0;\n                        break;\n                }\n            }\n        }\n        otherEmbassy().addIncident(inc);\n\n        // if oath broken, then create that incident as well\n        switch(oathBreakType) {\n            case 1:\n                GNNAllianceBrokenNotice.create(owner(), empire());\n                OathBreakerIncident.alertBrokenAlliance(owner(),empire()); break;\n            case 2: OathBreakerIncident.alertBrokenPact(owner(),empire()); break;\n        }\n        \n        // if the player is one of our allies, let him know\n        for (Empire ally : owner().allies()) {\n            if (ally.isPlayer())\n                GNNAllyAtWarNotification.create(owner(), empire());\n        }\n        // if the player is one of our enemy's allies, let him know\n        for (Empire ally : empire().allies()) {\n            if (ally.isPlayer())\n                GNNAllyAtWarNotification.create(empire(), owner());\n        }\n        \n        if (empire().isPlayer())\n            galaxy().giveAdvice(\"MAIN_ADVISOR_RALLY_POINTS\", owner().raceName());\n        else if  (owner().isPlayer())\n            galaxy().giveAdvice(\"MAIN_ADVISOR_RALLY_POINTS\", empire().raceName());\n\n        return inc;\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/empires/DiplomaticEmbassy.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Serializable"], "modifiers": ["public"]}}, {"id": 60378, "method_name": "breakTrade", "class_name": "DiplomaticEmbassy", "params": [], "throws": null, "modifiers": ["public"], "return_type": "DiplomaticIncident", "snippet": "    public DiplomaticIncident breakTrade() {\n        view.trade().stopRoute();\n        DiplomaticIncident inc = BreakTradeIncident.create(owner(), empire());\n        otherEmbassy().addIncident(inc);\n        return inc;\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/empires/DiplomaticEmbassy.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Serializable"], "modifiers": ["public"]}}, {"id": 60379, "method_name": "signPeace", "class_name": "DiplomaticEmbassy", "params": [], "throws": null, "modifiers": ["public"], "return_type": "DiplomaticIncident", "snippet": "    public DiplomaticIncident signPeace() {\n        beginTreaty();\n        int duration = roll(8,15);\n        endWarPreparations();\n        beginPeace(duration);\n        otherEmbassy().beginPeace(duration);\n        DiplomaticIncident inc = SignPeaceIncident.create(owner(), empire(), duration);\n        addIncident(inc);\n        otherEmbassy().addIncident(SignPeaceIncident.create(empire(), owner(), duration));\n        return inc;\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/empires/DiplomaticEmbassy.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Serializable"], "modifiers": ["public"]}}, {"id": 60380, "method_name": "signPact", "class_name": "DiplomaticEmbassy", "params": [], "throws": null, "modifiers": ["public"], "return_type": "DiplomaticIncident", "snippet": "    public DiplomaticIncident signPact() {\n        beginTreaty();\n        endWarPreparations();\n        setTreaty(new TreatyPact(view.owner(), view.empire()));\n        DiplomaticIncident inc = SignPactIncident.create(owner(), empire());\n        addIncident(inc);\n        otherEmbassy().addIncident(SignPactIncident.create(empire(), owner()));\n        return inc;\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/empires/DiplomaticEmbassy.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Serializable"], "modifiers": ["public"]}}, {"id": 60381, "method_name": "reopenEmbassy", "class_name": "DiplomaticEmbassy", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void reopenEmbassy() {\n        diplomatGoneTimer = 0;\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/empires/DiplomaticEmbassy.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Serializable"], "modifiers": ["public"]}}, {"id": 60382, "method_name": "closeEmbassy", "class_name": "DiplomaticEmbassy", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void closeEmbassy() {\n        withdrawAmbassador(Integer.MAX_VALUE);\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/empires/DiplomaticEmbassy.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Serializable"], "modifiers": ["public"]}}, {"id": 60383, "method_name": "breakPact", "class_name": "DiplomaticEmbassy", "params": [], "throws": null, "modifiers": ["public"], "return_type": "DiplomaticIncident", "snippet": "    public DiplomaticIncident breakPact() {\n        endTreaty();\n        setTreaty(new TreatyNone(view.owner(), view.empire()));\n        DiplomaticIncident inc = BreakPactIncident.create(owner(), empire());\n        otherEmbassy().addIncident(inc);\n        OathBreakerIncident.alertBrokenPact(owner(),empire());\n        return inc;\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/empires/DiplomaticEmbassy.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Serializable"], "modifiers": ["public"]}}, {"id": 60384, "method_name": "signAlliance", "class_name": "DiplomaticEmbassy", "params": [], "throws": null, "modifiers": ["public"], "return_type": "DiplomaticIncident", "snippet": "    public DiplomaticIncident signAlliance() {\n        beginTreaty();\n        endWarPreparations();\n        setTreaty(new TreatyAlliance(view.owner(), view.empire()));\n        owner().setRecalcDistances();\n        empire().setRecalcDistances();\n        DiplomaticIncident inc = SignAllianceIncident.create(owner(), empire());\n        addIncident(inc);\n        otherEmbassy().addIncident(SignAllianceIncident.create(empire(), owner()));\n        GNNAllianceFormedNotice.create(owner(), empire());\n        return inc;\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/empires/DiplomaticEmbassy.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Serializable"], "modifiers": ["public"]}}, {"id": 60385, "method_name": "breakAlliance", "class_name": "DiplomaticEmbassy", "params": [], "throws": null, "modifiers": ["public"], "return_type": "DiplomaticIncident", "snippet": "    public DiplomaticIncident breakAlliance() {\n        endTreaty();\n        setTreaty(new TreatyNone(view.owner(), view.empire()));\n        DiplomaticIncident inc = BreakAllianceIncident.create(owner(), empire());\n        otherEmbassy().addIncident(inc);\n        GNNAllianceBrokenNotice.create(owner(), empire());\n        OathBreakerIncident.alertBrokenAlliance(owner(),empire());\n        return inc;\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/empires/DiplomaticEmbassy.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Serializable"], "modifiers": ["public"]}}, {"id": 60386, "method_name": "signJointWar", "class_name": "DiplomaticEmbassy", "params": ["Empire"], "throws": null, "modifiers": ["public"], "return_type": "DiplomaticIncident", "snippet": "    public DiplomaticIncident signJointWar(Empire target) {\n        EmpireView view2 = empire().viewForEmpire(target);\n        view2.embassy().declareWar();\n        DiplomaticIncident inc = SignDeclareWarIncident.create(owner(), empire(), target);\n        addIncident(inc);\n        otherEmbassy().addIncident(SignDeclareWarIncident.create(empire(), owner(), target));\n        return inc;\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/empires/DiplomaticEmbassy.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Serializable"], "modifiers": ["public"]}}, {"id": 60387, "method_name": "signUnally", "class_name": "DiplomaticEmbassy", "params": ["Empire"], "throws": null, "modifiers": ["public"], "return_type": "DiplomaticIncident", "snippet": "    public DiplomaticIncident signUnally(Empire target) {\n        EmpireView view2 = empire().viewForEmpire(target);\n        view2.embassy().breakAlliance();\n        DiplomaticIncident inc = SignBreakAllianceIncident.create(owner(), empire(), target);\n        addIncident(inc);\n        otherEmbassy().addIncident(SignBreakAllianceIncident.create(empire(), owner(), target));\n        return inc;\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/empires/DiplomaticEmbassy.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Serializable"], "modifiers": ["public"]}}, {"id": 60388, "method_name": "establishUnity", "class_name": "DiplomaticEmbassy", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void establishUnity() {\n        beginTreaty();\n        setContact();\n        otherEmbassy().setContact();\n        endWarPreparations();\n        setTreaty(new TreatyUnity(view.owner(), view.empire()));\n        owner().setRecalcDistances();\n        empire().setRecalcDistances();\n        owner().joinGalacticAlliance();\n        empire().joinGalacticAlliance();\n        \n        // stop spying\n        view.spies().activeSpies().clear();\n        view.spies().maxSpies(0);\n        view.spies().allocation(0);\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/empires/DiplomaticEmbassy.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Serializable"], "modifiers": ["public"]}}, {"id": 60389, "method_name": "setContact", "class_name": "DiplomaticEmbassy", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setContact() {\n        if (!contact()) {\n            contactYear = galaxy().currentYear();\n            contact(true);\n            DiplomaticIncident inc = FirstContactIncident.create(owner(), empire());\n            addIncident(inc);\n            if (empire().isPlayer())\n                galaxy().giveAdvice(\"MAIN_ADVISOR_DIPLOMACY\", owner().raceName());\n            else if (owner().isPlayer())\n                galaxy().giveAdvice(\"MAIN_ADVISOR_DIPLOMACY\", empire().raceName());\n        }\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/empires/DiplomaticEmbassy.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Serializable"], "modifiers": ["public"]}}, {"id": 60390, "method_name": "makeFirstContact", "class_name": "DiplomaticEmbassy", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void makeFirstContact() {\n        log(\"First Contact: \", owner().name(), \" & \", empire().name());\n        setContact();\n        if (empire().isPlayer())\n            DiplomaticNotification.create(view, owner().leader().dialogueContactType());\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/empires/DiplomaticEmbassy.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Serializable"], "modifiers": ["public"]}}, {"id": 60391, "method_name": "removeContact", "class_name": "DiplomaticEmbassy", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void removeContact() {\n        contact = false;\n        resetTreaty();\n        view.spies().beginHide();\n        view.trade().stopRoute();\n        if (otherEmbassy().contact)\n            otherEmbassy().removeContact();\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/empires/DiplomaticEmbassy.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Serializable"], "modifiers": ["public"]}}, {"id": 60392, "method_name": "resetTreaty", "class_name": "DiplomaticEmbassy", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void resetTreaty()   { setTreaty(new TreatyNone(view.owner(), view.empire())); }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/empires/DiplomaticEmbassy.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Serializable"], "modifiers": ["public"]}}, {"id": 60393, "method_name": "addIncident", "class_name": "DiplomaticEmbassy", "params": ["DiplomaticIncident"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void addIncident(DiplomaticIncident inc) {\n        // add new incidents to current list\n        // hash by incident key to filter out overlapping events\n        String k = inc.key();\n        log(\"addIncident key:\"+k);\n        DiplomaticIncident matchingEvent = incidents.get(k);\n        log(view.toString(), \": Adding incident- \", inc.key(), \":\", str(inc.currentSeverity()), \":\", inc.toString());\n        if (inc.moreSevere(matchingEvent))\n            incidents.put(k,inc);\n        recalculateRelationsLevel();\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/empires/DiplomaticEmbassy.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Serializable"], "modifiers": ["public"]}}, {"id": 60394, "method_name": "recalculateRelationsLevel", "class_name": "DiplomaticEmbassy", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void recalculateRelationsLevel() {\n        float rel = owner().race().baseRelations(empire().race());\n        rel += treatyRelationsAdj();\n        for (DiplomaticIncident ev: incidents.values()) \n            rel += ev.currentSeverity();       \n        relations = bounds(-100,rel,100);\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/empires/DiplomaticEmbassy.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Serializable"], "modifiers": ["public"]}}, {"id": 60395, "method_name": "checkForIncidents", "class_name": "DiplomaticEmbassy", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void checkForIncidents() {\n        newIncidents().clear();\n        clearForgottenIncidents();\n\n        List<DiplomaticIncident> newEventsAll = new ArrayList<>();\n        addIncident(ParanoiaIncident.create(view));\n        owner().diplomatAI().noticeNoRelationIncident(view, newEventsAll);\n        owner().diplomatAI().noticeAtWarWithAllyIncidents(view, newEventsAll);\n        owner().diplomatAI().noticeAlliedWithEnemyIncidents(view, newEventsAll);\n        owner().diplomatAI().noticeTrespassingIncidents(view, newEventsAll);\n        owner().diplomatAI().noticeExpansionIncidents(view, newEventsAll);\n        owner().diplomatAI().noticeBuildupIncidents(view, newEventsAll);\n\n        for (DiplomaticIncident ev: newEventsAll)\n            addIncident(ev);\n\n        // make special list of incidents added in this turn\n        for (DiplomaticIncident ev: incidents.values()) {\n            if ((galaxy().currentYear() - ev.dateOccurred()) < 1)\n                newIncidents().add(ev);\n        }\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/empires/DiplomaticEmbassy.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Serializable"], "modifiers": ["public"]}}, {"id": 60396, "method_name": "clearForgottenIncidents", "class_name": "DiplomaticEmbassy", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void clearForgottenIncidents() {\n        List<String> keys = new ArrayList<>(incidents.keySet());\n        for (String key: keys) {\n            DiplomaticIncident inc = incidents.get(key);\n            if (inc.isForgotten()) {\n                log(\"Forgetting: \", incidents.get(key).toString());\n                incidents.remove(key);\n            }\n        }\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/empires/DiplomaticEmbassy.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Serializable"], "modifiers": ["public"]}}, {"id": 60397, "method_name": "treatyRelationsAdj", "class_name": "DiplomaticEmbassy", "params": [], "throws": null, "modifiers": ["private"], "return_type": "int", "snippet": "    private int treatyRelationsAdj() {\n        if (this.finalWar())\n            return -200;\n        else if (war())\n            return -10;\n        else if (pact())\n            return 5;\n        else if (alliance())\n            return 10;\n        else if (unity())\n            return 200;\n        else\n            return 0;\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/empires/DiplomaticEmbassy.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Serializable"], "modifiers": ["public"]}}, {"id": 60398, "method_name": "beginTreaty", "class_name": "DiplomaticEmbassy", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void beginTreaty() {\n        treatyDate = galaxy().currentTime();\n        otherEmbassy().treatyDate = galaxy().currentTime();\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/empires/DiplomaticEmbassy.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Serializable"], "modifiers": ["public"]}}, {"id": 60399, "method_name": "endTreaty", "class_name": "DiplomaticEmbassy", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void endTreaty() {\n        treatyDate = -1;\n        otherEmbassy().treatyDate = -1;\n        owner().setRecalcDistances();\n        empire().setRecalcDistances();\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/empires/DiplomaticEmbassy.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Serializable"], "modifiers": ["public"]}}, {"id": 60400, "method_name": "beginPeace", "class_name": "DiplomaticEmbassy", "params": ["int"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void beginPeace(int duration) {\n        beginTreaty();\n        peaceDuration = duration;\n        treaty = new TreatyNone(view.empire(), view.owner());\n        view.setSuggestedAllocations();\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/empires/DiplomaticEmbassy.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Serializable"], "modifiers": ["public"]}}, {"id": 60401, "method_name": "onAccuracyChanged", "class_name": "BarometerListener", "params": ["android", "int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void onAccuracyChanged (android.hardware.Sensor p0, int p1)\n\t{\n\t\tn_onAccuracyChanged (p0, p1);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Debug/90/android/src/crc64a0e0a82d0db9a07d/BarometerListener.java", "stars": "2", "class_props": {"extends": "java", "implements": ["mono", "android"], "modifiers": ["public"]}}, {"id": 60402, "method_name": "n_onAccuracyChanged", "class_name": "BarometerListener", "params": ["android", "int"], "throws": null, "modifiers": ["private", "native"], "return_type": "void", "snippet": "\tprivate native void n_onAccuracyChanged (android.hardware.Sensor p0, int p1);\n\n\n\tpublic void onSensorChanged (android.hardware.SensorEvent p0)\n\t{\n\t\tn_onSensorChanged (p0);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Debug/90/android/src/crc64a0e0a82d0db9a07d/BarometerListener.java", "stars": "2", "class_props": {"extends": "java", "implements": ["mono", "android"], "modifiers": ["public"]}}, {"id": 60403, "method_name": "onSensorChanged", "class_name": "BarometerListener", "params": ["android"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void onSensorChanged (android.hardware.SensorEvent p0)\n\t{\n\t\tn_onSensorChanged (p0);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Debug/90/android/src/crc64a0e0a82d0db9a07d/BarometerListener.java", "stars": "2", "class_props": {"extends": "java", "implements": ["mono", "android"], "modifiers": ["public"]}}, {"id": 60404, "method_name": "n_onSensorChanged", "class_name": "BarometerListener", "params": ["android"], "throws": null, "modifiers": ["private", "native"], "return_type": "void", "snippet": "\tprivate native void n_onSensorChanged (android.hardware.SensorEvent p0);\n\n\tprivate java.util.ArrayList refList;\n\tpublic void monodroidAddReference (java.lang.Object obj)\n\t{\n\t\tif (refList == null)\n\t\t\trefList = new java.util.ArrayList ();\n\t\trefList.add (obj);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Debug/90/android/src/crc64a0e0a82d0db9a07d/BarometerListener.java", "stars": "2", "class_props": {"extends": "java", "implements": ["mono", "android"], "modifiers": ["public"]}}, {"id": 60405, "method_name": "monodroidAddReference", "class_name": "BarometerListener", "params": ["java"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void monodroidAddReference (java.lang.Object obj)\n\t{\n\t\tif (refList == null)\n\t\t\trefList = new java.util.ArrayList ();\n\t\trefList.add (obj);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Debug/90/android/src/crc64a0e0a82d0db9a07d/BarometerListener.java", "stars": "2", "class_props": {"extends": "java", "implements": ["mono", "android"], "modifiers": ["public"]}}, {"id": 60406, "method_name": "monodroidClearReferences", "class_name": "BarometerListener", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void monodroidClearReferences ()\n\t{\n\t\tif (refList != null)\n\t\t\trefList.clear ();\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Debug/90/android/src/crc64a0e0a82d0db9a07d/BarometerListener.java", "stars": "2", "class_props": {"extends": "java", "implements": ["mono", "android"], "modifiers": ["public"]}}, {"id": 60407, "method_name": "instance", "class_name": "GSYExoVideoManager", "params": [], "throws": null, "modifiers": ["synchronized", "public", "static"], "return_type": "GSYExoVideoManager", "snippet": "    public static synchronized GSYExoVideoManager instance() {\n        if (videoManager == null) {\n            videoManager = new GSYExoVideoManager();\n        }\n        return videoManager;\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/app/src/main/java/com/example/gsyvideoplayer/exo/GSYExoVideoManager.java", "stars": "2", "class_props": {"extends": "GSYVideoBaseManager", "implements": null, "modifiers": ["public"]}}, {"id": 60408, "method_name": "getPlayManager", "class_name": "GSYExoVideoManager", "params": [], "throws": null, "modifiers": ["protected"], "return_type": "IPlayerManager", "snippet": "    protected IPlayerManager getPlayManager() {\n        return new GSYExoPlayerManager();\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/app/src/main/java/com/example/gsyvideoplayer/exo/GSYExoVideoManager.java", "stars": "2", "class_props": {"extends": "GSYVideoBaseManager", "implements": null, "modifiers": ["public"]}}, {"id": 60409, "method_name": "prepare", "class_name": "GSYExoVideoManager", "params": ["List<String>", "Map<String,String>", "boolean", "float", "boolean", "File", "String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void prepare(List<String> urls, Map<String, String> mapHeadData, boolean loop, float speed, boolean cache, File cachePath, String overrideExtension) {\n        if (urls.size() == 0) return;\n        Message msg = new Message();\n        msg.what = HANDLER_PREPARE;\n        msg.obj = new GSYExoModel(urls, mapHeadData, loop, speed, cache, cachePath, overrideExtension);\n        sendMessage(msg);\n        if (needTimeOutOther) {\n            startTimeOutBuffer();\n        }\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/app/src/main/java/com/example/gsyvideoplayer/exo/GSYExoVideoManager.java", "stars": "2", "class_props": {"extends": "GSYVideoBaseManager", "implements": null, "modifiers": ["public"]}}, {"id": 60410, "method_name": "previous", "class_name": "GSYExoVideoManager", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void previous() {\n        if (playerManager == null) {\n            return;\n        }\n        ((GSYExoPlayerManager)playerManager).previous();\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/app/src/main/java/com/example/gsyvideoplayer/exo/GSYExoVideoManager.java", "stars": "2", "class_props": {"extends": "GSYVideoBaseManager", "implements": null, "modifiers": ["public"]}}, {"id": 60411, "method_name": "next", "class_name": "GSYExoVideoManager", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void next() {\n        if (playerManager == null) {\n            return;\n        }\n        ((GSYExoPlayerManager)playerManager).next();\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/app/src/main/java/com/example/gsyvideoplayer/exo/GSYExoVideoManager.java", "stars": "2", "class_props": {"extends": "GSYVideoBaseManager", "implements": null, "modifiers": ["public"]}}, {"id": 60412, "method_name": "backFromWindowFull", "class_name": "GSYExoVideoManager", "params": ["Context"], "throws": null, "modifiers": ["public", "static"], "return_type": "boolean", "snippet": "    public static boolean backFromWindowFull(Context context) {\n        boolean backFrom = false;\n        ViewGroup vp = (ViewGroup) (CommonUtil.scanForActivity(context)).findViewById(Window.ID_ANDROID_CONTENT);\n        View oldF = vp.findViewById(FULLSCREEN_ID);\n        if (oldF != null) {\n            backFrom = true;\n            hideNavKey(context);\n            if (GSYExoVideoManager.instance().lastListener() != null) {\n                GSYExoVideoManager.instance().lastListener().onBackFullscreen();\n            }\n        }\n        return backFrom;\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/app/src/main/java/com/example/gsyvideoplayer/exo/GSYExoVideoManager.java", "stars": "2", "class_props": {"extends": "GSYVideoBaseManager", "implements": null, "modifiers": ["public"]}}, {"id": 60413, "method_name": "releaseAllVideos", "class_name": "GSYExoVideoManager", "params": [], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void releaseAllVideos() {\n        if (GSYExoVideoManager.instance().listener() != null) {\n            GSYExoVideoManager.instance().listener().onCompletion();\n        }\n        GSYExoVideoManager.instance().releaseMediaPlayer();\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/app/src/main/java/com/example/gsyvideoplayer/exo/GSYExoVideoManager.java", "stars": "2", "class_props": {"extends": "GSYVideoBaseManager", "implements": null, "modifiers": ["public"]}}, {"id": 60414, "method_name": "onPause", "class_name": "GSYExoVideoManager", "params": [], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void onPause() {\n        if (GSYExoVideoManager.instance().listener() != null) {\n            GSYExoVideoManager.instance().listener().onVideoPause();\n        }\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/app/src/main/java/com/example/gsyvideoplayer/exo/GSYExoVideoManager.java", "stars": "2", "class_props": {"extends": "GSYVideoBaseManager", "implements": null, "modifiers": ["public"]}}, {"id": 60415, "method_name": "onResume", "class_name": "GSYExoVideoManager", "params": [], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void onResume() {\n        if (GSYExoVideoManager.instance().listener() != null) {\n            GSYExoVideoManager.instance().listener().onVideoResume();\n        }\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/app/src/main/java/com/example/gsyvideoplayer/exo/GSYExoVideoManager.java", "stars": "2", "class_props": {"extends": "GSYVideoBaseManager", "implements": null, "modifiers": ["public"]}}, {"id": 60416, "method_name": "onResume", "class_name": "GSYExoVideoManager", "params": ["boolean"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void onResume(boolean seek) {\n        if (GSYExoVideoManager.instance().listener() != null) {\n            GSYExoVideoManager.instance().listener().onVideoResume(seek);\n        }\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/app/src/main/java/com/example/gsyvideoplayer/exo/GSYExoVideoManager.java", "stars": "2", "class_props": {"extends": "GSYVideoBaseManager", "implements": null, "modifiers": ["public"]}}, {"id": 60417, "method_name": "isFullState", "class_name": "GSYExoVideoManager", "params": ["Activity"], "throws": null, "modifiers": ["public", "static"], "return_type": "boolean", "snippet": "    public static boolean isFullState(Activity activity) {\n        ViewGroup vp = (ViewGroup) (CommonUtil.scanForActivity(activity)).findViewById(Window.ID_ANDROID_CONTENT);\n        final View full = vp.findViewById(FULLSCREEN_ID);\n        GSYVideoPlayer gsyVideoPlayer = null;\n        if (full != null) {\n            gsyVideoPlayer = (GSYVideoPlayer) full;\n        }\n        return gsyVideoPlayer != null;\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/app/src/main/java/com/example/gsyvideoplayer/exo/GSYExoVideoManager.java", "stars": "2", "class_props": {"extends": "GSYVideoBaseManager", "implements": null, "modifiers": ["public"]}}, {"id": 60418, "method_name": "init", "class_name": "GrpcRequest", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void init() {\n        clientCaller = new ClientCaller(HOST_PORT, PROTO_FOLDER, FULL_METHOD);\n    }", "url": "https://raw.githubusercontent.com/zalopay-oss/jmeter-grpc-request/master/src/main/java/vn/zalopay/benchmark/testbean/GrpcRequest.java", "stars": "3", "class_props": {"extends": "AbstractSampler", "implements": ["TestBean"], "modifiers": ["public"]}}, {"id": 60419, "method_name": "sample", "class_name": "GrpcRequest", "params": ["Entry"], "throws": null, "modifiers": ["public"], "return_type": "SampleResult", "snippet": "    public SampleResult sample(Entry ignored) {\n        if (Objects.isNull(clientCaller))\n            init();\n\n        SampleResult res = new SampleResult();\n        res.setSampleLabel(getName());\n        String req = clientCaller.buildRequest(REQUEST_FILE, REQUEST_JSON);\n        res.setSamplerData(req);\n        res.sampleStart();\n        try {\n            DynamicMessage resp = clientCaller.call(DEADLINE);\n\n            res.sampleEnd();\n            res.setSuccessful(true);\n            res.setResponseData(resp.toString().getBytes());\n            res.setResponseMessage(\"Success\");\n            res.setResponseCodeOK();\n        } catch (StatusRuntimeException e) {\n            res.sampleEnd();\n            res.setSuccessful(false);\n            res.setResponseMessage(\"Exception: \" + e.getStatus().getCode().name());\n            res.setResponseData(e.getMessage().getBytes());\n            res.setDataType(SampleResult.TEXT);\n            res.setResponseCode(\"500\");\n        }\n        return res;\n    }", "url": "https://raw.githubusercontent.com/zalopay-oss/jmeter-grpc-request/master/src/main/java/vn/zalopay/benchmark/testbean/GrpcRequest.java", "stars": "3", "class_props": {"extends": "AbstractSampler", "implements": ["TestBean"], "modifiers": ["public"]}}, {"id": 60420, "method_name": "applies", "class_name": "GrpcRequest", "params": ["ConfigTestElement"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean applies(ConfigTestElement configElement) {\n        String guiClass = configElement.getProperty(TestElement.GUI_CLASS).getStringValue();\n        return APPLIABLE_CONFIG_CLASSES.contains(guiClass);\n    }", "url": "https://raw.githubusercontent.com/zalopay-oss/jmeter-grpc-request/master/src/main/java/vn/zalopay/benchmark/testbean/GrpcRequest.java", "stars": "3", "class_props": {"extends": "AbstractSampler", "implements": ["TestBean"], "modifiers": ["public"]}}, {"id": 60421, "method_name": "setUp", "class_name": "JavaMethodsTest", "params": [], "throws": ["Exception"], "modifiers": ["static"], "return_type": "void", "snippet": "  static void setUp() throws Exception {\n    // create an SqlSessionFactory\n    try (Reader reader = Resources\n      .getResourceAsReader(\"org/apache/ibatis/submitted/resolution/javamethods/mybatis-config.xml\")) {\n      sqlSessionFactory = new SqlSessionFactoryBuilder().build(reader);\n    }\n\n    // populate in-memory database\n    BaseDataTest.runScript(sqlSessionFactory.getConfiguration().getEnvironment().getDataSource(),\n      \"org/apache/ibatis/submitted/resolution/CreateDB.sql\");\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/resolution/javamethods/JavaMethodsTest.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 60422, "method_name": "shouldGetAUser", "class_name": "JavaMethodsTest", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "  void shouldGetAUser() {\n    try (SqlSession sqlSession = sqlSessionFactory.openSession()) {\n      MapperB mapper = sqlSession.getMapper(MapperB.class);\n      User user = mapper.getUser(1);\n      Assertions.assertEquals(Integer.valueOf(1), user.getId());\n      Assertions.assertEquals(\"User1\", user.getName());\n    }\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/resolution/javamethods/JavaMethodsTest.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 60423, "method_name": "main", "class_name": "BlacklistTest", "params": ["String"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void main(String[] args) {\n        Blacklist blacklist = new Blacklist.Builder()\n                .setField_name(\"map\")\n                .setField_type(\"HashMap\")\n                .setField_value(\"test\")\n                .build();\n        System.out.println(blacklist);\n    }", "url": "https://raw.githubusercontent.com/c0ny1/java-object-searcher/master/src/test/java/me/gv7/tools/josearcher/entity/BlacklistTest.java", "stars": "160", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 60424, "method_name": "getOperandString", "class_name": "XIM", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getOperandString() {\n        switch (mode) {\n        case MODE_INDEXED:\n            return String.format(\"$%02x,X,#$%02x\", (operand & 0x00ff), ((operand & 0xff00) >> 8));\n        default:\n            return super.getOperandString();\n        }\n    }", "url": "https://raw.githubusercontent.com/kemusiro/jr100-emulator-v2/master/src/jp/asamomiji/assembler/XIM.java", "stars": "4", "class_props": {"extends": "NonBranchInstruction", "implements": null, "modifiers": ["public"]}}, {"id": 60425, "method_name": "onCreateView", "class_name": "FragmentSignInMessage", "params": ["LayoutInflater", "ViewGroup", "Bundle"], "throws": null, "modifiers": ["public"], "return_type": "View", "snippet": "    public View onCreateView(LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstanceState) {\n        super.onCreateView(inflater, container, savedInstanceState);\n\n        setRetainInstance(true);\n        View rootView = inflater.inflate(R.layout.fragment_sign_in_message, container, false);\n        ButterKnife.bind(this,rootView);\n\n\n        return rootView;\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/Login/LoginPlaceholder/FragmentSignInMessage.java", "stars": "10", "class_props": {"extends": "Fragment", "implements": null, "modifiers": ["public"]}}, {"id": 60426, "method_name": "signInClick", "class_name": "FragmentSignInMessage", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "    void signInClick()\n    {\n        Intent intent = new Intent(getActivity(), Login.class);\n        startActivityForResult(intent,1);\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/Login/LoginPlaceholder/FragmentSignInMessage.java", "stars": "10", "class_props": {"extends": "Fragment", "implements": null, "modifiers": ["public"]}}, {"id": 60427, "method_name": "onActivityResult", "class_name": "FragmentSignInMessage", "params": ["int", "int", "Intent"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onActivityResult(int requestCode, int resultCode, Intent data) {\n        super.onActivityResult(requestCode, resultCode, data);\n\n        if(requestCode==1)\n        {\n            if(getActivity() instanceof NotifyAboutLogin)\n            {\n//                showToastMessage(\"Notify about login !\");\n                ((NotifyAboutLogin) getActivity()).loginSuccess();\n            }\n        }\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/Login/LoginPlaceholder/FragmentSignInMessage.java", "stars": "10", "class_props": {"extends": "Fragment", "implements": null, "modifiers": ["public"]}}, {"id": 60428, "method_name": "showToastMessage", "class_name": "FragmentSignInMessage", "params": ["String"], "throws": null, "modifiers": [], "return_type": "void", "snippet": "    void showToastMessage(String message)\n    {\n        Toast.makeText(getActivity(),message, Toast.LENGTH_SHORT).show();\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/Login/LoginPlaceholder/FragmentSignInMessage.java", "stars": "10", "class_props": {"extends": "Fragment", "implements": null, "modifiers": ["public"]}}, {"id": 60429, "method_name": "getId", "class_name": "PublicKey", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getId() {\n        return id;\n    }", "url": "https://raw.githubusercontent.com/wix-incubator/rn-contact-tracing/master/lib/android/src/main/java/com/wix/specialble/kays/PublicKey.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 60430, "method_name": "getPublicKey", "class_name": "PublicKey", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getPublicKey() {\n        return publicKey;\n    }", "url": "https://raw.githubusercontent.com/wix-incubator/rn-contact-tracing/master/lib/android/src/main/java/com/wix/specialble/kays/PublicKey.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 60431, "method_name": "setPublicKey", "class_name": "PublicKey", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setPublicKey(String publicKey) {\n        this.publicKey = publicKey;\n    }", "url": "https://raw.githubusercontent.com/wix-incubator/rn-contact-tracing/master/lib/android/src/main/java/com/wix/specialble/kays/PublicKey.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 60432, "method_name": "setId", "class_name": "PublicKey", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setId(int id) {\n        this.id = id;\n    }", "url": "https://raw.githubusercontent.com/wix-incubator/rn-contact-tracing/master/lib/android/src/main/java/com/wix/specialble/kays/PublicKey.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 60433, "method_name": "coinCode", "class_name": "Etc", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String coinCode() {\n        return Coins.ETC.coinCode();\n    }", "url": "https://raw.githubusercontent.com/CoboVault/cobo-vault-cold/master/coinlib/src/main/java/com/cobo/coinlib/coins/ETC/Etc.java", "stars": "13", "class_props": {"extends": "Eth", "implements": null, "modifiers": ["public"]}}, {"id": 60434, "method_name": "finished", "class_name": "Dispatcher", "params": ["RealCall"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "   public void finished(RealCall.AsyncCall call) {\n        finished(runningAsyncCalls, call, true);\n    }", "url": "https://raw.githubusercontent.com/mrchengwenlong/NettyIM/master/im_lib/src/main/java/com/takiku/im_lib/dispatcher/Dispatcher.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 60435, "method_name": "finished", "class_name": "Dispatcher", "params": ["Deque<T>", "T", "boolean"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public  <T> void finished(Deque<T> calls, T call, boolean promoteCalls) {\n        int runningCallsCount;\n        Runnable idleCallback;\n        synchronized (this) {\n            if (!calls.remove(call)) throw new AssertionError(\"Call wasn't in-flight!\");\n            if (promoteCalls) promoteCalls();\n            runningCallsCount = runningCallsCount();\n            idleCallback = this.idleCallback;\n        }\n\n        if (runningCallsCount == 0 && idleCallback != null) { //\u6ca1\u6709\u8fd0\u884c\u7684\u4efb\u52a1,\u5219\u8fd0\u884c\u7a7a\u95f2\u4efb\u52a1\n            idleCallback.run();\n        }\n    }", "url": "https://raw.githubusercontent.com/mrchengwenlong/NettyIM/master/im_lib/src/main/java/com/takiku/im_lib/dispatcher/Dispatcher.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 60436, "method_name": "runningCallsCount", "class_name": "Dispatcher", "params": [], "throws": null, "modifiers": ["synchronized", "public"], "return_type": "int", "snippet": "    public synchronized int runningCallsCount() {\n        return runningAsyncCalls.size();\n    }", "url": "https://raw.githubusercontent.com/mrchengwenlong/NettyIM/master/im_lib/src/main/java/com/takiku/im_lib/dispatcher/Dispatcher.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 60437, "method_name": "promoteCalls", "class_name": "Dispatcher", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void promoteCalls() {\n        if (runningAsyncCalls.size() >= maxRequests) return; // Already running max capacity.\n        if (readyAsyncCalls.isEmpty()) return; // No ready calls to promote.\n\n        for (Iterator<RealCall.AsyncCall> i = readyAsyncCalls.iterator(); i.hasNext(); ) {\n            RealCall.AsyncCall call = i.next();\n            i.remove();\n            runningAsyncCalls.add(call);\n            executorService().execute(call);\n            if (runningAsyncCalls.size() >= maxRequests) return; // Reached max capacity.\n        }\n    }", "url": "https://raw.githubusercontent.com/mrchengwenlong/NettyIM/master/im_lib/src/main/java/com/takiku/im_lib/dispatcher/Dispatcher.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 60438, "method_name": "executorService", "class_name": "Dispatcher", "params": [], "throws": null, "modifiers": ["synchronized", "public"], "return_type": "ExecutorService", "snippet": "    public synchronized ExecutorService executorService() {\n        if (executorService == null) {\n            executorService = new ThreadPoolExecutor(1, Integer.MAX_VALUE, 60, TimeUnit.SECONDS,\n                    new SynchronousQueue<Runnable>(), Util.threadFactory(\"IMClient Dispatcher\", false));\n        }\n        return executorService;\n    }", "url": "https://raw.githubusercontent.com/mrchengwenlong/NettyIM/master/im_lib/src/main/java/com/takiku/im_lib/dispatcher/Dispatcher.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 60439, "method_name": "enqueue", "class_name": "Dispatcher", "params": ["RealCall"], "throws": null, "modifiers": ["synchronized", "public"], "return_type": "void", "snippet": "        public synchronized void enqueue(RealCall.AsyncCall call) {\n            if (runningAsyncCalls.size() < maxRequests) {\n                runningAsyncCalls.add(call);\n                executorService().execute(call);\n            } else {\n                readyAsyncCalls.add(call);\n            }\n        }", "url": "https://raw.githubusercontent.com/mrchengwenlong/NettyIM/master/im_lib/src/main/java/com/takiku/im_lib/dispatcher/Dispatcher.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 60440, "method_name": "uploadExecutableFlow", "class_name": "JdbcExecutorLoader", "params": ["ExecutableFlow"], "throws": ["ExecutorManagerException"], "modifiers": ["synchronized", "public"], "return_type": "void", "snippet": "  public synchronized void uploadExecutableFlow(final ExecutableFlow flow)\n      throws ExecutorManagerException {\n    this.executionFlowDao.uploadExecutableFlow(flow);\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/JdbcExecutorLoader.java", "stars": "18", "class_props": {"extends": null, "implements": ["ExecutorLoader"], "modifiers": ["public"]}}, {"id": 60441, "method_name": "updateExecutableFlow", "class_name": "JdbcExecutorLoader", "params": ["ExecutableFlow"], "throws": ["ExecutorManagerException"], "modifiers": ["public"], "return_type": "void", "snippet": "  public void updateExecutableFlow(final ExecutableFlow flow)\n      throws ExecutorManagerException {\n    this.executionFlowDao.updateExecutableFlow(flow);\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/JdbcExecutorLoader.java", "stars": "18", "class_props": {"extends": null, "implements": ["ExecutorLoader"], "modifiers": ["public"]}}, {"id": 60442, "method_name": "fetchExecutableFlow", "class_name": "JdbcExecutorLoader", "params": ["int"], "throws": ["ExecutorManagerException"], "modifiers": ["public"], "return_type": "ExecutableFlow", "snippet": "  public ExecutableFlow fetchExecutableFlow(final int id)\n      throws ExecutorManagerException {\n    return this.executionFlowDao.fetchExecutableFlow(id);\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/JdbcExecutorLoader.java", "stars": "18", "class_props": {"extends": null, "implements": ["ExecutorLoader"], "modifiers": ["public"]}}, {"id": 60443, "method_name": "fetchQueuedFlows", "class_name": "JdbcExecutorLoader", "params": [], "throws": ["ExecutorManagerException"], "modifiers": ["public"], "return_type": "List<Pair>", "snippet": "  public List<Pair<ExecutionReference, ExecutableFlow>> fetchQueuedFlows()\n      throws ExecutorManagerException {\n    return this.executionFlowDao.fetchQueuedFlows();\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/JdbcExecutorLoader.java", "stars": "18", "class_props": {"extends": null, "implements": ["ExecutorLoader"], "modifiers": ["public"]}}, {"id": 60444, "method_name": "fetchRecentlyFinishedFlows", "class_name": "JdbcExecutorLoader", "params": ["Duration"], "throws": ["ExecutorManagerException"], "modifiers": ["public"], "return_type": "List<ExecutableFlow>", "snippet": "  public List<ExecutableFlow> fetchRecentlyFinishedFlows(final Duration maxAge)\n      throws ExecutorManagerException {\n    return this.executionFlowDao.fetchRecentlyFinishedFlows(maxAge);\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/JdbcExecutorLoader.java", "stars": "18", "class_props": {"extends": null, "implements": ["ExecutorLoader"], "modifiers": ["public"]}}, {"id": 60445, "method_name": "fetchActiveFlows", "class_name": "JdbcExecutorLoader", "params": [], "throws": ["ExecutorManagerException"], "modifiers": ["public"], "return_type": "Map<Integer,Pair>", "snippet": "  public Map<Integer, Pair<ExecutionReference, ExecutableFlow>> fetchActiveFlows()\n      throws ExecutorManagerException {\n    return this.fetchActiveFlowDao.fetchActiveFlows();\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/JdbcExecutorLoader.java", "stars": "18", "class_props": {"extends": null, "implements": ["ExecutorLoader"], "modifiers": ["public"]}}, {"id": 60446, "method_name": "fetchUnfinishedFlows", "class_name": "JdbcExecutorLoader", "params": [], "throws": ["ExecutorManagerException"], "modifiers": ["public"], "return_type": "Map<Integer,Pair>", "snippet": "  public Map<Integer, Pair<ExecutionReference, ExecutableFlow>> fetchUnfinishedFlows()\n      throws ExecutorManagerException {\n    return this.fetchActiveFlowDao.fetchUnfinishedFlows();\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/JdbcExecutorLoader.java", "stars": "18", "class_props": {"extends": null, "implements": ["ExecutorLoader"], "modifiers": ["public"]}}, {"id": 60447, "method_name": "fetchAllUnfinishedFlows", "class_name": "JdbcExecutorLoader", "params": [], "throws": ["ExecutorManagerException"], "modifiers": ["public"], "return_type": "List<ExecutableFlow>", "snippet": "  public List<ExecutableFlow> fetchAllUnfinishedFlows() throws ExecutorManagerException {\n    return this.fetchActiveFlowDao.fetchAllUnFinishFlows();\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/JdbcExecutorLoader.java", "stars": "18", "class_props": {"extends": null, "implements": ["ExecutorLoader"], "modifiers": ["public"]}}, {"id": 60448, "method_name": "fetchUnfinishedFlowsMetadata", "class_name": "JdbcExecutorLoader", "params": [], "throws": ["ExecutorManagerException"], "modifiers": ["public"], "return_type": "Map<Integer,Pair>", "snippet": "  public Map<Integer, Pair<ExecutionReference, ExecutableFlow>> fetchUnfinishedFlowsMetadata()\n      throws ExecutorManagerException {\n    return this.fetchActiveFlowDao.fetchUnfinishedFlowsMetadata();\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/JdbcExecutorLoader.java", "stars": "18", "class_props": {"extends": null, "implements": ["ExecutorLoader"], "modifiers": ["public"]}}, {"id": 60449, "method_name": "fetchActiveFlowByExecId", "class_name": "JdbcExecutorLoader", "params": ["int"], "throws": ["ExecutorManagerException"], "modifiers": ["public"], "return_type": "Pair<ExecutionReference,ExecutableFlow>", "snippet": "  public Pair<ExecutionReference, ExecutableFlow> fetchActiveFlowByExecId(final int execId)\n      throws ExecutorManagerException {\n    return this.fetchActiveFlowDao.fetchActiveFlowByExecId(execId);\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/JdbcExecutorLoader.java", "stars": "18", "class_props": {"extends": null, "implements": ["ExecutorLoader"], "modifiers": ["public"]}}, {"id": 60450, "method_name": "fetchNumExecutableFlows", "class_name": "JdbcExecutorLoader", "params": [], "throws": ["ExecutorManagerException"], "modifiers": ["public"], "return_type": "int", "snippet": "  public int fetchNumExecutableFlows() throws ExecutorManagerException {\n    return this.numExecutionsDao.fetchNumExecutableFlows();\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/JdbcExecutorLoader.java", "stars": "18", "class_props": {"extends": null, "implements": ["ExecutorLoader"], "modifiers": ["public"]}}, {"id": 60451, "method_name": "fetchNumExecutableFlows", "class_name": "JdbcExecutorLoader", "params": ["int", "String"], "throws": ["ExecutorManagerException"], "modifiers": ["public"], "return_type": "int", "snippet": "  public int fetchNumExecutableFlows(final int projectId, final String flowId)\n      throws ExecutorManagerException {\n    return this.numExecutionsDao.fetchNumExecutableFlows(projectId, flowId);\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/JdbcExecutorLoader.java", "stars": "18", "class_props": {"extends": null, "implements": ["ExecutorLoader"], "modifiers": ["public"]}}, {"id": 60452, "method_name": "fetchNumExecutableNodes", "class_name": "JdbcExecutorLoader", "params": ["int", "String"], "throws": ["ExecutorManagerException"], "modifiers": ["public"], "return_type": "int", "snippet": "  public int fetchNumExecutableNodes(final int projectId, final String jobId)\n      throws ExecutorManagerException {\n    return this.numExecutionsDao.fetchNumExecutableNodes(projectId, jobId);\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/JdbcExecutorLoader.java", "stars": "18", "class_props": {"extends": null, "implements": ["ExecutorLoader"], "modifiers": ["public"]}}, {"id": 60453, "method_name": "fetchFlowHistory", "class_name": "JdbcExecutorLoader", "params": ["int", "String", "int", "int"], "throws": ["ExecutorManagerException"], "modifiers": ["public"], "return_type": "List<ExecutableFlow>", "snippet": "  public List<ExecutableFlow> fetchFlowHistory(final int projectId, final String flowId,\n      final int skip, final int num) throws ExecutorManagerException {\n    return this.executionFlowDao.fetchFlowHistory(projectId, flowId, skip, num);\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/JdbcExecutorLoader.java", "stars": "18", "class_props": {"extends": null, "implements": ["ExecutorLoader"], "modifiers": ["public"]}}, {"id": 60454, "method_name": "fetchFlowHistory", "class_name": "JdbcExecutorLoader", "params": ["int", "String", "long"], "throws": ["ExecutorManagerException"], "modifiers": ["public"], "return_type": "List<ExecutableFlow>", "snippet": "  public List<ExecutableFlow> fetchFlowHistory(final int projectId, final String flowId,\n      final long startTime) throws ExecutorManagerException {\n    return this.executionFlowDao.fetchFlowHistory(projectId, flowId, startTime);\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/JdbcExecutorLoader.java", "stars": "18", "class_props": {"extends": null, "implements": ["ExecutorLoader"], "modifiers": ["public"]}}, {"id": 60455, "method_name": "fetchFlowHistory", "class_name": "JdbcExecutorLoader", "params": ["int", "String", "int", "int", "Status"], "throws": ["ExecutorManagerException"], "modifiers": ["public"], "return_type": "List<ExecutableFlow>", "snippet": "  public List<ExecutableFlow> fetchFlowHistory(final int projectId, final String flowId,\n      final int skip, final int num, final Status status) throws ExecutorManagerException {\n    return this.executionFlowDao.fetchFlowHistory(projectId, flowId, skip, num, status);\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/JdbcExecutorLoader.java", "stars": "18", "class_props": {"extends": null, "implements": ["ExecutorLoader"], "modifiers": ["public"]}}, {"id": 60456, "method_name": "fetchFlowHistory", "class_name": "JdbcExecutorLoader", "params": ["int", "int"], "throws": ["ExecutorManagerException"], "modifiers": ["public"], "return_type": "List<ExecutableFlow>", "snippet": "  public List<ExecutableFlow> fetchFlowHistory(final int skip, final int num)\n      throws ExecutorManagerException {\n    return this.executionFlowDao.fetchFlowHistory(skip, num);\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/JdbcExecutorLoader.java", "stars": "18", "class_props": {"extends": null, "implements": ["ExecutorLoader"], "modifiers": ["public"]}}, {"id": 60457, "method_name": "fetchMaintainedFlowHistory", "class_name": "JdbcExecutorLoader", "params": ["String", "List<Integer>", "int", "int"], "throws": ["ExecutorManagerException"], "modifiers": ["public"], "return_type": "List<ExecutableFlow>", "snippet": "  public List<ExecutableFlow> fetchMaintainedFlowHistory(String username, List<Integer> projectIds, int skip, int size)\n          throws ExecutorManagerException {\n    return this.executionFlowDao.fetchMaintainedFlowHistory(username, projectIds, skip, size);\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/JdbcExecutorLoader.java", "stars": "18", "class_props": {"extends": null, "implements": ["ExecutorLoader"], "modifiers": ["public"]}}, {"id": 60458, "method_name": "fetchFlowHistory", "class_name": "JdbcExecutorLoader", "params": ["String", "String", "String", "String", "String", "long", "long", "int", "int", "int"], "throws": ["ExecutorManagerException"], "modifiers": ["public"], "return_type": "List<ExecutableFlow>", "snippet": "  public List<ExecutableFlow> fetchFlowHistory(final String projContain,\n                                               final String flowContains,\n                                               final String execIdContain,\n                                               final String userNameContains, final String status,\n                                               final long startTime,\n                                               final long endTime, final int skip, final int num, final int flowType)\n                                               throws ExecutorManagerException {\n    return this.executionFlowDao.fetchFlowHistory(projContain, flowContains,execIdContain,\n        userNameContains, status, startTime, endTime, skip, num, flowType);\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/JdbcExecutorLoader.java", "stars": "18", "class_props": {"extends": null, "implements": ["ExecutorLoader"], "modifiers": ["public"]}}, {"id": 60459, "method_name": "fetchMaintainedFlowHistory", "class_name": "JdbcExecutorLoader", "params": ["String", "String", "String", "String", "String", "long", "long", "int", "int", "int", "String", "List<Integer>"], "throws": ["ExecutorManagerException"], "modifiers": ["public"], "return_type": "List<ExecutableFlow>", "snippet": "  public List<ExecutableFlow> fetchMaintainedFlowHistory(String projContain, String flowContains,\n                                                  String execIdContain, String userNameContains, String status, long startTime,\n                                                  long endTime, int skip, int num, int flowType, String username, List<Integer> projectIds)\n          throws ExecutorManagerException {\n    return this.executionFlowDao.fetchMaintainedFlowHistory(projContain, flowContains,execIdContain,\n            userNameContains, status, startTime, endTime, skip, num, flowType, username, projectIds);\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/JdbcExecutorLoader.java", "stars": "18", "class_props": {"extends": null, "implements": ["ExecutorLoader"], "modifiers": ["public"]}}, {"id": 60460, "method_name": "fetchFlowHistoryQuickSearch", "class_name": "JdbcExecutorLoader", "params": ["String", "String", "int", "int"], "throws": ["ExecutorManagerException"], "modifiers": ["public"], "return_type": "List<ExecutableFlow>", "snippet": "  public List<ExecutableFlow> fetchFlowHistoryQuickSearch(final String searchContains,\n      final String userNameContains, final int skip, final int num) throws ExecutorManagerException {\n    return this.executionFlowDao.fetchFlowHistoryQuickSearch(searchContains, userNameContains, skip, num);\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/JdbcExecutorLoader.java", "stars": "18", "class_props": {"extends": null, "implements": ["ExecutorLoader"], "modifiers": ["public"]}}, {"id": 60461, "method_name": "fetchFlowHistoryQuickSearch", "class_name": "JdbcExecutorLoader", "params": ["String", "String", "int", "int", "List<Integer>"], "throws": ["ExecutorManagerException"], "modifiers": ["public"], "return_type": "List<ExecutableFlow>", "snippet": "  public List<ExecutableFlow> fetchFlowHistoryQuickSearch(final String searchContains,\n                                                          final String username,\n                                                          final int skip, final int num,\n                                                          List<Integer> projectIds) throws ExecutorManagerException {\n    return this.executionFlowDao.fetchFlowHistoryQuickSearch(searchContains, username, skip, num, projectIds);\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/JdbcExecutorLoader.java", "stars": "18", "class_props": {"extends": null, "implements": ["ExecutorLoader"], "modifiers": ["public"]}}, {"id": 60462, "method_name": "fetchFlowAllHistory", "class_name": "JdbcExecutorLoader", "params": ["int", "String", "String"], "throws": ["ExecutorManagerException"], "modifiers": ["public"], "return_type": "List<ExecutableFlow>", "snippet": "  public List<ExecutableFlow> fetchFlowAllHistory(int projectId, String flowId, String user)\n      throws ExecutorManagerException{\n    return this.executionFlowDao.fetchFlowAllHistory(projectId, flowId, user);\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/JdbcExecutorLoader.java", "stars": "18", "class_props": {"extends": null, "implements": ["ExecutorLoader"], "modifiers": ["public"]}}, {"id": 60463, "method_name": "addActiveExecutableReference", "class_name": "JdbcExecutorLoader", "params": ["ExecutionReference"], "throws": ["ExecutorManagerException"], "modifiers": ["public"], "return_type": "void", "snippet": "  public void addActiveExecutableReference(final ExecutionReference reference)\n      throws ExecutorManagerException {\n\n    this.activeExecutingFlowsDao.addActiveExecutableReference(reference);\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/JdbcExecutorLoader.java", "stars": "18", "class_props": {"extends": null, "implements": ["ExecutorLoader"], "modifiers": ["public"]}}, {"id": 60464, "method_name": "removeActiveExecutableReference", "class_name": "JdbcExecutorLoader", "params": ["int"], "throws": ["ExecutorManagerException"], "modifiers": ["public"], "return_type": "void", "snippet": "  public void removeActiveExecutableReference(final int execid)\n      throws ExecutorManagerException {\n\n    this.activeExecutingFlowsDao.removeActiveExecutableReference(execid);\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/JdbcExecutorLoader.java", "stars": "18", "class_props": {"extends": null, "implements": ["ExecutorLoader"], "modifiers": ["public"]}}, {"id": 60465, "method_name": "updateExecutableReference", "class_name": "JdbcExecutorLoader", "params": ["int", "long"], "throws": ["ExecutorManagerException"], "modifiers": ["public"], "return_type": "boolean", "snippet": "  public boolean updateExecutableReference(final int execId, final long updateTime)\n      throws ExecutorManagerException {\n\n    // Should be 1.\n    return this.activeExecutingFlowsDao.updateExecutableReference(execId, updateTime);\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/JdbcExecutorLoader.java", "stars": "18", "class_props": {"extends": null, "implements": ["ExecutorLoader"], "modifiers": ["public"]}}, {"id": 60466, "method_name": "uploadExecutableNode", "class_name": "JdbcExecutorLoader", "params": ["ExecutableNode", "Props"], "throws": ["ExecutorManagerException"], "modifiers": ["public"], "return_type": "void", "snippet": "  public void uploadExecutableNode(final ExecutableNode node, final Props inputProps)\n      throws ExecutorManagerException {\n\n    this.executionJobDao.uploadExecutableNode(node, inputProps);\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/JdbcExecutorLoader.java", "stars": "18", "class_props": {"extends": null, "implements": ["ExecutorLoader"], "modifiers": ["public"]}}, {"id": 60467, "method_name": "updateExecutableNode", "class_name": "JdbcExecutorLoader", "params": ["ExecutableNode"], "throws": ["ExecutorManagerException"], "modifiers": ["public"], "return_type": "void", "snippet": "  public void updateExecutableNode(final ExecutableNode node)\n      throws ExecutorManagerException {\n\n    this.executionJobDao.updateExecutableNode(node);\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/JdbcExecutorLoader.java", "stars": "18", "class_props": {"extends": null, "implements": ["ExecutorLoader"], "modifiers": ["public"]}}, {"id": 60468, "method_name": "fetchJobInfoAttempts", "class_name": "JdbcExecutorLoader", "params": ["int", "String"], "throws": ["ExecutorManagerException"], "modifiers": ["public"], "return_type": "List<ExecutableJobInfo>", "snippet": "  public List<ExecutableJobInfo> fetchJobInfoAttempts(final int execId, final String jobId)\n      throws ExecutorManagerException {\n\n    return this.executionJobDao.fetchJobInfoAttempts(execId, jobId);\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/JdbcExecutorLoader.java", "stars": "18", "class_props": {"extends": null, "implements": ["ExecutorLoader"], "modifiers": ["public"]}}, {"id": 60469, "method_name": "fetchJobInfo", "class_name": "JdbcExecutorLoader", "params": ["int", "String", "int"], "throws": ["ExecutorManagerException"], "modifiers": ["public"], "return_type": "ExecutableJobInfo", "snippet": "  public ExecutableJobInfo fetchJobInfo(final int execId, final String jobId, final int attempts)\n      throws ExecutorManagerException {\n\n    return this.executionJobDao.fetchJobInfo(execId, jobId, attempts);\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/JdbcExecutorLoader.java", "stars": "18", "class_props": {"extends": null, "implements": ["ExecutorLoader"], "modifiers": ["public"]}}, {"id": 60470, "method_name": "fetchExecutionJobInputProps", "class_name": "JdbcExecutorLoader", "params": ["int", "String"], "throws": ["ExecutorManagerException"], "modifiers": ["public"], "return_type": "Props", "snippet": "  public Props fetchExecutionJobInputProps(final int execId, final String jobId)\n      throws ExecutorManagerException {\n    return this.executionJobDao.fetchExecutionJobInputProps(execId, jobId);\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/JdbcExecutorLoader.java", "stars": "18", "class_props": {"extends": null, "implements": ["ExecutorLoader"], "modifiers": ["public"]}}, {"id": 60471, "method_name": "fetchExecutionJobOutputProps", "class_name": "JdbcExecutorLoader", "params": ["int", "String"], "throws": ["ExecutorManagerException"], "modifiers": ["public"], "return_type": "Props", "snippet": "  public Props fetchExecutionJobOutputProps(final int execId, final String jobId)\n      throws ExecutorManagerException {\n    return this.executionJobDao.fetchExecutionJobOutputProps(execId, jobId);\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/JdbcExecutorLoader.java", "stars": "18", "class_props": {"extends": null, "implements": ["ExecutorLoader"], "modifiers": ["public"]}}, {"id": 60472, "method_name": "fetchExecutionJobProps", "class_name": "JdbcExecutorLoader", "params": ["int", "String"], "throws": ["ExecutorManagerException"], "modifiers": ["public"], "return_type": "Pair<Props,Props>", "snippet": "  public Pair<Props, Props> fetchExecutionJobProps(final int execId, final String jobId)\n      throws ExecutorManagerException {\n    return this.executionJobDao.fetchExecutionJobProps(execId, jobId);\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/JdbcExecutorLoader.java", "stars": "18", "class_props": {"extends": null, "implements": ["ExecutorLoader"], "modifiers": ["public"]}}, {"id": 60473, "method_name": "fetchJobHistory", "class_name": "JdbcExecutorLoader", "params": ["int", "String", "int", "int"], "throws": ["ExecutorManagerException"], "modifiers": ["public"], "return_type": "List<ExecutableJobInfo>", "snippet": "  public List<ExecutableJobInfo> fetchJobHistory(final int projectId, final String jobId,\n      final int skip, final int size)\n      throws ExecutorManagerException {\n\n    return this.executionJobDao.fetchJobHistory(projectId, jobId, skip, size);\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/JdbcExecutorLoader.java", "stars": "18", "class_props": {"extends": null, "implements": ["ExecutorLoader"], "modifiers": ["public"]}}, {"id": 60474, "method_name": "fetchJobAllHistory", "class_name": "JdbcExecutorLoader", "params": ["int", "String"], "throws": ["ExecutorManagerException"], "modifiers": ["public"], "return_type": "List<ExecutableJobInfo>", "snippet": "  public List<ExecutableJobInfo> fetchJobAllHistory(final int projectId, final String jobId)\n      throws ExecutorManagerException {\n\n    return this.executionJobDao.fetchJobAllHistory(projectId, jobId);\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/JdbcExecutorLoader.java", "stars": "18", "class_props": {"extends": null, "implements": ["ExecutorLoader"], "modifiers": ["public"]}}, {"id": 60475, "method_name": "getJobLogOffset", "class_name": "JdbcExecutorLoader", "params": ["int", "String", "int", "Long"], "throws": ["ExecutorManagerException"], "modifiers": ["public"], "return_type": "Long", "snippet": "  public Long getJobLogOffset(int execId, String jobName, int attempt, Long length) throws ExecutorManagerException {\n    Long maxSize = this.executionLogsDao.getJobLogMaxSize(execId, jobName, attempt);\n    return maxSize - length > 0? maxSize - length: 0;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/JdbcExecutorLoader.java", "stars": "18", "class_props": {"extends": null, "implements": ["ExecutorLoader"], "modifiers": ["public"]}}, {"id": 60476, "method_name": "fetchLogs", "class_name": "JdbcExecutorLoader", "params": ["int", "String", "int", "int", "int"], "throws": ["ExecutorManagerException"], "modifiers": ["public"], "return_type": "LogData", "snippet": "  public LogData fetchLogs(final int execId, final String name, final int attempt,\n      final int startByte,\n      final int length) throws ExecutorManagerException {\n\n    return this.executionLogsDao.fetchLogs(execId, name, attempt, startByte, length);\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/JdbcExecutorLoader.java", "stars": "18", "class_props": {"extends": null, "implements": ["ExecutorLoader"], "modifiers": ["public"]}}, {"id": 60477, "method_name": "fetchAttachments", "class_name": "JdbcExecutorLoader", "params": ["int", "String", "int"], "throws": ["ExecutorManagerException"], "modifiers": ["public"], "return_type": "List<Object>", "snippet": "  public List<Object> fetchAttachments(final int execId, final String jobId, final int attempt)\n      throws ExecutorManagerException {\n\n    return this.executionJobDao.fetchAttachments(execId, jobId, attempt);\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/JdbcExecutorLoader.java", "stars": "18", "class_props": {"extends": null, "implements": ["ExecutorLoader"], "modifiers": ["public"]}}, {"id": 60478, "method_name": "uploadLogFile", "class_name": "JdbcExecutorLoader", "params": ["int", "String", "int", "File"], "throws": ["ExecutorManagerException"], "modifiers": ["public"], "return_type": "void", "snippet": "  public void uploadLogFile(final int execId, final String name, final int attempt,\n      final File... files)\n      throws ExecutorManagerException {\n    this.executionLogsDao.uploadLogFile(execId, name, attempt, files);\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/JdbcExecutorLoader.java", "stars": "18", "class_props": {"extends": null, "implements": ["ExecutorLoader"], "modifiers": ["public"]}}, {"id": 60479, "method_name": "uploadAttachmentFile", "class_name": "JdbcExecutorLoader", "params": ["ExecutableNode", "File"], "throws": ["ExecutorManagerException"], "modifiers": ["public"], "return_type": "void", "snippet": "  public void uploadAttachmentFile(final ExecutableNode node, final File file)\n      throws ExecutorManagerException {\n    this.executionJobDao.uploadAttachmentFile(node, file);\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/JdbcExecutorLoader.java", "stars": "18", "class_props": {"extends": null, "implements": ["ExecutorLoader"], "modifiers": ["public"]}}, {"id": 60480, "method_name": "fetchAllExecutors", "class_name": "JdbcExecutorLoader", "params": [], "throws": ["ExecutorManagerException"], "modifiers": ["public"], "return_type": "List<Executor>", "snippet": "  public List<Executor> fetchAllExecutors() throws ExecutorManagerException {\n    return this.executorDao.fetchAllExecutors();\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/JdbcExecutorLoader.java", "stars": "18", "class_props": {"extends": null, "implements": ["ExecutorLoader"], "modifiers": ["public"]}}, {"id": 60481, "method_name": "fetchActiveExecutors", "class_name": "JdbcExecutorLoader", "params": [], "throws": ["ExecutorManagerException"], "modifiers": ["public"], "return_type": "List<Executor>", "snippet": "  public List<Executor> fetchActiveExecutors() throws ExecutorManagerException {\n    return this.executorDao.fetchActiveExecutors();\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/JdbcExecutorLoader.java", "stars": "18", "class_props": {"extends": null, "implements": ["ExecutorLoader"], "modifiers": ["public"]}}, {"id": 60482, "method_name": "fetchExecutor", "class_name": "JdbcExecutorLoader", "params": ["String", "int"], "throws": ["ExecutorManagerException"], "modifiers": ["public"], "return_type": "Executor", "snippet": "  public Executor fetchExecutor(final String host, final int port)\n      throws ExecutorManagerException {\n    return this.executorDao.fetchExecutor(host, port);\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/JdbcExecutorLoader.java", "stars": "18", "class_props": {"extends": null, "implements": ["ExecutorLoader"], "modifiers": ["public"]}}, {"id": 60483, "method_name": "fetchExecutor", "class_name": "JdbcExecutorLoader", "params": ["int"], "throws": ["ExecutorManagerException"], "modifiers": ["public"], "return_type": "Executor", "snippet": "  public Executor fetchExecutor(final int executorId) throws ExecutorManagerException {\n    return this.executorDao.fetchExecutor(executorId);\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/JdbcExecutorLoader.java", "stars": "18", "class_props": {"extends": null, "implements": ["ExecutorLoader"], "modifiers": ["public"]}}, {"id": 60484, "method_name": "updateExecutor", "class_name": "JdbcExecutorLoader", "params": ["Executor"], "throws": ["ExecutorManagerException"], "modifiers": ["public"], "return_type": "void", "snippet": "  public void updateExecutor(final Executor executor) throws ExecutorManagerException {\n    this.executorDao.updateExecutor(executor);\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/JdbcExecutorLoader.java", "stars": "18", "class_props": {"extends": null, "implements": ["ExecutorLoader"], "modifiers": ["public"]}}, {"id": 60485, "method_name": "addExecutor", "class_name": "JdbcExecutorLoader", "params": ["String", "int"], "throws": ["ExecutorManagerException"], "modifiers": ["public"], "return_type": "Executor", "snippet": "  public Executor addExecutor(final String host, final int port)\n      throws ExecutorManagerException {\n    return this.executorDao.addExecutor(host, port);\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/JdbcExecutorLoader.java", "stars": "18", "class_props": {"extends": null, "implements": ["ExecutorLoader"], "modifiers": ["public"]}}, {"id": 60486, "method_name": "removeExecutor", "class_name": "JdbcExecutorLoader", "params": ["String", "int"], "throws": ["ExecutorManagerException"], "modifiers": ["public"], "return_type": "void", "snippet": "  public void removeExecutor(final String host, final int port) throws ExecutorManagerException {\n    this.executorDao.removeExecutor(host, port);\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/JdbcExecutorLoader.java", "stars": "18", "class_props": {"extends": null, "implements": ["ExecutorLoader"], "modifiers": ["public"]}}, {"id": 60487, "method_name": "postExecutorEvent", "class_name": "JdbcExecutorLoader", "params": ["Executor", "EventType", "String", "String"], "throws": ["ExecutorManagerException"], "modifiers": ["public"], "return_type": "void", "snippet": "  public void postExecutorEvent(final Executor executor, final EventType type, final String user,\n      final String message) throws ExecutorManagerException {\n\n    this.executorEventsDao.postExecutorEvent(executor, type, user, message);\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/JdbcExecutorLoader.java", "stars": "18", "class_props": {"extends": null, "implements": ["ExecutorLoader"], "modifiers": ["public"]}}, {"id": 60488, "method_name": "getExecutorEvents", "class_name": "JdbcExecutorLoader", "params": ["Executor", "int", "int"], "throws": ["ExecutorManagerException"], "modifiers": ["public"], "return_type": "List<ExecutorLogEvent>", "snippet": "  public List<ExecutorLogEvent> getExecutorEvents(final Executor executor, final int num,\n      final int offset) throws ExecutorManagerException {\n    return this.executorEventsDao.getExecutorEvents(executor, num, offset);\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/JdbcExecutorLoader.java", "stars": "18", "class_props": {"extends": null, "implements": ["ExecutorLoader"], "modifiers": ["public"]}}, {"id": 60489, "method_name": "assignExecutor", "class_name": "JdbcExecutorLoader", "params": ["int", "int"], "throws": ["ExecutorManagerException"], "modifiers": ["public"], "return_type": "void", "snippet": "  public void assignExecutor(final int executorId, final int executionId)\n      throws ExecutorManagerException {\n    this.assignExecutorDao.assignExecutor(executorId, executionId);\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/JdbcExecutorLoader.java", "stars": "18", "class_props": {"extends": null, "implements": ["ExecutorLoader"], "modifiers": ["public"]}}, {"id": 60490, "method_name": "fetchExecutorByExecutionId", "class_name": "JdbcExecutorLoader", "params": ["int"], "throws": ["ExecutorManagerException"], "modifiers": ["public"], "return_type": "Executor", "snippet": "  public Executor fetchExecutorByExecutionId(final int executionId)\n      throws ExecutorManagerException {\n    return this.executorDao.fetchExecutorByExecutionId(executionId);\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/JdbcExecutorLoader.java", "stars": "18", "class_props": {"extends": null, "implements": ["ExecutorLoader"], "modifiers": ["public"]}}, {"id": 60491, "method_name": "removeExecutionLogsByTime", "class_name": "JdbcExecutorLoader", "params": ["long"], "throws": ["ExecutorManagerException"], "modifiers": ["public"], "return_type": "int", "snippet": "  public int removeExecutionLogsByTime(final long millis)\n      throws ExecutorManagerException {\n    return this.executionLogsDao.removeExecutionLogsByTime(millis);\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/JdbcExecutorLoader.java", "stars": "18", "class_props": {"extends": null, "implements": ["ExecutorLoader"], "modifiers": ["public"]}}, {"id": 60492, "method_name": "unassignExecutor", "class_name": "JdbcExecutorLoader", "params": ["int"], "throws": ["ExecutorManagerException"], "modifiers": ["public"], "return_type": "void", "snippet": "  public void unassignExecutor(final int executionId) throws ExecutorManagerException {\n    this.assignExecutorDao.unassignExecutor(executionId);\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/JdbcExecutorLoader.java", "stars": "18", "class_props": {"extends": null, "implements": ["ExecutorLoader"], "modifiers": ["public"]}}, {"id": 60493, "method_name": "selectAndUpdateExecution", "class_name": "JdbcExecutorLoader", "params": ["int", "boolean"], "throws": ["ExecutorManagerException"], "modifiers": ["public"], "return_type": "int", "snippet": "  public int selectAndUpdateExecution(final int executorId, final boolean isActive)\n      throws ExecutorManagerException {\n\t      return this.executionFlowDao.selectAndUpdateExecution(executorId, isActive);\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/JdbcExecutorLoader.java", "stars": "18", "class_props": {"extends": null, "implements": ["ExecutorLoader"], "modifiers": ["public"]}}, {"id": 60494, "method_name": "unsetExecutorIdForExecution", "class_name": "JdbcExecutorLoader", "params": ["int"], "throws": ["ExecutorManagerException"], "modifiers": ["public"], "return_type": "void", "snippet": "  public void unsetExecutorIdForExecution(final int executionId) throws ExecutorManagerException {\n    this.executionFlowDao.unsetExecutorIdForExecution(executionId);\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/JdbcExecutorLoader.java", "stars": "18", "class_props": {"extends": null, "implements": ["ExecutorLoader"], "modifiers": ["public"]}}, {"id": 60495, "method_name": "fetchUserFlowHistory", "class_name": "JdbcExecutorLoader", "params": ["int", "int", "String"], "throws": ["ExecutorManagerException"], "modifiers": ["public"], "return_type": "List<ExecutableFlow>", "snippet": "  public List<ExecutableFlow> fetchUserFlowHistory(final int skip, final int num, final String user)\n      throws ExecutorManagerException {\n    return this.executionFlowDao.fetchUserFlowHistory(skip, num, user);\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/JdbcExecutorLoader.java", "stars": "18", "class_props": {"extends": null, "implements": ["ExecutorLoader"], "modifiers": ["public"]}}, {"id": 60496, "method_name": "fetchUserFlowHistoryByAdvanceFilter", "class_name": "JdbcExecutorLoader", "params": ["String", "String", "String", "String", "String", "long", "long", "int", "int", "int"], "throws": ["ExecutorManagerException"], "modifiers": ["public"], "return_type": "List<ExecutableFlow>", "snippet": "  public List<ExecutableFlow> fetchUserFlowHistoryByAdvanceFilter(final String projContain,\n      final String flowContains, final String execIdContain, final String userNameContains, final String status, final long startTime,\n      final long endTime, final int skip, final int num, final int flowType) throws ExecutorManagerException {\n    return this.executionFlowDao.fetchUserFlowHistoryByAdvanceFilter(projContain, flowContains,execIdContain,\n        userNameContains, status, startTime, endTime, skip, num, flowType);\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/JdbcExecutorLoader.java", "stars": "18", "class_props": {"extends": null, "implements": ["ExecutorLoader"], "modifiers": ["public"]}}, {"id": 60497, "method_name": "fetchHistoryRecoverFlows", "class_name": "JdbcExecutorLoader", "params": ["String"], "throws": ["ExecutorManagerException"], "modifiers": ["public"], "return_type": "List<ExecutableFlow>", "snippet": "  public List<ExecutableFlow> fetchHistoryRecoverFlows(final String userNameContains)\n      throws ExecutorManagerException {\n    return this.executionFlowDao.fetchHistoryRecoverFlows(userNameContains);\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/JdbcExecutorLoader.java", "stars": "18", "class_props": {"extends": null, "implements": ["ExecutorLoader"], "modifiers": ["public"]}}, {"id": 60498, "method_name": "fetchHistoryRecoverFlowByRepeatId", "class_name": "JdbcExecutorLoader", "params": ["String"], "throws": ["ExecutorManagerException"], "modifiers": ["public"], "return_type": "List<ExecutableFlow>", "snippet": "  public List<ExecutableFlow> fetchHistoryRecoverFlowByRepeatId(final String repeatId)\n      throws ExecutorManagerException {\n    return this.executionFlowDao.fetchHistoryRecoverFlowByRepeatId(repeatId);\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/JdbcExecutorLoader.java", "stars": "18", "class_props": {"extends": null, "implements": ["ExecutorLoader"], "modifiers": ["public"]}}, {"id": 60499, "method_name": "fetchHistoryRecoverFlowByFlowId", "class_name": "JdbcExecutorLoader", "params": ["String", "String"], "throws": ["ExecutorManagerException"], "modifiers": ["public"], "return_type": "List<ExecutableFlow>", "snippet": "  public List<ExecutableFlow> fetchHistoryRecoverFlowByFlowId(final String flowId, final String projectId)\n      throws ExecutorManagerException {\n    return this.executionFlowDao.fetchHistoryRecoverFlowByFlowId(flowId, projectId);\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/JdbcExecutorLoader.java", "stars": "18", "class_props": {"extends": null, "implements": ["ExecutorLoader"], "modifiers": ["public"]}}, {"id": 60500, "method_name": "listHistoryRecoverFlows", "class_name": "JdbcExecutorLoader", "params": ["Map", "int", "int"], "throws": ["ExecutorManagerException"], "modifiers": ["public"], "return_type": "List<ExecutionRecover>", "snippet": "  public List<ExecutionRecover> listHistoryRecoverFlows(final Map paramMap, final int skip, final int num)\n      throws ExecutorManagerException{\n    return this.executionRecoverDao.listHistoryRecoverFlows(paramMap, skip, num);\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/JdbcExecutorLoader.java", "stars": "18", "class_props": {"extends": null, "implements": ["ExecutorLoader"], "modifiers": ["public"]}}, {"id": 60501, "method_name": "listMaintainedHistoryRecoverFlows", "class_name": "JdbcExecutorLoader", "params": ["String", "List<Integer>", "int", "int"], "throws": ["ExecutorManagerException"], "modifiers": ["public"], "return_type": "List<ExecutionRecover>", "snippet": "  public List<ExecutionRecover> listMaintainedHistoryRecoverFlows(String username, List<Integer> projectIds, int skip, int num)\n          throws ExecutorManagerException {\n    return this.executionRecoverDao.listMaintainedHistoryRecoverFlows(username, projectIds, skip, num);\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/JdbcExecutorLoader.java", "stars": "18", "class_props": {"extends": null, "implements": ["ExecutorLoader"], "modifiers": ["public"]}}, {"id": 60502, "method_name": "saveHistoryRecoverFlow", "class_name": "JdbcExecutorLoader", "params": ["ExecutionRecover"], "throws": ["ExecutorManagerException"], "modifiers": ["public"], "return_type": "Integer", "snippet": "  public Integer saveHistoryRecoverFlow(final ExecutionRecover executionRecover)\n      throws ExecutorManagerException{\n    return this.executionRecoverDao.uploadExecutableRecoverFlow(executionRecover);\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/JdbcExecutorLoader.java", "stars": "18", "class_props": {"extends": null, "implements": ["ExecutorLoader"], "modifiers": ["public"]}}, {"id": 60503, "method_name": "updateHistoryRecover", "class_name": "JdbcExecutorLoader", "params": ["ExecutionRecover"], "throws": ["ExecutorManagerException"], "modifiers": ["public"], "return_type": "void", "snippet": "  public void updateHistoryRecover(final ExecutionRecover executionRecover) throws ExecutorManagerException{\n    this.executionRecoverDao.updateExecutableRecoverFlow(executionRecover);\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/JdbcExecutorLoader.java", "stars": "18", "class_props": {"extends": null, "implements": ["ExecutorLoader"], "modifiers": ["public"]}}, {"id": 60504, "method_name": "getHistoryRecoverFlow", "class_name": "JdbcExecutorLoader", "params": ["Integer"], "throws": ["ExecutorManagerException"], "modifiers": ["public"], "return_type": "ExecutionRecover", "snippet": "  public ExecutionRecover getHistoryRecoverFlow(final Integer recoverId) throws ExecutorManagerException{\n\n    return this.executionRecoverDao.getHistoryRecoverFlows(recoverId);\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/JdbcExecutorLoader.java", "stars": "18", "class_props": {"extends": null, "implements": ["ExecutorLoader"], "modifiers": ["public"]}}, {"id": 60505, "method_name": "getHistoryRecoverFlowByPidAndFid", "class_name": "JdbcExecutorLoader", "params": ["String", "String"], "throws": ["ExecutorManagerException"], "modifiers": ["public"], "return_type": "ExecutionRecover", "snippet": "  public ExecutionRecover getHistoryRecoverFlowByPidAndFid(final String projectId, final String flowId)\n      throws ExecutorManagerException{\n\n    return this.executionRecoverDao.getHistoryRecoverFlowByPidAndFid(projectId, flowId);\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/JdbcExecutorLoader.java", "stars": "18", "class_props": {"extends": null, "implements": ["ExecutorLoader"], "modifiers": ["public"]}}, {"id": 60506, "method_name": "listHistoryRecoverRunnning", "class_name": "JdbcExecutorLoader", "params": ["Integer"], "throws": ["ExecutorManagerException"], "modifiers": ["public"], "return_type": "List<ExecutionRecover>", "snippet": "  public List<ExecutionRecover> listHistoryRecoverRunnning(final Integer loadSize)\n      throws ExecutorManagerException{\n\n    List<ExecutionRecover> allWaitRunning = new ArrayList<>();\n\n    Map<String, String> paramMap = new HashMap<>();\n    paramMap.put(\"recoverStatus\", Status.RUNNING.getNumVal()+\"\");\n    paramMap.put(\"limitNum\", loadSize + \"\");\n\n    allWaitRunning.addAll(this.executionRecoverDao.listHistoryRecover(paramMap));\n\n    paramMap.put(\"recoverStatus\", Status.PREPARING.getNumVal()+\"\");\n\n    allWaitRunning.addAll(this.executionRecoverDao.listHistoryRecover(paramMap));\n\n    return allWaitRunning;\n\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/JdbcExecutorLoader.java", "stars": "18", "class_props": {"extends": null, "implements": ["ExecutorLoader"], "modifiers": ["public"]}}, {"id": 60507, "method_name": "getExecutionCycleTotal", "class_name": "JdbcExecutorLoader", "params": ["Optional<String>"], "throws": ["ExecutorManagerException"], "modifiers": ["public"], "return_type": "int", "snippet": "  public int getExecutionCycleTotal(Optional<String> usernameOp) throws ExecutorManagerException {\n    return this.executionCycleDao.getCycleFlowsTotal(usernameOp);\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/JdbcExecutorLoader.java", "stars": "18", "class_props": {"extends": null, "implements": ["ExecutorLoader"], "modifiers": ["public"]}}, {"id": 60508, "method_name": "getExecutionCycleTotal", "class_name": "JdbcExecutorLoader", "params": ["String", "List<Integer>"], "throws": ["ExecutorManagerException"], "modifiers": ["public"], "return_type": "int", "snippet": "  public int getExecutionCycleTotal(String username, List<Integer> projectIds) throws ExecutorManagerException {\n    return this.executionCycleDao.getCycleFlowsTotal(username, projectIds);\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/JdbcExecutorLoader.java", "stars": "18", "class_props": {"extends": null, "implements": ["ExecutorLoader"], "modifiers": ["public"]}}, {"id": 60509, "method_name": "listExecutionCycleFlows", "class_name": "JdbcExecutorLoader", "params": ["Optional<String>", "int", "int"], "throws": ["ExecutorManagerException"], "modifiers": ["public"], "return_type": "List<ExecutionCycle>", "snippet": "  public List<ExecutionCycle> listExecutionCycleFlows(Optional<String> username, int offset, int length)\n          throws ExecutorManagerException {\n    return this.executionCycleDao.listCycleFlows(username, offset, length);\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/JdbcExecutorLoader.java", "stars": "18", "class_props": {"extends": null, "implements": ["ExecutorLoader"], "modifiers": ["public"]}}, {"id": 60510, "method_name": "listExecutionCycleFlows", "class_name": "JdbcExecutorLoader", "params": ["String", "List<Integer>", "int", "int"], "throws": ["ExecutorManagerException"], "modifiers": ["public"], "return_type": "List<ExecutionCycle>", "snippet": "  public List<ExecutionCycle> listExecutionCycleFlows(String username, List<Integer> projectIds, int offset, int length)\n          throws ExecutorManagerException {\n    return this.executionCycleDao.listCycleFlows(username, projectIds, offset, length);\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/JdbcExecutorLoader.java", "stars": "18", "class_props": {"extends": null, "implements": ["ExecutorLoader"], "modifiers": ["public"]}}, {"id": 60511, "method_name": "saveExecutionCycleFlow", "class_name": "JdbcExecutorLoader", "params": ["ExecutionCycle"], "throws": ["ExecutorManagerException"], "modifiers": ["public"], "return_type": "int", "snippet": "  public int saveExecutionCycleFlow(ExecutionCycle cycleFlow) throws ExecutorManagerException {\n    return this.executionCycleDao.uploadCycleFlow(cycleFlow);\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/JdbcExecutorLoader.java", "stars": "18", "class_props": {"extends": null, "implements": ["ExecutorLoader"], "modifiers": ["public"]}}, {"id": 60512, "method_name": "getExecutionCycleFlow", "class_name": "JdbcExecutorLoader", "params": ["String", "String"], "throws": ["ExecutorManagerException"], "modifiers": ["public"], "return_type": "ExecutionCycle", "snippet": "  public ExecutionCycle getExecutionCycleFlow(String projectId, String flowId) throws ExecutorManagerException {\n    return this.executionCycleDao.getExecutionCycleFlow(projectId, flowId);\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/JdbcExecutorLoader.java", "stars": "18", "class_props": {"extends": null, "implements": ["ExecutorLoader"], "modifiers": ["public"]}}, {"id": 60513, "method_name": "getExecutionCycleFlow", "class_name": "JdbcExecutorLoader", "params": ["int"], "throws": ["ExecutorManagerException"], "modifiers": ["public"], "return_type": "ExecutionCycle", "snippet": "  public ExecutionCycle getExecutionCycleFlow(int id) throws ExecutorManagerException {\n    return this.executionCycleDao.getExecutionCycleFlow(id);\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/JdbcExecutorLoader.java", "stars": "18", "class_props": {"extends": null, "implements": ["ExecutorLoader"], "modifiers": ["public"]}}, {"id": 60514, "method_name": "updateExecutionFlow", "class_name": "JdbcExecutorLoader", "params": ["ExecutionCycle"], "throws": ["ExecutorManagerException"], "modifiers": ["public"], "return_type": "int", "snippet": "  public int updateExecutionFlow(ExecutionCycle cycleFlow) throws ExecutorManagerException {\n    return this.executionCycleDao.updateCycleFlow(cycleFlow);\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/JdbcExecutorLoader.java", "stars": "18", "class_props": {"extends": null, "implements": ["ExecutorLoader"], "modifiers": ["public"]}}, {"id": 60515, "method_name": "stopAllCycleFlows", "class_name": "JdbcExecutorLoader", "params": [], "throws": ["ExecutorManagerException"], "modifiers": ["public"], "return_type": "int", "snippet": "  public int stopAllCycleFlows() throws ExecutorManagerException {\n    return this.executionCycleDao.stopAllCycleFlows();\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/JdbcExecutorLoader.java", "stars": "18", "class_props": {"extends": null, "implements": ["ExecutorLoader"], "modifiers": ["public"]}}, {"id": 60516, "method_name": "getAllRunningCycleFlows", "class_name": "JdbcExecutorLoader", "params": [], "throws": ["ExecutorManagerException"], "modifiers": ["public"], "return_type": "List<ExecutionCycle>", "snippet": "  public List<ExecutionCycle> getAllRunningCycleFlows() throws ExecutorManagerException {\n    return this.executionCycleDao.getAllRunningCycleFlows();\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/JdbcExecutorLoader.java", "stars": "18", "class_props": {"extends": null, "implements": ["ExecutorLoader"], "modifiers": ["public"]}}, {"id": 60517, "method_name": "getHistoryRecoverTotal", "class_name": "JdbcExecutorLoader", "params": [], "throws": ["ExecutorManagerException"], "modifiers": ["public"], "return_type": "int", "snippet": "  public int getHistoryRecoverTotal() throws ExecutorManagerException{\n    return this.executionRecoverDao.getHistoryRecoverTotal();\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/JdbcExecutorLoader.java", "stars": "18", "class_props": {"extends": null, "implements": ["ExecutorLoader"], "modifiers": ["public"]}}, {"id": 60518, "method_name": "getProjectLastExecutableFlow", "class_name": "JdbcExecutorLoader", "params": ["int", "String"], "throws": ["ExecutorManagerException"], "modifiers": ["public"], "return_type": "ExecutableFlow", "snippet": "  public ExecutableFlow getProjectLastExecutableFlow(int projectId, String flowId)\n      throws ExecutorManagerException{\n    List<ExecutableFlow> flows = this.executionFlowDao.getProjectLastExecutableFlow(projectId, flowId);\n    if(flows.size() > 0){\n      return flows.get(0);\n    }else{\n      return null;\n    }\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/JdbcExecutorLoader.java", "stars": "18", "class_props": {"extends": null, "implements": ["ExecutorLoader"], "modifiers": ["public"]}}, {"id": 60519, "method_name": "getUserRecoverHistoryTotal", "class_name": "JdbcExecutorLoader", "params": ["String"], "throws": ["ExecutorManagerException"], "modifiers": ["public"], "return_type": "int", "snippet": "  public int getUserRecoverHistoryTotal(final String userName) throws ExecutorManagerException{\n\n    return this.executionRecoverDao.getUserHistoryRecoverTotal(userName);\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/JdbcExecutorLoader.java", "stars": "18", "class_props": {"extends": null, "implements": ["ExecutorLoader"], "modifiers": ["public"]}}, {"id": 60520, "method_name": "getMaintainedHistoryRecoverTotal", "class_name": "JdbcExecutorLoader", "params": ["String", "List<Integer>"], "throws": ["ExecutorManagerException"], "modifiers": ["public"], "return_type": "int", "snippet": "  public int getMaintainedHistoryRecoverTotal(String username, List<Integer> maintainedProjectIds) throws ExecutorManagerException {\n    return this.executionRecoverDao.getMaintainedHistoryRecoverTotal(username, maintainedProjectIds);\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/JdbcExecutorLoader.java", "stars": "18", "class_props": {"extends": null, "implements": ["ExecutorLoader"], "modifiers": ["public"]}}, {"id": 60521, "method_name": "fetchAllLogs", "class_name": "JdbcExecutorLoader", "params": ["int", "String", "int"], "throws": ["ExecutorManagerException"], "modifiers": ["public"], "return_type": "LogData", "snippet": "  public LogData fetchAllLogs(final int execId, final String name, final int attempt) throws ExecutorManagerException {\n\n    return this.executionLogsDao.fetchAllLogs(execId, name, attempt);\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/JdbcExecutorLoader.java", "stars": "18", "class_props": {"extends": null, "implements": ["ExecutorLoader"], "modifiers": ["public"]}}, {"id": 60522, "method_name": "addExecutorFixed", "class_name": "JdbcExecutorLoader", "params": ["int", "String", "int"], "throws": ["ExecutorManagerException"], "modifiers": ["public"], "return_type": "Executor", "snippet": "  public Executor addExecutorFixed(final int id, final String host, final int port)\n      throws ExecutorManagerException {\n    return this.executorDao.addExecutorFixed(id, host, port);\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/JdbcExecutorLoader.java", "stars": "18", "class_props": {"extends": null, "implements": ["ExecutorLoader"], "modifiers": ["public"]}}, {"id": 60523, "method_name": "listAllLogFilter", "class_name": "JdbcExecutorLoader", "params": [], "throws": ["ExecutorManagerException"], "modifiers": ["public"], "return_type": "List<LogFilterEntity>", "snippet": "  public List<LogFilterEntity> listAllLogFilter() throws ExecutorManagerException {\n\n    return this.logFilterDao.listAllLogFilter();\n\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/JdbcExecutorLoader.java", "stars": "18", "class_props": {"extends": null, "implements": ["ExecutorLoader"], "modifiers": ["public"]}}, {"id": 60524, "method_name": "getExecHistoryTotal", "class_name": "JdbcExecutorLoader", "params": ["Map<String,String>"], "throws": ["ExecutorManagerException"], "modifiers": ["public"], "return_type": "int", "snippet": "  public int getExecHistoryTotal(final Map<String, String> filterMap) throws ExecutorManagerException{\n\n    return this.executionRecoverDao.getExecHistoryTotal(filterMap);\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/JdbcExecutorLoader.java", "stars": "18", "class_props": {"extends": null, "implements": ["ExecutorLoader"], "modifiers": ["public"]}}, {"id": 60525, "method_name": "getExecHistoryTotal", "class_name": "JdbcExecutorLoader", "params": ["String", "Map<String,String>", "List<Integer>"], "throws": ["ExecutorManagerException"], "modifiers": ["public"], "return_type": "int", "snippet": "  public int getExecHistoryTotal(String username, final Map<String, String> filterMap, List<Integer> projectIds) throws ExecutorManagerException{\n\n    return this.executionRecoverDao.getExecHistoryTotal(username, filterMap, projectIds);\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/JdbcExecutorLoader.java", "stars": "18", "class_props": {"extends": null, "implements": ["ExecutorLoader"], "modifiers": ["public"]}}, {"id": 60526, "method_name": "getMaintainedExecHistoryTotal", "class_name": "JdbcExecutorLoader", "params": ["String", "List<Integer>"], "throws": ["ExecutorManagerException"], "modifiers": ["public"], "return_type": "int", "snippet": "  public int getMaintainedExecHistoryTotal(String username, List<Integer> projectIds) throws ExecutorManagerException {\n    return this.executionRecoverDao.getMaintainedExecHistoryTotal(username, projectIds);\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/JdbcExecutorLoader.java", "stars": "18", "class_props": {"extends": null, "implements": ["ExecutorLoader"], "modifiers": ["public"]}}, {"id": 60527, "method_name": "getExecHistoryQuickSerachTotal", "class_name": "JdbcExecutorLoader", "params": ["Map<String,String>"], "throws": ["ExecutorManagerException"], "modifiers": ["public"], "return_type": "int", "snippet": "  public int getExecHistoryQuickSerachTotal(final Map<String, String> filterMap) throws ExecutorManagerException{\n\n    return this.executionRecoverDao.getExecHistoryQuickSerachTotal(filterMap);\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/JdbcExecutorLoader.java", "stars": "18", "class_props": {"extends": null, "implements": ["ExecutorLoader"], "modifiers": ["public"]}}, {"id": 60528, "method_name": "getMaintainedFlowsQuickSearchTotal", "class_name": "JdbcExecutorLoader", "params": ["String", "Map<String,String>", "List<Integer>"], "throws": ["ExecutorManagerException"], "modifiers": ["public"], "return_type": "int", "snippet": "  public int getMaintainedFlowsQuickSearchTotal(String username, final Map<String, String> filterMap, List<Integer> projectIds)\n          throws ExecutorManagerException {\n    return this.executionRecoverDao.getMaintainedFlowsQuickSearchTotal(username, filterMap, projectIds);\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/JdbcExecutorLoader.java", "stars": "18", "class_props": {"extends": null, "implements": ["ExecutorLoader"], "modifiers": ["public"]}}, {"id": 60529, "method_name": "fetchUserFlowHistoryByProjectIdAndFlowId", "class_name": "JdbcExecutorLoader", "params": ["int", "String", "int", "int", "String"], "throws": ["ExecutorManagerException"], "modifiers": ["public"], "return_type": "List<ExecutableFlow>", "snippet": "  public List<ExecutableFlow> fetchUserFlowHistoryByProjectIdAndFlowId(final int projectId, final String flowId,\n      final int skip, final int num, final String userName) throws ExecutorManagerException {\n    return this.executionFlowDao.fetchUserFlowHistoryByProjectIdAndFlowId(projectId, flowId, skip, num, userName);\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/JdbcExecutorLoader.java", "stars": "18", "class_props": {"extends": null, "implements": ["ExecutorLoader"], "modifiers": ["public"]}}, {"id": 60530, "method_name": "fetchNumUserExecutableFlowsByProjectIdAndFlowId", "class_name": "JdbcExecutorLoader", "params": ["int", "String", "String"], "throws": ["ExecutorManagerException"], "modifiers": ["public"], "return_type": "int", "snippet": "  public int fetchNumUserExecutableFlowsByProjectIdAndFlowId(final int projectId, final String flowId, final String userName)\n      throws ExecutorManagerException {\n    return this.numExecutionsDao.fetchNumUserExecutableFlowsByProjectIdAndFlowId(projectId, flowId, userName);\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/JdbcExecutorLoader.java", "stars": "18", "class_props": {"extends": null, "implements": ["ExecutorLoader"], "modifiers": ["public"]}}, {"id": 60531, "method_name": "getUserExecHistoryTotal", "class_name": "JdbcExecutorLoader", "params": ["Map<String,String>"], "throws": ["ExecutorManagerException"], "modifiers": ["public"], "return_type": "int", "snippet": "  public int getUserExecHistoryTotal(final Map<String, String> filterMap) throws ExecutorManagerException{\n\n    return this.executionRecoverDao.getUserExecHistoryTotal(filterMap);\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/JdbcExecutorLoader.java", "stars": "18", "class_props": {"extends": null, "implements": ["ExecutorLoader"], "modifiers": ["public"]}}, {"id": 60532, "method_name": "getUserExecHistoryQuickSerachTotal", "class_name": "JdbcExecutorLoader", "params": ["Map<String,String>"], "throws": ["ExecutorManagerException"], "modifiers": ["public"], "return_type": "int", "snippet": "  public int getUserExecHistoryQuickSerachTotal(final Map<String, String> filterMap) throws ExecutorManagerException{\n\n    return this.executionRecoverDao.getUserExecHistoryQuickSerachTotal(filterMap);\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/JdbcExecutorLoader.java", "stars": "18", "class_props": {"extends": null, "implements": ["ExecutorLoader"], "modifiers": ["public"]}}, {"id": 60533, "method_name": "fetchUserFlowHistory", "class_name": "JdbcExecutorLoader", "params": ["String", "String", "String", "String", "String", "String", "long", "long", "int", "int", "int"], "throws": ["ExecutorManagerException"], "modifiers": ["public"], "return_type": "List<ExecutableFlow>", "snippet": "  public List<ExecutableFlow> fetchUserFlowHistory(final String loginUser, final String projContain,\n      final String flowContains,final String execIdContain, final String userNameContains, final String status, final long startTime,\n      final long endTime, final int skip, final int num, final int flowType) throws ExecutorManagerException {\n    return this.executionFlowDao.fetchUserFlowHistory(loginUser, projContain, flowContains, execIdContain,\n        userNameContains, status, startTime, endTime, skip, num, flowType);\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/JdbcExecutorLoader.java", "stars": "18", "class_props": {"extends": null, "implements": ["ExecutorLoader"], "modifiers": ["public"]}}, {"id": 60534, "method_name": "getTodayExecutableFlowData", "class_name": "JdbcExecutorLoader", "params": ["String"], "throws": ["ExecutorManagerException"], "modifiers": ["public"], "return_type": "List<ExecutableFlow>", "snippet": "  public List<ExecutableFlow> getTodayExecutableFlowData(final String userName)\n      throws ExecutorManagerException{\n\n    return this.executionFlowDao.getTodayExecutableFlowData(userName);\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/JdbcExecutorLoader.java", "stars": "18", "class_props": {"extends": null, "implements": ["ExecutorLoader"], "modifiers": ["public"]}}, {"id": 60535, "method_name": "getRealTimeExecFlowData", "class_name": "JdbcExecutorLoader", "params": ["String"], "throws": ["ExecutorManagerException"], "modifiers": ["public"], "return_type": "List<ExecutableFlow>", "snippet": "  public List<ExecutableFlow> getRealTimeExecFlowData(final String userName)\n      throws ExecutorManagerException{\n\n    return this.executionFlowDao.getRealTimeExecFlowDataDao(userName);\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/JdbcExecutorLoader.java", "stars": "18", "class_props": {"extends": null, "implements": ["ExecutorLoader"], "modifiers": ["public"]}}, {"id": 60536, "method_name": "getTodayExecutableFlowDataNew", "class_name": "JdbcExecutorLoader", "params": ["String"], "throws": ["ExecutorManagerException"], "modifiers": ["public"], "return_type": "List<ExecutableFlow>", "snippet": "  public List<ExecutableFlow> getTodayExecutableFlowDataNew(String userName) throws ExecutorManagerException {\n    return this.executionFlowDao.getTodayExecutableFlowDataNew(userName);\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/JdbcExecutorLoader.java", "stars": "18", "class_props": {"extends": null, "implements": ["ExecutorLoader"], "modifiers": ["public"]}}, {"id": 60537, "method_name": "getTodayFlowRunTimesByFlowId", "class_name": "JdbcExecutorLoader", "params": ["String", "String", "String"], "throws": ["ExecutorManagerException"], "modifiers": ["public"], "return_type": "Integer", "snippet": "  public Integer getTodayFlowRunTimesByFlowId(final String projectId, final String flowId, final String usename) throws ExecutorManagerException{\n    return this.executionFlowDao.getTodayFlowRunTimesByFlowId(projectId, flowId, usename);\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/JdbcExecutorLoader.java", "stars": "18", "class_props": {"extends": null, "implements": ["ExecutorLoader"], "modifiers": ["public"]}}, {"id": 60538, "method_name": "fetchHistoryRecoverFlows", "class_name": "JdbcExecutorLoader", "params": [], "throws": ["ExecutorManagerException"], "modifiers": ["public"], "return_type": "List<ExecutionRecover>", "snippet": "  public List<ExecutionRecover> fetchHistoryRecoverFlows() throws ExecutorManagerException {\n    return this.executionRecoverDao.fetchHistoryRecover();\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/JdbcExecutorLoader.java", "stars": "18", "class_props": {"extends": null, "implements": ["ExecutorLoader"], "modifiers": ["public"]}}, {"id": 60539, "method_name": "getExecutorIdsBySubmitUser", "class_name": "JdbcExecutorLoader", "params": ["String"], "throws": ["ExecutorManagerException"], "modifiers": ["public"], "return_type": "List<Integer>", "snippet": "  public List<Integer> getExecutorIdsBySubmitUser(String submitUser) throws ExecutorManagerException {\n    return departmentGroupDao.fetchExecutorsIdSBySubmitUser(submitUser);\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/JdbcExecutorLoader.java", "stars": "18", "class_props": {"extends": null, "implements": ["ExecutorLoader"], "modifiers": ["public"]}}, {"id": 60540, "method_name": "fetchAllDepartmentGroup", "class_name": "JdbcExecutorLoader", "params": [], "throws": ["ExecutorManagerException"], "modifiers": ["public"], "return_type": "List<DepartmentGroup>", "snippet": "  public List<DepartmentGroup> fetchAllDepartmentGroup() throws ExecutorManagerException {\n    return departmentGroupDao.fetchAllDepartmentGroup();\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/JdbcExecutorLoader.java", "stars": "18", "class_props": {"extends": null, "implements": ["ExecutorLoader"], "modifiers": ["public"]}}, {"id": 60541, "method_name": "addDepartmentGroup", "class_name": "JdbcExecutorLoader", "params": ["DepartmentGroup"], "throws": ["ExecutorManagerException"], "modifiers": ["public"], "return_type": "void", "snippet": "  public void addDepartmentGroup(DepartmentGroup departmentGroup) throws ExecutorManagerException {\n    departmentGroupDao.addDepartmentGroup(departmentGroup);\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/JdbcExecutorLoader.java", "stars": "18", "class_props": {"extends": null, "implements": ["ExecutorLoader"], "modifiers": ["public"]}}, {"id": 60542, "method_name": "checkGroupNameIsExist", "class_name": "JdbcExecutorLoader", "params": ["DepartmentGroup"], "throws": ["ExecutorManagerException"], "modifiers": ["public"], "return_type": "boolean", "snippet": "  public boolean checkGroupNameIsExist(DepartmentGroup departmentGroup) throws ExecutorManagerException {\n    return departmentGroupDao.checkGroupNameIsExist(departmentGroup);\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/JdbcExecutorLoader.java", "stars": "18", "class_props": {"extends": null, "implements": ["ExecutorLoader"], "modifiers": ["public"]}}, {"id": 60543, "method_name": "checkExecutorIsUsed", "class_name": "JdbcExecutorLoader", "params": ["int"], "throws": ["ExecutorManagerException"], "modifiers": ["public"], "return_type": "boolean", "snippet": "  public boolean checkExecutorIsUsed(int executorId) throws ExecutorManagerException {\n    return departmentGroupDao.checkExecutorIsUsed(executorId);\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/JdbcExecutorLoader.java", "stars": "18", "class_props": {"extends": null, "implements": ["ExecutorLoader"], "modifiers": ["public"]}}, {"id": 60544, "method_name": "deleteDepartmentGroup", "class_name": "JdbcExecutorLoader", "params": ["DepartmentGroup"], "throws": ["ExecutorManagerException"], "modifiers": ["public"], "return_type": "int", "snippet": "  public int deleteDepartmentGroup(DepartmentGroup departmentGroup) throws ExecutorManagerException {\n    return departmentGroupDao.deleteDepartmentGroup(departmentGroup);\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/JdbcExecutorLoader.java", "stars": "18", "class_props": {"extends": null, "implements": ["ExecutorLoader"], "modifiers": ["public"]}}, {"id": 60545, "method_name": "updateDepartmentGroup", "class_name": "JdbcExecutorLoader", "params": ["DepartmentGroup"], "throws": ["ExecutorManagerException"], "modifiers": ["public"], "return_type": "int", "snippet": "  public int updateDepartmentGroup(DepartmentGroup departmentGroup) throws ExecutorManagerException {\n    return departmentGroupDao.updateDepartmentGroup(departmentGroup);\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/JdbcExecutorLoader.java", "stars": "18", "class_props": {"extends": null, "implements": ["ExecutorLoader"], "modifiers": ["public"]}}, {"id": 60546, "method_name": "fetchDepartmentGroupById", "class_name": "JdbcExecutorLoader", "params": ["Integer"], "throws": ["ExecutorManagerException"], "modifiers": ["public"], "return_type": "DepartmentGroup", "snippet": "  public DepartmentGroup fetchDepartmentGroupById(Integer id) throws ExecutorManagerException {\n    return departmentGroupDao.fetchDepartmentGroupById(id);\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/JdbcExecutorLoader.java", "stars": "18", "class_props": {"extends": null, "implements": ["ExecutorLoader"], "modifiers": ["public"]}}, {"id": 60547, "method_name": "groupIdIsExist", "class_name": "JdbcExecutorLoader", "params": ["DepartmentGroup"], "throws": ["ExecutorManagerException"], "modifiers": ["public"], "return_type": "int", "snippet": "  public int groupIdIsExist(DepartmentGroup departmentGroup) throws ExecutorManagerException {\n    return departmentGroupDao.groupIdIsExist(departmentGroup);\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/JdbcExecutorLoader.java", "stars": "18", "class_props": {"extends": null, "implements": ["ExecutorLoader"], "modifiers": ["public"]}}, {"id": 60548, "method_name": "addUserVariable", "class_name": "JdbcExecutorLoader", "params": ["UserVariable"], "throws": ["ExecutorManagerException"], "modifiers": ["public"], "return_type": "void", "snippet": "  public void addUserVariable(UserVariable userVariable) throws ExecutorManagerException {\n    this.userVariableDao.addUserVariable(userVariable);\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/JdbcExecutorLoader.java", "stars": "18", "class_props": {"extends": null, "implements": ["ExecutorLoader"], "modifiers": ["public"]}}, {"id": 60549, "method_name": "deleteUserVariable", "class_name": "JdbcExecutorLoader", "params": ["UserVariable"], "throws": ["ExecutorManagerException"], "modifiers": ["public"], "return_type": "int", "snippet": "  public int deleteUserVariable(UserVariable variable) throws ExecutorManagerException {\n    return this.userVariableDao.deleteUserVariable(variable);\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/JdbcExecutorLoader.java", "stars": "18", "class_props": {"extends": null, "implements": ["ExecutorLoader"], "modifiers": ["public"]}}, {"id": 60550, "method_name": "updateUserVariable", "class_name": "JdbcExecutorLoader", "params": ["UserVariable"], "throws": ["ExecutorManagerException"], "modifiers": ["public"], "return_type": "int", "snippet": "  public int updateUserVariable(UserVariable userVariable) throws ExecutorManagerException {\n    return this.userVariableDao.updateUserVariable(userVariable);\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/JdbcExecutorLoader.java", "stars": "18", "class_props": {"extends": null, "implements": ["ExecutorLoader"], "modifiers": ["public"]}}, {"id": 60551, "method_name": "fetchAllUserVariable", "class_name": "JdbcExecutorLoader", "params": ["UserVariable"], "throws": ["ExecutorManagerException"], "modifiers": ["public"], "return_type": "List<UserVariable>", "snippet": "  public List<UserVariable> fetchAllUserVariable(UserVariable userVariable) throws ExecutorManagerException {\n    return this.userVariableDao.fetchAllUserVariable(userVariable);\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/JdbcExecutorLoader.java", "stars": "18", "class_props": {"extends": null, "implements": ["ExecutorLoader"], "modifiers": ["public"]}}, {"id": 60552, "method_name": "getUserVariableById", "class_name": "JdbcExecutorLoader", "params": ["Integer"], "throws": ["ExecutorManagerException"], "modifiers": ["public"], "return_type": "UserVariable", "snippet": "  public UserVariable getUserVariableById(Integer id) throws ExecutorManagerException {\n    return this.userVariableDao.getUserVariableById(id);\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/JdbcExecutorLoader.java", "stars": "18", "class_props": {"extends": null, "implements": ["ExecutorLoader"], "modifiers": ["public"]}}, {"id": 60553, "method_name": "getUserVariableByName", "class_name": "JdbcExecutorLoader", "params": ["String"], "throws": ["ExecutorManagerException"], "modifiers": ["public"], "return_type": "Map<String,String>", "snippet": "  public Map<String, String> getUserVariableByName(String userName) throws ExecutorManagerException {\n    return this.userVariableDao.getUserVariableByName(userName);\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/JdbcExecutorLoader.java", "stars": "18", "class_props": {"extends": null, "implements": ["ExecutorLoader"], "modifiers": ["public"]}}, {"id": 60554, "method_name": "findWtssUserByName", "class_name": "JdbcExecutorLoader", "params": ["String"], "throws": ["ExecutorManagerException"], "modifiers": ["public"], "return_type": "Integer", "snippet": "  public Integer findWtssUserByName(String name) throws ExecutorManagerException {\n    return this.userVariableDao.findWtssUserByName(name);\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/JdbcExecutorLoader.java", "stars": "18", "class_props": {"extends": null, "implements": ["ExecutorLoader"], "modifiers": ["public"]}}, {"id": 60555, "method_name": "getWtssUserTotal", "class_name": "JdbcExecutorLoader", "params": [], "throws": ["ExecutorManagerException"], "modifiers": ["public"], "return_type": "Integer", "snippet": "  public Integer getWtssUserTotal() throws ExecutorManagerException {\n    return this.userVariableDao.getWtssUserTotal();\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/JdbcExecutorLoader.java", "stars": "18", "class_props": {"extends": null, "implements": ["ExecutorLoader"], "modifiers": ["public"]}}, {"id": 60556, "method_name": "findAllWtssUserPageList", "class_name": "JdbcExecutorLoader", "params": ["String", "int", "int"], "throws": ["ExecutorManagerException"], "modifiers": ["public"], "return_type": "List<WtssUser>", "snippet": "  public List<WtssUser> findAllWtssUserPageList(String searchName, int pageNum, int pageSize) throws ExecutorManagerException {\n    return this.userVariableDao.findAllWtssUserPageList(searchName, pageNum, pageSize);\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/JdbcExecutorLoader.java", "stars": "18", "class_props": {"extends": null, "implements": ["ExecutorLoader"], "modifiers": ["public"]}}, {"id": 60557, "method_name": "fetchAllUserVariableByOwnerDepartment", "class_name": "JdbcExecutorLoader", "params": ["Integer"], "throws": ["ExecutorManagerException"], "modifiers": ["public"], "return_type": "List<UserVariable>", "snippet": "  public List<UserVariable> fetchAllUserVariableByOwnerDepartment(Integer departmentId) throws ExecutorManagerException {\n\n    return this.userVariableDao.fetchAllUserVariableByOwnerDepartment(departmentId);\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/JdbcExecutorLoader.java", "stars": "18", "class_props": {"extends": null, "implements": ["ExecutorLoader"], "modifiers": ["public"]}}, {"id": 60558, "method_name": "compile", "class_name": "AndExpression", "params": ["GScriptCompiler"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void compile(GScriptCompiler c) {\n\t\tsuper.compile(c);\n\t\tc.code.add(GVM.AND);\n\t}", "url": "https://raw.githubusercontent.com/geertvos/gs-lang/master/src/main/java/net/geertvos/gvm/ast/AndExpression.java", "stars": "17", "class_props": {"extends": "TwoArgumentExpression", "implements": null, "modifiers": ["public"]}}, {"id": 60559, "method_name": "executeProcedure", "class_name": "PaeoniaExplosionProcedure", "params": ["java"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "\tpublic static void executeProcedure(java.util.HashMap<String, Object> dependencies) {\n\t\tif (dependencies.get(\"x\") == null) {\n\t\t\tSystem.err.println(\"Failed to load dependency x for procedure PaeoniaExplosion!\");\n\t\t\treturn;\n\t\t}\n\t\tif (dependencies.get(\"y\") == null) {\n\t\t\tSystem.err.println(\"Failed to load dependency y for procedure PaeoniaExplosion!\");\n\t\t\treturn;\n\t\t}\n\t\tif (dependencies.get(\"z\") == null) {\n\t\t\tSystem.err.println(\"Failed to load dependency z for procedure PaeoniaExplosion!\");\n\t\t\treturn;\n\t\t}\n\t\tif (dependencies.get(\"world\") == null) {\n\t\t\tSystem.err.println(\"Failed to load dependency world for procedure PaeoniaExplosion!\");\n\t\t\treturn;\n\t\t}\n\t\tint x = (int) dependencies.get(\"x\");\n\t\tint y = (int) dependencies.get(\"y\");\n\t\tint z = (int) dependencies.get(\"z\");\n\t\tWorld world = (World) dependencies.get(\"world\");\n\t\tif (!world.isRemote) {\n\t\t\tItemEntity entityToSpawn = new ItemEntity(world, x, y, z, new ItemStack(PaeoniaBlock.block, (int) (1)));\n\t\t\tentityToSpawn.setPickupDelay(10);\n\t\t\tworld.addEntity(entityToSpawn);\n\t\t}\n\t\tif (!world.isRemote) {\n\t\t\tItemEntity entityToSpawn = new ItemEntity(world, x, y, z, new ItemStack(Items.FLOWER_POT, (int) (1)));\n\t\t\tentityToSpawn.setPickupDelay(10);\n\t\t\tworld.addEntity(entityToSpawn);\n\t\t}\n\t}", "url": "https://raw.githubusercontent.com/KarogathModdingStudios/Enhanced-Vanilla-1.15/master/src/main/java/com/karogath/enhancedvanilla/procedures/PaeoniaExplosionProcedure.java", "stars": "2", "class_props": {"extends": "EnhancedVanillaElements", "implements": null, "modifiers": ["public"]}}, {"id": 60560, "method_name": "accueil_devrait_retourner_la_page_d_accueil_de_l_application_quand_le_cookie_code_postal_n_est_pas_present", "class_name": "SaisieIdentiteRemettantControllerTest", "params": [], "throws": ["Exception"], "modifiers": [], "return_type": "void", "snippet": "    void accueil_devrait_retourner_la_page_d_accueil_de_l_application_quand_le_cookie_code_postal_n_est_pas_present() throws Exception {\n        // Given\n        Cookie cookieTypeRemettant = new Cookie(NOM_COOKIE_TYPE_REMETTANT, TYPE_REMETTANT);\n\n        // When Then\n        mockMvc.perform(MockMvcRequestBuilders.get(\"/\")\n                .cookie(cookieTypeRemettant))\n                .andExpect(view().name(\"accueil\"))\n                .andExpect(status().isOk())\n                .andExpect(content().string(containsString(\"\u00c9tapes \u00e0 suivre afin de transmettre les masques\")));\n    }", "url": "https://raw.githubusercontent.com/LAB-MI/remise-masques-covid-19/master/src/test/java/fr/gouv/interieur/dmgp/remettant/application/ui/SaisieIdentiteRemettantControllerTest.java", "stars": "5", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 60561, "method_name": "accueil_devrait_retourner_la_page_d_accueil_de_l_application_quand_le_cookie_type_remettant_n_est_pas_present", "class_name": "SaisieIdentiteRemettantControllerTest", "params": [], "throws": ["Exception"], "modifiers": [], "return_type": "void", "snippet": "    void accueil_devrait_retourner_la_page_d_accueil_de_l_application_quand_le_cookie_type_remettant_n_est_pas_present() throws Exception {\n        // Given\n        Cookie cookieCodePostal = new Cookie(NOM_COOKIE_CODE_POSTAL_REMETTANT, CODE_POSTAL);\n\n        // When Then\n        mockMvc.perform(MockMvcRequestBuilders.get(\"/\")\n                .cookie(cookieCodePostal))\n                .andExpect(view().name(\"accueil\"))\n                .andExpect(status().isOk())\n                .andExpect(content().string(containsString(\"\u00c9tapes \u00e0 suivre afin de transmettre les masques\")));\n    }", "url": "https://raw.githubusercontent.com/LAB-MI/remise-masques-covid-19/master/src/test/java/fr/gouv/interieur/dmgp/remettant/application/ui/SaisieIdentiteRemettantControllerTest.java", "stars": "5", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 60562, "method_name": "accueil_devrait_rediriger_vers_la_page_de_saisie_d_identite_quand_les_cookies_sont_presents", "class_name": "SaisieIdentiteRemettantControllerTest", "params": [], "throws": ["Exception"], "modifiers": [], "return_type": "void", "snippet": "    void accueil_devrait_rediriger_vers_la_page_de_saisie_d_identite_quand_les_cookies_sont_presents() throws Exception {\n        // Given\n        Cookie cookieCodePostal = new Cookie(NOM_COOKIE_CODE_POSTAL_REMETTANT, CODE_POSTAL);\n        Cookie cookieTypeRemettant = new Cookie(NOM_COOKIE_TYPE_REMETTANT, TYPE_REMETTANT);\n\n        // When Then\n        mockMvc.perform(MockMvcRequestBuilders.get(\"/\")\n                .cookie(cookieCodePostal, cookieTypeRemettant))\n                .andExpect(view().name(\"redirect:/saisie-identite-demandeur\"))\n                .andExpect(status().is3xxRedirection());\n    }", "url": "https://raw.githubusercontent.com/LAB-MI/remise-masques-covid-19/master/src/test/java/fr/gouv/interieur/dmgp/remettant/application/ui/SaisieIdentiteRemettantControllerTest.java", "stars": "5", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 60563, "method_name": "onCreateView", "class_name": "GalleryFragment", "params": ["LayoutInflater", "ViewGroup", "Bundle"], "throws": null, "modifiers": ["public"], "return_type": "View", "snippet": "    public View onCreateView(@NonNull LayoutInflater inflater,\n                             ViewGroup container, Bundle savedInstanceState) {\n        galleryViewModel =\n                ViewModelProviders.of(this).get(GalleryViewModel.class);\n        View root = inflater.inflate(R.layout.fragment_gallery, container, false);\n        final TextView textView = root.findViewById(R.id.text_gallery);\n        galleryViewModel.getText().observe(getViewLifecycleOwner(), new Observer<String>() {\n            @Override\n            public void onChanged(@Nullable String s) {\n                textView.setText(s);\n            }\n        });\n        return root;\n    }", "url": "https://raw.githubusercontent.com/dahilu/BeautyOverview/master/app/src/main/java/com/example/beautyoverview/ui/gallery/GalleryFragment.java", "stars": "1", "class_props": {"extends": "Fragment", "implements": null, "modifiers": ["public"]}}, {"id": 60564, "method_name": "main", "class_name": "Demo05Recurison", "params": ["String"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void main(String[] args) {\n        File file = new File(\"c:\\\\abc\");\n        getAllFile(file);\n    }", "url": "https://raw.githubusercontent.com/liuminchao123/JavaWeb_Learning/master/02.%20java/Java/%E9%BB%91%E9%A9%AC%E6%95%99%E7%A8%8B/19.%E3%80%90File%E7%B1%BB%E3%80%81%E9%80%92%E5%BD%92%E3%80%91-%E7%AC%94%E8%AE%B0/code/08_FileAndRecursion/src/com/itheima/demo02/Recursion/Demo05Recurison.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 60565, "method_name": "getAllFile", "class_name": "Demo05Recurison", "params": ["File"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void getAllFile(File dir){\n        //System.out.println(dir);//\u6253\u5370\u88ab\u904d\u5386\u7684\u76ee\u5f55\u540d\u79f0\n        File[] files = dir.listFiles();\n        for (File f : files) {\n            //\u5bf9\u904d\u5386\u5f97\u5230\u7684File\u5bf9\u8c61f\u8fdb\u884c\u5224\u65ad,\u5224\u65ad\u662f\u5426\u662f\u6587\u4ef6\u5939\n            if(f.isDirectory()){\n                //f\u662f\u4e00\u4e2a\u6587\u4ef6\u5939,\u5219\u7ee7\u7eed\u904d\u5386\u8fd9\u4e2a\u6587\u4ef6\u5939\n                //\u6211\u4eec\u53d1\u73b0getAllFile\u65b9\u6cd5\u5c31\u662f\u4f20\u9012\u6587\u4ef6\u5939,\u904d\u5386\u6587\u4ef6\u5939\u7684\u65b9\u6cd5\n                //\u6240\u4ee5\u76f4\u63a5\u8c03\u7528getAllFile\u65b9\u6cd5\u5373\u53ef:\u9012\u5f52(\u81ea\u5df1\u8c03\u7528\u81ea\u5df1)\n                getAllFile(f);\n            }else{\n                //f\u662f\u4e00\u4e2a\u6587\u4ef6,\u76f4\u63a5\u6253\u5370\u5373\u53ef\n                /*\n                    c:\\\\abc\\\\abc.java\n                    \u53ea\u8981.java\u7ed3\u5c3e\u7684\u6587\u4ef6\n                    1.\u628aFile\u5bf9\u8c61f,\u8f6c\u4e3a\u5b57\u7b26\u4e32\u5bf9\u8c61\n                 */\n                //String name = f.getName();//abc.java\n                //String path = f.getPath();//c:\\\\abc\\\\abc.java\n                //String s = f.toString();//c:\\\\abc\\\\abc.java\n\n                //\u628a\u5b57\u7b26\u4e32,\u8f6c\u6362\u4e3a\u5c0f\u5199\n                //s = s.toLowerCase();\n\n                //2.\u8c03\u7528String\u7c7b\u4e2d\u7684\u65b9\u6cd5endsWith\u5224\u65ad\u5b57\u7b26\u4e32\u662f\u5426\u662f\u4ee5.java\u7ed3\u5c3e\n                //boolean b = s.endsWith(\".java\");\n\n                //3.\u5982\u679c\u662f\u4ee5.java\u7ed3\u5c3e\u7684\u6587\u4ef6,\u5219\u8f93\u51fa\n                /*if(b){\n                    System.out.println(f);\n                }*/\n\n                if(f.getName().toLowerCase().endsWith(\".java\")){\n                    System.out.println(f);\n                }\n            }\n        }\n    }", "url": "https://raw.githubusercontent.com/liuminchao123/JavaWeb_Learning/master/02.%20java/Java/%E9%BB%91%E9%A9%AC%E6%95%99%E7%A8%8B/19.%E3%80%90File%E7%B1%BB%E3%80%81%E9%80%92%E5%BD%92%E3%80%91-%E7%AC%94%E8%AE%B0/code/08_FileAndRecursion/src/com/itheima/demo02/Recursion/Demo05Recurison.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 60566, "method_name": "getConfiguration", "class_name": "AbstractContainerCommunicator", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Configuration", "snippet": "    public Configuration getConfiguration() {\n        return this.configuration;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/engine/datax/datax-core/src/main/java/com/alibaba/datax/core/statistics/container/communicator/AbstractContainerCommunicator.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 60567, "method_name": "getCollector", "class_name": "AbstractContainerCommunicator", "params": [], "throws": null, "modifiers": ["public"], "return_type": "AbstractCollector", "snippet": "    public AbstractCollector getCollector() {\n        return collector;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/engine/datax/datax-core/src/main/java/com/alibaba/datax/core/statistics/container/communicator/AbstractContainerCommunicator.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 60568, "method_name": "getReporter", "class_name": "AbstractContainerCommunicator", "params": [], "throws": null, "modifiers": ["public"], "return_type": "AbstractReporter", "snippet": "    public AbstractReporter getReporter() {\n        return reporter;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/engine/datax/datax-core/src/main/java/com/alibaba/datax/core/statistics/container/communicator/AbstractContainerCommunicator.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 60569, "method_name": "setCollector", "class_name": "AbstractContainerCommunicator", "params": ["AbstractCollector"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setCollector(AbstractCollector collector) {\n        this.collector = collector;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/engine/datax/datax-core/src/main/java/com/alibaba/datax/core/statistics/container/communicator/AbstractContainerCommunicator.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 60570, "method_name": "setReporter", "class_name": "AbstractContainerCommunicator", "params": ["AbstractReporter"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setReporter(AbstractReporter reporter) {\n        this.reporter = reporter;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/engine/datax/datax-core/src/main/java/com/alibaba/datax/core/statistics/container/communicator/AbstractContainerCommunicator.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 60571, "method_name": "getJobId", "class_name": "AbstractContainerCommunicator", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Long", "snippet": "    public Long getJobId() {\n        return jobId;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/engine/datax/datax-core/src/main/java/com/alibaba/datax/core/statistics/container/communicator/AbstractContainerCommunicator.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 60572, "method_name": "registerCommunication", "class_name": "AbstractContainerCommunicator", "params": ["List<Configuration>"], "throws": null, "modifiers": ["public", "abstract"], "return_type": "void", "snippet": "    public abstract void registerCommunication(List<Configuration> configurationList);\n\n    public abstract Communication collect();\n\n    public abstract void report(Communication communication);\n\n    public abstract State collectState();\n\n    public abstract Communication getCommunication(Integer id);\n\n    /**\n     * \u5f53 \u5b9e\u73b0\u662f TGContainerCommunicator \u65f6\uff0c\u8fd4\u56de\u7684 Map: key=taskId, value=Communication\n     * \u5f53 \u5b9e\u73b0\u662f JobContainerCommunicator \u65f6\uff0c\u8fd4\u56de\u7684 Map: key=taskGroupId, value=Communication\n     */\n    public abstract Map<Integer, Communication> getCommunicationMap();\n\n    public void resetCommunication(Integer id) {\n        Map<Integer, Communication> map = getCommunicationMap();\n        map.put(id, new Communication());\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/engine/datax/datax-core/src/main/java/com/alibaba/datax/core/statistics/container/communicator/AbstractContainerCommunicator.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 60573, "method_name": "collect", "class_name": "AbstractContainerCommunicator", "params": [], "throws": null, "modifiers": ["public", "abstract"], "return_type": "Communication", "snippet": "    public abstract Communication collect();\n\n    public abstract void report(Communication communication);\n\n    public abstract State collectState();\n\n    public abstract Communication getCommunication(Integer id);\n\n    /**\n     * \u5f53 \u5b9e\u73b0\u662f TGContainerCommunicator \u65f6\uff0c\u8fd4\u56de\u7684 Map: key=taskId, value=Communication\n     * \u5f53 \u5b9e\u73b0\u662f JobContainerCommunicator \u65f6\uff0c\u8fd4\u56de\u7684 Map: key=taskGroupId, value=Communication\n     */\n    public abstract Map<Integer, Communication> getCommunicationMap();\n\n    public void resetCommunication(Integer id) {\n        Map<Integer, Communication> map = getCommunicationMap();\n        map.put(id, new Communication());\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/engine/datax/datax-core/src/main/java/com/alibaba/datax/core/statistics/container/communicator/AbstractContainerCommunicator.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 60574, "method_name": "report", "class_name": "AbstractContainerCommunicator", "params": ["Communication"], "throws": null, "modifiers": ["public", "abstract"], "return_type": "void", "snippet": "    public abstract void report(Communication communication);\n\n    public abstract State collectState();\n\n    public abstract Communication getCommunication(Integer id);\n\n    /**\n     * \u5f53 \u5b9e\u73b0\u662f TGContainerCommunicator \u65f6\uff0c\u8fd4\u56de\u7684 Map: key=taskId, value=Communication\n     * \u5f53 \u5b9e\u73b0\u662f JobContainerCommunicator \u65f6\uff0c\u8fd4\u56de\u7684 Map: key=taskGroupId, value=Communication\n     */\n    public abstract Map<Integer, Communication> getCommunicationMap();\n\n    public void resetCommunication(Integer id) {\n        Map<Integer, Communication> map = getCommunicationMap();\n        map.put(id, new Communication());\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/engine/datax/datax-core/src/main/java/com/alibaba/datax/core/statistics/container/communicator/AbstractContainerCommunicator.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 60575, "method_name": "collectState", "class_name": "AbstractContainerCommunicator", "params": [], "throws": null, "modifiers": ["public", "abstract"], "return_type": "State", "snippet": "    public abstract State collectState();\n\n    public abstract Communication getCommunication(Integer id);\n\n    /**\n     * \u5f53 \u5b9e\u73b0\u662f TGContainerCommunicator \u65f6\uff0c\u8fd4\u56de\u7684 Map: key=taskId, value=Communication\n     * \u5f53 \u5b9e\u73b0\u662f JobContainerCommunicator \u65f6\uff0c\u8fd4\u56de\u7684 Map: key=taskGroupId, value=Communication\n     */\n    public abstract Map<Integer, Communication> getCommunicationMap();\n\n    public void resetCommunication(Integer id) {\n        Map<Integer, Communication> map = getCommunicationMap();\n        map.put(id, new Communication());\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/engine/datax/datax-core/src/main/java/com/alibaba/datax/core/statistics/container/communicator/AbstractContainerCommunicator.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 60576, "method_name": "getCommunication", "class_name": "AbstractContainerCommunicator", "params": ["Integer"], "throws": null, "modifiers": ["public", "abstract"], "return_type": "Communication", "snippet": "    public abstract Communication getCommunication(Integer id);\n\n    /**\n     * \u5f53 \u5b9e\u73b0\u662f TGContainerCommunicator \u65f6\uff0c\u8fd4\u56de\u7684 Map: key=taskId, value=Communication\n     * \u5f53 \u5b9e\u73b0\u662f JobContainerCommunicator \u65f6\uff0c\u8fd4\u56de\u7684 Map: key=taskGroupId, value=Communication\n     */\n    public abstract Map<Integer, Communication> getCommunicationMap();\n\n    public void resetCommunication(Integer id) {\n        Map<Integer, Communication> map = getCommunicationMap();\n        map.put(id, new Communication());\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/engine/datax/datax-core/src/main/java/com/alibaba/datax/core/statistics/container/communicator/AbstractContainerCommunicator.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 60577, "method_name": "getCommunicationMap", "class_name": "AbstractContainerCommunicator", "params": [], "throws": null, "modifiers": ["public", "abstract"], "return_type": "Map<Integer,Communication>", "snippet": "    public abstract Map<Integer, Communication> getCommunicationMap();\n\n    public void resetCommunication(Integer id) {\n        Map<Integer, Communication> map = getCommunicationMap();\n        map.put(id, new Communication());\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/engine/datax/datax-core/src/main/java/com/alibaba/datax/core/statistics/container/communicator/AbstractContainerCommunicator.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 60578, "method_name": "resetCommunication", "class_name": "AbstractContainerCommunicator", "params": ["Integer"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void resetCommunication(Integer id) {\n        Map<Integer, Communication> map = getCommunicationMap();\n        map.put(id, new Communication());\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/engine/datax/datax-core/src/main/java/com/alibaba/datax/core/statistics/container/communicator/AbstractContainerCommunicator.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 60579, "method_name": "reportVmInfo", "class_name": "AbstractContainerCommunicator", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void reportVmInfo() {\n        long now = System.currentTimeMillis();\n        //\u6bcf5\u5206\u949f\u6253\u5370\u4e00\u6b21\n        if (now - lastReportTime >= 300000) {\n            //\u5f53\u524d\u4ec5\u6253\u5370\n            if (vmInfo != null) {\n                vmInfo.getDelta(true);\n            }\n            lastReportTime = now;\n        }\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/engine/datax/datax-core/src/main/java/com/alibaba/datax/core/statistics/container/communicator/AbstractContainerCommunicator.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 60580, "method_name": "main", "class_name": "RtmWebApplication", "params": ["String"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void main(String[] args) {\n        SpringApplication.run(RtmWebApplication.class,args);\n    }", "url": "https://raw.githubusercontent.com/JeremyKinge/rtm/master/rtm-web/src/main/java/com/kingge/rtm/RtmWebApplication.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 60581, "method_name": "getMessage", "class_name": "TextMessage", "params": [], "throws": null, "modifiers": ["public"], "return_type": "IMessage", "snippet": "        public IMessage getMessage() {\n            return mMessage;\n        }", "url": "https://raw.githubusercontent.com/quite/mumla/master/app/src/main/java/se/lublin/mumla/service/IChatMessage.java", "stars": "9", "class_props": {"extends": null, "implements": ["IChatMessage"], "modifiers": []}}, {"id": 60582, "method_name": "getBody", "class_name": "TextMessage", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "        public String getBody() {\n            return mMessage.getMessage();\n        }", "url": "https://raw.githubusercontent.com/quite/mumla/master/app/src/main/java/se/lublin/mumla/service/IChatMessage.java", "stars": "9", "class_props": {"extends": null, "implements": ["IChatMessage"], "modifiers": []}}, {"id": 60583, "method_name": "getReceivedTime", "class_name": "TextMessage", "params": [], "throws": null, "modifiers": ["public"], "return_type": "long", "snippet": "        public long getReceivedTime() {\n            return mMessage.getReceivedTime();\n        }", "url": "https://raw.githubusercontent.com/quite/mumla/master/app/src/main/java/se/lublin/mumla/service/IChatMessage.java", "stars": "9", "class_props": {"extends": null, "implements": ["IChatMessage"], "modifiers": []}}, {"id": 60584, "method_name": "accept", "class_name": "TextMessage", "params": ["Visitor"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "        public void accept(Visitor visitor) {\n            visitor.visit(this);\n        }", "url": "https://raw.githubusercontent.com/quite/mumla/master/app/src/main/java/se/lublin/mumla/service/IChatMessage.java", "stars": "9", "class_props": {"extends": null, "implements": ["IChatMessage"], "modifiers": []}}, {"id": 60585, "method_name": "getType", "class_name": "InfoMessage", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Type", "snippet": "        public Type getType() {\n            return mType;\n        }", "url": "https://raw.githubusercontent.com/quite/mumla/master/app/src/main/java/se/lublin/mumla/service/IChatMessage.java", "stars": "9", "class_props": {"extends": null, "implements": ["IChatMessage"], "modifiers": []}}, {"id": 60586, "method_name": "getBody", "class_name": "InfoMessage", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "        public String getBody() {\n            return mBody;\n        }", "url": "https://raw.githubusercontent.com/quite/mumla/master/app/src/main/java/se/lublin/mumla/service/IChatMessage.java", "stars": "9", "class_props": {"extends": null, "implements": ["IChatMessage"], "modifiers": []}}, {"id": 60587, "method_name": "getReceivedTime", "class_name": "InfoMessage", "params": [], "throws": null, "modifiers": ["public"], "return_type": "long", "snippet": "        public long getReceivedTime() {\n            return mReceivedTime;\n        }", "url": "https://raw.githubusercontent.com/quite/mumla/master/app/src/main/java/se/lublin/mumla/service/IChatMessage.java", "stars": "9", "class_props": {"extends": null, "implements": ["IChatMessage"], "modifiers": []}}, {"id": 60588, "method_name": "accept", "class_name": "InfoMessage", "params": ["Visitor"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "        public void accept(Visitor visitor) {\n            visitor.visit(this);\n        }", "url": "https://raw.githubusercontent.com/quite/mumla/master/app/src/main/java/se/lublin/mumla/service/IChatMessage.java", "stars": "9", "class_props": {"extends": null, "implements": ["IChatMessage"], "modifiers": []}}, {"id": 60589, "method_name": "view_Per_Page_menu_should_have_following_options", "class_name": "ViewCalendarEventsStepDefinitions", "params": ["List<String>"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void view_Per_Page_menu_should_have_following_options(List<String> dataTable) {\n        System.out.println(\"Expected values: \" + dataTable);\n        Assert.assertEquals(dataTable, calendarEventsPage.getViewPerPageOptions());\n    }", "url": "https://raw.githubusercontent.com/CybertekSchool/Fall2019OnlineCucumberSelenium/master/src/test/java/com/vytrack/step_definitions/ViewCalendarEventsStepDefinitions.java", "stars": "26", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 60590, "method_name": "postHandle", "class_name": "CookieInterceptor", "params": ["HttpServletRequest", "HttpServletResponse", "Object", "ModelAndView"], "throws": ["Exception"], "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void postHandle(HttpServletRequest request, HttpServletResponse response, Object handler,\n\t\t\tModelAndView modelAndView) throws Exception {\n\n\t\t// cookie\n\t\tif (modelAndView!=null && request.getCookies()!=null && request.getCookies().length>0) {\n\t\t\tHashMap<String, Cookie> cookieMap = new HashMap<String, Cookie>();\n\t\t\tfor (Cookie ck : request.getCookies()) {\n\t\t\t\tcookieMap.put(ck.getName(), ck);\n\t\t\t}\n\t\t\tmodelAndView.addObject(\"cookieMap\", cookieMap);\n\t\t}\n\n\t\t// static method\n\t\tif (modelAndView != null) {\n\t\t\tmodelAndView.addObject(\"I18nUtil\", FtlUtil.generateStaticModel(I18nUtil.class.getName()));\n\t\t}\n\t\t\n\t\tsuper.postHandle(request, response, handler, modelAndView);\n\t}", "url": "https://raw.githubusercontent.com/miaoo92/xxl-job-mongo/master/src/main/java/com/avon/rga/controller/interceptor/CookieInterceptor.java", "stars": "1", "class_props": {"extends": "HandlerInterceptorAdapter", "implements": null, "modifiers": ["public"]}}, {"id": 60591, "method_name": "shouldSelectOne", "class_name": "SqlRunnerTest", "params": [], "throws": ["Exception"], "modifiers": [], "return_type": "void", "snippet": "  void shouldSelectOne() throws Exception {\n    DataSource ds = createUnpooledDataSource(JPETSTORE_PROPERTIES);\n    runScript(ds, JPETSTORE_DDL);\n    runScript(ds, JPETSTORE_DATA);\n    try (Connection connection = ds.getConnection()) {\n      SqlRunner exec = new SqlRunner(connection);\n      Map<String, Object> row = exec.selectOne(\"SELECT * FROM PRODUCT WHERE PRODUCTID = ?\", \"FI-SW-01\");\n      assertEquals(\"FI-SW-01\", row.get(\"PRODUCTID\"));\n    }\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/jdbc/SqlRunnerTest.java", "stars": "15", "class_props": {"extends": "BaseDataTest", "implements": null, "modifiers": []}}, {"id": 60592, "method_name": "shouldSelectList", "class_name": "SqlRunnerTest", "params": [], "throws": ["Exception"], "modifiers": [], "return_type": "void", "snippet": "  void shouldSelectList() throws Exception {\n    DataSource ds = createUnpooledDataSource(JPETSTORE_PROPERTIES);\n    runScript(ds, JPETSTORE_DDL);\n    runScript(ds, JPETSTORE_DATA);\n    try (Connection connection = ds.getConnection()) {\n      SqlRunner exec = new SqlRunner(connection);\n      List<Map<String, Object>> rows = exec.selectAll(\"SELECT * FROM PRODUCT\");\n      assertEquals(16, rows.size());\n    }\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/jdbc/SqlRunnerTest.java", "stars": "15", "class_props": {"extends": "BaseDataTest", "implements": null, "modifiers": []}}, {"id": 60593, "method_name": "shouldInsert", "class_name": "SqlRunnerTest", "params": [], "throws": ["Exception"], "modifiers": [], "return_type": "void", "snippet": "  void shouldInsert() throws Exception {\n    DataSource ds = createUnpooledDataSource(BLOG_PROPERTIES);\n    runScript(ds, BLOG_DDL);\n    try (Connection connection = ds.getConnection()) {\n      SqlRunner exec = new SqlRunner(connection);\n      exec.setUseGeneratedKeySupport(true);\n      int id = exec.insert(\"INSERT INTO author (username, password, email, bio) VALUES (?,?,?,?)\", \"someone\", \"******\", \"someone@apache.org\", Null.LONGVARCHAR);\n      Map<String, Object> row = exec.selectOne(\"SELECT * FROM author WHERE username = ?\", \"someone\");\n      connection.rollback();\n      assertTrue(SqlRunner.NO_GENERATED_KEY != id);\n      assertEquals(\"someone\", row.get(\"USERNAME\"));\n    }\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/jdbc/SqlRunnerTest.java", "stars": "15", "class_props": {"extends": "BaseDataTest", "implements": null, "modifiers": []}}, {"id": 60594, "method_name": "shouldUpdateCategory", "class_name": "SqlRunnerTest", "params": [], "throws": ["Exception"], "modifiers": [], "return_type": "void", "snippet": "  void shouldUpdateCategory() throws Exception {\n    DataSource ds = createUnpooledDataSource(JPETSTORE_PROPERTIES);\n    runScript(ds, JPETSTORE_DDL);\n    runScript(ds, JPETSTORE_DATA);\n    try (Connection connection = ds.getConnection()) {\n      SqlRunner exec = new SqlRunner(connection);\n      int count = exec.update(\"update product set category = ? where productid = ?\", \"DOGS\", \"FI-SW-01\");\n      Map<String, Object> row = exec.selectOne(\"SELECT * FROM PRODUCT WHERE PRODUCTID = ?\", \"FI-SW-01\");\n      assertEquals(\"DOGS\", row.get(\"CATEGORY\"));\n      assertEquals(1, count);\n    }\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/jdbc/SqlRunnerTest.java", "stars": "15", "class_props": {"extends": "BaseDataTest", "implements": null, "modifiers": []}}, {"id": 60595, "method_name": "shouldDeleteOne", "class_name": "SqlRunnerTest", "params": [], "throws": ["Exception"], "modifiers": [], "return_type": "void", "snippet": "  void shouldDeleteOne() throws Exception {\n    DataSource ds = createUnpooledDataSource(JPETSTORE_PROPERTIES);\n    runScript(ds, JPETSTORE_DDL);\n    runScript(ds, JPETSTORE_DATA);\n    try (Connection connection = ds.getConnection()) {\n      SqlRunner exec = new SqlRunner(connection);\n      int count = exec.delete(\"delete from item\");\n      List<Map<String, Object>> rows = exec.selectAll(\"SELECT * FROM ITEM\");\n      assertEquals(28, count);\n      assertEquals(0, rows.size());\n    }\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/jdbc/SqlRunnerTest.java", "stars": "15", "class_props": {"extends": "BaseDataTest", "implements": null, "modifiers": []}}, {"id": 60596, "method_name": "shouldDemonstrateDDLThroughRunMethod", "class_name": "SqlRunnerTest", "params": [], "throws": ["Exception"], "modifiers": [], "return_type": "void", "snippet": "  void shouldDemonstrateDDLThroughRunMethod() throws Exception {\n    DataSource ds = createUnpooledDataSource(JPETSTORE_PROPERTIES);\n    try (Connection connection = ds.getConnection()) {\n      SqlRunner exec = new SqlRunner(connection);\n      exec.run(\"CREATE TABLE BLAH(ID INTEGER)\");\n      exec.run(\"insert into BLAH values (1)\");\n      List<Map<String, Object>> rows = exec.selectAll(\"SELECT * FROM BLAH\");\n      exec.run(\"DROP TABLE BLAH\");\n      assertEquals(1, rows.size());\n    }\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/jdbc/SqlRunnerTest.java", "stars": "15", "class_props": {"extends": "BaseDataTest", "implements": null, "modifiers": []}}, {"id": 60597, "method_name": "setRecordSender", "class_name": "ReaderRunner", "params": ["RecordSender"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setRecordSender(RecordSender recordSender) {\n        this.recordSender = recordSender;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/engine/datax/datax-core/src/main/java/com/alibaba/datax/core/taskgroup/runner/ReaderRunner.java", "stars": "23", "class_props": {"extends": "AbstractRunner", "implements": ["Runnable"], "modifiers": ["public"]}}, {"id": 60598, "method_name": "setChannelOutput", "class_name": "ReaderRunner", "params": ["ChannelOutput"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setChannelOutput(ChannelOutput channelOutput){\n        this.channelOutput = channelOutput;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/engine/datax/datax-core/src/main/java/com/alibaba/datax/core/taskgroup/runner/ReaderRunner.java", "stars": "23", "class_props": {"extends": "AbstractRunner", "implements": ["Runnable"], "modifiers": ["public"]}}, {"id": 60599, "method_name": "run", "class_name": "ReaderRunner", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void run() {\n        Reader.Task taskReader = (Reader.Task) this.getPlugin();\n\n        //\u7edf\u8ba1waitWriterTime\uff0c\u5e76\u4e14\u5728finally\u624dend\u3002\n        PerfRecord channelWaitWrite = new PerfRecord(getTaskGroupId(), getTaskId(), PerfRecord.PHASE.WAIT_WRITE_TIME);\n        try {\n            channelWaitWrite.start();\n\n            LOG.debug(\"task reader starts to do init ...\");\n            PerfRecord initPerfRecord = new PerfRecord(getTaskGroupId(), getTaskId(), PerfRecord.PHASE.READ_TASK_INIT);\n            initPerfRecord.start();\n            taskReader.init();\n            initPerfRecord.end();\n\n            LOG.debug(\"task reader starts to do prepare ...\");\n            PerfRecord preparePerfRecord = new PerfRecord(getTaskGroupId(), getTaskId(), PerfRecord.PHASE.READ_TASK_PREPARE);\n            preparePerfRecord.start();\n            taskReader.prepare();\n            preparePerfRecord.end();\n\n            LOG.debug(\"task reader starts to read ...\");\n            PerfRecord dataPerfRecord = new PerfRecord(getTaskGroupId(), getTaskId(), PerfRecord.PHASE.READ_TASK_DATA);\n            dataPerfRecord.start();\n            if(null != recordSender) {\n                taskReader.startRead(recordSender);\n                recordSender.terminate();\n                dataPerfRecord.addCount(CommunicationTool.getTotalReadRecords(super.getRunnerCommunication()));\n            }else if(null != channelOutput){\n                taskReader.startRead(channelOutput);\n                channelOutput.close();\n            }\n            dataPerfRecord.addSize(CommunicationTool.getTotalReadBytes(super.getRunnerCommunication()));\n            dataPerfRecord.end();\n            LOG.debug(\"task reader starts to do post ...\");\n            PerfRecord postPerfRecord = new PerfRecord(getTaskGroupId(), getTaskId(), PerfRecord.PHASE.READ_TASK_POST);\n            postPerfRecord.start();\n            taskReader.post();\n            postPerfRecord.end();\n            // automatic flush\n            // super.markSuccess(); \u8fd9\u91cc\u4e0d\u80fd\u6807\u8bb0\u4e3a\u6210\u529f\uff0c\u6210\u529f\u7684\u6807\u5fd7\u7531 writerRunner \u6765\u6807\u5fd7\uff08\u5426\u5219\u53ef\u80fd\u5bfc\u81f4 reader \u5148\u7ed3\u675f\uff0c\u800c writer \u8fd8\u6ca1\u6709\u7ed3\u675f\u7684\u4e25\u91cd bug\uff09\n        } catch (Throwable e) {\n            if(shutdown){\n                //have been shutdown by task group container\n                return;\n            }\n            Throwable cause = e;\n            do{\n                if(cause instanceof InterruptedException || cause instanceof InterruptedIOException){\n                    this.getRunnerCommunication().setState(State.KILLED);\n                    return;\n                }\n                cause = cause.getCause();\n            }while(null != cause);\n            LOG.error(\"Reader runner Received Exceptions:\", e);\n            super.markFail(e);\n        } finally {\n            LOG.debug(\"task reader starts to do destroy ...\");\n            PerfRecord desPerfRecord = new PerfRecord(getTaskGroupId(), getTaskId(), PerfRecord.PHASE.READ_TASK_DESTROY);\n            desPerfRecord.start();\n            super.destroy();\n            desPerfRecord.end();\n\n            channelWaitWrite.end(super.getRunnerCommunication().getLongCounter(CommunicationTool.WAIT_WRITER_TIME));\n\n            long transformerUsedTime = super.getRunnerCommunication().getLongCounter(CommunicationTool.TRANSFORMER_USED_TIME);\n            if (transformerUsedTime > 0) {\n                PerfRecord transformerRecord = new PerfRecord(getTaskGroupId(), getTaskId(), PerfRecord.PHASE.TRANSFORMER_TIME);\n                transformerRecord.start();\n                transformerRecord.end(transformerUsedTime);\n            }\n        }\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/engine/datax/datax-core/src/main/java/com/alibaba/datax/core/taskgroup/runner/ReaderRunner.java", "stars": "23", "class_props": {"extends": "AbstractRunner", "implements": ["Runnable"], "modifiers": ["public"]}}, {"id": 60600, "method_name": "shutdown", "class_name": "ReaderRunner", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void shutdown() {\n        shutdown = true;\n        if(null != recordSender){\n            recordSender.shutdown();\n        }\n        if(null != channelOutput){\n            channelOutput.shutdown();\n        }\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/engine/datax/datax-core/src/main/java/com/alibaba/datax/core/taskgroup/runner/ReaderRunner.java", "stars": "23", "class_props": {"extends": "AbstractRunner", "implements": ["Runnable"], "modifiers": ["public"]}}, {"id": 60601, "method_name": "getId", "class_name": "Parent", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "  public int getId() {\n    return id;\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/parent_childs/Parent.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 60602, "method_name": "setId", "class_name": "Parent", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void setId(int id) {\n    this.id = id;\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/parent_childs/Parent.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 60603, "method_name": "getName", "class_name": "Parent", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "  public String getName() {\n    return name;\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/parent_childs/Parent.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 60604, "method_name": "setName", "class_name": "Parent", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void setName(String name) {\n    this.name = name;\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/parent_childs/Parent.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 60605, "method_name": "getSurName", "class_name": "Parent", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "  public String getSurName() {\n    return surName;\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/parent_childs/Parent.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 60606, "method_name": "setSurName", "class_name": "Parent", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void setSurName(String surName) {\n    this.surName = surName;\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/parent_childs/Parent.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 60607, "method_name": "getChilds", "class_name": "Parent", "params": [], "throws": null, "modifiers": ["public"], "return_type": "List<Child>", "snippet": "  public List<Child> getChilds() {\n    return childs;\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/parent_childs/Parent.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 60608, "method_name": "setChilds", "class_name": "Parent", "params": ["List<Child>"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void setChilds(List<Child> childs) {\n    this.childs = childs;\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/parent_childs/Parent.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 60609, "method_name": "setUp", "class_name": "StringListTest", "params": [], "throws": ["Exception"], "modifiers": ["static"], "return_type": "void", "snippet": "  static void setUp() throws Exception {\n    // create a SqlSessionFactory\n    try (Reader reader = Resources.getResourceAsReader(\"org/apache/ibatis/submitted/stringlist/mybatis-config.xml\")) {\n      sqlSessionFactory = new SqlSessionFactoryBuilder().build(reader);\n    }\n\n    // populate in-memory database\n    BaseDataTest.runScript(sqlSessionFactory.getConfiguration().getEnvironment().getDataSource(),\n      \"org/apache/ibatis/submitted/stringlist/CreateDB.sql\");\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/stringlist/StringListTest.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 60610, "method_name": "shouldMapListOfStrings", "class_name": "StringListTest", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "  void shouldMapListOfStrings() {\n    try (SqlSession sqlSession = sqlSessionFactory.openSession()) {\n      Mapper mapper = sqlSession.getMapper(Mapper.class);\n      List<User> users = mapper.getUsersAndGroups(1);\n      Assertions.assertEquals(1, users.size());\n      Assertions.assertEquals(2, users.get(0).getGroups().size());\n      Assertions.assertEquals(2, users.get(0).getRoles().size());\n    }\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/stringlist/StringListTest.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 60611, "method_name": "shouldMapListOfStringsToMap", "class_name": "StringListTest", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "  void shouldMapListOfStringsToMap() {\n    try (SqlSession sqlSession = sqlSessionFactory.openSession()) {\n      Mapper mapper = sqlSession.getMapper(Mapper.class);\n      List<Map<String, Object>> results = mapper.getUsersAndGroupsMap(1);\n      Assertions.assertEquals(1, results.size());\n      Assertions.assertEquals(2, ((List<?>)results.get(0).get(\"groups\")).size());\n      Assertions.assertEquals(2, ((List<?>)results.get(0).get(\"roles\")).size());\n    }\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/stringlist/StringListTest.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 60612, "method_name": "shouldFailFastIfCollectionTypeIsAmbiguous", "class_name": "StringListTest", "params": [], "throws": ["Exception"], "modifiers": [], "return_type": "void", "snippet": "  void shouldFailFastIfCollectionTypeIsAmbiguous() throws Exception {\n    try (Reader reader = Resources\n      .getResourceAsReader(\"org/apache/ibatis/submitted/stringlist/mybatis-config-invalid.xml\")) {\n      new SqlSessionFactoryBuilder().build(reader);\n      fail(\"Should throw exception when collection type is unresolvable.\");\n    } catch (PersistenceException e) {\n      assertTrue(e.getMessage()\n        .contains(\"Ambiguous collection type for property 'groups'. You must specify 'javaType' or 'resultMap'.\"));\n    }\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/stringlist/StringListTest.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 60613, "method_name": "index", "class_name": "DeptController", "params": [], "throws": null, "modifiers": ["public"], "return_type": "ModelAndView", "snippet": "    public ModelAndView index() {\n        return new ModelAndView(\"sys/dept\");\n    }", "url": "https://raw.githubusercontent.com/IzzyPrime/Admin/master/src/main/java/com/kalvin/kvf/modules/sys/controller/DeptController.java", "stars": "10", "class_props": {"extends": "BaseController", "implements": null, "modifiers": ["public"]}}, {"id": 60614, "method_name": "edit", "class_name": "DeptController", "params": ["Long"], "throws": null, "modifiers": ["public"], "return_type": "ModelAndView", "snippet": "    public ModelAndView edit(Long id) {\n        ModelAndView mv = new ModelAndView(\"sys/dept_edit\");\n        Dept dept;\n        if (id == null) {\n            dept = new Dept();\n        } else {\n            dept = deptService.getById(id);\n        }\n        mv.addObject(\"editInfo\", dept);\n        return mv;\n    }", "url": "https://raw.githubusercontent.com/IzzyPrime/Admin/master/src/main/java/com/kalvin/kvf/modules/sys/controller/DeptController.java", "stars": "10", "class_props": {"extends": "BaseController", "implements": null, "modifiers": ["public"]}}, {"id": 60615, "method_name": "listData", "class_name": "DeptController", "params": ["Dept"], "throws": null, "modifiers": ["public"], "return_type": "R", "snippet": "    public R listData(Dept dept) {\n        Page<Dept> page = deptService.listDeptPage(dept);\n        return R.ok(page);\n    }", "url": "https://raw.githubusercontent.com/IzzyPrime/Admin/master/src/main/java/com/kalvin/kvf/modules/sys/controller/DeptController.java", "stars": "10", "class_props": {"extends": "BaseController", "implements": null, "modifiers": ["public"]}}, {"id": 60616, "method_name": "listTree", "class_name": "DeptController", "params": ["Long"], "throws": null, "modifiers": ["public"], "return_type": "R", "snippet": "    public R listTree(Long parentId) {\n        return R.ok(deptService.listDeptByParentId(parentId));\n    }", "url": "https://raw.githubusercontent.com/IzzyPrime/Admin/master/src/main/java/com/kalvin/kvf/modules/sys/controller/DeptController.java", "stars": "10", "class_props": {"extends": "BaseController", "implements": null, "modifiers": ["public"]}}, {"id": 60617, "method_name": "add", "class_name": "DeptController", "params": ["Dept"], "throws": null, "modifiers": ["public"], "return_type": "R", "snippet": "    public R add(Dept dept) {\n        deptService.save(dept);\n        return R.ok();\n    }", "url": "https://raw.githubusercontent.com/IzzyPrime/Admin/master/src/main/java/com/kalvin/kvf/modules/sys/controller/DeptController.java", "stars": "10", "class_props": {"extends": "BaseController", "implements": null, "modifiers": ["public"]}}, {"id": 60618, "method_name": "edit", "class_name": "DeptController", "params": ["Dept"], "throws": null, "modifiers": ["public"], "return_type": "R", "snippet": "    public R edit(Dept dept) {\n        deptService.updateById(dept);\n        return R.ok();\n    }", "url": "https://raw.githubusercontent.com/IzzyPrime/Admin/master/src/main/java/com/kalvin/kvf/modules/sys/controller/DeptController.java", "stars": "10", "class_props": {"extends": "BaseController", "implements": null, "modifiers": ["public"]}}, {"id": 60619, "method_name": "remove", "class_name": "DeptController", "params": ["Long"], "throws": null, "modifiers": ["public"], "return_type": "R", "snippet": "    public R remove(@PathVariable Long id) {\n        deptService.removeById(id);\n        return R.ok();\n    }", "url": "https://raw.githubusercontent.com/IzzyPrime/Admin/master/src/main/java/com/kalvin/kvf/modules/sys/controller/DeptController.java", "stars": "10", "class_props": {"extends": "BaseController", "implements": null, "modifiers": ["public"]}}, {"id": 60620, "method_name": "removeBatch", "class_name": "DeptController", "params": ["List<Long>"], "throws": null, "modifiers": ["public"], "return_type": "R", "snippet": "    public R removeBatch(@RequestParam(\"ids\") List<Long> ids) {\n        deptService.removeByIds(ids);\n        return R.ok();\n    }", "url": "https://raw.githubusercontent.com/IzzyPrime/Admin/master/src/main/java/com/kalvin/kvf/modules/sys/controller/DeptController.java", "stars": "10", "class_props": {"extends": "BaseController", "implements": null, "modifiers": ["public"]}}, {"id": 60621, "method_name": "get", "class_name": "DeptController", "params": ["Long"], "throws": null, "modifiers": ["public"], "return_type": "R", "snippet": "    public R get(@PathVariable Long id) {\n        return R.ok(deptService.getById(id));\n    }", "url": "https://raw.githubusercontent.com/IzzyPrime/Admin/master/src/main/java/com/kalvin/kvf/modules/sys/controller/DeptController.java", "stars": "10", "class_props": {"extends": "BaseController", "implements": null, "modifiers": ["public"]}}, {"id": 60622, "method_name": "getPublicKey", "class_name": "ResponseWrapperFilter", "params": [], "throws": null, "modifiers": ["public"], "return_type": "PublicKey", "snippet": "\tpublic PublicKey getPublicKey() {\n\t\treturn pair.getPublic();\n\t}", "url": "https://raw.githubusercontent.com/DP-3T/dp3t-sdk-backend/develop/dpppt-backend-sdk/dpppt-backend-sdk-ws/src/main/java/org/dpppt/backend/sdk/ws/filter/ResponseWrapperFilter.java", "stars": "125", "class_props": {"extends": null, "implements": ["Filter"], "modifiers": ["public"]}}, {"id": 60623, "method_name": "doFilter", "class_name": "ResponseWrapperFilter", "params": ["ServletRequest", "ServletResponse", "FilterChain"], "throws": ["IOException", "ServletException"], "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void doFilter(ServletRequest request, ServletResponse response, FilterChain chain)\n\t\t\tthrows IOException, ServletException {\n\t\tHttpServletResponse httpResponse = (HttpServletResponse) response;\n\t\tSignatureResponseWrapper wrapper = new SignatureResponseWrapper(httpResponse, pair, retentionDays,\n\t\t\t\tprotectedHeaders, setDebugHeaders);\n\t\tchain.doFilter(request, wrapper);\n\t\twrapper.outputData(httpResponse.getOutputStream());\n\t}", "url": "https://raw.githubusercontent.com/DP-3T/dp3t-sdk-backend/develop/dpppt-backend-sdk/dpppt-backend-sdk-ws/src/main/java/org/dpppt/backend/sdk/ws/filter/ResponseWrapperFilter.java", "stars": "125", "class_props": {"extends": null, "implements": ["Filter"], "modifiers": ["public"]}}, {"id": 60624, "method_name": "blockContextMenu", "class_name": "MenuHidingEditText", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void blockContextMenu() {\n        this.setCustomSelectionActionModeCallback(new BlockedActionModeCallback());\n        this.setLongClickable(false);\n        this.setOnTouchListener((v, event) -> {\n            MenuHidingEditText.this.clearFocus();\n            return false;\n        });\n    }", "url": "https://raw.githubusercontent.com/CoboVault/cobo-vault-cold/master/app/src/main/java/com/cobo/cold/ui/views/MenuHidingEditText.java", "stars": "13", "class_props": {"extends": "AppCompatEditText", "implements": null, "modifiers": ["public"]}}, {"id": 60625, "method_name": "onTouchEvent", "class_name": "MenuHidingEditText", "params": ["MotionEvent"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean onTouchEvent(MotionEvent event) {\n        if (event.getAction() == MotionEvent.ACTION_DOWN) {\n            // setInsertionDisabled when user touches the view\n            this.setInsertionDisabled();\n        }\n        return super.onTouchEvent(event);\n    }", "url": "https://raw.githubusercontent.com/CoboVault/cobo-vault-cold/master/app/src/main/java/com/cobo/cold/ui/views/MenuHidingEditText.java", "stars": "13", "class_props": {"extends": "AppCompatEditText", "implements": null, "modifiers": ["public"]}}, {"id": 60626, "method_name": "setInsertionDisabled", "class_name": "MenuHidingEditText", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void setInsertionDisabled() {\n        try {\n            Field editorField = TextView.class.getDeclaredField(\"mEditor\");\n            editorField.setAccessible(true);\n            Object editorObject = editorField.get(this);\n\n            Class editorClass = Class.forName(\"android.widget.Editor\");\n            Field mInsertionControllerEnabledField = editorClass.getDeclaredField(\"mInsertionControllerEnabled\");\n            mInsertionControllerEnabledField.setAccessible(true);\n            mInsertionControllerEnabledField.set(editorObject, false);\n        }\n        catch (Exception ignored) {\n            // ignore exception here\n        }\n    }", "url": "https://raw.githubusercontent.com/CoboVault/cobo-vault-cold/master/app/src/main/java/com/cobo/cold/ui/views/MenuHidingEditText.java", "stars": "13", "class_props": {"extends": "AppCompatEditText", "implements": null, "modifiers": ["public"]}}, {"id": 60627, "method_name": "isSuggestionsEnabled", "class_name": "MenuHidingEditText", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean isSuggestionsEnabled() {\n        return false;\n    }", "url": "https://raw.githubusercontent.com/CoboVault/cobo-vault-cold/master/app/src/main/java/com/cobo/cold/ui/views/MenuHidingEditText.java", "stars": "13", "class_props": {"extends": "AppCompatEditText", "implements": null, "modifiers": ["public"]}}, {"id": 60628, "method_name": "onCreateActionMode", "class_name": "BlockedActionModeCallback", "params": ["ActionMode", "Menu"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "        public boolean onCreateActionMode(ActionMode mode, Menu menu) {\n            return false;\n        }", "url": "https://raw.githubusercontent.com/CoboVault/cobo-vault-cold/master/app/src/main/java/com/cobo/cold/ui/views/MenuHidingEditText.java", "stars": "13", "class_props": {"extends": null, "implements": ["ActionMode"], "modifiers": ["private"]}}, {"id": 60629, "method_name": "onPrepareActionMode", "class_name": "BlockedActionModeCallback", "params": ["ActionMode", "Menu"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "        public boolean onPrepareActionMode(ActionMode mode, Menu menu) {\n            return false;\n        }", "url": "https://raw.githubusercontent.com/CoboVault/cobo-vault-cold/master/app/src/main/java/com/cobo/cold/ui/views/MenuHidingEditText.java", "stars": "13", "class_props": {"extends": null, "implements": ["ActionMode"], "modifiers": ["private"]}}, {"id": 60630, "method_name": "onActionItemClicked", "class_name": "BlockedActionModeCallback", "params": ["ActionMode", "MenuItem"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "        public boolean onActionItemClicked(ActionMode mode, MenuItem item) {\n            return false;\n        }", "url": "https://raw.githubusercontent.com/CoboVault/cobo-vault-cold/master/app/src/main/java/com/cobo/cold/ui/views/MenuHidingEditText.java", "stars": "13", "class_props": {"extends": null, "implements": ["ActionMode"], "modifiers": ["private"]}}, {"id": 60631, "method_name": "onDestroyActionMode", "class_name": "BlockedActionModeCallback", "params": ["ActionMode"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "        public void onDestroyActionMode(ActionMode mode) {\n        }", "url": "https://raw.githubusercontent.com/CoboVault/cobo-vault-cold/master/app/src/main/java/com/cobo/cold/ui/views/MenuHidingEditText.java", "stars": "13", "class_props": {"extends": null, "implements": ["ActionMode"], "modifiers": ["private"]}}, {"id": 60632, "method_name": "of", "class_name": "ParameterMap", "params": ["Object"], "throws": null, "modifiers": ["public", "static"], "return_type": "ParameterMap", "snippet": "    public static ParameterMap of(Object... keyValues) {\n        Map<String, String> map = new HashMap<>(keyValues.length / 2);\n        for (int i = 0; i < keyValues.length - 1; i += 2)\n            map.put(String.valueOf(keyValues[i]), String.valueOf(keyValues[i + 1]));\n        return new DefaultParameterMap(map);\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/util/ParameterMap.java", "stars": "12", "class_props": {"extends": "AbstractMap", "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 60633, "method_name": "get", "class_name": "ParameterMap", "params": ["String", "String"], "throws": null, "modifiers": ["public", "abstract"], "return_type": "String", "snippet": "    public abstract String get(String key, String def);\n\n    @Override\n    public String get(Object key) {\n        return get((String) key, null);\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/util/ParameterMap.java", "stars": "12", "class_props": {"extends": "AbstractMap", "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 60634, "method_name": "get", "class_name": "ParameterMap", "params": ["Object"], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String get(Object key) {\n        return get((String) key, null);\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/util/ParameterMap.java", "stars": "12", "class_props": {"extends": "AbstractMap", "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 60635, "method_name": "getSok", "class_name": "ParameterMap", "params": ["String", "boolean", "String"], "throws": ["BGMessageException"], "modifiers": ["public"], "return_type": "String", "snippet": "    public String getSok(String def, boolean validate, String... keys) throws BGMessageException {\n        String value = get(keys[0]);\n        if (!Utils.isEmptyString(value))\n            return value;\n\n        for (int i = 1; i < keys.length; i++) {\n            value = get(keys[i]);\n            if (!Utils.isEmptyString(value)) {\n                var message = String.format(\"Using deprecated config key '%s'\", keys[i]);\n                if (validate)\n                    throw new BGMessageException(message);\n                log.warn(message);\n                return value;\n            }\n        }\n\n        return def;\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/util/ParameterMap.java", "stars": "12", "class_props": {"extends": "AbstractMap", "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 60636, "method_name": "getSok", "class_name": "ParameterMap", "params": ["String"], "throws": ["BGMessageException"], "modifiers": ["public"], "return_type": "String", "snippet": "    public String getSok(String... keys) throws BGMessageException {\n        return getSok(null, false, keys);\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/util/ParameterMap.java", "stars": "12", "class_props": {"extends": "AbstractMap", "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 60637, "method_name": "getInt", "class_name": "ParameterMap", "params": ["String", "int"], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getInt(String key, int def) {\n        try {\n            final String value = get(key, null);\n            if (Utils.isEmptyString(value))\n                return def;\n            else\n                return Integer.parseInt(value.trim());\n        } catch (Exception ex) {\n            return def;\n        }\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/util/ParameterMap.java", "stars": "12", "class_props": {"extends": "AbstractMap", "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 60638, "method_name": "getInt", "class_name": "ParameterMap", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getInt(String key) {\n        return getInt(key, 0);\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/util/ParameterMap.java", "stars": "12", "class_props": {"extends": "AbstractMap", "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 60639, "method_name": "getLong", "class_name": "ParameterMap", "params": ["String", "long"], "throws": null, "modifiers": ["public"], "return_type": "long", "snippet": "    public long getLong(String key, long def) {\n        try {\n            final String value = get(key, null);\n            if (Utils.isEmptyString(value))\n                return def;\n            else\n                return Long.parseLong(value.trim());\n        } catch (Exception ex) {\n            return def;\n        }\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/util/ParameterMap.java", "stars": "12", "class_props": {"extends": "AbstractMap", "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 60640, "method_name": "getLong", "class_name": "ParameterMap", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "long", "snippet": "    public long getLong(String key) {\n        return getLong(key, 0L);\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/util/ParameterMap.java", "stars": "12", "class_props": {"extends": "AbstractMap", "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 60641, "method_name": "getBoolean", "class_name": "ParameterMap", "params": ["String", "boolean"], "throws": null, "modifiers": ["final", "public"], "return_type": "boolean", "snippet": "    public final boolean getBoolean(String key, boolean defaultValue) {\n        return Utils.parseBoolean(get(key, \"\").trim(), defaultValue);\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/util/ParameterMap.java", "stars": "12", "class_props": {"extends": "AbstractMap", "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 60642, "method_name": "getBigDecimal", "class_name": "ParameterMap", "params": ["String", "BigDecimal"], "throws": null, "modifiers": ["public"], "return_type": "BigDecimal", "snippet": "    public BigDecimal getBigDecimal(final String key, final BigDecimal def) {\n        try {\n            final String value = get(key, null);\n            if (Utils.isEmptyString(value))\n                return def;\n            else\n                return new BigDecimal(value.trim());\n        } catch (Exception ex) {\n            return def;\n        }\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/util/ParameterMap.java", "stars": "12", "class_props": {"extends": "AbstractMap", "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 60643, "method_name": "getFloat", "class_name": "ParameterMap", "params": ["String", "float"], "throws": null, "modifiers": ["public"], "return_type": "float", "snippet": "    public float getFloat(String key, float def) {\n        try {\n            final String value = get(key, null);\n            if (Utils.isEmptyString(value))\n                return def;\n            else\n                return Float.parseFloat(value.trim());\n        } catch (Exception ex) {\n            return def;\n        }\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/util/ParameterMap.java", "stars": "12", "class_props": {"extends": "AbstractMap", "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 60644, "method_name": "getDouble", "class_name": "ParameterMap", "params": ["String", "double"], "throws": null, "modifiers": ["public"], "return_type": "double", "snippet": "    public double getDouble(String key, double def) {\n        try {\n            final String value = get(key, null);\n            if (Utils.isEmptyString(value))\n                return def;\n            else\n                return Double.parseDouble(value.trim());\n        } catch (Exception ex) {\n            return def;\n        }\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/util/ParameterMap.java", "stars": "12", "class_props": {"extends": "AbstractMap", "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 60645, "method_name": "entrySet", "class_name": "ParameterMap", "params": [], "throws": null, "modifiers": ["public", "abstract"], "return_type": "Set<Map>", "snippet": "    public abstract Set<Map.Entry<String, String>> entrySet();\n\n    public String fingerprint() {\n        throw new UnsupportedOperationException();\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/util/ParameterMap.java", "stars": "12", "class_props": {"extends": "AbstractMap", "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 60646, "method_name": "fingerprint", "class_name": "ParameterMap", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String fingerprint() {\n        throw new UnsupportedOperationException();\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/util/ParameterMap.java", "stars": "12", "class_props": {"extends": "AbstractMap", "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 60647, "method_name": "sub", "class_name": "ParameterMap", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "ParameterMap", "snippet": "    public ParameterMap sub(String... prefixies) {\n        Map<String, String> result = new HashMap<String, String>();\n\n        for (Entry<String, String> e : entrySet()) {\n            String paramKey = e.getKey();\n            for (String prefix : prefixies) {\n                if (paramKey.startsWith(prefix)) {\n                    String suffix = paramKey.substring(prefix.length(), paramKey.length());\n                    result.put(suffix, e.getValue());\n                }\n            }\n        }\n\n        return new ParameterMap.DefaultParameterMap(result);\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/util/ParameterMap.java", "stars": "12", "class_props": {"extends": "AbstractMap", "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 60648, "method_name": "getDataString", "class_name": "ParameterMap", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getDataString() {\n        return getDataString(\"\");\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/util/ParameterMap.java", "stars": "12", "class_props": {"extends": "AbstractMap", "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 60649, "method_name": "getDataString", "class_name": "ParameterMap", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getDataString(String prefix) {\n        StringBuilder result = new StringBuilder();\n\n        for (Entry<String, String> e : entrySet()) {\n            result.append(prefix);\n            result.append(e.getKey());\n            result.append(\"=\");\n            result.append(e.getValue());\n            result.append(\"\\n\");\n        }\n\n        return result.toString();\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/util/ParameterMap.java", "stars": "12", "class_props": {"extends": "AbstractMap", "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 60650, "method_name": "getDataString", "class_name": "ParameterMap", "params": ["ParameterMap"], "throws": null, "modifiers": ["final", "public", "static"], "return_type": "String", "snippet": "    public static final String getDataString(ParameterMap config) {\n        if (config != null) {\n            return config.getDataString();\n        }\n        return \"\";\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/util/ParameterMap.java", "stars": "12", "class_props": {"extends": "AbstractMap", "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 60651, "method_name": "subIndexed", "class_name": "ParameterMap", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "SortedMap<Integer,ParameterMap>", "snippet": "    public SortedMap<Integer, ParameterMap> subIndexed(final String... prefixies) {\n        SortedMap<Integer, ParameterMap> result = new TreeMap<Integer, ParameterMap>();\n        Map<Integer, Map<String, String>> resultMap = new HashMap<Integer, Map<String, String>>();\n\n        for (Entry<String, String> e : entrySet()) {\n            String paramKey = e.getKey();\n            for (String prefix : prefixies) {\n                if (paramKey.startsWith(prefix)) {\n                    String suffix = paramKey.substring(prefix.length(), paramKey.length());\n\n                    String[] pref = patternDot.split(suffix, 2);\n                    try {\n                        Integer.parseInt(pref[0]);\n                    } catch (Exception ex) {\n                        continue;\n                    }\n\n                    Integer id = Utils.parseInt(pref[0]);\n\n                    Map<String, String> map = resultMap.get(id);\n                    if (map == null) {\n                        resultMap.put(id, map = new HashMap<String, String>());\n                        result.put(id, new ParameterMap.DefaultParameterMap(map));\n                    }\n\n                    if (pref.length == 2) {\n                        map.put(pref[1], e.getValue());\n                    } else {\n                        map.put(\"\", e.getValue());\n                    }\n                }\n            }\n        }\n\n        return result;\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/util/ParameterMap.java", "stars": "12", "class_props": {"extends": "AbstractMap", "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 60652, "method_name": "subKeyed", "class_name": "ParameterMap", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "Map<String,ParameterMap>", "snippet": "    public Map<String, ParameterMap> subKeyed(final String... prefixies) {\n        Map<String, ParameterMap> result = new HashMap<String, ParameterMap>();\n        Map<String, Map<String, String>> resultMap = new HashMap<String, Map<String, String>>();\n\n        for (Entry<String, String> e : entrySet()) {\n            String paramKey = e.getKey();\n            for (String prefix : prefixies) {\n                if (paramKey.startsWith(prefix)) {\n                    String suffix = paramKey.substring(prefix.length(), paramKey.length());\n\n                    String[] pref = patternDot.split(suffix, 2);\n\n                    Map<String, String> map = resultMap.get(pref[0]);\n                    if (map == null) {\n                        resultMap.put(pref[0], map = new HashMap<String, String>());\n                        result.put(pref[0], new ParameterMap.DefaultParameterMap(map));\n                    }\n\n                    if (pref.length == 2) {\n                        map.put(pref[1], e.getValue());\n                    } else {\n                        map.put(\"\", e.getValue());\n                    }\n                }\n            }\n        }\n\n        return result;\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/util/ParameterMap.java", "stars": "12", "class_props": {"extends": "AbstractMap", "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 60653, "method_name": "parseObjectsNoOrder", "class_name": "ParameterMap", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "Map<String,Map>", "snippet": "    public Map<String, Map<String, String>> parseObjectsNoOrder(String prefix) {\n        Map<String, Map<String, String>> result = new HashMap<String, Map<String, String>>();\n        for (Map.Entry<String, String> value : sub(prefix).entrySet()) {\n            String id = null;\n            String key = null;\n\n            int pos = value.getKey().indexOf('.');\n            if (pos <= 0) {\n                continue;\n            }\n\n            id = value.getKey().substring(0, pos);\n            key = value.getKey().substring(pos + 1);\n\n            Map<String, String> data = result.get(id);\n            if (data == null) {\n                data = new HashMap<String, String>();\n                data.put(\"id\", String.valueOf(id));\n                result.put(id, data);\n            }\n\n            data.put(key, value.getValue());\n        }\n        return result;\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/util/ParameterMap.java", "stars": "12", "class_props": {"extends": "AbstractMap", "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 60654, "method_name": "getConfig", "class_name": "ParameterMap", "params": ["Class<K>"], "throws": null, "modifiers": ["final", "public"], "return_type": "K", "snippet": "    public final <K extends Config> K getConfig(final Class<K> clazz) {\n        synchronized (this) {\n            if (configMap == null) {\n                configMap = new ConcurrentHashMap<Class<?>, Config>();\n            }\n        }\n\n        K result = (K) configMap.get(clazz);\n        if (result == null) {\n           try {\n                result = createConfig(clazz, false);\n                if (result == null)\n                    result = (K) Config.EMPTY;\n                configMap.put(clazz, result);\n            } catch (Exception e) {\n                log.error(e);\n            }\n        }\n        return result == Config.EMPTY ? null : result;\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/util/ParameterMap.java", "stars": "12", "class_props": {"extends": "AbstractMap", "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 60655, "method_name": "getConfig", "class_name": "ParameterMap", "params": ["String"], "throws": null, "modifiers": ["final", "public"], "return_type": "Object", "snippet": "    public final Object getConfig(String className) {\n        try {\n            return getConfig((Class<Config>) DynamicClassManager.getClass(className));\n        } catch (Exception e) {\n            log.error(e);\n        }\n        return null;\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/util/ParameterMap.java", "stars": "12", "class_props": {"extends": "AbstractMap", "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 60656, "method_name": "removeConfig", "class_name": "ParameterMap", "params": ["Class<K>"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public <K extends Config> void removeConfig(Class<K> clazz) {\n        configMap.remove(clazz);\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/util/ParameterMap.java", "stars": "12", "class_props": {"extends": "AbstractMap", "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 60657, "method_name": "validateConfig", "class_name": "ParameterMap", "params": ["Class<K>"], "throws": ["BGMessageException"], "modifiers": ["final", "public"], "return_type": "void", "snippet": "    public final <K extends Config> void validateConfig(final Class<K> clazz) throws BGMessageException {\n        try {\n            createConfig(clazz, true);\n        } catch (BGMessageException e) {\n            throw e;\n        } catch (Exception e) {\n            log.error(e);\n            throw new BGMessageException(e.getMessage());\n        }\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/util/ParameterMap.java", "stars": "12", "class_props": {"extends": "AbstractMap", "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 60658, "method_name": "createConfig", "class_name": "ParameterMap", "params": ["Class<K>", "boolean"], "throws": ["Exception"], "modifiers": ["private"], "return_type": "K", "snippet": "    private <K extends Config> K createConfig(final Class<K> clazz, boolean validate) throws Exception {\n        try {\n            try {\n                Constructor<K> constr = clazz.getDeclaredConstructor(getConfigParamsValidate);\n                if (constr != null) {\n                    constr.setAccessible(true);\n                    return constr.newInstance(new Object[] { this, validate });\n                }\n            } catch (NoSuchMethodException e) {}\n\n            Constructor<K> constr = clazz.getDeclaredConstructor(getConfigParams);\n            if (constr != null) {\n                constr.setAccessible(true);\n                return constr.newInstance(new Object[] { this });\n            }\n        } catch (InvocationTargetException e) {\n            var target = (Exception) e.getTargetException();\n            if (target instanceof InitStopException)\n                return null;\n            if (validate || !(target instanceof BGMessageException))\n                throw target;\n            return null;\n        }\n        return null;\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/util/ParameterMap.java", "stars": "12", "class_props": {"extends": "AbstractMap", "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 60659, "method_name": "get", "class_name": "DefaultParameterMap", "params": ["String", "String"], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "        public String get(String key, String def) {\n            final String result = data.get(key);\n            return result != null ? result : def;\n        }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/util/ParameterMap.java", "stars": "12", "class_props": {"extends": "ParameterMap", "implements": null, "modifiers": ["static", "private"]}}, {"id": 60660, "method_name": "entrySet", "class_name": "DefaultParameterMap", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Set<Map>", "snippet": "        public Set<Map.Entry<String, String>> entrySet() {\n            return data.entrySet();\n        }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/util/ParameterMap.java", "stars": "12", "class_props": {"extends": "ParameterMap", "implements": null, "modifiers": ["static", "private"]}}, {"id": 60661, "method_name": "init", "class_name": "UtilityMod", "params": ["FMLInitializationEvent"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void init(FMLInitializationEvent event) {\n\t\tMinecraftForge.EVENT_BUS.register(this);\n\n\t\tEmojis.load(); // load emojis\n\n\t\tClanTags.load(); // load clans\n\t\tClanTags.PREFIX = \"/\"; // set the prefix of the command\n\t\tClientCommandHandler.instance.registerCommand(ClanTags.INFO_COMMAND); // register commands\n\t\tClientCommandHandler.instance.registerCommand(ClanTags.CLANS_COMMAND); // see each command for method to run on execute\n\t}", "url": "https://raw.githubusercontent.com/2b2t-Utilities/2b2t-Utilities/master/src/main/java/me/tigermouthbear/utilities/UtilityMod.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 60662, "method_name": "onChatMessage", "class_name": "UtilityMod", "params": ["ClientChatReceivedEvent"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void onChatMessage(ClientChatReceivedEvent event) {\n\t\tClanTags.handleClientChatReceivedEvent(event); // handle chat messages received\n\t}", "url": "https://raw.githubusercontent.com/2b2t-Utilities/2b2t-Utilities/master/src/main/java/me/tigermouthbear/utilities/UtilityMod.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 60663, "method_name": "getInstance", "class_name": "RetrofitManager", "params": [], "throws": null, "modifiers": ["public", "static"], "return_type": "RetrofitManager", "snippet": "    public static RetrofitManager getInstance() {\n        return ourInstance;\n    }", "url": "https://raw.githubusercontent.com/TrillGates/TaobaoUnion/master/app/src/main/java/com/sunofbeaches/taobaounion/utils/RetrofitManager.java", "stars": "9", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 60664, "method_name": "getRetrofit", "class_name": "RetrofitManager", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Retrofit", "snippet": "    public Retrofit getRetrofit() {\n        return mRetrofit;\n    }", "url": "https://raw.githubusercontent.com/TrillGates/TaobaoUnion/master/app/src/main/java/com/sunofbeaches/taobaounion/utils/RetrofitManager.java", "stars": "9", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 60665, "method_name": "hasCapability", "class_name": "TileEveBase", "params": ["Capability<?>", "EnumFacing"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean hasCapability(Capability<?> capability, @Nullable EnumFacing facing) {\n        return capability == CapabilityEVE.EVE || super.hasCapability(capability, facing);\n    }", "url": "https://raw.githubusercontent.com/Prunoideae/PhasePotion/master/src/main/java/com/naive/phase/Base/Tile/TileEveBase.java", "stars": "2", "class_props": {"extends": "TileBase", "implements": null, "modifiers": ["public"]}}, {"id": 60666, "method_name": "getCapability", "class_name": "TileEveBase", "params": ["Capability<T>", "EnumFacing"], "throws": null, "modifiers": ["public"], "return_type": "T", "snippet": "    public <T> T getCapability(Capability<T> capability, @Nullable EnumFacing facing) {\n        if (capability == CapabilityEVE.EVE) {\n            return CapabilityEVE.EVE.cast(energyHandlerDefault);\n        } else\n            return super.getCapability(capability, facing);\n    }", "url": "https://raw.githubusercontent.com/Prunoideae/PhasePotion/master/src/main/java/com/naive/phase/Base/Tile/TileEveBase.java", "stars": "2", "class_props": {"extends": "TileBase", "implements": null, "modifiers": ["public"]}}, {"id": 60667, "method_name": "readSyncNBT", "class_name": "TileEveBase", "params": ["NBTTagCompound"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void readSyncNBT(NBTTagCompound compound) {\n        energyHandlerDefault.getEVE().readFromNBT(compound.getCompoundTag(TAG_EVE));\n    }", "url": "https://raw.githubusercontent.com/Prunoideae/PhasePotion/master/src/main/java/com/naive/phase/Base/Tile/TileEveBase.java", "stars": "2", "class_props": {"extends": "TileBase", "implements": null, "modifiers": ["public"]}}, {"id": 60668, "method_name": "writeSyncNBT", "class_name": "TileEveBase", "params": ["NBTTagCompound"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void writeSyncNBT(NBTTagCompound compound) {\n        compound.setTag(TAG_EVE, energyHandlerDefault.getEVE().writeToNBT());\n    }", "url": "https://raw.githubusercontent.com/Prunoideae/PhasePotion/master/src/main/java/com/naive/phase/Base/Tile/TileEveBase.java", "stars": "2", "class_props": {"extends": "TileBase", "implements": null, "modifiers": ["public"]}}, {"id": 60669, "method_name": "onLocationChanged", "class_name": "SingleLocationListener", "params": ["android"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void onLocationChanged (android.location.Location p0)\n\t{\n\t\tn_onLocationChanged (p0);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Debug/90/android/src/crc64a0e0a82d0db9a07d/SingleLocationListener.java", "stars": "2", "class_props": {"extends": "java", "implements": ["mono", "android"], "modifiers": ["public"]}}, {"id": 60670, "method_name": "n_onLocationChanged", "class_name": "SingleLocationListener", "params": ["android"], "throws": null, "modifiers": ["private", "native"], "return_type": "void", "snippet": "\tprivate native void n_onLocationChanged (android.location.Location p0);\n\n\n\tpublic void onProviderDisabled (java.lang.String p0)\n\t{\n\t\tn_onProviderDisabled (p0);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Debug/90/android/src/crc64a0e0a82d0db9a07d/SingleLocationListener.java", "stars": "2", "class_props": {"extends": "java", "implements": ["mono", "android"], "modifiers": ["public"]}}, {"id": 60671, "method_name": "onProviderDisabled", "class_name": "SingleLocationListener", "params": ["java"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void onProviderDisabled (java.lang.String p0)\n\t{\n\t\tn_onProviderDisabled (p0);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Debug/90/android/src/crc64a0e0a82d0db9a07d/SingleLocationListener.java", "stars": "2", "class_props": {"extends": "java", "implements": ["mono", "android"], "modifiers": ["public"]}}, {"id": 60672, "method_name": "n_onProviderDisabled", "class_name": "SingleLocationListener", "params": ["java"], "throws": null, "modifiers": ["private", "native"], "return_type": "void", "snippet": "\tprivate native void n_onProviderDisabled (java.lang.String p0);\n\n\n\tpublic void onProviderEnabled (java.lang.String p0)\n\t{\n\t\tn_onProviderEnabled (p0);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Debug/90/android/src/crc64a0e0a82d0db9a07d/SingleLocationListener.java", "stars": "2", "class_props": {"extends": "java", "implements": ["mono", "android"], "modifiers": ["public"]}}, {"id": 60673, "method_name": "onProviderEnabled", "class_name": "SingleLocationListener", "params": ["java"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void onProviderEnabled (java.lang.String p0)\n\t{\n\t\tn_onProviderEnabled (p0);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Debug/90/android/src/crc64a0e0a82d0db9a07d/SingleLocationListener.java", "stars": "2", "class_props": {"extends": "java", "implements": ["mono", "android"], "modifiers": ["public"]}}, {"id": 60674, "method_name": "n_onProviderEnabled", "class_name": "SingleLocationListener", "params": ["java"], "throws": null, "modifiers": ["private", "native"], "return_type": "void", "snippet": "\tprivate native void n_onProviderEnabled (java.lang.String p0);\n\n\n\tpublic void onStatusChanged (java.lang.String p0, int p1, android.os.Bundle p2)\n\t{\n\t\tn_onStatusChanged (p0, p1, p2);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Debug/90/android/src/crc64a0e0a82d0db9a07d/SingleLocationListener.java", "stars": "2", "class_props": {"extends": "java", "implements": ["mono", "android"], "modifiers": ["public"]}}, {"id": 60675, "method_name": "onStatusChanged", "class_name": "SingleLocationListener", "params": ["java", "int", "android"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void onStatusChanged (java.lang.String p0, int p1, android.os.Bundle p2)\n\t{\n\t\tn_onStatusChanged (p0, p1, p2);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Debug/90/android/src/crc64a0e0a82d0db9a07d/SingleLocationListener.java", "stars": "2", "class_props": {"extends": "java", "implements": ["mono", "android"], "modifiers": ["public"]}}, {"id": 60676, "method_name": "n_onStatusChanged", "class_name": "SingleLocationListener", "params": ["java", "int", "android"], "throws": null, "modifiers": ["private", "native"], "return_type": "void", "snippet": "\tprivate native void n_onStatusChanged (java.lang.String p0, int p1, android.os.Bundle p2);\n\n\tprivate java.util.ArrayList refList;\n\tpublic void monodroidAddReference (java.lang.Object obj)\n\t{\n\t\tif (refList == null)\n\t\t\trefList = new java.util.ArrayList ();\n\t\trefList.add (obj);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Debug/90/android/src/crc64a0e0a82d0db9a07d/SingleLocationListener.java", "stars": "2", "class_props": {"extends": "java", "implements": ["mono", "android"], "modifiers": ["public"]}}, {"id": 60677, "method_name": "monodroidAddReference", "class_name": "SingleLocationListener", "params": ["java"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void monodroidAddReference (java.lang.Object obj)\n\t{\n\t\tif (refList == null)\n\t\t\trefList = new java.util.ArrayList ();\n\t\trefList.add (obj);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Debug/90/android/src/crc64a0e0a82d0db9a07d/SingleLocationListener.java", "stars": "2", "class_props": {"extends": "java", "implements": ["mono", "android"], "modifiers": ["public"]}}, {"id": 60678, "method_name": "monodroidClearReferences", "class_name": "SingleLocationListener", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void monodroidClearReferences ()\n\t{\n\t\tif (refList != null)\n\t\t\trefList.clear ();\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Debug/90/android/src/crc64a0e0a82d0db9a07d/SingleLocationListener.java", "stars": "2", "class_props": {"extends": "java", "implements": ["mono", "android"], "modifiers": ["public"]}}, {"id": 60679, "method_name": "upcomingResult", "class_name": "ColonySpendingCategory", "params": [], "throws": null, "modifiers": ["public", "abstract"], "return_type": "String", "snippet": "    public abstract String upcomingResult();\n    public abstract int categoryType();\n    public abstract boolean isCompleted();\n    public abstract void nextTurn(float prod, float rsv);\n    public abstract void assessTurn();\n\n    public ColonySpendingCategory () {  }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/colony/ColonySpendingCategory.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Serializable"], "modifiers": ["public", "abstract"]}}, {"id": 60680, "method_name": "categoryType", "class_name": "ColonySpendingCategory", "params": [], "throws": null, "modifiers": ["public", "abstract"], "return_type": "int", "snippet": "    public abstract int categoryType();\n    public abstract boolean isCompleted();\n    public abstract void nextTurn(float prod, float rsv);\n    public abstract void assessTurn();\n\n    public ColonySpendingCategory () {  }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/colony/ColonySpendingCategory.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Serializable"], "modifiers": ["public", "abstract"]}}, {"id": 60681, "method_name": "isCompleted", "class_name": "ColonySpendingCategory", "params": [], "throws": null, "modifiers": ["public", "abstract"], "return_type": "boolean", "snippet": "    public abstract boolean isCompleted();\n    public abstract void nextTurn(float prod, float rsv);\n    public abstract void assessTurn();\n\n    public ColonySpendingCategory () {  }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/colony/ColonySpendingCategory.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Serializable"], "modifiers": ["public", "abstract"]}}, {"id": 60682, "method_name": "nextTurn", "class_name": "ColonySpendingCategory", "params": ["float", "float"], "throws": null, "modifiers": ["public", "abstract"], "return_type": "void", "snippet": "    public abstract void nextTurn(float prod, float rsv);\n    public abstract void assessTurn();\n\n    public ColonySpendingCategory () {  }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/colony/ColonySpendingCategory.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Serializable"], "modifiers": ["public", "abstract"]}}, {"id": 60683, "method_name": "assessTurn", "class_name": "ColonySpendingCategory", "params": [], "throws": null, "modifiers": ["public", "abstract"], "return_type": "void", "snippet": "    public abstract void assessTurn();\n\n    public ColonySpendingCategory () {  }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/colony/ColonySpendingCategory.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Serializable"], "modifiers": ["public", "abstract"]}}, {"id": 60684, "method_name": "toString", "class_name": "ColonySpendingCategory", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String toString()            { return str(allocation()); }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/colony/ColonySpendingCategory.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Serializable"], "modifiers": ["public", "abstract"]}}, {"id": 60685, "method_name": "totalBC", "class_name": "ColonySpendingCategory", "params": [], "throws": null, "modifiers": ["public"], "return_type": "float", "snippet": "    public float totalBC()              { return pct() * colony().totalIncome(); }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/colony/ColonySpendingCategory.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Serializable"], "modifiers": ["public", "abstract"]}}, {"id": 60686, "method_name": "totalBCForEmpire", "class_name": "ColonySpendingCategory", "params": [], "throws": null, "modifiers": ["public"], "return_type": "float", "snippet": "    public float totalBCForEmpire()     { return totalBC(); }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/colony/ColonySpendingCategory.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Serializable"], "modifiers": ["public", "abstract"]}}, {"id": 60687, "method_name": "allocation", "class_name": "ColonySpendingCategory", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int allocation()             { return colony.allocation(categoryType()); }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/colony/ColonySpendingCategory.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Serializable"], "modifiers": ["public", "abstract"]}}, {"id": 60688, "method_name": "pct", "class_name": "ColonySpendingCategory", "params": [], "throws": null, "modifiers": ["public"], "return_type": "float", "snippet": "    public float pct()                  { return (float)allocation()/ MAX_TICKS; }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/colony/ColonySpendingCategory.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Serializable"], "modifiers": ["public", "abstract"]}}, {"id": 60689, "method_name": "warning", "class_name": "ColonySpendingCategory", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean warning()            { return false; }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/colony/ColonySpendingCategory.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Serializable"], "modifiers": ["public", "abstract"]}}, {"id": 60690, "method_name": "init", "class_name": "ColonySpendingCategory", "params": ["Colony"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void init(Colony c) {\n        colony = c;\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/colony/ColonySpendingCategory.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Serializable"], "modifiers": ["public", "abstract"]}}, {"id": 60691, "method_name": "colony", "class_name": "ColonySpendingCategory", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Colony", "snippet": "    public Colony colony()            { return colony; }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/colony/ColonySpendingCategory.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Serializable"], "modifiers": ["public", "abstract"]}}, {"id": 60692, "method_name": "planet", "class_name": "ColonySpendingCategory", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Planet", "snippet": "    public Planet planet()            { return colony().planet(); }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/colony/ColonySpendingCategory.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Serializable"], "modifiers": ["public", "abstract"]}}, {"id": 60693, "method_name": "empire", "class_name": "ColonySpendingCategory", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Empire", "snippet": "    public Empire empire()            { return colony().empire(); }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/colony/ColonySpendingCategory.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Serializable"], "modifiers": ["public", "abstract"]}}, {"id": 60694, "method_name": "tech", "class_name": "ColonySpendingCategory", "params": [], "throws": null, "modifiers": ["public"], "return_type": "TechTree", "snippet": "    public TechTree tech()            { return empire().tech(); }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/colony/ColonySpendingCategory.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Serializable"], "modifiers": ["public", "abstract"]}}, {"id": 60695, "method_name": "name", "class_name": "ColonySpendingCategory", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String name()              { return \"\"; }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/colony/ColonySpendingCategory.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Serializable"], "modifiers": ["public", "abstract"]}}, {"id": 60696, "method_name": "orderedValue", "class_name": "ColonySpendingCategory", "params": [], "throws": null, "modifiers": ["public"], "return_type": "float", "snippet": "    public float orderedValue()      { return colony.locked(categoryType()) ? pct() : 0; }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/colony/ColonySpendingCategory.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Serializable"], "modifiers": ["public", "abstract"]}}, {"id": 60697, "method_name": "removeSpendingOrders", "class_name": "ColonySpendingCategory", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void removeSpendingOrders() { }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/colony/ColonySpendingCategory.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Serializable"], "modifiers": ["public", "abstract"]}}, {"id": 60698, "method_name": "canLowerMaintenance", "class_name": "ColonySpendingCategory", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean canLowerMaintenance() { return false; }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/colony/ColonySpendingCategory.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Serializable"], "modifiers": ["public", "abstract"]}}, {"id": 60699, "method_name": "lowerMaintenance", "class_name": "ColonySpendingCategory", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void lowerMaintenance()       { }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/colony/ColonySpendingCategory.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Serializable"], "modifiers": ["public", "abstract"]}}, {"id": 60700, "method_name": "orderedAllocation", "class_name": "ColonySpendingCategory", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int orderedAllocation()      { return (int) Math.ceil(orderedValue() * MAX_TICKS);  }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/colony/ColonySpendingCategory.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Serializable"], "modifiers": ["public", "abstract"]}}, {"id": 60701, "method_name": "adjustValue", "class_name": "ColonySpendingCategory", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int adjustValue(int amt) {\n        // attempt to adjust current value by amt\n        // return the actual amount adjusted\n        int oldValue = allocation();\n        colony.allocation(categoryType(), bounds(0,oldValue+amt,MAX_TICKS));\n        return allocation() - oldValue;\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/colony/ColonySpendingCategory.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Serializable"], "modifiers": ["public", "abstract"]}}, {"id": 60702, "method_name": "closeConnection", "class_name": "SQLUtils", "params": ["Connection"], "throws": null, "modifiers": ["final", "public", "static"], "return_type": "void", "snippet": "\tpublic static final void closeConnection( Connection con )\n    {\n    \tif( con != null )\n    \t{\n    \t\ttry\n    \t\t{\n    \t\t\t// \u0435\u0441\u043b\u0438 \u043d\u0435 \u043f\u0440\u043e\u0432\u0435\u0440\u044f\u0442\u044c isClosed \u0442\u043e \u043a\u043e\u043d\u043d\u0435\u043a\u0442\u044b \u0437\u0430\u043c\u0435\u0447\u0430\u0442\u0435\u043b\u044c\u043d\u043e\n            \t// \u0437\u0430\u043a\u0440\u044b\u0432\u0430\u044e\u0442\u0441\u044f 2 \u0440\u0430\u0437\u0430, \u0441\u043e\u0437\u0434\u0430\u0432\u0430\u044f \u043e\u0442\u0440\u0438\u0446\u0430\u0442\u0435\u043b\u044c\u043d\u043e\u0435 \u0447\u0438\u0441\u043b\u043e \u0430\u043a\u0442\u0438\u0432\u043d\u044b\u0445\n            \t// \u0441\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u0439 \u0432 \u043f\u0443\u043b\u0435\n    \t\t\tif( !con.isClosed() )\n    \t\t\t{\n    \t\t\t\tcon.close();\n    \t\t\t}\n    \t\t}\n    \t\tcatch( SQLException ex )\n    \t\t{\n    \t\t\tlog.error( ex.getMessage(), ex );\n    \t\t}\n    \t}\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/util/sql/SQLUtils.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 60703, "method_name": "getConnectionId", "class_name": "SQLUtils", "params": ["Connection"], "throws": ["SQLException"], "modifiers": ["public", "static"], "return_type": "int", "snippet": "\tpublic static int getConnectionId( Connection connection )\n\tthrows SQLException\n\t{\n\t\tString query = \"SELECT CONNECTION_ID()\";\n\t\tPreparedStatement ps = connection.prepareStatement( query );\n\t\tResultSet rs = ps.executeQuery();\n\t\tif( rs.next() )\n\t\t{\n\t\t\treturn rs.getInt( 1 ) ;\n\t\t}\n\t\tps.close();\n\n\t\treturn -1;\n\t}", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/util/sql/SQLUtils.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 60704, "method_name": "closeConnection", "class_name": "SQLUtils", "params": ["Connection"], "throws": null, "modifiers": ["final", "public", "static"], "return_type": "void", "snippet": "    public static final void closeConnection( Connection ... con )\n    {\n        for( Connection c : con )\n        {\n        \tif( c == null )\n        \t{\n        \t\tcontinue;\n        \t}\n\n            try\n            {\n                // \u0435\u0441\u043b\u0438 \u043d\u0435 \u043f\u0440\u043e\u0432\u0435\u0440\u044f\u0442\u044c isClosed \u0442\u043e \u043a\u043e\u043d\u043d\u0435\u043a\u0442\u044b \u0437\u0430\u043c\u0435\u0447\u0430\u0442\u0435\u043b\u044c\u043d\u043e\n            \t// \u0437\u0430\u043a\u0440\u044b\u0432\u0430\u044e\u0442\u0441\u044f 2 \u0440\u0430\u0437\u0430, \u0441\u043e\u0437\u0434\u0430\u0432\u0430\u044f \u043e\u0442\u0440\u0438\u0446\u0430\u0442\u0435\u043b\u044c\u043d\u043e\u0435 \u0447\u0438\u0441\u043b\u043e \u0430\u043a\u0442\u0438\u0432\u043d\u044b\u0445\n            \t// \u0441\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u0439 \u0432 \u043f\u0443\u043b\u0435\n                if( !c.isClosed() )\n                {\n                    c.close();\n                }\n            }\n            catch( Exception e )\n            {\n            \tlog.error( e.getMessage(), e );\n            }\n        }\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/util/sql/SQLUtils.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 60705, "method_name": "lastInsertId", "class_name": "SQLUtils", "params": ["PreparedStatement"], "throws": ["SQLException"], "modifiers": ["public", "static"], "return_type": "int", "snippet": "\tpublic static int lastInsertId( PreparedStatement ps )\n        throws SQLException\n    {\n    \tint id = -1;\n\n    \tResultSet rs = ps.getGeneratedKeys();\n    \tif( rs.last() ) id = rs.getInt( 1 );\n\n    \treturn id;\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/util/sql/SQLUtils.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 60706, "method_name": "tableExists", "class_name": "SQLUtils", "params": ["Connection", "String"], "throws": null, "modifiers": ["public", "static"], "return_type": "boolean", "snippet": "    public static boolean tableExists( Connection con, String tableName )\n    {\n    \tboolean result = false;\n    \ttry\n    \t{\n    \t\tif( SQLUtils.tables.contains( tableName ) )\n    \t\t{\n    \t\t\tresult = true;\n    \t\t}\n    \t\telse\n    \t\t{\n    \t\t\tif( con != null && tableName != null )\n    \t\t\t{\n    \t\t\t\tString query = \"SHOW TABLES LIKE ?\";\n    \t\t\t\tPreparedStatement ps = con.prepareStatement( query );\n    \t\t\t\tps.setString( 1, tableName );\n    \t\t\t\tResultSet rs = ps.executeQuery();\n    \t\t\t\tif( rs.next() )\n    \t\t\t\t\tresult = true;\n\n    \t\t\t\tps.close();\n    \t\t\t}\n\n    \t\t\tif( result )\n    \t\t\t{\n    \t\t\t\tSQLUtils.tables.add( tableName );\n    \t\t\t}\n    \t\t}\n    \t}\n    \tcatch( Exception ex )\n    \t{\n    \t\tUtils.log.error( ex.getMessage(), ex );\n    \t}\n\n    \treturn result;\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/util/sql/SQLUtils.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 60707, "method_name": "columnExist", "class_name": "SQLUtils", "params": ["Connection", "String", "String"], "throws": null, "modifiers": ["public", "static"], "return_type": "boolean", "snippet": "\tpublic static boolean columnExist( Connection con, String table, String column )\n\t{\n\t\tboolean result = false;\n\n\t\tfinal String key = table + \".\" + column;\n\n\t\tresult = existColumns.contains( key );\n\t\tif( !result )\n\t\t{\n\t\t\ttry\n\t\t\t{\n\t\t\t\tString query = \"SHOW COLUMNS FROM \" + table;\n\t\t\t\tPreparedStatement ps = con.prepareStatement( query );\n\t\t\t\tResultSet rs = ps.executeQuery();\n\t\t\t\twhile( rs.next() )\n\t\t\t\t{\n\t\t\t\t\tif( rs.getString( 1 ).equals( column ) )\n\t\t\t\t\t{\n\t\t\t\t\t\tresult = true;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t            ps.close();\n\t\t\t}\n\t\t\tcatch( Exception e )\n\t\t\t{\n\t\t\t\tUtils.log.error( e.getMessage(), e );\n\t\t\t}\n\n\t\t\tif( result )\n\t\t\t{\n\t\t\t\texistColumns.add( key );\n\t\t\t}\n\t\t}\n\n\t\treturn result;\n\t}", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/util/sql/SQLUtils.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 60708, "method_name": "commitConnection", "class_name": "SQLUtils", "params": ["Connection"], "throws": null, "modifiers": ["final", "public", "static"], "return_type": "void", "snippet": "    public static final void commitConnection( Connection con )\n    {\n\t\tif( con != null )\n\t\t{\n\t\t\ttry\n\t\t\t{\n\t\t\t\t// \u0435\u0441\u043b\u0438 \u043d\u0435 \u043f\u0440\u043e\u0432\u0435\u0440\u044f\u0442\u044c, \u0442\u043e \u043f\u0440\u0438 autocommit=true \u043f\u0430\u0434\u0430\u0435\u0442 \u0432 \u043b\u043e\u0433\u0430\u0445\n\t\t\t\tif( !con.getAutoCommit() )\n\t\t\t\t{\n\t\t\t\t\tcon.commit();\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch( Exception e )\n\t\t\t{\n\t\t\t\tlog.error( e.getMessage(), e );\n\t\t\t}\n\t\t}\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/util/sql/SQLUtils.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 60709, "method_name": "setAutoCommit", "class_name": "SQLUtils", "params": ["Connection"], "throws": null, "modifiers": ["final", "public", "static"], "return_type": "void", "snippet": "    public static final void setAutoCommit( Connection connection )\n    {\n    \tif( connection != null )\n    \t{\n    \t\tboolean alreadyAutoCommit = false;\n\n    \t\ttry\n            {\n\t            alreadyAutoCommit = connection.getAutoCommit();\n            }\n            catch( SQLException exception )\n            {\n            \tlog.error( exception.getMessage() );\n            }\n\n    \t\tif( !alreadyAutoCommit )\n    \t\t{\n\t    \t\ttry\n\t    \t\t{\n\t    \t\t\tconnection.setAutoCommit( true );\n\t    \t\t}\n\t    \t\tcatch( SQLException exception )\n\t    \t\t{\n\t    \t\t\tlog.error( exception.getMessage() );\n\t    \t\t}\n    \t\t}\n    \t}\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/util/sql/SQLUtils.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 60710, "method_name": "javaDateFormatToSql", "class_name": "SQLUtils", "params": ["String"], "throws": null, "modifiers": ["final", "public", "static"], "return_type": "String", "snippet": "    public static final String javaDateFormatToSql( String format )\n    {\n    \tString result = formatMap.get( format );\n    \tif( result == null )\n    \t{\n    \t\tresult = format\n\t    \t\t.replaceAll( \"yyyy\", \"%Y\" )\n\t    \t\t.replaceAll( \"MM\", \"%m\" )\n\t    \t\t.replaceAll( \"dd\", \"%d\" )\n\t    \t\t.replaceAll( \"HH\", \"%H\" )\n\t    \t\t.replaceAll( \"mm\", \"%i\" )\n\t    \t\t.replaceAll( \"ss\", \"%s\" );\n    \t\tformatMap.put( format, result );\n    \t}\n\n    \treturn result;\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/util/sql/SQLUtils.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 60711, "method_name": "getTableColumns", "class_name": "SQLUtils", "params": ["Connection", "String"], "throws": ["SQLException"], "modifiers": ["public"], "return_type": "Set<String>", "snippet": "    public Set<String> getTableColumns( Connection con, String tableName )\n    \tthrows SQLException\n    {\n    \tSet<String> result = new HashSet<String>();\n\n    \tString query = \"SHOW COLUMNS FROM \" + tableName;\n    \tPreparedStatement ps = con.prepareStatement( query );\n    \tResultSet rs = ps.executeQuery();\n    \twhile( rs.next() )\n    \t{\n    \t\tresult.add( rs.getString( 1 ) );\n    \t}\n    \tps.close();\n\n    \treturn result;\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/util/sql/SQLUtils.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 60712, "method_name": "numberRegister", "class_name": "MessageCallAction", "params": ["ActionMapping", "DynActionForm", "ConnectionSet"], "throws": ["Exception"], "modifiers": ["public"], "return_type": "ActionForward", "snippet": "    public ActionForward numberRegister(ActionMapping mapping, DynActionForm form, ConnectionSet conSet) throws Exception {\n        MessageTypeCall type = getCallMessageType(form);\n\n        String number = form.getParam(\"number\");\n        if (Utils.isBlankString(number)) {\n            throw new BGIllegalArgumentException();\n        }\n\n        CallRegistration reg = type.getRegistrationByNumber(number);\n\n        boolean check = form.getParamBoolean(\"check\", true);\n        if (check && reg != null) {\n            User user = UserCache.getUser(reg.getUserId());\n            form.getResponse().setData(\"regUser\", new IdTitle(user.getId(), user.getTitle()));\n        } else {\n            if (reg != null) {\n                News news = new News();\n                news.setUserId(User.USER_SYSTEM_ID);\n                news.setPopup(true);\n                news.setLifeTime(1);\n                news.setTitle(\"\u0412\u0430\u0448 \u043d\u043e\u043c\u0435\u0440 \u0437\u0430\u043d\u044f\u0442\");\n                news.setDescription(\"\u041f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c \" + form.getUser().getTitle() + \" \u0437\u0430\u043d\u044f\u043b \u0432\u0430\u0448 \u043d\u043e\u043c\u0435\u0440 \" + number);\n\n                new NewsDAO(conSet.getConnection()).updateNewsUsers(news, Collections.singleton(reg.getUserId()));\n\n                type.numberFree(reg.getUserId());\n            }\n\n            type.numberRegister(form.getUserId(), number);\n        }\n\n        return status(conSet, form);\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/struts/action/MessageCallAction.java", "stars": "12", "class_props": {"extends": "BaseAction", "implements": null, "modifiers": ["public"]}}, {"id": 60713, "method_name": "numberFree", "class_name": "MessageCallAction", "params": ["ActionMapping", "DynActionForm", "ConnectionSet"], "throws": ["BGException"], "modifiers": ["public"], "return_type": "ActionForward", "snippet": "    public ActionForward numberFree(ActionMapping mapping, DynActionForm form, ConnectionSet conSet) throws BGException {\n        getCallMessageType(form).numberFree(form.getUserId());\n\n        return status(conSet, form);\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/struts/action/MessageCallAction.java", "stars": "12", "class_props": {"extends": "BaseAction", "implements": null, "modifiers": ["public"]}}, {"id": 60714, "method_name": "getCallMessageType", "class_name": "MessageCallAction", "params": ["DynActionForm"], "throws": ["BGException"], "modifiers": ["private"], "return_type": "MessageTypeCall", "snippet": "    private MessageTypeCall getCallMessageType(DynActionForm form) throws BGException {\n        MessageTypeConfig config = Setup.getSetup().getConfig(MessageTypeConfig.class);\n\n        MessageType type = config.getTypeMap().get(form.getParamInt(\"typeId\"));\n        if (type == null || !(type instanceof MessageTypeCall)) {\n            throw new BGException(\"\u041d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d \u0442\u0438\u043f \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0439 \u043b\u0438\u0431\u043e \u043e\u043d \u043d\u0435 MessageTypeCall.\");\n        }\n\n        return (MessageTypeCall) type;\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/struts/action/MessageCallAction.java", "stars": "12", "class_props": {"extends": "BaseAction", "implements": null, "modifiers": ["public"]}}, {"id": 60715, "method_name": "contextLoads", "class_name": "OsworksApiApplicationTests", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "\tvoid contextLoads() {\n\t}", "url": "https://raw.githubusercontent.com/jeanpsilva/osworks/master/src/test/java/com/algaworks/osworks/OsworksApiApplicationTests.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 60716, "method_name": "lambda", "class_name": "LambdaColumn", "params": [], "throws": null, "modifiers": ["public", "static"], "return_type": "LambdaColumn<T>", "snippet": "    public static <T> LambdaColumn<T> lambda() {\n        return new LambdaColumn<>();\n    }", "url": "https://raw.githubusercontent.com/geekidea/spring-cloud-plus/master/scp-common/scp-common-core/src/main/java/io/geekidea/cloud/common/core/util/LambdaColumn.java", "stars": "22", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 60717, "method_name": "get", "class_name": "LambdaColumn", "params": ["SFunction<T,?>"], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String get(SFunction<T, ?> func) {\n        SerializedLambda lambda = LambdaUtils.resolve(func);\n        String methodName = lambda.getImplMethodName();\n        String methodPropertyName = null;\n        if (methodName.startsWith(\"get\")) {\n            methodPropertyName = methodName.substring(3);\n            methodPropertyName = methodPropertyName.substring(0, 1).toLowerCase() + methodPropertyName.substring(1);\n\n        }\n        Class<?> cls = lambda.getImplClass();\n        String className = lambda.getImplClassName();\n        if (ENTITY_COLUMN_MAP.containsKey(className)) {\n            return ENTITY_COLUMN_MAP.get(className).get(methodPropertyName);\n        }\n\n        Map<String, String> map = getPropertyColumnMap(cls);\n        if (MapUtils.isNotEmpty(map)) {\n            ENTITY_COLUMN_MAP.put(className, map);\n        }\n        return ENTITY_COLUMN_MAP.get(className).get(methodPropertyName);\n    }", "url": "https://raw.githubusercontent.com/geekidea/spring-cloud-plus/master/scp-common/scp-common-core/src/main/java/io/geekidea/cloud/common/core/util/LambdaColumn.java", "stars": "22", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 60718, "method_name": "getPropertyColumnMap", "class_name": "LambdaColumn", "params": ["Class<?>"], "throws": null, "modifiers": ["private"], "return_type": "Map<String,String>", "snippet": "    private Map<String, String> getPropertyColumnMap(Class<?> cls) {\n        TableInfo tableInfo = TableInfoHelper.getTableInfo(cls);\n        List<TableFieldInfo> tableFieldInfos = tableInfo.getFieldList();\n        if (CollectionUtils.isEmpty(tableFieldInfos)) {\n            return null;\n        }\n\n        Map<String, String> map = new ConcurrentHashMap<>();\n        String keyProperty = tableInfo.getKeyProperty();\n        String keyColumn = tableInfo.getKeyColumn();\n        map.put(keyProperty, keyColumn);\n\n        for (TableFieldInfo tableFieldInfo : tableFieldInfos) {\n            String column = tableFieldInfo.getColumn();\n            String property = tableFieldInfo.getProperty();\n            map.put(property, column);\n        }\n        return map;\n    }", "url": "https://raw.githubusercontent.com/geekidea/spring-cloud-plus/master/scp-common/scp-common-core/src/main/java/io/geekidea/cloud/common/core/util/LambdaColumn.java", "stars": "22", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 60719, "method_name": "toString", "class_name": "LoginResult", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String toString() {\n        return \"LoginResultData{\" +\n                \"username='\" + username + '\\'' +\n                \", token='\" + token + '\\'' +\n                \", mobile='\" + mobile + '\\'' +\n                \", userInfo=\" + userInfo +\n                '}';\n    }", "url": "https://raw.githubusercontent.com/guozaizai/myHttpSdkDemo/master/app/src/main/java/myapp/com/xm/myapplication/Model/LoginResult.java", "stars": "9", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 60720, "method_name": "read", "class_name": "CrLfNormalizer", "params": [], "throws": ["IOException"], "modifiers": ["public"], "return_type": "int", "snippet": "  public int read() throws IOException\n  {\n    int current;\n    if (delayed < 0)\n    {\n      current = input.read();\n    }\n    else\n    {\n      current = delayed;\n      delayed = -1;\n    }\n    if (current == 0xD)\n    {\n      current = input.read();\n      if (current != 0xA)\n      {\n        delayed = current;\n        return 0xD;\n      }\n    }\n    return current;\n  }", "url": "https://raw.githubusercontent.com/GuntherRademacher/rr/master/src/main/java/de/bottlecaps/railroad/core/CrLfNormalizer.java", "stars": "10", "class_props": {"extends": "InputStream", "implements": null, "modifiers": ["public"]}}, {"id": 60721, "method_name": "normalize", "class_name": "CrLfNormalizer", "params": ["String"], "throws": null, "modifiers": ["public", "static"], "return_type": "String", "snippet": "  public static String normalize(String s) {\n    if (s.contains(\"\\r\"))\n      s = s.replaceAll(\"\\r\\n\", \"\\n\");\n    return s;\n  }", "url": "https://raw.githubusercontent.com/GuntherRademacher/rr/master/src/main/java/de/bottlecaps/railroad/core/CrLfNormalizer.java", "stars": "10", "class_props": {"extends": "InputStream", "implements": null, "modifiers": ["public"]}}, {"id": 60722, "method_name": "resolveException", "class_name": "WebExceptionResolver", "params": ["HttpServletRequest", "HttpServletResponse", "Object", "Exception"], "throws": null, "modifiers": ["public"], "return_type": "ModelAndView", "snippet": "\tpublic ModelAndView resolveException(HttpServletRequest request,\n\t\t\tHttpServletResponse response, Object handler, Exception ex) {\n\n\t\tif (!(ex instanceof XxlJobException)) {\n\t\t\tlogger.error(\"WebExceptionResolver:{}\", ex);\n\t\t}\n\n\t\t// if json\n\t\tboolean isJson = false;\n\t\tHandlerMethod method = (HandlerMethod)handler;\n\t\tResponseBody responseBody = method.getMethodAnnotation(ResponseBody.class);\n\t\tif (responseBody != null) {\n\t\t\tisJson = true;\n\t\t}\n\n\t\t// error result\n\t\tReturnT<String> errorResult = new ReturnT<String>(ReturnT.FAIL_CODE, ex.toString().replaceAll(\"\\n\", \"<br/>\"));\n\n\t\t// response\n\t\tModelAndView mv = new ModelAndView();\n\t\tif (isJson) {\n\t\t\ttry {\n\t\t\t\tresponse.setContentType(\"application/json;charset=utf-8\");\n\t\t\t\tresponse.getWriter().print(JacksonUtil.writeValueAsString(errorResult));\n\t\t\t} catch (IOException e) {\n\t\t\t\tlogger.error(e.getMessage(), e);\n\t\t\t}\n\t\t\treturn mv;\n\t\t} else {\n\n\t\t\tmv.addObject(\"exceptionMsg\", errorResult.getMsg());\n\t\t\tmv.setViewName(\"/common/common.exception\");\n\t\t\treturn mv;\n\t\t}\n\t}", "url": "https://raw.githubusercontent.com/miaoo92/xxl-job-mongo/master/src/main/java/com/avon/rga/controller/resolver/WebExceptionResolver.java", "stars": "1", "class_props": {"extends": null, "implements": ["HandlerExceptionResolver"], "modifiers": ["public"]}}, {"id": 60723, "method_name": "load", "class_name": "LoadUtil", "params": ["Stage", "Boolean", "Task", "Task", "String"], "throws": ["IOException"], "modifiers": ["public"], "return_type": "void", "snippet": "    public void load(Stage top, Boolean mode,Task work,Task last,String titles) throws IOException {\n        init(mode);\n        \n        stage.initOwner(top);\n        stage.setX(top.getX()+top.getWidth()/2-300);\n        stage.setY(top.getY()+top.getHeight()/2-63);\n        stage.show();\n        \n        loadPanelControl.initialization(top,mode,work,last,titles);\n    }", "url": "https://raw.githubusercontent.com/fordes123/Subtitles-View/master/src/main/java/org/fordes/subview/util/LoadUtil.java", "stars": "151", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 60724, "method_name": "load", "class_name": "LoadUtil", "params": ["Stage", "Boolean", "File"], "throws": ["IOException"], "modifiers": ["public"], "return_type": "void", "snippet": "    public void load(Stage top, Boolean mode, File audio) throws IOException {\n        init(mode);\n        \n        stage.initOwner(top);\n        stage.setX(top.getX()+top.getWidth()/2-300);\n        stage.setY(top.getY()+top.getHeight()/2-63);\n        stage.show();\n        \n        loadPanelControl.initialization(top,mode,audio);\n    }", "url": "https://raw.githubusercontent.com/fordes123/Subtitles-View/master/src/main/java/org/fordes/subview/util/LoadUtil.java", "stars": "151", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 60725, "method_name": "init", "class_name": "LoadUtil", "params": ["Boolean"], "throws": ["IOException"], "modifiers": ["private"], "return_type": "void", "snippet": "    private void init(Boolean mode) throws IOException {\n\n        FXMLLoader fxmlLoader=new FXMLLoader(getClass().getClassLoader().getResource(\"from/LoadPanel.fxml\"));\n        Parent root = fxmlLoader.load();\n        Scene scene = new Scene(root);\n        scene.setFill(Color.TRANSPARENT);\n        stage.initStyle(StageStyle.TRANSPARENT);\n        stage.setAlwaysOnTop(true);\n        stage.setScene(scene);\n        if(!mode)\n            stage.getScene().getStylesheets().add(getClass().getClassLoader().getResource(\"css/mainStyle_Light.css\").toString());\n        else\n            stage.getScene().getStylesheets().add(getClass().getClassLoader().getResource(\"css/mainStyle_Dark.css\").toString());\n        loadPanelControl=fxmlLoader.getController();   \n\n    }", "url": "https://raw.githubusercontent.com/fordes123/Subtitles-View/master/src/main/java/org/fordes/subview/util/LoadUtil.java", "stars": "151", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 60726, "method_name": "checkRead", "class_name": "ProcessorSecurityManager", "params": ["FileDescriptor"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void checkRead(FileDescriptor fd) {\n        checkIfStdDescriptor(fd);\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/engine/datax/datax-core/src/main/java/com/webank/wedatasphere/exchangis/datax/core/processor/ProcessorSecurityManager.java", "stars": "23", "class_props": {"extends": "SecurityManager", "implements": null, "modifiers": ["public"]}}, {"id": 60727, "method_name": "checkWrite", "class_name": "ProcessorSecurityManager", "params": ["FileDescriptor"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void checkWrite(FileDescriptor fd) {\n        checkIfStdDescriptor(fd);\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/engine/datax/datax-core/src/main/java/com/webank/wedatasphere/exchangis/datax/core/processor/ProcessorSecurityManager.java", "stars": "23", "class_props": {"extends": "SecurityManager", "implements": null, "modifiers": ["public"]}}, {"id": 60728, "method_name": "checkPermission", "class_name": "ProcessorSecurityManager", "params": ["Permission"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void checkPermission(Permission perm) {\n        if(perm instanceof AWTPermission){\n            throw new AccessControlException(\"have no permission to load AWT\");\n        }else if(perm instanceof FilePermission){\n            FilePermission permission = (FilePermission)perm;\n            if(SecurityConstants.FILE_EXECUTE_ACTION.equals(permission.getActions())){\n                throw new AccessControlException(\"have no permission to execute command\");\n            }\n            checkFilePermission(permission.getName());\n        }else if(perm instanceof SocketPermission){\n            checkSocket((SocketPermission)perm);\n        }else if(perm instanceof PropertyPermission){\n            checkProps((PropertyPermission)perm);\n        }else if(perm instanceof RuntimePermission){\n            checkRuntime((RuntimePermission)perm);\n        }\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/engine/datax/datax-core/src/main/java/com/webank/wedatasphere/exchangis/datax/core/processor/ProcessorSecurityManager.java", "stars": "23", "class_props": {"extends": "SecurityManager", "implements": null, "modifiers": ["public"]}}, {"id": 60729, "method_name": "checkFilePermission", "class_name": "ProcessorSecurityManager", "params": ["String"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void checkFilePermission(String file){\n        if(!new File(file).getAbsolutePath().startsWith(workDir)){\n            throw new AccessControlException(\"have no permission to : \" + file);\n        }\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/engine/datax/datax-core/src/main/java/com/webank/wedatasphere/exchangis/datax/core/processor/ProcessorSecurityManager.java", "stars": "23", "class_props": {"extends": "SecurityManager", "implements": null, "modifiers": ["public"]}}, {"id": 60730, "method_name": "checkIfStdDescriptor", "class_name": "ProcessorSecurityManager", "params": ["FileDescriptor"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void checkIfStdDescriptor(FileDescriptor fd){\n        if(!fd.equals(FileDescriptor.out) && !fd.equals(FileDescriptor.in)\n                && !fd.equals(FileDescriptor.err)) {\n            throw new AccessControlException(\"have no permission to read fd : \" + fd.toString());\n        }\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/engine/datax/datax-core/src/main/java/com/webank/wedatasphere/exchangis/datax/core/processor/ProcessorSecurityManager.java", "stars": "23", "class_props": {"extends": "SecurityManager", "implements": null, "modifiers": ["public"]}}, {"id": 60731, "method_name": "checkSocket", "class_name": "ProcessorSecurityManager", "params": ["SocketPermission"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void checkSocket(SocketPermission perm){\n        if(!this.switchMap.getOrDefault(CAN_BUILD_SOCK, false)){\n            throw new AccessControlException(\"have no permission to build a socket\");\n        }\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/engine/datax/datax-core/src/main/java/com/webank/wedatasphere/exchangis/datax/core/processor/ProcessorSecurityManager.java", "stars": "23", "class_props": {"extends": "SecurityManager", "implements": null, "modifiers": ["public"]}}, {"id": 60732, "method_name": "checkProps", "class_name": "ProcessorSecurityManager", "params": ["PropertyPermission"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void checkProps(PropertyPermission perm){\n        if(perm.getActions().equals(SecurityConstants.PROPERTY_READ_ACTION)\n                && !this.switchMap.getOrDefault(CAN_READ_PROPERTIES, true)){\n            throw new AccessControlException(\"have no permission to read property\");\n        }\n        if(perm.getActions().equals(SecurityConstants.PROPERTY_RW_ACTION)\n                && !this.switchMap.getOrDefault(CAN_RW_PROPERTIES, false)){\n            throw new AccessControlException(\"have no permission to read/write property\");\n        }\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/engine/datax/datax-core/src/main/java/com/webank/wedatasphere/exchangis/datax/core/processor/ProcessorSecurityManager.java", "stars": "23", "class_props": {"extends": "SecurityManager", "implements": null, "modifiers": ["public"]}}, {"id": 60733, "method_name": "checkRuntime", "class_name": "ProcessorSecurityManager", "params": ["RuntimePermission"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void checkRuntime(RuntimePermission perm){\n        if(perm.getName().startsWith(EXIT_JVM)){\n            throw new AccessControlException(\"have no permission to exit jvm\");\n        }\n        if(perm.getName().equals(QUEUE_PRINT_JOB)){\n            throw new AccessControlException(\"have no permission to queue print job\");\n        }\n        if(perm.getName().equals(MODIFY_THREAD_GROUP_PERMISSION) || perm.getName().equals(MODIFY_THREAD_PERMISSION)){\n            throw new AccessControlException(\"have no permission to modify thread/threadGroup\");\n        }\n        if(perm.getName().equals(SET_SECURITY_MANAGER) &&\n                !this.switchMap.getOrDefault(CAN_SET_SECURITY_MANAGER, false)){\n            throw new AccessControlException(\"have no permission to set SecurityManager\");\n        }\n\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/engine/datax/datax-core/src/main/java/com/webank/wedatasphere/exchangis/datax/core/processor/ProcessorSecurityManager.java", "stars": "23", "class_props": {"extends": "SecurityManager", "implements": null, "modifiers": ["public"]}}, {"id": 60734, "method_name": "setCanSetSecurityManager", "class_name": "ProcessorSecurityManager", "params": ["boolean"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setCanSetSecurityManager(boolean isCan){\n        this.switchMap.put(CAN_SET_SECURITY_MANAGER, isCan);\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/engine/datax/datax-core/src/main/java/com/webank/wedatasphere/exchangis/datax/core/processor/ProcessorSecurityManager.java", "stars": "23", "class_props": {"extends": "SecurityManager", "implements": null, "modifiers": ["public"]}}, {"id": 60735, "method_name": "checkType", "class_name": "ExprNE", "params": [], "throws": ["TypeException"], "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void checkType() throws TypeException {\n\t\tthis.getLeft().checkType();\n\t\tthis.getRight().checkType();\n\t\tTypeCode[] typeCodes = {TypeCode.INTEGER, TypeCode.FLOAT, TypeCode.STRING, TypeCode.BOOLEAN};\n\t\tgetLeft().getType().assertType(this, typeCodes);\n\t\tgetLeft().getType().assertType(this, getRight().getType());\n\t}", "url": "https://raw.githubusercontent.com/RhenaudTheLukark/Lea2C/master/src/fr/ubordeaux/deptinfo/compilation/lea/abstract_syntax/ExprNE.java", "stars": "3", "class_props": {"extends": "ExprBinary", "implements": null, "modifiers": ["public"]}}, {"id": 60736, "method_name": "generateCode", "class_name": "ExprNE", "params": [], "throws": ["CodeException"], "modifiers": ["public"], "return_type": "String", "snippet": "\tpublic String generateCode() throws CodeException {\n\t\tString result;\n\t\tresult = \"(\" + getLeft().generateCode()\n\t\t\t\t+ \" != \" + getRight().generateCode() + \")\";\n\t\treturn result;\n\t}", "url": "https://raw.githubusercontent.com/RhenaudTheLukark/Lea2C/master/src/fr/ubordeaux/deptinfo/compilation/lea/abstract_syntax/ExprNE.java", "stars": "3", "class_props": {"extends": "ExprBinary", "implements": null, "modifiers": ["public"]}}, {"id": 60737, "method_name": "constEval", "class_name": "ExprNE", "params": ["Environment<ExprVALUE>"], "throws": ["EnvironmentException", "TypeException"], "modifiers": ["public"], "return_type": "Object", "snippet": "\tpublic Object constEval(Environment<ExprVALUE> environment) throws EnvironmentException, TypeException {\n\t\tObject o1 = getLeft().constEval(environment);\n\t\tObject o2 = getRight().constEval(environment);\n\t\tif ((o1 instanceof Integer) && (o2 instanceof Integer)) \n\t\t\treturn new Boolean((Integer)o1 != (Integer)o2);\n\t\telse if ((o1 instanceof Float) && (o2 instanceof Float)) \n\t\t\treturn new Boolean((Float)o1 != (Float)o2);\n\t\telse if ((o1 instanceof String) && (o2 instanceof String)) \n\t\t\treturn new Boolean(!((String)o1).equals(o2));\n\t\telse if ((o1 instanceof Boolean) && (o2 instanceof Boolean)) \n\t\t\treturn new Boolean((Float)o1 != (Float)o2);\n\t\telse\n\t\t\tthrow new TypeException(\"Impossible de calculer la constante, erreur de type\", line, column);\n\t}", "url": "https://raw.githubusercontent.com/RhenaudTheLukark/Lea2C/master/src/fr/ubordeaux/deptinfo/compilation/lea/abstract_syntax/ExprNE.java", "stars": "3", "class_props": {"extends": "ExprBinary", "implements": null, "modifiers": ["public"]}}, {"id": 60738, "method_name": "toString", "class_name": "ExprNE", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "\tpublic String toString() {\n\t\treturn \"(\" + this.getLeft() + \" != \" + this.getRight() + \")\";\n\t}", "url": "https://raw.githubusercontent.com/RhenaudTheLukark/Lea2C/master/src/fr/ubordeaux/deptinfo/compilation/lea/abstract_syntax/ExprNE.java", "stars": "3", "class_props": {"extends": "ExprBinary", "implements": null, "modifiers": ["public"]}}, {"id": 60739, "method_name": "salvar", "class_name": "CategoriaDao", "params": ["Categoria"], "throws": null, "modifiers": ["public"], "return_type": "Categoria", "snippet": "\tpublic Categoria salvar(Categoria categoria) {\n\t\tEntityManager em = JPAUtil.getEntityManager();\n\t\tEntityTransaction trx = em.getTransaction();\n\n\t\ttrx.begin();\n\t\tcategoria = em.merge(categoria);\n\t\ttrx.commit();\n\t\tem.close();\n\n\t\treturn categoria;\n\n\t}", "url": "https://raw.githubusercontent.com/emanoel2712/MeusPedidos/master/src/main/java/br/senac/sc/meuspedidos/dao/CategoriaDao.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 60740, "method_name": "buscarTodos", "class_name": "CategoriaDao", "params": [], "throws": null, "modifiers": ["public"], "return_type": "List<Categoria>", "snippet": "\tpublic List<Categoria> buscarTodos() {\n\t\tEntityManager em = JPAUtil.getEntityManager();\n\t\tTypedQuery<Categoria> query = em.createQuery(\"from Categoria\", Categoria.class);\n\n\t\ttry {\n\t\t\treturn query.getResultList();\n\n\t\t} finally {\n\t\t\tem.close();\n\t\t}\n\t}", "url": "https://raw.githubusercontent.com/emanoel2712/MeusPedidos/master/src/main/java/br/senac/sc/meuspedidos/dao/CategoriaDao.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 60741, "method_name": "excluir", "class_name": "CategoriaDao", "params": ["Categoria"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void excluir(Categoria categoria) {\n\t\tEntityManager em = JPAUtil.getEntityManager();\n\t\tEntityTransaction trx = em.getTransaction();\n\n\t\ttrx.begin();\n\n\t\tem.remove(em.find(Categoria.class, categoria.getId()));\n\n\t\ttrx.commit();\n\n\t\tem.close();\n\t}", "url": "https://raw.githubusercontent.com/emanoel2712/MeusPedidos/master/src/main/java/br/senac/sc/meuspedidos/dao/CategoriaDao.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 60742, "method_name": "buscarPorId", "class_name": "CategoriaDao", "params": ["Long"], "throws": null, "modifiers": ["public"], "return_type": "Categoria", "snippet": "\tpublic Categoria buscarPorId(Long id) {\n\t\tEntityManager em = JPAUtil.getEntityManager();\n\n\t\ttry {\n\t\t\treturn em.find(Categoria.class, id);\n\n\t\t} finally {\n\t\t\tem.close();\n\t\t}\n\t}", "url": "https://raw.githubusercontent.com/emanoel2712/MeusPedidos/master/src/main/java/br/senac/sc/meuspedidos/dao/CategoriaDao.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 60743, "method_name": "pesquisarPorNome", "class_name": "CategoriaDao", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "List<Categoria>", "snippet": "\tpublic List<Categoria> pesquisarPorNome(String nome) {\n\tEntityManager em = JPAUtil.getEntityManager();\n    String consulta = \"select descricao from Categoria where descricao = :descricao\";\n    TypedQuery<Categoria> query = em.createQuery(consulta, Categoria.class);\n    query.setParameter(\"descricao\", \"%\" + nome + \"%\");\n  \n    if(!query.getResultList().isEmpty()) {\n    \treturn query.getResultList();\n\t}else {\n\t\treturn buscarTodos();\n\t}\n}", "url": "https://raw.githubusercontent.com/emanoel2712/MeusPedidos/master/src/main/java/br/senac/sc/meuspedidos/dao/CategoriaDao.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 60744, "method_name": "beforeMethod", "class_name": "TestHadoopJobUtilsFilterCommands", "params": [], "throws": ["IOException"], "modifiers": ["public"], "return_type": "void", "snippet": "  public void beforeMethod() throws IOException {\n    originalCommands = new LinkedList<String>();\n    originalCommands.add(\"kinit blah@blah\");\n    originalCommands.add(\"hadoop fs -ls\");\n    originalCommands.add(\"hadoop fs -mkdir\");\n    originalCommands.add(\"kdestroy\");\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-jobtype/src/test/java/azkaban/jobtype/TestHadoopJobUtilsFilterCommands.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 60745, "method_name": "testEmptyInputList", "class_name": "TestHadoopJobUtilsFilterCommands", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void testEmptyInputList() {\n    List<String> filteredCommands = HadoopJobUtils.filterCommands(Collections.<String> emptyList(),\n            HadoopJobUtils.MATCH_ALL_REGEX, HadoopJobUtils.MATCH_NONE_REGEX, logger);\n    Assert.assertTrue(\"filtering output of an empty collection should be empty collection\",\n            filteredCommands.isEmpty());\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-jobtype/src/test/java/azkaban/jobtype/TestHadoopJobUtilsFilterCommands.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 60746, "method_name": "testNoCommandMatchCriteria", "class_name": "TestHadoopJobUtilsFilterCommands", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void testNoCommandMatchCriteria() {\n    List<String> filteredCommands = HadoopJobUtils.filterCommands(originalCommands, \"hadoop.*\",\n            \"hadoop.*\", logger);\n    Assert.assertTrue(\"filtering output of with no matching command should be empty collection\",\n            filteredCommands.isEmpty());\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-jobtype/src/test/java/azkaban/jobtype/TestHadoopJobUtilsFilterCommands.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 60747, "method_name": "testWhitelistCriteria", "class_name": "TestHadoopJobUtilsFilterCommands", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void testWhitelistCriteria() {\n    List<String> filteredCommands = HadoopJobUtils.filterCommands(originalCommands, \"hadoop.*\",\n            HadoopJobUtils.MATCH_NONE_REGEX, logger);\n    Assert.assertEquals(filteredCommands.get(0), \"hadoop fs -ls\");\n    Assert.assertEquals(filteredCommands.get(1), \"hadoop fs -mkdir\");\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-jobtype/src/test/java/azkaban/jobtype/TestHadoopJobUtilsFilterCommands.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 60748, "method_name": "testBlackListCriteria", "class_name": "TestHadoopJobUtilsFilterCommands", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void testBlackListCriteria() {\n    List<String> filteredCommands = HadoopJobUtils.filterCommands(originalCommands,\n            HadoopJobUtils.MATCH_ALL_REGEX, \".*kinit.*\", logger);\n    Assert.assertEquals(filteredCommands.get(0), \"hadoop fs -ls\");\n    Assert.assertEquals(filteredCommands.get(1), \"hadoop fs -mkdir\");\n    Assert.assertEquals(filteredCommands.get(2), \"kdestroy\");\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-jobtype/src/test/java/azkaban/jobtype/TestHadoopJobUtilsFilterCommands.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 60749, "method_name": "testMultipleCriterias", "class_name": "TestHadoopJobUtilsFilterCommands", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void testMultipleCriterias() {\n    List<String> filteredCommands = HadoopJobUtils.filterCommands(originalCommands, \"hadoop.*\",\n            \".*kinit.*\", logger);\n    Assert.assertEquals(filteredCommands.get(0), \"hadoop fs -ls\");\n    Assert.assertEquals(filteredCommands.get(1), \"hadoop fs -mkdir\");\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-jobtype/src/test/java/azkaban/jobtype/TestHadoopJobUtilsFilterCommands.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 60750, "method_name": "saveSort", "class_name": "PrefSortItemsInShop", "params": ["Context", "String"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void saveSort(Context context, String sort_by)\n    {\n        // get a handle to shared Preference\n        SharedPreferences sharedPref;\n\n        sharedPref = context.getSharedPreferences(\n                context.getString(R.string.preference_file_name),\n                MODE_PRIVATE);\n\n        // write to the shared preference\n        SharedPreferences.Editor editor = sharedPref.edit();\n        editor.putString(\"sort_shop_items_by_shop\", sort_by);\n        editor.apply();\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/SlidingLayerSort/PreferencesSort/PrefSortItemsInShop.java", "stars": "10", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 60751, "method_name": "getSort", "class_name": "PrefSortItemsInShop", "params": ["Context"], "throws": null, "modifiers": ["public", "static"], "return_type": "String", "snippet": "    public static String getSort(Context context)\n    {\n        SharedPreferences sharedPref = context.getSharedPreferences(context.getString(R.string.preference_file_name), MODE_PRIVATE);\n        return sharedPref.getString(\"sort_shop_items_by_shop\", SlidingLayerSortItemsInShop.SORT_BY_SHOP_COUNT);\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/SlidingLayerSort/PreferencesSort/PrefSortItemsInShop.java", "stars": "10", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 60752, "method_name": "saveAscending", "class_name": "PrefSortItemsInShop", "params": ["Context", "String"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void saveAscending(Context context, String descending)\n    {\n\n        // get a handle to shared Preference\n        SharedPreferences sharedPref;\n\n        sharedPref = context.getSharedPreferences(\n                context.getString(R.string.preference_file_name),\n                MODE_PRIVATE);\n\n        // write to the shared preference\n        SharedPreferences.Editor editor = sharedPref.edit();\n        editor.putString(\"sort_descending_shop_items_by_shop\",descending);\n        editor.apply();\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/SlidingLayerSort/PreferencesSort/PrefSortItemsInShop.java", "stars": "10", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 60753, "method_name": "getAscending", "class_name": "PrefSortItemsInShop", "params": ["Context"], "throws": null, "modifiers": ["public", "static"], "return_type": "String", "snippet": "    public static String getAscending(Context context)\n    {\n\n        if(context==null)\n        {\n            context = MyApplication.getAppContext();\n        }\n\n\n\n        SharedPreferences sharedPref = context.getSharedPreferences(context.getString(R.string.preference_file_name), MODE_PRIVATE);\n        return sharedPref.getString(\"sort_descending_shop_items_by_shop\", SlidingLayerSortItemsInShop.SORT_ASCENDING);\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/SlidingLayerSort/PreferencesSort/PrefSortItemsInShop.java", "stars": "10", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 60754, "method_name": "setNonNullParameter", "class_name": "SqlTimeTypeHandler", "params": ["PreparedStatement", "int", "Time", "JdbcType"], "throws": ["SQLException"], "modifiers": ["public"], "return_type": "void", "snippet": "  public void setNonNullParameter(PreparedStatement ps, int i, Time parameter, JdbcType jdbcType)\n      throws SQLException {\n    ps.setTime(i, parameter);\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/type/SqlTimeTypeHandler.java", "stars": "15", "class_props": {"extends": "BaseTypeHandler", "implements": null, "modifiers": ["public"]}}, {"id": 60755, "method_name": "getNullableResult", "class_name": "SqlTimeTypeHandler", "params": ["ResultSet", "String"], "throws": ["SQLException"], "modifiers": ["public"], "return_type": "Time", "snippet": "  public Time getNullableResult(ResultSet rs, String columnName)\n      throws SQLException {\n    return rs.getTime(columnName);\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/type/SqlTimeTypeHandler.java", "stars": "15", "class_props": {"extends": "BaseTypeHandler", "implements": null, "modifiers": ["public"]}}, {"id": 60756, "method_name": "getNullableResult", "class_name": "SqlTimeTypeHandler", "params": ["ResultSet", "int"], "throws": ["SQLException"], "modifiers": ["public"], "return_type": "Time", "snippet": "  public Time getNullableResult(ResultSet rs, int columnIndex)\n      throws SQLException {\n    return rs.getTime(columnIndex);\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/type/SqlTimeTypeHandler.java", "stars": "15", "class_props": {"extends": "BaseTypeHandler", "implements": null, "modifiers": ["public"]}}, {"id": 60757, "method_name": "getNullableResult", "class_name": "SqlTimeTypeHandler", "params": ["CallableStatement", "int"], "throws": ["SQLException"], "modifiers": ["public"], "return_type": "Time", "snippet": "  public Time getNullableResult(CallableStatement cs, int columnIndex)\n      throws SQLException {\n    return cs.getTime(columnIndex);\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/type/SqlTimeTypeHandler.java", "stars": "15", "class_props": {"extends": "BaseTypeHandler", "implements": null, "modifiers": ["public"]}}, {"id": 60758, "method_name": "onCreate", "class_name": "LeanbackActivity", "params": ["Bundle"], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void onCreate(@Nullable Bundle savedInstanceState) {\n        requestWindowFeature(Window.FEATURE_NO_TITLE);\n        super.onCreate(savedInstanceState);\n//        View decorView = getWindow().getDecorView();\n//        int uiOptions = View.SYSTEM_UI_FLAG_HIDE_NAVIGATION\n//                | View.SYSTEM_UI_FLAG_FULLSCREEN;\n//        decorView.setSystemUiVisibility(uiOptions);\n    }", "url": "https://raw.githubusercontent.com/idanapp/IdanPlusPlus/master/app/src/main/java/com/example/idan/plusplus/ui/LeanbackActivity.java", "stars": "9", "class_props": {"extends": "FragmentActivity", "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 60759, "method_name": "attachBaseContext", "class_name": "LeanbackActivity", "params": ["Context"], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void attachBaseContext(Context base) {\n        super.attachBaseContext(app.localeManager.setLocale(base));\n    }", "url": "https://raw.githubusercontent.com/idanapp/IdanPlusPlus/master/app/src/main/java/com/example/idan/plusplus/ui/LeanbackActivity.java", "stars": "9", "class_props": {"extends": "FragmentActivity", "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 60760, "method_name": "onSearchRequested", "class_name": "LeanbackActivity", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean onSearchRequested() {\n        return true;\n    }", "url": "https://raw.githubusercontent.com/idanapp/IdanPlusPlus/master/app/src/main/java/com/example/idan/plusplus/ui/LeanbackActivity.java", "stars": "9", "class_props": {"extends": "FragmentActivity", "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 60761, "method_name": "onDestroy", "class_name": "LeanbackActivity", "params": [], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void onDestroy() {\n        super.onDestroy();\n       //Utils.disposedServices();\n    }", "url": "https://raw.githubusercontent.com/idanapp/IdanPlusPlus/master/app/src/main/java/com/example/idan/plusplus/ui/LeanbackActivity.java", "stars": "9", "class_props": {"extends": "FragmentActivity", "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 60762, "method_name": "getLayoutResId", "class_name": "AddressAdapter", "params": ["int"], "throws": null, "modifiers": ["protected"], "return_type": "int", "snippet": "    protected int getLayoutResId(int viewType) {\n        return R.layout.address_item;\n    }", "url": "https://raw.githubusercontent.com/CoboVault/cobo-vault-cold/master/app/src/main/java/com/cobo/cold/ui/fragment/main/AddressAdapter.java", "stars": "13", "class_props": {"extends": "FilterableBaseBindingAdapter", "implements": null, "modifiers": ["public"]}}, {"id": 60763, "method_name": "onBindItem", "class_name": "AddressAdapter", "params": ["AddressItemBinding", "AddressEntity"], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void onBindItem(AddressItemBinding binding, AddressEntity item) {\n        binding.setAddress(item);\n        binding.setIsEditing(false);\n        binding.editIcon.setOnClickListener(v -> {\n\n            if (!isEditing) {\n                isEditing = true;\n                if (activeIcon != null) {\n                    activeIcon.setAlpha(0.5f);\n                }\n                activeIcon = v;\n                v.setAlpha(1f);\n                binding.name.setEnabled(true);\n                binding.name.requestFocus();\n                binding.name.setSelection(binding.name.getText().length());\n                Keyboard.show(binding.name.getContext(), binding.name);\n            } else if (v == activeIcon) {\n                exitEdit();\n            }\n        });\n\n        binding.name.setOnFocusChangeListener((view, hasFocus) -> {\n            if (!hasFocus) {\n                mAddressCallback.onNameChange(binding.getAddress());\n            } else {\n                if (isEditing)  {\n                    view.setAlpha(1);\n                    focusView = view;\n                }\n            }\n        });\n\n        binding.name.setOnEditorActionListener((v, actionId, event) -> {\n            if (actionId == EditorInfo.IME_ACTION_DONE) {\n                Keyboard.hide(binding.name.getContext(), binding.name);\n                binding.name.clearFocus();\n                binding.name.setEnabled(false);\n                isEditing = false;\n                binding.editIcon.setAlpha(0.5f);\n                activeIcon = null;\n            }\n            return false;\n        });\n\n        binding.name.setFilters(new InputFilter[]{new InputFilter.LengthFilter(20)});\n        binding.setCallback(mAddressCallback);\n    }", "url": "https://raw.githubusercontent.com/CoboVault/cobo-vault-cold/master/app/src/main/java/com/cobo/cold/ui/fragment/main/AddressAdapter.java", "stars": "13", "class_props": {"extends": "FilterableBaseBindingAdapter", "implements": null, "modifiers": ["public"]}}, {"id": 60764, "method_name": "exitEdit", "class_name": "AddressAdapter", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void exitEdit() {\n        if (focusView != null) {\n            focusView.clearFocus();\n            Keyboard.hide(focusView.getContext(), focusView);\n            if (activeIcon != null) {\n                activeIcon.setAlpha(0.5f);\n            }\n            focusView.setEnabled(false);\n            isEditing = false;\n            activeIcon = null;\n        }\n    }", "url": "https://raw.githubusercontent.com/CoboVault/cobo-vault-cold/master/app/src/main/java/com/cobo/cold/ui/fragment/main/AddressAdapter.java", "stars": "13", "class_props": {"extends": "FilterableBaseBindingAdapter", "implements": null, "modifiers": ["public"]}}, {"id": 60765, "method_name": "isEditing", "class_name": "AddressAdapter", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean isEditing() {\n        return isEditing;\n    }", "url": "https://raw.githubusercontent.com/CoboVault/cobo-vault-cold/master/app/src/main/java/com/cobo/cold/ui/fragment/main/AddressAdapter.java", "stars": "13", "class_props": {"extends": "FilterableBaseBindingAdapter", "implements": null, "modifiers": ["public"]}}, {"id": 60766, "method_name": "enterSearch", "class_name": "AddressAdapter", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void enterSearch() {\n        if (focusView != null) {\n            focusView.clearFocus();\n            if (activeIcon != null) {\n                activeIcon.setAlpha(0.5f);\n            }\n            isEditing = false;\n        }\n    }", "url": "https://raw.githubusercontent.com/CoboVault/cobo-vault-cold/master/app/src/main/java/com/cobo/cold/ui/fragment/main/AddressAdapter.java", "stars": "13", "class_props": {"extends": "FilterableBaseBindingAdapter", "implements": null, "modifiers": ["public"]}}, {"id": 60767, "method_name": "getCount", "class_name": "GracePagerAdapter", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getCount() {\n        return mItems.size();\n    }", "url": "https://raw.githubusercontent.com/wurensen/GraceViewPager/master/graceviewpager/src/main/java/com/lancewu/graceviewpager/GracePagerAdapter.java", "stars": "331", "class_props": {"extends": "PagerAdapter", "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 60768, "method_name": "isViewFromObject", "class_name": "GracePagerAdapter", "params": ["View", "Object"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean isViewFromObject(@NonNull View view, @NonNull Object object) {\n        ViewItemHolder viewItemHolder = (ViewItemHolder) object;\n        return viewItemHolder.mItemView == view;\n    }", "url": "https://raw.githubusercontent.com/wurensen/GraceViewPager/master/graceviewpager/src/main/java/com/lancewu/graceviewpager/GracePagerAdapter.java", "stars": "331", "class_props": {"extends": "PagerAdapter", "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 60769, "method_name": "instantiateItem", "class_name": "GracePagerAdapter", "params": ["ViewGroup", "int"], "throws": null, "modifiers": ["public"], "return_type": "Object", "snippet": "    public Object instantiateItem(@NonNull ViewGroup container, int position) {\n        GraceLog.d(\"instantiateItem() called with: position = [\" + position + \"]\");\n        Item item = mItems.get(position);\n        View itemView = instantiateItemView(container, item, position);\n        bindItemView(itemView, item, position, true);\n        container.addView(itemView);\n        ViewItemHolder viewItemHolder = new ViewItemHolder(item, itemView, position);\n        mViewItemHolders.add(viewItemHolder);\n        return viewItemHolder;\n    }", "url": "https://raw.githubusercontent.com/wurensen/GraceViewPager/master/graceviewpager/src/main/java/com/lancewu/graceviewpager/GracePagerAdapter.java", "stars": "331", "class_props": {"extends": "PagerAdapter", "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 60770, "method_name": "destroyItem", "class_name": "GracePagerAdapter", "params": ["ViewGroup", "int", "Object"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void destroyItem(@NonNull ViewGroup container, int position, @NonNull Object object) {\n        GraceLog.d(\"destroyItem() called with: position = [\" + position + \"]\");\n        ViewItemHolder viewItemHolder = (ViewItemHolder) object;\n        container.removeView(viewItemHolder.mItemView);\n        mViewItemHolders.remove(viewItemHolder);\n    }", "url": "https://raw.githubusercontent.com/wurensen/GraceViewPager/master/graceviewpager/src/main/java/com/lancewu/graceviewpager/GracePagerAdapter.java", "stars": "331", "class_props": {"extends": "PagerAdapter", "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 60771, "method_name": "getItemPosition", "class_name": "GracePagerAdapter", "params": ["Object"], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getItemPosition(@NonNull Object object) {\n        ViewItemHolder viewItemHolder = (ViewItemHolder) object;\n        Item item = viewItemHolder.mItem;\n        // \u5224\u65ad\u5f53\u524d\u5185\u5b58\u4e2d\u9875\u9762\u6570\u636e\u662f\u5426\u8fd8\u5b58\u5728\u4e8e\u5237\u65b0\u540e\u7684\u6570\u636e\u96c6\u5408\u4e2d\uff0c\u4e0d\u5b58\u5728\u8fd4\u56dePOSITION_NONE\u8fdb\u884c\u79fb\u9664\n        int newPos = mItems.indexOf(item);\n        int itemPosition = newPos == -1 ? POSITION_NONE : newPos;\n        int oldPos = viewItemHolder.mPosition;\n        GraceLog.d(\"getItemPosition: oldPos=\" + oldPos + \",newPos=\" + newPos);\n        if (itemPosition >= 0) {\n            // \u6570\u636e\u7d22\u5f15\u53d1\u751f\u6539\u53d8\n            if (oldPos != itemPosition) {\n                // \u66f4\u65b0\u7d22\u5f15\u4f4d\u7f6e\n                viewItemHolder.mPosition = itemPosition;\n            }\n            // \u5f53\u524d\u9875\u9762\u91cd\u65b0\u7ed1\u5b9a\u6570\u636e\uff0c\u4ee5\u4fbf\u4e8e\u5237\u65b0\u89c6\u56fe\u5185\u5bb9\n            bindItemView(viewItemHolder.mItemView, item, itemPosition, false);\n        }\n        return itemPosition;\n    }", "url": "https://raw.githubusercontent.com/wurensen/GraceViewPager/master/graceviewpager/src/main/java/com/lancewu/graceviewpager/GracePagerAdapter.java", "stars": "331", "class_props": {"extends": "PagerAdapter", "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 60772, "method_name": "notifyDataSetChanged", "class_name": "GracePagerAdapter", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void notifyDataSetChanged() {\n        mDataSetChanging = true;\n        super.notifyDataSetChanged();\n        mDataSetChanging = false;\n    }", "url": "https://raw.githubusercontent.com/wurensen/GraceViewPager/master/graceviewpager/src/main/java/com/lancewu/graceviewpager/GracePagerAdapter.java", "stars": "331", "class_props": {"extends": "PagerAdapter", "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 60773, "method_name": "instantiateItemView", "class_name": "GracePagerAdapter", "params": ["ViewGroup", "Item", "int"], "throws": null, "modifiers": ["protected", "abstract"], "return_type": "View", "snippet": "    protected abstract View instantiateItemView(@NonNull ViewGroup container, Item item, int position);\n\n    /**\n     * \u7ed9ItemView\u7ed1\u5b9a\u6570\u636e\uff08\u521b\u5efa\u89c6\u56fe\u4ee5\u53ca\u6570\u636e\u5237\u65b0\u65f6\u90fd\u4f1a\u8c03\u7528\uff09\n     *\n     * @param itemView \u89c6\u56fe\n     * @param item     \u6570\u636e\n     * @param position \u7d22\u5f15\n     * @param first    \u662f\u5426\u4e3a\u9996\u6b21\u7ed1\u5b9a\u8c03\u7528\uff0c\u89c6\u56fe\u521b\u5efa\u540e\u9996\u6b21\u7ed1\u5b9a\u8be5\u503c\u4e3atrue\uff1b\u6570\u636e\u5237\u65b0\u65f6\u8c03\u7528\u4e3afalse\n     */\n    protected abstract void bindItemView(@NonNull View itemView, Item item, int position, boolean first);\n\n    /**\n     * \u83b7\u53d6\u9875\u9762\u89c6\u56fe\u5bf9\u5e94\u7684\u6570\u636e\u7d22\u5f15\n     *\n     * @param page \u9875\u9762\u89c6\u56fe\n     * @return \u672a\u627e\u5230\u8fd4\u56de-1\n     */\n    public int getPageViewPosition(View page) {\n        for (ViewItemHolder viewItemHolder : mViewItemHolders) {\n            if (viewItemHolder.mItemView == page) {\n                return viewItemHolder.mPosition;\n            }\n        }\n        return -1;\n    }", "url": "https://raw.githubusercontent.com/wurensen/GraceViewPager/master/graceviewpager/src/main/java/com/lancewu/graceviewpager/GracePagerAdapter.java", "stars": "331", "class_props": {"extends": "PagerAdapter", "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 60774, "method_name": "bindItemView", "class_name": "GracePagerAdapter", "params": ["View", "Item", "int", "boolean"], "throws": null, "modifiers": ["protected", "abstract"], "return_type": "void", "snippet": "    protected abstract void bindItemView(@NonNull View itemView, Item item, int position, boolean first);\n\n    /**\n     * \u83b7\u53d6\u9875\u9762\u89c6\u56fe\u5bf9\u5e94\u7684\u6570\u636e\u7d22\u5f15\n     *\n     * @param page \u9875\u9762\u89c6\u56fe\n     * @return \u672a\u627e\u5230\u8fd4\u56de-1\n     */\n    public int getPageViewPosition(View page) {\n        for (ViewItemHolder viewItemHolder : mViewItemHolders) {\n            if (viewItemHolder.mItemView == page) {\n                return viewItemHolder.mPosition;\n            }\n        }\n        return -1;\n    }", "url": "https://raw.githubusercontent.com/wurensen/GraceViewPager/master/graceviewpager/src/main/java/com/lancewu/graceviewpager/GracePagerAdapter.java", "stars": "331", "class_props": {"extends": "PagerAdapter", "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 60775, "method_name": "getPageViewPosition", "class_name": "GracePagerAdapter", "params": ["View"], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getPageViewPosition(View page) {\n        for (ViewItemHolder viewItemHolder : mViewItemHolders) {\n            if (viewItemHolder.mItemView == page) {\n                return viewItemHolder.mPosition;\n            }\n        }\n        return -1;\n    }", "url": "https://raw.githubusercontent.com/wurensen/GraceViewPager/master/graceviewpager/src/main/java/com/lancewu/graceviewpager/GracePagerAdapter.java", "stars": "331", "class_props": {"extends": "PagerAdapter", "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 60776, "method_name": "isDataSetChanging", "class_name": "GracePagerAdapter", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean isDataSetChanging() {\n        return mDataSetChanging;\n    }", "url": "https://raw.githubusercontent.com/wurensen/GraceViewPager/master/graceviewpager/src/main/java/com/lancewu/graceviewpager/GracePagerAdapter.java", "stars": "331", "class_props": {"extends": "PagerAdapter", "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 60777, "method_name": "solution", "class_name": "OddOccurrencesInArray", "params": ["int"], "throws": null, "modifiers": ["public", "static"], "return_type": "int", "snippet": "\t public static int solution(int[] a) {\n\t        // write your code in Java SE 8\n\t        \n\t        Set<Integer> numbers = new HashSet<>();\n\t        \n\t        for (int i = 0; i < a.length; i++) {\n\t           \n\t            if (numbers.contains(a[i])) {\n\t            \tnumbers.remove(a[i]);\n\t            } else {\n\t            \tnumbers.add(a[i]);\n\t            }\n\t        }\n\t        \n\t        return numbers.iterator().next();\n\t    }", "url": "https://raw.githubusercontent.com/njcodernoob/codility-java-solutions/master/OddOccurrencesInArray.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 60778, "method_name": "main", "class_name": "OddOccurrencesInArray", "params": ["String"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "\tpublic static void main(String[] args) {\n\t\t// TODO Auto-generated method stub\n\n\t}", "url": "https://raw.githubusercontent.com/njcodernoob/codility-java-solutions/master/OddOccurrencesInArray.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 60779, "method_name": "closeContext", "class_name": "SamplePropertyValidationApplicationTests", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "\tvoid closeContext() {\n\t\tthis.context.close();\n\t}", "url": "https://raw.githubusercontent.com/spring-projects/spring-boot/master/spring-boot-tests/spring-boot-smoke-tests/spring-boot-smoke-test-property-validation/src/test/java/smoketest/propertyvalidation/SamplePropertyValidationApplicationTests.java", "stars": "47572", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 60780, "method_name": "bindValidProperties", "class_name": "SamplePropertyValidationApplicationTests", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "\tvoid bindValidProperties() {\n\t\tthis.context.register(SamplePropertyValidationApplication.class);\n\t\tTestPropertyValues.of(\"sample.host:192.168.0.1\", \"sample.port:9090\").applyTo(this.context);\n\t\tthis.context.refresh();\n\t\tSampleProperties properties = this.context.getBean(SampleProperties.class);\n\t\tassertThat(properties.getHost()).isEqualTo(\"192.168.0.1\");\n\t\tassertThat(properties.getPort()).isEqualTo(Integer.valueOf(9090));\n\t}", "url": "https://raw.githubusercontent.com/spring-projects/spring-boot/master/spring-boot-tests/spring-boot-smoke-tests/spring-boot-smoke-test-property-validation/src/test/java/smoketest/propertyvalidation/SamplePropertyValidationApplicationTests.java", "stars": "47572", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 60781, "method_name": "bindInvalidHost", "class_name": "SamplePropertyValidationApplicationTests", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "\tvoid bindInvalidHost() {\n\t\tthis.context.register(SamplePropertyValidationApplication.class);\n\t\tTestPropertyValues.of(\"sample.host:xxxxxx\", \"sample.port:9090\").applyTo(this.context);\n\t\tassertThatExceptionOfType(BeanCreationException.class).isThrownBy(() -> this.context.refresh())\n\t\t\t\t.withMessageContaining(\"Failed to bind properties under 'sample'\");\n\t}", "url": "https://raw.githubusercontent.com/spring-projects/spring-boot/master/spring-boot-tests/spring-boot-smoke-tests/spring-boot-smoke-test-property-validation/src/test/java/smoketest/propertyvalidation/SamplePropertyValidationApplicationTests.java", "stars": "47572", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 60782, "method_name": "bindNullHost", "class_name": "SamplePropertyValidationApplicationTests", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "\tvoid bindNullHost() {\n\t\tthis.context.register(SamplePropertyValidationApplication.class);\n\t\tassertThatExceptionOfType(BeanCreationException.class).isThrownBy(() -> this.context.refresh())\n\t\t\t\t.withMessageContaining(\"Failed to bind properties under 'sample'\");\n\t}", "url": "https://raw.githubusercontent.com/spring-projects/spring-boot/master/spring-boot-tests/spring-boot-smoke-tests/spring-boot-smoke-test-property-validation/src/test/java/smoketest/propertyvalidation/SamplePropertyValidationApplicationTests.java", "stars": "47572", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 60783, "method_name": "validatorOnlyCalledOnSupportedClass", "class_name": "SamplePropertyValidationApplicationTests", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "\tvoid validatorOnlyCalledOnSupportedClass() {\n\t\tthis.context.register(SamplePropertyValidationApplication.class);\n\t\tthis.context.register(ServerProperties.class); // our validator will not apply\n\t\tTestPropertyValues.of(\"sample.host:192.168.0.1\", \"sample.port:9090\").applyTo(this.context);\n\t\tthis.context.refresh();\n\t\tSampleProperties properties = this.context.getBean(SampleProperties.class);\n\t\tassertThat(properties.getHost()).isEqualTo(\"192.168.0.1\");\n\t\tassertThat(properties.getPort()).isEqualTo(Integer.valueOf(9090));\n\t}", "url": "https://raw.githubusercontent.com/spring-projects/spring-boot/master/spring-boot-tests/spring-boot-smoke-tests/spring-boot-smoke-test-property-validation/src/test/java/smoketest/propertyvalidation/SamplePropertyValidationApplicationTests.java", "stars": "47572", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 60784, "method_name": "testCoinCode", "class_name": "CoinsTest", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void testCoinCode() {\n        assertEquals(Coins.coinCodeFromCoinId(\"bitcoin\"), \"BTC\");\n        assertEquals(Coins.coinIdFromCoinCode(\"BTC\"), \"bitcoin\");\n        assertEquals(Coins.coinCodeOfIndex(60), \"ETH\");\n    }", "url": "https://raw.githubusercontent.com/CoboVault/cobo-vault-cold/master/coinlib/src/test/java/com/cobo/coinlib/CoinsTest.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 60785, "method_name": "testCoinPath", "class_name": "CoinsTest", "params": [], "throws": ["InvalidPathException"], "modifiers": ["public"], "return_type": "void", "snippet": "    public void testCoinPath() throws InvalidPathException {\n        String path = \"m/49'/0'/0'/0/0\";\n        AddressIndex add = CoinPath.parsePath(path);\n        assertEquals(add.toString(), path);\n        assertEquals(m().purpose49().coinType(0).account(0).external().address(0).toString(), path);\n\n        String path1 = \"M/49'/0'/0'/0/1\";\n\n        assertEquals(1, CoinPath.parsePath(path1).getValue());\n    }", "url": "https://raw.githubusercontent.com/CoboVault/cobo-vault-cold/master/coinlib/src/test/java/com/cobo/coinlib/CoinsTest.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 60786, "method_name": "testCurve", "class_name": "CoinsTest", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void testCurve() {\n        assertEquals(Coins.CURVE.SECP256K1, Coins.curveFromCoinCode(\"BTC\"));\n        assertEquals(Coins.CURVE.ED25519, Coins.curveFromCoinCode(\"IOST\"));\n    }", "url": "https://raw.githubusercontent.com/CoboVault/cobo-vault-cold/master/coinlib/src/test/java/com/cobo/coinlib/CoinsTest.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 60787, "method_name": "purposeNumber", "class_name": "CoinsTest", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void purposeNumber() {\n        assertEquals(Coins.purposeNumber(\"BTC\"), 49);\n        assertEquals(Coins.purposeNumber(\"XTN\"), 49);\n        assertEquals(Coins.purposeNumber(\"LTC\"), 49);\n        assertEquals(Coins.purposeNumber(\"ETH\"), 44);\n        assertEquals(Coins.purposeNumber(\"ETC\"), 44);\n    }", "url": "https://raw.githubusercontent.com/CoboVault/cobo-vault-cold/master/coinlib/src/test/java/com/cobo/coinlib/CoinsTest.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 60788, "method_name": "testSupportedCoin", "class_name": "CoinsTest", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void testSupportedCoin() {\n        assertTrue(Coins.isCoinSupported(\"BTC\"));\n        assertTrue(Coins.isCoinSupported(\"BCH\"));\n        assertTrue(Coins.isCoinSupported(\"ETC\"));\n        assertTrue(Coins.isCoinSupported(\"ETH\"));\n        assertTrue(Coins.isCoinSupported(\"LTC\"));\n        assertTrue(Coins.isCoinSupported(\"TRON\"));\n        assertTrue(Coins.isCoinSupported(\"DASH\"));\n        assertTrue(Coins.isCoinSupported(\"XZC\"));\n        assertTrue(Coins.isCoinSupported(\"DCR\"));\n        assertTrue(Coins.isCoinSupported(\"IOST\"));\n        assertTrue(Coins.isCoinSupported(\"EOS\"));\n        assertTrue(Coins.isCoinSupported(\"DASH\"));\n        assertFalse(Coins.isCoinSupported(\"ABC\"));\n    }", "url": "https://raw.githubusercontent.com/CoboVault/cobo-vault-cold/master/coinlib/src/test/java/com/cobo/coinlib/CoinsTest.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 60789, "method_name": "start", "class_name": "CoronaDesinfector", "params": ["Room"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void start(Room room) {\n        announcer.announce(\"\u041d\u0430\u0447\u0438\u043d\u0430\u0435\u043c \u0434\u0435\u0437\u0438\u043d\u0444\u0435\u043a\u0446\u0438\u044e, \u0432\u0441\u0451 \u0432\u043e\u043d!\");\n        policeman.makePeopleLeaveRoom();\n        desinfect(room);\n        announcer.announce(\"\u0420\u0438\u0441\u043a\u043d\u0438\u0442\u0435 \u0437\u0430\u0439\u0442\u0438 \u043e\u0431\u0440\u0430\u0442\u043d\u043e\");\n    }", "url": "https://raw.githubusercontent.com/Jeka1978/coronadesinfectorlifedemo/master/src/main/java/com/epam/CoronaDesinfector.java", "stars": "60", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 60790, "method_name": "desinfect", "class_name": "CoronaDesinfector", "params": ["Room"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void desinfect(Room room){\n        System.out.println(\"\u0437\u0430\u0447\u0438\u0442\u044b\u0432\u0430\u0435\u0442\u0441\u044f \u043c\u043e\u043b\u0438\u0442\u0432\u0430: '\u043a\u043e\u0440\u043e\u043d\u0430 \u0438\u0437\u044b\u0434\u0438!' - \u043c\u043e\u043b\u0438\u0442\u0432\u0430 \u043f\u0440\u043e\u0447\u0438\u0442\u0430\u043d\u0430, \u0432\u0438\u0440\u0443\u0441 \u043d\u0438\u0437\u0432\u0435\u0440\u0433\u043d\u0443\u0442 \u0432 \u0430\u0434\");\n    }", "url": "https://raw.githubusercontent.com/Jeka1978/coronadesinfectorlifedemo/master/src/main/java/com/epam/CoronaDesinfector.java", "stars": "60", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 60791, "method_name": "getDefaultAlarmUsers", "class_name": "DefaultAlarmService", "params": [], "throws": null, "modifiers": ["public"], "return_type": "List<String>", "snippet": "    public List<String> getDefaultAlarmUsers() {\n        return new ArrayList<>();\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/service/src/main/java/com/webank/wedatasphere/exchangis/alarm/DefaultAlarmService.java", "stars": "23", "class_props": {"extends": null, "implements": ["AlarmService"], "modifiers": ["public"]}}, {"id": 60792, "method_name": "doSend", "class_name": "DefaultAlarmService", "params": ["String", "Integer", "String", "List<String>"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void doSend(String alarmTitle, Integer alarmLevel, String alarmInfo, List<String> alarmReceivers) {\n        LOG.info(String.format(\"AlarmTitle: [%s], AlarmLevel: [%s], AlarmInfo: [%s], AlarmReceivers: [%s]\",\n                alarmTitle, alarmLevel, alarmInfo, StringUtils.join(alarmReceivers, \",\")));\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/service/src/main/java/com/webank/wedatasphere/exchangis/alarm/DefaultAlarmService.java", "stars": "23", "class_props": {"extends": null, "implements": ["AlarmService"], "modifiers": ["public"]}}, {"id": 60793, "method_name": "publish", "class_name": "SparrowKafkaResource", "params": ["String", "String", "String"], "throws": ["ExecutionException", "InterruptedException"], "modifiers": ["public"], "return_type": "PublishResult", "snippet": "    public PublishResult publish(@PathVariable String topic, @RequestParam String message, @RequestParam(required = false) String key)\n        throws ExecutionException, InterruptedException {\n        log.debug(\"REST request to send to Kafka topic {} with key {} the message : {}\", topic, key, message);\n        RecordMetadata metadata = producer.send(new ProducerRecord<>(topic, key, message)).get();\n        return new PublishResult(metadata.topic(), metadata.partition(), metadata.offset(), Instant.ofEpochMilli(metadata.timestamp()));\n    }", "url": "https://raw.githubusercontent.com/Vondser/mmwms-antd/master/src/main/java/com/meimos/myapp/web/rest/SparrowKafkaResource.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 60794, "method_name": "consume", "class_name": "SparrowKafkaResource", "params": ["List<String>", "Map<String,String>"], "throws": null, "modifiers": ["public"], "return_type": "SseEmitter", "snippet": "    public SseEmitter consume(@RequestParam(\"topic\") List<String> topics, @RequestParam Map<String, String> consumerParams) {\n        log.debug(\"REST request to consume records from Kafka topics {}\", topics);\n        Map<String, Object> consumerProps = kafkaProperties.getConsumerProps();\n        consumerProps.putAll(consumerParams);\n        consumerProps.remove(\"topic\");\n\n        SseEmitter emitter = new SseEmitter(0L);\n        sseExecutorService.execute(\n            () -> {\n                KafkaConsumer<String, String> consumer = new KafkaConsumer<>(consumerProps);\n                emitter.onCompletion(consumer::close);\n                consumer.subscribe(topics);\n                boolean exitLoop = false;\n                while (!exitLoop) {\n                    try {\n                        ConsumerRecords<String, String> records = consumer.poll(Duration.ofSeconds(5));\n                        for (ConsumerRecord<String, String> record : records) {\n                            emitter.send(record.value());\n                        }\n                        emitter.send(SseEmitter.event().comment(\"\"));\n                    } catch (Exception ex) {\n                        log.trace(\"Complete with error {}\", ex.getMessage(), ex);\n                        emitter.completeWithError(ex);\n                        exitLoop = true;\n                    }\n                }\n                consumer.close();\n                emitter.complete();\n            }\n        );\n        return emitter;\n    }", "url": "https://raw.githubusercontent.com/Vondser/mmwms-antd/master/src/main/java/com/meimos/myapp/web/rest/SparrowKafkaResource.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 60795, "method_name": "onAttachedToWindow", "class_name": "Practice04Alpha", "params": [], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void onAttachedToWindow() {\n        super.onAttachedToWindow();\n\n        animateBt = (Button) findViewById(R.id.animateBt);\n        imageView = (ImageView) findViewById(R.id.imageView);\n\n        animateBt.setOnClickListener(new OnClickListener() {\n            @Override\n            public void onClick(final View v) {\n                // TODO \u5728\u8fd9\u91cc\u5904\u7406\u70b9\u51fb\u4e8b\u4ef6\uff0c\u901a\u8fc7 View.animate().alpha() \u6765\u6539\u53d8 View \u7684\u900f\u660e\u5ea6\n                imageView.animate().alpha(0.8f);\n            }\n        });\n    }", "url": "https://raw.githubusercontent.com/Geekholt/Practice-CustomView/master/app/src/main/java/com/geekholt/practiceui/view/lesson5/Practice04Alpha.java", "stars": "2", "class_props": {"extends": "RelativeLayout", "implements": null, "modifiers": ["public"]}}, {"id": 60796, "method_name": "init", "class_name": "OrientationUtils", "params": [], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void init() {\n        mOrientationEventListener = new OrientationEventListener(mActivity.getApplicationContext()) {\n            @Override\n            public void onOrientationChanged(int rotation) {\n                boolean autoRotateOn = (Settings.System.getInt(mActivity.getContentResolver(), Settings.System.ACCELEROMETER_ROTATION, 0) == 1);\n                if (!autoRotateOn && mRotateWithSystem) {\n                    if (!mIsOnlyRotateLand || getIsLand() == LAND_TYPE_NULL) {\n                        return;\n                    }\n                }\n                if (mVideoPlayer != null && mVideoPlayer.isVerticalFullByVideoSize()) {\n                    return;\n                }\n                if (mIsPause) {\n                    return;\n                }\n                // \u8bbe\u7f6e\u7ad6\u5c4f\n                if (((rotation >= 0) && (rotation <= 30)) || (rotation >= 330)) {\n                    if (mClick) {\n                        if (mIsLand > LAND_TYPE_NULL && !mClickLand) {\n                            return;\n                        } else {\n                            mClickPort = true;\n                            mClick = false;\n                            mIsLand = LAND_TYPE_NULL;\n                        }\n                    } else {\n                        if (mIsLand > LAND_TYPE_NULL) {\n                            if (!mIsOnlyRotateLand) {\n                                mScreenType = ActivityInfo.SCREEN_ORIENTATION_PORTRAIT;\n                                mActivity.setRequestedOrientation(ActivityInfo.SCREEN_ORIENTATION_PORTRAIT);\n                                if (mVideoPlayer.getFullscreenButton() != null) {\n                                    if (mVideoPlayer.isIfCurrentIsFullscreen()) {\n                                        mVideoPlayer.getFullscreenButton().setImageResource(mVideoPlayer.getShrinkImageRes());\n                                    } else {\n                                        mVideoPlayer.getFullscreenButton().setImageResource(mVideoPlayer.getEnlargeImageRes());\n                                    }\n                                }\n                                mIsLand = LAND_TYPE_NULL;\n                            }\n                            mClick = false;\n                        }\n                    }\n                }\n                // \u8bbe\u7f6e\u6a2a\u5c4f\n                else if (((rotation >= 230) && (rotation <= 310))) {\n                    if (mClick) {\n                        if (!(mIsLand == LAND_TYPE_NORMAL) && !mClickPort) {\n                            return;\n                        } else {\n                            mClickLand = true;\n                            mClick = false;\n                            mIsLand = LAND_TYPE_NORMAL;\n                        }\n                    } else {\n                        if (!(mIsLand == LAND_TYPE_NORMAL)) {\n                            mScreenType = ActivityInfo.SCREEN_ORIENTATION_LANDSCAPE;\n                            mActivity.setRequestedOrientation(ActivityInfo.SCREEN_ORIENTATION_LANDSCAPE);\n                            if (mVideoPlayer.getFullscreenButton() != null) {\n                                mVideoPlayer.getFullscreenButton().setImageResource(mVideoPlayer.getShrinkImageRes());\n                            }\n                            mIsLand = 1;\n                            mClick = false;\n                        }\n                    }\n                }\n                // \u8bbe\u7f6e\u53cd\u5411\u6a2a\u5c4f\n                else if (rotation > 30 && rotation < 95) {\n                    if (mClick) {\n                        if (!(mIsLand == LAND_TYPE_REVERSE) && !mClickPort) {\n                            return;\n                        } else {\n                            mClickLand = true;\n                            mClick = false;\n                            mIsLand = LAND_TYPE_REVERSE;\n                        }\n                    } else if (!(mIsLand == LAND_TYPE_REVERSE)) {\n                        mScreenType = ActivityInfo.SCREEN_ORIENTATION_LANDSCAPE;\n                        mActivity.setRequestedOrientation(ActivityInfo.SCREEN_ORIENTATION_REVERSE_LANDSCAPE);\n                        if (mVideoPlayer.getFullscreenButton() != null) {\n                            mVideoPlayer.getFullscreenButton().setImageResource(mVideoPlayer.getShrinkImageRes());\n                        }\n                        mIsLand = LAND_TYPE_REVERSE;\n                        mClick = false;\n                    }\n                }\n            }\n        };\n        mOrientationEventListener.enable();\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/com/shuyu/gsyvideoplayer/utils/OrientationUtils.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 60797, "method_name": "resolveByClick", "class_name": "OrientationUtils", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void resolveByClick() {\n        if (mIsLand == LAND_TYPE_NULL && mVideoPlayer != null && mVideoPlayer.isVerticalFullByVideoSize()) {\n            return;\n        }\n        mClick = true;\n        if (mIsLand == LAND_TYPE_NULL) {\n            int request = mActivity.getRequestedOrientation();\n            if (request == ActivityInfo.SCREEN_ORIENTATION_REVERSE_LANDSCAPE) {\n                mScreenType = ActivityInfo.SCREEN_ORIENTATION_REVERSE_LANDSCAPE;\n            } else {\n                mScreenType = ActivityInfo.SCREEN_ORIENTATION_LANDSCAPE;\n            }\n            mActivity.setRequestedOrientation(mScreenType);\n            if (mVideoPlayer.getFullscreenButton() != null) {\n                mVideoPlayer.getFullscreenButton().setImageResource(mVideoPlayer.getShrinkImageRes());\n            }\n            mIsLand = LAND_TYPE_NORMAL;\n            mClickLand = false;\n        } else {\n            mScreenType = ActivityInfo.SCREEN_ORIENTATION_PORTRAIT;\n            mActivity.setRequestedOrientation(ActivityInfo.SCREEN_ORIENTATION_PORTRAIT);\n            if (mVideoPlayer.getFullscreenButton() != null) {\n                if (mVideoPlayer.isIfCurrentIsFullscreen()) {\n                    mVideoPlayer.getFullscreenButton().setImageResource(mVideoPlayer.getShrinkImageRes());\n                } else {\n                    mVideoPlayer.getFullscreenButton().setImageResource(mVideoPlayer.getEnlargeImageRes());\n                }\n            }\n            mIsLand = LAND_TYPE_NULL;\n            mClickPort = false;\n        }\n\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/com/shuyu/gsyvideoplayer/utils/OrientationUtils.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 60798, "method_name": "backToProtVideo", "class_name": "OrientationUtils", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int backToProtVideo() {\n        if (mIsLand > LAND_TYPE_NULL) {\n            mClick = true;\n            mActivity.setRequestedOrientation(ActivityInfo.SCREEN_ORIENTATION_PORTRAIT);\n            if (mVideoPlayer != null && mVideoPlayer.getFullscreenButton() != null)\n                mVideoPlayer.getFullscreenButton().setImageResource(mVideoPlayer.getEnlargeImageRes());\n            mIsLand = LAND_TYPE_NULL;\n            mClickPort = false;\n            return 500;\n        }\n        return LAND_TYPE_NULL;\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/com/shuyu/gsyvideoplayer/utils/OrientationUtils.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 60799, "method_name": "isEnable", "class_name": "OrientationUtils", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean isEnable() {\n        return mEnable;\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/com/shuyu/gsyvideoplayer/utils/OrientationUtils.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 60800, "method_name": "setEnable", "class_name": "OrientationUtils", "params": ["boolean"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setEnable(boolean enable) {\n        this.mEnable = enable;\n        if (mEnable) {\n            mOrientationEventListener.enable();\n        } else {\n            mOrientationEventListener.disable();\n        }\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/com/shuyu/gsyvideoplayer/utils/OrientationUtils.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 60801, "method_name": "releaseListener", "class_name": "OrientationUtils", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void releaseListener() {\n        if (mOrientationEventListener != null) {\n            mOrientationEventListener.disable();\n        }\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/com/shuyu/gsyvideoplayer/utils/OrientationUtils.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 60802, "method_name": "isClick", "class_name": "OrientationUtils", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean isClick() {\n        return mClick;\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/com/shuyu/gsyvideoplayer/utils/OrientationUtils.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 60803, "method_name": "setClick", "class_name": "OrientationUtils", "params": ["boolean"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setClick(boolean click) {\n        this.mClick = click;\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/com/shuyu/gsyvideoplayer/utils/OrientationUtils.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 60804, "method_name": "isClickLand", "class_name": "OrientationUtils", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean isClickLand() {\n        return mClickLand;\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/com/shuyu/gsyvideoplayer/utils/OrientationUtils.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 60805, "method_name": "setClickLand", "class_name": "OrientationUtils", "params": ["boolean"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setClickLand(boolean ClickLand) {\n        this.mClickLand = ClickLand;\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/com/shuyu/gsyvideoplayer/utils/OrientationUtils.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 60806, "method_name": "getIsLand", "class_name": "OrientationUtils", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getIsLand() {\n        return mIsLand;\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/com/shuyu/gsyvideoplayer/utils/OrientationUtils.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 60807, "method_name": "setIsLand", "class_name": "OrientationUtils", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setIsLand(int IsLand) {\n        this.mIsLand = IsLand;\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/com/shuyu/gsyvideoplayer/utils/OrientationUtils.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 60808, "method_name": "isClickPort", "class_name": "OrientationUtils", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean isClickPort() {\n        return mClickPort;\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/com/shuyu/gsyvideoplayer/utils/OrientationUtils.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 60809, "method_name": "setClickPort", "class_name": "OrientationUtils", "params": ["boolean"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setClickPort(boolean ClickPort) {\n        this.mClickPort = ClickPort;\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/com/shuyu/gsyvideoplayer/utils/OrientationUtils.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 60810, "method_name": "getScreenType", "class_name": "OrientationUtils", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getScreenType() {\n        return mScreenType;\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/com/shuyu/gsyvideoplayer/utils/OrientationUtils.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 60811, "method_name": "setScreenType", "class_name": "OrientationUtils", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setScreenType(int mScreenType) {\n        this.mScreenType = mScreenType;\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/com/shuyu/gsyvideoplayer/utils/OrientationUtils.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 60812, "method_name": "isRotateWithSystem", "class_name": "OrientationUtils", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean isRotateWithSystem() {\n        return mRotateWithSystem;\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/com/shuyu/gsyvideoplayer/utils/OrientationUtils.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 60813, "method_name": "isOnlyRotateLand", "class_name": "OrientationUtils", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean isOnlyRotateLand() {\n        return mIsOnlyRotateLand;\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/com/shuyu/gsyvideoplayer/utils/OrientationUtils.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 60814, "method_name": "setOnlyRotateLand", "class_name": "OrientationUtils", "params": ["boolean"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setOnlyRotateLand(boolean onlyRotateLand) {\n        this.mIsOnlyRotateLand = onlyRotateLand;\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/com/shuyu/gsyvideoplayer/utils/OrientationUtils.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 60815, "method_name": "setRotateWithSystem", "class_name": "OrientationUtils", "params": ["boolean"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setRotateWithSystem(boolean rotateWithSystem) {\n        this.mRotateWithSystem = rotateWithSystem;\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/com/shuyu/gsyvideoplayer/utils/OrientationUtils.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 60816, "method_name": "isPause", "class_name": "OrientationUtils", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean isPause() {\n        return mIsPause;\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/com/shuyu/gsyvideoplayer/utils/OrientationUtils.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 60817, "method_name": "setIsPause", "class_name": "OrientationUtils", "params": ["boolean"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setIsPause(boolean isPause) {\n        this.mIsPause = isPause;\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/com/shuyu/gsyvideoplayer/utils/OrientationUtils.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 60818, "method_name": "valueChanged", "class_name": "BlockProjectListener", "params": ["ListSelectionEvent"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void valueChanged(ListSelectionEvent e) {\n        String path= ProjectViewer.blockString+\"\\\\\"+ GUI.pvv3.elementAt(GUI.pvl3.getSelectedIndex()).toString();\n        File file=new File(path);\n        StringBuilder result = new StringBuilder();\n        BufferedReader bf= null;\n        System.out.println(path);\n        try {\n            bf = new BufferedReader(new FileReader(file));\n            String s;\n            BufferedReader bf1=new BufferedReader(new FileReader(file));\n            String s1;\n            while((s1 = bf1.readLine())!=null){\n                result.append(System.lineSeparator()+s1);\n            }\n            bf.close();\n            GUI.jt1.setText(result.toString());\n        } catch (IOException ex) {\n            ex.printStackTrace();\n        }\n    }", "url": "https://raw.githubusercontent.com/4156/MindustryModMaker/master/src/Listener/BlockProjectListener.java", "stars": "2", "class_props": {"extends": null, "implements": ["ListSelectionListener"], "modifiers": ["public"]}}, {"id": 60819, "method_name": "designGroup", "class_name": "ShipSpecialMissileShield", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String designGroup()              { return \"MissileShield\"; }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/ships/ShipSpecialMissileShield.java", "stars": "74", "class_props": {"extends": "ShipSpecial", "implements": null, "modifiers": ["final", "public"]}}, {"id": 60820, "method_name": "tech", "class_name": "ShipSpecialMissileShield", "params": [], "throws": null, "modifiers": ["public"], "return_type": "TechMissileShield", "snippet": "    public TechMissileShield tech()          { return (TechMissileShield) super.tech(); }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/ships/ShipSpecialMissileShield.java", "stars": "74", "class_props": {"extends": "ShipSpecial", "implements": null, "modifiers": ["final", "public"]}}, {"id": 60821, "method_name": "missileIntercept", "class_name": "ShipSpecialMissileShield", "params": ["ShipWeaponMissileType"], "throws": null, "modifiers": ["public"], "return_type": "float", "snippet": "    public float missileIntercept(ShipWeaponMissileType wpn) {\n        return max(0,tech().baseBlockPct - (tech().baseBlockAdjPerLevel * wpn.tech().level));\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/ships/ShipSpecialMissileShield.java", "stars": "74", "class_props": {"extends": "ShipSpecial", "implements": null, "modifiers": ["final", "public"]}}, {"id": 60822, "method_name": "getAsyncExecutor", "class_name": "AsyncConfiguration", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Executor", "snippet": "    public Executor getAsyncExecutor() {\n        log.debug(\"Creating Async Task Executor\");\n        ThreadPoolTaskExecutor executor = new ThreadPoolTaskExecutor();\n        executor.setCorePoolSize(taskExecutionProperties.getPool().getCoreSize());\n        executor.setMaxPoolSize(taskExecutionProperties.getPool().getMaxSize());\n        executor.setQueueCapacity(taskExecutionProperties.getPool().getQueueCapacity());\n        executor.setThreadNamePrefix(taskExecutionProperties.getThreadNamePrefix());\n        return new ExceptionHandlingAsyncTaskExecutor(executor);\n    }", "url": "https://raw.githubusercontent.com/gardle/gardle-web/master/src/main/java/com/gardle/config/AsyncConfiguration.java", "stars": "2", "class_props": {"extends": null, "implements": ["AsyncConfigurer"], "modifiers": ["public"]}}, {"id": 60823, "method_name": "getAsyncUncaughtExceptionHandler", "class_name": "AsyncConfiguration", "params": [], "throws": null, "modifiers": ["public"], "return_type": "AsyncUncaughtExceptionHandler", "snippet": "    public AsyncUncaughtExceptionHandler getAsyncUncaughtExceptionHandler() {\n        return new SimpleAsyncUncaughtExceptionHandler();\n    }", "url": "https://raw.githubusercontent.com/gardle/gardle-web/master/src/main/java/com/gardle/config/AsyncConfiguration.java", "stars": "2", "class_props": {"extends": null, "implements": ["AsyncConfigurer"], "modifiers": ["public"]}}, {"id": 60824, "method_name": "icons", "class_name": "ShipImage", "params": [], "throws": null, "modifiers": ["public"], "return_type": "List<String>", "snippet": "    public List<String> icons()   { return iconKeys; }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/ships/ShipImage.java", "stars": "74", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 60825, "method_name": "baseIcon", "class_name": "ShipImage", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String baseIcon()      { return iconKeys.get(0); }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/ships/ShipImage.java", "stars": "74", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 60826, "method_name": "currentIcon", "class_name": "ShipImage", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String currentIcon()   { return iconKeys.get(currentFrame); }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/ships/ShipImage.java", "stars": "74", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 60827, "method_name": "nextIcon", "class_name": "ShipImage", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String nextIcon()  {\n        currentFrame = (currentFrame +1) % iconKeys.size();\n        return currentIcon();\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/ships/ShipImage.java", "stars": "74", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 60828, "method_name": "getNumRunningFlows", "class_name": "JmxExecutorManager", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "  public int getNumRunningFlows() {\n    return this.manager.getRunningFlows().size();\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/jmx/JmxExecutorManager.java", "stars": "18", "class_props": {"extends": null, "implements": ["JmxExecutorManagerMBean"], "modifiers": ["public"]}}, {"id": 60829, "method_name": "getExecutorThreadState", "class_name": "JmxExecutorManager", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "  public String getExecutorThreadState() {\n    return this.manager.getExecutorManagerThreadState().toString();\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/jmx/JmxExecutorManager.java", "stars": "18", "class_props": {"extends": null, "implements": ["JmxExecutorManagerMBean"], "modifiers": ["public"]}}, {"id": 60830, "method_name": "getExecutorThreadStage", "class_name": "JmxExecutorManager", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "  public String getExecutorThreadStage() {\n    return this.manager.getExecutorThreadStage();\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/jmx/JmxExecutorManager.java", "stars": "18", "class_props": {"extends": null, "implements": ["JmxExecutorManagerMBean"], "modifiers": ["public"]}}, {"id": 60831, "method_name": "isThreadActive", "class_name": "JmxExecutorManager", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "  public boolean isThreadActive() {\n    return this.manager.isExecutorManagerThreadActive();\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/jmx/JmxExecutorManager.java", "stars": "18", "class_props": {"extends": null, "implements": ["JmxExecutorManagerMBean"], "modifiers": ["public"]}}, {"id": 60832, "method_name": "getLastThreadCheckTime", "class_name": "JmxExecutorManager", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Long", "snippet": "  public Long getLastThreadCheckTime() {\n    return this.manager.getLastExecutorManagerThreadCheckTime();\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/jmx/JmxExecutorManager.java", "stars": "18", "class_props": {"extends": null, "implements": ["JmxExecutorManagerMBean"], "modifiers": ["public"]}}, {"id": 60833, "method_name": "getPrimaryExecutorHostPorts", "class_name": "JmxExecutorManager", "params": [], "throws": null, "modifiers": ["public"], "return_type": "List<String>", "snippet": "  public List<String> getPrimaryExecutorHostPorts() {\n    return new ArrayList<>(this.manager.getPrimaryServerHosts());\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/jmx/JmxExecutorManager.java", "stars": "18", "class_props": {"extends": null, "implements": ["JmxExecutorManagerMBean"], "modifiers": ["public"]}}, {"id": 60834, "method_name": "getRunningFlows", "class_name": "JmxExecutorManager", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "  public String getRunningFlows() {\n    return this.manager.getRunningFlowIds();\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/jmx/JmxExecutorManager.java", "stars": "18", "class_props": {"extends": null, "implements": ["JmxExecutorManagerMBean"], "modifiers": ["public"]}}, {"id": 60835, "method_name": "isQueueProcessorActive", "class_name": "JmxExecutorManager", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "  public boolean isQueueProcessorActive() {\n    return this.manager.isQueueProcessorThreadActive();\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/jmx/JmxExecutorManager.java", "stars": "18", "class_props": {"extends": null, "implements": ["JmxExecutorManagerMBean"], "modifiers": ["public"]}}, {"id": 60836, "method_name": "getQueuedFlows", "class_name": "JmxExecutorManager", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "  public String getQueuedFlows() {\n    return this.manager.getQueuedFlowIds();\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/jmx/JmxExecutorManager.java", "stars": "18", "class_props": {"extends": null, "implements": ["JmxExecutorManagerMBean"], "modifiers": ["public"]}}, {"id": 60837, "method_name": "getQueueProcessorThreadState", "class_name": "JmxExecutorManager", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "  public String getQueueProcessorThreadState() {\n    return this.manager.getQueueProcessorThreadState().toString();\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/jmx/JmxExecutorManager.java", "stars": "18", "class_props": {"extends": null, "implements": ["JmxExecutorManagerMBean"], "modifiers": ["public"]}}, {"id": 60838, "method_name": "getAvailableExecutorComparatorNames", "class_name": "JmxExecutorManager", "params": [], "throws": null, "modifiers": ["public"], "return_type": "List<String>", "snippet": "  public List<String> getAvailableExecutorComparatorNames() {\n    return new ArrayList<>(this.manager.getAvailableExecutorComparatorNames());\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/jmx/JmxExecutorManager.java", "stars": "18", "class_props": {"extends": null, "implements": ["JmxExecutorManagerMBean"], "modifiers": ["public"]}}, {"id": 60839, "method_name": "getAvailableExecutorFilterNames", "class_name": "JmxExecutorManager", "params": [], "throws": null, "modifiers": ["public"], "return_type": "List<String>", "snippet": "  public List<String> getAvailableExecutorFilterNames() {\n    return new ArrayList<>(this.manager.getAvailableExecutorFilterNames());\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/jmx/JmxExecutorManager.java", "stars": "18", "class_props": {"extends": null, "implements": ["JmxExecutorManagerMBean"], "modifiers": ["public"]}}, {"id": 60840, "method_name": "getLastSuccessfulExecutorInfoRefresh", "class_name": "JmxExecutorManager", "params": [], "throws": null, "modifiers": ["public"], "return_type": "long", "snippet": "  public long getLastSuccessfulExecutorInfoRefresh() {\n    return this.manager.getLastSuccessfulExecutorInfoRefresh();\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/jmx/JmxExecutorManager.java", "stars": "18", "class_props": {"extends": null, "implements": ["JmxExecutorManagerMBean"], "modifiers": ["public"]}}, {"id": 60841, "method_name": "getFieldOrder", "class_name": "ITimerVal64", "params": [], "throws": null, "modifiers": ["protected"], "return_type": "List<String>", "snippet": "    protected List<String> getFieldOrder() {\n        return Arrays.asList(\"it_interval\", \"it_value\");\n    }", "url": "https://raw.githubusercontent.com/wmm1996528/unidbg_douyin10/master/src/main/java/com/github/unidbg/unix/struct/ITimerVal64.java", "stars": "16", "class_props": {"extends": "UnicornStructure", "implements": null, "modifiers": ["public"]}}, {"id": 60842, "method_name": "show", "class_name": "AuthenticateModal", "params": ["AppCompatActivity", "String", "String", "OnVerify", "Runnable"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void show(AppCompatActivity activity,\n                            String title, String subTitle,\n                            OnVerify onVerify,\n                            Runnable onForget) {\n        show(activity, title, subTitle, false, onVerify, onForget);\n    }", "url": "https://raw.githubusercontent.com/CoboVault/cobo-vault-cold/master/app/src/main/java/com/cobo/cold/ui/views/AuthenticateModal.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 60843, "method_name": "show", "class_name": "AuthenticateModal", "params": ["AppCompatActivity", "String", "String", "boolean", "OnVerify", "Runnable"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void show(AppCompatActivity activity, String title, String subTitle,\n                            boolean useFingerprint, OnVerify onVerify, Runnable onForget) {\n        PasswordInputModalBinding binding = DataBindingUtil.inflate(LayoutInflater.from(activity),\n                R.layout.password_input_modal, null, false);\n        ModalDialog dialog = ModalDialog.newInstance();\n        dialog.setBinding(binding);\n\n        initPassword(activity, title, subTitle, onVerify, onForget, binding, dialog);\n        if (useFingerprint) {\n            initFingerprint(activity, onVerify, binding, dialog);\n        }\n\n        dialog.show(activity.getSupportFragmentManager(), \"\");\n        if (!useFingerprint) {\n            Keyboard.show(activity, binding.input);\n        }\n    }", "url": "https://raw.githubusercontent.com/CoboVault/cobo-vault-cold/master/app/src/main/java/com/cobo/cold/ui/views/AuthenticateModal.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 60844, "method_name": "initFingerprint", "class_name": "AuthenticateModal", "params": ["AppCompatActivity", "OnVerify", "PasswordInputModalBinding", "ModalDialog"], "throws": null, "modifiers": ["static", "private"], "return_type": "void", "snippet": "    private static void initFingerprint(AppCompatActivity activity,\n                                        OnVerify onVerify,\n                                        PasswordInputModalBinding binding,\n                                        ModalDialog dialog) {\n        FingerprintManager.CryptoObject cryptoObject = initCryptoObject();\n        if (cryptoObject == null) {\n            binding.fingerprintLayout.setVisibility(View.GONE);\n            binding.passwordLayout.setVisibility(View.VISIBLE);\n            Keyboard.show(activity, binding.input);\n            return;\n        }\n        FingerprintKit fpKit = new FingerprintKit(activity);\n        fpKit.startVerify(new VerifyListener() {\n            @Override\n            public void onAuthenticationError(int errorCode, CharSequence errString) {\n                binding.fingerprintLayout.setVisibility(View.GONE);\n                binding.passwordLayout.setVisibility(View.VISIBLE);\n                Keyboard.show(activity, binding.input);\n            }\n\n            @Override\n            public void onAuthenticationSucceeded(FingerprintManager.CryptoObject cryptoObject) {\n                Signature signature = cryptoObject.getSignature();\n                dialog.dismiss();\n                if (onVerify != null) {\n                    onVerify.onVerify(new OnVerify.VerifyToken(null, signature));\n                }\n            }\n        }, initCryptoObject());\n        binding.fingerprintLayout.setVisibility(View.VISIBLE);\n        binding.passwordLayout.setVisibility(View.GONE);\n        binding.switchToPassword.setOnClickListener(v -> {\n            binding.fingerprintLayout.setVisibility(View.GONE);\n            binding.passwordLayout.setVisibility(View.VISIBLE);\n            fpKit.cancelVerify();\n            Keyboard.show(activity, binding.input);\n        });\n    }", "url": "https://raw.githubusercontent.com/CoboVault/cobo-vault-cold/master/app/src/main/java/com/cobo/cold/ui/views/AuthenticateModal.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 60845, "method_name": "initCryptoObject", "class_name": "AuthenticateModal", "params": [], "throws": null, "modifiers": ["static", "private"], "return_type": "FingerprintManager", "snippet": "    private static FingerprintManager.CryptoObject initCryptoObject() {\n        Signature signature;\n        try {\n            signature = Signature.getInstance(\"SHA256withECDSA\");\n            PrivateKey key = (PrivateKey) KeyStoreUtil.prepareKeyStore().getKey(SECP256R1,null);\n            signature.initSign(key);\n        } catch (NoSuchAlgorithmException | UnrecoverableKeyException | KeyStoreException | InvalidKeyException e) {\n            e.printStackTrace();\n            return null;\n        }\n        FingerprintManager.CryptoObject cryptoObject = null;\n        cryptoObject = new FingerprintManager.CryptoObject(signature);\n        return cryptoObject;\n    }", "url": "https://raw.githubusercontent.com/CoboVault/cobo-vault-cold/master/app/src/main/java/com/cobo/cold/ui/views/AuthenticateModal.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 60846, "method_name": "initPassword", "class_name": "AuthenticateModal", "params": ["AppCompatActivity", "String", "String", "OnVerify", "Runnable", "PasswordInputModalBinding", "ModalDialog"], "throws": null, "modifiers": ["static", "private"], "return_type": "void", "snippet": "    private static void initPassword(AppCompatActivity activity,\n                                     String title, String subTitle,\n                                     OnVerify onVerify,\n                                     Runnable onForget,\n                                     PasswordInputModalBinding binding,\n                                     ModalDialog dialog) {\n        ObservableField<String> password = new ObservableField<>();\n        password.set(\"\");\n        binding.setPassword(password);\n        binding.title.setText(title);\n        if (!TextUtils.isEmpty(subTitle)) {\n            binding.subTitle.setText(subTitle);\n        } else {\n            binding.subTitle.setVisibility(View.GONE);\n        }\n\n        binding.closePassword.setOnClickListener(v -> dialog.dismiss());\n        binding.closeFingerprint.setOnClickListener(v -> dialog.dismiss());\n        binding.confirm.setOnClickListener(v -> {\n\n            Handler handler = new Handler();\n            binding.confirm.setVisibility(View.GONE);\n            binding.progress.setVisibility(View.VISIBLE);\n            AppExecutors.getInstance().networkIO().execute(() -> {\n                String passwordHash = Hex.toHexString(HashUtil.twiceSha256(password.get()));\n                boolean verified = PasswordLockFragment.verifyPassword(password.get());\n\n                if (verified) {\n                    FingerprintKit.verifyPassword(activity);\n                    handler.post(() -> {\n                        Utilities.setPasswordRetryTimes(activity, 0);\n                        Utilities.setPatternRetryTimes(activity, 0);\n                        dialog.dismiss();\n                        onVerify.onVerify(new OnVerify.VerifyToken(passwordHash,null));\n                    });\n                } else {\n                    handler.post(() -> {\n                        binding.confirm.setVisibility(View.VISIBLE);\n                        binding.progress.setVisibility(View.GONE);\n                        password.set(\"\");\n                        VibratorHelper.vibrate(activity);\n                        int retry = Utilities.getPasswordRetryTimes(activity);\n                        retry += 1;\n                        Utilities.setPasswordRetryTimes(activity, retry);\n                        binding.hint.setText(getHintText(retry, activity));\n                        binding.hint.setVisibility(View.VISIBLE);\n                        if (retry >= MAX_PWD_RETRY_TIMES) {\n                            Keyboard.hide(activity, binding.input);\n                            handler.postDelayed(() -> MainPreferenceFragment.reset(activity), 1000);\n                        }\n                    });\n                }\n            });\n        });\n        binding.forget.setOnClickListener(v -> {\n            dialog.dismiss();\n            if (onForget != null) {\n                onForget.run();\n            }\n        });\n    }", "url": "https://raw.githubusercontent.com/CoboVault/cobo-vault-cold/master/app/src/main/java/com/cobo/cold/ui/views/AuthenticateModal.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 60847, "method_name": "getHintText", "class_name": "AuthenticateModal", "params": ["int", "Activity"], "throws": null, "modifiers": ["static", "private"], "return_type": "String", "snippet": "    private static String getHintText(int retryTimes, Activity activity) {\n        String hint;\n        if (retryTimes < MAX_PWD_RETRY_TIMES) {\n            hint = activity.getString(R.string.password_error_hint,\n                    MAX_PWD_RETRY_TIMES - retryTimes);\n        } else {\n            hint = activity.getString(R.string.reset_hint);\n        }\n        return hint;\n    }", "url": "https://raw.githubusercontent.com/CoboVault/cobo-vault-cold/master/app/src/main/java/com/cobo/cold/ui/views/AuthenticateModal.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 60848, "method_name": "invalid", "class_name": "VerifyToken", "params": ["VerifyToken"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "            public static void invalid(VerifyToken token) {\n                token.password = null;\n                token.signature = null;\n                token = null;\n            }", "url": "https://raw.githubusercontent.com/CoboVault/cobo-vault-cold/master/app/src/main/java/com/cobo/cold/ui/views/AuthenticateModal.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 60849, "method_name": "onDraw", "class_name": "Practice10HistogramView", "params": ["Canvas"], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void onDraw(Canvas canvas) {\n        super.onDraw(canvas);\n\n        int x = 980, y = 560;\n\n        // \u7ed8\u5236\u5750\u6807\u7cfb\n        float[] coordinateSystem = {\n                100, 60, 100, y,\n                100, y, x, y\n        };\n        mPaint.setColor(Color.BLACK);\n        mPaint.setStrokeWidth(2);\n        canvas.drawLines(coordinateSystem, mPaint);\n\n        // \u7ed8\u5236\u6807\u9898\n        String title = \"\u4e00\u5468\u6e29\u5ea6\u53d8\u5316\";\n        mPaint.setTextAlign(Paint.Align.CENTER);\n        mPaint.setTextSize(48);\n        canvas.drawText(title, getWidth() / 2, y + 140, mPaint);\n\n        int start = 30;\n        int width = 100;\n        int gap = 20;\n        int top;\n        int bottom;\n        int left = 100 + start;\n        int right = left + width;\n\n        for (int i = 0; i < weatherModels.size(); i++) {\n            // \u5f53\u524d\u6e29\u5ea6\u5bf9\u5e94\u76f4\u65b9\u56fe\u6570\u503c\u300c1 \u5ea6\u5bf9\u5e94 10 \u50cf\u7d20\u300d\n            top = y - weatherModels.get(i).temp * 10;\n            // -1 \u4e3a\u4e86\u9732\u51fa X \u8f74\n            bottom = y - 1;\n            if (i > 0) {\n                left += width + gap;\n                right += width + gap;\n            }\n\n            // \u7ed8\u5236\u6587\u5b57\uff08\u661f\u671f\u51e0\uff09\n            mPaint.setColor(Color.BLACK);\n            mPaint.setTextSize(24);\n            canvas.drawText(weatherModels.get(i).week, left + (right - left) / 2, y + 20, mPaint);\n\n            // \u7ed8\u5236\u76f4\u65b9\u56fe\n            if (40 <= weatherModels.get(i).temp) {\n                mPaint.setColor(Color.parseColor(\"#F57F17\"));\n            } else if (37 <= weatherModels.get(i).temp) {\n                mPaint.setColor(Color.parseColor(\"#FBC02D\"));\n            } else if (35 <= weatherModels.get(i).temp) {\n                mPaint.setColor(Color.parseColor(\"#FFEB3B\"));\n            } else {\n                mPaint.setColor(Color.parseColor(\"#FFF9C4\"));\n            }\n            mRect.set(left, top, right, bottom);\n            canvas.drawRect(mRect, mPaint);\n        }\n    }", "url": "https://raw.githubusercontent.com/Geekholt/Practice-CustomView/master/app/src/main/java/com/geekholt/practiceui/view/lesson1/Practice10HistogramView.java", "stars": "2", "class_props": {"extends": "View", "implements": null, "modifiers": ["public"]}}, {"id": 60850, "method_name": "getOrDefault", "class_name": "NBTHelper", "params": ["NBTTagCompound", "String", "int"], "throws": null, "modifiers": ["public", "static"], "return_type": "int", "snippet": "    public static int getOrDefault(NBTTagCompound tag, String key, int defaultValue) {\n        return tag != null && tag.hasKey(key) ? tag.getInteger(key) : defaultValue;\n    }", "url": "https://raw.githubusercontent.com/Prunoideae/PhasePotion/master/src/main/java/com/naive/phase/Auxiliary/Helper/NBTHelper.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 60851, "method_name": "getOrDefault", "class_name": "NBTHelper", "params": ["NBTTagCompound", "String", "float"], "throws": null, "modifiers": ["public", "static"], "return_type": "float", "snippet": "    public static float getOrDefault(NBTTagCompound tag, String key, float defaultValue) {\n        return tag != null && tag.hasKey(key) ? tag.getFloat(key) : defaultValue;\n    }", "url": "https://raw.githubusercontent.com/Prunoideae/PhasePotion/master/src/main/java/com/naive/phase/Auxiliary/Helper/NBTHelper.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 60852, "method_name": "getOrDefault", "class_name": "NBTHelper", "params": ["NBTTagCompound", "String", "String"], "throws": null, "modifiers": ["public", "static"], "return_type": "String", "snippet": "    public static String getOrDefault(NBTTagCompound tag, String key, String defaultValue) {\n        return tag != null && tag.hasKey(key) ? tag.getString(key) : defaultValue;\n    }", "url": "https://raw.githubusercontent.com/Prunoideae/PhasePotion/master/src/main/java/com/naive/phase/Auxiliary/Helper/NBTHelper.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 60853, "method_name": "getOrDefault", "class_name": "NBTHelper", "params": ["NBTTagCompound", "String", "boolean"], "throws": null, "modifiers": ["public", "static"], "return_type": "boolean", "snippet": "    public static boolean getOrDefault(NBTTagCompound tag, String key, boolean defaultValue) {\n        return tag != null && tag.hasKey(key) ? tag.getBoolean(key) : defaultValue;\n    }", "url": "https://raw.githubusercontent.com/Prunoideae/PhasePotion/master/src/main/java/com/naive/phase/Auxiliary/Helper/NBTHelper.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 60854, "method_name": "getSafe", "class_name": "NBTHelper", "params": ["NBTTagCompound", "String"], "throws": null, "modifiers": ["public", "static"], "return_type": "NBTTagCompound", "snippet": "    public static NBTTagCompound getSafe(NBTTagCompound tag, String key) {\n        return tag != null && tag.hasKey(key) ? (NBTTagCompound) tag.getTag(key) : new NBTTagCompound();\n    }", "url": "https://raw.githubusercontent.com/Prunoideae/PhasePotion/master/src/main/java/com/naive/phase/Auxiliary/Helper/NBTHelper.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 60855, "method_name": "fromRange", "class_name": "NBTHelper", "params": ["Range"], "throws": null, "modifiers": ["public", "static"], "return_type": "NBTTagCompound", "snippet": "    public static NBTTagCompound fromRange(Range range) {\n        NBTTagCompound tag = new NBTTagCompound();\n        tag.setFloat(\"upper\", range.getEnd());\n        tag.setFloat(\"lower\", range.getStart());\n        return tag;\n    }", "url": "https://raw.githubusercontent.com/Prunoideae/PhasePotion/master/src/main/java/com/naive/phase/Auxiliary/Helper/NBTHelper.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 60856, "method_name": "getRange", "class_name": "NBTHelper", "params": ["NBTTagCompound"], "throws": null, "modifiers": ["public", "static"], "return_type": "Range", "snippet": "    public static Range getRange(NBTTagCompound compound) {\n        if (compound == null || !compound.hasKey(\"upper\") || !compound.hasKey(\"lower\"))\n            return null;\n        return new Range(compound.getFloat(\"lower\"), compound.getFloat(\"upper\"));\n    }", "url": "https://raw.githubusercontent.com/Prunoideae/PhasePotion/master/src/main/java/com/naive/phase/Auxiliary/Helper/NBTHelper.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 60857, "method_name": "shouldUseDefaultId", "class_name": "ProviderTest", "params": [], "throws": ["Exception"], "modifiers": [], "return_type": "void", "snippet": "  void shouldUseDefaultId() throws Exception {\n    Reader reader = Resources.getResourceAsReader(\"org/apache/ibatis/submitted/multidb/MultiDbConfig.xml\");\n    DefaultSqlSessionFactory sqlSessionFactory = (DefaultSqlSessionFactory) new SqlSessionFactoryBuilder().build(reader);\n    Configuration c = sqlSessionFactory.getConfiguration();\n    assertEquals(\"hsql\", c.getDatabaseId());\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/multidb/ProviderTest.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 60858, "method_name": "shouldUseProvider", "class_name": "ProviderTest", "params": [], "throws": ["Exception"], "modifiers": [], "return_type": "void", "snippet": "  void shouldUseProvider() throws Exception {\n    Reader reader = Resources.getResourceAsReader(\"org/apache/ibatis/submitted/multidb/ProviderConfig.xml\");\n    DefaultSqlSessionFactory sqlSessionFactory = (DefaultSqlSessionFactory) new SqlSessionFactoryBuilder().build(reader);\n    Configuration c = sqlSessionFactory.getConfiguration();\n    assertEquals(\"translated\", c.getDatabaseId());\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/multidb/ProviderTest.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 60859, "method_name": "getPullToRefreshScrollDirection", "class_name": "PullToRefreshViewPager", "params": [], "throws": null, "modifiers": ["final", "public"], "return_type": "Orientation", "snippet": "\tpublic final Orientation getPullToRefreshScrollDirection() {\n\t\treturn Orientation.HORIZONTAL;\n\t}", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/Android-PullToRefresh-master/extras/PullToRefreshViewPager/src/com/handmark/pulltorefresh/extras/viewpager/PullToRefreshViewPager.java", "stars": "74", "class_props": {"extends": "PullToRefreshBase", "implements": null, "modifiers": ["public"]}}, {"id": 60860, "method_name": "createRefreshableView", "class_name": "PullToRefreshViewPager", "params": ["Context", "AttributeSet"], "throws": null, "modifiers": ["protected"], "return_type": "ViewPager", "snippet": "\tprotected ViewPager createRefreshableView(Context context, AttributeSet attrs) {\n\t\tViewPager viewPager = new ViewPager(context, attrs);\n\t\tviewPager.setId(R.id.viewpager);\n\t\treturn viewPager;\n\t}", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/Android-PullToRefresh-master/extras/PullToRefreshViewPager/src/com/handmark/pulltorefresh/extras/viewpager/PullToRefreshViewPager.java", "stars": "74", "class_props": {"extends": "PullToRefreshBase", "implements": null, "modifiers": ["public"]}}, {"id": 60861, "method_name": "isReadyForPullStart", "class_name": "PullToRefreshViewPager", "params": [], "throws": null, "modifiers": ["protected"], "return_type": "boolean", "snippet": "\tprotected boolean isReadyForPullStart() {\n\t\tViewPager refreshableView = getRefreshableView();\n\n\t\tPagerAdapter adapter = refreshableView.getAdapter();\n\t\tif (null != adapter) {\n\t\t\treturn refreshableView.getCurrentItem() == 0;\n\t\t}\n\n\t\treturn false;\n\t}", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/Android-PullToRefresh-master/extras/PullToRefreshViewPager/src/com/handmark/pulltorefresh/extras/viewpager/PullToRefreshViewPager.java", "stars": "74", "class_props": {"extends": "PullToRefreshBase", "implements": null, "modifiers": ["public"]}}, {"id": 60862, "method_name": "isReadyForPullEnd", "class_name": "PullToRefreshViewPager", "params": [], "throws": null, "modifiers": ["protected"], "return_type": "boolean", "snippet": "\tprotected boolean isReadyForPullEnd() {\n\t\tViewPager refreshableView = getRefreshableView();\n\n\t\tPagerAdapter adapter = refreshableView.getAdapter();\n\t\tif (null != adapter) {\n\t\t\treturn refreshableView.getCurrentItem() == adapter.getCount() - 1;\n\t\t}\n\n\t\treturn false;\n\t}", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/Android-PullToRefresh-master/extras/PullToRefreshViewPager/src/com/handmark/pulltorefresh/extras/viewpager/PullToRefreshViewPager.java", "stars": "74", "class_props": {"extends": "PullToRefreshBase", "implements": null, "modifiers": ["public"]}}, {"id": 60863, "method_name": "getVmInfo", "class_name": "VMInfo", "params": [], "throws": null, "modifiers": ["public", "static"], "return_type": "VMInfo", "snippet": "    public static VMInfo getVmInfo() {\n        if (vmInfo == null) {\n            synchronized (LOCK) {\n                if (vmInfo == null) {\n                    try {\n                        vmInfo = new VMInfo();\n                    } catch (Exception e) {\n                        LOG.warn(\"no need care, the fail is ignored : vmInfo init failed \" + e.getMessage(), e);\n                    }\n                }\n            }\n\n        }\n        return vmInfo;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/engine/datax/datax-core/src/main/java/com/alibaba/datax/common/statistics/VMInfo.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 60864, "method_name": "toString", "class_name": "VMInfo", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String toString() {\n        return \"the machine info  => \\n\\n\"\n                + \"\\tosInfo:\\t\" + osInfo + \"\\n\"\n                + \"\\tjvmInfo:\\t\" + jvmInfo + \"\\n\"\n                + \"\\tcpu num:\\t\" + totalProcessorCount + \"\\n\\n\"\n                + startPhyOSStatus.toString() + \"\\n\"\n                + processGCStatus.toString() + \"\\n\"\n                + processMomoryStatus.toString() + \"\\n\";\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/engine/datax/datax-core/src/main/java/com/alibaba/datax/common/statistics/VMInfo.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 60865, "method_name": "totalString", "class_name": "VMInfo", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String totalString() {\n        return (processCpuStatus.getTotalString() + processGCStatus.getTotalString());\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/engine/datax/datax-core/src/main/java/com/alibaba/datax/common/statistics/VMInfo.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 60866, "method_name": "getDelta", "class_name": "VMInfo", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void getDelta() {\n        getDelta(true);\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/engine/datax/datax-core/src/main/java/com/alibaba/datax/common/statistics/VMInfo.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 60867, "method_name": "getDelta", "class_name": "VMInfo", "params": ["boolean"], "throws": null, "modifiers": ["synchronized", "public"], "return_type": "void", "snippet": "    public synchronized void getDelta(boolean print) {\n\n        try {\n            if (VMInfo.isSunOsMBean(osMXBean)) {\n                long curUptime = runtimeMXBean.getUptime();\n                long curProcessTime = getLongFromOperatingSystem(osMXBean, \"getProcessCpuTime\");\n                //\u767e\u5206\u6bd4\uff0c uptime\u662fms\uff0cprocessTime\u662fnano\n                if ((curUptime > lastUpTime) && (curProcessTime >= lastProcessCpuTime)) {\n                    float curDeltaCpu = (float) (curProcessTime - lastProcessCpuTime) / ((curUptime - lastUpTime) * totalProcessorCount * 10000);\n                    processCpuStatus.setMaxMinCpu(curDeltaCpu);\n                    processCpuStatus.averageCpu = (float) curProcessTime / (curUptime * totalProcessorCount * 10000);\n\n                    lastUpTime = curUptime;\n                    lastProcessCpuTime = curProcessTime;\n                }\n            }\n\n            for (GarbageCollectorMXBean garbage : garbageCollectorMXBeanList) {\n\n                GCStatus gcStatus = processGCStatus.gcStatusMap.get(garbage.getName());\n                if (gcStatus == null) {\n                    gcStatus = new GCStatus();\n                    gcStatus.name = garbage.getName();\n                    processGCStatus.gcStatusMap.put(garbage.getName(), gcStatus);\n                }\n\n                long curTotalGcCount = garbage.getCollectionCount();\n                gcStatus.setCurTotalGcCount(curTotalGcCount);\n\n                long curtotalGcTime = garbage.getCollectionTime();\n                gcStatus.setCurTotalGcTime(curtotalGcTime);\n            }\n\n            if (memoryPoolMXBeanList != null && !memoryPoolMXBeanList.isEmpty()) {\n                for (MemoryPoolMXBean pool : memoryPoolMXBeanList) {\n\n                    MemoryStatus memoryStatus = processMomoryStatus.memoryStatusMap.get(pool.getName());\n                    if (memoryStatus == null) {\n                        memoryStatus = new MemoryStatus();\n                        memoryStatus.name = pool.getName();\n                        processMomoryStatus.memoryStatusMap.put(pool.getName(), memoryStatus);\n                    }\n                    memoryStatus.commitedSize = pool.getUsage().getCommitted();\n                    memoryStatus.setMaxMinUsedSize(pool.getUsage().getUsed());\n                    long maxMemory = memoryStatus.commitedSize > 0 ? memoryStatus.commitedSize : memoryStatus.maxSize;\n                    memoryStatus.setMaxMinPercent(maxMemory > 0 ? (float) 100 * memoryStatus.usedSize / maxMemory : -1);\n                }\n            }\n\n            if (print) {\n                LOG.info(processCpuStatus.getDeltaString() + processMomoryStatus.getDeltaString() + processGCStatus.getDeltaString());\n            }\n\n        } catch (Exception e) {\n            LOG.warn(\"no need care, the fail is ignored : vmInfo getDelta failed \" + e.getMessage(), e);\n        }\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/engine/datax/datax-core/src/main/java/com/alibaba/datax/common/statistics/VMInfo.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 60868, "method_name": "isSunOsMBean", "class_name": "VMInfo", "params": ["OperatingSystemMXBean"], "throws": null, "modifiers": ["public", "static"], "return_type": "boolean", "snippet": "    public static boolean isSunOsMBean(OperatingSystemMXBean operatingSystem) {\n        final String className = operatingSystem.getClass().getName();\n\n        return \"com.sun.management.UnixOperatingSystem\".equals(className);\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/engine/datax/datax-core/src/main/java/com/alibaba/datax/common/statistics/VMInfo.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 60869, "method_name": "getLongFromOperatingSystem", "class_name": "VMInfo", "params": ["OperatingSystemMXBean", "String"], "throws": null, "modifiers": ["public", "static"], "return_type": "long", "snippet": "    public static long getLongFromOperatingSystem(OperatingSystemMXBean operatingSystem, String methodName) {\n        try {\n            final Method method = operatingSystem.getClass().getMethod(methodName, (Class<?>[]) null);\n            method.setAccessible(true);\n            return (Long) method.invoke(operatingSystem, (Object[]) null);\n        } catch (final Exception e) {\n            LOG.info(String.format(\"OperatingSystemMXBean %s failed, Exception = %s \", methodName, e.getMessage()));\n        }\n\n        return -1;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/engine/datax/datax-core/src/main/java/com/alibaba/datax/common/statistics/VMInfo.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 60870, "method_name": "toString", "class_name": "PhyOSStatus", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "        public String toString() {\n            return String.format(\"\\ttotalPhysicalMemory:\\t%,.2fG\\n\"\n                            + \"\\tfreePhysicalMemory:\\t%,.2fG\\n\"\n                            + \"\\tmaxFileDescriptorCount:\\t%s\\n\"\n                            + \"\\tcurrentOpenFileDescriptorCount:\\t%s\\n\",\n                    (float) totalPhysicalMemory / GB, (float) freePhysicalMemory / GB, maxFileDescriptorCount, currentOpenFileDescriptorCount);\n        }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/engine/datax/datax-core/src/main/java/com/alibaba/datax/common/statistics/VMInfo.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["private"]}}, {"id": 60871, "method_name": "setMaxMinCpu", "class_name": "ProcessCpuStatus", "params": ["float"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "        public void setMaxMinCpu(float curCpu) {\n            this.curDeltaCpu = curCpu;\n            if (maxDeltaCpu < curCpu) {\n                maxDeltaCpu = curCpu;\n            }\n\n            if (minDeltaCpu == -1 || minDeltaCpu > curCpu) {\n                minDeltaCpu = curCpu;\n            }\n        }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/engine/datax/datax-core/src/main/java/com/alibaba/datax/common/statistics/VMInfo.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["private"]}}, {"id": 60872, "method_name": "getDeltaString", "class_name": "ProcessCpuStatus", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "        public String getDeltaString() {\n            StringBuilder sb = new StringBuilder();\n            sb.append(\"\\n\\t [delta cpu info] => \\n\");\n            sb.append(\"\\t\\t\");\n            sb.append(String.format(\"%-30s | %-30s | %-30s | %-30s \\n\", \"curDeltaCpu\", \"averageCpu\", \"maxDeltaCpu\", \"minDeltaCpu\"));\n            sb.append(\"\\t\\t\");\n            sb.append(String.format(\"%-30s | %-30s | %-30s | %-30s \\n\",\n                    String.format(\"%,.2f%%\", processCpuStatus.curDeltaCpu),\n                    String.format(\"%,.2f%%\", processCpuStatus.averageCpu),\n                    String.format(\"%,.2f%%\", processCpuStatus.maxDeltaCpu),\n                    String.format(\"%,.2f%%\\n\", processCpuStatus.minDeltaCpu)));\n\n            return sb.toString();\n        }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/engine/datax/datax-core/src/main/java/com/alibaba/datax/common/statistics/VMInfo.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["private"]}}, {"id": 60873, "method_name": "getTotalString", "class_name": "ProcessCpuStatus", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "        public String getTotalString() {\n            StringBuilder sb = new StringBuilder();\n            sb.append(\"\\n\\t [total cpu info] => \\n\");\n            sb.append(\"\\t\\t\");\n            sb.append(String.format(\"%-30s | %-30s | %-30s \\n\", \"averageCpu\", \"maxDeltaCpu\", \"minDeltaCpu\"));\n            sb.append(\"\\t\\t\");\n            sb.append(String.format(\"%-30s | %-30s | %-30s \\n\",\n                    String.format(\"%,.2f%%\", processCpuStatus.averageCpu),\n                    String.format(\"%,.2f%%\", processCpuStatus.maxDeltaCpu),\n                    String.format(\"%,.2f%%\\n\", processCpuStatus.minDeltaCpu)));\n\n            return sb.toString();\n        }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/engine/datax/datax-core/src/main/java/com/alibaba/datax/common/statistics/VMInfo.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["private"]}}, {"id": 60874, "method_name": "toString", "class_name": "ProcessGCStatus", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "        public String toString() {\n            return \"\\tGC Names\\t\" + gcStatusMap.keySet() + \"\\n\";\n        }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/engine/datax/datax-core/src/main/java/com/alibaba/datax/common/statistics/VMInfo.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["private"]}}, {"id": 60875, "method_name": "getDeltaString", "class_name": "ProcessGCStatus", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "        public String getDeltaString() {\n            StringBuilder sb = new StringBuilder();\n            sb.append(\"\\n\\t [delta gc info] => \\n\");\n            sb.append(\"\\t\\t \");\n            sb.append(String.format(\"%-20s | %-18s | %-18s | %-18s | %-18s | %-18s | %-18s | %-18s | %-18s \\n\", \"NAME\", \"curDeltaGCCount\", \"totalGCCount\", \"maxDeltaGCCount\", \"minDeltaGCCount\", \"curDeltaGCTime\", \"totalGCTime\", \"maxDeltaGCTime\", \"minDeltaGCTime\"));\n            for (GCStatus gc : gcStatusMap.values()) {\n                sb.append(\"\\t\\t \");\n                sb.append(String.format(\"%-20s | %-18s | %-18s | %-18s | %-18s | %-18s | %-18s | %-18s | %-18s \\n\",\n                        gc.name, gc.curDeltaGCCount, gc.totalGCCount, gc.maxDeltaGCCount, gc.minDeltaGCCount,\n                        String.format(\"%,.3fs\", (float) gc.curDeltaGCTime / 1000),\n                        String.format(\"%,.3fs\", (float) gc.totalGCTime / 1000),\n                        String.format(\"%,.3fs\", (float) gc.maxDeltaGCTime / 1000),\n                        String.format(\"%,.3fs\", (float) gc.minDeltaGCTime / 1000)));\n\n            }\n            return sb.toString();\n        }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/engine/datax/datax-core/src/main/java/com/alibaba/datax/common/statistics/VMInfo.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["private"]}}, {"id": 60876, "method_name": "getTotalString", "class_name": "ProcessGCStatus", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "        public String getTotalString() {\n            StringBuilder sb = new StringBuilder();\n            sb.append(\"\\n\\t [total gc info] => \\n\");\n            sb.append(\"\\t\\t \");\n            sb.append(String.format(\"%-20s | %-18s | %-18s | %-18s | %-18s | %-18s | %-18s \\n\", \"NAME\", \"totalGCCount\", \"maxDeltaGCCount\", \"minDeltaGCCount\", \"totalGCTime\", \"maxDeltaGCTime\", \"minDeltaGCTime\"));\n            for (GCStatus gc : gcStatusMap.values()) {\n                sb.append(\"\\t\\t \");\n                sb.append(String.format(\"%-20s | %-18s | %-18s | %-18s | %-18s | %-18s | %-18s \\n\",\n                        gc.name, gc.totalGCCount, gc.maxDeltaGCCount, gc.minDeltaGCCount,\n                        String.format(\"%,.3fs\", (float) gc.totalGCTime / 1000),\n                        String.format(\"%,.3fs\", (float) gc.maxDeltaGCTime / 1000),\n                        String.format(\"%,.3fs\", (float) gc.minDeltaGCTime / 1000)));\n\n            }\n            return sb.toString();\n        }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/engine/datax/datax-core/src/main/java/com/alibaba/datax/common/statistics/VMInfo.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["private"]}}, {"id": 60877, "method_name": "toString", "class_name": "ProcessMemoryStatus", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "        public String toString() {\n            StringBuilder sb = new StringBuilder();\n            sb.append(\"\\t\");\n            sb.append(String.format(\"%-30s | %-30s | %-30s \\n\", \"MEMORY_NAME\", \"allocation_size\", \"init_size\"));\n            for (MemoryStatus ms : memoryStatusMap.values()) {\n                sb.append(\"\\t\");\n                sb.append(String.format(\"%-30s | %-30s | %-30s \\n\",\n                        ms.name, String.format(\"%,.2fMB\", (float) ms.maxSize / MB), String.format(\"%,.2fMB\", (float) ms.initSize / MB)));\n            }\n            return sb.toString();\n        }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/engine/datax/datax-core/src/main/java/com/alibaba/datax/common/statistics/VMInfo.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["private"]}}, {"id": 60878, "method_name": "getDeltaString", "class_name": "ProcessMemoryStatus", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "        public String getDeltaString() {\n            StringBuilder sb = new StringBuilder();\n            sb.append(\"\\n\\t [delta memory info] => \\n\");\n            sb.append(\"\\t\\t \");\n            sb.append(String.format(\"%-30s | %-30s | %-30s | %-30s | %-30s \\n\", \"NAME\", \"used_size\", \"used_percent\", \"max_used_size\", \"max_percent\"));\n            for (MemoryStatus ms : memoryStatusMap.values()) {\n                sb.append(\"\\t\\t \");\n                sb.append(String.format(\"%-30s | %-30s | %-30s | %-30s | %-30s \\n\",\n                        ms.name, String.format(\"%,.2f\", (float) ms.usedSize / MB) + \"MB\",\n                        String.format(\"%,.2f\", (float) ms.percent) + \"%\",\n                        String.format(\"%,.2f\", (float) ms.maxUsedSize / MB) + \"MB\",\n                        String.format(\"%,.2f\", (float) ms.maxpercent) + \"%\"));\n\n            }\n            return sb.toString();\n        }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/engine/datax/datax-core/src/main/java/com/alibaba/datax/common/statistics/VMInfo.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["private"]}}, {"id": 60879, "method_name": "setCurTotalGcCount", "class_name": "GCStatus", "params": ["long"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "        public void setCurTotalGcCount(long curTotalGcCount) {\n            this.curDeltaGCCount = curTotalGcCount - totalGCCount;\n            this.totalGCCount = curTotalGcCount;\n\n            if (maxDeltaGCCount < curDeltaGCCount) {\n                maxDeltaGCCount = curDeltaGCCount;\n            }\n\n            if (minDeltaGCCount == -1 || minDeltaGCCount > curDeltaGCCount) {\n                minDeltaGCCount = curDeltaGCCount;\n            }\n        }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/engine/datax/datax-core/src/main/java/com/alibaba/datax/common/statistics/VMInfo.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["private"]}}, {"id": 60880, "method_name": "setCurTotalGcTime", "class_name": "GCStatus", "params": ["long"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "        public void setCurTotalGcTime(long curTotalGcTime) {\n            this.curDeltaGCTime = curTotalGcTime - totalGCTime;\n            this.totalGCTime = curTotalGcTime;\n\n            if (maxDeltaGCTime < curDeltaGCTime) {\n                maxDeltaGCTime = curDeltaGCTime;\n            }\n\n            if (minDeltaGCTime == -1 || minDeltaGCTime > curDeltaGCTime) {\n                minDeltaGCTime = curDeltaGCTime;\n            }\n        }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/engine/datax/datax-core/src/main/java/com/alibaba/datax/common/statistics/VMInfo.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["private"]}}, {"id": 60881, "method_name": "setMaxMinUsedSize", "class_name": "MemoryStatus", "params": ["long"], "throws": null, "modifiers": [], "return_type": "void", "snippet": "        void setMaxMinUsedSize(long curUsedSize) {\n            if (maxUsedSize < curUsedSize) {\n                maxUsedSize = curUsedSize;\n            }\n            this.usedSize = curUsedSize;\n        }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/engine/datax/datax-core/src/main/java/com/alibaba/datax/common/statistics/VMInfo.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["private"]}}, {"id": 60882, "method_name": "setMaxMinPercent", "class_name": "MemoryStatus", "params": ["float"], "throws": null, "modifiers": [], "return_type": "void", "snippet": "        void setMaxMinPercent(float curPercent) {\n            if (maxpercent < curPercent) {\n                maxpercent = curPercent;\n            }\n            this.percent = curPercent;\n        }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/engine/datax/datax-core/src/main/java/com/alibaba/datax/common/statistics/VMInfo.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["private"]}}, {"id": 60883, "method_name": "main", "class_name": "MapReduceStudy", "params": ["String"], "throws": ["Exception"], "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void main(String[] args)throws Exception {\n        List<Order> all = new ArrayList<>();\n        Collections.addAll(all,new Order(\"\u5c0f\u5f3a\u5a03\u5a03\",9.9,10),\n                new Order(\"\u7b14\u8bb0\u672c\u7535\u8111\",8985.6,8), new Order(\"\u8336\u676f\",60.5,50));\n        DoubleSummaryStatistics stat = all.stream().filter((ele)->{\n            return ele.getName().contains(\"\u5f3a\");\n        }).mapToDouble((orderObject)->orderObject.getPrice()*orderObject.getAmount()).summaryStatistics();\n        System.out.println(\"\u8d2d\u4e70\u6570\u91cf\uff1a\"+stat.getCount());\n        System.out.println(\"\u5e73\u5747\u82b1\u8d39\"+stat.getAverage());\n        System.out.println(\"\u8d2d\u4e70\u6570\u91cf\"+stat.getCount());\n    }", "url": "https://raw.githubusercontent.com/hzc869046779/JAVA-STUDY/master/src/javaSenior/MapReduceStudy.java", "stars": "10", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 60884, "method_name": "getName", "class_name": "Order", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getName() {\n        return name;\n    }", "url": "https://raw.githubusercontent.com/hzc869046779/JAVA-STUDY/master/src/javaSenior/MapReduceStudy.java", "stars": "10", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 60885, "method_name": "getPrice", "class_name": "Order", "params": [], "throws": null, "modifiers": ["public"], "return_type": "double", "snippet": "    public double getPrice() {\n        return price;\n    }", "url": "https://raw.githubusercontent.com/hzc869046779/JAVA-STUDY/master/src/javaSenior/MapReduceStudy.java", "stars": "10", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 60886, "method_name": "getAmount", "class_name": "Order", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getAmount() {\n        return amount;\n    }", "url": "https://raw.githubusercontent.com/hzc869046779/JAVA-STUDY/master/src/javaSenior/MapReduceStudy.java", "stars": "10", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 60887, "method_name": "onCreateView", "class_name": "DealRoomFragment", "params": ["LayoutInflater", "ViewGroup", "Bundle"], "throws": null, "modifiers": ["public"], "return_type": "View", "snippet": "    public View onCreateView(@NonNull LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstanceState) {\n        super.onCreateView(inflater, container, savedInstanceState);\n        View mRootView = inflater.inflate(R.layout.fragment_deal_room, null);\n        Toolbar toolbar = mRootView.findViewById(R.id.toolbar);\n        mToolbarTitle = mRootView.findViewById(R.id.toolbar_title);\n        mToolbarRight = mRootView.findViewById(R.id.toolbar_right);\n        toolbar.setTitle(\"\");\n        mToolbarTitle.setText(\"UID:\" + Constant.uid);\n        mToolbarRight.setOnClickListener(this::onClick);\n        etLoginRoomid = mRootView.findViewById(R.id.et_roomid);\n        etBtnJoinRoom = mRootView.findViewById(R.id.btn_join_room);\n        etBtnCreateRoom = mRootView.findViewById(R.id.btn_create_room);\n        tvAppVersion = mRootView.findViewById(R.id.tv_app_version);\n\n        etLoginRoomid.setOnClickListener(this::onClick);\n        etBtnJoinRoom.setOnClickListener(this::onClick);\n        etBtnCreateRoom.setOnClickListener(this::onClick);\n        tvAppVersion.setText(getString(R.string.app_version, BuildConfig.VERSION_NAME));\n        EditTextUtil.checkRoomIdEditTextChanged(etLoginRoomid, etBtnJoinRoom);\n        FacadeRtcManager.getInstance().setJoinThunderRoomObserver(observer);\n        return mRootView;\n    }", "url": "https://raw.githubusercontent.com/Aivacom/JLYLiveChat-android/master/app/src/main/java/com/mediaroom/ui/DealRoomFragment.java", "stars": "2", "class_props": {"extends": "BaseFragment", "implements": ["View"], "modifiers": ["public"]}}, {"id": 60888, "method_name": "onHiddenChanged", "class_name": "DealRoomFragment", "params": ["boolean"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onHiddenChanged(boolean hidden) {\n        super.onHiddenChanged(hidden);\n        if (!hidden && mToolbarTitle!=null) {\n            mToolbarTitle.setText(\"UID:\" + Constant.uid);\n        }\n    }", "url": "https://raw.githubusercontent.com/Aivacom/JLYLiveChat-android/master/app/src/main/java/com/mediaroom/ui/DealRoomFragment.java", "stars": "2", "class_props": {"extends": "BaseFragment", "implements": ["View"], "modifiers": ["public"]}}, {"id": 60889, "method_name": "onClick", "class_name": "DealRoomFragment", "params": ["View"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onClick(View view) {\n        switch (view.getId()) {\n            case R.id.toolbar_right:\n                logout();\n                break;\n            case R.id.btn_join_room:\n                showDialogProgress();\n                roomId = etLoginRoomid.getText().toString();\n                joinChatroom();\n                break;\n            case R.id.btn_create_room:\n                createRoom();\n                break;\n        }\n    }", "url": "https://raw.githubusercontent.com/Aivacom/JLYLiveChat-android/master/app/src/main/java/com/mediaroom/ui/DealRoomFragment.java", "stars": "2", "class_props": {"extends": "BaseFragment", "implements": ["View"], "modifiers": ["public"]}}, {"id": 60890, "method_name": "createRoom", "class_name": "DealRoomFragment", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void createRoom() {\n        showDialogProgress();\n        HMR.getService(ChatRoomService.class).createChatRoom(new ChatRoomInfo(\"\u968f\u673a\u6d4b\u8bd5\", \"\u968f\u673a\u6d4b\u8bd5\", null, null), new HMR.CompletionArg<ChatRoom>() {\n            @Override\n            public void onSuccess(ChatRoom result) {\n                roomId = Long.toString(result.getId());\n                joinChatroom();\n            }\n\n            @Override\n            public void onFailed(Error error) {\n                dissMissDialogProgress();\n                if (error.code == Error.Code.NetworkNotFound) {\n                    Toast.makeText(getActivity(), \"\u7f51\u7edc\u65e0\u6cd5\u8fde\u63a5\", Toast.LENGTH_SHORT).show();\n                } else {\n                    Toast.makeText(getActivity(), \"\u521b\u5efa\u623f\u95f4\u5931\u8d25\", Toast.LENGTH_SHORT).show();\n                }\n            }\n        });\n    }", "url": "https://raw.githubusercontent.com/Aivacom/JLYLiveChat-android/master/app/src/main/java/com/mediaroom/ui/DealRoomFragment.java", "stars": "2", "class_props": {"extends": "BaseFragment", "implements": ["View"], "modifiers": ["public"]}}, {"id": 60891, "method_name": "logout", "class_name": "DealRoomFragment", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void logout() {\n        showDialogProgress();\n        HMR.getService(MQService.class)\n                .removeSource(new Source(new Source.Shared(Constant.CHAT_GROUPID, null)));\n        HMR.close(new HMR.Completion() {\n            @Override\n            public void onSuccess() {\n                dissMissDialogProgress();\n                Utils.setIsLogin(getActivity(),false);\n                ((MainActivity) getActivity()).showFragment(MainActivity.SHOW_LOGINFRAGMENT);\n            }\n\n            @Override\n            public void onFailed(Error err) {\n                dissMissDialogProgress();\n                Toast.makeText(getActivity(), \"\u9000\u51fa\u767b\u5f55\u5931\u8d25\", Toast.LENGTH_SHORT).show();\n            }\n        });\n    }", "url": "https://raw.githubusercontent.com/Aivacom/JLYLiveChat-android/master/app/src/main/java/com/mediaroom/ui/DealRoomFragment.java", "stars": "2", "class_props": {"extends": "BaseFragment", "implements": ["View"], "modifiers": ["public"]}}, {"id": 60892, "method_name": "joinChatroom", "class_name": "DealRoomFragment", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void joinChatroom() {\n        HMR.getService(ChatRoomService.class).join(new ChatRoom(Long.parseLong(roomId)), new HashMap<>(16), new Challenges.JoiningCompletion() {\n            @Override\n            public void onReceiveChallenge(Challenges.Password challenge) {\n            }\n\n            @Override\n            public void onReceiveChallenge(Challenges.AppChallenge challenge) {\n            }\n\n            @Override\n            public void onSucceed() {\n                localLiveRoomId = roomId + HMR.getMe().getId();\n//                ThunderEngine.setLogLevel(ThunderRtcConstant.ThunderLogLevel.THUNDERLOG_LEVEL_ERROR);\n                FacadeRtcManager.getInstance().setRoomConfig(ThunderRtcConstant.ThunderRtcProfile.THUNDER_PROFILE_DEFAULT, ThunderRtcConstant.RoomConfig.THUNDER_ROOMCONFIG_LIVE);\n                FacadeRtcManager.getInstance().joinRoom(Constant.token, localLiveRoomId, String.valueOf(HMR.getMe().getId()));\n            }\n\n            @Override\n            public void onFailure(@NonNull Error err) {\n                dissMissDialogProgress();\n                if (err.code == Error.Code.ResourceNotFound) {\n                    Toast.makeText(getActivity(), \"\u623f\u95f4\u4e0d\u5b58\u5728\", Toast.LENGTH_SHORT).show();\n                } else if (err.code == Error.Code.NetworkNotFound) {\n                    Toast.makeText(getActivity(), \"\u7f51\u7edc\u65e0\u6cd5\u8fde\u63a5\", Toast.LENGTH_SHORT).show();\n                } else {\n                    Toast.makeText(getActivity(), \"\u52a0\u5165\u623f\u95f4\u5931\u8d25\", Toast.LENGTH_SHORT).show();\n                }\n            }\n        });\n    }", "url": "https://raw.githubusercontent.com/Aivacom/JLYLiveChat-android/master/app/src/main/java/com/mediaroom/ui/DealRoomFragment.java", "stars": "2", "class_props": {"extends": "BaseFragment", "implements": ["View"], "modifiers": ["public"]}}, {"id": 60893, "method_name": "newInstance", "class_name": "DealRoomFragment", "params": [], "throws": null, "modifiers": ["public", "static"], "return_type": "DealRoomFragment", "snippet": "    public static DealRoomFragment newInstance() {\n        return new DealRoomFragment();\n    }", "url": "https://raw.githubusercontent.com/Aivacom/JLYLiveChat-android/master/app/src/main/java/com/mediaroom/ui/DealRoomFragment.java", "stars": "2", "class_props": {"extends": "BaseFragment", "implements": ["View"], "modifiers": ["public"]}}, {"id": 60894, "method_name": "getId", "class_name": "ProdutoTabela", "params": [], "throws": null, "modifiers": ["public"], "return_type": "ProdutoTabelaKey", "snippet": "    public ProdutoTabelaKey getId() {\n        return id;\n    }", "url": "https://raw.githubusercontent.com/bonamigor/gera_notas/master/src/main/java/br/com/geranotas/domain/ProdutoTabela.java", "stars": "2", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 60895, "method_name": "setId", "class_name": "ProdutoTabela", "params": ["ProdutoTabelaKey"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setId(ProdutoTabelaKey id) {\n        this.id = id;\n    }", "url": "https://raw.githubusercontent.com/bonamigor/gera_notas/master/src/main/java/br/com/geranotas/domain/ProdutoTabela.java", "stars": "2", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 60896, "method_name": "getTabela", "class_name": "ProdutoTabela", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Tabela", "snippet": "    public Tabela getTabela() {\n        return tabela;\n    }", "url": "https://raw.githubusercontent.com/bonamigor/gera_notas/master/src/main/java/br/com/geranotas/domain/ProdutoTabela.java", "stars": "2", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 60897, "method_name": "setTabela", "class_name": "ProdutoTabela", "params": ["Tabela"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setTabela(Tabela tabela) {\n        this.tabela = tabela;\n    }", "url": "https://raw.githubusercontent.com/bonamigor/gera_notas/master/src/main/java/br/com/geranotas/domain/ProdutoTabela.java", "stars": "2", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 60898, "method_name": "getProduto", "class_name": "ProdutoTabela", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Produto", "snippet": "    public Produto getProduto() {\n        return produto;\n    }", "url": "https://raw.githubusercontent.com/bonamigor/gera_notas/master/src/main/java/br/com/geranotas/domain/ProdutoTabela.java", "stars": "2", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 60899, "method_name": "setProduto", "class_name": "ProdutoTabela", "params": ["Produto"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setProduto(Produto produto) {\n        this.produto = produto;\n    }", "url": "https://raw.githubusercontent.com/bonamigor/gera_notas/master/src/main/java/br/com/geranotas/domain/ProdutoTabela.java", "stars": "2", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 60900, "method_name": "newInstance", "class_name": "TVShowDetailsFragment", "params": ["Media"], "throws": null, "modifiers": ["public", "static"], "return_type": "Fragment", "snippet": "    public static Fragment newInstance(Media media) {\n        TVShowDetailsFragment fragment = new TVShowDetailsFragment();\n\n        Bundle bundle = new Bundle();\n        bundle.putParcelable(EXTRA_ITEM, media);\n\n        fragment.setArguments(bundle);\n        return fragment;\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/tv/src/main/java/butter/droid/tv/fragments/TVShowDetailsFragment.java", "stars": "4", "class_props": {"extends": "TVBaseDetailsFragment", "implements": ["MediaProvider", "OnActionClickedListener", "EpisodeCardPresenter"], "modifiers": ["public"]}}, {"id": 60901, "method_name": "onCreate", "class_name": "TVShowDetailsFragment", "params": ["Bundle"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n\n        TVButterApplication.getAppContext()\n                .getComponent()\n                .inject(this);\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/tv/src/main/java/butter/droid/tv/fragments/TVShowDetailsFragment.java", "stars": "4", "class_props": {"extends": "TVBaseDetailsFragment", "implements": ["MediaProvider", "OnActionClickedListener", "EpisodeCardPresenter"], "modifiers": ["public"]}}, {"id": 60902, "method_name": "loadDetails", "class_name": "TVShowDetailsFragment", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "    void loadDetails() {\n        ArrayList<Media> mediaList = new ArrayList<>();\n        mediaList.add(getShowItem());\n\n        providerManager.getCurrentMediaProvider().getDetail(mediaList, 0, this);\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/tv/src/main/java/butter/droid/tv/fragments/TVShowDetailsFragment.java", "stars": "4", "class_props": {"extends": "TVBaseDetailsFragment", "implements": ["MediaProvider", "OnActionClickedListener", "EpisodeCardPresenter"], "modifiers": ["public"]}}, {"id": 60903, "method_name": "getDetailPresenter", "class_name": "TVShowDetailsFragment", "params": [], "throws": null, "modifiers": [], "return_type": "AbstractDetailsDescriptionPresenter", "snippet": "    AbstractDetailsDescriptionPresenter getDetailPresenter() {\n        return new ShowDetailsDescriptionPresenter();\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/tv/src/main/java/butter/droid/tv/fragments/TVShowDetailsFragment.java", "stars": "4", "class_props": {"extends": "TVBaseDetailsFragment", "implements": ["MediaProvider", "OnActionClickedListener", "EpisodeCardPresenter"], "modifiers": ["public"]}}, {"id": 60904, "method_name": "onDetailLoaded", "class_name": "TVShowDetailsFragment", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "    void onDetailLoaded() {\n        updateShowsAdapterContent();\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/tv/src/main/java/butter/droid/tv/fragments/TVShowDetailsFragment.java", "stars": "4", "class_props": {"extends": "TVBaseDetailsFragment", "implements": ["MediaProvider", "OnActionClickedListener", "EpisodeCardPresenter"], "modifiers": ["public"]}}, {"id": 60905, "method_name": "createPresenters", "class_name": "TVShowDetailsFragment", "params": ["ClassPresenterSelector"], "throws": null, "modifiers": [], "return_type": "ClassPresenterSelector", "snippet": "    ClassPresenterSelector createPresenters(ClassPresenterSelector selector) {\n        selector.addClassPresenter(DetailsOverviewRow.class, new EpisodeCardPresenter(getActivity()));\n        return null;\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/tv/src/main/java/butter/droid/tv/fragments/TVShowDetailsFragment.java", "stars": "4", "class_props": {"extends": "TVBaseDetailsFragment", "implements": ["MediaProvider", "OnActionClickedListener", "EpisodeCardPresenter"], "modifiers": ["public"]}}, {"id": 60906, "method_name": "addActions", "class_name": "TVShowDetailsFragment", "params": ["Media"], "throws": null, "modifiers": [], "return_type": "void", "snippet": "    void addActions(Media item) { }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/tv/src/main/java/butter/droid/tv/fragments/TVShowDetailsFragment.java", "stars": "4", "class_props": {"extends": "TVBaseDetailsFragment", "implements": ["MediaProvider", "OnActionClickedListener", "EpisodeCardPresenter"], "modifiers": ["public"]}}, {"id": 60907, "method_name": "createAdapter", "class_name": "TVShowDetailsFragment", "params": ["PresenterSelector"], "throws": null, "modifiers": ["protected"], "return_type": "ArrayObjectAdapter", "snippet": "    protected ArrayObjectAdapter createAdapter(PresenterSelector selector) {\n        return new ArrayObjectAdapter(selector);\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/tv/src/main/java/butter/droid/tv/fragments/TVShowDetailsFragment.java", "stars": "4", "class_props": {"extends": "TVBaseDetailsFragment", "implements": ["MediaProvider", "OnActionClickedListener", "EpisodeCardPresenter"], "modifiers": ["public"]}}, {"id": 60908, "method_name": "onActionClicked", "class_name": "TVShowDetailsFragment", "params": ["Action"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onActionClicked(Action action) {\n        //no actions yet\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/tv/src/main/java/butter/droid/tv/fragments/TVShowDetailsFragment.java", "stars": "4", "class_props": {"extends": "TVBaseDetailsFragment", "implements": ["MediaProvider", "OnActionClickedListener", "EpisodeCardPresenter"], "modifiers": ["public"]}}, {"id": 60909, "method_name": "onEpisodeClicked", "class_name": "TVShowDetailsFragment", "params": ["Episode"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onEpisodeClicked(Episode episode) {\n        if (null == episode) {\n            return;\n        }\n\n        // start first torrent\n        if (episode.torrents.size() == 1) {\n            List<Map.Entry<String, Media.Torrent>> torrents = new ArrayList<>(episode.torrents.entrySet());\n            onTorrentSelected(episode, torrents.get(0));\n        }\n        // ask user which torrent\n        else {\n            showTorrentsDialog(episode, episode.torrents);\n        }\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/tv/src/main/java/butter/droid/tv/fragments/TVShowDetailsFragment.java", "stars": "4", "class_props": {"extends": "TVBaseDetailsFragment", "implements": ["MediaProvider", "OnActionClickedListener", "EpisodeCardPresenter"], "modifiers": ["public"]}}, {"id": 60910, "method_name": "updateShowsAdapterContent", "class_name": "TVShowDetailsFragment", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void updateShowsAdapterContent() {\n        final TreeMap<Integer, List<Episode>> seasons = new TreeMap<>(new Comparator<Integer>() {\n            @Override\n            public int compare(Integer me, Integer other) {\n                return me - other;\n            }\n        });\n\n        for (Episode episode : getShowItem().episodes) {\n            // create list of season if does not exists\n            if (!seasons.containsKey(episode.season)) {\n                seasons.put(episode.season, new ArrayList<Episode>());\n            }\n\n            // add episode to the list\n            final List<Episode> seasonEpisodes = seasons.get(episode.season);\n            seasonEpisodes.add(episode);\n        }\n\n        ArrayObjectAdapter objectAdapter = getObjectArrayAdapter();\n\n        for (Integer seasonKey : seasons.descendingKeySet()) {\n            Collections.sort(seasons.get(seasonKey), new Comparator<Episode>() {\n                @Override\n                public int compare(Episode me, Episode other) {\n                    if (me.episode < other.episode) return -1;\n                    else if (me.episode > other.episode) return 1;\n                    return 0;\n                }\n            });\n\n            EpisodeCardPresenter presenter = new EpisodeCardPresenter(getActivity());\n            presenter.setOnClickListener(this);\n            ArrayObjectAdapter episodes = new ArrayObjectAdapter(presenter);\n\n            for (Episode episode : seasons.get(seasonKey)) {\n                episodes.add(episode);\n            }\n            HeaderItem header = new HeaderItem(seasonKey, String.format(\"Season %d\", seasonKey));\n            objectAdapter.add(new ListRow(header, episodes));\n        }\n\n        objectAdapter.notifyArrayItemRangeChanged(0, objectAdapter.size());\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/tv/src/main/java/butter/droid/tv/fragments/TVShowDetailsFragment.java", "stars": "4", "class_props": {"extends": "TVBaseDetailsFragment", "implements": ["MediaProvider", "OnActionClickedListener", "EpisodeCardPresenter"], "modifiers": ["public"]}}, {"id": 60911, "method_name": "getShowItem", "class_name": "TVShowDetailsFragment", "params": [], "throws": null, "modifiers": ["private"], "return_type": "Show", "snippet": "    private Show getShowItem() {\n        return (Show) getMediaItem();\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/tv/src/main/java/butter/droid/tv/fragments/TVShowDetailsFragment.java", "stars": "4", "class_props": {"extends": "TVBaseDetailsFragment", "implements": ["MediaProvider", "OnActionClickedListener", "EpisodeCardPresenter"], "modifiers": ["public"]}}, {"id": 60912, "method_name": "showTorrentsDialog", "class_name": "TVShowDetailsFragment", "params": ["Episode", "Map<String,Media>"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void showTorrentsDialog(final Episode episode, final Map<String, Media.Torrent> torrents) {\n        ArrayList<String> choices = new ArrayList<>(torrents.keySet());\n        final ArrayList torrent = new ArrayList(torrents.entrySet());\n        new AlertDialog.Builder(getActivity())\n                .setTitle(getString(R.string.choose_quality))\n                .setSingleChoiceItems(choices.toArray(new CharSequence[choices.size()]), 0, new DialogInterface.OnClickListener() {\n                    @Override\n                    public void onClick(DialogInterface dialog, int which) {\n                        onTorrentSelected(episode, (Map.Entry<String, Media.Torrent>) torrent.get(which));\n                        dialog.dismiss();\n                    }\n                }).show();\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/tv/src/main/java/butter/droid/tv/fragments/TVShowDetailsFragment.java", "stars": "4", "class_props": {"extends": "TVBaseDetailsFragment", "implements": ["MediaProvider", "OnActionClickedListener", "EpisodeCardPresenter"], "modifiers": ["public"]}}, {"id": 60913, "method_name": "onTorrentSelected", "class_name": "TVShowDetailsFragment", "params": ["Episode", "Map"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void onTorrentSelected(Episode episode, Map.Entry<String, Media.Torrent> torrent) {\n        String subtitleLanguage = PrefUtils.get(\n            getActivity(),\n            Prefs.SUBTITLE_DEFAULT,\n            SubsProvider.SUBTITLE_LANGUAGE_NONE);\n\n        Show show = getShowItem();\n\n        StreamInfo info = new StreamInfo(\n                episode,\n                show,\n                torrent.getValue().getUrl(),\n                subtitleLanguage,\n                torrent.getKey());\n\n        TVStreamLoadingActivity.startActivity(getActivity(), info, show);\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/tv/src/main/java/butter/droid/tv/fragments/TVShowDetailsFragment.java", "stars": "4", "class_props": {"extends": "TVBaseDetailsFragment", "implements": ["MediaProvider", "OnActionClickedListener", "EpisodeCardPresenter"], "modifiers": ["public"]}}, {"id": 60914, "method_name": "get", "class_name": "WebServerProvider", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Server", "snippet": "  public Server get() {\n    requireNonNull(this.props);\n\n    final ServerConnector httpConnector;\n    final ServerConnector httpsConnector;\n\n    final int maxThreads = this.props\n        .getInt(\"jetty.maxThreads\", Constants.DEFAULT_JETTY_MAX_THREAD_COUNT);\n    final QueuedThreadPool httpThreadPool = new QueuedThreadPool(maxThreads);\n\n    final Server server = new Server(httpThreadPool);\n\n    final boolean useSsl = this.props.getBoolean(\"jetty.use.ssl\", true);\n    final int port;\n\n    if (useSsl) {\n      final int sslPortNumber = this.props\n          .getInt(\"jetty.ssl.port\", Constants.DEFAULT_SSL_PORT_NUMBER);\n      port = sslPortNumber;\n      //server.addConnector(getSslSocketConnector(sslPortNumber));\n      // FIXME\u00a0Use https connector.\n      httpsConnector = createHttpsConnector(server);\n      server.addConnector(httpsConnector);\n\n\n    } else {\n      port = this.props.getInt(\"jetty.port\", Constants.DEFAULT_PORT_NUMBER);\n  //      server.addConnector(getSocketConnector(port));\n      // FIXME\u00a0Use http connector.\n      httpConnector = createHttpConnector(server);\n      server.addConnector(httpConnector);\n    }\n\n    logger.info(String.format(\n        \"Starting %sserver on port: %d # Max threads: %d\", useSsl ? \"SSL \" : \"\", port, maxThreads));\n    return server;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-web-server/src/main/java/azkaban/webapp/WebServerProvider.java", "stars": "18", "class_props": {"extends": null, "implements": ["Provider"], "modifiers": ["public"]}}, {"id": 60915, "method_name": "createHttpConnector", "class_name": "WebServerProvider", "params": ["Server"], "throws": null, "modifiers": ["private"], "return_type": "ServerConnector", "snippet": "  private ServerConnector createHttpConnector(Server server) {\n\n    HttpConfiguration httpConfig = new HttpConfiguration();\n    setHeaderBufferSize(httpConfig);\n\n    int port = this.props.getInt(\"jetty.port\", Constants.DEFAULT_PORT_NUMBER);\n    String bindAddress = this.props.getString(\"jetty.hostname\", \"0.0.0.0\");\n\n    ServerConnector connector = createServerConnector(server, port,\n        new HttpConnectionFactory(httpConfig));\n    connector.setHost(bindAddress);\n    return connector;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-web-server/src/main/java/azkaban/webapp/WebServerProvider.java", "stars": "18", "class_props": {"extends": null, "implements": ["Provider"], "modifiers": ["public"]}}, {"id": 60916, "method_name": "createServerConnector", "class_name": "WebServerProvider", "params": ["Server", "int", "ConnectionFactory"], "throws": null, "modifiers": ["private"], "return_type": "ServerConnector", "snippet": "  private ServerConnector createServerConnector(Server server, int port,\n      ConnectionFactory... connectionFactories) {\n    int acceptors = 2;\n    ServerConnector connector = new ServerConnector(server, null,\n        null, null, acceptors, 2, connectionFactories);\n    connector.setPort(port);\n\n    connector.setStopTimeout(0);\n    connector.getSelectorManager().setStopTimeout(0);\n    connector.setIdleTimeout(1200000L);\n\n    setJettySettings(connector);\n\n    return connector;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-web-server/src/main/java/azkaban/webapp/WebServerProvider.java", "stars": "18", "class_props": {"extends": null, "implements": ["Provider"], "modifiers": ["public"]}}, {"id": 60917, "method_name": "setJettySettings", "class_name": "WebServerProvider", "params": ["ServerConnector"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "  private void setJettySettings(ServerConnector connector) {\n    int acceptQueueSize = this.props.getInt(\"jetty.acceptQueueSize\", 100);\n    connector.setAcceptQueueSize(acceptQueueSize);\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-web-server/src/main/java/azkaban/webapp/WebServerProvider.java", "stars": "18", "class_props": {"extends": null, "implements": ["Provider"], "modifiers": ["public"]}}, {"id": 60918, "method_name": "setHeaderBufferSize", "class_name": "WebServerProvider", "params": ["HttpConfiguration"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "  private void setHeaderBufferSize(HttpConfiguration configuration) {\n    configuration.setRequestHeaderSize(MAX_HEADER_BUFFER_SIZE);\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-web-server/src/main/java/azkaban/webapp/WebServerProvider.java", "stars": "18", "class_props": {"extends": null, "implements": ["Provider"], "modifiers": ["public"]}}, {"id": 60919, "method_name": "createHttpsConnector", "class_name": "WebServerProvider", "params": ["Server"], "throws": null, "modifiers": ["private"], "return_type": "ServerConnector", "snippet": "  private ServerConnector createHttpsConnector(Server jettyServer) {\n\n    SslContextFactory sslContextFactory = new SslContextFactory();\n    sslContextFactory.setKeyStorePath(this.props.getString(\"jetty.keystore\"));\n    sslContextFactory.setKeyManagerPassword(this.props.getString(\"jetty.password\"));\n    if (\"true\".equals(this.props.getString(\"jetty.has.truststore\"))) {\n      sslContextFactory.setTrustStorePath(this.props.getString(\"jetty.truststore\"));\n      sslContextFactory.setTrustStorePassword(this.props.getString(\"jetty.trustpassword\"));\n    }\n    sslContextFactory.setNeedClientAuth(true);\n\n    HttpConfiguration httpConfig = new HttpConfiguration();\n    setHeaderBufferSize(httpConfig);\n    httpConfig.addCustomizer(new SecureRequestCustomizer());\n    final int port = this.props.getInt(\"jetty.ssl.port\", Constants.DEFAULT_SSL_PORT_NUMBER);\n\n    return createServerConnector(jettyServer, port,\n        new SslConnectionFactory(sslContextFactory, \"http/1.1\"),\n        new HttpConnectionFactory(httpConfig));\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-web-server/src/main/java/azkaban/webapp/WebServerProvider.java", "stars": "18", "class_props": {"extends": null, "implements": ["Provider"], "modifiers": ["public"]}}, {"id": 60920, "method_name": "process", "class_name": "MqttSubscribeHandler", "params": ["Channel", "MqttSubscribeMessage"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void process(Channel channel, MqttSubscribeMessage msg) {\n        SecurityUser user = NettyUtil.getUser(channel);\n        if (user == null) {\n            channel.close();\n            return;\n        }\n\n        List<MqttTopicSubscription> topicSubscriptions = msg.payload().topicSubscriptions();\n        if (this.validTopicFilter(topicSubscriptions)) {\n            List<Integer> qos = new ArrayList<>();\n            topicSubscriptions.forEach(topicSubscription -> {\n                // \u4e0d\u5141\u8bb8\u8ba2\u9605\u5176\u4ed6\u7528\u6237\u4e3b\u9898\n                String userId = topicSubscription.topicName().split(\"/\")[0];\n                if (!user.getId().equals(Integer.parseInt(userId))) {\n                    channel.close();\n                    return;\n                }\n                qos.add(topicSubscription.qualityOfService().value());\n                NettyMqttHandler.TOPICS.putIfAbsent(topicSubscription.topicName(), new DefaultChannelGroup(GlobalEventExecutor.INSTANCE));\n                NettyMqttHandler.TOPICS.get(topicSubscription.topicName()).add(channel);\n            });\n            MqttSubAckMessage subAckMessage = (MqttSubAckMessage) MqttMessageFactory.newMessage(\n                    new MqttFixedHeader(MqttMessageType.SUBACK, false, MqttQoS.AT_MOST_ONCE, false, 0),\n                    MqttMessageIdVariableHeader.from(msg.variableHeader().messageId()),\n                    new MqttSubAckPayload(qos));\n            channel.writeAndFlush(subAckMessage);\n            log.debug(\"SUBSCRIBE - clientId: {}, topFilter: {}, QoS: {}\", NettyUtil.getName(channel), topicSubscriptions, qos);\n        } else {\n            channel.close();\n        }\n    }", "url": "https://raw.githubusercontent.com/taoroot/taoiot/master/src/main/java/com/github/taoroot/taoiot/netty/mqtt/impl/MqttSubscribeHandler.java", "stars": "6", "class_props": {"extends": null, "implements": ["MqttHandler"], "modifiers": ["public"]}}, {"id": 60921, "method_name": "validTopicFilter", "class_name": "MqttSubscribeHandler", "params": ["List<MqttTopicSubscription>"], "throws": null, "modifiers": ["private"], "return_type": "boolean", "snippet": "    private boolean validTopicFilter(List<MqttTopicSubscription> topicSubscriptions) {\n        for (MqttTopicSubscription topicSubscription : topicSubscriptions) {\n            String topicFilter = topicSubscription.topicName();\n            if (StrUtil.startWith(topicFilter, '#')\n                    || StrUtil.endWith(topicFilter, '/') || !StrUtil.contains(topicFilter, '/')\n                    || StrUtil.startWith(topicFilter, '+')) {\n                return false;\n            }\n            if (StrUtil.contains(topicFilter, '#')) {\n                // \u4e0d\u662f\u4ee5/#\u5b57\u7b26\u4e32\u7ed3\u5c3e\u7684\u8ba2\u9605\u6309\u975e\u6cd5\u8ba2\u9605\u5904\u7406\n                if (!StrUtil.endWith(topicFilter, \"/#\")) {\n                    return false;\n                }\n                // \u5982\u679c\u51fa\u73b0\u591a\u4e2a#\u7b26\u53f7\u7684\u8ba2\u9605\u6309\u975e\u6cd5\u8ba2\u9605\u5904\u7406\n                if (StrUtil.count(topicFilter, '#') > 1) {\n                    return false;\n                }\n            }\n            if (StrUtil.contains(topicFilter, '+')) {\n                //\u5982\u679c+\u7b26\u53f7\u548c/+\u5b57\u7b26\u4e32\u51fa\u73b0\u7684\u6b21\u6570\u4e0d\u7b49\u7684\u60c5\u51b5\u6309\u975e\u6cd5\u8ba2\u9605\u5904\u7406\n                if (StrUtil.count(topicFilter, '+') != StrUtil.count(topicFilter, \"/+\")) {\n                    return false;\n                }\n            }\n        }\n        return true;\n    }", "url": "https://raw.githubusercontent.com/taoroot/taoiot/master/src/main/java/com/github/taoroot/taoiot/netty/mqtt/impl/MqttSubscribeHandler.java", "stars": "6", "class_props": {"extends": null, "implements": ["MqttHandler"], "modifiers": ["public"]}}, {"id": 60922, "method_name": "getForm", "class_name": "UserEvent", "params": [], "throws": null, "modifiers": ["public"], "return_type": "DynActionForm", "snippet": "\tpublic DynActionForm getForm() {\n\t\treturn form;\n\t}", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/event/UserEvent.java", "stars": "12", "class_props": {"extends": null, "implements": ["Event"], "modifiers": ["public"]}}, {"id": 60923, "method_name": "getUser", "class_name": "UserEvent", "params": [], "throws": null, "modifiers": ["public"], "return_type": "User", "snippet": "\tpublic User getUser() {\n\t\treturn form.getUser();\n\t}", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/event/UserEvent.java", "stars": "12", "class_props": {"extends": null, "implements": ["Event"], "modifiers": ["public"]}}, {"id": 60924, "method_name": "getRowCount", "class_name": "JTableDemo", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "\t\t       public int getRowCount()\n\t\t       {\n\t\t           //\u8fd4\u56de\u8868\u7684\u884c\u6570\uff0c\u8fd4\u56deTableData\u4e0a\u6302\u7684String\u6570\u7ec4\u4e2a\u6570\n\t\t           return TableData.size();\n\t\t    \t   \n\t\t       }", "url": "https://raw.githubusercontent.com/tianyu-zou/transport-log/master/JTableDemo.java", "stars": "3", "class_props": {"extends": "AbstractTableModel", "implements": null, "modifiers": ["public"]}}, {"id": 60925, "method_name": "getColumnCount", "class_name": "JTableDemo", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "\t\t       public int getColumnCount()\n\t\t       {\n\t\t           //\u8fd4\u56de\u8868\u7684\u5217\u6570\uff0c\u76f4\u63a5\u8fd4\u56deTableTitle.size()\n\t\t           return TableColumn.size();\n\t\t       }", "url": "https://raw.githubusercontent.com/tianyu-zou/transport-log/master/JTableDemo.java", "stars": "3", "class_props": {"extends": "AbstractTableModel", "implements": null, "modifiers": ["public"]}}, {"id": 60926, "method_name": "getValueAt", "class_name": "JTableDemo", "params": ["int", "int"], "throws": null, "modifiers": ["public"], "return_type": "Object", "snippet": "\t\t       public Object getValueAt(int rowIndex, int columnIndex)\n\t\t       {\n\t\t            \n\t\t           //\u83b7\u53d6\u76f8\u5e94\u5750\u6807\u4f4d\u7f6e\u7684\u503c\uff0c\u5206\u4e0b\u9762\u4e24\u6b65\n\t\t           //\u83b7\u53d6\u6bcf\u4e00\u884c\u5bf9\u5e94\u7684String[]\u6570\u7ec4\n\t\t           String LineTemp[] = (String[])this.TableData.get(rowIndex);\n\t\t           //\u63d0\u53d6\u51fa\u5bf9 \u5e94\u7684\u6570\u636e\n\t\t           return LineTemp[columnIndex];\n\t\t       }", "url": "https://raw.githubusercontent.com/tianyu-zou/transport-log/master/JTableDemo.java", "stars": "3", "class_props": {"extends": "AbstractTableModel", "implements": null, "modifiers": ["public"]}}, {"id": 60927, "method_name": "isCellEditable", "class_name": "JTableDemo", "params": ["int", "int"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "\t\t       public boolean isCellEditable(int rowIndex, int columnIndex)\n\t\t       {\n\t\t           //\u8fd9\u4e2a\u51fd\u6570\u5f0f\u8bbe\u7f6e\u6bcf\u4e2a\u5355\u5143\u683c\u7684\u7f16\u8f91\u5c5e\u6027\u7684\n\t\t           //\u8fd9\u4e2a\u51fd\u6570AbstractTableModel\u5df2\u7ecf\u5b9e\u73b0\n\t\t           //\u8fd9\u91cc\u6211\u4eec\u8bbe\u7f6e\u4e3a\u524d\u4e24\u5217\u4e3a\u5141\u8bb8\u7f16\u8f91\u72b6\u6001\n\t\t           if(rowIndex<3&&columnIndex<3){\n\t\t               return true;\n\t\t           }\n\t\t           else{\n\t\t               return false;\n\t\t           }\n\t\t       }", "url": "https://raw.githubusercontent.com/tianyu-zou/transport-log/master/JTableDemo.java", "stars": "3", "class_props": {"extends": "AbstractTableModel", "implements": null, "modifiers": ["public"]}}, {"id": 60928, "method_name": "setValueAt", "class_name": "JTableDemo", "params": ["Object", "int", "int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\t\t       public void setValueAt(Object aValue, int rowIndex, int columnIndex)\n\t\t       {\n\t\t           //\u5f53\u5355\u5143\u683c\u7684\u6570\u636e\u53d1\u751f\u6539\u53d8\u7684\u65f6\u5019\u8c03\u7528\u8be5\u51fd\u6570\u91cd\u8bbe\u5355\u5143\u683c\u7684\u6570\u636e\n\t\t           //\u6570\u636e\u662f\u653e\u5728TableData\u4e2d,\u4fee\u6539\u6570\u636e\u5c31\u662f\u4fee\u6539\u7684\n\t\t           //TableData\u4e2d\u7684\u6570\u636e\uff0c\u6240\u4ee5\u6211\u4eec\u4ec5\u4ec5\u5728\u6b64\u5904\u5c06TableData\u7684\u5bf9\u5e94\u6570\u636e\u4fee\u6539\u5373\u53ef              \n\t\t           ((String[])this.TableData.get(rowIndex))[columnIndex]=(String)aValue;\n\t\t           //\u7136\u540e\u8c03\u7528\u51fd\u6570fireTableCellUpdated(int row,int col);\u66f4\u65b0\u4e00\u4e0b\u8868\u683c\u5bf9\u5e94\u4f4d\u7f6e\u7684\u6570\u636e\u663e\u793a\u5373\u53ef\u5b8c\u6210\u5bf9\u8868\u683c\u7684\u6570\u636e\u4fee\u6539\uff1b\n\t\t           this.fireTableCellUpdated(rowIndex, columnIndex);\n\t\t       }", "url": "https://raw.githubusercontent.com/tianyu-zou/transport-log/master/JTableDemo.java", "stars": "3", "class_props": {"extends": "AbstractTableModel", "implements": null, "modifiers": ["public"]}}, {"id": 60929, "method_name": "getColumnName", "class_name": "JTableDemo", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "\t\t       public String getColumnName(int name)\n\t\t       {\n\t\t    \t   //\u4e0d\u52a0\u8fd9\u4e00\u4e2a\u65b9\u6cd5\u5217\u540d\u662fABC\u8bfb\u4e0d\u8fdb\u6765\n\t\t           return (String)TableColumn.get(name);\n\t\t            \n\t\t       }", "url": "https://raw.githubusercontent.com/tianyu-zou/transport-log/master/JTableDemo.java", "stars": "3", "class_props": {"extends": "AbstractTableModel", "implements": null, "modifiers": ["public"]}}, {"id": 60930, "method_name": "main", "class_name": "JTableDemo", "params": ["String"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "\t\t    public static void main(String[] args)\n\t\t    {               \n\t\t    \tJTableDemo myModel=  new JTableDemo(); \n\t\t        JTable table = new JTable(myModel);\n\t\t        JFrame jf = new JFrame();\n\t\t        JScrollPane jsp = new JScrollPane(table);//\u5fc5\u987b\u628aJTable\u653e\u5165JScrollPane\u4e2d\uff0c\u5426\u5219\u9ed8\u8ba4\u4e0d\u663e\u793a\u5217\u6807\u9898\n\t\t        jf.getContentPane().add(jsp);\n\t\t        jf.setBounds(0, 0, 500, 500);\n\t\t        jf.setVisible(true);\n\t\t        //\u8fd9\u91cc\u6211\u4eec\u53ef\u4ee5\u68c0\u9a8c\u76f4\u63a5\u5728table\u7684\u76f8\u5e94\u5355\u5143\u683c\u4e0a\u4fee\u6539\u6570\u636e\u540e\uff0c\u6b64\u5355\u5143\u683c\u7684\u503c\u4f1a\u4e0d\u4f1a\u53d8\u5316\n\t\t        Scanner in = new Scanner(System.in);\n\t\t        int m=in.nextInt();\n\t\t        int n=in.nextInt();\n\t\t        String a=(String)myModel.getValueAt(m,n);\n\t\t        System.out.println(a);\n\t\t    }", "url": "https://raw.githubusercontent.com/tianyu-zou/transport-log/master/JTableDemo.java", "stars": "3", "class_props": {"extends": "AbstractTableModel", "implements": null, "modifiers": ["public"]}}, {"id": 60931, "method_name": "saveShop", "class_name": "PrefShopHome", "params": ["Shop", "Context"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void saveShop(Shop shop, Context context)\n    {\n        context = MyApplication.getAppContext();\n\n        if(context == null)\n        {\n            return;\n        }\n\n        //Creating a shared preference\n\n        SharedPreferences sharedPref = context.getSharedPreferences(context.getString(R.string.preference_file_name), MODE_PRIVATE);\n        SharedPreferences.Editor prefsEditor = sharedPref.edit();\n\n\n        Gson gson = UtilityFunctions.provideGson();\n        String json = gson.toJson(shop);\n        prefsEditor.putString(\"shop\", json);\n\n        prefsEditor.apply();\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/Preferences/PrefShopHome.java", "stars": "10", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 60932, "method_name": "getShop", "class_name": "PrefShopHome", "params": ["Context"], "throws": null, "modifiers": ["public", "static"], "return_type": "Shop", "snippet": "    public static Shop getShop(Context context)\n    {\n        context = MyApplication.getAppContext();\n\n\n        SharedPreferences sharedPref = context.getSharedPreferences(context.getString(R.string.preference_file_name), MODE_PRIVATE);\n\n        Gson gson = UtilityFunctions.provideGson();\n        String json = sharedPref.getString(\"shop\", null);\n\n        return gson.fromJson(json, Shop.class);\n\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/Preferences/PrefShopHome.java", "stars": "10", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 60933, "method_name": "init", "class_name": "DP3T", "params": ["Context", "String", "PublicKey"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "\tpublic static void init(Context context, String appId, PublicKey signaturePublicKey) {\n\t\tinit(context, appId, false, signaturePublicKey);\n\t}", "url": "https://raw.githubusercontent.com/DP-3T/dp3t-sdk-android/master-alpha/dp3t-sdk/sdk/src/main/java/org/dpppt/android/sdk/DP3T.java", "stars": "139", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 60934, "method_name": "init", "class_name": "DP3T", "params": ["Context", "String", "boolean", "PublicKey"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "\tpublic static void init(Context context, String appId, boolean enableDevDiscoveryMode, PublicKey signaturePublicKey) {\n\t\tif (ProcessUtil.isMainProcess(context)) {\n\t\t\tDP3T.appId = appId;\n\t\t\tAppConfigManager appConfigManager = AppConfigManager.getInstance(context);\n\t\t\tappConfigManager.setAppId(appId);\n\t\t\tappConfigManager.setDevDiscoveryModeEnabled(enableDevDiscoveryMode);\n\t\t\tappConfigManager.triggerLoad();\n\n\t\t\texecuteInit(context, signaturePublicKey);\n\t\t}\n\t}", "url": "https://raw.githubusercontent.com/DP-3T/dp3t-sdk-android/master-alpha/dp3t-sdk/sdk/src/main/java/org/dpppt/android/sdk/DP3T.java", "stars": "139", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 60935, "method_name": "init", "class_name": "DP3T", "params": ["Context", "ApplicationInfo", "PublicKey"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "\tpublic static void init(Context context, ApplicationInfo applicationInfo, PublicKey signaturePublicKey) {\n\t\tif (ProcessUtil.isMainProcess(context)) {\n\t\t\tDP3T.appId = applicationInfo.getAppId();\n\t\t\tAppConfigManager appConfigManager = AppConfigManager.getInstance(context);\n\t\t\tappConfigManager.setManualApplicationInfo(applicationInfo);\n\n\t\t\texecuteInit(context, signaturePublicKey);\n\t\t}\n\t}", "url": "https://raw.githubusercontent.com/DP-3T/dp3t-sdk-android/master-alpha/dp3t-sdk/sdk/src/main/java/org/dpppt/android/sdk/DP3T.java", "stars": "139", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 60936, "method_name": "executeInit", "class_name": "DP3T", "params": ["Context", "PublicKey"], "throws": null, "modifiers": ["static", "private"], "return_type": "void", "snippet": "\tprivate static void executeInit(Context context, PublicKey signaturePublicKey) {\n\t\tCryptoModule.getInstance(context).init();\n\n\t\tnew Database(context).removeOldData();\n\n\t\tSyncWorker.setBucketSignaturePublicKey(signaturePublicKey);\n\n\t\tAppConfigManager appConfigManager = AppConfigManager.getInstance(context);\n\t\tboolean advertising = appConfigManager.isAdvertisingEnabled();\n\t\tboolean receiving = appConfigManager.isReceivingEnabled();\n\t\tif (advertising || receiving) {\n\t\t\tstart(context, advertising, receiving);\n\t\t}\n\t}", "url": "https://raw.githubusercontent.com/DP-3T/dp3t-sdk-android/master-alpha/dp3t-sdk/sdk/src/main/java/org/dpppt/android/sdk/DP3T.java", "stars": "139", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 60937, "method_name": "checkInit", "class_name": "DP3T", "params": [], "throws": ["IllegalStateException"], "modifiers": ["static", "private"], "return_type": "void", "snippet": "\tprivate static void checkInit() throws IllegalStateException {\n\t\tif (appId == null) {\n\t\t\tthrow new IllegalStateException(\"You have to call DP3T.init() in your application onCreate()\");\n\t\t}\n\t}", "url": "https://raw.githubusercontent.com/DP-3T/dp3t-sdk-android/master-alpha/dp3t-sdk/sdk/src/main/java/org/dpppt/android/sdk/DP3T.java", "stars": "139", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 60938, "method_name": "start", "class_name": "DP3T", "params": ["Context"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "\tpublic static void start(Context context) {\n\t\tstart(context, true, true);\n\t}", "url": "https://raw.githubusercontent.com/DP-3T/dp3t-sdk-android/master-alpha/dp3t-sdk/sdk/src/main/java/org/dpppt/android/sdk/DP3T.java", "stars": "139", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 60939, "method_name": "start", "class_name": "DP3T", "params": ["Context", "boolean", "boolean"], "throws": null, "modifiers": ["protected", "static"], "return_type": "void", "snippet": "\tprotected static void start(Context context, boolean advertise, boolean receive) {\n\t\tcheckInit();\n\t\tAppConfigManager appConfigManager = AppConfigManager.getInstance(context);\n\t\tappConfigManager.setAdvertisingEnabled(advertise);\n\t\tappConfigManager.setReceivingEnabled(receive);\n\t\tlong scanInterval = appConfigManager.getScanInterval();\n\t\tlong scanDuration = appConfigManager.getScanDuration();\n\t\tIntent intent = new Intent(context, TracingService.class).setAction(TracingService.ACTION_START);\n\t\tintent.putExtra(TracingService.EXTRA_ADVERTISE, advertise);\n\t\tintent.putExtra(TracingService.EXTRA_RECEIVE, receive);\n\t\tintent.putExtra(TracingService.EXTRA_SCAN_INTERVAL, scanInterval);\n\t\tintent.putExtra(TracingService.EXTRA_SCAN_DURATION, scanDuration);\n\t\tContextCompat.startForegroundService(context, intent);\n\t\tSyncWorker.startSyncWorker(context);\n\t\tBroadcastHelper.sendUpdateBroadcast(context);\n\t}", "url": "https://raw.githubusercontent.com/DP-3T/dp3t-sdk-android/master-alpha/dp3t-sdk/sdk/src/main/java/org/dpppt/android/sdk/DP3T.java", "stars": "139", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 60940, "method_name": "isStarted", "class_name": "DP3T", "params": ["Context"], "throws": null, "modifiers": ["public", "static"], "return_type": "boolean", "snippet": "\tpublic static boolean isStarted(Context context) {\n\t\tcheckInit();\n\t\tAppConfigManager appConfigManager = AppConfigManager.getInstance(context);\n\t\treturn appConfigManager.isAdvertisingEnabled() || appConfigManager.isReceivingEnabled();\n\t}", "url": "https://raw.githubusercontent.com/DP-3T/dp3t-sdk-android/master-alpha/dp3t-sdk/sdk/src/main/java/org/dpppt/android/sdk/DP3T.java", "stars": "139", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 60941, "method_name": "sync", "class_name": "DP3T", "params": ["Context"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "\tpublic static void sync(Context context) {\n\t\tcheckInit();\n\t\ttry {\n\t\t\tSyncWorker.doSync(context);\n\t\t} catch (IOException | StatusCodeException | ServerTimeOffsetException | SQLiteException | SignatureException ignored) {\n\t\t\t// has been handled upstream\n\t\t}\n\t}", "url": "https://raw.githubusercontent.com/DP-3T/dp3t-sdk-android/master-alpha/dp3t-sdk/sdk/src/main/java/org/dpppt/android/sdk/DP3T.java", "stars": "139", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 60942, "method_name": "getStatus", "class_name": "DP3T", "params": ["Context"], "throws": null, "modifiers": ["public", "static"], "return_type": "TracingStatus", "snippet": "\tpublic static TracingStatus getStatus(Context context) {\n\t\tcheckInit();\n\t\tDatabase database = new Database(context);\n\t\tAppConfigManager appConfigManager = AppConfigManager.getInstance(context);\n\t\tCollection<TracingStatus.ErrorState> errorStates = ErrorHelper.checkTracingErrorStatus(context);\n\t\tList<ExposureDay> exposureDays = database.getExposureDays();\n\t\tInfectionStatus infectionStatus;\n\t\tif (appConfigManager.getIAmInfected()) {\n\t\t\tinfectionStatus = InfectionStatus.INFECTED;\n\t\t} else if (exposureDays.size() > 0) {\n\t\t\tinfectionStatus = InfectionStatus.EXPOSED;\n\t\t} else {\n\t\t\tinfectionStatus = InfectionStatus.HEALTHY;\n\t\t}\n\t\treturn new TracingStatus(\n\t\t\t\tdatabase.getContacts().size(),\n\t\t\t\tappConfigManager.isAdvertisingEnabled(),\n\t\t\t\tappConfigManager.isReceivingEnabled(),\n\t\t\t\tappConfigManager.getLastSyncDate(),\n\t\t\t\tinfectionStatus,\n\t\t\t\texposureDays,\n\t\t\t\terrorStates\n\t\t);\n\t}", "url": "https://raw.githubusercontent.com/DP-3T/dp3t-sdk-android/master-alpha/dp3t-sdk/sdk/src/main/java/org/dpppt/android/sdk/DP3T.java", "stars": "139", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 60943, "method_name": "sendIAmInfected", "class_name": "DP3T", "params": ["Context", "Date", "ExposeeAuthMethod", "ResponseCallback<Void>"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "\tpublic static void sendIAmInfected(Context context, Date onset, ExposeeAuthMethod exposeeAuthMethod,\n\t\t\tResponseCallback<Void> callback) {\n\t\tcheckInit();\n\n\t\tDayDate onsetDate = new DayDate(onset.getTime());\n\t\tExposeeRequest exposeeRequest = CryptoModule.getInstance(context).getSecretKeyForPublishing(onsetDate, exposeeAuthMethod);\n\n\t\tAppConfigManager appConfigManager = AppConfigManager.getInstance(context);\n\t\ttry {\n\t\t\tappConfigManager.getBackendReportRepository(context).addExposee(exposeeRequest, exposeeAuthMethod,\n\t\t\t\t\tnew ResponseCallback<Void>() {\n\t\t\t\t\t\t@Override\n\t\t\t\t\t\tpublic void onSuccess(Void response) {\n\t\t\t\t\t\t\tappConfigManager.setIAmInfected(true);\n\t\t\t\t\t\t\tCryptoModule.getInstance(context).reset();\n\t\t\t\t\t\t\tstop(context);\n\t\t\t\t\t\t\tcallback.onSuccess(response);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t@Override\n\t\t\t\t\t\tpublic void onError(Throwable throwable) {\n\t\t\t\t\t\t\tcallback.onError(throwable);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t} catch (IllegalStateException e) {\n\t\t\tcallback.onError(e);\n\t\t\tLogger.e(TAG, e);\n\t\t}\n\t}", "url": "https://raw.githubusercontent.com/DP-3T/dp3t-sdk-android/master-alpha/dp3t-sdk/sdk/src/main/java/org/dpppt/android/sdk/DP3T.java", "stars": "139", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 60944, "method_name": "sendFakeInfectedRequest", "class_name": "DP3T", "params": ["Context", "Date", "ExposeeAuthMethod"], "throws": ["NoSuchAlgorithmException", "IOException"], "modifiers": ["public", "static"], "return_type": "void", "snippet": "\tpublic static void sendFakeInfectedRequest(Context context, Date onset, ExposeeAuthMethod exposeeAuthMethod)\n\t\t\tthrows NoSuchAlgorithmException, IOException {\n\t\tcheckInit();\n\n\t\tDayDate onsetDate = new DayDate(onset.getTime());\n\t\tExposeeAuthMethodJson jsonAuthMethod = null;\n\t\tif (exposeeAuthMethod instanceof ExposeeAuthMethodJson) {\n\t\t\tjsonAuthMethod = (ExposeeAuthMethodJson) exposeeAuthMethod;\n\t\t}\n\t\tExposeeRequest exposeeRequest = new ExposeeRequest(toBase64(CryptoModule.getInstance(context).getNewRandomKey()),\n\t\t\t\tonsetDate.getStartOfDayTimestamp(), 1, jsonAuthMethod);\n\t\tAppConfigManager.getInstance(context).getBackendReportRepository(context)\n\t\t\t\t.addExposeeSync(exposeeRequest, exposeeAuthMethod);\n\t}", "url": "https://raw.githubusercontent.com/DP-3T/dp3t-sdk-android/master-alpha/dp3t-sdk/sdk/src/main/java/org/dpppt/android/sdk/DP3T.java", "stars": "139", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 60945, "method_name": "stop", "class_name": "DP3T", "params": ["Context"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "\tpublic static void stop(Context context) {\n\t\tcheckInit();\n\n\t\tAppConfigManager appConfigManager = AppConfigManager.getInstance(context);\n\t\tappConfigManager.setAdvertisingEnabled(false);\n\t\tappConfigManager.setReceivingEnabled(false);\n\n\t\tIntent intent = new Intent(context, TracingService.class).setAction(TracingService.ACTION_STOP);\n\t\tcontext.startService(intent);\n\t\tSyncWorker.stopSyncWorker(context);\n\t\tBroadcastHelper.sendUpdateBroadcast(context);\n\t}", "url": "https://raw.githubusercontent.com/DP-3T/dp3t-sdk-android/master-alpha/dp3t-sdk/sdk/src/main/java/org/dpppt/android/sdk/DP3T.java", "stars": "139", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 60946, "method_name": "setMatchingParameters", "class_name": "DP3T", "params": ["Context", "float", "int"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "\tpublic static void setMatchingParameters(Context context, float contactAttenuationThreshold, int numberOfWindowsForExposure) {\n\t\tcheckInit();\n\n\t\tAppConfigManager appConfigManager = AppConfigManager.getInstance(context);\n\t\tappConfigManager.setContactAttenuationThreshold(contactAttenuationThreshold);\n\t\tappConfigManager.setNumberOfWindowsForExposure(numberOfWindowsForExposure);\n\t}", "url": "https://raw.githubusercontent.com/DP-3T/dp3t-sdk-android/master-alpha/dp3t-sdk/sdk/src/main/java/org/dpppt/android/sdk/DP3T.java", "stars": "139", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 60947, "method_name": "setCertificatePinner", "class_name": "DP3T", "params": ["CertificatePinner"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "\tpublic static void setCertificatePinner(@NonNull CertificatePinner certificatePinner) {\n\t\tCertificatePinning.setCertificatePinner(certificatePinner);\n\t}", "url": "https://raw.githubusercontent.com/DP-3T/dp3t-sdk-android/master-alpha/dp3t-sdk/sdk/src/main/java/org/dpppt/android/sdk/DP3T.java", "stars": "139", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 60948, "method_name": "getUpdateIntentFilter", "class_name": "DP3T", "params": [], "throws": null, "modifiers": ["public", "static"], "return_type": "IntentFilter", "snippet": "\tpublic static IntentFilter getUpdateIntentFilter() {\n\t\treturn new IntentFilter(DP3T.UPDATE_INTENT_ACTION);\n\t}", "url": "https://raw.githubusercontent.com/DP-3T/dp3t-sdk-android/master-alpha/dp3t-sdk/sdk/src/main/java/org/dpppt/android/sdk/DP3T.java", "stars": "139", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 60949, "method_name": "clearData", "class_name": "DP3T", "params": ["Context", "Runnable"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "\tpublic static void clearData(Context context, Runnable onDeleteListener) {\n\t\tcheckInit();\n\t\tAppConfigManager appConfigManager = AppConfigManager.getInstance(context);\n\t\tif (appConfigManager.isAdvertisingEnabled() || appConfigManager.isReceivingEnabled()) {\n\t\t\tthrow new IllegalStateException(\"Tracking must be stopped for clearing the local data\");\n\t\t}\n\n\t\tCryptoModule.getInstance(context).reset();\n\t\tappConfigManager.clearPreferences();\n\t\tLogger.clear();\n\t\tDatabase db = new Database(context);\n\t\tdb.recreateTables(response -> onDeleteListener.run());\n\t}", "url": "https://raw.githubusercontent.com/DP-3T/dp3t-sdk-android/master-alpha/dp3t-sdk/sdk/src/main/java/org/dpppt/android/sdk/DP3T.java", "stars": "139", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 60950, "method_name": "getTiming", "class_name": "UpdateEvent", "params": [], "throws": null, "modifiers": ["public"], "return_type": "EventTiming", "snippet": "    public EventTiming getTiming() {\n        return this.timing;\n    }", "url": "https://raw.githubusercontent.com/Crystallinqq/Mercury-Client/master/src/main/java/fail/mercury/client/client/events/UpdateEvent.java", "stars": "12", "class_props": {"extends": "Event", "implements": null, "modifiers": ["public"]}}, {"id": 60951, "method_name": "getLocation", "class_name": "UpdateEvent", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Location", "snippet": "    public Location getLocation() {\n        return this.location;\n    }", "url": "https://raw.githubusercontent.com/Crystallinqq/Mercury-Client/master/src/main/java/fail/mercury/client/client/events/UpdateEvent.java", "stars": "12", "class_props": {"extends": "Event", "implements": null, "modifiers": ["public"]}}, {"id": 60952, "method_name": "getRotation", "class_name": "UpdateEvent", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Rotation", "snippet": "    public Rotation getRotation() {\n        return this.rotation;\n    }", "url": "https://raw.githubusercontent.com/Crystallinqq/Mercury-Client/master/src/main/java/fail/mercury/client/client/events/UpdateEvent.java", "stars": "12", "class_props": {"extends": "Event", "implements": null, "modifiers": ["public"]}}, {"id": 60953, "method_name": "setLocation", "class_name": "UpdateEvent", "params": ["Location"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setLocation(Location location) {\n        this.location = location;\n    }", "url": "https://raw.githubusercontent.com/Crystallinqq/Mercury-Client/master/src/main/java/fail/mercury/client/client/events/UpdateEvent.java", "stars": "12", "class_props": {"extends": "Event", "implements": null, "modifiers": ["public"]}}, {"id": 60954, "method_name": "getEditMessage", "class_name": "CustomInputDialog", "params": [], "throws": null, "modifiers": ["public"], "return_type": "EditText", "snippet": "    public EditText getEditMessage() {\n        return editMessage;\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/app/src/main/java/com/example/gsyvideoplayer/view/CustomInputDialog.java", "stars": "2", "class_props": {"extends": "Dialog", "implements": null, "modifiers": ["public"]}}, {"id": 60955, "method_name": "setEditMessage", "class_name": "CustomInputDialog", "params": ["EditText"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setEditMessage(EditText editMessage) {\n        this.editMessage = editMessage;\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/app/src/main/java/com/example/gsyvideoplayer/view/CustomInputDialog.java", "stars": "2", "class_props": {"extends": "Dialog", "implements": null, "modifiers": ["public"]}}, {"id": 60956, "method_name": "onCreate", "class_name": "CustomInputDialog", "params": ["Bundle"], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        init();\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/app/src/main/java/com/example/gsyvideoplayer/view/CustomInputDialog.java", "stars": "2", "class_props": {"extends": "Dialog", "implements": null, "modifiers": ["public"]}}, {"id": 60957, "method_name": "init", "class_name": "CustomInputDialog", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void init() {\n        LayoutInflater inflater = LayoutInflater.from(context);\n        View view = inflater.inflate(R.layout.layout_custom_dialog, null);\n        setContentView(view);\n        txtTitle = (TextView) view.findViewById(R.id.dialog_input_title);\n        editMessage = (EditText) view.findViewById(R.id.dialog_input_dialog_edit);\n        btnPostive = (TextView) view.findViewById(R.id.dialog_input_dialog_postive);\n        btnNegative = (TextView) view.findViewById(R.id.dialog_input_dialog_negative);\n        cacheCheck = (CheckBox) view.findViewById(R.id.dialog_input_check);\n\n        cacheCheck.setChecked(cache);\n\n        if (postiveButtonVisiable) {\n            btnPostive.setVisibility(View.VISIBLE);\n        } else {\n            btnPostive.setVisibility(View.GONE);\n        }\n        if (negativeButtonVisiable) {\n            btnNegative.setVisibility(View.VISIBLE);\n        } else {\n            btnNegative.setVisibility(View.GONE);\n        }\n\n        if (TextUtils.isEmpty(title)) {\n            txtTitle.setVisibility(View.GONE);\n        } else {\n            txtTitle.setVisibility(View.VISIBLE);\n            txtTitle.setText(title);\n        }\n        editMessage.setText(input);\n        if (input != null) {\n            editMessage.setSelection(input.length());\n        }\n        if (!TextUtils.isEmpty(hintInput)) {\n            editMessage.setHint(hintInput);\n        }\n        btnPostive.setText(postiveText);\n        btnNegative.setText(negativeText);\n        btnPostive.setOnClickListener(new OnButtonClickListener());\n        btnNegative.setOnClickListener(new OnButtonClickListener());\n        InputFilter[] filters = {new InputFilter.LengthFilter(maxLength)};\n        editMessage.setFilters(filters);\n        Window dialogWindow = getWindow();\n        WindowManager.LayoutParams lp = dialogWindow.getAttributes();\n        DisplayMetrics d = context.getResources().getDisplayMetrics(); // \u83b7\u53d6\u5c4f\u5e55\u5bbd\u3001\u9ad8\u7528\n        lp.width = (int) (d.widthPixels * 0.8); // \u5bbd\u5ea6\u8bbe\u7f6e\u4e3a\u5c4f\u5e55\u76840.8\n        dialogWindow.setAttributes(lp);\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/app/src/main/java/com/example/gsyvideoplayer/view/CustomInputDialog.java", "stars": "2", "class_props": {"extends": "Dialog", "implements": null, "modifiers": ["public"]}}, {"id": 60958, "method_name": "setInput", "class_name": "CustomInputDialog", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setInput(int msgId) {\n        input = context.getString(msgId);\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/app/src/main/java/com/example/gsyvideoplayer/view/CustomInputDialog.java", "stars": "2", "class_props": {"extends": "Dialog", "implements": null, "modifiers": ["public"]}}, {"id": 60959, "method_name": "setInput", "class_name": "CustomInputDialog", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setInput(String msg) {\n        input = msg;\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/app/src/main/java/com/example/gsyvideoplayer/view/CustomInputDialog.java", "stars": "2", "class_props": {"extends": "Dialog", "implements": null, "modifiers": ["public"]}}, {"id": 60960, "method_name": "setHintInput", "class_name": "CustomInputDialog", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setHintInput(String msg) {\n        hintInput = msg;\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/app/src/main/java/com/example/gsyvideoplayer/view/CustomInputDialog.java", "stars": "2", "class_props": {"extends": "Dialog", "implements": null, "modifiers": ["public"]}}, {"id": 60961, "method_name": "setTitle", "class_name": "CustomInputDialog", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setTitle(int msgId) {\n        title = context.getString(msgId);\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/app/src/main/java/com/example/gsyvideoplayer/view/CustomInputDialog.java", "stars": "2", "class_props": {"extends": "Dialog", "implements": null, "modifiers": ["public"]}}, {"id": 60962, "method_name": "setTitle", "class_name": "CustomInputDialog", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setTitle(String msg) {\n        title = msg;\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/app/src/main/java/com/example/gsyvideoplayer/view/CustomInputDialog.java", "stars": "2", "class_props": {"extends": "Dialog", "implements": null, "modifiers": ["public"]}}, {"id": 60963, "method_name": "setCache", "class_name": "CustomInputDialog", "params": ["boolean"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setCache(boolean cache) {\n        this.cache = cache;\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/app/src/main/java/com/example/gsyvideoplayer/view/CustomInputDialog.java", "stars": "2", "class_props": {"extends": "Dialog", "implements": null, "modifiers": ["public"]}}, {"id": 60964, "method_name": "setNeedDismissOnClick", "class_name": "CustomInputDialog", "params": ["boolean"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setNeedDismissOnClick(boolean needDismissOnClick) {\n        this.needDismissOnClick = needDismissOnClick;\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/app/src/main/java/com/example/gsyvideoplayer/view/CustomInputDialog.java", "stars": "2", "class_props": {"extends": "Dialog", "implements": null, "modifiers": ["public"]}}, {"id": 60965, "method_name": "setButton", "class_name": "CustomInputDialog", "params": ["int", "String", "OnClickListener"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setButton(int which, String text, OnClickListener onClickListener) {\n        switch (which) {\n            case DialogInterface.BUTTON_POSITIVE:\n                postiveButtonVisiable = true;\n                postiveText = text;\n                setOnPostiveClickListener(onClickListener);\n                break;\n            case DialogInterface.BUTTON_NEGATIVE:\n                negativeButtonVisiable = true;\n                negativeText = text;\n                setOnNegativeClickListener(onClickListener);\n                break;\n            default:\n                break;\n        }\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/app/src/main/java/com/example/gsyvideoplayer/view/CustomInputDialog.java", "stars": "2", "class_props": {"extends": "Dialog", "implements": null, "modifiers": ["public"]}}, {"id": 60966, "method_name": "setOnPostiveClickListener", "class_name": "CustomInputDialog", "params": ["OnClickListener"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setOnPostiveClickListener(OnClickListener onPostiveClickListener) {\n        this.onPostiveClickListener = onPostiveClickListener;\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/app/src/main/java/com/example/gsyvideoplayer/view/CustomInputDialog.java", "stars": "2", "class_props": {"extends": "Dialog", "implements": null, "modifiers": ["public"]}}, {"id": 60967, "method_name": "setOnNegativeClickListener", "class_name": "CustomInputDialog", "params": ["OnClickListener"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setOnNegativeClickListener(OnClickListener onNegativeClickListener) {\n        this.onNegativeClickListener = onNegativeClickListener;\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/app/src/main/java/com/example/gsyvideoplayer/view/CustomInputDialog.java", "stars": "2", "class_props": {"extends": "Dialog", "implements": null, "modifiers": ["public"]}}, {"id": 60968, "method_name": "collapseSoftInputMethod", "class_name": "CustomInputDialog", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void collapseSoftInputMethod() {\n        InputMethodManager imm = (InputMethodManager) getContext().getSystemService(getContext().INPUT_METHOD_SERVICE);\n        if (imm != null) {\n            imm.hideSoftInputFromWindow(getCurrentFocus()\n                    .getWindowToken(), InputMethodManager.HIDE_NOT_ALWAYS);\n        }\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/app/src/main/java/com/example/gsyvideoplayer/view/CustomInputDialog.java", "stars": "2", "class_props": {"extends": "Dialog", "implements": null, "modifiers": ["public"]}}, {"id": 60969, "method_name": "dismiss", "class_name": "CustomInputDialog", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void dismiss() {\n        collapseSoftInputMethod();\n        super.dismiss();\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/app/src/main/java/com/example/gsyvideoplayer/view/CustomInputDialog.java", "stars": "2", "class_props": {"extends": "Dialog", "implements": null, "modifiers": ["public"]}}, {"id": 60970, "method_name": "setMaxLength", "class_name": "CustomInputDialog", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setMaxLength(int maxLength) {\n        this.maxLength = maxLength;\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/app/src/main/java/com/example/gsyvideoplayer/view/CustomInputDialog.java", "stars": "2", "class_props": {"extends": "Dialog", "implements": null, "modifiers": ["public"]}}, {"id": 60971, "method_name": "onClick", "class_name": "OnButtonClickListener", "params": ["View"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "        public void onClick(View v) {\n\n            if (R.id.dialog_input_dialog_postive == v.getId()) {\n                if (onPostiveClickListener != null) {\n                    onPostiveClickListener.onClick(CustomInputDialog.this, DialogInterface.BUTTON_POSITIVE);\n                    String newInput = editMessage.getText().toString();\n                    if (!newInput.equals(input)) {\n                        input = newInput;\n                        onPostiveClickListener.onInputChanged(input, cacheCheck.isChecked());\n                    }\n                }\n            } else if (R.id.dialog_input_dialog_negative == v.getId()) {\n                if (onNegativeClickListener != null) {\n                    onNegativeClickListener.onClick(CustomInputDialog.this, DialogInterface.BUTTON_NEGATIVE);\n                }\n            }\n            if (needDismissOnClick) {\n                dismiss();\n            }\n        }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/app/src/main/java/com/example/gsyvideoplayer/view/CustomInputDialog.java", "stars": "2", "class_props": {"extends": null, "implements": ["View"], "modifiers": ["private"]}}, {"id": 60972, "method_name": "factory", "class_name": "EventListener", "params": ["EventListener"], "throws": null, "modifiers": ["public", "static"], "return_type": "EventListener", "snippet": "    public static EventListener.Factory factory(final EventListener listener) {\n        return new EventListener.Factory() {\n            public EventListener create(Call call) {\n                return listener;\n            }\n        };\n    }", "url": "https://raw.githubusercontent.com/mrchengwenlong/NettyIM/master/im_lib/src/main/java/com/takiku/im_lib/listener/EventListener.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 60973, "method_name": "connectStart", "class_name": "EventListener", "params": ["InetSocketAddress"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public  void connectStart( InetSocketAddress inetSocketAddress){\n\n    }", "url": "https://raw.githubusercontent.com/mrchengwenlong/NettyIM/master/im_lib/src/main/java/com/takiku/im_lib/listener/EventListener.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 60974, "method_name": "connectSuccess", "class_name": "EventListener", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public  void connectSuccess(){\n\n    }", "url": "https://raw.githubusercontent.com/mrchengwenlong/NettyIM/master/im_lib/src/main/java/com/takiku/im_lib/listener/EventListener.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 60975, "method_name": "connectionException", "class_name": "EventListener", "params": ["Throwable"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void connectionException(Throwable throwable){\n\n    }", "url": "https://raw.githubusercontent.com/mrchengwenlong/NettyIM/master/im_lib/src/main/java/com/takiku/im_lib/listener/EventListener.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 60976, "method_name": "connectFailed", "class_name": "EventListener", "params": ["InetSocketAddress", "IOException"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void connectFailed( InetSocketAddress inetSocketAddress, IOException ioe) {\n\n    }", "url": "https://raw.githubusercontent.com/mrchengwenlong/NettyIM/master/im_lib/src/main/java/com/takiku/im_lib/listener/EventListener.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 60977, "method_name": "connectionBroken", "class_name": "EventListener", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void connectionBroken(){\n\n    }", "url": "https://raw.githubusercontent.com/mrchengwenlong/NettyIM/master/im_lib/src/main/java/com/takiku/im_lib/listener/EventListener.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 60978, "method_name": "connectionReleased", "class_name": "EventListener", "params": ["Connection"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void connectionReleased(Connection connection) {\n    }", "url": "https://raw.githubusercontent.com/mrchengwenlong/NettyIM/master/im_lib/src/main/java/com/takiku/im_lib/listener/EventListener.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 60979, "method_name": "sendMsgStart", "class_name": "EventListener", "params": ["Call"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void sendMsgStart(Call call) {\n    }", "url": "https://raw.githubusercontent.com/mrchengwenlong/NettyIM/master/im_lib/src/main/java/com/takiku/im_lib/listener/EventListener.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 60980, "method_name": "sendMsgEnd", "class_name": "EventListener", "params": ["Call"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void sendMsgEnd(Call call) {\n    }", "url": "https://raw.githubusercontent.com/mrchengwenlong/NettyIM/master/im_lib/src/main/java/com/takiku/im_lib/listener/EventListener.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 60981, "method_name": "sendMsgFailed", "class_name": "EventListener", "params": ["Call"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void sendMsgFailed(Call call){}", "url": "https://raw.githubusercontent.com/mrchengwenlong/NettyIM/master/im_lib/src/main/java/com/takiku/im_lib/listener/EventListener.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 60982, "method_name": "newInstance", "class_name": "AbsDeriver", "params": ["String"], "throws": null, "modifiers": ["public", "static"], "return_type": "AbsDeriver", "snippet": "    public static AbsDeriver newInstance(@NonNull String coinCode) {\n        try {\n            Class clazz = Class.forName(CoinReflect.getCoinClassByCoinCode(coinCode) + \"$Deriver\");\n            return (AbsDeriver) clazz.newInstance();\n        } catch (ClassNotFoundException | IllegalAccessException | InstantiationException e) {\n            e.printStackTrace();\n        }\n        return null;\n    }", "url": "https://raw.githubusercontent.com/CoboVault/cobo-vault-cold/master/coinlib/src/main/java/com/cobo/coinlib/coins/AbsDeriver.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 60983, "method_name": "getAddrDeterministicKey", "class_name": "AbsDeriver", "params": ["String", "int", "int"], "throws": null, "modifiers": ["protected"], "return_type": "DeterministicKey", "snippet": "    protected DeterministicKey getAddrDeterministicKey(String accountXpub, int changeIndex, int addressIndex) {\n        DeterministicKey account = DeterministicKey.deserializeB58(accountXpub, MAINNET);\n        DeterministicKey change = HDKeyDerivation.deriveChildKey(account, changeIndex);\n        return HDKeyDerivation.deriveChildKey(change, addressIndex);\n    }", "url": "https://raw.githubusercontent.com/CoboVault/cobo-vault-cold/master/coinlib/src/main/java/com/cobo/coinlib/coins/AbsDeriver.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 60984, "method_name": "getDeterministicKey", "class_name": "AbsDeriver", "params": ["String"], "throws": null, "modifiers": ["protected"], "return_type": "DeterministicKey", "snippet": "    protected DeterministicKey getDeterministicKey(String xPub) {\n        return DeterministicKey.deserializeB58(xPub, MAINNET);\n    }", "url": "https://raw.githubusercontent.com/CoboVault/cobo-vault-cold/master/coinlib/src/main/java/com/cobo/coinlib/coins/AbsDeriver.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 60985, "method_name": "derive", "class_name": "AbsDeriver", "params": ["String", "int", "int"], "throws": null, "modifiers": ["public", "abstract"], "return_type": "String", "snippet": "    public abstract String derive(String xPubKey, int changeIndex, int addrIndex);\n\n    public abstract String derive(String xPubKey);\n}\n\n", "url": "https://raw.githubusercontent.com/CoboVault/cobo-vault-cold/master/coinlib/src/main/java/com/cobo/coinlib/coins/AbsDeriver.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 60986, "method_name": "derive", "class_name": "AbsDeriver", "params": ["String"], "throws": null, "modifiers": ["public", "abstract"], "return_type": "String", "snippet": "    public abstract String derive(String xPubKey);\n}\n\n", "url": "https://raw.githubusercontent.com/CoboVault/cobo-vault-cold/master/coinlib/src/main/java/com/cobo/coinlib/coins/AbsDeriver.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 60987, "method_name": "clone", "class_name": "BorderSubstring", "params": ["Substring"], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "\tprotected void clone(Substring other) {\n\t\tsuper.clone(other);\n\t\tint i;\n\t\tBorderSubstring bs = (BorderSubstring)other;\n\t\tbs.leftContext=leftContext;\n\t\tbs.isLeftExtensionOfMaximalRepeat=isLeftExtensionOfMaximalRepeat;\n\t\tbs.nRight=nRight;\n\t\tSystem.arraycopy(rightCharacters,0,bs.rightCharacters,0,nRight);\n\t\tSystem.arraycopy(rightLengths,0,bs.rightLengths,0,nRight);\n\t\tbs.nLeft=nLeft;\n\t\tSystem.arraycopy(leftCharacters,0,bs.leftCharacters,0,nLeft);\n\t\tSystem.arraycopy(leftLengths,0,bs.leftLengths,0,nLeft);\n\t\tbs.longestBorderLength=longestBorderLength;\n\t\tbs.shortestPeriodLength=shortestPeriodLength;\n\t\tbs.maxPossibleOccurrences=maxPossibleOccurrences;\n\t\tbs.longestBorderRightCharacter=longestBorderRightCharacter;\n\t\tbs.longestBorderLeftCharacter=longestBorderLeftCharacter;\n\t}", "url": "https://raw.githubusercontent.com/fcunial/portfolio/master/surprisingStrings/BorderSubstring.java", "stars": "2", "class_props": {"extends": "MaximalRepeat", "implements": null, "modifiers": ["public"]}}, {"id": 60988, "method_name": "deallocate", "class_name": "BorderSubstring", "params": [], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "\tprotected void deallocate() {\n\t\tsuper.deallocate();\n\t\trightCharacters=null;\n\t\trightLengths=null;\n\t\tleftCharacters=null;\n\t\tleftLengths=null;\n\t\tif (tmpString!=null) {\n\t\t\ttmpString.deallocate();\n\t\t\ttmpString=null;\n\t\t}\n\t\tlongestBorder=null;  // This is just a pointer: it doesn't need to be deallocated.\n\t}", "url": "https://raw.githubusercontent.com/fcunial/portfolio/master/surprisingStrings/BorderSubstring.java", "stars": "2", "class_props": {"extends": "MaximalRepeat", "implements": null, "modifiers": ["public"]}}, {"id": 60989, "method_name": "getInstance", "class_name": "BorderSubstring", "params": [], "throws": null, "modifiers": ["protected"], "return_type": "Substring", "snippet": "\tprotected Substring getInstance() {\n\t\treturn new BorderSubstring(alphabetLength,log2alphabetLength,bitsToEncodeAlphabetLength,bwtLength,log2BWTLength,bitsToEncodeBWTLength);\n\t}", "url": "https://raw.githubusercontent.com/fcunial/portfolio/master/surprisingStrings/BorderSubstring.java", "stars": "2", "class_props": {"extends": "MaximalRepeat", "implements": null, "modifiers": ["public"]}}, {"id": 60990, "method_name": "getEpsilon", "class_name": "BorderSubstring", "params": ["long"], "throws": null, "modifiers": ["protected"], "return_type": "Substring", "snippet": "\tprotected Substring getEpsilon(long[] C) {\n\t\tBorderSubstring out = (BorderSubstring)getInstance();\n\n\t\t// $bwtIntervals$\n\t\tout.nIntervals=alphabetLength+1;\n\t\tout.bwtIntervals[0][0]=0;  // $#$\n\t\tout.bwtIntervals[0][1]=0;\n\t\tfor (int i=0; i<alphabetLength-1; i++) {  // Other characters\n\t\t\tout.bwtIntervals[i+1][0]=C[i];\n\t\t\tout.bwtIntervals[i+1][1]=C[i+1]-1;\n\t\t}\n\t\tout.bwtIntervals[alphabetLength][0]=C[alphabetLength-1];\n\t\tout.bwtIntervals[alphabetLength][1]=bwtLength-1;\n\n\t\t// Other variables\n\t\tout.address=-1;\n\t\tout.log2address=-1;\n\t\tout.previousAddress=-1;\n\t\tout.length=0;\n\t\tout.log2length=-1;\n\t\tout.bitsToEncodeLength=1;\n\t\tout.firstCharacter=-1;\n\t\tout.hasBeenExtended=false;\n\t\tout.hasBeenStolen=false;\n\t\tout.computeRightContext();\n\t\tout.leftContext=-1;\n\t\tout.isLeftExtensionOfMaximalRepeat=false;\n\t\tout.nRight=0;\n\t\tout.nLeft=0;\n\t\tout.longestBorderLength=0;\n\t\tout.shortestPeriodLength=0;\n\t\tout.maxPossibleOccurrences=textLength+1;\n\t\tout.longestBorderRightCharacter=-1;\n\t\tout.longestBorderLeftCharacter=-1;\n\n\t\treturn out;\n\t}", "url": "https://raw.githubusercontent.com/fcunial/portfolio/master/surprisingStrings/BorderSubstring.java", "stars": "2", "class_props": {"extends": "MaximalRepeat", "implements": null, "modifiers": ["public"]}}, {"id": 60991, "method_name": "toString", "class_name": "BorderSubstring", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "\tpublic String toString() {\n\t\tString out = super.toString()+\" | \";\n\t\tout+=\"longestBorderLength=\"+longestBorderLength+\" shortestPeriodLength=\"+shortestPeriodLength+\" maxPossibleOccurrences=\"+maxPossibleOccurrences+\" \";\n\t\tout+=\"longestBorderRightCharacter=\"+longestBorderRightCharacter+\" longestBorderLeftCharacter=\"+longestBorderLeftCharacter+\" \";\n\t\tout+=\"nRight=\"+nRight+\" \";\n\t\tout+=\"nLeft=\"+nLeft+\" \";\n\t\tout+=\"rightArray: \";\n\t\tfor (int i=0; i<nRight; i++) out+=\"(\"+rightCharacters[i]+\",\"+rightLengths[i]+\") \";\n\t\tout+=\"leftArray: \";\n\t\tfor (int i=0; i<nLeft; i++) out+=\"(\"+leftCharacters[i]+\",\"+leftLengths[i]+\") \";\n\t\treturn out;\n\t}", "url": "https://raw.githubusercontent.com/fcunial/portfolio/master/surprisingStrings/BorderSubstring.java", "stars": "2", "class_props": {"extends": "MaximalRepeat", "implements": null, "modifiers": ["public"]}}, {"id": 60992, "method_name": "pushHeadPrime", "class_name": "BorderSubstring", "params": ["Stream", "Substring"], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "\tprotected void pushHeadPrime(Stream stack, Substring[] cache) {\n\t\tsuper.pushHeadPrime(stack,cache);\n\t\tstack.push(isLeftExtensionOfMaximalRepeat?1:0,1);\n\t\tif (length>1) stack.push(longestBorderLength,log2length);\nif (Constants.TRACK_STACK) System.out.println(System.currentTimeMillis()+\"|+|b|\"+( 1+(length>1?log2length:0) ));\n\t}", "url": "https://raw.githubusercontent.com/fcunial/portfolio/master/surprisingStrings/BorderSubstring.java", "stars": "2", "class_props": {"extends": "MaximalRepeat", "implements": null, "modifiers": ["public"]}}, {"id": 60993, "method_name": "readHeadPrime", "class_name": "BorderSubstring", "params": ["Stream", "Substring", "boolean"], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "\tprotected void readHeadPrime(Stream stack, Substring[] cache, boolean fast) {\n\t\tsuper.readHeadPrime(stack,cache,fast);\n\t\tisLeftExtensionOfMaximalRepeat=stack.read(1)==1?true:false;\n\t\tlongestBorderLength=length>1?stack.read(log2length):0;\n\n\t\tshortestPeriodLength=length-longestBorderLength;\n\t\tmaxPossibleOccurrences=length==0?textLength+1:(long)Math.ceil((textLength-length+1D)/shortestPeriodLength);\n \t\tif (longestBorderLength==0) {\n \t\t\tnRight=0;\n \t\t\tnLeft=0;\n \t\t\tlongestBorderRightCharacter=-1;\n \t\t\tlongestBorderLeftCharacter=-1;\n \t\t}\n\t}", "url": "https://raw.githubusercontent.com/fcunial/portfolio/master/surprisingStrings/BorderSubstring.java", "stars": "2", "class_props": {"extends": "MaximalRepeat", "implements": null, "modifiers": ["public"]}}, {"id": 60994, "method_name": "popHeadPrime", "class_name": "BorderSubstring", "params": ["Stream", "Substring"], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "\tprotected void popHeadPrime(Stream stack, Substring[] cache) {\n\t\tstack.pop( (length>1?log2length:0) +\n\t\t\t\t   1 );\n\t\tsuper.popHeadPrime(stack,cache);\nif (Constants.TRACK_STACK) System.out.println(System.currentTimeMillis()+\"|-|b|\"+( (length>1?log2length:0) +\n\t\t\t\t   \t\t\t\t\t\t\t\t\t\t1 ));\n\t}", "url": "https://raw.githubusercontent.com/fcunial/portfolio/master/surprisingStrings/BorderSubstring.java", "stars": "2", "class_props": {"extends": "MaximalRepeat", "implements": null, "modifiers": ["public"]}}, {"id": 60995, "method_name": "pushAppendix", "class_name": "BorderSubstring", "params": ["Stream", "Substring"], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "\tprotected void pushAppendix(Stream stack, Substring[] cache) {\n\t\tsuper.pushAppendix(stack,cache);\n\t\tif (longestBorderLength==0) return;\n\n\t\tif (length>Constants.BORDER_THRESHOLD_2) {\n\t\t\t// Large regime\n\t\t\treturn;\n\t\t}\n\t\tboolean pushInStack = false;\n\t\tif (length>0 && length<=Constants.BORDER_THRESHOLD_1) {\n\t\t\t// Small regime\n\t\t\tif (cache.length>0) clone(cache[(int)length-1]);\n\t\t\telse pushInStack=true;\n\t\t}\n\t\telse {\n\t\t\t// Medium regime\n\t\t\tpushInStack=true;\n\t\t}\n\t\tif (pushInStack) {\n\t\t\tstack.push(nRight,bitsToEncodeAlphabetLength);\n\t\t\tstack.push(nLeft,bitsToEncodeAlphabetLength);\n\t\t\tint i;\n\t\t\tfor (i=0; i<nRight; i++) stack.push(rightCharacters[i],log2alphabetLength);\n\t\t\tfor (i=0; i<nRight; i++) stack.push(rightLengths[i],log2length);\n\t\t\tfor (i=0; i<nLeft; i++) stack.push(leftCharacters[i],log2alphabetLength);\n\t\t\tfor (i=0; i<nLeft; i++) stack.push(leftLengths[i],log2length);\nif (Constants.TRACK_STACK) System.out.println(System.currentTimeMillis()+\"|+|b|\"+( bitsToEncodeAlphabetLength*2+(nRight+nLeft)*(log2alphabetLength+log2length) ));\n\t\t}\n\t}", "url": "https://raw.githubusercontent.com/fcunial/portfolio/master/surprisingStrings/BorderSubstring.java", "stars": "2", "class_props": {"extends": "MaximalRepeat", "implements": null, "modifiers": ["public"]}}, {"id": 60996, "method_name": "readAppendix", "class_name": "BorderSubstring", "params": ["Stream", "Substring", "boolean"], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "\tprotected void readAppendix(Stream stack, Substring[] cache, boolean fast) {\n\t\tsuper.readAppendix(stack,cache,fast);\n\t\tif (longestBorderLength==0) return;\n\n\t\tif (length>Constants.BORDER_THRESHOLD_2) {\n\t\t\t// Large regime\n\t\t\treturn;\n\t\t}\n\t\tboolean readFromStack = false;\n\t\tif (length>0 && length<=Constants.BORDER_THRESHOLD_1) {\n\t\t\t// Small regime\n\t\t\tif (cache!=null && cache.length>0) {\n\t\t\t\tBorderSubstring bs = (BorderSubstring)cache[(int)length-1];\n\t\t\t\tint i;\n\t\t\t\tnRight=bs.nRight;  // $nRight>0$ necessarily at this point\n\t\t\t\tSystem.arraycopy(bs.rightCharacters,0,rightCharacters,0,nRight);\n\t\t\t\tSystem.arraycopy(bs.rightLengths,0,rightLengths,0,nRight);\n\t\t\t\tnLeft=bs.nLeft;  // $nLeft>0$ necessarily at this point\n\t\t\t\tSystem.arraycopy(bs.leftCharacters,0,leftCharacters,0,nLeft);\n\t\t\t\tSystem.arraycopy(bs.leftLengths,0,leftLengths,0,nLeft);\n\t\t\t}\n\t\t\telse readFromStack=true;\n\t\t}\n\t\telse {\n\t\t\t// Medium regime\n\t\t\treadFromStack=true;\n\t\t}\n\t\tif (readFromStack) {\n\t\t\tnRight=(int)stack.read(bitsToEncodeAlphabetLength);\n\t\t\tnLeft=(int)stack.read(bitsToEncodeAlphabetLength);\n\t\t\tif (fast) stack.setPosition( stack.getPosition()+\n\t\t\t\t\t\t\t\t\t\t nRight*log2alphabetLength+\n\t\t\t\t\t\t\t\t\t\t nRight*log2length+\n\t\t\t\t\t\t\t\t\t\t nLeft*log2alphabetLength+\n\t\t\t\t\t\t\t\t\t\t nLeft*log2length);\n\t\t\telse {\n\t\t\t\tint i;\n\t\t\t\tfor (i=0; i<nRight; i++) rightCharacters[i]=(int)stack.read(log2alphabetLength);\n\t\t\t\tfor (i=0; i<nRight; i++) rightLengths[i]=(int)stack.read(log2length);\n\t\t\t\tfor (i=0; i<nLeft; i++) leftCharacters[i]=(int)stack.read(log2alphabetLength);\n\t\t\t\tfor (i=0; i<nLeft; i++) leftLengths[i]=(int)stack.read(log2length);\n\t\t\t}\n\t\t}\n\t}", "url": "https://raw.githubusercontent.com/fcunial/portfolio/master/surprisingStrings/BorderSubstring.java", "stars": "2", "class_props": {"extends": "MaximalRepeat", "implements": null, "modifiers": ["public"]}}, {"id": 60997, "method_name": "popAppendix", "class_name": "BorderSubstring", "params": ["Stream", "Substring"], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "\tprotected void popAppendix(Stream stack, Substring[] cache) {\n\t\tif (longestBorderLength>0) {\n\t\t\tif (length>Constants.BORDER_THRESHOLD_2) {\n\t\t\t\t// Large regime\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tboolean popFromStack = false;\n\t\t\tif (length>0 && length<=Constants.BORDER_THRESHOLD_1) {\n\t\t\t\t// Small regime\n\t\t\t\tif (cache.length==0) popFromStack=true;\n\t\t\t}\n\t\t\telse {\n\t\t\t\t// Medium regime\n\t\t\t\tpopFromStack=true;\n\t\t\t}\n\t\t\tif (popFromStack) {\n\t\t\t\tstack.pop( bitsToEncodeAlphabetLength+\n\t\t\t\t\t\t   bitsToEncodeAlphabetLength+\n\t\t\t\t\t\t   nRight*log2alphabetLength+\n\t\t\t\t\t\t   nRight*log2length+\n\t\t\t\t\t\t   nLeft*log2alphabetLength+\n\t\t\t\t\t\t   nLeft*log2length );\nif (Constants.TRACK_STACK) System.out.println(System.currentTimeMillis()+\"|-|b|\"+(bitsToEncodeAlphabetLength+\n\t\t\t\t\t\t\t\t\t\t\t\t\t   bitsToEncodeAlphabetLength+\n\t\t\t\t\t\t\t\t\t\t\t\t\t   nRight*log2alphabetLength+\n\t\t\t\t\t\t\t\t\t\t\t\t\t   nRight*log2length+\n\t\t\t\t\t\t\t\t\t\t\t\t\t   nLeft*log2alphabetLength+\n\t\t\t\t\t\t\t\t\t\t\t\t\t   nLeft*log2length));\n\t\t\t}\n\t\t}\n\t\tsuper.popAppendix(stack,cache);\n\t}", "url": "https://raw.githubusercontent.com/fcunial/portfolio/master/surprisingStrings/BorderSubstring.java", "stars": "2", "class_props": {"extends": "MaximalRepeat", "implements": null, "modifiers": ["public"]}}, {"id": 60998, "method_name": "initAfterExtending", "class_name": "BorderSubstring", "params": ["Substring", "int", "RigidStream", "int"], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "\tprotected void initAfterExtending(Substring suffix, int firstCharacter, RigidStream characterStack, int[] buffer) {\n\t\tsuper.initAfterExtending(suffix,firstCharacter,characterStack,buffer);\n\t\tleftContext=-1;\n\t\tisLeftExtensionOfMaximalRepeat=false;\n\t\tnRight=0;\n\t\tnLeft=0;\n\t\tlongestBorderLength=0;\n\t\tif (length>1 && firstCharacter!=-1 && rightContext>1) {  // We don't compute borders for left-extensions that are not right-maximal\n\t\t\tint pos = buffer[firstCharacter];\n\t\t\tif (pos>=0) longestBorderLength=((BorderSubstring)suffix).rightLengths[pos]+1;\n\t\t\telse {\n\t\t\t\tint lastCharacter;\n\t\t\t\tif (length==2) lastCharacter=suffix.firstCharacter;\n\t\t\t\telse lastCharacter = (int)(characterStack.getElementAt(0));\n\t\t\t\tif (lastCharacter==firstCharacter) longestBorderLength=1;\n\t\t\t}\n\t\t}\n\t\tshortestPeriodLength=length-longestBorderLength;\n\t\tmaxPossibleOccurrences=length==0?textLength+1:(long)Math.ceil((textLength-length+1D)/shortestPeriodLength);\n\t\tlongestBorderRightCharacter=-1;\n\t\tlongestBorderLeftCharacter=-1;\n\t}", "url": "https://raw.githubusercontent.com/fcunial/portfolio/master/surprisingStrings/BorderSubstring.java", "stars": "2", "class_props": {"extends": "MaximalRepeat", "implements": null, "modifiers": ["public"]}}, {"id": 60999, "method_name": "initAfterReading", "class_name": "BorderSubstring", "params": ["Stream", "RigidStream", "SimpleStream", "Substring"], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "\tprotected void initAfterReading(Stream stack, RigidStream characterStack, SimpleStream pointerStack, Substring[] cache) {\n\t\tsuper.initAfterReading(stack,characterStack,pointerStack,cache);\n\t\tnRight=0;\n\t\tnLeft=0;\n\t\tlongestBorderRightCharacter=-1;\n\t\tlongestBorderLeftCharacter=-1;\n\t\tif (longestBorderLength==0) return;\n\n\t\tloadLongestBorder(stack,pointerStack,cache);\n\t\tbuildRightArray(characterStack);\n\t\tif (isLeftExtensionOfMaximalRepeat) {\n\t\t\t// The longest border of $aw$, where $w$ is a maximal repeat, is itself a\n\t\t\t// string $az$ where $z$ is a maximal repeat. Thus, we only need to push on\n\t\t\t// the stack the left array of left-extensions of maximal repeats.\n\t\t\tbuildLeftArrayOfRightExtensions(characterStack);\n\t\t}\n\t}", "url": "https://raw.githubusercontent.com/fcunial/portfolio/master/surprisingStrings/BorderSubstring.java", "stars": "2", "class_props": {"extends": "MaximalRepeat", "implements": null, "modifiers": ["public"]}}, {"id": 61000, "method_name": "loadLongestBorder", "class_name": "BorderSubstring", "params": ["Stream", "SimpleStream", "Substring"], "throws": null, "modifiers": ["final", "private"], "return_type": "void", "snippet": "\tprivate final void loadLongestBorder(Stream stack, SimpleStream pointerStack, Substring[] cache) {\n\t\tif (longestBorderLength<=Constants.BORDER_THRESHOLD_1) longestBorder=(BorderSubstring)cache[(int)longestBorderLength-1];\n\t\telse {\n\t\t\tlong backupPointer = stack.getPosition();\n\t\t\tstack.setPosition(pointerStack.getElementAt(longestBorderLength-1));\n\t\t\tif (tmpString==null) tmpString=(BorderSubstring)getInstance();  // Executed at most once\n\t\t\ttmpString.read(stack,cache,false,false,false);\nif (Constants.TRACK_HITS) System.out.println(tmpString.length);\n\t\t\tlongestBorder=tmpString;\n\t\t\tstack.setPosition(backupPointer);\n\t\t}\n\t}", "url": "https://raw.githubusercontent.com/fcunial/portfolio/master/surprisingStrings/BorderSubstring.java", "stars": "2", "class_props": {"extends": "MaximalRepeat", "implements": null, "modifiers": ["public"]}}, {"id": 61001, "method_name": "buildRightArray", "class_name": "BorderSubstring", "params": ["RigidStream"], "throws": null, "modifiers": ["final", "private"], "return_type": "void", "snippet": "\tprivate final void buildRightArray(RigidStream characterStack) {\n\t\tlongestBorderRightCharacter=(int)characterStack.getElementAt(longestBorderLength);\n\t\tif (longestBorder.nRight==0) {\n\t\t\tnRight=1;\n\t\t\trightCharacters[0]=longestBorderRightCharacter;\n\t\t\trightLengths[0]=longestBorderLength;\n\t\t\treturn;\n\t\t}\n\t\tint k = Arrays.binarySearch(longestBorder.rightCharacters,0,longestBorder.nRight,longestBorderRightCharacter);\n\t\tif (k>=0) {\n\t\t\tnRight=longestBorder.nRight;\n\t\t\tSystem.arraycopy(longestBorder.rightCharacters,0,rightCharacters,0,nRight);\n\t\t\tSystem.arraycopy(longestBorder.rightLengths,0,rightLengths,0,nRight);\n\t\t\trightLengths[k]=longestBorderLength;\n\t\t}\n\t\telse {\n\t\t\tnRight=longestBorder.nRight+1;\n\t\t\tk=-k-1;\n\t\t\tSystem.arraycopy(longestBorder.rightCharacters,0,rightCharacters,0,k);\n\t\t\trightCharacters[k]=longestBorderRightCharacter;\n\t\t\tSystem.arraycopy(longestBorder.rightCharacters,k,rightCharacters,k+1,nRight-k-1);\n\t\t\tSystem.arraycopy(longestBorder.rightLengths,0,rightLengths,0,k);\n\t\t\trightLengths[k]=longestBorderLength;\n\t\t\tSystem.arraycopy(longestBorder.rightLengths,k,rightLengths,k+1,nRight-k-1);\n\t\t}\n\t}", "url": "https://raw.githubusercontent.com/fcunial/portfolio/master/surprisingStrings/BorderSubstring.java", "stars": "2", "class_props": {"extends": "MaximalRepeat", "implements": null, "modifiers": ["public"]}}, {"id": 61002, "method_name": "buildLeftArray", "class_name": "BorderSubstring", "params": ["RigidStream"], "throws": null, "modifiers": ["final", "private"], "return_type": "void", "snippet": "\tprivate final void buildLeftArray(RigidStream characterStack) {\n\t\tlongestBorderLeftCharacter=(int)(characterStack.getElementAt(length-longestBorderLength-1));\n\t\tif (longestBorder.nLeft==0) {\n\t\t\tnLeft=1;\n\t\t\tleftCharacters[0]=longestBorderLeftCharacter;\n\t\t\tleftLengths[0]=longestBorderLength;\n\t\t\treturn;\n\t\t}\n\t\tint k = Arrays.binarySearch(longestBorder.leftCharacters,0,longestBorder.nLeft,longestBorderLeftCharacter);\n\t\tif (k>=0) {\n\t\t\tnLeft=longestBorder.nLeft;\n\t\t\tSystem.arraycopy(longestBorder.leftCharacters,0,leftCharacters,0,nLeft);\n\t\t\tSystem.arraycopy(longestBorder.leftLengths,0,leftLengths,0,nLeft);\n\t\t\tleftLengths[k]=longestBorderLength;\n\t\t}\n\t\telse {\n\t\t\tnLeft=longestBorder.nLeft+1;\n\t\t\tk=-k-1;\n\t\t\tSystem.arraycopy(longestBorder.leftCharacters,0,leftCharacters,0,k);\n\t\t\tleftCharacters[k]=longestBorderLeftCharacter;\n\t\t\tSystem.arraycopy(longestBorder.leftCharacters,k,leftCharacters,k+1,nLeft-k-1);\n\t\t\tSystem.arraycopy(longestBorder.leftLengths,0,leftLengths,0,k);\n\t\t\tleftLengths[k]=longestBorderLength;\n\t\t\tSystem.arraycopy(longestBorder.leftLengths,k,leftLengths,k+1,nLeft-k-1);\n\t\t}\n\t}", "url": "https://raw.githubusercontent.com/fcunial/portfolio/master/surprisingStrings/BorderSubstring.java", "stars": "2", "class_props": {"extends": "MaximalRepeat", "implements": null, "modifiers": ["public"]}}, {"id": 61003, "method_name": "buildLeftArrayOfRightExtensions", "class_name": "BorderSubstring", "params": ["RigidStream"], "throws": null, "modifiers": ["final", "private"], "return_type": "void", "snippet": "\tprivate final void buildLeftArrayOfRightExtensions(RigidStream characterStack) {\n\t\tint c, k;\n\t\tlongestBorderLeftCharacter=(int)(characterStack.getElementAt(length-longestBorderLength-1));\n\t\tnLeft=0;\n\t\tfor (c=1; c<longestBorderLeftCharacter+1; c++) {\n\t\t\tif (bwtIntervals[c][1]-bwtIntervals[c][0]<0) continue;\n\t\t\tk=Arrays.binarySearch(longestBorder.leftCharacters,0,longestBorder.nLeft,c-1);\n\t\t\tif (k>=0) {\n\t\t\t\tleftCharacters[nLeft]=longestBorder.leftCharacters[k];\n\t\t\t\tleftLengths[nLeft]=longestBorder.leftLengths[k];\n\t\t\t\tnLeft++;\n\t\t\t}\n\t\t}\n\t\tif (bwtIntervals[longestBorderLeftCharacter+1][1]-bwtIntervals[longestBorderLeftCharacter+1][0]>=0) {\n\t\t\tleftCharacters[nLeft]=longestBorderLeftCharacter;\n\t\t\tleftLengths[nLeft]=longestBorderLength;\n\t\t\tnLeft++;\n\t\t}\n\t\tfor (c=longestBorderLeftCharacter+2; c<=alphabetLength; c++) {\n\t\t\tif (bwtIntervals[c][1]-bwtIntervals[c][0]<0) continue;\n\t\t\tk=Arrays.binarySearch(longestBorder.leftCharacters,0,longestBorder.nLeft,c-1);\n\t\t\tif (k>=0) {\n\t\t\t\tleftCharacters[nLeft]=longestBorder.leftCharacters[k];\n\t\t\t\tleftLengths[nLeft]=longestBorder.leftLengths[k];\n\t\t\t\tnLeft++;\n\t\t\t}\n\t\t}\n\t}", "url": "https://raw.githubusercontent.com/fcunial/portfolio/master/surprisingStrings/BorderSubstring.java", "stars": "2", "class_props": {"extends": "MaximalRepeat", "implements": null, "modifiers": ["public"]}}, {"id": 61004, "method_name": "fillBuffer", "class_name": "BorderSubstring", "params": ["int", "boolean"], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "\tprotected void fillBuffer(int[] buffer, boolean right) {\n\t\tif (right) {\n\t\t\tfor (int i=0; i<nRight; i++) buffer[rightCharacters[i]]=i;\n\t\t}\n\t\telse {\n\t\t\tfor (int i=0; i<nLeft; i++) buffer[leftCharacters[i]]=i;\n\t\t}\n\t}", "url": "https://raw.githubusercontent.com/fcunial/portfolio/master/surprisingStrings/BorderSubstring.java", "stars": "2", "class_props": {"extends": "MaximalRepeat", "implements": null, "modifiers": ["public"]}}, {"id": 61005, "method_name": "emptyBuffer", "class_name": "BorderSubstring", "params": ["int", "boolean"], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "\tprotected void emptyBuffer(int[] buffer, boolean right) {\n\t\tif (right) {\n\t\t\tfor (int i=0; i<nRight; i++) buffer[rightCharacters[i]]=-1;\n\t\t}\n\t\telse {\n\t\t\tfor (int i=0; i<nLeft; i++) buffer[leftCharacters[i]]=-1;\n\t\t}\n\t}", "url": "https://raw.githubusercontent.com/fcunial/portfolio/master/surprisingStrings/BorderSubstring.java", "stars": "2", "class_props": {"extends": "MaximalRepeat", "implements": null, "modifiers": ["public"]}}, {"id": 61006, "method_name": "register", "class_name": "Static", "params": ["MethodHandles", "String", "Class<?>"], "throws": null, "modifiers": ["protected", "static"], "return_type": "Object", "snippet": "    protected static Object register(MethodHandles.Lookup lookup, String name, Class<?> klass) {\n        LOOKUP_MAP.get(lookup.lookupClass()).lookup = lookup;\n        return null;\n    }", "url": "https://raw.githubusercontent.com/sstewartgallus/jsystemf/master/src/com/sstewartgallus/runtime/Static.java", "stars": "5", "class_props": {"extends": "FunValue", "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 61007, "method_name": "spin", "class_name": "Static", "params": ["List<Class>", "Class<?>", "MethodHandle"], "throws": null, "modifiers": ["public", "static"], "return_type": "Static<?>", "snippet": "    public static Static<?> spin(List<Class<?>> arguments, Class<?> result, MethodHandle entryPoint) {\n        var registerLookupHack = new ConstantDynamic(\"registerHack\", Object.class.descriptorString(), REGISTER_BOOTSTRAP);\n\n        var myname = Type.getInternalName(Static.class);\n        var newclassname = myname + \"Impl\";\n\n        // fixme.. not really a need for dynamically spinning this....\n        var cw = new ClassWriter(ClassWriter.COMPUTE_FRAMES | ClassWriter.COMPUTE_MAXS);\n        cw.visit(V14, ACC_FINAL | ACC_PRIVATE, newclassname, null, myname, null);\n\n        {\n            var mw = cw.visitMethod(ACC_PRIVATE | ACC_STATIC, \"<clinit>\", methodType(void.class).descriptorString(), null, null);\n            mw.visitCode();\n            mw.visitLdcInsn(registerLookupHack);\n            mw.visitInsn(RETURN);\n            mw.visitMaxs(0, 0);\n            mw.visitEnd();\n        }\n\n        {\n            var mw = cw.visitMethod(ACC_PRIVATE, \"<init>\", methodType(void.class).descriptorString(), null, null);\n            mw.visitCode();\n            mw.visitVarInsn(ALOAD, 0);\n            mw.visitMethodInsn(INVOKESPECIAL, myname, \"<init>\", methodType(void.class).descriptorString(), false);\n            mw.visitVarInsn(ALOAD, 0);\n            mw.visitInsn(RETURN);\n            mw.visitMaxs(0, 0);\n            mw.visitEnd();\n        }\n\n        cw.visitEnd();\n\n        var bytes = cw.toByteArray();\n\n        var definedClass = AnonClassLoader.defineClass(Static.class.getClassLoader(), bytes);\n        var klass = definedClass.asSubclass(Static.class);\n\n        var privateLookup = LOOKUP_MAP.get(klass).lookup;\n        LOOKUP_MAP.get(klass).infotable = new Infotable(arguments, entryPoint);\n\n        MethodHandle con;\n        try {\n            con = privateLookup.findConstructor(klass, methodType(void.class));\n        } catch (NoSuchMethodException | IllegalAccessException e) {\n            throw new RuntimeException(e);\n        }\n\n        try {\n            return (Static) con.invoke();\n        } catch (Throwable throwable) {\n            throw new RuntimeException(throwable);\n        }\n    }", "url": "https://raw.githubusercontent.com/sstewartgallus/jsystemf/master/src/com/sstewartgallus/runtime/Static.java", "stars": "5", "class_props": {"extends": "FunValue", "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 61008, "method_name": "infoTable", "class_name": "Static", "params": [], "throws": null, "modifiers": [], "return_type": "Infotable", "snippet": "    Infotable infoTable() {\n        return LOOKUP_MAP.get(getClass()).infotable;\n    }", "url": "https://raw.githubusercontent.com/sstewartgallus/jsystemf/master/src/com/sstewartgallus/runtime/Static.java", "stars": "5", "class_props": {"extends": "FunValue", "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 61009, "method_name": "arity", "class_name": "Static", "params": [], "throws": null, "modifiers": ["protected"], "return_type": "int", "snippet": "    protected int arity() {\n        return infoTable().arguments().size();\n    }", "url": "https://raw.githubusercontent.com/sstewartgallus/jsystemf/master/src/com/sstewartgallus/runtime/Static.java", "stars": "5", "class_props": {"extends": "FunValue", "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 61010, "method_name": "saturatedApplication", "class_name": "Static", "params": ["LinkRequest", "LinkerServices"], "throws": ["NoSuchFieldException", "IllegalAccessException"], "modifiers": ["protected"], "return_type": "GuardedInvocation", "snippet": "    protected GuardedInvocation saturatedApplication(LinkRequest linkRequest, LinkerServices linkerServices) throws NoSuchFieldException, IllegalAccessException {\n        var metadata = infoTable();\n\n        var argument = metadata.arguments();\n\n        var mh = metadata.entryPoint();\n        mh = dropArguments(mh, 0, Value.class, Void.class);\n\n        return new GuardedInvocation(mh, Guards.isOfClass(getClass(), mh.type().changeReturnType(boolean.class)));\n    }", "url": "https://raw.githubusercontent.com/sstewartgallus/jsystemf/master/src/com/sstewartgallus/runtime/Static.java", "stars": "5", "class_props": {"extends": "FunValue", "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 61011, "method_name": "toString", "class_name": "Static", "params": [], "throws": null, "modifiers": ["final", "public"], "return_type": "String", "snippet": "    public final String toString() {\n        return Static.class.getSimpleName() + \":\" + infoTable();\n    }", "url": "https://raw.githubusercontent.com/sstewartgallus/jsystemf/master/src/com/sstewartgallus/runtime/Static.java", "stars": "5", "class_props": {"extends": "FunValue", "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 61012, "method_name": "onCreateView", "class_name": "DetailFragment", "params": ["LayoutInflater", "ViewGroup", "Bundle"], "throws": null, "modifiers": ["public"], "return_type": "View", "snippet": "\t  public View onCreateView(LayoutInflater inflater, ViewGroup container,\n\t      Bundle savedInstanceState) {\n\t    View view = inflater.inflate(R.layout.fragment_rssitem_detail,\n\t        container, false);\n\t    return view;\n\t  }", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/HBfragment/src/com/example/hbfragment/DetailFragment.java", "stars": "74", "class_props": {"extends": "Fragment", "implements": null, "modifiers": ["public"]}}, {"id": 61013, "method_name": "setText", "class_name": "DetailFragment", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\t  public void setText(String item) {\n\t    TextView view = (TextView) getView().findViewById(R.id.detailsText);\n\t    view.setText(item);\n\t  }", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/HBfragment/src/com/example/hbfragment/DetailFragment.java", "stars": "74", "class_props": {"extends": "Fragment", "implements": null, "modifiers": ["public"]}}, {"id": 61014, "method_name": "setView", "class_name": "GenerateMnemonicFragment", "params": [], "throws": null, "modifiers": ["protected"], "return_type": "int", "snippet": "    protected int setView() {\n        return R.layout.generate_mnemonic;\n    }", "url": "https://raw.githubusercontent.com/CoboVault/cobo-vault-cold/master/app/src/main/java/com/cobo/cold/ui/fragment/setup/GenerateMnemonicFragment.java", "stars": "13", "class_props": {"extends": "SetupVaultBaseFragment", "implements": null, "modifiers": ["public"]}}, {"id": 61015, "method_name": "init", "class_name": "GenerateMnemonicFragment", "params": ["View"], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void init(View view) {\n        super.init(view);\n        mBinding.toolbar.setNavigationOnClickListener(v -> navigateUp());\n        viewModel.setMnemonicCount(MnemonicInputTable.TWEENTYFOUR);\n        mBinding.table.setMnemonicNumber(MnemonicInputTable.TWEENTYFOUR);\n        mBinding.table.setEditable(false);\n        mBinding.confirmSaved.setOnClickListener(this::confirmInput);\n        observeMnemonic();\n    }", "url": "https://raw.githubusercontent.com/CoboVault/cobo-vault-cold/master/app/src/main/java/com/cobo/cold/ui/fragment/setup/GenerateMnemonicFragment.java", "stars": "13", "class_props": {"extends": "SetupVaultBaseFragment", "implements": null, "modifiers": ["public"]}}, {"id": 61016, "method_name": "confirmInput", "class_name": "GenerateMnemonicFragment", "params": ["View"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void confirmInput(View view) {\n        ModalDialog dialog = new ModalDialog();\n        CommonModalBinding binding = DataBindingUtil.inflate(LayoutInflater.from(mActivity),\n                R.layout.common_modal, null, false);\n        dialog.setBinding(binding);\n        binding.title.setText(R.string.please_confirm);\n        binding.subTitle.setText(R.string.mnemonic_save_hint);\n        binding.confirm.setText(R.string.confirm_to_verify_mnemonic);\n        binding.confirm.setOnClickListener(v -> {\n            dialog.dismiss();\n            navigate(R.id.action_to_confirmMnemonicFragment);\n        });\n        binding.close.setOnClickListener(v -> dialog.dismiss());\n        dialog.show(mActivity.getSupportFragmentManager(), \"\");\n    }", "url": "https://raw.githubusercontent.com/CoboVault/cobo-vault-cold/master/app/src/main/java/com/cobo/cold/ui/fragment/setup/GenerateMnemonicFragment.java", "stars": "13", "class_props": {"extends": "SetupVaultBaseFragment", "implements": null, "modifiers": ["public"]}}, {"id": 61017, "method_name": "observeMnemonic", "class_name": "GenerateMnemonicFragment", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void observeMnemonic() {\n        viewModel.getRandomMnemonic().observe(this, s -> {\n            if (TextUtils.isEmpty(s)) {\n                return;\n            }\n            String[] words = s.split(\" \");\n            if (words.length != 24) {\n                return;\n            }\n\n            if (dialog == null) {\n                dialog = new SecretModalDialog();\n            }\n\n            if (dialog.getDialog() == null || !dialog.getDialog().isShowing()) {\n                dialog.show(mActivity.getSupportFragmentManager(), \"\");\n            }\n\n            for (int i = 0; i < words.length; i++) {\n                mBinding.table.getWordsList().get(i).set(words[i]);\n            }\n            mBinding.confirmSaved.setEnabled(true);\n        });\n        viewModel.generateRandomMnemonic();\n    }", "url": "https://raw.githubusercontent.com/CoboVault/cobo-vault-cold/master/app/src/main/java/com/cobo/cold/ui/fragment/setup/GenerateMnemonicFragment.java", "stars": "13", "class_props": {"extends": "SetupVaultBaseFragment", "implements": null, "modifiers": ["public"]}}, {"id": 61018, "method_name": "onPause", "class_name": "GenerateMnemonicFragment", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onPause() {\n        super.onPause();\n        viewModel.getRandomMnemonic().removeObservers(this);\n    }", "url": "https://raw.githubusercontent.com/CoboVault/cobo-vault-cold/master/app/src/main/java/com/cobo/cold/ui/fragment/setup/GenerateMnemonicFragment.java", "stars": "13", "class_props": {"extends": "SetupVaultBaseFragment", "implements": null, "modifiers": ["public"]}}, {"id": 61019, "method_name": "ip", "class_name": "TestController", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String ip() {\n        return ip;\n    }", "url": "https://raw.githubusercontent.com/1127140426/tensquare/master/tensquare_base/src/main/java/com/tensquare/base/controller/TestController.java", "stars": "34", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 61020, "method_name": "main", "class_name": "VariablesInJava3", "params": ["String"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "\tpublic static void main(String args[]) {\n        String str = \"book\";\n\t\tSystem.out.println(str);\n\n\t\tstr = \"phone\";\n\t\tSystem.out.println(str);\n\n\t\t// \"phone - iphone\"\n\t\tstr = str + \" - iphone\";\n\t\tSystem.out.println(str);\n\n\t\tstr = str +\" \"+ str;\n\t\tSystem.out.println(str);\n\t}", "url": "https://raw.githubusercontent.com/Suranchiyev/java-sdet-2020/master/src/day3/VariablesInJava3.java", "stars": "21", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 61021, "method_name": "getCount", "class_name": "DetailStatisticAdapter", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getCount() {\n        return dataStats.size();\n    }", "url": "https://raw.githubusercontent.com/fadhilahramadhan/Android_Covid19Stats/master/app/src/main/java/fadhilah/ramadhan/covid19stats/adapter/DetailStatisticAdapter.java", "stars": "2", "class_props": {"extends": "BaseAdapter", "implements": null, "modifiers": ["public"]}}, {"id": 61022, "method_name": "getItem", "class_name": "DetailStatisticAdapter", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "DataStats", "snippet": "    public DataStats getItem(int position) {\n        return dataStats.get(position);\n    }", "url": "https://raw.githubusercontent.com/fadhilahramadhan/Android_Covid19Stats/master/app/src/main/java/fadhilah/ramadhan/covid19stats/adapter/DetailStatisticAdapter.java", "stars": "2", "class_props": {"extends": "BaseAdapter", "implements": null, "modifiers": ["public"]}}, {"id": 61023, "method_name": "getItemId", "class_name": "DetailStatisticAdapter", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "long", "snippet": "    public long getItemId(int position) {\n        return 0;\n    }", "url": "https://raw.githubusercontent.com/fadhilahramadhan/Android_Covid19Stats/master/app/src/main/java/fadhilah/ramadhan/covid19stats/adapter/DetailStatisticAdapter.java", "stars": "2", "class_props": {"extends": "BaseAdapter", "implements": null, "modifiers": ["public"]}}, {"id": 61024, "method_name": "getView", "class_name": "DetailStatisticAdapter", "params": ["int", "View", "ViewGroup"], "throws": null, "modifiers": ["public"], "return_type": "View", "snippet": "    public View getView(int position, View v, ViewGroup parent) {\n        v = LayoutInflater.from(context).inflate(R.layout.list_row_detail_statistic,null);\n\n        dateHeader          = v.findViewById(R.id.dateHeader);\n        titleActiveCaseText = v.findViewById(R.id.titleActiveCaseText);\n        titlePositiveText   = v.findViewById(R.id.titlePositiveText);\n        titleRecoveredText  = v.findViewById(R.id.titleRecoveredText);\n        titleDeathText      = v.findViewById(R.id.titleDeathText);\n        activeCaseText      = v.findViewById(R.id.activeCaseText);\n        positiveText        = v.findViewById(R.id.positiveText);\n        recoveredText       = v.findViewById(R.id.recoveredText);\n        deathText           = v.findViewById(R.id.deathText);\n        dateLayout          = v.findViewById(R.id.dateLayout);\n        detailDataStats     = v.findViewById(R.id.detailDataStats);\n\n        postiveUpDown       = v.findViewById(R.id.postiveUpDown);\n        activeUpDown        = v.findViewById(R.id.activeUpDown);\n        recoveredUpDown     = v.findViewById(R.id.recoveredUpDown);\n        deathUpDown         = v.findViewById(R.id.deathUpDown);\n        postiveUpDownImg    = v.findViewById(R.id.postiveUpDownImg);\n        activeUpDownImg     = v.findViewById(R.id.activeUpDownImg);\n        recoveredUpDownImg  = v.findViewById(R.id.recoveredUpDownImg);\n        deathUpDownImg      = v.findViewById(R.id.deathUpDownImg);\n        postiveUpDownLayout       = v.findViewById(R.id.positiveUpDownLayout);\n        activeUpDownLayout        = v.findViewById(R.id.activeUpDownLayout);\n        recoveredUpDownLayout     = v.findViewById(R.id.recoveredUpDownLayout);\n        deathUpDownLayout         = v.findViewById(R.id.deathUpDownLayout);\n\n        positiveText.setText(String.valueOf(getItem(position).getPostive()));\n        activeCaseText.setText(String.valueOf(getItem(position).getActiveCases()));\n        recoveredText.setText(String.valueOf(getItem(position).getCured()));\n        deathText.setText(String.valueOf(getItem(position).getDeath()));\n\n        buildStats(position);\n\n        if(dateShow.get(position)){\n            dateLayout.setVisibility(View.VISIBLE);\n            dateHeader.setText(Utility.dateFormat(Constant.SIMPLE_DATE, getItem(position).getDate()));\n        }\n\n        if(position != 0){\n            if(getItem(position).getPostive() != getItem(position-1).getPostive()){\n                int total =   getItem(position).getPostive()- getItem(position-1).getPostive();\n                postiveUpDown.setText(String.valueOf(total));\n                postiveUpDownLayout.setVisibility(View.VISIBLE);\n            }\n            if(getItem(position).getActiveCases() != getItem(position-1).getActiveCases()){\n                int total =   getItem(position).getActiveCases()-getItem(position-1).getActiveCases() ;\n                if(total < 0){\n                    total =   getItem(position-1).getActiveCases() - getItem(position).getActiveCases();\n                }\n                activeUpDown.setText(String.valueOf(total));\n                activeUpDownLayout.setVisibility(View.VISIBLE);\n            }\n            if(getItem(position).getCured() != getItem(position-1).getCured()){\n                int total =  getItem(position).getCured()- getItem(position-1).getCured();\n                recoveredUpDown.setText(String.valueOf(total));\n                recoveredUpDownLayout.setVisibility(View.VISIBLE);\n            }\n            if(getItem(position).getDeath() != getItem(position-1).getDeath()){\n                int total =   getItem(position).getDeath()-getItem(position-1).getDeath();\n                deathUpDown.setText(String.valueOf(total));\n                deathUpDownLayout.setVisibility(View.VISIBLE);\n            }\n        }\n\n\n        setFont();\n        return v;\n    }", "url": "https://raw.githubusercontent.com/fadhilahramadhan/Android_Covid19Stats/master/app/src/main/java/fadhilah/ramadhan/covid19stats/adapter/DetailStatisticAdapter.java", "stars": "2", "class_props": {"extends": "BaseAdapter", "implements": null, "modifiers": ["public"]}}, {"id": 61025, "method_name": "setFont", "class_name": "DetailStatisticAdapter", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void setFont(){\n        titleDeathText.setTypeface(FontUtils.loadFontFromAssets(context, Constant.FONT_BOLD));\n        titleRecoveredText.setTypeface(FontUtils.loadFontFromAssets(context, Constant.FONT_BOLD));\n        titlePositiveText.setTypeface(FontUtils.loadFontFromAssets(context, Constant.FONT_BOLD));\n        titleActiveCaseText.setTypeface(FontUtils.loadFontFromAssets(context, Constant.FONT_BOLD));\n        activeCaseText.setTypeface(FontUtils.loadFontFromAssets(context, Constant.FONT_NORMAL));\n        positiveText.setTypeface(FontUtils.loadFontFromAssets(context, Constant.FONT_NORMAL));\n        recoveredText.setTypeface(FontUtils.loadFontFromAssets(context, Constant.FONT_NORMAL));\n        deathText.setTypeface(FontUtils.loadFontFromAssets(context, Constant.FONT_NORMAL));\n        postiveUpDown.setTypeface(FontUtils.loadFontFromAssets(context, Constant.FONT_NORMAL));\n        activeUpDown.setTypeface(FontUtils.loadFontFromAssets(context, Constant.FONT_NORMAL));\n        recoveredUpDown.setTypeface(FontUtils.loadFontFromAssets(context, Constant.FONT_NORMAL));\n        deathUpDown.setTypeface(FontUtils.loadFontFromAssets(context, Constant.FONT_NORMAL));\n    }", "url": "https://raw.githubusercontent.com/fadhilahramadhan/Android_Covid19Stats/master/app/src/main/java/fadhilah/ramadhan/covid19stats/adapter/DetailStatisticAdapter.java", "stars": "2", "class_props": {"extends": "BaseAdapter", "implements": null, "modifiers": ["public"]}}, {"id": 61026, "method_name": "buildStats", "class_name": "DetailStatisticAdapter", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void buildStats(int position){\n        Float maxValue = (float) getItem(position).getPostive() + getItem(position).getActiveCases() + getItem(position).getCured() +getItem(position).getDeath();\n        detailDataStats.setMaxValue(maxValue);\n        detailDataStats.setMinValue(0f);\n\n        Collection<FitChartValue> values = new ArrayList<>();\n        values.add(new FitChartValue((float)getItem(position).getPostive(), context.getResources().getColor(R.color.colorDark)));\n        values.add(new FitChartValue((float)getItem(position).getActiveCases(), context.getResources().getColor(R.color.bg_Blue)));\n        values.add(new FitChartValue((float)getItem(position).getCured(), context.getResources().getColor(R.color.bg_Green)));\n        values.add(new FitChartValue((float)getItem(position).getDeath(), context.getResources().getColor(R.color.bg_Red)));\n        detailDataStats.setValues(values);\n    }", "url": "https://raw.githubusercontent.com/fadhilahramadhan/Android_Covid19Stats/master/app/src/main/java/fadhilah/ramadhan/covid19stats/adapter/DetailStatisticAdapter.java", "stars": "2", "class_props": {"extends": "BaseAdapter", "implements": null, "modifiers": ["public"]}}, {"id": 61027, "method_name": "write", "class_name": "CustomOutputStream", "params": ["int"], "throws": ["IOException"], "modifiers": ["final", "public"], "return_type": "void", "snippet": "  public final void write(int i) throws IOException {\n    char c = (char) i;\n    if (c == '\\r' || c == '\\n') {\n      if (stringBuilder.length() > 0) {\n        logger.log(level, stringBuilder.toString());\n        stringBuilder = new StringBuilder();\n      }\n    } else\n      stringBuilder.append(c);\n  }", "url": "https://raw.githubusercontent.com/GraxCode/threadtear/master/src/me/nov/threadtear/logging/CustomOutputStream.java", "stars": "140", "class_props": {"extends": "OutputStream", "implements": null, "modifiers": ["public"]}}, {"id": 61028, "method_name": "read", "class_name": "ZipIO", "params": ["File", "String"], "throws": ["Exception"], "modifiers": ["static"], "return_type": "Map<String,byte>", "snippet": "\tstatic Map<String, byte[]> read(File file, String namePattern) throws Exception {\n\t\tSystem.out.println(\"Read: \" + file);\n\t\tZipFile zf = new ZipFile(file);\n\t\tMap<String, byte[]> contents = new HashMap<>();\n\t\ttry (ZipInputStream zis = new ZipInputStream(new FileInputStream(file))) {\n\t\t\tZipEntry entry = null;\n\t\t\tbyte[] buffer = new byte[8192];\n\t\t\twhile ((entry = zis.getNextEntry()) != null) {\n\t\t\t\tif (entry.getName().matches(namePattern)) {\n\t\t\t\t\ttry (InputStream entryStream = zf.getInputStream(entry)) {\n\t\t\t\t\t\tint len;\n\t\t\t\t\t\tByteArrayOutputStream baos = new ByteArrayOutputStream();\n\t\t\t\t\t\twhile ((len = entryStream.read(buffer)) != -1)\n\t\t\t\t\t\t\tbaos.write(buffer, 0, len);\n\t\t\t\t\t\tcontents.put(entry.getName(), baos.toByteArray());\n\t\t\t\t\t} finally {\n\t\t\t\t\t\tSystem.out.println(\" - \" + entry.getName());\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t} finally {\n\t\t\tSystem.out.println(\"Read: \" + contents.size());\n\t\t}\n\t\treturn contents;\n\t}", "url": "https://raw.githubusercontent.com/Col-E/SimAnalyzer/master/src/test/resources/src/ZipIO.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 61029, "method_name": "onPageScrollStateChanged", "class_name": "ViewPager_OnPageChangeListenerImplementor", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void onPageScrollStateChanged (int p0)\n\t{\n\t\tn_onPageScrollStateChanged (p0);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/mono/android/support/v4/view/ViewPager_OnPageChangeListenerImplementor.java", "stars": "2", "class_props": {"extends": "java", "implements": ["mono", "android"], "modifiers": ["public"]}}, {"id": 61030, "method_name": "n_onPageScrollStateChanged", "class_name": "ViewPager_OnPageChangeListenerImplementor", "params": ["int"], "throws": null, "modifiers": ["private", "native"], "return_type": "void", "snippet": "\tprivate native void n_onPageScrollStateChanged (int p0);\n\n\n\tpublic void onPageScrolled (int p0, float p1, int p2)\n\t{\n\t\tn_onPageScrolled (p0, p1, p2);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/mono/android/support/v4/view/ViewPager_OnPageChangeListenerImplementor.java", "stars": "2", "class_props": {"extends": "java", "implements": ["mono", "android"], "modifiers": ["public"]}}, {"id": 61031, "method_name": "onPageScrolled", "class_name": "ViewPager_OnPageChangeListenerImplementor", "params": ["int", "float", "int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void onPageScrolled (int p0, float p1, int p2)\n\t{\n\t\tn_onPageScrolled (p0, p1, p2);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/mono/android/support/v4/view/ViewPager_OnPageChangeListenerImplementor.java", "stars": "2", "class_props": {"extends": "java", "implements": ["mono", "android"], "modifiers": ["public"]}}, {"id": 61032, "method_name": "n_onPageScrolled", "class_name": "ViewPager_OnPageChangeListenerImplementor", "params": ["int", "float", "int"], "throws": null, "modifiers": ["private", "native"], "return_type": "void", "snippet": "\tprivate native void n_onPageScrolled (int p0, float p1, int p2);\n\n\n\tpublic void onPageSelected (int p0)\n\t{\n\t\tn_onPageSelected (p0);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/mono/android/support/v4/view/ViewPager_OnPageChangeListenerImplementor.java", "stars": "2", "class_props": {"extends": "java", "implements": ["mono", "android"], "modifiers": ["public"]}}, {"id": 61033, "method_name": "onPageSelected", "class_name": "ViewPager_OnPageChangeListenerImplementor", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void onPageSelected (int p0)\n\t{\n\t\tn_onPageSelected (p0);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/mono/android/support/v4/view/ViewPager_OnPageChangeListenerImplementor.java", "stars": "2", "class_props": {"extends": "java", "implements": ["mono", "android"], "modifiers": ["public"]}}, {"id": 61034, "method_name": "n_onPageSelected", "class_name": "ViewPager_OnPageChangeListenerImplementor", "params": ["int"], "throws": null, "modifiers": ["private", "native"], "return_type": "void", "snippet": "\tprivate native void n_onPageSelected (int p0);\n\n\tprivate java.util.ArrayList refList;\n\tpublic void monodroidAddReference (java.lang.Object obj)\n\t{\n\t\tif (refList == null)\n\t\t\trefList = new java.util.ArrayList ();\n\t\trefList.add (obj);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/mono/android/support/v4/view/ViewPager_OnPageChangeListenerImplementor.java", "stars": "2", "class_props": {"extends": "java", "implements": ["mono", "android"], "modifiers": ["public"]}}, {"id": 61035, "method_name": "monodroidAddReference", "class_name": "ViewPager_OnPageChangeListenerImplementor", "params": ["java"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void monodroidAddReference (java.lang.Object obj)\n\t{\n\t\tif (refList == null)\n\t\t\trefList = new java.util.ArrayList ();\n\t\trefList.add (obj);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/mono/android/support/v4/view/ViewPager_OnPageChangeListenerImplementor.java", "stars": "2", "class_props": {"extends": "java", "implements": ["mono", "android"], "modifiers": ["public"]}}, {"id": 61036, "method_name": "monodroidClearReferences", "class_name": "ViewPager_OnPageChangeListenerImplementor", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void monodroidClearReferences ()\n\t{\n\t\tif (refList != null)\n\t\t\trefList.clear ();\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/mono/android/support/v4/view/ViewPager_OnPageChangeListenerImplementor.java", "stars": "2", "class_props": {"extends": "java", "implements": ["mono", "android"], "modifiers": ["public"]}}, {"id": 61037, "method_name": "getShader", "class_name": "ContrastEffect", "params": ["GLSurfaceView"], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getShader(GLSurfaceView mGlSurfaceView) {\n\n        String shader = \"#extension GL_OES_EGL_image_external : require\\n\"\n                + \"precision mediump float;\\n\"\n                + \"uniform samplerExternalOES sTexture;\\n\"\n                + \" float contrast;\\n\" + \"varying vec2 vTextureCoord;\\n\"\n                + \"void main() {\\n\" + \"  contrast =\" + contrast + \";\\n\"\n                + \"  vec4 color = texture2D(sTexture, vTextureCoord);\\n\"\n                + \"  color -= 0.5;\\n\" + \"  color *= contrast;\\n\"\n                + \"  color += 0.5;\\n\" + \"  gl_FragColor = color;\\n\" + \"}\\n\";\n        return shader;\n\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/com/shuyu/gsyvideoplayer/render/effect/ContrastEffect.java", "stars": "2", "class_props": {"extends": null, "implements": ["ShaderInterface"], "modifiers": ["public"]}}, {"id": 61038, "method_name": "init", "class_name": "GSYSampleADVideoPlayer", "params": ["Context"], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void init(Context context) {\n        super.init(context);\n        mJumpAd = findViewById(R.id.jump_ad);\n        mADTime = (TextView) findViewById(R.id.ad_time);\n        mWidgetContainer = (ViewGroup) findViewById(R.id.widget_container);\n        if (mJumpAd != null) {\n            mJumpAd.setOnClickListener(new OnClickListener() {\n                @Override\n                public void onClick(View v) {\n                    playNext();\n                }\n            });\n        }\n\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/com/shuyu/gsyvideoplayer/video/GSYSampleADVideoPlayer.java", "stars": "2", "class_props": {"extends": "ListGSYVideoPlayer", "implements": null, "modifiers": ["public"]}}, {"id": 61039, "method_name": "getLayoutId", "class_name": "GSYSampleADVideoPlayer", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getLayoutId() {\n        return R.layout.video_layout_sample_ad;\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/com/shuyu/gsyvideoplayer/video/GSYSampleADVideoPlayer.java", "stars": "2", "class_props": {"extends": "ListGSYVideoPlayer", "implements": null, "modifiers": ["public"]}}, {"id": 61040, "method_name": "setUp", "class_name": "GSYSampleADVideoPlayer", "params": ["List<GSYVideoModel>", "boolean", "int"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean setUp(List<GSYVideoModel> url, boolean cacheWithPlay, int position) {\n        return setUp(url, cacheWithPlay, position, null);\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/com/shuyu/gsyvideoplayer/video/GSYSampleADVideoPlayer.java", "stars": "2", "class_props": {"extends": "ListGSYVideoPlayer", "implements": null, "modifiers": ["public"]}}, {"id": 61041, "method_name": "setUp", "class_name": "GSYSampleADVideoPlayer", "params": ["List<GSYVideoModel>", "boolean", "int", "File"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean setUp(List<GSYVideoModel> url, boolean cacheWithPlay, int position, File cachePath) {\n        return setUp(url, cacheWithPlay, position, cachePath, new HashMap<String, String>());\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/com/shuyu/gsyvideoplayer/video/GSYSampleADVideoPlayer.java", "stars": "2", "class_props": {"extends": "ListGSYVideoPlayer", "implements": null, "modifiers": ["public"]}}, {"id": 61042, "method_name": "setUp", "class_name": "GSYSampleADVideoPlayer", "params": ["List<GSYVideoModel>", "boolean", "int", "File", "Map<String,String>"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean setUp(List<GSYVideoModel> url, boolean cacheWithPlay, int position, File cachePath, Map<String, String> mapHeadData) {\n        return setUp(url, cacheWithPlay, position, cachePath, mapHeadData, true);\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/com/shuyu/gsyvideoplayer/video/GSYSampleADVideoPlayer.java", "stars": "2", "class_props": {"extends": "ListGSYVideoPlayer", "implements": null, "modifiers": ["public"]}}, {"id": 61043, "method_name": "setUp", "class_name": "GSYSampleADVideoPlayer", "params": ["List<GSYVideoModel>", "boolean", "int", "File", "Map<String,String>", "boolean"], "throws": null, "modifiers": ["protected"], "return_type": "boolean", "snippet": "    protected boolean setUp(List<GSYVideoModel> url, boolean cacheWithPlay, int position, File cachePath, Map<String, String> mapHeadData, boolean changeState) {\n        GSYVideoModel gsyVideoModel = url.get(position);\n        if (gsyVideoModel instanceof GSYADVideoModel) {\n            GSYADVideoModel gsyadVideoModel = (GSYADVideoModel) gsyVideoModel;\n            if (gsyadVideoModel.isSkip() && position < (url.size() - 1)) {\n                return setUp(url, cacheWithPlay, position + 1, cachePath, mapHeadData, changeState);\n            }\n            isAdModel = (gsyadVideoModel.getType() == GSYADVideoModel.TYPE_AD);\n        }\n        changeAdUIState();\n        return super.setUp(url, cacheWithPlay, position, cachePath, mapHeadData, changeState);\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/com/shuyu/gsyvideoplayer/video/GSYSampleADVideoPlayer.java", "stars": "2", "class_props": {"extends": "ListGSYVideoPlayer", "implements": null, "modifiers": ["public"]}}, {"id": 61044, "method_name": "onPrepared", "class_name": "GSYSampleADVideoPlayer", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onPrepared() {\n        super.onPrepared();\n        isFirstPrepared = true;\n        changeAdUIState();\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/com/shuyu/gsyvideoplayer/video/GSYSampleADVideoPlayer.java", "stars": "2", "class_props": {"extends": "ListGSYVideoPlayer", "implements": null, "modifiers": ["public"]}}, {"id": 61045, "method_name": "updateStartImage", "class_name": "GSYSampleADVideoPlayer", "params": [], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void updateStartImage() {\n        if (mStartButton != null) {\n            if (mStartButton instanceof ImageView) {\n                ImageView imageView = (ImageView) mStartButton;\n                if (mCurrentState == CURRENT_STATE_PLAYING) {\n                    imageView.setImageResource(R.drawable.video_click_pause_selector);\n                } else if (mCurrentState == CURRENT_STATE_ERROR) {\n                    imageView.setImageResource(R.drawable.video_click_play_selector);\n                } else {\n                    imageView.setImageResource(R.drawable.video_click_play_selector);\n                }\n            }\n        }\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/com/shuyu/gsyvideoplayer/video/GSYSampleADVideoPlayer.java", "stars": "2", "class_props": {"extends": "ListGSYVideoPlayer", "implements": null, "modifiers": ["public"]}}, {"id": 61046, "method_name": "touchDoubleUp", "class_name": "GSYSampleADVideoPlayer", "params": [], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void touchDoubleUp() {\n        if (isAdModel) {\n            return;\n        }\n        super.touchDoubleUp();\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/com/shuyu/gsyvideoplayer/video/GSYSampleADVideoPlayer.java", "stars": "2", "class_props": {"extends": "ListGSYVideoPlayer", "implements": null, "modifiers": ["public"]}}, {"id": 61047, "method_name": "touchSurfaceMove", "class_name": "GSYSampleADVideoPlayer", "params": ["float", "float", "float"], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void touchSurfaceMove(float deltaX, float deltaY, float y) {\n        if (mChangePosition && isAdModel) {\n            return;\n        } else {\n            super.touchSurfaceMove(deltaX, deltaY, y);\n        }\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/com/shuyu/gsyvideoplayer/video/GSYSampleADVideoPlayer.java", "stars": "2", "class_props": {"extends": "ListGSYVideoPlayer", "implements": null, "modifiers": ["public"]}}, {"id": 61048, "method_name": "touchSurfaceMoveFullLogic", "class_name": "GSYSampleADVideoPlayer", "params": ["float", "float"], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void touchSurfaceMoveFullLogic(float absDeltaX, float absDeltaY) {\n        if ((absDeltaX > mThreshold || absDeltaY > mThreshold)) {\n            int screenWidth = CommonUtil.getScreenWidth(getContext());\n            if (isAdModel && absDeltaX >= mThreshold && Math.abs(screenWidth - mDownX) > mSeekEndOffset) {\n                //\u9632\u6b62\u5168\u5c4f\u865a\u62df\u6309\u952e\n                mChangePosition = true;\n                mDownPosition = getCurrentPositionWhenPlaying();\n            } else {\n                super.touchSurfaceMoveFullLogic(absDeltaX, absDeltaY);\n            }\n        }\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/com/shuyu/gsyvideoplayer/video/GSYSampleADVideoPlayer.java", "stars": "2", "class_props": {"extends": "ListGSYVideoPlayer", "implements": null, "modifiers": ["public"]}}, {"id": 61049, "method_name": "touchSurfaceUp", "class_name": "GSYSampleADVideoPlayer", "params": [], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void touchSurfaceUp() {\n        if (mChangePosition && isAdModel) {\n            return;\n        }\n        super.touchSurfaceUp();\n\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/com/shuyu/gsyvideoplayer/video/GSYSampleADVideoPlayer.java", "stars": "2", "class_props": {"extends": "ListGSYVideoPlayer", "implements": null, "modifiers": ["public"]}}, {"id": 61050, "method_name": "hideAllWidget", "class_name": "GSYSampleADVideoPlayer", "params": [], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void hideAllWidget() {\n        if (isFirstPrepared && isAdModel) {\n            return;\n        }\n        super.hideAllWidget();\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/com/shuyu/gsyvideoplayer/video/GSYSampleADVideoPlayer.java", "stars": "2", "class_props": {"extends": "ListGSYVideoPlayer", "implements": null, "modifiers": ["public"]}}, {"id": 61051, "method_name": "setProgressAndTime", "class_name": "GSYSampleADVideoPlayer", "params": ["int", "int", "int", "int", "boolean"], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void setProgressAndTime(int progress, int secProgress, int currentTime, int totalTime, boolean forceChange) {\n        super.setProgressAndTime(progress, secProgress, currentTime, totalTime, forceChange);\n        if (mADTime != null && currentTime > 0) {\n            int totalSeconds = totalTime / 1000;\n            int currentSeconds = currentTime / 1000;\n            mADTime.setText(\"\" + (totalSeconds - currentSeconds));\n        }\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/com/shuyu/gsyvideoplayer/video/GSYSampleADVideoPlayer.java", "stars": "2", "class_props": {"extends": "ListGSYVideoPlayer", "implements": null, "modifiers": ["public"]}}, {"id": 61052, "method_name": "cloneParams", "class_name": "GSYSampleADVideoPlayer", "params": ["GSYBaseVideoPlayer", "GSYBaseVideoPlayer"], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void cloneParams(GSYBaseVideoPlayer from, GSYBaseVideoPlayer to) {\n        super.cloneParams(from, to);\n        GSYSampleADVideoPlayer sf = (GSYSampleADVideoPlayer) from;\n        GSYSampleADVideoPlayer st = (GSYSampleADVideoPlayer) to;\n        st.isAdModel = sf.isAdModel;\n        st.isFirstPrepared = sf.isFirstPrepared;\n        st.changeAdUIState();\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/com/shuyu/gsyvideoplayer/video/GSYSampleADVideoPlayer.java", "stars": "2", "class_props": {"extends": "ListGSYVideoPlayer", "implements": null, "modifiers": ["public"]}}, {"id": 61053, "method_name": "changeAdUIState", "class_name": "GSYSampleADVideoPlayer", "params": [], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void changeAdUIState() {\n        if (mJumpAd != null) {\n            mJumpAd.setVisibility((isFirstPrepared && isAdModel) ? VISIBLE : GONE);\n        }\n        if (mADTime != null) {\n            mADTime.setVisibility((isFirstPrepared && isAdModel) ? VISIBLE : GONE);\n        }\n        if (mWidgetContainer != null) {\n            mWidgetContainer.setVisibility((isFirstPrepared && isAdModel) ? GONE : VISIBLE);\n        }\n        if (mBottomContainer != null) {\n            int color = (isFirstPrepared && isAdModel) ? Color.TRANSPARENT : getContext().getResources().getColor(R.color.bottom_container_bg);\n            mBottomContainer.setBackgroundColor(color);\n        }\n        if (mCurrentTimeTextView != null) {\n            mCurrentTimeTextView.setVisibility((isFirstPrepared && isAdModel) ? INVISIBLE : VISIBLE);\n        }\n        if (mTotalTimeTextView != null) {\n            mTotalTimeTextView.setVisibility((isFirstPrepared && isAdModel) ? INVISIBLE : VISIBLE);\n        }\n        if (mProgressBar != null) {\n            mProgressBar.setVisibility((isFirstPrepared && isAdModel) ? INVISIBLE : VISIBLE);\n            mProgressBar.setEnabled(!(isFirstPrepared && isAdModel));\n        }\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/com/shuyu/gsyvideoplayer/video/GSYSampleADVideoPlayer.java", "stars": "2", "class_props": {"extends": "ListGSYVideoPlayer", "implements": null, "modifiers": ["public"]}}, {"id": 61054, "method_name": "setAdUp", "class_name": "GSYSampleADVideoPlayer", "params": ["ArrayList<GSYADVideoModel>", "boolean", "int"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean setAdUp(ArrayList<GSYADVideoModel> url, boolean cacheWithPlay, int position) {\n        return setUp((ArrayList<GSYVideoModel>) url.clone(), cacheWithPlay, position);\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/com/shuyu/gsyvideoplayer/video/GSYSampleADVideoPlayer.java", "stars": "2", "class_props": {"extends": "ListGSYVideoPlayer", "implements": null, "modifiers": ["public"]}}, {"id": 61055, "method_name": "setAdUp", "class_name": "GSYSampleADVideoPlayer", "params": ["ArrayList<GSYADVideoModel>", "boolean", "int", "File"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean setAdUp(ArrayList<GSYADVideoModel> url, boolean cacheWithPlay, int position, File cachePath) {\n        return setUp((ArrayList<GSYVideoModel>) url.clone(), cacheWithPlay, position, cachePath);\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/com/shuyu/gsyvideoplayer/video/GSYSampleADVideoPlayer.java", "stars": "2", "class_props": {"extends": "ListGSYVideoPlayer", "implements": null, "modifiers": ["public"]}}, {"id": 61056, "method_name": "setAdUp", "class_name": "GSYSampleADVideoPlayer", "params": ["ArrayList<GSYADVideoModel>", "boolean", "int", "File", "Map<String,String>"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean setAdUp(ArrayList<GSYADVideoModel> url, boolean cacheWithPlay, int position, File cachePath, Map<String, String> mapHeadData) {\n        return setUp((ArrayList<GSYVideoModel>) url.clone(), cacheWithPlay, position, cachePath, mapHeadData);\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/com/shuyu/gsyvideoplayer/video/GSYSampleADVideoPlayer.java", "stars": "2", "class_props": {"extends": "ListGSYVideoPlayer", "implements": null, "modifiers": ["public"]}}, {"id": 61057, "method_name": "getType", "class_name": "GSYADVideoModel", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "        public int getType() {\n            return mType;\n        }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/com/shuyu/gsyvideoplayer/video/GSYSampleADVideoPlayer.java", "stars": "2", "class_props": {"extends": "GSYVideoModel", "implements": null, "modifiers": ["public", "static"]}}, {"id": 61058, "method_name": "setType", "class_name": "GSYADVideoModel", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "        public void setType(int type) {\n            this.mType = type;\n        }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/com/shuyu/gsyvideoplayer/video/GSYSampleADVideoPlayer.java", "stars": "2", "class_props": {"extends": "GSYVideoModel", "implements": null, "modifiers": ["public", "static"]}}, {"id": 61059, "method_name": "isSkip", "class_name": "GSYADVideoModel", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "        public boolean isSkip() {\n            return isSkip;\n        }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/com/shuyu/gsyvideoplayer/video/GSYSampleADVideoPlayer.java", "stars": "2", "class_props": {"extends": "GSYVideoModel", "implements": null, "modifiers": ["public", "static"]}}, {"id": 61060, "method_name": "setSkip", "class_name": "GSYADVideoModel", "params": ["boolean"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "        public void setSkip(boolean skip) {\n            isSkip = skip;\n        }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/com/shuyu/gsyvideoplayer/video/GSYSampleADVideoPlayer.java", "stars": "2", "class_props": {"extends": "GSYVideoModel", "implements": null, "modifiers": ["public", "static"]}}, {"id": 61061, "method_name": "onAttachedToWindow", "class_name": "NavigationPageRenderer", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void onAttachedToWindow ()\n\t{\n\t\tn_onAttachedToWindow ();\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc64720bb2db43a66fe9/NavigationPageRenderer.java", "stars": "2", "class_props": {"extends": "crc643f46942d9dd1fff9", "implements": ["mono", "android"], "modifiers": ["public"]}}, {"id": 61062, "method_name": "n_onAttachedToWindow", "class_name": "NavigationPageRenderer", "params": [], "throws": null, "modifiers": ["private", "native"], "return_type": "void", "snippet": "\tprivate native void n_onAttachedToWindow ();\n\n\n\tpublic void onDetachedFromWindow ()\n\t{\n\t\tn_onDetachedFromWindow ();\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc64720bb2db43a66fe9/NavigationPageRenderer.java", "stars": "2", "class_props": {"extends": "crc643f46942d9dd1fff9", "implements": ["mono", "android"], "modifiers": ["public"]}}, {"id": 61063, "method_name": "onDetachedFromWindow", "class_name": "NavigationPageRenderer", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void onDetachedFromWindow ()\n\t{\n\t\tn_onDetachedFromWindow ();\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc64720bb2db43a66fe9/NavigationPageRenderer.java", "stars": "2", "class_props": {"extends": "crc643f46942d9dd1fff9", "implements": ["mono", "android"], "modifiers": ["public"]}}, {"id": 61064, "method_name": "n_onDetachedFromWindow", "class_name": "NavigationPageRenderer", "params": [], "throws": null, "modifiers": ["private", "native"], "return_type": "void", "snippet": "\tprivate native void n_onDetachedFromWindow ();\n\n\n\tpublic void onLayout (boolean p0, int p1, int p2, int p3, int p4)\n\t{\n\t\tn_onLayout (p0, p1, p2, p3, p4);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc64720bb2db43a66fe9/NavigationPageRenderer.java", "stars": "2", "class_props": {"extends": "crc643f46942d9dd1fff9", "implements": ["mono", "android"], "modifiers": ["public"]}}, {"id": 61065, "method_name": "onLayout", "class_name": "NavigationPageRenderer", "params": ["boolean", "int", "int", "int", "int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void onLayout (boolean p0, int p1, int p2, int p3, int p4)\n\t{\n\t\tn_onLayout (p0, p1, p2, p3, p4);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc64720bb2db43a66fe9/NavigationPageRenderer.java", "stars": "2", "class_props": {"extends": "crc643f46942d9dd1fff9", "implements": ["mono", "android"], "modifiers": ["public"]}}, {"id": 61066, "method_name": "n_onLayout", "class_name": "NavigationPageRenderer", "params": ["boolean", "int", "int", "int", "int"], "throws": null, "modifiers": ["private", "native"], "return_type": "void", "snippet": "\tprivate native void n_onLayout (boolean p0, int p1, int p2, int p3, int p4);\n\n\n\tpublic void onClick (android.view.View p0)\n\t{\n\t\tn_onClick (p0);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc64720bb2db43a66fe9/NavigationPageRenderer.java", "stars": "2", "class_props": {"extends": "crc643f46942d9dd1fff9", "implements": ["mono", "android"], "modifiers": ["public"]}}, {"id": 61067, "method_name": "onClick", "class_name": "NavigationPageRenderer", "params": ["android"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void onClick (android.view.View p0)\n\t{\n\t\tn_onClick (p0);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc64720bb2db43a66fe9/NavigationPageRenderer.java", "stars": "2", "class_props": {"extends": "crc643f46942d9dd1fff9", "implements": ["mono", "android"], "modifiers": ["public"]}}, {"id": 61068, "method_name": "n_onClick", "class_name": "NavigationPageRenderer", "params": ["android"], "throws": null, "modifiers": ["private", "native"], "return_type": "void", "snippet": "\tprivate native void n_onClick (android.view.View p0);\n\n\tprivate java.util.ArrayList refList;\n\tpublic void monodroidAddReference (java.lang.Object obj)\n\t{\n\t\tif (refList == null)\n\t\t\trefList = new java.util.ArrayList ();\n\t\trefList.add (obj);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc64720bb2db43a66fe9/NavigationPageRenderer.java", "stars": "2", "class_props": {"extends": "crc643f46942d9dd1fff9", "implements": ["mono", "android"], "modifiers": ["public"]}}, {"id": 61069, "method_name": "monodroidAddReference", "class_name": "NavigationPageRenderer", "params": ["java"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void monodroidAddReference (java.lang.Object obj)\n\t{\n\t\tif (refList == null)\n\t\t\trefList = new java.util.ArrayList ();\n\t\trefList.add (obj);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc64720bb2db43a66fe9/NavigationPageRenderer.java", "stars": "2", "class_props": {"extends": "crc643f46942d9dd1fff9", "implements": ["mono", "android"], "modifiers": ["public"]}}, {"id": 61070, "method_name": "monodroidClearReferences", "class_name": "NavigationPageRenderer", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void monodroidClearReferences ()\n\t{\n\t\tif (refList != null)\n\t\t\trefList.clear ();\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc64720bb2db43a66fe9/NavigationPageRenderer.java", "stars": "2", "class_props": {"extends": "crc643f46942d9dd1fff9", "implements": ["mono", "android"], "modifiers": ["public"]}}, {"id": 61071, "method_name": "isUnknown", "class_name": "Attribute", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "  public boolean isUnknown() {\n    return true;\n  }", "url": "https://raw.githubusercontent.com/Sipkab/jvm-tail-recursion/master/src/sipka/jvm/tailrec/thirdparty/org/objectweb/asm/Attribute.java", "stars": "97", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 61072, "method_name": "isCodeAttribute", "class_name": "Attribute", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "  public boolean isCodeAttribute() {\n    return false;\n  }", "url": "https://raw.githubusercontent.com/Sipkab/jvm-tail-recursion/master/src/sipka/jvm/tailrec/thirdparty/org/objectweb/asm/Attribute.java", "stars": "97", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 61073, "method_name": "getLabels", "class_name": "Attribute", "params": [], "throws": null, "modifiers": ["protected"], "return_type": "Label", "snippet": "  protected Label[] getLabels() {\n    return new Label[0];\n  }", "url": "https://raw.githubusercontent.com/Sipkab/jvm-tail-recursion/master/src/sipka/jvm/tailrec/thirdparty/org/objectweb/asm/Attribute.java", "stars": "97", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 61074, "method_name": "read", "class_name": "Attribute", "params": ["ClassReader", "int", "int", "char", "int", "Label"], "throws": null, "modifiers": ["protected"], "return_type": "Attribute", "snippet": "  protected Attribute read(\n      final ClassReader classReader,\n      final int offset,\n      final int length,\n      final char[] charBuffer,\n      final int codeAttributeOffset,\n      final Label[] labels) {\n    Attribute attribute = new Attribute(type);\n    attribute.content = new byte[length];\n    System.arraycopy(classReader.classFileBuffer, offset, attribute.content, 0, length);\n    return attribute;\n  }", "url": "https://raw.githubusercontent.com/Sipkab/jvm-tail-recursion/master/src/sipka/jvm/tailrec/thirdparty/org/objectweb/asm/Attribute.java", "stars": "97", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 61075, "method_name": "write", "class_name": "Attribute", "params": ["ClassWriter", "byte", "int", "int", "int"], "throws": null, "modifiers": ["protected"], "return_type": "ByteVector", "snippet": "  protected ByteVector write(\n      final ClassWriter classWriter,\n      final byte[] code,\n      final int codeLength,\n      final int maxStack,\n      final int maxLocals) {\n    return new ByteVector(content);\n  }", "url": "https://raw.githubusercontent.com/Sipkab/jvm-tail-recursion/master/src/sipka/jvm/tailrec/thirdparty/org/objectweb/asm/Attribute.java", "stars": "97", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 61076, "method_name": "getAttributeCount", "class_name": "Attribute", "params": [], "throws": null, "modifiers": ["final"], "return_type": "int", "snippet": "  final int getAttributeCount() {\n    int count = 0;\n    Attribute attribute = this;\n    while (attribute != null) {\n      count += 1;\n      attribute = attribute.nextAttribute;\n    }\n    return count;\n  }", "url": "https://raw.githubusercontent.com/Sipkab/jvm-tail-recursion/master/src/sipka/jvm/tailrec/thirdparty/org/objectweb/asm/Attribute.java", "stars": "97", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 61077, "method_name": "computeAttributesSize", "class_name": "Attribute", "params": ["SymbolTable"], "throws": null, "modifiers": ["final"], "return_type": "int", "snippet": "  final int computeAttributesSize(final SymbolTable symbolTable) {\n    final byte[] code = null;\n    final int codeLength = 0;\n    final int maxStack = -1;\n    final int maxLocals = -1;\n    return computeAttributesSize(symbolTable, code, codeLength, maxStack, maxLocals);\n  }", "url": "https://raw.githubusercontent.com/Sipkab/jvm-tail-recursion/master/src/sipka/jvm/tailrec/thirdparty/org/objectweb/asm/Attribute.java", "stars": "97", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 61078, "method_name": "computeAttributesSize", "class_name": "Attribute", "params": ["SymbolTable", "byte", "int", "int", "int"], "throws": null, "modifiers": ["final"], "return_type": "int", "snippet": "  final int computeAttributesSize(\n      final SymbolTable symbolTable,\n      final byte[] code,\n      final int codeLength,\n      final int maxStack,\n      final int maxLocals) {\n    final ClassWriter classWriter = symbolTable.classWriter;\n    int size = 0;\n    Attribute attribute = this;\n    while (attribute != null) {\n      symbolTable.addConstantUtf8(attribute.type);\n      size += 6 + attribute.write(classWriter, code, codeLength, maxStack, maxLocals).length;\n      attribute = attribute.nextAttribute;\n    }\n    return size;\n  }", "url": "https://raw.githubusercontent.com/Sipkab/jvm-tail-recursion/master/src/sipka/jvm/tailrec/thirdparty/org/objectweb/asm/Attribute.java", "stars": "97", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 61079, "method_name": "computeAttributesSize", "class_name": "Attribute", "params": ["SymbolTable", "int", "int"], "throws": null, "modifiers": ["static"], "return_type": "int", "snippet": "  static int computeAttributesSize(\n      final SymbolTable symbolTable, final int accessFlags, final int signatureIndex) {\n    int size = 0;\n    // Before Java 1.5, synthetic fields are represented with a Synthetic attribute.\n    if ((accessFlags & Opcodes.ACC_SYNTHETIC) != 0\n        && symbolTable.getMajorVersion() < Opcodes.V1_5) {\n      // Synthetic attributes always use 6 bytes.\n      symbolTable.addConstantUtf8(Constants.SYNTHETIC);\n      size += 6;\n    }\n    if (signatureIndex != 0) {\n      // Signature attributes always use 8 bytes.\n      symbolTable.addConstantUtf8(Constants.SIGNATURE);\n      size += 8;\n    }\n    // ACC_DEPRECATED is ASM specific, the ClassFile format uses a Deprecated attribute instead.\n    if ((accessFlags & Opcodes.ACC_DEPRECATED) != 0) {\n      // Deprecated attributes always use 6 bytes.\n      symbolTable.addConstantUtf8(Constants.DEPRECATED);\n      size += 6;\n    }\n    return size;\n  }", "url": "https://raw.githubusercontent.com/Sipkab/jvm-tail-recursion/master/src/sipka/jvm/tailrec/thirdparty/org/objectweb/asm/Attribute.java", "stars": "97", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 61080, "method_name": "putAttributes", "class_name": "Attribute", "params": ["SymbolTable", "ByteVector"], "throws": null, "modifiers": ["final"], "return_type": "void", "snippet": "  final void putAttributes(final SymbolTable symbolTable, final ByteVector output) {\n    final byte[] code = null;\n    final int codeLength = 0;\n    final int maxStack = -1;\n    final int maxLocals = -1;\n    putAttributes(symbolTable, code, codeLength, maxStack, maxLocals, output);\n  }", "url": "https://raw.githubusercontent.com/Sipkab/jvm-tail-recursion/master/src/sipka/jvm/tailrec/thirdparty/org/objectweb/asm/Attribute.java", "stars": "97", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 61081, "method_name": "putAttributes", "class_name": "Attribute", "params": ["SymbolTable", "byte", "int", "int", "int", "ByteVector"], "throws": null, "modifiers": ["final"], "return_type": "void", "snippet": "  final void putAttributes(\n      final SymbolTable symbolTable,\n      final byte[] code,\n      final int codeLength,\n      final int maxStack,\n      final int maxLocals,\n      final ByteVector output) {\n    final ClassWriter classWriter = symbolTable.classWriter;\n    Attribute attribute = this;\n    while (attribute != null) {\n      ByteVector attributeContent =\n          attribute.write(classWriter, code, codeLength, maxStack, maxLocals);\n      // Put attribute_name_index and attribute_length.\n      output.putShort(symbolTable.addConstantUtf8(attribute.type)).putInt(attributeContent.length);\n      output.putByteArray(attributeContent.data, 0, attributeContent.length);\n      attribute = attribute.nextAttribute;\n    }\n  }", "url": "https://raw.githubusercontent.com/Sipkab/jvm-tail-recursion/master/src/sipka/jvm/tailrec/thirdparty/org/objectweb/asm/Attribute.java", "stars": "97", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 61082, "method_name": "putAttributes", "class_name": "Attribute", "params": ["SymbolTable", "int", "int", "ByteVector"], "throws": null, "modifiers": ["static"], "return_type": "void", "snippet": "  static void putAttributes(\n      final SymbolTable symbolTable,\n      final int accessFlags,\n      final int signatureIndex,\n      final ByteVector output) {\n    // Before Java 1.5, synthetic fields are represented with a Synthetic attribute.\n    if ((accessFlags & Opcodes.ACC_SYNTHETIC) != 0\n        && symbolTable.getMajorVersion() < Opcodes.V1_5) {\n      output.putShort(symbolTable.addConstantUtf8(Constants.SYNTHETIC)).putInt(0);\n    }\n    if (signatureIndex != 0) {\n      output\n          .putShort(symbolTable.addConstantUtf8(Constants.SIGNATURE))\n          .putInt(2)\n          .putShort(signatureIndex);\n    }\n    if ((accessFlags & Opcodes.ACC_DEPRECATED) != 0) {\n      output.putShort(symbolTable.addConstantUtf8(Constants.DEPRECATED)).putInt(0);\n    }\n  }", "url": "https://raw.githubusercontent.com/Sipkab/jvm-tail-recursion/master/src/sipka/jvm/tailrec/thirdparty/org/objectweb/asm/Attribute.java", "stars": "97", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 61083, "method_name": "addAttributes", "class_name": "Set", "params": ["Attribute"], "throws": null, "modifiers": [], "return_type": "void", "snippet": "    void addAttributes(final Attribute attributeList) {\n      Attribute attribute = attributeList;\n      while (attribute != null) {\n        if (!contains(attribute)) {\n          add(attribute);\n        }\n        attribute = attribute.nextAttribute;\n      }\n    }", "url": "https://raw.githubusercontent.com/Sipkab/jvm-tail-recursion/master/src/sipka/jvm/tailrec/thirdparty/org/objectweb/asm/Attribute.java", "stars": "97", "class_props": {"extends": null, "implements": null, "modifiers": ["final", "static"]}}, {"id": 61084, "method_name": "toArray", "class_name": "Set", "params": [], "throws": null, "modifiers": [], "return_type": "Attribute", "snippet": "    Attribute[] toArray() {\n      Attribute[] result = new Attribute[size];\n      System.arraycopy(data, 0, result, 0, size);\n      return result;\n    }", "url": "https://raw.githubusercontent.com/Sipkab/jvm-tail-recursion/master/src/sipka/jvm/tailrec/thirdparty/org/objectweb/asm/Attribute.java", "stars": "97", "class_props": {"extends": null, "implements": null, "modifiers": ["final", "static"]}}, {"id": 61085, "method_name": "contains", "class_name": "Set", "params": ["Attribute"], "throws": null, "modifiers": ["private"], "return_type": "boolean", "snippet": "    private boolean contains(final Attribute attribute) {\n      for (int i = 0; i < size; ++i) {\n        if (data[i].type.equals(attribute.type)) {\n          return true;\n        }\n      }\n      return false;\n    }", "url": "https://raw.githubusercontent.com/Sipkab/jvm-tail-recursion/master/src/sipka/jvm/tailrec/thirdparty/org/objectweb/asm/Attribute.java", "stars": "97", "class_props": {"extends": null, "implements": null, "modifiers": ["final", "static"]}}, {"id": 61086, "method_name": "add", "class_name": "Set", "params": ["Attribute"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void add(final Attribute attribute) {\n      if (size >= data.length) {\n        Attribute[] newData = new Attribute[data.length + SIZE_INCREMENT];\n        System.arraycopy(data, 0, newData, 0, size);\n        data = newData;\n      }\n      data[size++] = attribute;\n    }", "url": "https://raw.githubusercontent.com/Sipkab/jvm-tail-recursion/master/src/sipka/jvm/tailrec/thirdparty/org/objectweb/asm/Attribute.java", "stars": "97", "class_props": {"extends": null, "implements": null, "modifiers": ["final", "static"]}}, {"id": 61087, "method_name": "onCreateView", "class_name": "ServerInfoFragment", "params": ["LayoutInflater", "ViewGroup", "Bundle"], "throws": null, "modifiers": ["public"], "return_type": "View", "snippet": "    public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) {\n        View view = inflater.inflate(R.layout.fragment_server_info, container, false);\n        mProtocolView = (TextView) view.findViewById(R.id.server_info_protocol);\n        mOSVersionView = (TextView) view.findViewById(R.id.server_info_os_version);\n        mTCPLatencyView = (TextView) view.findViewById(R.id.server_info_tcp_latency);\n        mUDPLatencyView = (TextView) view.findViewById(R.id.server_info_udp_latency);\n        mHostView = (TextView) view.findViewById(R.id.server_info_host);\n        mMaxBandwidthView = (TextView) view.findViewById(R.id.server_info_max_bandwidth);\n        mCurrentBandwidthView = (TextView) view.findViewById(R.id.server_info_current_bandwidth);\n        mCodecView = (TextView) view.findViewById(R.id.server_info_codec);\n        return view;\n    }", "url": "https://raw.githubusercontent.com/quite/mumla/master/app/src/main/java/se/lublin/mumla/channel/ServerInfoFragment.java", "stars": "9", "class_props": {"extends": "HumlaServiceFragment", "implements": null, "modifiers": ["public"]}}, {"id": 61088, "method_name": "updateData", "class_name": "ServerInfoFragment", "params": [], "throws": ["RemoteException"], "modifiers": ["public"], "return_type": "void", "snippet": "    public void updateData() throws RemoteException {\n        if(getService() == null || !getService().isConnected())\n            return;\n\n        IHumlaSession session = getService().getSession();\n\n        mProtocolView.setText(getString(R.string.server_info_protocol, session.getServerRelease()));\n        mOSVersionView.setText(getString(R.string.server_info_version, session.getServerOSName(), session.getServerOSVersion()));\n        mTCPLatencyView.setText(getString(R.string.server_info_latency, (float)session.getTCPLatency()*Math.pow(10, -3)));\n        mUDPLatencyView.setText(getString(R.string.server_info_latency, (float)session.getUDPLatency()*Math.pow(10, -3)));\n        // TODO SRV note also getHost,Port?\n        mHostView.setText(getString(R.string.server_info_host,\n                getService().getTargetServer().getSrvHost(),\n                getService().getTargetServer().getSrvPort()));\n\n        String codecName;\n        HumlaUDPMessageType codecType = session.getCodec();\n        switch (codecType) {\n            case UDPVoiceOpus:\n                codecName = \"Opus\";\n                break;\n            case UDPVoiceCELTBeta:\n                codecName = \"CELT 0.11.0\";\n                break;\n            case UDPVoiceCELTAlpha:\n                codecName = \"CELT 0.7.0\";\n                break;\n            case UDPVoiceSpeex:\n                codecName = \"Speex\";\n                break;\n            default:\n                codecName = \"???\";\n        }\n\n        mMaxBandwidthView.setText(getString(R.string.server_info_max_bandwidth, (float)session.getMaxBandwidth()/1000f));\n        mCurrentBandwidthView.setText(getString(R.string.server_info_current_bandwidth, (float)session.getCurrentBandwidth()/1000f));\n        mCodecView.setText(getString(R.string.server_info_codec, codecName));\n    }", "url": "https://raw.githubusercontent.com/quite/mumla/master/app/src/main/java/se/lublin/mumla/channel/ServerInfoFragment.java", "stars": "9", "class_props": {"extends": "HumlaServiceFragment", "implements": null, "modifiers": ["public"]}}, {"id": 61089, "method_name": "onServiceBound", "class_name": "ServerInfoFragment", "params": ["IHumlaService"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onServiceBound(IHumlaService service) {\n        // wow this is ugly\n        mPollFuture = mExecutorService.scheduleAtFixedRate(new Runnable() {\n            @Override\n            public void run() {\n                mHandler.post(new Runnable() {\n                    @Override\n                    public void run() {\n                        try {\n                            if(isVisible()) updateData();\n                        } catch (RemoteException e) {\n                            e.printStackTrace();\n                        }\n                    }\n                });\n            }\n        }, 0, POLL_RATE, TimeUnit.MILLISECONDS);\n    }", "url": "https://raw.githubusercontent.com/quite/mumla/master/app/src/main/java/se/lublin/mumla/channel/ServerInfoFragment.java", "stars": "9", "class_props": {"extends": "HumlaServiceFragment", "implements": null, "modifiers": ["public"]}}, {"id": 61090, "method_name": "onServiceUnbound", "class_name": "ServerInfoFragment", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onServiceUnbound() {\n        if (mPollFuture != null) {\n            mPollFuture.cancel(true);\n            mPollFuture = null;\n        }\n    }", "url": "https://raw.githubusercontent.com/quite/mumla/master/app/src/main/java/se/lublin/mumla/channel/ServerInfoFragment.java", "stars": "9", "class_props": {"extends": "HumlaServiceFragment", "implements": null, "modifiers": ["public"]}}, {"id": 61091, "method_name": "onDestroy", "class_name": "ServerInfoFragment", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onDestroy() {\n        super.onDestroy();\n        mExecutorService.shutdownNow();\n    }", "url": "https://raw.githubusercontent.com/quite/mumla/master/app/src/main/java/se/lublin/mumla/channel/ServerInfoFragment.java", "stars": "9", "class_props": {"extends": "HumlaServiceFragment", "implements": null, "modifiers": ["public"]}}, {"id": 61092, "method_name": "monodroidAddReference", "class_name": "EntryRenderer", "params": ["java"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void monodroidAddReference (java.lang.Object obj)\n\t{\n\t\tif (refList == null)\n\t\t\trefList = new java.util.ArrayList ();\n\t\trefList.add (obj);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc643f46942d9dd1fff9/EntryRenderer.java", "stars": "2", "class_props": {"extends": "crc643f46942d9dd1fff9", "implements": ["mono"], "modifiers": ["public"]}}, {"id": 61093, "method_name": "monodroidClearReferences", "class_name": "EntryRenderer", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void monodroidClearReferences ()\n\t{\n\t\tif (refList != null)\n\t\t\trefList.clear ();\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc643f46942d9dd1fff9/EntryRenderer.java", "stars": "2", "class_props": {"extends": "crc643f46942d9dd1fff9", "implements": ["mono"], "modifiers": ["public"]}}, {"id": 61094, "method_name": "getId", "class_name": "\uacb0\uc81c\uc2b9\uc778\ub428", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Long", "snippet": "    public Long getId() {\n        return id;\n    }", "url": "https://raw.githubusercontent.com/msa-ez/example-food-delivery/master/store/src/main/java/fooddelivery/%EA%B2%B0%EC%A0%9C%EC%8A%B9%EC%9D%B8%EB%90%A8.java", "stars": "13", "class_props": {"extends": "AbstractEvent", "implements": null, "modifiers": ["public"]}}, {"id": 61095, "method_name": "setId", "class_name": "\uacb0\uc81c\uc2b9\uc778\ub428", "params": ["Long"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setId(Long id) {\n        this.id = id;\n    }", "url": "https://raw.githubusercontent.com/msa-ez/example-food-delivery/master/store/src/main/java/fooddelivery/%EA%B2%B0%EC%A0%9C%EC%8A%B9%EC%9D%B8%EB%90%A8.java", "stars": "13", "class_props": {"extends": "AbstractEvent", "implements": null, "modifiers": ["public"]}}, {"id": 61096, "method_name": "getOrderId", "class_name": "\uacb0\uc81c\uc2b9\uc778\ub428", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getOrderId() {\n        return orderId;\n    }", "url": "https://raw.githubusercontent.com/msa-ez/example-food-delivery/master/store/src/main/java/fooddelivery/%EA%B2%B0%EC%A0%9C%EC%8A%B9%EC%9D%B8%EB%90%A8.java", "stars": "13", "class_props": {"extends": "AbstractEvent", "implements": null, "modifiers": ["public"]}}, {"id": 61097, "method_name": "setOrderId", "class_name": "\uacb0\uc81c\uc2b9\uc778\ub428", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setOrderId(String orderId) {\n        this.orderId = orderId;\n    }", "url": "https://raw.githubusercontent.com/msa-ez/example-food-delivery/master/store/src/main/java/fooddelivery/%EA%B2%B0%EC%A0%9C%EC%8A%B9%EC%9D%B8%EB%90%A8.java", "stars": "13", "class_props": {"extends": "AbstractEvent", "implements": null, "modifiers": ["public"]}}, {"id": 61098, "method_name": "get\uae08\uc561", "class_name": "\uacb0\uc81c\uc2b9\uc778\ub428", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Double", "snippet": "    public Double get\uae08\uc561() {\n        return \uae08\uc561;\n    }", "url": "https://raw.githubusercontent.com/msa-ez/example-food-delivery/master/store/src/main/java/fooddelivery/%EA%B2%B0%EC%A0%9C%EC%8A%B9%EC%9D%B8%EB%90%A8.java", "stars": "13", "class_props": {"extends": "AbstractEvent", "implements": null, "modifiers": ["public"]}}, {"id": 61099, "method_name": "set\uae08\uc561", "class_name": "\uacb0\uc81c\uc2b9\uc778\ub428", "params": ["Double"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void set\uae08\uc561(Double \uae08\uc561) {\n        this.\uae08\uc561 = \uae08\uc561;\n    }", "url": "https://raw.githubusercontent.com/msa-ez/example-food-delivery/master/store/src/main/java/fooddelivery/%EA%B2%B0%EC%A0%9C%EC%8A%B9%EC%9D%B8%EB%90%A8.java", "stars": "13", "class_props": {"extends": "AbstractEvent", "implements": null, "modifiers": ["public"]}}, {"id": 61100, "method_name": "delay", "class_name": "\uacb0\uc81c\uc2b9\uc778\ub428", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void delay(){\n        try {\n            Thread.currentThread().sleep(5000);\n        } catch (InterruptedException e) {\n            e.printStackTrace();\n        }\n    }", "url": "https://raw.githubusercontent.com/msa-ez/example-food-delivery/master/store/src/main/java/fooddelivery/%EA%B2%B0%EC%A0%9C%EC%8A%B9%EC%9D%B8%EB%90%A8.java", "stars": "13", "class_props": {"extends": "AbstractEvent", "implements": null, "modifiers": ["public"]}}, {"id": 61101, "method_name": "init", "class_name": "ProjectServlet", "params": ["ServletConfig"], "throws": ["ServletException"], "modifiers": ["public"], "return_type": "void", "snippet": "  public void init(final ServletConfig config) throws ServletException {\n    super.init(config);\n    final AzkabanWebServer server = (AzkabanWebServer) getApplication();\n\n    this.lockdownCreateProjects =\n        server.getServerProps().getBoolean(LOCKDOWN_CREATE_PROJECTS_KEY, false);\n    if (this.lockdownCreateProjects) {\n      logger.info(\"Creation of projects is locked down\");\n    }\n    this.transitionService = server.getTransitionService();\n    this.systemManager = transitionService.getSystemManager();\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-web-server/src/main/java/azkaban/webapp/servlet/ProjectServlet.java", "stars": "18", "class_props": {"extends": "LoginAbstractAzkabanServlet", "implements": null, "modifiers": ["public"]}}, {"id": 61102, "method_name": "handleGet", "class_name": "ProjectServlet", "params": ["HttpServletRequest", "HttpServletResponse", "Session"], "throws": ["ServletException", "IOException"], "modifiers": ["protected"], "return_type": "void", "snippet": "  protected void handleGet(final HttpServletRequest req, final HttpServletResponse resp,\n      final Session session) throws ServletException, IOException {\n\n    final ProjectManager manager =\n        ((AzkabanWebServer) getApplication()).getProjectManager();\n\n    if (hasParam(req, \"ajax\")) {\n      handleAjaxAction(req, resp, session, manager);\n    } else if (hasParam(req, \"doaction\")) {\n      handleDoAction(req, resp, session);\n    } else {\n      handlePageRender(req, resp, session, manager);\n    }\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-web-server/src/main/java/azkaban/webapp/servlet/ProjectServlet.java", "stars": "18", "class_props": {"extends": "LoginAbstractAzkabanServlet", "implements": null, "modifiers": ["public"]}}, {"id": 61103, "method_name": "handleAjaxAction", "class_name": "ProjectServlet", "params": ["HttpServletRequest", "HttpServletResponse", "Session", "ProjectManager"], "throws": ["ServletException", "IOException"], "modifiers": ["private"], "return_type": "void", "snippet": "  private void handleAjaxAction(final HttpServletRequest req,\n      final HttpServletResponse resp, final Session session, final ProjectManager manager)\n      throws ServletException, IOException {\n\n    final String ajaxName = getParam(req, \"ajax\");\n    final HashMap<String, Object> ret = new HashMap<>();\n\n    if (ajaxName.equals(\"fetchallprojects\")) {\n      final List<Project> projects = manager.getProjects();\n      final List<SimplifiedProject> simplifiedProjects =\n          toSimplifiedProjects(projects);\n      ret.put(\"projects\", simplifiedProjects);\n    } else if (ajaxName.equals(\"fetchuserprojects\")) {\n      handleFetchUserProjects(req, session, manager, ret);\n    } else if (ajaxName.equals(\"fetchProjectPage\")) {\n      handleProjectPage(req, resp, session, manager, ret);\n    } else if (ajaxName.equals(\"getProjectPageLanguageType\")) {\n      ajaxGetProjectPageLanguageType(req, resp, session, ret);\n    }\n\n    this.writeJSON(resp, ret);\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-web-server/src/main/java/azkaban/webapp/servlet/ProjectServlet.java", "stars": "18", "class_props": {"extends": "LoginAbstractAzkabanServlet", "implements": null, "modifiers": ["public"]}}, {"id": 61104, "method_name": "handleFetchUserProjects", "class_name": "ProjectServlet", "params": ["HttpServletRequest", "Session", "ProjectManager", "HashMap<String,Object>"], "throws": ["ServletException"], "modifiers": ["private"], "return_type": "void", "snippet": "  private void handleFetchUserProjects(final HttpServletRequest req, final Session session,\n      final ProjectManager manager, final HashMap<String, Object> ret)\n      throws ServletException {\n    User user = null;\n\n    // if key \"user\" is specified, follow this logic\n    if (hasParam(req, \"user\")) {\n      final String userParam = getParam(req, \"user\");\n      if (userParam.isEmpty()) {\n        user = session.getUser();\n      } else {\n        user = new User(userParam);\n      }\n    } else {\n      // if key \"user\" is not specified, default to the session user\n      user = session.getUser();\n    }\n\n    final List<Project> projects = manager.getUserProjects(user);\n    final List<SimplifiedProject> simplifiedProjects = toSimplifiedProjects(projects);\n    ret.put(\"projects\", simplifiedProjects);\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-web-server/src/main/java/azkaban/webapp/servlet/ProjectServlet.java", "stars": "18", "class_props": {"extends": "LoginAbstractAzkabanServlet", "implements": null, "modifiers": ["public"]}}, {"id": 61105, "method_name": "toSimplifiedProjects", "class_name": "ProjectServlet", "params": ["List<Project>"], "throws": null, "modifiers": ["private"], "return_type": "List<SimplifiedProject>", "snippet": "  private List<SimplifiedProject> toSimplifiedProjects(final List<Project> projects) {\n    final List<SimplifiedProject> simplifiedProjects = new ArrayList<>();\n    for (final Project p : projects) {\n      final SimplifiedProject sp =\n          new SimplifiedProject(p.getId(), p.getName(),\n              p.getLastModifiedUser(), p.getCreateTimestamp(),\n              p.getUserPermissions(), p.getGroupPermissions());\n      simplifiedProjects.add(sp);\n    }\n    return simplifiedProjects;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-web-server/src/main/java/azkaban/webapp/servlet/ProjectServlet.java", "stars": "18", "class_props": {"extends": "LoginAbstractAzkabanServlet", "implements": null, "modifiers": ["public"]}}, {"id": 61106, "method_name": "loadIndexpageI18nData", "class_name": "ProjectServlet", "params": [], "throws": null, "modifiers": ["private"], "return_type": "Map<String,Map>", "snippet": "  private Map<String, Map<String, String>> loadIndexpageI18nData() {\n\n    Map<String, Map<String, String>> dataMap = new HashMap<>();\n    String languageType = LoadJsonUtils.getLanguageType();\n    Map<String, String> indexMap;\n    Map<String, String> subPageMap1;\n    if (languageType.equalsIgnoreCase(\"zh_CN\")) {\n      // \u6dfb\u52a0\u56fd\u9645\u5316\u6807\u7b7e\n      indexMap = LoadJsonUtils.transJson(\"/com.webank.wedatasphere.schedulis.i18n.conf/azkaban-web-server-zh_CN.json\",\n          \"azkaban.webapp.servlet.velocity.index.vm\");\n      subPageMap1 = LoadJsonUtils.transJson(\"/com.webank.wedatasphere.schedulis.i18n.conf/azkaban-web-server-zh_CN.json\",\n          \"azkaban.webapp.servlet.velocity.nav.vm\");\n    }else {\n      indexMap = LoadJsonUtils.transJson(\"/com.webank.wedatasphere.schedulis.i18n.conf/azkaban-web-server-en_US.json\",\n          \"azkaban.webapp.servlet.velocity.index.vm\");\n      subPageMap1 = LoadJsonUtils.transJson(\"/com.webank.wedatasphere.schedulis.i18n.conf/azkaban-web-server-en_US.json\",\n          \"azkaban.webapp.servlet.velocity.nav.vm\");\n    }\n\n    dataMap.put(\"index.vm\", indexMap);\n    dataMap.put(\"nav.vm\", subPageMap1);\n    return dataMap;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-web-server/src/main/java/azkaban/webapp/servlet/ProjectServlet.java", "stars": "18", "class_props": {"extends": "LoginAbstractAzkabanServlet", "implements": null, "modifiers": ["public"]}}, {"id": 61107, "method_name": "handlePageRender", "class_name": "ProjectServlet", "params": ["HttpServletRequest", "HttpServletResponse", "Session", "ProjectManager"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "  private void handlePageRender(final HttpServletRequest req,\n      final HttpServletResponse resp, final Session session, final ProjectManager manager) {\n    final User user = session.getUser();\n\n    final Page page = newPage(req, resp, session, \"azkaban/webapp/servlet/velocity/index.vm\");\n\n    // FIXME\u00a0Load international resources.\n    Map<String, Map<String, String>> vmDataMap = loadIndexpageI18nData();\n    vmDataMap.forEach((vm, data) -> data.forEach(page::add));\n\n    page.add(\"userGroups\", user.getGroups());\n\n    if (this.lockdownCreateProjects && !UserUtils.hasPermissionforAction(user, Permission.Type.CREATEPROJECTS)) {\n      page.add(\"hideCreateProject\", true);\n    }\n\n    if (hasParam(req, \"all\")) {\n      final List<Project> projects;\n      // FIXME\u00a0Add permission judgment, admin user can view all projects, user user can only view their own projects.\n      if(user.getRoles().contains(\"admin\")){\n        projects = manager.getProjects();\n      }else{//user\u7528\u6237\u53ea\u80fd\u67e5\u770b\u81ea\u5df1\u7684Project\n        projects = manager.getUserProjects(user);\n      }\n      page.add(\"viewProjects\", \"all\");\n      page.add(\"projects\", projects);\n    } else if (hasParam(req, \"group\")) {\n      final List<Project> projects = manager.getGroupProjects(user);\n      page.add(\"viewProjects\", \"group\");\n      page.add(\"projects\", projects);\n    } else {\n      final List<Project> projects = manager.getUserProjects(user);\n      page.add(\"viewProjects\", \"personal\");\n      page.add(\"projects\", projects);\n    }\n    String languageType = LoadJsonUtils.getLanguageType();\n\n    page.add(\"currentlangType\", languageType);\n    page.render();\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-web-server/src/main/java/azkaban/webapp/servlet/ProjectServlet.java", "stars": "18", "class_props": {"extends": "LoginAbstractAzkabanServlet", "implements": null, "modifiers": ["public"]}}, {"id": 61108, "method_name": "handleDoAction", "class_name": "ProjectServlet", "params": ["HttpServletRequest", "HttpServletResponse", "Session"], "throws": ["ServletException"], "modifiers": ["private"], "return_type": "void", "snippet": "  private void handleDoAction(final HttpServletRequest req, final HttpServletResponse resp,\n      final Session session) throws ServletException {\n    if (getParam(req, \"doaction\").equals(\"search\")) {\n      //\u53bb\u9664\u641c\u7d22\u5b57\u7b26\u4e32\u7684\u7a7a\u683c\n      final String searchTerm = getParam(req, \"searchterm\").trim();\n      if (!searchTerm.equals(\"\") && !searchTerm.equals(\".*\")) {\n        handleFilter(req, resp, session, searchTerm);\n        return;\n      }else{\n        final ProjectManager manager =\n            ((AzkabanWebServer) getApplication()).getProjectManager();\n        final User user = session.getUser();\n        final Page page = newPage(req, resp, session, \"azkaban/webapp/servlet/velocity/index.vm\");\n\n        // \u52a0\u8f7d\u56fd\u9645\u5316\u8d44\u6e90\n        Map<String, Map<String, String>> vmDataMap = loadIndexpageI18nData();\n        vmDataMap.forEach((vm, data) -> data.forEach(page::add));\n\n        page.add(\"userGroups\", user.getGroups());\n\n        //final List<Project> projects = manager.getUserProjects(user);\n\t\t    // FIXME\u00a0Add permission judgment, admin user can view all projects, user user can only view their own projects.\n        if (hasParam(req, \"all\")) {\n          final List<Project> projects;\n          //\u6dfb\u52a0\u6743\u9650\u5224\u65ad admin \u7528\u6237\u80fd\u67e5\u770b\u6240\u6709Project\n          if(user.getRoles().contains(\"admin\")){\n            projects = manager.getProjects();\n          }else{//user\u7528\u6237\u53ea\u80fd\u67e5\u770b\u81ea\u5df1\u7684Project\n            projects = manager.getUserProjects(user);\n          }\n          page.add(\"viewProjects\", \"all\");\n          page.add(\"projects\", projects);\n        }else {\n          final List<Project> projects = manager.getUserProjects(user);\n          page.add(\"viewProjects\", \"personal\");\n          page.add(\"projects\", projects);\n        }\n        String languageType = LoadJsonUtils.getLanguageType();\n\n        page.add(\"currentlangType\", languageType);\n\n        page.render();\n      }\n    }\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-web-server/src/main/java/azkaban/webapp/servlet/ProjectServlet.java", "stars": "18", "class_props": {"extends": "LoginAbstractAzkabanServlet", "implements": null, "modifiers": ["public"]}}, {"id": 61109, "method_name": "handleFilter", "class_name": "ProjectServlet", "params": ["HttpServletRequest", "HttpServletResponse", "Session", "String"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "  private void handleFilter(final HttpServletRequest req, final HttpServletResponse resp,\n      final Session session, final String searchTerm) {\n    final User user = session.getUser();\n    final ProjectManager manager =\n        ((AzkabanWebServer) getApplication()).getProjectManager();\n    final Page page =\n        newPage(req, resp, session, \"azkaban/webapp/servlet/velocity/index.vm\");\n\n    // \u52a0\u8f7d\u56fd\u9645\u5316\u8d44\u6e90\n    Map<String, Map<String, String>> vmDataMap = loadIndexpageI18nData();\n    vmDataMap.forEach((vm, data) -> data.forEach(page::add));\n\n    page.add(\"userGroups\", user.getGroups());\n\n    if (hasParam(req, \"all\")) {\n      // do nothing special if one asks for 'ALL' projects\n      final List<Project> projects = manager.getProjectsByRegex(searchTerm);\n      page.add(\"allProjects\", \"\");\n      page.add(\"projects\", projects);\n      page.add(\"search_term\", searchTerm);\n      page.add(\"viewProjects\", \"all\");\n    } else if (hasParam(req, \"group\")) {\n      page.add(\"search_term\", searchTerm);\n      page.add(\"viewProjects\", \"group\");\n    } else {\n      final List<Project> projects = manager.getUserProjectsByRegex(user, searchTerm);\n      page.add(\"projects\", projects);\n      page.add(\"search_term\", searchTerm);\n      page.add(\"viewProjects\", \"personal\");\n    }\n    String languageType = LoadJsonUtils.getLanguageType();\n\n    page.add(\"currentlangType\", languageType);\n    page.render();\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-web-server/src/main/java/azkaban/webapp/servlet/ProjectServlet.java", "stars": "18", "class_props": {"extends": "LoginAbstractAzkabanServlet", "implements": null, "modifiers": ["public"]}}, {"id": 61110, "method_name": "handlePost", "class_name": "ProjectServlet", "params": ["HttpServletRequest", "HttpServletResponse", "Session"], "throws": ["ServletException", "IOException"], "modifiers": ["protected"], "return_type": "void", "snippet": "  protected void handlePost(final HttpServletRequest req, final HttpServletResponse resp,\n      final Session session) throws ServletException, IOException {\n    // TODO Auto-generated method stub\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-web-server/src/main/java/azkaban/webapp/servlet/ProjectServlet.java", "stars": "18", "class_props": {"extends": "LoginAbstractAzkabanServlet", "implements": null, "modifiers": ["public"]}}, {"id": 61111, "method_name": "ajaxGetProjectPageLanguageType", "class_name": "ProjectServlet", "params": ["HttpServletRequest", "HttpServletResponse", "Session", "HashMap<String,Object>"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "  private void ajaxGetProjectPageLanguageType(final HttpServletRequest req, final HttpServletResponse resp,\n      final Session session, final HashMap<String, Object> ret) {\n\n    try {\n      String languageType = LoadJsonUtils.getLanguageType();\n      ret.put(\"langType\", languageType);\n    } catch (Exception e) {\n      ret.put(\"error\", e.getMessage());\n      logger.error(\"languageType load error: caused by:\" + e);\n    }\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-web-server/src/main/java/azkaban/webapp/servlet/ProjectServlet.java", "stars": "18", "class_props": {"extends": "LoginAbstractAzkabanServlet", "implements": null, "modifiers": ["public"]}}, {"id": 61112, "method_name": "handleProjectPage", "class_name": "ProjectServlet", "params": ["HttpServletRequest", "HttpServletResponse", "Session", "ProjectManager", "HashMap<String,Object>"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "  private void handleProjectPage(final HttpServletRequest req,\n      final HttpServletResponse resp, final Session session, final ProjectManager manager,\n      final HashMap<String, Object> ret) {\n    final User user = session.getUser();\n\n    try {\n      final int start = getIntParam(req, \"start\");\n      final int pageSize = getIntParam(req, \"length\");\n      final String projectsType = getParam(req, \"projectsType\");\n      final int pageNum = getIntParam(req, \"pageNum\");\n      final String orderOption = getParam(req, \"order\");\n\n      //\u5982\u679c\u8f93\u5165\u4e86\u5feb\u6377\u641c\u7d22\n      if (\"doaction\".equals(projectsType) && hasParam(req, \"doaction\")) {\n        //\u53bb\u9664\u641c\u7d22\u5b57\u7b26\u4e32\u7684\u7a7a\u683c\n        final String searchTerm = getParam(req, \"searchterm\").trim();\n        if (\"true\".equals(getParam(req, \"all\"))) {\n          //\u6dfb\u52a0\u6743\u9650\u5224\u65ad admin \u7528\u6237\u80fd\u67e5\u770b\u6240\u6709Project\n          if(user.getRoles().contains(\"admin\")){\n            final List<Project> searchProjects = manager.getProjectsByRegex(searchTerm, orderOption);\n            final PagingListStreamUtil<Project> pageProjectsList = manager.getUserProjectsPage(pageNum, pageSize, searchProjects);\n            assemblerProjectData(pageProjectsList.currentPageData(), searchProjects.size(), start, pageSize, ret, user);\n            // \u8fd0\u7ef4\u7ba1\u7406\u5458\u53ef\u4ee5\u67e5\u770b\u8be5\u8fd0\u7ef4\u7ba1\u7406\u5458\u8fd0\u7ef4\u90e8\u95e8\u4e0b\u7684\u6240\u6709\u5de5\u7a0b\n          } else if (systemManager.isDepartmentMaintainer(user)) {\n            final List<Integer> maintainedProjectIds = systemManager.getMaintainedProjects(user);\n            final List<Project> searchProjects = manager.getMaintainedProjectsByRegex(user, maintainedProjectIds,searchTerm, orderOption);\n            final PagingListStreamUtil<Project> pageProjectsList = manager.getUserProjectsPage(pageNum, pageSize, searchProjects);\n            assemblerProjectData(pageProjectsList.currentPageData(), searchProjects.size(), start, pageSize, ret, user);\n          } else {//user\u7528\u6237\u53ea\u80fd\u67e5\u770b\u81ea\u5df1\u7684Project\n            final List<Project> searchUserProject =\n                manager.getUserProjectsByRegex(user, searchTerm, orderOption);\n\n            if(searchUserProject.size() > 0) {\n\n              final PagingListStreamUtil<Project> pageProjectsList = manager.getUserProjectsPage(pageNum, pageSize, searchUserProject);\n\n              assemblerProjectData(pageProjectsList.currentPageData(), searchUserProject.size(), start, pageSize, ret, user);\n            } else {\n              ret.put(\"total\", 0);\n            }\n          }\n\n        } else {//\u53ea\u67e5\u83b7\u81ea\u5df1\u521b\u5efa\u7684\u9879\u76ee\n          final List<Project> searchUserProject =\n              manager.getUserPersonProjectsByRegex(user, searchTerm, orderOption);\n          final PagingListStreamUtil<Project> pageProjectsList\n              = manager.getUserProjectsPage(pageNum, pageSize, searchUserProject);\n\n          assemblerProjectData(pageProjectsList.currentPageData(),\n              searchUserProject.size(), start, pageSize, ret, user);\n        }\n      }else{\n        if (\"all\".equals(projectsType)) {\n          final List<Project> projects;\n          //\u6dfb\u52a0\u6743\u9650\u5224\u65ad admin \u7528\u6237\u80fd\u67e5\u770b\u6240\u6709Project\n          if(user.getRoles().contains(\"admin\")){\n\n            projects = manager.getProjects(orderOption);\n\n            final PagingListStreamUtil<Project> pageProjectsList\n                = manager.getAllProjectsPage(pageNum, pageSize, projects);\n\n            assemblerProjectData(pageProjectsList.currentPageData(),\n                projects.size(), start, pageSize, ret, user);\n\n          } else if (systemManager.isDepartmentMaintainer(user)) {\n              List<Integer> maintainedProjectIds = systemManager.getMaintainedProjects(user);\n            projects = manager.getMaintainedProjects(user, maintainedProjectIds, orderOption);\n            final PagingListStreamUtil<Project> pageProjectsList\n                    = manager.getAllProjectsPage(pageNum, pageSize, projects);\n\n            assemblerProjectData(pageProjectsList.currentPageData(),\n                    projects.size(), start, pageSize, ret, user);\n          } else{//user\u7528\u6237\u53ea\u80fd\u67e5\u770b\u81ea\u5df1\u6709\u6743\u9650\u7684\u9879\u76ee\n            projects = manager.getUserAllProjects(user, orderOption);\n\n            if(projects.size() > 0) {\n              final PagingListStreamUtil<Project> pageProjectsList\n                  = manager.getUserProjectsPage(pageNum, pageSize, projects);\n\n              assemblerProjectData(pageProjectsList.currentPageData(),\n                  projects.size(), start, pageSize, ret, user);\n            }else {\n              ret.put(\"total\", 0);\n            }\n          }\n        } else {//\u53ea\u67e5\u83b7\u81ea\u5df1\u521b\u5efa\u7684\u9879\u76ee\n\n          final List<Project> projects = manager.getUserProjects(user, orderOption);\n\n          if(projects.size() > 0){\n            final PagingListStreamUtil<Project> pageProjectsList\n                = manager.getUserProjectsPage(pageNum, pageSize, projects);\n\n            assemblerProjectData(pageProjectsList.currentPageData(),\n                projects.size(), start, pageSize, ret, user);\n\n\n          }else {\n            ret.put(\"total\", 0);\n          }\n        }\n      }\n    } catch (ServletException e) {\n      e.printStackTrace();\n    }\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-web-server/src/main/java/azkaban/webapp/servlet/ProjectServlet.java", "stars": "18", "class_props": {"extends": "LoginAbstractAzkabanServlet", "implements": null, "modifiers": ["public"]}}, {"id": 61113, "method_name": "assemblerProjectData", "class_name": "ProjectServlet", "params": ["List<Project>", "int", "int", "int", "HashMap<String,Object>", "User"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "  private void assemblerProjectData(List<Project> projectList,\n      int total, int start, int pageSize, HashMap<String, Object> ret, User user){\n    List<Map<String, String>> projectMapList = new ArrayList<>();\n    WebUtils webUtils = new WebUtils();\n    boolean isAdmin = user.getRoles().contains(\"admin\");\n    for(Project project : projectList){\n      Map<String, String> pmap = new HashMap<>();\n      pmap.put(\"name\",project.getName());\n      pmap.put(\"description\",project.getDescription());\n      pmap.put(\"lastModifiedUser\",project.getLastModifiedUser());\n      pmap.put(\"lastModifiedTimestamp\", webUtils.formatDateTime(project.getLastModifiedTimestamp()));\n      // \u9875\u9762\u5220\u9664\u6309\u94ae\u663e\u793a\u5224\u65ad\n      if(isAdmin || hasPermission(project, user, Permission.Type.ADMIN)\n          || hasPermission(project, user, Type.DEPMAINTAINER)){\n        pmap.put(\"showDeleteBtn\", \"true\");\n      }\n      projectMapList.add(pmap);\n    }\n\n    ret.put(\"total\", total);\n    ret.put(\"from\", start);\n    ret.put(\"length\", pageSize);\n    ret.put(\"projectList\", projectMapList);\n\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-web-server/src/main/java/azkaban/webapp/servlet/ProjectServlet.java", "stars": "18", "class_props": {"extends": "LoginAbstractAzkabanServlet", "implements": null, "modifiers": ["public"]}}, {"id": 61114, "method_name": "getProjectId", "class_name": "SimplifiedProject", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getProjectId() {\n      return this.projectId;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-web-server/src/main/java/azkaban/webapp/servlet/ProjectServlet.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["static", "private"]}}, {"id": 61115, "method_name": "setProjectId", "class_name": "SimplifiedProject", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setProjectId(final int projectId) {\n      this.projectId = projectId;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-web-server/src/main/java/azkaban/webapp/servlet/ProjectServlet.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["static", "private"]}}, {"id": 61116, "method_name": "getProjectName", "class_name": "SimplifiedProject", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getProjectName() {\n      return this.projectName;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-web-server/src/main/java/azkaban/webapp/servlet/ProjectServlet.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["static", "private"]}}, {"id": 61117, "method_name": "setProjectName", "class_name": "SimplifiedProject", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setProjectName(final String projectName) {\n      this.projectName = projectName;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-web-server/src/main/java/azkaban/webapp/servlet/ProjectServlet.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["static", "private"]}}, {"id": 61118, "method_name": "getCreatedBy", "class_name": "SimplifiedProject", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getCreatedBy() {\n      return this.createdBy;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-web-server/src/main/java/azkaban/webapp/servlet/ProjectServlet.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["static", "private"]}}, {"id": 61119, "method_name": "setCreatedBy", "class_name": "SimplifiedProject", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setCreatedBy(final String createdBy) {\n      this.createdBy = createdBy;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-web-server/src/main/java/azkaban/webapp/servlet/ProjectServlet.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["static", "private"]}}, {"id": 61120, "method_name": "getCreatedTime", "class_name": "SimplifiedProject", "params": [], "throws": null, "modifiers": ["public"], "return_type": "long", "snippet": "    public long getCreatedTime() {\n      return this.createdTime;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-web-server/src/main/java/azkaban/webapp/servlet/ProjectServlet.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["static", "private"]}}, {"id": 61121, "method_name": "setCreatedTime", "class_name": "SimplifiedProject", "params": ["long"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setCreatedTime(final long createdTime) {\n      this.createdTime = createdTime;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-web-server/src/main/java/azkaban/webapp/servlet/ProjectServlet.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["static", "private"]}}, {"id": 61122, "method_name": "getUserPermissions", "class_name": "SimplifiedProject", "params": [], "throws": null, "modifiers": ["public"], "return_type": "List<Pair>", "snippet": "    public List<Pair<String, Permission>> getUserPermissions() {\n      return this.userPermissions;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-web-server/src/main/java/azkaban/webapp/servlet/ProjectServlet.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["static", "private"]}}, {"id": 61123, "method_name": "setUserPermissions", "class_name": "SimplifiedProject", "params": ["List<Pair>"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setUserPermissions(\n        final List<Pair<String, Permission>> userPermissions) {\n      this.userPermissions = userPermissions;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-web-server/src/main/java/azkaban/webapp/servlet/ProjectServlet.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["static", "private"]}}, {"id": 61124, "method_name": "getGroupPermissions", "class_name": "SimplifiedProject", "params": [], "throws": null, "modifiers": ["public"], "return_type": "List<Pair>", "snippet": "    public List<Pair<String, Permission>> getGroupPermissions() {\n      return this.groupPermissions;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-web-server/src/main/java/azkaban/webapp/servlet/ProjectServlet.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["static", "private"]}}, {"id": 61125, "method_name": "setGroupPermissions", "class_name": "SimplifiedProject", "params": ["List<Pair>"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setGroupPermissions(\n        final List<Pair<String, Permission>> groupPermissions) {\n      this.groupPermissions = groupPermissions;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-web-server/src/main/java/azkaban/webapp/servlet/ProjectServlet.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["static", "private"]}}, {"id": 61126, "method_name": "showErrorDialog", "class_name": "DialogUtils", "params": ["Throwable", "String"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void showErrorDialog(Throwable throwable, String title) {\n        LOGGER.error(throwable.getMessage(), throwable);\n        throwable.printStackTrace();\n        Platform.runLater(() -> {\n            var exceptionDialog = new ExceptionDialog(throwable);\n            var pane = exceptionDialog.getDialogPane();\n            pane.getStylesheets().add(\"css/base.css\");\n            exceptionDialog.setHeaderText(title);\n            exceptionDialog.setTitle(\"Exception detail\");\n            exceptionDialog.show();\n        });\n    }", "url": "https://raw.githubusercontent.com/GZYangKui/openjfx-database/master/app/src/main/java/com/openjfx/database/app/utils/DialogUtils.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 61127, "method_name": "showNotification", "class_name": "DialogUtils", "params": ["String", "Pos", "NotificationType"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void showNotification(String text, Pos pos, NotificationType type) {\n        Platform.runLater(() -> {\n            var notifications = Notifications.create();\n            notifications.position(pos);\n            notifications.text(text);\n            switch (type) {\n                case ERROR:\n                    notifications.showError();\n                    break;\n                case WARNING:\n                    notifications.showWarning();\n                    break;\n                case INFORMATION:\n                    notifications.showInformation();\n                    break;\n                case CONFIRMATION:\n                    notifications.showConfirm();\n                    break;\n                default:\n                    notifications.show();\n            }\n        });\n    }", "url": "https://raw.githubusercontent.com/GZYangKui/openjfx-database/master/app/src/main/java/com/openjfx/database/app/utils/DialogUtils.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 61128, "method_name": "showAlertConfirm", "class_name": "DialogUtils", "params": ["String"], "throws": null, "modifiers": ["public", "static"], "return_type": "boolean", "snippet": "    public static boolean showAlertConfirm(String message) {\n        var alert = new Alert(Alert.AlertType.CONFIRMATION);\n        alert.setContentText(message);\n        alert.getDialogPane().getStylesheets().add(\"css/base.css\");\n        var optional = alert.showAndWait();\n        return optional.isPresent() && optional.get() == ButtonType.OK;\n    }", "url": "https://raw.githubusercontent.com/GZYangKui/openjfx-database/master/app/src/main/java/com/openjfx/database/app/utils/DialogUtils.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 61129, "method_name": "showAlertInfo", "class_name": "DialogUtils", "params": ["String"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void showAlertInfo(String message) {\n        var alert = new Alert(Alert.AlertType.INFORMATION);\n        alert.setTitle(\"\u6d88\u606f\");\n        alert.setContentText(message);\n        alert.getDialogPane().getStylesheets().add(\"css/base.css\");\n        alert.showAndWait();\n    }", "url": "https://raw.githubusercontent.com/GZYangKui/openjfx-database/master/app/src/main/java/com/openjfx/database/app/utils/DialogUtils.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 61130, "method_name": "actionPerformed", "class_name": "DirectorPanel", "params": ["ActionEvent"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void actionPerformed(ActionEvent e) {\n\t\tif (e.getSource() == findResult) {\n\n\t\t\tresults.setText(\"Collecting results, please wait...\");\n\t\t\tThread t = new Thread() {\n\t\t\t\t@Override\n\t\t\t\tpublic void run() {\n\n\t\t\t\t\tString return_val = \"\";\n\n\t\t\t\t\t// Validate year range input\n\t\t\t\t\tif (minYearInput.getText().trim().equals(\"\") || maxYearInput.getText().trim().equals(\"\")) {\n\t\t\t\t\t\tresults.setText(\"Must provide valid year range for search!\");\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Collect user input before starting search\n\t\t\t\t\tInteger firstYear = Integer.parseInt(minYearInput.getText());\n\t\t\t\t\tInteger lastYear = Integer.parseInt(maxYearInput.getText());\n\n\t\t\t\t\tBoolean actor = false;\n\t\t\t\t\tif (professionInput.getItemAt(professionInput.getSelectedIndex()).equals(\"Actor\"))\n\t\t\t\t\t\tactor = true;\n\t\t\t\t\telse if (professionInput.getItemAt(professionInput.getSelectedIndex()).equals(\"\")) {\n\t\t\t\t\t\tresults.setText(\"Must select an occupation from the drop down!\");\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Search for all the links between actors or directors in the database in the\n\t\t\t\t\t// given year range\n\t\t\t\t\tSystem.out.println(\"Getting links for year range\");\n\t\t\t\t\tArrayList<PersonTitleLink> links = manager.getPeopleTitlesByYear(actor, firstYear, lastYear);\n\t\t\t\t\tSystem.out.println(\"Links recieved\");\n\n\t\t\t\t\tArrayList<PersonTitleLink> linksToReturn = new ArrayList<PersonTitleLink>();\n\t\t\t\t\tInteger numYears = lastYear - firstYear + 1;\n\n\t\t\t\t\t// Search through all the links that were found\n\t\t\t\t\tInteger index = 0;\n\t\t\t\t\twhile (index < links.size()) {\n\t\t\t\t\t\tSystem.out.println(\"\\nFound person\\n\");\n\t\t\t\t\t\tInteger prevYear = -1;\n\t\t\t\t\t\tArrayList<PersonTitleLink> tempLinks = new ArrayList<PersonTitleLink>();\n\t\t\t\t\t\tString person = links.get(index).getPersonID();\n\t\t\t\t\t\tInteger counter = 0;\n\n\t\t\t\t\t\t// Continue looping through the results while the person is the same,\n\t\t\t\t\t\t// incrementing a counter every time the year changes (this is\n\t\t\t\t\t\t// alright because the results are sorted by people and years)\n\t\t\t\t\t\twhile (index < links.size() && person.equals(links.get(index).getPersonID())) {\n\t\t\t\t\t\t\tif (links.get(index).getYear() != prevYear) {\n\t\t\t\t\t\t\t\tSystem.out.println(\"Found new title for person\");\n\t\t\t\t\t\t\t\ttempLinks.add(links.get(index));\n\t\t\t\t\t\t\t\tcounter++;\n\t\t\t\t\t\t\t\tprevYear = links.get(index).getYear();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tindex++;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// If the counter for the person is the same as the number of distinct years,\n\t\t\t\t\t\t// add the person\n\t\t\t\t\t\tif (counter == numYears) {\n\t\t\t\t\t\t\tSystem.out.println(\"Adding all unique title links for person\");\n\t\t\t\t\t\t\tlinksToReturn.addAll(tempLinks);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tindex = 0;\n\t\t\t\t\t// Generate string for results and find the title names of all the relevant\n\t\t\t\t\t// titles\n\t\t\t\t\twhile (index < linksToReturn.size()) {\n\t\t\t\t\t\tSystem.out.println(\"Generating string for person \" + (index + 1));\n\t\t\t\t\t\tPerson person = manager.getPersonByID(linksToReturn.get(index).getPersonID());\n\t\t\t\t\t\tif (!person.getName().toLowerCase().trim()\n\t\t\t\t\t\t\t\t.equals(excludePerson.getText().toLowerCase().trim())) {\n\t\t\t\t\t\t\treturn_val += person.getName() + \"\\n\";\n\n\t\t\t\t\t\t\twhile (index < linksToReturn.size()\n\t\t\t\t\t\t\t\t\t&& person.getPersonID().equals(linksToReturn.get(index).getPersonID())) {\n\t\t\t\t\t\t\t\tTitle title = manager.getTitleByID(linksToReturn.get(index).getTitleID());\n\t\t\t\t\t\t\t\treturn_val += \"\\t\" + title.getTitle() + \" (\" + title.getStartYear() + \")\\n\";\n\t\t\t\t\t\t\t\tindex++;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\twhile (index < linksToReturn.size()\n\t\t\t\t\t\t\t\t\t&& person.getPersonID().equals(linksToReturn.get(index).getPersonID())) {\n\t\t\t\t\t\t\t\tindex++;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn_val += \"\\n\";\n\t\t\t\t\t}\n\n\t\t\t\t\t// Display the results to the console and the window\n\t\t\t\t\tSystem.out.println(\"Final Results:\\n\\n\" + return_val);\n\t\t\t\t\tresults.setText(return_val);\n\t\t\t\t}\n\t\t\t};\n\t\t\tt.start();\n\t\t}\n\t}", "url": "https://raw.githubusercontent.com/Luke-Grammer/IMDB-Database-Application/master/src/UI/DirectorPanel.java", "stars": "1", "class_props": {"extends": "JPanel", "implements": ["ActionListener"], "modifiers": ["public"]}}, {"id": 61131, "method_name": "main", "class_name": "SampleJUnitJupiterApplication", "params": ["String"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "\tpublic static void main(String[] args) {\n\t\tSpringApplication.run(SampleJUnitJupiterApplication.class, args);\n\t}", "url": "https://raw.githubusercontent.com/spring-projects/spring-boot/master/spring-boot-tests/spring-boot-smoke-tests/spring-boot-smoke-test-junit-jupiter/src/main/java/smoketest/SampleJUnitJupiterApplication.java", "stars": "47572", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 61132, "method_name": "canScrollVertically", "class_name": "CustomLinearLayoutManager", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean canScrollVertically() {\n        //Similarly you can customize \"canScrollHorizontally()\" for managing horizontal scroll\n        return isScrollEnabled && super.canScrollVertically();\n    }", "url": "https://raw.githubusercontent.com/FanChael/MVVM/master/librarys/lib_common/src/main/java/com/hl/base_module/util/rv/CustomLinearLayoutManager.java", "stars": "14", "class_props": {"extends": "LinearLayoutManager", "implements": null, "modifiers": ["public"]}}, {"id": 61133, "method_name": "canScrollHorizontally", "class_name": "CustomLinearLayoutManager", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean canScrollHorizontally() {\n        //Similarly you can customize \"canScrollHorizontally()\" for managing horizontal scroll\n        return isScrollEnabled && super.canScrollVertically();\n    }", "url": "https://raw.githubusercontent.com/FanChael/MVVM/master/librarys/lib_common/src/main/java/com/hl/base_module/util/rv/CustomLinearLayoutManager.java", "stars": "14", "class_props": {"extends": "LinearLayoutManager", "implements": null, "modifiers": ["public"]}}, {"id": 61134, "method_name": "setScrollEnabled", "class_name": "CustomLinearLayoutManager", "params": ["boolean"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setScrollEnabled(boolean flag) {\n        this.isScrollEnabled = flag;\n    }", "url": "https://raw.githubusercontent.com/FanChael/MVVM/master/librarys/lib_common/src/main/java/com/hl/base_module/util/rv/CustomLinearLayoutManager.java", "stars": "14", "class_props": {"extends": "LinearLayoutManager", "implements": null, "modifiers": ["public"]}}, {"id": 61135, "method_name": "onCreate", "class_name": "DBHelper", "params": ["SQLiteDatabase"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onCreate(SQLiteDatabase db) {\n        // TODO Auto-generated method stub\n        db.execSQL(\n                \"create table transact \" +\n                        \"(id integer primary key, sender text,receiver text,amount text)\"\n        );\n        db.execSQL(\n                \"create table wallet \" +\n                        \"(id integer primary key, number text,cash text)\"\n        );\n    }", "url": "https://raw.githubusercontent.com/zhackerx/upi_payment/master/app/src/main/java/com/millionq/upi_payment/DBHelper.java", "stars": "1", "class_props": {"extends": "SQLiteOpenHelper", "implements": null, "modifiers": ["public"]}}, {"id": 61136, "method_name": "onUpgrade", "class_name": "DBHelper", "params": ["SQLiteDatabase", "int", "int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onUpgrade(SQLiteDatabase db, int oldVersion, int newVersion) {\n        // TODO Auto-generated method stub\n        db.execSQL(\"DROP TABLE IF EXISTS transact\");\n        db.execSQL(\"DROP TABLE IF EXISTS wallet\");\n        onCreate(db);\n    }", "url": "https://raw.githubusercontent.com/zhackerx/upi_payment/master/app/src/main/java/com/millionq/upi_payment/DBHelper.java", "stars": "1", "class_props": {"extends": "SQLiteOpenHelper", "implements": null, "modifiers": ["public"]}}, {"id": 61137, "method_name": "insertContact", "class_name": "DBHelper", "params": ["String", "String", "String"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean insertContact (String sender, String receiver, String amount) {\n        SQLiteDatabase db = this.getWritableDatabase();\n        ContentValues contentValues = new ContentValues();\n        contentValues.put(\"sender\", sender);\n        contentValues.put(\"receiver\", receiver);\n        contentValues.put(\"amount\", amount);\n        db.insert(\"transact\", null, contentValues);\n        return true;\n    }", "url": "https://raw.githubusercontent.com/zhackerx/upi_payment/master/app/src/main/java/com/millionq/upi_payment/DBHelper.java", "stars": "1", "class_props": {"extends": "SQLiteOpenHelper", "implements": null, "modifiers": ["public"]}}, {"id": 61138, "method_name": "insertWallet", "class_name": "DBHelper", "params": ["String", "String"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean insertWallet (String number, String cash) {\n        SQLiteDatabase db = this.getWritableDatabase();\n        ContentValues contentValues = new ContentValues();\n        contentValues.put(\"number\", number);\n        contentValues.put(\"cash\", cash);\n        db.insert(\"wallet\", null, contentValues);\n        return true;\n    }", "url": "https://raw.githubusercontent.com/zhackerx/upi_payment/master/app/src/main/java/com/millionq/upi_payment/DBHelper.java", "stars": "1", "class_props": {"extends": "SQLiteOpenHelper", "implements": null, "modifiers": ["public"]}}, {"id": 61139, "method_name": "getTransData", "class_name": "DBHelper", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "Cursor", "snippet": "    public Cursor getTransData(int id) {\n        SQLiteDatabase db = this.getReadableDatabase();\n        Cursor res =  db.rawQuery( \"select * from transact where id=\"+id+\"\", null );\n        return res;\n    }", "url": "https://raw.githubusercontent.com/zhackerx/upi_payment/master/app/src/main/java/com/millionq/upi_payment/DBHelper.java", "stars": "1", "class_props": {"extends": "SQLiteOpenHelper", "implements": null, "modifiers": ["public"]}}, {"id": 61140, "method_name": "getWalletData", "class_name": "DBHelper", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "Cursor", "snippet": "    public Cursor getWalletData(int id) {\n        SQLiteDatabase db = this.getReadableDatabase();\n        Cursor res =  db.rawQuery( \"select * from wallet where id=\"+id+\"\", null );\n        return res;\n    }", "url": "https://raw.githubusercontent.com/zhackerx/upi_payment/master/app/src/main/java/com/millionq/upi_payment/DBHelper.java", "stars": "1", "class_props": {"extends": "SQLiteOpenHelper", "implements": null, "modifiers": ["public"]}}, {"id": 61141, "method_name": "getWalletId", "class_name": "DBHelper", "params": ["String"], "throws": ["SQLException"], "modifiers": ["public"], "return_type": "int", "snippet": "    public int getWalletId(String  number) throws SQLException\n    {\n        SQLiteDatabase db = this.getReadableDatabase();\n        long recc=0;\n        String rec=null;\n        Cursor mCursor = db.rawQuery(\n                \"SELECT id  FROM  wallet WHERE number= '\"+number+\"'\" , null);\n        if (mCursor != null)\n        {\n            mCursor.moveToFirst();\n            recc=mCursor.getLong(0);\n            rec=String.valueOf(recc);\n        }\n        return Integer.parseInt(rec);\n    }", "url": "https://raw.githubusercontent.com/zhackerx/upi_payment/master/app/src/main/java/com/millionq/upi_payment/DBHelper.java", "stars": "1", "class_props": {"extends": "SQLiteOpenHelper", "implements": null, "modifiers": ["public"]}}, {"id": 61142, "method_name": "isPhonePresent", "class_name": "DBHelper", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean isPhonePresent(String phone) {\n        ArrayList arrayList = getAllWallets();\n        for(int i=0;i<arrayList.size();i+=2)\n            if(arrayList.get(i).equals(phone))\n                return true;\n\n        return false;\n    }", "url": "https://raw.githubusercontent.com/zhackerx/upi_payment/master/app/src/main/java/com/millionq/upi_payment/DBHelper.java", "stars": "1", "class_props": {"extends": "SQLiteOpenHelper", "implements": null, "modifiers": ["public"]}}, {"id": 61143, "method_name": "updateWallet", "class_name": "DBHelper", "params": ["Integer", "String", "String"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean updateWallet (Integer id, String number, String cash) {\n        SQLiteDatabase db = this.getWritableDatabase();\n        ContentValues contentValues = new ContentValues();\n        contentValues.put(\"number\", number);\n        contentValues.put(\"cash\", cash);\n        db.update(\"wallet\", contentValues, \"id = ? \", new String[] { Integer.toString(id) } );\n        return true;\n    }", "url": "https://raw.githubusercontent.com/zhackerx/upi_payment/master/app/src/main/java/com/millionq/upi_payment/DBHelper.java", "stars": "1", "class_props": {"extends": "SQLiteOpenHelper", "implements": null, "modifiers": ["public"]}}, {"id": 61144, "method_name": "deleteTrans", "class_name": "DBHelper", "params": ["Integer"], "throws": null, "modifiers": ["public"], "return_type": "Integer", "snippet": "    public Integer deleteTrans (Integer id) {\n        SQLiteDatabase db = this.getWritableDatabase();\n        return db.delete(\"transact\",\n                \"id = ? \",\n                new String[] { Integer.toString(id) });\n    }", "url": "https://raw.githubusercontent.com/zhackerx/upi_payment/master/app/src/main/java/com/millionq/upi_payment/DBHelper.java", "stars": "1", "class_props": {"extends": "SQLiteOpenHelper", "implements": null, "modifiers": ["public"]}}, {"id": 61145, "method_name": "deleteWallet", "class_name": "DBHelper", "params": ["Integer"], "throws": null, "modifiers": ["public"], "return_type": "Integer", "snippet": "    public Integer deleteWallet (Integer id) {\n        SQLiteDatabase db = this.getWritableDatabase();\n        return db.delete(\"wallet\",\n                \"id = ? \",\n                new String[] { Integer.toString(id) });\n    }", "url": "https://raw.githubusercontent.com/zhackerx/upi_payment/master/app/src/main/java/com/millionq/upi_payment/DBHelper.java", "stars": "1", "class_props": {"extends": "SQLiteOpenHelper", "implements": null, "modifiers": ["public"]}}, {"id": 61146, "method_name": "getAllTransactions", "class_name": "DBHelper", "params": [], "throws": null, "modifiers": ["public"], "return_type": "ArrayList<String>", "snippet": "    public ArrayList<String> getAllTransactions() {\n        ArrayList<String> array_list = new ArrayList<String>();\n\n        //hp = new HashMap();\n        SQLiteDatabase db = this.getReadableDatabase();\n        Cursor res =  db.rawQuery( \"select * from transact\", null );\n        res.moveToFirst();\n\n        while(res.isAfterLast() == false){\n            array_list.add(res.getString(res.getColumnIndex(TRANS_COLUMN_SENDER)));\n            array_list.add(res.getString(res.getColumnIndex(TRANS_COLUMN_RECEIVER)));\n            array_list.add(res.getString(res.getColumnIndex(TRANS_COLUMN_AMOUNT)));\n            res.moveToNext();\n        }\n        return array_list;\n    }", "url": "https://raw.githubusercontent.com/zhackerx/upi_payment/master/app/src/main/java/com/millionq/upi_payment/DBHelper.java", "stars": "1", "class_props": {"extends": "SQLiteOpenHelper", "implements": null, "modifiers": ["public"]}}, {"id": 61147, "method_name": "getAllWallets", "class_name": "DBHelper", "params": [], "throws": null, "modifiers": ["public"], "return_type": "ArrayList<String>", "snippet": "    public ArrayList<String> getAllWallets() {\n        ArrayList<String> array_list = new ArrayList<String>();\n\n        //hp = new HashMap();\n        SQLiteDatabase db = this.getReadableDatabase();\n        Cursor res =  db.rawQuery( \"select * from wallet\", null );\n        res.moveToFirst();\n\n        while(res.isAfterLast() == false){\n            array_list.add(res.getString(res.getColumnIndex(WALLET_COLUMN_NUMBER)));\n            array_list.add(res.getString(res.getColumnIndex(WALLET_COLUMN_CASH)));\n            res.moveToNext();\n        }\n        return array_list;\n    }", "url": "https://raw.githubusercontent.com/zhackerx/upi_payment/master/app/src/main/java/com/millionq/upi_payment/DBHelper.java", "stars": "1", "class_props": {"extends": "SQLiteOpenHelper", "implements": null, "modifiers": ["public"]}}, {"id": 61148, "method_name": "onCreate", "class_name": "EndlessListViewActivity", "params": ["Bundle"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void onCreate(Bundle savedInstanceState)\n\t{\n\t\tsuper.onCreate(savedInstanceState);\n\t\tsetContentView(R.layout.endless);\n\t\tdatasource = Datasource.getInstance();\n\t\tfooterView = ((LayoutInflater) this.getSystemService(Context.LAYOUT_INFLATER_SERVICE)).inflate(R.layout.footer, null, false);\n\t\tgetListView().addFooterView(footerView, null, false);\n\t\tsetListAdapter(new CustomArrayAdapter(this, datasource.getData(0, PAGESIZE)));\n\t\tgetListView().removeFooterView(footerView);\n\n\t\tgetListView().setOnScrollListener(new OnScrollListener()\n\t\t{\n\t\t\t@Override\n\t\t\tpublic void onScrollStateChanged(AbsListView arg0, int arg1)\n\t\t\t{\n\t\t\t\t// nothing here\n\t\t\t}\n\n\t\t\t@Override\n\t\t\tpublic void onScroll(AbsListView view, int firstVisibleItem, int visibleItemCount, int totalItemCount)\n\t\t\t{\n\t\t\t\tif (load(firstVisibleItem, visibleItemCount, totalItemCount))\n\t\t\t\t{\n\t\t\t\t\tloading = true;\n\t\t\t\t\tgetListView().addFooterView(footerView, null, false);\n\t\t\t\t\t(new LoadNextPage()).execute(\"\");\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\tupdateDisplayingTextView();\n\n\t}", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/Paginated%20ListView%20Demo/src/com/danielme/blog/android/paginatedlistview/activities/EndlessListViewActivity.java", "stars": "74", "class_props": {"extends": "AbstractListViewActivity", "implements": null, "modifiers": ["public"]}}, {"id": 61149, "method_name": "load_jr100", "class_name": "DataFile", "params": ["MemorySystem"], "throws": null, "modifiers": ["public", "abstract"], "return_type": "Program", "snippet": "    public abstract Program load_jr100(MemorySystem ms);\n    public abstract void save_jr100(Program p, int version);\n\n    public void setErrorStatus(int status, String message) {\n        this.errorStatus = status;\n        this.errorMessage = message;\n    }", "url": "https://raw.githubusercontent.com/kemusiro/jr100-emulator-v2/master/src/jp/asamomiji/emulator/file/DataFile.java", "stars": "4", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 61150, "method_name": "save_jr100", "class_name": "DataFile", "params": ["Program", "int"], "throws": null, "modifiers": ["public", "abstract"], "return_type": "void", "snippet": "    public abstract void save_jr100(Program p, int version);\n\n    public void setErrorStatus(int status, String message) {\n        this.errorStatus = status;\n        this.errorMessage = message;\n    }", "url": "https://raw.githubusercontent.com/kemusiro/jr100-emulator-v2/master/src/jp/asamomiji/emulator/file/DataFile.java", "stars": "4", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 61151, "method_name": "setErrorStatus", "class_name": "DataFile", "params": ["int", "String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setErrorStatus(int status, String message) {\n        this.errorStatus = status;\n        this.errorMessage = message;\n    }", "url": "https://raw.githubusercontent.com/kemusiro/jr100-emulator-v2/master/src/jp/asamomiji/emulator/file/DataFile.java", "stars": "4", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 61152, "method_name": "getErrorStatus", "class_name": "DataFile", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getErrorStatus() {\n        return errorStatus;\n    }", "url": "https://raw.githubusercontent.com/kemusiro/jr100-emulator-v2/master/src/jp/asamomiji/emulator/file/DataFile.java", "stars": "4", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 61153, "method_name": "getErrorMessage", "class_name": "DataFile", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getErrorMessage() {\n        return errorMessage;\n    }", "url": "https://raw.githubusercontent.com/kemusiro/jr100-emulator-v2/master/src/jp/asamomiji/emulator/file/DataFile.java", "stars": "4", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 61154, "method_name": "withMessage", "class_name": "DataFile", "params": ["int", "String"], "throws": null, "modifiers": ["protected"], "return_type": "int", "snippet": "    protected int withMessage(int status, String message) {\n        errorMessage = message;\n        return status;\n    }", "url": "https://raw.githubusercontent.com/kemusiro/jr100-emulator-v2/master/src/jp/asamomiji/emulator/file/DataFile.java", "stars": "4", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 61155, "method_name": "getExtension", "class_name": "DataFile", "params": ["String"], "throws": null, "modifiers": ["public", "static"], "return_type": "String", "snippet": "    public static String getExtension(String filename) {\n        if (filename == null) {\n            return null;\n        }\n        int index = filename.lastIndexOf(\".\");\n        if (index != -1) {\n            return filename.substring(index + 1);\n        }\n        return null;\n    }", "url": "https://raw.githubusercontent.com/kemusiro/jr100-emulator-v2/master/src/jp/asamomiji/emulator/file/DataFile.java", "stars": "4", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 61156, "method_name": "readMagic", "class_name": "DataFile", "params": ["String"], "throws": null, "modifiers": ["static", "private"], "return_type": "byte", "snippet": "    private static byte[] readMagic(String filename) {\n        byte[] magic = new byte[4];\n        try (FileInputStream in = new FileInputStream(filename)) {\n            in.read(magic);\n        }\n        catch (Exception e) {\n            return null;\n        }\n        return magic;\n    }", "url": "https://raw.githubusercontent.com/kemusiro/jr100-emulator-v2/master/src/jp/asamomiji/emulator/file/DataFile.java", "stars": "4", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 61157, "method_name": "isProgFile", "class_name": "DataFile", "params": ["File"], "throws": null, "modifiers": ["public", "static"], "return_type": "boolean", "snippet": "    public static boolean isProgFile(File f) {\n        String ext = getExtension(f.getName());\n        if (ext != null && ext.equals(\"prg\")) {\n            return true;\n        }\n        else {\n            byte[] magic = readMagic(f.getName());\n            if (magic == null) {\n                return false;\n            }\n            if (magic[0] == (byte)0x50 &&   /* 'P' */\n                    magic[1] == (byte)0x52 &&   /* 'R' */\n                    magic[2] == (byte)0x4f &&   /* 'O' */\n                    magic[3] == (byte)0x47) {   /* 'G' */\n                return true;\n            }\n        }\n        return false;\n    }", "url": "https://raw.githubusercontent.com/kemusiro/jr100-emulator-v2/master/src/jp/asamomiji/emulator/file/DataFile.java", "stars": "4", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 61158, "method_name": "isBasicTextFile", "class_name": "DataFile", "params": ["File"], "throws": null, "modifiers": ["public", "static"], "return_type": "boolean", "snippet": "    public static boolean isBasicTextFile(File f) {\n        String ext = getExtension(f.getName());\n        if (ext != null && (ext.equals(\"txt\") || ext.equals(\"bas\"))) {\n            return true;\n        }\n        else {\n            return false;\n        }\n    }", "url": "https://raw.githubusercontent.com/kemusiro/jr100-emulator-v2/master/src/jp/asamomiji/emulator/file/DataFile.java", "stars": "4", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 61159, "method_name": "initComponents", "class_name": "FoodOrder", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void initComponents() {\n\n        jFrame1 = new javax.swing.JFrame();\n        jPanel5 = new javax.swing.JPanel();\n        jPanel6 = new javax.swing.JPanel();\n        jPanel1 = new javax.swing.JPanel();\n        jchkboxSpizza = new javax.swing.JCheckBox();\n        jchkboxMpizza = new javax.swing.JCheckBox();\n        jchkboxLpizza = new javax.swing.JCheckBox();\n        jtxtfieldMeal = new javax.swing.JTextField();\n        jtxtfieldSmall = new javax.swing.JTextField();\n        jtxtfieldMedium = new javax.swing.JTextField();\n        jtxtfieldLarge = new javax.swing.JTextField();\n        jtxtfieldSmallP = new javax.swing.JTextField();\n        jtxtfieldMediumP = new javax.swing.JTextField();\n        jtxtfieldLargeP = new javax.swing.JTextField();\n        jLabel1 = new javax.swing.JLabel();\n        jLabel2 = new javax.swing.JLabel();\n        jPanel2 = new javax.swing.JPanel();\n        jtxtfieldDrink = new javax.swing.JTextField();\n        jchkboxCoca = new javax.swing.JCheckBox();\n        jchkboxThums = new javax.swing.JCheckBox();\n        jchkboxSprite = new javax.swing.JCheckBox();\n        jtxtfieldCoca = new javax.swing.JTextField();\n        jtxtfieldSprite = new javax.swing.JTextField();\n        jtxtfieldThums = new javax.swing.JTextField();\n        jtxtfieldCocaP = new javax.swing.JTextField();\n        jtxtfieldThumsP = new javax.swing.JTextField();\n        jtxtfieldSpriteP = new javax.swing.JTextField();\n        jLabel3 = new javax.swing.JLabel();\n        jLabel4 = new javax.swing.JLabel();\n        jPanel3 = new javax.swing.JPanel();\n        jbtnTotal = new javax.swing.JButton();\n        jbtnOrder = new javax.swing.JButton();\n        jbtnReceipt = new javax.swing.JButton();\n        jbtnReset = new javax.swing.JButton();\n        jbtnExit = new javax.swing.JButton();\n        jPanel4 = new javax.swing.JPanel();\n        jtxtfieldSub = new javax.swing.JTextField();\n        jlableSub = new javax.swing.JLabel();\n        jlableSub1 = new javax.swing.JLabel();\n        jlableSub2 = new javax.swing.JLabel();\n        jtxtfieldTax = new javax.swing.JTextField();\n        jtxtfieldTotal = new javax.swing.JTextField();\n        jtxtfieldStatus = new javax.swing.JTextField();\n        jScrollPane2 = new javax.swing.JScrollPane();\n        jtxtfieldReceipt = new javax.swing.JTextArea();\n        jTextField1 = new javax.swing.JTextField();\n        jScrollPane1 = new javax.swing.JScrollPane();\n        jTextArea1 = new javax.swing.JTextArea();\n\n        javax.swing.GroupLayout jFrame1Layout = new javax.swing.GroupLayout(jFrame1.getContentPane());\n        jFrame1.getContentPane().setLayout(jFrame1Layout);\n        jFrame1Layout.setHorizontalGroup(\n            jFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n            .addGap(0, 400, Short.MAX_VALUE)\n        );\n        jFrame1Layout.setVerticalGroup(\n            jFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n            .addGap(0, 300, Short.MAX_VALUE)\n        );\n\n        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);\n        jPanel5.setLayout(jPanel5Layout);\n        jPanel5Layout.setHorizontalGroup(\n            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n            .addGap(0, 100, Short.MAX_VALUE)\n        );\n        jPanel5Layout.setVerticalGroup(\n            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n            .addGap(0, 100, Short.MAX_VALUE)\n        );\n\n        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);\n        jPanel6.setLayout(jPanel6Layout);\n        jPanel6Layout.setHorizontalGroup(\n            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n            .addGap(0, 100, Short.MAX_VALUE)\n        );\n        jPanel6Layout.setVerticalGroup(\n            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n            .addGap(0, 100, Short.MAX_VALUE)\n        );\n\n        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);\n        setTitle(\"Order Your Food\");\n\n        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));\n\n        jchkboxSpizza.setFont(new java.awt.Font(\"Tahoma\", 1, 18)); // NOI18N\n        jchkboxSpizza.setText(\"Small Pizaa\");\n        jchkboxSpizza.addActionListener(new java.awt.event.ActionListener() {\n            public void actionPerformed(java.awt.event.ActionEvent evt) {\n                jchkboxSpizzaActionPerformed(evt);\n            }\n        });\n\n        jchkboxMpizza.setFont(new java.awt.Font(\"Tahoma\", 1, 18)); // NOI18N\n        jchkboxMpizza.setText(\"Medium Pizza\");\n        jchkboxMpizza.addActionListener(new java.awt.event.ActionListener() {\n            public void actionPerformed(java.awt.event.ActionEvent evt) {\n                jchkboxMpizzaActionPerformed(evt);\n            }\n        });\n\n        jchkboxLpizza.setFont(new java.awt.Font(\"Tahoma\", 1, 18)); // NOI18N\n        jchkboxLpizza.setText(\"Large Pizza\");\n        jchkboxLpizza.setToolTipText(\"\");\n\n        jtxtfieldMeal.setEditable(false);\n        jtxtfieldMeal.setBackground(new java.awt.Color(255, 255, 102));\n        jtxtfieldMeal.setFont(new java.awt.Font(\"Tahoma\", 1, 28)); // NOI18N\n        jtxtfieldMeal.setHorizontalAlignment(javax.swing.JTextField.CENTER);\n        jtxtfieldMeal.setText(\"Meal Section\");\n        jtxtfieldMeal.addActionListener(new java.awt.event.ActionListener() {\n            public void actionPerformed(java.awt.event.ActionEvent evt) {\n                jtxtfieldMealActionPerformed(evt);\n            }\n        });\n\n        jtxtfieldSmall.setFont(new java.awt.Font(\"Tahoma\", 1, 18)); // NOI18N\n        jtxtfieldSmall.setHorizontalAlignment(javax.swing.JTextField.RIGHT);\n        jtxtfieldSmall.addFocusListener(new java.awt.event.FocusAdapter() {\n            public void focusGained(java.awt.event.FocusEvent evt) {\n                jtxtfieldSmallFocusGained(evt);\n            }\n            public void focusLost(java.awt.event.FocusEvent evt) {\n                jtxtfieldSmallFocusLost(evt);\n            }\n        });\n        jtxtfieldSmall.addActionListener(new java.awt.event.ActionListener() {\n            public void actionPerformed(java.awt.event.ActionEvent evt) {\n                jtxtfieldSmallActionPerformed(evt);\n            }\n        });\n        jtxtfieldSmall.addKeyListener(new java.awt.event.KeyAdapter() {\n            public void keyPressed(java.awt.event.KeyEvent evt) {\n                jtxtfieldSmallKeyPressed(evt);\n            }\n        });\n\n        jtxtfieldMedium.setFont(new java.awt.Font(\"Tahoma\", 1, 18)); // NOI18N\n        jtxtfieldMedium.setHorizontalAlignment(javax.swing.JTextField.RIGHT);\n        jtxtfieldMedium.addFocusListener(new java.awt.event.FocusAdapter() {\n            public void focusGained(java.awt.event.FocusEvent evt) {\n                jtxtfieldMediumFocusGained(evt);\n            }\n            public void focusLost(java.awt.event.FocusEvent evt) {\n                jtxtfieldMediumFocusLost(evt);\n            }\n        });\n        jtxtfieldMedium.addActionListener(new java.awt.event.ActionListener() {\n            public void actionPerformed(java.awt.event.ActionEvent evt) {\n                jtxtfieldMediumActionPerformed(evt);\n            }\n        });\n        jtxtfieldMedium.addKeyListener(new java.awt.event.KeyAdapter() {\n            public void keyPressed(java.awt.event.KeyEvent evt) {\n                jtxtfieldMediumKeyPressed(evt);\n            }\n        });\n\n        jtxtfieldLarge.setFont(new java.awt.Font(\"Tahoma\", 1, 18)); // NOI18N\n        jtxtfieldLarge.setHorizontalAlignment(javax.swing.JTextField.RIGHT);\n        jtxtfieldLarge.addFocusListener(new java.awt.event.FocusAdapter() {\n            public void focusGained(java.awt.event.FocusEvent evt) {\n                jtxtfieldLargeFocusGained(evt);\n            }\n            public void focusLost(java.awt.event.FocusEvent evt) {\n                jtxtfieldLargeFocusLost(evt);\n            }\n        });\n        jtxtfieldLarge.addKeyListener(new java.awt.event.KeyAdapter() {\n            public void keyPressed(java.awt.event.KeyEvent evt) {\n                jtxtfieldLargeKeyPressed(evt);\n            }\n        });\n\n        jtxtfieldSmallP.setFont(new java.awt.Font(\"Tahoma\", 1, 18)); // NOI18N\n        jtxtfieldSmallP.setHorizontalAlignment(javax.swing.JTextField.RIGHT);\n        jtxtfieldSmallP.addActionListener(new java.awt.event.ActionListener() {\n            public void actionPerformed(java.awt.event.ActionEvent evt) {\n                jtxtfieldSmallPActionPerformed(evt);\n            }\n        });\n\n        jtxtfieldMediumP.setFont(new java.awt.Font(\"Tahoma\", 1, 18)); // NOI18N\n        jtxtfieldMediumP.setHorizontalAlignment(javax.swing.JTextField.RIGHT);\n        jtxtfieldMediumP.addFocusListener(new java.awt.event.FocusAdapter() {\n            public void focusLost(java.awt.event.FocusEvent evt) {\n                jtxtfieldMediumPFocusLost(evt);\n            }\n        });\n        jtxtfieldMediumP.addActionListener(new java.awt.event.ActionListener() {\n            public void actionPerformed(java.awt.event.ActionEvent evt) {\n                jtxtfieldMediumPActionPerformed(evt);\n            }\n        });\n\n        jtxtfieldLargeP.setFont(new java.awt.Font(\"Tahoma\", 1, 18)); // NOI18N\n        jtxtfieldLargeP.setHorizontalAlignment(javax.swing.JTextField.RIGHT);\n        jtxtfieldLargeP.addActionListener(new java.awt.event.ActionListener() {\n            public void actionPerformed(java.awt.event.ActionEvent evt) {\n                jtxtfieldLargePActionPerformed(evt);\n            }\n        });\n\n        jLabel1.setFont(new java.awt.Font(\"Tahoma\", 1, 18)); // NOI18N\n        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);\n        jLabel1.setText(\"Quantity\");\n\n        jLabel2.setFont(new java.awt.Font(\"Tahoma\", 1, 18)); // NOI18N\n        jLabel2.setText(\"Price\");\n\n        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);\n        jPanel1.setLayout(jPanel1Layout);\n        jPanel1Layout.setHorizontalGroup(\n            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n            .addGroup(jPanel1Layout.createSequentialGroup()\n                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)\n                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()\n                        .addGap(18, 18, 18)\n                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n                            .addGroup(jPanel1Layout.createSequentialGroup()\n                                .addComponent(jchkboxLpizza, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE)\n                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)\n                                .addComponent(jtxtfieldLarge, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)\n                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)\n                                .addComponent(jtxtfieldLargeP, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE))\n                            .addGroup(jPanel1Layout.createSequentialGroup()\n                                .addGap(0, 0, Short.MAX_VALUE)\n                                .addComponent(jchkboxMpizza, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE)\n                                .addGap(8, 8, 8)\n                                .addComponent(jtxtfieldMedium, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)\n                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)\n                                .addComponent(jtxtfieldMediumP, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE))))\n                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()\n                        .addGap(19, 19, 19)\n                        .addComponent(jchkboxSpizza, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE)\n                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)\n                        .addComponent(jtxtfieldSmall, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)\n                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)\n                        .addComponent(jtxtfieldSmallP, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE))\n                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()\n                        .addGap(59, 59, 59)\n                        .addComponent(jtxtfieldMeal, javax.swing.GroupLayout.PREFERRED_SIZE, 322, javax.swing.GroupLayout.PREFERRED_SIZE)\n                        .addGap(0, 0, Short.MAX_VALUE)))\n                .addContainerGap())\n            .addGroup(jPanel1Layout.createSequentialGroup()\n                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)\n                .addComponent(jLabel1)\n                .addGap(56, 56, 56)\n                .addComponent(jLabel2)\n                .addGap(45, 45, 45))\n        );\n        jPanel1Layout.setVerticalGroup(\n            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n            .addGroup(jPanel1Layout.createSequentialGroup()\n                .addContainerGap()\n                .addComponent(jtxtfieldMeal, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)\n                .addGap(51, 51, 51)\n                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)\n                    .addComponent(jLabel1)\n                    .addComponent(jLabel2))\n                .addGap(18, 18, 18)\n                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)\n                    .addComponent(jchkboxSpizza)\n                    .addComponent(jtxtfieldSmall, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)\n                    .addComponent(jtxtfieldSmallP, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))\n                .addGap(63, 63, 63)\n                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)\n                    .addComponent(jchkboxMpizza)\n                    .addComponent(jtxtfieldMedium, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)\n                    .addComponent(jtxtfieldMediumP, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))\n                .addGap(70, 70, 70)\n                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)\n                    .addComponent(jchkboxLpizza)\n                    .addComponent(jtxtfieldLarge, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)\n                    .addComponent(jtxtfieldLargeP, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))\n                .addContainerGap(86, Short.MAX_VALUE))\n        );\n\n        jPanel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));\n\n        jtxtfieldDrink.setEditable(false);\n        jtxtfieldDrink.setBackground(new java.awt.Color(255, 255, 102));\n        jtxtfieldDrink.setFont(new java.awt.Font(\"Tahoma\", 1, 28)); // NOI18N\n        jtxtfieldDrink.setHorizontalAlignment(javax.swing.JTextField.CENTER);\n        jtxtfieldDrink.setText(\"Drink Section\");\n        jtxtfieldDrink.addActionListener(new java.awt.event.ActionListener() {\n            public void actionPerformed(java.awt.event.ActionEvent evt) {\n                jtxtfieldDrinkActionPerformed(evt);\n            }\n        });\n\n        jchkboxCoca.setFont(new java.awt.Font(\"Tahoma\", 1, 18)); // NOI18N\n        jchkboxCoca.setText(\"Coca Cola\");\n        jchkboxCoca.addActionListener(new java.awt.event.ActionListener() {\n            public void actionPerformed(java.awt.event.ActionEvent evt) {\n                jchkboxCocaActionPerformed(evt);\n            }\n        });\n\n        jchkboxThums.setFont(new java.awt.Font(\"Tahoma\", 1, 18)); // NOI18N\n        jchkboxThums.setText(\"Thums Up\");\n        jchkboxThums.addActionListener(new java.awt.event.ActionListener() {\n            public void actionPerformed(java.awt.event.ActionEvent evt) {\n                jchkboxThumsActionPerformed(evt);\n            }\n        });\n\n        jchkboxSprite.setFont(new java.awt.Font(\"Tahoma\", 1, 18)); // NOI18N\n        jchkboxSprite.setText(\"Sprite\");\n        jchkboxSprite.addActionListener(new java.awt.event.ActionListener() {\n            public void actionPerformed(java.awt.event.ActionEvent evt) {\n                jchkboxSpriteActionPerformed(evt);\n            }\n        });\n\n        jtxtfieldCoca.setFont(new java.awt.Font(\"Tahoma\", 1, 18)); // NOI18N\n        jtxtfieldCoca.setHorizontalAlignment(javax.swing.JTextField.RIGHT);\n        jtxtfieldCoca.addFocusListener(new java.awt.event.FocusAdapter() {\n            public void focusGained(java.awt.event.FocusEvent evt) {\n                jtxtfieldCocaFocusGained(evt);\n            }\n            public void focusLost(java.awt.event.FocusEvent evt) {\n                jtxtfieldCocaFocusLost(evt);\n            }\n        });\n        jtxtfieldCoca.addActionListener(new java.awt.event.ActionListener() {\n            public void actionPerformed(java.awt.event.ActionEvent evt) {\n                jtxtfieldCocaActionPerformed(evt);\n            }\n        });\n        jtxtfieldCoca.addKeyListener(new java.awt.event.KeyAdapter() {\n            public void keyPressed(java.awt.event.KeyEvent evt) {\n                jtxtfieldCocaKeyPressed(evt);\n            }\n        });\n\n        jtxtfieldSprite.setFont(new java.awt.Font(\"Tahoma\", 1, 18)); // NOI18N\n        jtxtfieldSprite.setHorizontalAlignment(javax.swing.JTextField.RIGHT);\n        jtxtfieldSprite.addFocusListener(new java.awt.event.FocusAdapter() {\n            public void focusGained(java.awt.event.FocusEvent evt) {\n                jtxtfieldSpriteFocusGained(evt);\n            }\n            public void focusLost(java.awt.event.FocusEvent evt) {\n                jtxtfieldSpriteFocusLost(evt);\n            }\n        });\n        jtxtfieldSprite.addActionListener(new java.awt.event.ActionListener() {\n            public void actionPerformed(java.awt.event.ActionEvent evt) {\n                jtxtfieldSpriteActionPerformed(evt);\n            }\n        });\n        jtxtfieldSprite.addKeyListener(new java.awt.event.KeyAdapter() {\n            public void keyPressed(java.awt.event.KeyEvent evt) {\n                jtxtfieldSpriteKeyPressed(evt);\n            }\n        });\n\n        jtxtfieldThums.setFont(new java.awt.Font(\"Tahoma\", 1, 18)); // NOI18N\n        jtxtfieldThums.setHorizontalAlignment(javax.swing.JTextField.RIGHT);\n        jtxtfieldThums.addFocusListener(new java.awt.event.FocusAdapter() {\n            public void focusGained(java.awt.event.FocusEvent evt) {\n                jtxtfieldThumsFocusGained(evt);\n            }\n            public void focusLost(java.awt.event.FocusEvent evt) {\n                jtxtfieldThumsFocusLost(evt);\n            }\n        });\n        jtxtfieldThums.addActionListener(new java.awt.event.ActionListener() {\n            public void actionPerformed(java.awt.event.ActionEvent evt) {\n                jtxtfieldThumsActionPerformed(evt);\n            }\n        });\n        jtxtfieldThums.addKeyListener(new java.awt.event.KeyAdapter() {\n            public void keyPressed(java.awt.event.KeyEvent evt) {\n                jtxtfieldThumsKeyPressed(evt);\n            }\n        });\n\n        jtxtfieldCocaP.setFont(new java.awt.Font(\"Tahoma\", 1, 18)); // NOI18N\n        jtxtfieldCocaP.setHorizontalAlignment(javax.swing.JTextField.RIGHT);\n        jtxtfieldCocaP.addActionListener(new java.awt.event.ActionListener() {\n            public void actionPerformed(java.awt.event.ActionEvent evt) {\n                jtxtfieldCocaPActionPerformed(evt);\n            }\n        });\n\n        jtxtfieldThumsP.setFont(new java.awt.Font(\"Tahoma\", 1, 18)); // NOI18N\n        jtxtfieldThumsP.setHorizontalAlignment(javax.swing.JTextField.RIGHT);\n        jtxtfieldThumsP.addActionListener(new java.awt.event.ActionListener() {\n            public void actionPerformed(java.awt.event.ActionEvent evt) {\n                jtxtfieldThumsPActionPerformed(evt);\n            }\n        });\n\n        jtxtfieldSpriteP.setFont(new java.awt.Font(\"Tahoma\", 1, 18)); // NOI18N\n        jtxtfieldSpriteP.setHorizontalAlignment(javax.swing.JTextField.RIGHT);\n        jtxtfieldSpriteP.addActionListener(new java.awt.event.ActionListener() {\n            public void actionPerformed(java.awt.event.ActionEvent evt) {\n                jtxtfieldSpritePActionPerformed(evt);\n            }\n        });\n\n        jLabel3.setFont(new java.awt.Font(\"Tahoma\", 1, 18)); // NOI18N\n        jLabel3.setText(\"Quantity\");\n\n        jLabel4.setFont(new java.awt.Font(\"Tahoma\", 1, 18)); // NOI18N\n        jLabel4.setText(\"Price\");\n\n        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);\n        jPanel2.setLayout(jPanel2Layout);\n        jPanel2Layout.setHorizontalGroup(\n            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n            .addGroup(jPanel2Layout.createSequentialGroup()\n                .addGap(25, 25, 25)\n                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)\n                    .addGroup(jPanel2Layout.createSequentialGroup()\n                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n                            .addGroup(jPanel2Layout.createSequentialGroup()\n                                .addComponent(jchkboxThums, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)\n                                .addGap(0, 0, Short.MAX_VALUE))\n                            .addComponent(jchkboxSprite, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))\n                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)\n                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n                            .addGroup(jPanel2Layout.createSequentialGroup()\n                                .addComponent(jtxtfieldSprite, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)\n                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)\n                                .addComponent(jtxtfieldSpriteP, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE))\n                            .addGroup(jPanel2Layout.createSequentialGroup()\n                                .addComponent(jtxtfieldThums, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)\n                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)\n                                .addComponent(jtxtfieldThumsP, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE))))\n                    .addGroup(jPanel2Layout.createSequentialGroup()\n                        .addComponent(jchkboxCoca)\n                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)\n                        .addComponent(jtxtfieldCoca, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)\n                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)\n                        .addComponent(jtxtfieldCocaP, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)))\n                .addGap(68, 68, 68))\n            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()\n                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)\n                .addComponent(jLabel3)\n                .addGap(61, 61, 61)\n                .addComponent(jLabel4)\n                .addGap(101, 101, 101))\n            .addGroup(jPanel2Layout.createSequentialGroup()\n                .addGap(65, 65, 65)\n                .addComponent(jtxtfieldDrink, javax.swing.GroupLayout.PREFERRED_SIZE, 334, javax.swing.GroupLayout.PREFERRED_SIZE)\n                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))\n        );\n        jPanel2Layout.setVerticalGroup(\n            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n            .addGroup(jPanel2Layout.createSequentialGroup()\n                .addContainerGap()\n                .addComponent(jtxtfieldDrink, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)\n                .addGap(54, 54, 54)\n                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)\n                    .addComponent(jLabel3)\n                    .addComponent(jLabel4))\n                .addGap(18, 18, 18)\n                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)\n                    .addComponent(jchkboxCoca)\n                    .addComponent(jtxtfieldCoca, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)\n                    .addComponent(jtxtfieldCocaP, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))\n                .addGap(62, 62, 62)\n                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)\n                    .addComponent(jchkboxThums)\n                    .addComponent(jtxtfieldThums, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)\n                    .addComponent(jtxtfieldThumsP, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))\n                .addGap(66, 66, 66)\n                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)\n                    .addComponent(jtxtfieldSprite, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)\n                    .addComponent(jtxtfieldSpriteP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)\n                    .addComponent(jchkboxSprite))\n                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))\n        );\n\n        jbtnTotal.setFont(new java.awt.Font(\"Tahoma\", 1, 18)); // NOI18N\n        jbtnTotal.setText(\"Total\");\n        jbtnTotal.addMouseListener(new java.awt.event.MouseAdapter() {\n            public void mouseClicked(java.awt.event.MouseEvent evt) {\n                jbtnTotalMouseClicked(evt);\n            }\n        });\n        jbtnTotal.addActionListener(new java.awt.event.ActionListener() {\n            public void actionPerformed(java.awt.event.ActionEvent evt) {\n                jbtnTotalActionPerformed(evt);\n            }\n        });\n\n        jbtnOrder.setFont(new java.awt.Font(\"Tahoma\", 1, 18)); // NOI18N\n        jbtnOrder.setText(\"Order\");\n        jbtnOrder.addMouseListener(new java.awt.event.MouseAdapter() {\n            public void mouseClicked(java.awt.event.MouseEvent evt) {\n                jbtnOrderMouseClicked(evt);\n            }\n        });\n        jbtnOrder.addActionListener(new java.awt.event.ActionListener() {\n            public void actionPerformed(java.awt.event.ActionEvent evt) {\n                jbtnOrderActionPerformed(evt);\n            }\n        });\n\n        jbtnReceipt.setFont(new java.awt.Font(\"Tahoma\", 1, 18)); // NOI18N\n        jbtnReceipt.setText(\"Receipt\");\n        jbtnReceipt.addMouseListener(new java.awt.event.MouseAdapter() {\n            public void mouseClicked(java.awt.event.MouseEvent evt) {\n                jbtnReceiptMouseClicked(evt);\n            }\n        });\n\n        jbtnReset.setFont(new java.awt.Font(\"Tahoma\", 1, 18)); // NOI18N\n        jbtnReset.setText(\"Reset\");\n        jbtnReset.addMouseListener(new java.awt.event.MouseAdapter() {\n            public void mouseClicked(java.awt.event.MouseEvent evt) {\n                jbtnResetMouseClicked(evt);\n            }\n        });\n        jbtnReset.addActionListener(new java.awt.event.ActionListener() {\n            public void actionPerformed(java.awt.event.ActionEvent evt) {\n                jbtnResetActionPerformed(evt);\n            }\n        });\n\n        jbtnExit.setFont(new java.awt.Font(\"Tahoma\", 1, 18)); // NOI18N\n        jbtnExit.setText(\"Exit\");\n        jbtnExit.addActionListener(new java.awt.event.ActionListener() {\n            public void actionPerformed(java.awt.event.ActionEvent evt) {\n                jbtnExitActionPerformed(evt);\n            }\n        });\n\n        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);\n        jPanel3.setLayout(jPanel3Layout);\n        jPanel3Layout.setHorizontalGroup(\n            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n            .addGroup(jPanel3Layout.createSequentialGroup()\n                .addGap(24, 24, 24)\n                .addComponent(jbtnTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)\n                .addGap(72, 72, 72)\n                .addComponent(jbtnReceipt, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)\n                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 80, Short.MAX_VALUE)\n                .addComponent(jbtnOrder, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)\n                .addGap(68, 68, 68)\n                .addComponent(jbtnReset, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)\n                .addGap(76, 76, 76)\n                .addComponent(jbtnExit, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)\n                .addGap(31, 31, 31))\n        );\n        jPanel3Layout.setVerticalGroup(\n            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n            .addGroup(jPanel3Layout.createSequentialGroup()\n                .addContainerGap()\n                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)\n                    .addComponent(jbtnReceipt, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)\n                    .addComponent(jbtnReset, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)\n                    .addComponent(jbtnExit, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)\n                    .addComponent(jbtnTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)\n                    .addComponent(jbtnOrder, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE))\n                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))\n        );\n\n        jPanel4.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));\n\n        jtxtfieldSub.setFont(new java.awt.Font(\"Tahoma\", 1, 18)); // NOI18N\n        jtxtfieldSub.setHorizontalAlignment(javax.swing.JTextField.RIGHT);\n        jtxtfieldSub.addActionListener(new java.awt.event.ActionListener() {\n            public void actionPerformed(java.awt.event.ActionEvent evt) {\n                jtxtfieldSubActionPerformed(evt);\n            }\n        });\n\n        jlableSub.setFont(new java.awt.Font(\"Tahoma\", 1, 18)); // NOI18N\n        jlableSub.setText(\"Sub Total :\");\n\n        jlableSub1.setFont(new java.awt.Font(\"Tahoma\", 1, 18)); // NOI18N\n        jlableSub1.setText(\"TAX :\");\n\n        jlableSub2.setFont(new java.awt.Font(\"Tahoma\", 1, 18)); // NOI18N\n        jlableSub2.setText(\"Total :\");\n\n        jtxtfieldTax.setFont(new java.awt.Font(\"Tahoma\", 1, 18)); // NOI18N\n        jtxtfieldTax.setHorizontalAlignment(javax.swing.JTextField.RIGHT);\n        jtxtfieldTax.addActionListener(new java.awt.event.ActionListener() {\n            public void actionPerformed(java.awt.event.ActionEvent evt) {\n                jtxtfieldTaxActionPerformed(evt);\n            }\n        });\n\n        jtxtfieldTotal.setFont(new java.awt.Font(\"Tahoma\", 1, 18)); // NOI18N\n        jtxtfieldTotal.setHorizontalAlignment(javax.swing.JTextField.RIGHT);\n        jtxtfieldTotal.addActionListener(new java.awt.event.ActionListener() {\n            public void actionPerformed(java.awt.event.ActionEvent evt) {\n                jtxtfieldTotalActionPerformed(evt);\n            }\n        });\n\n        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);\n        jPanel4.setLayout(jPanel4Layout);\n        jPanel4Layout.setHorizontalGroup(\n            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n            .addGroup(jPanel4Layout.createSequentialGroup()\n                .addContainerGap()\n                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n                    .addComponent(jlableSub)\n                    .addComponent(jlableSub1)\n                    .addComponent(jlableSub2))\n                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)\n                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)\n                    .addComponent(jtxtfieldTax, javax.swing.GroupLayout.DEFAULT_SIZE, 106, Short.MAX_VALUE)\n                    .addComponent(jtxtfieldSub)\n                    .addComponent(jtxtfieldTotal))\n                .addContainerGap())\n        );\n        jPanel4Layout.setVerticalGroup(\n            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n            .addGroup(jPanel4Layout.createSequentialGroup()\n                .addContainerGap()\n                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)\n                    .addComponent(jlableSub, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)\n                    .addComponent(jtxtfieldSub, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE))\n                .addGap(30, 30, 30)\n                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)\n                    .addComponent(jtxtfieldTax, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)\n                    .addComponent(jlableSub1, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE))\n                .addGap(34, 34, 34)\n                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)\n                    .addComponent(jlableSub2, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)\n                    .addComponent(jtxtfieldTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE))\n                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))\n        );\n\n        jtxtfieldStatus.setFont(new java.awt.Font(\"Tahoma\", 2, 18)); // NOI18N\n        jtxtfieldStatus.setHorizontalAlignment(javax.swing.JTextField.CENTER);\n        jtxtfieldStatus.addActionListener(new java.awt.event.ActionListener() {\n            public void actionPerformed(java.awt.event.ActionEvent evt) {\n                jtxtfieldStatusActionPerformed(evt);\n            }\n        });\n\n        jtxtfieldReceipt.setEditable(false);\n        jtxtfieldReceipt.setColumns(15);\n        jtxtfieldReceipt.setRows(5);\n        jScrollPane2.setViewportView(jtxtfieldReceipt);\n\n        jTextField1.setBackground(new java.awt.Color(255, 255, 102));\n        jTextField1.setFont(new java.awt.Font(\"Tahoma\", 1, 18)); // NOI18N\n        jTextField1.setHorizontalAlignment(javax.swing.JTextField.CENTER);\n        jTextField1.setText(\"Price List\");\n        jTextField1.addActionListener(new java.awt.event.ActionListener() {\n            public void actionPerformed(java.awt.event.ActionEvent evt) {\n                jTextField1ActionPerformed(evt);\n            }\n        });\n\n        jTextArea1.setColumns(11);\n        jTextArea1.setFont(new java.awt.Font(\"DejaVu Serif\", 1, 16)); // NOI18N\n        jTextArea1.setRows(20);\n        jTextArea1.setText(\"\\n\\n\\n   Product             Rs.\\n\\nSmall Pizza      149.00\\n\\nMedium Pizza   299.00\\n\\nLarge Pizza      499.00\\n\\nCoca Cola        40.00\\n\\nThums Up        40.00\\n\\nSprite              40.00\");\n        jScrollPane1.setViewportView(jTextArea1);\n\n        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());\n        getContentPane().setLayout(layout);\n        layout.setHorizontalGroup(\n            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n            .addGroup(layout.createSequentialGroup()\n                .addContainerGap()\n                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)\n                    .addGroup(layout.createSequentialGroup()\n                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)\n                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)\n                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 468, javax.swing.GroupLayout.PREFERRED_SIZE))\n                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))\n                .addGap(16, 16, 16)\n                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n                    .addGroup(layout.createSequentialGroup()\n                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)\n                            .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)\n                            .addComponent(jScrollPane2))\n                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)\n                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n                            .addComponent(jTextField1)\n                            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 228, Short.MAX_VALUE)))\n                    .addComponent(jtxtfieldStatus))\n                .addContainerGap())\n        );\n        layout.setVerticalGroup(\n            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n            .addGroup(layout.createSequentialGroup()\n                .addContainerGap()\n                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)\n                    .addGroup(layout.createSequentialGroup()\n                        .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)\n                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)\n                        .addComponent(jScrollPane2))\n                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)\n                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)\n                    .addGroup(layout.createSequentialGroup()\n                        .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)\n                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)\n                        .addComponent(jScrollPane1)))\n                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 9, Short.MAX_VALUE)\n                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)\n                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)\n                    .addComponent(jtxtfieldStatus))\n                .addContainerGap())\n        );\n\n        pack();\n    }", "url": "https://raw.githubusercontent.com/priyanksondagar/Food-Ordering-System/master/FoodOrder.java", "stars": "1", "class_props": {"extends": "javax", "implements": null, "modifiers": ["public"]}}, {"id": 61160, "method_name": "jbtnTotalActionPerformed", "class_name": "FoodOrder", "params": ["java"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void jbtnTotalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnTotalActionPerformed\n        // TODO add your handling code here:\n    }", "url": "https://raw.githubusercontent.com/priyanksondagar/Food-Ordering-System/master/FoodOrder.java", "stars": "1", "class_props": {"extends": "javax", "implements": null, "modifiers": ["public"]}}, {"id": 61161, "method_name": "jchkboxMpizzaActionPerformed", "class_name": "FoodOrder", "params": ["java"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void jchkboxMpizzaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jchkboxMpizzaActionPerformed\n        // TODO add your handling code here:\n    }", "url": "https://raw.githubusercontent.com/priyanksondagar/Food-Ordering-System/master/FoodOrder.java", "stars": "1", "class_props": {"extends": "javax", "implements": null, "modifiers": ["public"]}}, {"id": 61162, "method_name": "jchkboxSpizzaActionPerformed", "class_name": "FoodOrder", "params": ["java"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void jchkboxSpizzaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jchkboxSpizzaActionPerformed\n\n    }", "url": "https://raw.githubusercontent.com/priyanksondagar/Food-Ordering-System/master/FoodOrder.java", "stars": "1", "class_props": {"extends": "javax", "implements": null, "modifiers": ["public"]}}, {"id": 61163, "method_name": "jchkboxCocaActionPerformed", "class_name": "FoodOrder", "params": ["java"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void jchkboxCocaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jchkboxCocaActionPerformed\n        // TODO add your handling code here:\n    }", "url": "https://raw.githubusercontent.com/priyanksondagar/Food-Ordering-System/master/FoodOrder.java", "stars": "1", "class_props": {"extends": "javax", "implements": null, "modifiers": ["public"]}}, {"id": 61164, "method_name": "jchkboxThumsActionPerformed", "class_name": "FoodOrder", "params": ["java"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void jchkboxThumsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jchkboxThumsActionPerformed\n        // TODO add your handling code here:\n    }", "url": "https://raw.githubusercontent.com/priyanksondagar/Food-Ordering-System/master/FoodOrder.java", "stars": "1", "class_props": {"extends": "javax", "implements": null, "modifiers": ["public"]}}, {"id": 61165, "method_name": "jchkboxSpriteActionPerformed", "class_name": "FoodOrder", "params": ["java"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void jchkboxSpriteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jchkboxSpriteActionPerformed\n        // TODO add your handling code here:\n    }", "url": "https://raw.githubusercontent.com/priyanksondagar/Food-Ordering-System/master/FoodOrder.java", "stars": "1", "class_props": {"extends": "javax", "implements": null, "modifiers": ["public"]}}, {"id": 61166, "method_name": "jtxtfieldDrinkActionPerformed", "class_name": "FoodOrder", "params": ["java"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void jtxtfieldDrinkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtxtfieldDrinkActionPerformed\n        // TODO add your handling code here:\n    }", "url": "https://raw.githubusercontent.com/priyanksondagar/Food-Ordering-System/master/FoodOrder.java", "stars": "1", "class_props": {"extends": "javax", "implements": null, "modifiers": ["public"]}}, {"id": 61167, "method_name": "jtxtfieldSubActionPerformed", "class_name": "FoodOrder", "params": ["java"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void jtxtfieldSubActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtxtfieldSubActionPerformed\n        // TODO add your handling code here:\n    }", "url": "https://raw.githubusercontent.com/priyanksondagar/Food-Ordering-System/master/FoodOrder.java", "stars": "1", "class_props": {"extends": "javax", "implements": null, "modifiers": ["public"]}}, {"id": 61168, "method_name": "jtxtfieldTaxActionPerformed", "class_name": "FoodOrder", "params": ["java"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void jtxtfieldTaxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtxtfieldTaxActionPerformed\n        // TODO add your handling code here:\n    }", "url": "https://raw.githubusercontent.com/priyanksondagar/Food-Ordering-System/master/FoodOrder.java", "stars": "1", "class_props": {"extends": "javax", "implements": null, "modifiers": ["public"]}}, {"id": 61169, "method_name": "jtxtfieldTotalActionPerformed", "class_name": "FoodOrder", "params": ["java"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void jtxtfieldTotalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtxtfieldTotalActionPerformed\n        // TODO add your handling code here:\n    }", "url": "https://raw.githubusercontent.com/priyanksondagar/Food-Ordering-System/master/FoodOrder.java", "stars": "1", "class_props": {"extends": "javax", "implements": null, "modifiers": ["public"]}}, {"id": 61170, "method_name": "jtxtfieldThumsActionPerformed", "class_name": "FoodOrder", "params": ["java"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void jtxtfieldThumsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtxtfieldThumsActionPerformed\n        // TODO add your handling code here:\n    }", "url": "https://raw.githubusercontent.com/priyanksondagar/Food-Ordering-System/master/FoodOrder.java", "stars": "1", "class_props": {"extends": "javax", "implements": null, "modifiers": ["public"]}}, {"id": 61171, "method_name": "jbtnExitActionPerformed", "class_name": "FoodOrder", "params": ["java"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void jbtnExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnExitActionPerformed\n        System.exit(0);\n    }", "url": "https://raw.githubusercontent.com/priyanksondagar/Food-Ordering-System/master/FoodOrder.java", "stars": "1", "class_props": {"extends": "javax", "implements": null, "modifiers": ["public"]}}, {"id": 61172, "method_name": "jbtnResetActionPerformed", "class_name": "FoodOrder", "params": ["java"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void jbtnResetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnResetActionPerformed\n        // TODO add your handling code here:\n    }", "url": "https://raw.githubusercontent.com/priyanksondagar/Food-Ordering-System/master/FoodOrder.java", "stars": "1", "class_props": {"extends": "javax", "implements": null, "modifiers": ["public"]}}, {"id": 61173, "method_name": "jbtnResetMouseClicked", "class_name": "FoodOrder", "params": ["java"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void jbtnResetMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jbtnResetMouseClicked\n    jtxtfieldTotal.setText(null);\n     jtxtfieldCoca.setText(null);\n     jtxtfieldLarge.setText(null);\n     jtxtfieldMedium.setText(null);\n     jtxtfieldSmall.setText(null);\n     jtxtfieldSprite.setText(null);\n     jtxtfieldSub.setText(null);\n     jtxtfieldTax.setText(null);\n     jtxtfieldThums.setText(null);\n     jtxtfieldSmallP.setText(null);\n     jtxtfieldMediumP.setText(null);\n     jtxtfieldLargeP.setText(null);\n     jtxtfieldCocaP.setText(null);\n     jtxtfieldThumsP.setText(null);\n     jtxtfieldSpriteP.setText(null);\n    jchkboxSpizza.setSelected(false);\n    jchkboxMpizza.setSelected(false);\n    jchkboxLpizza.setSelected(false);\n    jchkboxCoca.setSelected(false);\n    jchkboxThums.setSelected(false);      \n    jchkboxSprite.setSelected(false);\n                                   \n                                   \n    }", "url": "https://raw.githubusercontent.com/priyanksondagar/Food-Ordering-System/master/FoodOrder.java", "stars": "1", "class_props": {"extends": "javax", "implements": null, "modifiers": ["public"]}}, {"id": 61174, "method_name": "jtxtfieldCocaActionPerformed", "class_name": "FoodOrder", "params": ["java"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void jtxtfieldCocaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtxtfieldCocaActionPerformed\n        // TODO add your handling code here:\n    }", "url": "https://raw.githubusercontent.com/priyanksondagar/Food-Ordering-System/master/FoodOrder.java", "stars": "1", "class_props": {"extends": "javax", "implements": null, "modifiers": ["public"]}}, {"id": 61175, "method_name": "jtxtfieldCocaPActionPerformed", "class_name": "FoodOrder", "params": ["java"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void jtxtfieldCocaPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtxtfieldCocaPActionPerformed\n        // TODO add your handling code here:\n    }", "url": "https://raw.githubusercontent.com/priyanksondagar/Food-Ordering-System/master/FoodOrder.java", "stars": "1", "class_props": {"extends": "javax", "implements": null, "modifiers": ["public"]}}, {"id": 61176, "method_name": "jtxtfieldThumsPActionPerformed", "class_name": "FoodOrder", "params": ["java"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void jtxtfieldThumsPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtxtfieldThumsPActionPerformed\n        // TODO add your handling code here:\n    }", "url": "https://raw.githubusercontent.com/priyanksondagar/Food-Ordering-System/master/FoodOrder.java", "stars": "1", "class_props": {"extends": "javax", "implements": null, "modifiers": ["public"]}}, {"id": 61177, "method_name": "jtxtfieldSpritePActionPerformed", "class_name": "FoodOrder", "params": ["java"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void jtxtfieldSpritePActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtxtfieldSpritePActionPerformed\n        // TODO add your handling code here:\n    }", "url": "https://raw.githubusercontent.com/priyanksondagar/Food-Ordering-System/master/FoodOrder.java", "stars": "1", "class_props": {"extends": "javax", "implements": null, "modifiers": ["public"]}}, {"id": 61178, "method_name": "jtxtfieldSmallPActionPerformed", "class_name": "FoodOrder", "params": ["java"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void jtxtfieldSmallPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtxtfieldSmallPActionPerformed\n        String EnterNumber=jtxtfieldSmall.getText();\n        double quantity=Double.parseDouble(EnterNumber);\n        double price=quantity*SmallPizza;\n        String Price=String.format(\"%.2f\", price);\n        jtxtfieldSmallP.setText(Price);\n    }", "url": "https://raw.githubusercontent.com/priyanksondagar/Food-Ordering-System/master/FoodOrder.java", "stars": "1", "class_props": {"extends": "javax", "implements": null, "modifiers": ["public"]}}, {"id": 61179, "method_name": "jtxtfieldMediumActionPerformed", "class_name": "FoodOrder", "params": ["java"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void jtxtfieldMediumActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtxtfieldMediumActionPerformed\n        // TODO add your handling code here:\n    }", "url": "https://raw.githubusercontent.com/priyanksondagar/Food-Ordering-System/master/FoodOrder.java", "stars": "1", "class_props": {"extends": "javax", "implements": null, "modifiers": ["public"]}}, {"id": 61180, "method_name": "jtxtfieldLargePActionPerformed", "class_name": "FoodOrder", "params": ["java"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void jtxtfieldLargePActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtxtfieldLargePActionPerformed\n        // TODO add your handling code here:\n    }", "url": "https://raw.githubusercontent.com/priyanksondagar/Food-Ordering-System/master/FoodOrder.java", "stars": "1", "class_props": {"extends": "javax", "implements": null, "modifiers": ["public"]}}, {"id": 61181, "method_name": "jtxtfieldSpriteActionPerformed", "class_name": "FoodOrder", "params": ["java"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void jtxtfieldSpriteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtxtfieldSpriteActionPerformed\n        // TODO add your handling code here:\n    }", "url": "https://raw.githubusercontent.com/priyanksondagar/Food-Ordering-System/master/FoodOrder.java", "stars": "1", "class_props": {"extends": "javax", "implements": null, "modifiers": ["public"]}}, {"id": 61182, "method_name": "jbtnOrderActionPerformed", "class_name": "FoodOrder", "params": ["java"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void jbtnOrderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnOrderActionPerformed\n        \n    }", "url": "https://raw.githubusercontent.com/priyanksondagar/Food-Ordering-System/master/FoodOrder.java", "stars": "1", "class_props": {"extends": "javax", "implements": null, "modifiers": ["public"]}}, {"id": 61183, "method_name": "jtxtfieldMealActionPerformed", "class_name": "FoodOrder", "params": ["java"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void jtxtfieldMealActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtxtfieldMealActionPerformed\n        // TODO add your handling code here:\n    }", "url": "https://raw.githubusercontent.com/priyanksondagar/Food-Ordering-System/master/FoodOrder.java", "stars": "1", "class_props": {"extends": "javax", "implements": null, "modifiers": ["public"]}}, {"id": 61184, "method_name": "jbtnOrderMouseClicked", "class_name": "FoodOrder", "params": ["java"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void jbtnOrderMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jbtnOrderMouseClicked\n        \n        jtxtfieldStatus.setText(\"Order received !!!\");\n    }", "url": "https://raw.githubusercontent.com/priyanksondagar/Food-Ordering-System/master/FoodOrder.java", "stars": "1", "class_props": {"extends": "javax", "implements": null, "modifiers": ["public"]}}, {"id": 61185, "method_name": "jTextField1ActionPerformed", "class_name": "FoodOrder", "params": ["java"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed\n        // TODO add your handling code here:\n    }", "url": "https://raw.githubusercontent.com/priyanksondagar/Food-Ordering-System/master/FoodOrder.java", "stars": "1", "class_props": {"extends": "javax", "implements": null, "modifiers": ["public"]}}, {"id": 61186, "method_name": "jtxtfieldStatusActionPerformed", "class_name": "FoodOrder", "params": ["java"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void jtxtfieldStatusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtxtfieldStatusActionPerformed\n        // TODO add your handling code here:\n    }", "url": "https://raw.githubusercontent.com/priyanksondagar/Food-Ordering-System/master/FoodOrder.java", "stars": "1", "class_props": {"extends": "javax", "implements": null, "modifiers": ["public"]}}, {"id": 61187, "method_name": "jtxtfieldSmallKeyPressed", "class_name": "FoodOrder", "params": ["java"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void jtxtfieldSmallKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtxtfieldSmallKeyPressed\n        String EnterNumber=jtxtfieldSmall.getText();\n        double quantity=Double.parseDouble(EnterNumber);\n        double price=quantity*SmallPizza;\n        String Price=String.format(\"%.2f\", price);\n        jtxtfieldSmallP.setText(Price);\n        jchkboxSpizza.setSelected(true);\n    }", "url": "https://raw.githubusercontent.com/priyanksondagar/Food-Ordering-System/master/FoodOrder.java", "stars": "1", "class_props": {"extends": "javax", "implements": null, "modifiers": ["public"]}}, {"id": 61188, "method_name": "jtxtfieldSmallFocusLost", "class_name": "FoodOrder", "params": ["java"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void jtxtfieldSmallFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtxtfieldSmallFocusLost\n        String EnterNumber=jtxtfieldSmall.getText();\n        double quantity=Double.parseDouble(EnterNumber);\n        double price=quantity*SmallPizza;\n        String Price=String.format(\"%.2f\", price);\n        jtxtfieldSmallP.setText(Price);\n        if(quantity>0)\n        {jchkboxSpizza.setSelected(true);}\n    }", "url": "https://raw.githubusercontent.com/priyanksondagar/Food-Ordering-System/master/FoodOrder.java", "stars": "1", "class_props": {"extends": "javax", "implements": null, "modifiers": ["public"]}}, {"id": 61189, "method_name": "jtxtfieldMediumPFocusLost", "class_name": "FoodOrder", "params": ["java"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void jtxtfieldMediumPFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtxtfieldMediumPFocusLost\n        \n    }", "url": "https://raw.githubusercontent.com/priyanksondagar/Food-Ordering-System/master/FoodOrder.java", "stars": "1", "class_props": {"extends": "javax", "implements": null, "modifiers": ["public"]}}, {"id": 61190, "method_name": "jtxtfieldMediumPActionPerformed", "class_name": "FoodOrder", "params": ["java"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void jtxtfieldMediumPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtxtfieldMediumPActionPerformed\n        String EnterNumber=jtxtfieldMedium.getText();\n        double quantity=Double.parseDouble(EnterNumber);\n        double price=quantity*MediumPizza;\n        String Price=String.format(\"%.2f\", price);\n        jtxtfieldMediumP.setText(Price);\n    }", "url": "https://raw.githubusercontent.com/priyanksondagar/Food-Ordering-System/master/FoodOrder.java", "stars": "1", "class_props": {"extends": "javax", "implements": null, "modifiers": ["public"]}}, {"id": 61191, "method_name": "jtxtfieldMediumFocusLost", "class_name": "FoodOrder", "params": ["java"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void jtxtfieldMediumFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtxtfieldMediumFocusLost\n        String EnterNumber=jtxtfieldMedium.getText();\n        double quantity=Double.parseDouble(EnterNumber);\n        double price=quantity*MediumPizza;\n        String Price=String.format(\"%.2f\", price);\n        jtxtfieldMediumP.setText(Price);\n        if(quantity>0)\n        {jchkboxMpizza.setSelected(true);}\n    }", "url": "https://raw.githubusercontent.com/priyanksondagar/Food-Ordering-System/master/FoodOrder.java", "stars": "1", "class_props": {"extends": "javax", "implements": null, "modifiers": ["public"]}}, {"id": 61192, "method_name": "jtxtfieldLargeFocusLost", "class_name": "FoodOrder", "params": ["java"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void jtxtfieldLargeFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtxtfieldLargeFocusLost\n        String EnterNumber=jtxtfieldLarge.getText();\n        double quantity=Double.parseDouble(EnterNumber);\n        double price=quantity*LargePizza;\n        String Price=String.format(\"%.2f\", price);\n        jtxtfieldLargeP.setText(Price);\n        if(quantity>0)\n        {jchkboxLpizza.setSelected(true);}\n    }", "url": "https://raw.githubusercontent.com/priyanksondagar/Food-Ordering-System/master/FoodOrder.java", "stars": "1", "class_props": {"extends": "javax", "implements": null, "modifiers": ["public"]}}, {"id": 61193, "method_name": "jtxtfieldCocaFocusLost", "class_name": "FoodOrder", "params": ["java"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void jtxtfieldCocaFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtxtfieldCocaFocusLost\n        String EnterNumber=jtxtfieldCoca.getText();\n        double quantity=Double.parseDouble(EnterNumber);\n        double price=quantity*CocaCola;\n        String Price=String.format(\"%.2f\", price);\n        jtxtfieldCocaP.setText(Price);\n        if(quantity>0)\n        {jchkboxCoca.setSelected(true);}\n    }", "url": "https://raw.githubusercontent.com/priyanksondagar/Food-Ordering-System/master/FoodOrder.java", "stars": "1", "class_props": {"extends": "javax", "implements": null, "modifiers": ["public"]}}, {"id": 61194, "method_name": "jtxtfieldThumsFocusLost", "class_name": "FoodOrder", "params": ["java"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void jtxtfieldThumsFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtxtfieldThumsFocusLost\n        String EnterNumber=jtxtfieldThums.getText();\n        double quantity=Double.parseDouble(EnterNumber);\n        double price=quantity*ThumsUp;\n        String Price=String.format(\"%.2f\", price);\n        jtxtfieldThumsP.setText(Price);\n        if(quantity>0)\n        {jchkboxThums.setSelected(true);}\n    }", "url": "https://raw.githubusercontent.com/priyanksondagar/Food-Ordering-System/master/FoodOrder.java", "stars": "1", "class_props": {"extends": "javax", "implements": null, "modifiers": ["public"]}}, {"id": 61195, "method_name": "jtxtfieldSpriteFocusLost", "class_name": "FoodOrder", "params": ["java"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void jtxtfieldSpriteFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtxtfieldSpriteFocusLost\n        String EnterNumber=jtxtfieldSprite.getText();\n        double quantity=Double.parseDouble(EnterNumber);\n        double price=quantity*Sprite;\n        String Price=String.format(\"%.2f\", price);\n        jtxtfieldSpriteP.setText(Price);\n        if(quantity>0)\n        {jchkboxSprite.setSelected(true);}\n    }", "url": "https://raw.githubusercontent.com/priyanksondagar/Food-Ordering-System/master/FoodOrder.java", "stars": "1", "class_props": {"extends": "javax", "implements": null, "modifiers": ["public"]}}, {"id": 61196, "method_name": "jtxtfieldSmallActionPerformed", "class_name": "FoodOrder", "params": ["java"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void jtxtfieldSmallActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtxtfieldSmallActionPerformed\n          \n    }", "url": "https://raw.githubusercontent.com/priyanksondagar/Food-Ordering-System/master/FoodOrder.java", "stars": "1", "class_props": {"extends": "javax", "implements": null, "modifiers": ["public"]}}, {"id": 61197, "method_name": "jtxtfieldSmallFocusGained", "class_name": "FoodOrder", "params": ["java"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void jtxtfieldSmallFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtxtfieldSmallFocusGained\n           if(jchkboxSpizza.isSelected())\n           {\n               jchkboxSpizza.setSelected(false);\n           }\n           jtxtfieldSmallP.setText(null);\n           \n    }", "url": "https://raw.githubusercontent.com/priyanksondagar/Food-Ordering-System/master/FoodOrder.java", "stars": "1", "class_props": {"extends": "javax", "implements": null, "modifiers": ["public"]}}, {"id": 61198, "method_name": "jtxtfieldMediumFocusGained", "class_name": "FoodOrder", "params": ["java"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void jtxtfieldMediumFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtxtfieldMediumFocusGained\n        if(jchkboxMpizza.isSelected())\n           {\n               jchkboxMpizza.setSelected(false);\n           }\n           jtxtfieldMediumP.setText(null);\n    }", "url": "https://raw.githubusercontent.com/priyanksondagar/Food-Ordering-System/master/FoodOrder.java", "stars": "1", "class_props": {"extends": "javax", "implements": null, "modifiers": ["public"]}}, {"id": 61199, "method_name": "jtxtfieldLargeFocusGained", "class_name": "FoodOrder", "params": ["java"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void jtxtfieldLargeFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtxtfieldLargeFocusGained\n        if(jchkboxLpizza.isSelected())\n           {\n               jchkboxLpizza.setSelected(false);\n           }\n           jtxtfieldLargeP.setText(null);\n    }", "url": "https://raw.githubusercontent.com/priyanksondagar/Food-Ordering-System/master/FoodOrder.java", "stars": "1", "class_props": {"extends": "javax", "implements": null, "modifiers": ["public"]}}, {"id": 61200, "method_name": "jtxtfieldCocaFocusGained", "class_name": "FoodOrder", "params": ["java"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void jtxtfieldCocaFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtxtfieldCocaFocusGained\n        if(jchkboxCoca.isSelected())\n           {\n               jchkboxCoca.setSelected(false);\n           }\n           jtxtfieldCocaP.setText(null);\n    }", "url": "https://raw.githubusercontent.com/priyanksondagar/Food-Ordering-System/master/FoodOrder.java", "stars": "1", "class_props": {"extends": "javax", "implements": null, "modifiers": ["public"]}}, {"id": 61201, "method_name": "jtxtfieldThumsFocusGained", "class_name": "FoodOrder", "params": ["java"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void jtxtfieldThumsFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtxtfieldThumsFocusGained\n        if(jchkboxThums.isSelected())\n           {\n               jchkboxThums.setSelected(false);\n           }\n           jtxtfieldThumsP.setText(null);\n    }", "url": "https://raw.githubusercontent.com/priyanksondagar/Food-Ordering-System/master/FoodOrder.java", "stars": "1", "class_props": {"extends": "javax", "implements": null, "modifiers": ["public"]}}, {"id": 61202, "method_name": "jtxtfieldSpriteFocusGained", "class_name": "FoodOrder", "params": ["java"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void jtxtfieldSpriteFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtxtfieldSpriteFocusGained\n        if(jchkboxSprite.isSelected())\n           {\n               jchkboxSprite.setSelected(false);\n           }\n           jtxtfieldSpriteP.setText(null);\n    }", "url": "https://raw.githubusercontent.com/priyanksondagar/Food-Ordering-System/master/FoodOrder.java", "stars": "1", "class_props": {"extends": "javax", "implements": null, "modifiers": ["public"]}}, {"id": 61203, "method_name": "jbtnTotalMouseClicked", "class_name": "FoodOrder", "params": ["java"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void jbtnTotalMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jbtnTotalMouseClicked\n        double price1 =Double.parseDouble(jtxtfieldSmallP.getText());\n        double price2 =Double.parseDouble(jtxtfieldMediumP.getText());\n        double price3 =Double.parseDouble(jtxtfieldLargeP.getText());\n        double price4 =Double.parseDouble(jtxtfieldCocaP.getText());\n        double price5 =Double.parseDouble(jtxtfieldThumsP.getText());\n        double price6 =Double.parseDouble(jtxtfieldSpriteP.getText());\n        double price=price1+price2+price3+price4+price5+price6;\n        String Price=String.format(\"%.2f\", price);\n        jtxtfieldSub.setText(Price);\n        double tax=(price1+price2+price3+price4+price5+price6)*18/100;\n        String Tax=String.format(\"%.2f\", tax);\n        jtxtfieldTax.setText(Tax);\n        double total=price+tax;\n        String Total=String.format(\"%.2f\", total);\n        jtxtfieldTotal.setText(Total);\n        if(jtxtfieldSmall.getText()==null)\n        {\n            double tmp=0;\n            String Tmp=String.format(\"%.2f\", tmp);\n            jtxtfieldSmall.setText(Tmp);\n            jtxtfieldSmallP.setText(Tmp);\n        }\n        if(jtxtfieldMediumP.getText()==null)\n        {\n            double tmp=0;\n            String Tmp=String.format(\"%.2f\", tmp);\n            jtxtfieldMediumP.setText(Tmp);\n        }\n        if(jtxtfieldLargeP.getText()==null)\n        {\n            double tmp=0;\n            String Tmp=String.format(\"%.2f\", tmp);\n            jtxtfieldLargeP.setText(Tmp);\n        }\n        if(jtxtfieldCocaP.getText()==null)\n        {\n            double tmp=0;\n            String Tmp=String.format(\"%.2f\", tmp);\n            jtxtfieldCocaP.setText(Tmp);\n        }\n        if(jtxtfieldThumsP.getText()==null)\n        {\n            double tmp=0;\n            String Tmp=String.format(\"%.2f\", tmp);\n            jtxtfieldThumsP.setText(Tmp);\n        }\n        if(jtxtfieldSpriteP.getText()==null)\n        {\n            double tmp=0;\n            String Tmp=String.format(\"%.2f\", tmp);\n            jtxtfieldSpriteP.setText(Tmp);\n        }\n    }", "url": "https://raw.githubusercontent.com/priyanksondagar/Food-Ordering-System/master/FoodOrder.java", "stars": "1", "class_props": {"extends": "javax", "implements": null, "modifiers": ["public"]}}, {"id": 61204, "method_name": "jtxtfieldMediumKeyPressed", "class_name": "FoodOrder", "params": ["java"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void jtxtfieldMediumKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtxtfieldMediumKeyPressed\n        String EnterNumber=jtxtfieldMedium.getText();\n        double quantity=Double.parseDouble(EnterNumber);\n        double price=quantity*MediumPizza;\n        String Price=String.format(\"%.2f\", price);\n        jtxtfieldMediumP.setText(Price);\n        jchkboxMpizza.setSelected(true);\n    }", "url": "https://raw.githubusercontent.com/priyanksondagar/Food-Ordering-System/master/FoodOrder.java", "stars": "1", "class_props": {"extends": "javax", "implements": null, "modifiers": ["public"]}}, {"id": 61205, "method_name": "jtxtfieldLargeKeyPressed", "class_name": "FoodOrder", "params": ["java"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void jtxtfieldLargeKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtxtfieldLargeKeyPressed\n        String EnterNumber=jtxtfieldLarge.getText();\n        double quantity=Double.parseDouble(EnterNumber);\n        double price=quantity*LargePizza;\n        String Price=String.format(\"%.2f\", price);\n        jtxtfieldLargeP.setText(Price);\n        jchkboxLpizza.setSelected(true);\n    }", "url": "https://raw.githubusercontent.com/priyanksondagar/Food-Ordering-System/master/FoodOrder.java", "stars": "1", "class_props": {"extends": "javax", "implements": null, "modifiers": ["public"]}}, {"id": 61206, "method_name": "jtxtfieldCocaKeyPressed", "class_name": "FoodOrder", "params": ["java"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void jtxtfieldCocaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtxtfieldCocaKeyPressed\n        String EnterNumber=jtxtfieldCoca.getText();\n        double quantity=Double.parseDouble(EnterNumber);\n        double price=quantity*CocaCola;\n        String Price=String.format(\"%.2f\", price);\n        jtxtfieldCocaP.setText(Price);\n        jchkboxCoca.setSelected(true);\n    }", "url": "https://raw.githubusercontent.com/priyanksondagar/Food-Ordering-System/master/FoodOrder.java", "stars": "1", "class_props": {"extends": "javax", "implements": null, "modifiers": ["public"]}}, {"id": 61207, "method_name": "jtxtfieldThumsKeyPressed", "class_name": "FoodOrder", "params": ["java"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void jtxtfieldThumsKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtxtfieldThumsKeyPressed\n        String EnterNumber=jtxtfieldThums.getText();\n        double quantity=Double.parseDouble(EnterNumber);\n        double price=quantity*ThumsUp;\n        String Price=String.format(\"%.2f\", price);\n        jtxtfieldThumsP.setText(Price);\n        jchkboxThums.setSelected(true);\n    }", "url": "https://raw.githubusercontent.com/priyanksondagar/Food-Ordering-System/master/FoodOrder.java", "stars": "1", "class_props": {"extends": "javax", "implements": null, "modifiers": ["public"]}}, {"id": 61208, "method_name": "jtxtfieldSpriteKeyPressed", "class_name": "FoodOrder", "params": ["java"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void jtxtfieldSpriteKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtxtfieldSpriteKeyPressed\n        String EnterNumber=jtxtfieldSprite.getText();\n        double quantity=Double.parseDouble(EnterNumber);\n        double price=quantity*Sprite;\n        String Price=String.format(\"%.2f\", price);\n        jtxtfieldSpriteP.setText(Price);\n        jchkboxSprite.setSelected(true);\n    }", "url": "https://raw.githubusercontent.com/priyanksondagar/Food-Ordering-System/master/FoodOrder.java", "stars": "1", "class_props": {"extends": "javax", "implements": null, "modifiers": ["public"]}}, {"id": 61209, "method_name": "jbtnReceiptMouseClicked", "class_name": "FoodOrder", "params": ["java"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void jbtnReceiptMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jbtnReceiptMouseClicked\n        String msg=(\"\\tReceipt\\n\\nSmall Pizza : \"+jtxtfieldSmall.getText()+\"\\nMedium Pizza : \"+jtxtfieldMedium.getText()+\"\\nLarge Pizza : \"\n                  +jtxtfieldLarge.getText()+\"\\nCoca Cola : \"+jtxtfieldCoca.getText()+\"\\nThumsUp : \"+jtxtfieldThums.getText()+\"\\nSprite : \"\n                +jtxtfieldSprite.getText()+\"\\n\\n\\nTotal Amount : \"+jtxtfieldTotal.getText()+\" Rs.\"+\"\\n\\nThank you for order to us\");\n        jtxtfieldReceipt.setText(msg);\n    }", "url": "https://raw.githubusercontent.com/priyanksondagar/Food-Ordering-System/master/FoodOrder.java", "stars": "1", "class_props": {"extends": "javax", "implements": null, "modifiers": ["public"]}}, {"id": 61210, "method_name": "main", "class_name": "FoodOrder", "params": ["String"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void main(String args[]) {\n        /* Set the Nimbus look and feel */\n        //<editor-fold defaultstate=\"collapsed\" desc=\" Look and feel setting code (optional) \">\n        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.\n         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html \n         */\n        try {\n            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {\n                if (\"Nimbus\".equals(info.getName())) {\n                    javax.swing.UIManager.setLookAndFeel(info.getClassName());\n                    break;\n                }\n            }\n        } catch (ClassNotFoundException ex) {\n            java.util.logging.Logger.getLogger(FoodOrder.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);\n        } catch (InstantiationException ex) {\n            java.util.logging.Logger.getLogger(FoodOrder.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);\n        } catch (IllegalAccessException ex) {\n            java.util.logging.Logger.getLogger(FoodOrder.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);\n        } catch (javax.swing.UnsupportedLookAndFeelException ex) {\n            java.util.logging.Logger.getLogger(FoodOrder.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);\n        }\n        //</editor-fold>\n\n        /* Create and display the form */\n        java.awt.EventQueue.invokeLater(new Runnable() {\n            public void run() {\n                new FoodOrder().setVisible(true);\n            }\n        });\n    }", "url": "https://raw.githubusercontent.com/priyanksondagar/Food-Ordering-System/master/FoodOrder.java", "stars": "1", "class_props": {"extends": "javax", "implements": null, "modifiers": ["public"]}}, {"id": 61211, "method_name": "onCreateView", "class_name": "OnboardingStartFragment", "params": ["LayoutInflater", "ViewGroup", "Bundle"], "throws": null, "modifiers": ["public"], "return_type": "View", "snippet": "  public View onCreateView(LayoutInflater inflater, ViewGroup parent, Bundle savedInstanceState) {\n    return inflater.inflate(R.layout.fragment_onboarding_start, parent, false);\n  }", "url": "https://raw.githubusercontent.com/google/exposure-notifications-android/master/app/src/main/java/com/google/android/apps/exposurenotification/activities/OnboardingStartFragment.java", "stars": "205", "class_props": {"extends": "Fragment", "implements": null, "modifiers": ["public"]}}, {"id": 61212, "method_name": "onViewCreated", "class_name": "OnboardingStartFragment", "params": ["View", "Bundle"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void onViewCreated(View view, Bundle savedInstanceState) {\n    Button startButton = view.findViewById(R.id.onboarding_next_button);\n    startButton.setOnClickListener(\n        v -> {\n          FragmentTransaction fragmentTransaction = getParentFragmentManager().beginTransaction();\n          fragmentTransaction.replace(\n              R.id.home_fragment, new OnboardingPermissionFragment(), HOME_FRAGMENT_TAG);\n          fragmentTransaction.setTransition(FragmentTransaction.TRANSIT_FRAGMENT_FADE);\n          fragmentTransaction.addToBackStack(null);\n          fragmentTransaction.commit();\n        });\n  }", "url": "https://raw.githubusercontent.com/google/exposure-notifications-android/master/app/src/main/java/com/google/android/apps/exposurenotification/activities/OnboardingStartFragment.java", "stars": "205", "class_props": {"extends": "Fragment", "implements": null, "modifiers": ["public"]}}, {"id": 61213, "method_name": "getId", "class_name": "UserWithNothingWithoutInterface", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Integer", "snippet": "  public Integer getId() {\n    return id;\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/lazyload_proxyfactory_comparison/UserWithNothingWithoutInterface.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 61214, "method_name": "setId", "class_name": "UserWithNothingWithoutInterface", "params": ["Integer"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void setId(Integer id) {\n    this.id = id;\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/lazyload_proxyfactory_comparison/UserWithNothingWithoutInterface.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 61215, "method_name": "getName", "class_name": "UserWithNothingWithoutInterface", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "  public String getName() {\n    return name;\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/lazyload_proxyfactory_comparison/UserWithNothingWithoutInterface.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 61216, "method_name": "setName", "class_name": "UserWithNothingWithoutInterface", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void setName(String name) {\n    this.name = name;\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/lazyload_proxyfactory_comparison/UserWithNothingWithoutInterface.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 61217, "method_name": "getOwner", "class_name": "UserWithNothingWithoutInterface", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Group", "snippet": "  public Group getOwner() {\n    return owner;\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/lazyload_proxyfactory_comparison/UserWithNothingWithoutInterface.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 61218, "method_name": "setOwner", "class_name": "UserWithNothingWithoutInterface", "params": ["Group"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void setOwner(Group owner) {\n    this.owner = owner;\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/lazyload_proxyfactory_comparison/UserWithNothingWithoutInterface.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 61219, "method_name": "onCreate", "class_name": "MainzoomActivity", "params": ["Bundle"], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "\tprotected void onCreate(Bundle savedInstanceState) {\n\t\tsuper.onCreate(savedInstanceState);\n\t\tsetContentView(R.layout.mainzoom);\n\t\t\n\t\ton=(Button)findViewById(R.id.button1);\n\t\ton.setOnClickListener(new OnClickListener() {\n\t\t\t\n\t\t\t@Override\n\t\t\tpublic void onClick(View v) {\n\t\t\t\t// TODO Auto-generated method stub\n\t\t\t\tAnimation ani=AnimationUtils.loadAnimation(getApplicationContext(), R.anim.zoomon);\n\t\t\t\tiv=(ImageView)findViewById(R.id.imageView1);\n\t\t\t\tiv.startAnimation(ani);\n\t\t\t}\n\t\t});\n\t\toff=(Button)findViewById(R.id.button2);\n\t\toff.setOnClickListener(new OnClickListener() {\n\t\t\t\n\t\t\t@Override\n\t\t\tpublic void onClick(View v) {\n\t\t\t\t// TODO Auto-generated method stub\n\t\t\t\tAnimation ani=AnimationUtils.loadAnimation(getApplicationContext(), R.anim.zoomoff);\n\t\t\t\tiv=(ImageView)findViewById(R.id.imageView1);\n\t\t\t\tiv.startAnimation(ani);\n\t\t\t}\n\t\t});\n\t}", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/zoomtry/src/com/example/zoomtry/MainzoomActivity.java", "stars": "74", "class_props": {"extends": "Activity", "implements": null, "modifiers": ["public"]}}, {"id": 61220, "method_name": "onCreateOptionsMenu", "class_name": "MainzoomActivity", "params": ["Menu"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "\tpublic boolean onCreateOptionsMenu(Menu menu) {\n\t\t// Inflate the menu; this adds items to the action bar if it is present.\n\t\tgetMenuInflater().inflate(R.menu.mainzoom, menu);\n\t\treturn true;\n\t}", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/zoomtry/src/com/example/zoomtry/MainzoomActivity.java", "stars": "74", "class_props": {"extends": "Activity", "implements": null, "modifiers": ["public"]}}, {"id": 61221, "method_name": "getOrganizationsWillRetrieveListOfOrganizations_WhenRequestingUserIsAdmin", "class_name": "OrganizationsControllerTest", "params": [], "throws": ["Exception"], "modifiers": [], "return_type": "void", "snippet": "    void getOrganizationsWillRetrieveListOfOrganizations_WhenRequestingUserIsAdmin() throws Exception {\n        when(organizationsReadService.getOrganizations())\n                .thenReturn(newArrayList(ORGANIZATION_1, ORGANIZATION_2));\n\n        mockMvc.perform(get(\"/api/organizations\").contentType(APPLICATION_JSON))\n                .andExpect(status().isOk())\n                .andExpect(content().contentType(APPLICATION_JSON))\n                .andExpect(jsonPath(\"$.[0].id\", is(ORGANIZATION_1.getId().toString())))\n                .andExpect(jsonPath(\"$.[1].id\", is(ORGANIZATION_2.getId().toString())))\n                .andExpect(jsonPath(\"$.[0].organizationName\", is(ORGANIZATION_1.getOrganizationName())))\n                .andExpect(jsonPath(\"$.[1].organizationName\", is(ORGANIZATION_2.getOrganizationName())));\n    }", "url": "https://raw.githubusercontent.com/everest-engineering/lhotse/master/api/src/test/java/engineering/everest/lhotse/api/rest/controllers/OrganizationsControllerTest.java", "stars": "9", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 61222, "method_name": "getOrganizationWillDelegate_WhenRequestingUserBelongsToOrganization", "class_name": "OrganizationsControllerTest", "params": [], "throws": ["Exception"], "modifiers": [], "return_type": "void", "snippet": "    void getOrganizationWillDelegate_WhenRequestingUserBelongsToOrganization() throws Exception {\n        User authUser = MockAuthenticationContextProvider.getAuthUser();\n        when(organizationsReadService.getById(authUser.getOrganizationId()))\n                .thenReturn(new Organization(authUser.getOrganizationId(), \"demo\",\n                        new OrganizationAddress(\"\", \"\", \"\", \"\", \"\"),\n                        \"\", \"\", \"\", \"\", false));\n        mockMvc.perform(get(\"/api/organizations/{organizationId}\", authUser.getOrganizationId()))\n                .andExpect(status().isOk())\n                .andExpect(content().contentType(APPLICATION_JSON))\n                .andExpect(jsonPath(\"$.id\", is(authUser.getOrganizationId().toString())));\n    }", "url": "https://raw.githubusercontent.com/everest-engineering/lhotse/master/api/src/test/java/engineering/everest/lhotse/api/rest/controllers/OrganizationsControllerTest.java", "stars": "9", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 61223, "method_name": "registeringNewOrganizationWillFail_WhenNameIsEmpty", "class_name": "OrganizationsControllerTest", "params": [], "throws": ["Exception"], "modifiers": [], "return_type": "void", "snippet": "    void registeringNewOrganizationWillFail_WhenNameIsEmpty() throws Exception {\n        mockMvc.perform(post(\"/api/organizations\")\n                .contentType(APPLICATION_JSON)\n                .content(objectMapper.writeValueAsString(new NewOrganizationRequest(\"\", ORGANIZATION_1.getOrganizationAddress().getStreet(),\n                        ORGANIZATION_1.getOrganizationAddress().getCity(), ORGANIZATION_1.getOrganizationAddress().getState(), ORGANIZATION_1.getOrganizationAddress().getCountry(), ORGANIZATION_1.getOrganizationAddress().getPostalCode(), ORGANIZATION_1.getWebsiteUrl(),\n                        ORGANIZATION_1.getContactName(), ORGANIZATION_1.getPhoneNumber(), ORGANIZATION_1.getEmailAddress()))))\n                .andExpect(status().isBadRequest());\n\n        verifyNoInteractions(organizationsService);\n    }", "url": "https://raw.githubusercontent.com/everest-engineering/lhotse/master/api/src/test/java/engineering/everest/lhotse/api/rest/controllers/OrganizationsControllerTest.java", "stars": "9", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 61224, "method_name": "registeringNewOrganizationWillDelegate_WhenRequestingUserIsAdmin", "class_name": "OrganizationsControllerTest", "params": [], "throws": ["Exception"], "modifiers": [], "return_type": "void", "snippet": "    void registeringNewOrganizationWillDelegate_WhenRequestingUserIsAdmin() throws Exception {\n        mockMvc.perform(post(\"/api/organizations\")\n                .contentType(APPLICATION_JSON)\n                .content(objectMapper.writeValueAsString(new NewOrganizationRequest(ORGANIZATION_1.getOrganizationName(), ORGANIZATION_1.getOrganizationAddress().getStreet(),\n                        ORGANIZATION_1.getOrganizationAddress().getCity(), ORGANIZATION_1.getOrganizationAddress().getState(), ORGANIZATION_1.getOrganizationAddress().getCountry(), ORGANIZATION_1.getOrganizationAddress().getPostalCode(), ORGANIZATION_1.getWebsiteUrl(),\n                        ORGANIZATION_1.getContactName(), ORGANIZATION_1.getPhoneNumber(), ORGANIZATION_1.getEmailAddress()))))\n                .andExpect(status().isCreated())\n                .andExpect(content().string(Matchers.any(String.class)));\n\n        verify(organizationsService).createOrganization(ADMIN_USER.getId(), ORGANIZATION_1.getOrganizationName(), ORGANIZATION_1.getOrganizationAddress().getStreet(),\n                ORGANIZATION_1.getOrganizationAddress().getCity(), ORGANIZATION_1.getOrganizationAddress().getState(), ORGANIZATION_1.getOrganizationAddress().getCountry(), ORGANIZATION_1.getOrganizationAddress().getPostalCode(), ORGANIZATION_1.getWebsiteUrl(),\n                ORGANIZATION_1.getContactName(), ORGANIZATION_1.getPhoneNumber(), ORGANIZATION_1.getEmailAddress());\n    }", "url": "https://raw.githubusercontent.com/everest-engineering/lhotse/master/api/src/test/java/engineering/everest/lhotse/api/rest/controllers/OrganizationsControllerTest.java", "stars": "9", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 61225, "method_name": "deleteOrganizationWillDelegate_WhenRequestingUserIsAdmin", "class_name": "OrganizationsControllerTest", "params": [], "throws": ["Exception"], "modifiers": [], "return_type": "void", "snippet": "    void deleteOrganizationWillDelegate_WhenRequestingUserIsAdmin() throws Exception {\n        mockMvc.perform(delete(\"/api/organizations/{organizationId}\", ORGANIZATION_2.getId()))\n                .andExpect(status().isOk());\n\n        verify(organizationsService).deregisterOrganization(ADMIN_USER.getId(), ORGANIZATION_2.getId());\n    }", "url": "https://raw.githubusercontent.com/everest-engineering/lhotse/master/api/src/test/java/engineering/everest/lhotse/api/rest/controllers/OrganizationsControllerTest.java", "stars": "9", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 61226, "method_name": "reregisterOrganizationWillDelegate_WhenRequestingUserIsAdmin", "class_name": "OrganizationsControllerTest", "params": [], "throws": ["Exception"], "modifiers": [], "return_type": "void", "snippet": "    void reregisterOrganizationWillDelegate_WhenRequestingUserIsAdmin() throws Exception {\n        mockMvc.perform(post(\"/api/organizations/{organizationId}\", ORGANIZATION_2.getId()))\n                .andExpect(status().isOk());\n\n        verify(organizationsService).reregisterOrganization(ADMIN_USER.getId(), ORGANIZATION_2.getId());\n    }", "url": "https://raw.githubusercontent.com/everest-engineering/lhotse/master/api/src/test/java/engineering/everest/lhotse/api/rest/controllers/OrganizationsControllerTest.java", "stars": "9", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 61227, "method_name": "updateOrganizationWillDelegate_WhenRequestingUserIsAdmin", "class_name": "OrganizationsControllerTest", "params": [], "throws": ["Exception"], "modifiers": [], "return_type": "void", "snippet": "    void updateOrganizationWillDelegate_WhenRequestingUserIsAdmin() throws Exception {\n        mockMvc.perform(put(\"/api/organizations/{organizationId}\", ORGANIZATION_1.getId())\n                .contentType(APPLICATION_JSON)\n                .content(objectMapper.writeValueAsString(new UpdateOrganizationRequest(ORGANIZATION_1.getOrganizationName(), ORGANIZATION_1.getOrganizationAddress().getStreet(),\n                        ORGANIZATION_1.getOrganizationAddress().getCity(), ORGANIZATION_1.getOrganizationAddress().getState(), ORGANIZATION_1.getOrganizationAddress().getCountry(), ORGANIZATION_1.getOrganizationAddress().getPostalCode(), ORGANIZATION_1.getWebsiteUrl(),\n                        ORGANIZATION_1.getContactName(), ORGANIZATION_1.getPhoneNumber(), ORGANIZATION_1.getEmailAddress()))))\n                .andExpect(status().isOk());\n\n        verify(organizationsService).updateOrganization(ADMIN_USER.getId(), ORGANIZATION_1.getId(), ORGANIZATION_1.getOrganizationName(), ORGANIZATION_1.getOrganizationAddress().getStreet(),\n                ORGANIZATION_1.getOrganizationAddress().getCity(), ORGANIZATION_1.getOrganizationAddress().getState(), ORGANIZATION_1.getOrganizationAddress().getCountry(), ORGANIZATION_1.getOrganizationAddress().getPostalCode(), ORGANIZATION_1.getWebsiteUrl(),\n                ORGANIZATION_1.getContactName(), ORGANIZATION_1.getPhoneNumber(), ORGANIZATION_1.getEmailAddress());\n    }", "url": "https://raw.githubusercontent.com/everest-engineering/lhotse/master/api/src/test/java/engineering/everest/lhotse/api/rest/controllers/OrganizationsControllerTest.java", "stars": "9", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 61228, "method_name": "updateOrganization_WillFail_WhenOrganizationIdIsBlank", "class_name": "OrganizationsControllerTest", "params": [], "throws": ["Exception"], "modifiers": [], "return_type": "void", "snippet": "    void updateOrganization_WillFail_WhenOrganizationIdIsBlank() throws Exception {\n        mockMvc.perform(put(\"/api/organizations/{organizationId}\", \"\")\n                .contentType(APPLICATION_JSON)\n                .content(objectMapper.writeValueAsString(new UpdateOrganizationRequest(ORGANIZATION_1.getOrganizationName(), ORGANIZATION_1.getOrganizationAddress().getStreet(),\n                        ORGANIZATION_1.getOrganizationAddress().getCity(), ORGANIZATION_1.getOrganizationAddress().getState(), ORGANIZATION_1.getOrganizationAddress().getCountry(), ORGANIZATION_1.getOrganizationAddress().getPostalCode(), ORGANIZATION_1.getWebsiteUrl(),\n                        ORGANIZATION_1.getContactName(), ORGANIZATION_1.getPhoneNumber(), ORGANIZATION_1.getEmailAddress()))))\n                .andExpect(status().isMethodNotAllowed());\n\n        verifyNoInteractions(organizationsService);\n    }", "url": "https://raw.githubusercontent.com/everest-engineering/lhotse/master/api/src/test/java/engineering/everest/lhotse/api/rest/controllers/OrganizationsControllerTest.java", "stars": "9", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 61229, "method_name": "retrievingUserListForOrganization_WillRetrieveSub_WhenRequestingUserIsAdmin", "class_name": "OrganizationsControllerTest", "params": [], "throws": ["Exception"], "modifiers": [], "return_type": "void", "snippet": "    void retrievingUserListForOrganization_WillRetrieveSub_WhenRequestingUserIsAdmin() throws Exception {\n        when(usersReadService.getUsersForOrganization(ORGANIZATION_1.getId())).thenReturn(singletonList(ORG_1_USER_1));\n\n        mockMvc.perform(get(\"/api/organizations/{organizationId}/users\", ORGANIZATION_1.getId()))\n                .andExpect(status().isOk())\n                .andExpect(content().contentType(APPLICATION_JSON))\n                .andExpect(jsonPath(\"$.[0].id\", is(ORG_1_USER_1.getId().toString())))\n                .andExpect(jsonPath(\"$.[0].organizationId\", is(ORGANIZATION_1.getId().toString())))\n                .andExpect(jsonPath(\"$.[0].displayName\", is(ORG_1_USER_1.getDisplayName())))\n                .andExpect(jsonPath(\"$.[0].email\", is(ORG_1_USER_1.getUsername())));\n    }", "url": "https://raw.githubusercontent.com/everest-engineering/lhotse/master/api/src/test/java/engineering/everest/lhotse/api/rest/controllers/OrganizationsControllerTest.java", "stars": "9", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 61230, "method_name": "creatingOrganizationUser_WillFail_WhenEmailIsBlank", "class_name": "OrganizationsControllerTest", "params": [], "throws": ["Exception"], "modifiers": [], "return_type": "void", "snippet": "    void creatingOrganizationUser_WillFail_WhenEmailIsBlank() throws Exception {\n        var rawPassword = \"secret\";\n        mockMvc.perform(post(\"/api/organizations/{organizationId}/users\", ORGANIZATION_2.getId())\n                .contentType(APPLICATION_JSON)\n                .content(objectMapper.writeValueAsString(new NewUserRequest(\"\", rawPassword, ORG_1_USER_1.getDisplayName()))))\n                .andExpect(status().isBadRequest());\n\n        verifyNoInteractions(usersService);\n    }", "url": "https://raw.githubusercontent.com/everest-engineering/lhotse/master/api/src/test/java/engineering/everest/lhotse/api/rest/controllers/OrganizationsControllerTest.java", "stars": "9", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 61231, "method_name": "creatingOrganizationUser_WillFail_WhenDisplayNameIsBlank", "class_name": "OrganizationsControllerTest", "params": [], "throws": ["Exception"], "modifiers": [], "return_type": "void", "snippet": "    void creatingOrganizationUser_WillFail_WhenDisplayNameIsBlank() throws Exception {\n        var rawPassword = \"secret\";\n        mockMvc.perform(post(\"/api/organizations/{organizationId}/users\", ORGANIZATION_2.getId())\n                .contentType(APPLICATION_JSON)\n                .content(objectMapper.writeValueAsString(new NewUserRequest(ORG_1_USER_1.getUsername(), rawPassword, \"\"))))\n                .andExpect(status().isBadRequest());\n\n        verifyNoInteractions(usersService);\n    }", "url": "https://raw.githubusercontent.com/everest-engineering/lhotse/master/api/src/test/java/engineering/everest/lhotse/api/rest/controllers/OrganizationsControllerTest.java", "stars": "9", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 61232, "method_name": "creatingOrganizationUser_WillFail_WhenPasswordIsBlank", "class_name": "OrganizationsControllerTest", "params": [], "throws": ["Exception"], "modifiers": [], "return_type": "void", "snippet": "    void creatingOrganizationUser_WillFail_WhenPasswordIsBlank() throws Exception {\n        mockMvc.perform(post(\"/api/organizations/{organizationId}/users\", ORGANIZATION_2.getId())\n                .contentType(APPLICATION_JSON)\n                .content(objectMapper.writeValueAsString(new NewUserRequest(ORG_1_USER_1.getUsername(), \"\", ORG_1_USER_1.getDisplayName()))))\n                .andExpect(status().isBadRequest());\n\n        verifyNoInteractions(usersService);\n    }", "url": "https://raw.githubusercontent.com/everest-engineering/lhotse/master/api/src/test/java/engineering/everest/lhotse/api/rest/controllers/OrganizationsControllerTest.java", "stars": "9", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 61233, "method_name": "creatingOrganizationUserWillDelegate_WhenRequestingUserIsAdmin", "class_name": "OrganizationsControllerTest", "params": [], "throws": ["Exception"], "modifiers": [], "return_type": "void", "snippet": "    void creatingOrganizationUserWillDelegate_WhenRequestingUserIsAdmin() throws Exception {\n        User authUser = MockAuthenticationContextProvider.getAuthUser();\n        mockMvc.perform(post(\"/api/organizations/{organizationId}/users\", ORGANIZATION_ID)\n                .contentType(APPLICATION_JSON)\n                .content(objectMapper.writeValueAsString(NEW_USER_REQUEST)))\n                .andExpect(status().isCreated())\n                .andExpect(content().string(Matchers.any(String.class)));\n\n        verify(usersService).createUser(authUser.getId(), ORGANIZATION_ID, NEW_USER_USERNAME, NEW_USER_DISPLAY_NAME, RAW_PASSWORD);\n    }", "url": "https://raw.githubusercontent.com/everest-engineering/lhotse/master/api/src/test/java/engineering/everest/lhotse/api/rest/controllers/OrganizationsControllerTest.java", "stars": "9", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 61234, "method_name": "creatingOrganizationUserWillThrow_WhenRequestingUserIsNotAdmin", "class_name": "OrganizationsControllerTest", "params": [], "throws": ["Exception"], "modifiers": [], "return_type": "void", "snippet": "    void creatingOrganizationUserWillThrow_WhenRequestingUserIsNotAdmin() throws Exception {\n        User authUser = MockAuthenticationContextProvider.getAuthUser();\n        mockMvc.perform(post(\"/api/organizations/{organizationId}/users\", authUser.getOrganizationId())\n                .contentType(APPLICATION_JSON)\n                .content(objectMapper.writeValueAsString(NEW_USER_REQUEST)))\n                .andExpect(status().isForbidden());\n    }", "url": "https://raw.githubusercontent.com/everest-engineering/lhotse/master/api/src/test/java/engineering/everest/lhotse/api/rest/controllers/OrganizationsControllerTest.java", "stars": "9", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 61235, "method_name": "windowHandling", "class_name": "Day2NykaaTest", "params": [], "throws": null, "modifiers": ["public"], "return_type": "List<String>", "snippet": "\tpublic List<String> windowHandling()\n\t{\n\t\tSet<String> setHandle = driver.getWindowHandles();\n\t\tList<String> listHandle=new ArrayList<String> (setHandle);\n\t\treturn listHandle;\n\t}", "url": "https://raw.githubusercontent.com/Janani-Palani/MyLearningSpace/master/Day2NykaaTest.java", "stars": "24", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 61236, "method_name": "launchBrowser", "class_name": "Day2NykaaTest", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void launchBrowser() {\n\t\tSystem.setProperty(\"webdriver.chrome.driver\", \"./Drivers/chromedriver.exe\");\n\t\tdriver = new ChromeDriver();\n\t\tdriver.get(\"https://www.nykaa.com/\");\n\t\tdriver.manage().window().maximize();\n\t\tdriver.manage().timeouts().implicitlyWait(30, TimeUnit.SECONDS);\n\t\tString title = driver.getTitle();\n\t\tif (title.contains(\"Nykaa\"))\n\t\t\tSystem.out.println(\"Nykaa launched successfully: \" + title);\n\t\telse\n\t\t\tSystem.err.println(\"Nykaa launch failed\");\n\t}", "url": "https://raw.githubusercontent.com/Janani-Palani/MyLearningSpace/master/Day2NykaaTest.java", "stars": "24", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 61237, "method_name": "main", "class_name": "Day2NykaaTest", "params": ["String"], "throws": ["InterruptedException"], "modifiers": ["public", "static"], "return_type": "void", "snippet": "\tpublic static void main(String[] args) throws InterruptedException {\n\t\t\n//Setting up objects\n\t\tDay2NykaaTest obj = new Day2NykaaTest();\n\t\tobj.launchBrowser();\n\t\tActions builder = new Actions(driver);\n\t\tWebDriverWait wait = new WebDriverWait(driver, 10);\n\n//Mouse hover on Brands and Popular\n\t\twait.until(ExpectedConditions.elementToBeClickable(driver.findElementByXPath(\"//a[text()='brands']\")));\n\t\tbuilder.moveToElement(driver.findElementByXPath(\"//a[text()='brands']\")).perform();\n\t\twait.until(ExpectedConditions.elementToBeClickable(driver.findElementByXPath(\"//a[text()='Popular']\")));\n\t\tbuilder.moveToElement(driver.findElementByXPath(\"//a[text()='Popular']\")).perform();\n\t\tSystem.out.println(\"Brand and Popular selected\");\n\n//Click on Loreal Paris\n\t\tdriver.findElementByXPath(\"(//a[contains(@href,'loreal-paris')])[3]\").click();\n\n//Switch to L'Oreal Paris product window and check title\n\t\tdriver.switchTo().window(obj.windowHandling().get(1));\n\t\tString windowTitle = driver.getTitle();\n\t\tif (windowTitle.contains(\"L'Oreal Paris\")) {\n\t\t\tSystem.out.println(\"Navigated to L'Oreal page :\" + windowTitle);\n\t\t} else\n\t\t\tSystem.err.println(\"Failed to navigate to L'Oreal page\");\n\n// Click sort By and select customer top rated\n\t\tdriver.findElementByXPath(\"//span[text()='popularity']\").click();\n\t\tdriver.findElementByXPath(\"//span[text()='customer top rated']\").click();\n\t\tSystem.out.println(\"Sorted by customer top rated\");\n\n// Click Category\n\t\twait.until(ExpectedConditions.elementToBeClickable(driver.findElementByXPath(\"(//div[contains(@class,'pull-right')])[1]\")));\n\t\tdriver.findElementByXPath(\"(//div[contains(@class,'pull-right')])[1]\").click();\n\t\tSystem.out.println(\"Clicked Category\");\n\n// Check whether the Filter is applied with Shampoo\n\t\twait.until(ExpectedConditions.elementToBeClickable(driver.findElementByXPath(\"(//label[@for='chk_Shampoo_undefined'])[1]\")));\n\t\tWebElement eleShampooFilter = driver.findElementByXPath(\"(//label[@for='chk_Shampoo_undefined'])[1]\");\n\t\tif (!eleShampooFilter.isSelected()) \n\t\t{\n\t\t\teleShampooFilter.click();\n\t\t\tSystem.out.println(\"Shampoo is filtered now\");\n\t\t} \n\t\telse\n\t\t\tSystem.out.println(\"Shampoo is filtered by default\");\n\n// Click on L'Oreal Paris Colour Protect Shampoo\n\t\tdriver.findElementByXPath(\"//a[contains(@href,'paris-color-protect')]//img\").click();\n\n// Navigate to the product window\n\t\tdriver.switchTo().window(obj.windowHandling().get(2));\n\t\tif (driver.getTitle().contains(\"L'Oreal Paris Colour Protect\"))\n\t\t{\n\t\t\tSystem.out.println(\"Navigated to the product\");\n\t\t} else\n\t\t\tSystem.err.println(\"Product Navigation failed\");\n\n\t\tdriver.findElementByXPath(\"//span[text()='175ml']\").click();\n\t\tSystem.out.println(\"Size selected as 175ml\");\n\n// Print price of the product\n\t\tString productPrice = driver.findElementByXPath(\"(//div[@class='price-info']//span)[4]\").getText();\n\t\tSystem.out.println(\"Product price: \" + productPrice);\n\n// Add Product to bag and confirm\n\t\tdriver.findElementByXPath(\"//span[contains(@class,'Shopping-Bag')]/parent::button\").click();\n\t\twait.until(ExpectedConditions\n\t\t\t\t.visibilityOf(driver.findElementByXPath(\"//span[text()='Product has been added to bag.']\")));\n\t\tString confirmMsg = driver.findElementByXPath(\"//span[text()='Product has been added to bag.']\").getText();\n\t\tSystem.out.println(confirmMsg+ \" message is displayed\");\n\t\t\n// Go to Shopping bag\n\t\tdriver.findElementByXPath(\"//div[@class='AddToBagbox']\").click();\n\t\t\n// Print the Grand Total amount\n\t\tString grandTotal = driver.findElementByXPath(\"//div[@class='payment-tbl-data']/div[4]/div[2]\").getText();\n\t\tSystem.out.println(\"Grand total: \"+grandTotal);\n\t\t\n// Click to Proceed\n\t\tdriver.findElementByXPath(\"//button[contains(@class,'proceed')]\").click();\n\t\t\n// Continue as Guest\n\t\tdriver.findElementByXPath(\"//button[text()='CONTINUE AS GUEST']\").click();\n\t\t\n// Print warning message\n\t\tString warningMsg = driver.findElementByXPath(\"//div[contains(text(),'lockdown')]\").getText();\n\t\tSystem.out.println(warningMsg);\n\t\tThread.sleep(500);\n\t\t\n// Close all windows\n\t\tList<String> handles = obj.windowHandling();\n\t\tfor(int i=0;i<handles.size();i++)\n\t\t{\n\t\t\tdriver.switchTo().window(handles.get(i)).close();\n\t\t}\n\t\tSystem.out.println(\"Closed all windows\");\n\t}", "url": "https://raw.githubusercontent.com/Janani-Palani/MyLearningSpace/master/Day2NykaaTest.java", "stars": "24", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 61238, "method_name": "shouldHaveRequiredStandardConstants", "class_name": "JdbcTypeTest", "params": [], "throws": ["Exception"], "modifiers": [], "return_type": "void", "snippet": "  void shouldHaveRequiredStandardConstants() throws Exception {\n    for (String typeName : requiredStandardTypeNames) {\n      int typeCode = Types.class.getField(typeName).getInt(null);\n      JdbcType jdbcType = JdbcType.valueOf(typeName);\n      assertEquals(typeCode, jdbcType.TYPE_CODE);\n    }\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/type/JdbcTypeTest.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 61239, "method_name": "shouldHaveDateTimeOffsetConstant", "class_name": "JdbcTypeTest", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "  void shouldHaveDateTimeOffsetConstant() {\n    JdbcType jdbcType = JdbcType.valueOf(\"DATETIMEOFFSET\");\n    assertEquals(-155, jdbcType.TYPE_CODE);\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/type/JdbcTypeTest.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 61240, "method_name": "getUid", "class_name": "FristSecurityData", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Long", "snippet": "\tpublic Long getUid() {\n\t\treturn uid;\n\t}", "url": "https://raw.githubusercontent.com/BanqiJane/Bilibili_Danmuji/master/Bilibilidanmuji/src/main/java/xyz/acproject/danmuji/entity/FristSecurityData.java", "stars": "3", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 61241, "method_name": "setUid", "class_name": "FristSecurityData", "params": ["Long"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void setUid(Long uid) {\n\t\tthis.uid = uid;\n\t}", "url": "https://raw.githubusercontent.com/BanqiJane/Bilibili_Danmuji/master/Bilibilidanmuji/src/main/java/xyz/acproject/danmuji/entity/FristSecurityData.java", "stars": "3", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 61242, "method_name": "getRoomid", "class_name": "FristSecurityData", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Long", "snippet": "\tpublic Long getRoomid() {\n\t\treturn roomid;\n\t}", "url": "https://raw.githubusercontent.com/BanqiJane/Bilibili_Danmuji/master/Bilibilidanmuji/src/main/java/xyz/acproject/danmuji/entity/FristSecurityData.java", "stars": "3", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 61243, "method_name": "setRoomid", "class_name": "FristSecurityData", "params": ["Long"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void setRoomid(Long roomid) {\n\t\tthis.roomid = roomid;\n\t}", "url": "https://raw.githubusercontent.com/BanqiJane/Bilibili_Danmuji/master/Bilibilidanmuji/src/main/java/xyz/acproject/danmuji/entity/FristSecurityData.java", "stars": "3", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 61244, "method_name": "getProtover", "class_name": "FristSecurityData", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Integer", "snippet": "\tpublic Integer getProtover() {\n\t\treturn protover;\n\t}", "url": "https://raw.githubusercontent.com/BanqiJane/Bilibili_Danmuji/master/Bilibilidanmuji/src/main/java/xyz/acproject/danmuji/entity/FristSecurityData.java", "stars": "3", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 61245, "method_name": "setProtover", "class_name": "FristSecurityData", "params": ["Integer"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void setProtover(Integer protover) {\n\t\tthis.protover = protover;\n\t}", "url": "https://raw.githubusercontent.com/BanqiJane/Bilibili_Danmuji/master/Bilibilidanmuji/src/main/java/xyz/acproject/danmuji/entity/FristSecurityData.java", "stars": "3", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 61246, "method_name": "getPlatform", "class_name": "FristSecurityData", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "\tpublic String getPlatform() {\n\t\treturn platform;\n\t}", "url": "https://raw.githubusercontent.com/BanqiJane/Bilibili_Danmuji/master/Bilibilidanmuji/src/main/java/xyz/acproject/danmuji/entity/FristSecurityData.java", "stars": "3", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 61247, "method_name": "setPlatform", "class_name": "FristSecurityData", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void setPlatform(String platform) {\n\t\tthis.platform = platform;\n\t}", "url": "https://raw.githubusercontent.com/BanqiJane/Bilibili_Danmuji/master/Bilibilidanmuji/src/main/java/xyz/acproject/danmuji/entity/FristSecurityData.java", "stars": "3", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 61248, "method_name": "getClientver", "class_name": "FristSecurityData", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "\tpublic String getClientver() {\n\t\treturn clientver;\n\t}", "url": "https://raw.githubusercontent.com/BanqiJane/Bilibili_Danmuji/master/Bilibilidanmuji/src/main/java/xyz/acproject/danmuji/entity/FristSecurityData.java", "stars": "3", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 61249, "method_name": "setClientver", "class_name": "FristSecurityData", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void setClientver(String clientver) {\n\t\tthis.clientver = clientver;\n\t}", "url": "https://raw.githubusercontent.com/BanqiJane/Bilibili_Danmuji/master/Bilibilidanmuji/src/main/java/xyz/acproject/danmuji/entity/FristSecurityData.java", "stars": "3", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 61250, "method_name": "getType", "class_name": "FristSecurityData", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Integer", "snippet": "\tpublic Integer getType() {\n\t\treturn type;\n\t}", "url": "https://raw.githubusercontent.com/BanqiJane/Bilibili_Danmuji/master/Bilibilidanmuji/src/main/java/xyz/acproject/danmuji/entity/FristSecurityData.java", "stars": "3", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 61251, "method_name": "setType", "class_name": "FristSecurityData", "params": ["Integer"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void setType(Integer type) {\n\t\tthis.type = type;\n\t}", "url": "https://raw.githubusercontent.com/BanqiJane/Bilibili_Danmuji/master/Bilibilidanmuji/src/main/java/xyz/acproject/danmuji/entity/FristSecurityData.java", "stars": "3", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 61252, "method_name": "getKey", "class_name": "FristSecurityData", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "\tpublic String getKey() {\n\t\treturn key;\n\t}", "url": "https://raw.githubusercontent.com/BanqiJane/Bilibili_Danmuji/master/Bilibilidanmuji/src/main/java/xyz/acproject/danmuji/entity/FristSecurityData.java", "stars": "3", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 61253, "method_name": "setKey", "class_name": "FristSecurityData", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void setKey(String key) {\n\t\tthis.key = key;\n\t}", "url": "https://raw.githubusercontent.com/BanqiJane/Bilibili_Danmuji/master/Bilibilidanmuji/src/main/java/xyz/acproject/danmuji/entity/FristSecurityData.java", "stars": "3", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 61254, "method_name": "toString", "class_name": "FristSecurityData", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "\tpublic String toString() {\n\t\treturn \"FristSecurityData [uid=\" + uid + \", roomid=\" + roomid + \", protover=\" + protover + \", platform=\"\n\t\t\t\t+ platform + \", clientver=\" + clientver + \", type=\" + type + \", key=\" + key + \"]\";\n\t}", "url": "https://raw.githubusercontent.com/BanqiJane/Bilibili_Danmuji/master/Bilibilidanmuji/src/main/java/xyz/acproject/danmuji/entity/FristSecurityData.java", "stars": "3", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 61255, "method_name": "toJson", "class_name": "FristSecurityData", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "\tpublic String toJson() {\n\t\treturn FastJsonUtils.toJson(new FristSecurityData(uid,roomid,protover,platform,clientver,type,key));\n\t}", "url": "https://raw.githubusercontent.com/BanqiJane/Bilibili_Danmuji/master/Bilibilidanmuji/src/main/java/xyz/acproject/danmuji/entity/FristSecurityData.java", "stars": "3", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 61256, "method_name": "getAdminByUsername", "class_name": "UmsAdminServiceImpl", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "UmsAdmin", "snippet": "    public UmsAdmin getAdminByUsername(String username) {\n        UmsAdminExample example = new UmsAdminExample();\n        example.createCriteria().andUsernameEqualTo(username);\n        List<UmsAdmin> adminList = adminMapper.selectByExample(example);\n        if (adminList != null && adminList.size() > 0) {\n            return adminList.get(0);\n        }\n        return null;\n    }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/security-jwt/src/main/java/com/yyj/security/service/impl/UmsAdminServiceImpl.java", "stars": "2", "class_props": {"extends": null, "implements": ["UmsAdminService"], "modifiers": ["public"]}}, {"id": 61257, "method_name": "register", "class_name": "UmsAdminServiceImpl", "params": ["UmsAdmin"], "throws": null, "modifiers": ["public"], "return_type": "UmsAdmin", "snippet": "    public UmsAdmin register(UmsAdmin umsAdminParam) {\n        UmsAdmin umsAdmin = new UmsAdmin();\n        BeanUtils.copyProperties(umsAdminParam, umsAdmin);\n        umsAdmin.setCreateTime(new Date());\n        umsAdmin.setStatus(1);\n        //\u67e5\u8be2\u662f\u5426\u6709\u76f8\u540c\u7528\u6237\u540d\u7684\u7528\u6237\n        UmsAdminExample example = new UmsAdminExample();\n        example.createCriteria().andUsernameEqualTo(umsAdmin.getUsername());\n        List<UmsAdmin> umsAdminList = adminMapper.selectByExample(example);\n        if (umsAdminList.size() > 0) {\n            return null;\n        }\n        //\u5c06\u5bc6\u7801\u8fdb\u884c\u52a0\u5bc6\u64cd\u4f5c\n        String encodePassword = passwordEncoder.encode(umsAdmin.getPassword());\n        umsAdmin.setPassword(encodePassword);\n        adminMapper.insert(umsAdmin);\n        return umsAdmin;\n    }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/security-jwt/src/main/java/com/yyj/security/service/impl/UmsAdminServiceImpl.java", "stars": "2", "class_props": {"extends": null, "implements": ["UmsAdminService"], "modifiers": ["public"]}}, {"id": 61258, "method_name": "login", "class_name": "UmsAdminServiceImpl", "params": ["String", "String"], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String login(String username, String password) {\n        String token = null;\n        try {\n            UserDetails userDetails = userDetailsService.loadUserByUsername(username);\n            if (!passwordEncoder.matches(password, userDetails.getPassword())) {\n                throw new BadCredentialsException(\"\u5bc6\u7801\u4e0d\u6b63\u786e\");\n            }\n            UsernamePasswordAuthenticationToken authentication = new UsernamePasswordAuthenticationToken(userDetails, null, userDetails.getAuthorities());\n            SecurityContextHolder.getContext().setAuthentication(authentication);\n            token = jwtTokenUtil.generateToken(userDetails);\n        } catch (AuthenticationException e) {\n            LOGGER.warn(\"\u767b\u5f55\u5f02\u5e38:{}\", e.getMessage());\n        }\n        return token;\n    }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/security-jwt/src/main/java/com/yyj/security/service/impl/UmsAdminServiceImpl.java", "stars": "2", "class_props": {"extends": null, "implements": ["UmsAdminService"], "modifiers": ["public"]}}, {"id": 61259, "method_name": "getPermissionList", "class_name": "UmsAdminServiceImpl", "params": ["Long"], "throws": null, "modifiers": ["public"], "return_type": "List<UmsPermission>", "snippet": "    public List<UmsPermission> getPermissionList(Long adminId) {\n        return adminRoleRelationDao.getPermissionList(adminId);\n    }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/security-jwt/src/main/java/com/yyj/security/service/impl/UmsAdminServiceImpl.java", "stars": "2", "class_props": {"extends": null, "implements": ["UmsAdminService"], "modifiers": ["public"]}}, {"id": 61260, "method_name": "onCreateViewHolder", "class_name": "CovidCountryAdapter", "params": ["ViewGroup", "int"], "throws": null, "modifiers": ["public"], "return_type": "CovidCountryAdapter", "snippet": "    public CovidCountryAdapter.ViewHolder onCreateViewHolder(@NonNull ViewGroup parent, int viewType) {\n        View view = LayoutInflater.from(parent.getContext()).inflate(R.layout.item_list_covid_country, parent, false);\n\n        return new ViewHolder(view);\n    }", "url": "https://raw.githubusercontent.com/Suvoo/CovidTrackerApp/master/app/src/main/java/com/example/trackcovid/ui/country/CovidCountryAdapter.java", "stars": "11", "class_props": {"extends": "RecyclerView", "implements": ["Filterable"], "modifiers": ["public"]}}, {"id": 61261, "method_name": "onBindViewHolder", "class_name": "CovidCountryAdapter", "params": ["CovidCountryAdapter", "int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onBindViewHolder(@NonNull CovidCountryAdapter.ViewHolder holder, int position) {\n        CovidCountry covidCountry = covidCountries.get(position);\n        holder.tvTotalCases.setText(Integer.toString(covidCountry.getmCases()));\n        holder.tvCountryName.setText(covidCountry.getmCovidCountry());\n\n        // Glide\n        Glide.with(context)\n                .load(covidCountry.getmFlags())\n                .apply(new RequestOptions().override(240, 160))\n                .into(holder.imgCountryFlag);\n    }", "url": "https://raw.githubusercontent.com/Suvoo/CovidTrackerApp/master/app/src/main/java/com/example/trackcovid/ui/country/CovidCountryAdapter.java", "stars": "11", "class_props": {"extends": "RecyclerView", "implements": ["Filterable"], "modifiers": ["public"]}}, {"id": 61262, "method_name": "getItemCount", "class_name": "CovidCountryAdapter", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getItemCount() {\n        return covidCountries.size();\n    }", "url": "https://raw.githubusercontent.com/Suvoo/CovidTrackerApp/master/app/src/main/java/com/example/trackcovid/ui/country/CovidCountryAdapter.java", "stars": "11", "class_props": {"extends": "RecyclerView", "implements": ["Filterable"], "modifiers": ["public"]}}, {"id": 61263, "method_name": "getFilter", "class_name": "CovidCountryAdapter", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Filter", "snippet": "    public Filter getFilter() {\n        return covidCountriesFilter;\n    }", "url": "https://raw.githubusercontent.com/Suvoo/CovidTrackerApp/master/app/src/main/java/com/example/trackcovid/ui/country/CovidCountryAdapter.java", "stars": "11", "class_props": {"extends": "RecyclerView", "implements": ["Filterable"], "modifiers": ["public"]}}, {"id": 61264, "method_name": "main", "class_name": "StrSubstring", "params": ["String"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "\tpublic static void main(String[] args) {\n\t\t// Using substring method we can get some part of the string based on indexes\n\t\t\n\t\t//             01234567891011\n\t\tString java = \"Java is fun.\";\n\t\tString javaFun = java.substring(8);\n\t\tSystem.out.println(java);\n\t\tSystem.out.println(javaFun);\n\t\t\n\t\t//            0123456789\n\t\tString str = \"SoftSkills\";\n\t\tstr = str.substring(4);\n\t\tSystem.out.println(str);\n\t\t\n\t\t//     012345678\n\t\tstr = \"workspace\";\n\t\tstr = str.substring(4);\n\t\tSystem.out.println(str);\n\t\t\n\t\t//             0123456789\n\t    String str1 = \"SoftSkills\"; // Soft\n\t    str1 = str1.substring(0, 4);\n\t    System.out.println(str1);\n\t                              \n\t    //             012345678910111213\n\t    String str2 = \"Java is Cool!\"; // is\n\t    str2 = str2.substring(5, 7);\n\t\tSystem.out.println(str2);\n\t\t\n\t\t//             012345678\n\t\tString str3 = \"workspace\"; // work\n\t\tstr3 = str3.substring(0, 4); \n\t\tSystem.out.println(str3);\n\t\t\n\t\t         //    0123456789\n\t\tString str4 = \"HelloWorld\"; // loW\n\t\tString str5 = \"SDLC\"; // DL\n\t\tString str6 = \"Sublime\"; // bl\n\t\tString str7 = \"Window\"; // ind\n\t\tString str8 = \"OptimizePDF\"; // PDF\n\t\tString str9 = \"Navigate\"; // Nav\n\t\tString str10 = \"Search\"; // ear\n\t\t\n\t\tSystem.out.println(\"----------------\");\n\t\tSystem.out.println(str4.substring(3, 6));\t\t\n\t\tSystem.out.println(str5.substring(1, 3));\n\t\tSystem.out.println(str6.substring(2, 4));\n\t\tSystem.out.println(str7.substring(1, 4));\n\t\tSystem.out.println(str8.substring(8));\n\t\tSystem.out.println(str9.substring(0, 3));\n\t\tSystem.out.println(str10.substring(1, 4));\n\t\t\n\t\tSystem.out.println(str5);\n\t}", "url": "https://raw.githubusercontent.com/Suranchiyev/java-sdet-2020/master/src/day10/StrSubstring.java", "stars": "21", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 61265, "method_name": "getDatabaseId", "class_name": "VendorDatabaseIdProvider", "params": ["DataSource"], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "  public String getDatabaseId(DataSource dataSource) {\n    if (dataSource == null) {\n      throw new NullPointerException(\"dataSource cannot be null\");\n    }\n    try {\n      return getDatabaseName(dataSource);\n    } catch (Exception e) {\n      LogHolder.log.error(\"Could not get a databaseId from dataSource\", e);\n    }\n    return null;\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/mapping/VendorDatabaseIdProvider.java", "stars": "15", "class_props": {"extends": null, "implements": ["DatabaseIdProvider"], "modifiers": ["public"]}}, {"id": 61266, "method_name": "setProperties", "class_name": "VendorDatabaseIdProvider", "params": ["Properties"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void setProperties(Properties p) {\n    this.properties = p;\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/mapping/VendorDatabaseIdProvider.java", "stars": "15", "class_props": {"extends": null, "implements": ["DatabaseIdProvider"], "modifiers": ["public"]}}, {"id": 61267, "method_name": "getDatabaseName", "class_name": "VendorDatabaseIdProvider", "params": ["DataSource"], "throws": ["SQLException"], "modifiers": ["private"], "return_type": "String", "snippet": "  private String getDatabaseName(DataSource dataSource) throws SQLException {\n    String productName = getDatabaseProductName(dataSource);\n    if (this.properties != null) {\n      for (Map.Entry<Object, Object> property : properties.entrySet()) {\n        if (productName.contains((String) property.getKey())) {\n          return (String) property.getValue();\n        }\n      }\n      // no match, return null\n      return null;\n    }\n    return productName;\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/mapping/VendorDatabaseIdProvider.java", "stars": "15", "class_props": {"extends": null, "implements": ["DatabaseIdProvider"], "modifiers": ["public"]}}, {"id": 61268, "method_name": "getDatabaseProductName", "class_name": "VendorDatabaseIdProvider", "params": ["DataSource"], "throws": ["SQLException"], "modifiers": ["private"], "return_type": "String", "snippet": "  private String getDatabaseProductName(DataSource dataSource) throws SQLException {\n    try (Connection con = dataSource.getConnection()) {\n      DatabaseMetaData metaData = con.getMetaData();\n      return metaData.getDatabaseProductName();\n    }\n\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/mapping/VendorDatabaseIdProvider.java", "stars": "15", "class_props": {"extends": null, "implements": ["DatabaseIdProvider"], "modifiers": ["public"]}}, {"id": 61269, "method_name": "getReturn", "class_name": "GetChargeTreeResponse", "params": [], "throws": null, "modifiers": ["public"], "return_type": "PaymentTypeItem", "snippet": "    public PaymentTypeItem getReturn() {\n        return _return;\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/ws/contract/balance/paymcharge/GetChargeTreeResponse.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 61270, "method_name": "setReturn", "class_name": "GetChargeTreeResponse", "params": ["PaymentTypeItem"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setReturn(PaymentTypeItem value) {\n        this._return = value;\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/ws/contract/balance/paymcharge/GetChargeTreeResponse.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 61271, "method_name": "dummy", "class_name": "ApiController", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "\tpublic String dummy() {\n\t\treturn \"Hi there, This is a Rest api for a project application called SHARE-IT.\" + \"\\n\"\n\t\t\t\t+ \" TO use this API please contact Akif Arfien @akifarfien.\";\n\t}", "url": "https://raw.githubusercontent.com/akifarfien/RestApi-SpringBoot--ChatMateApp/master/src/main/java/com/project/copypasteapi/Controller/ApiController.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 61272, "method_name": "getBean", "class_name": "ApiController", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "Optional<CopyPasteBean>", "snippet": "\tpublic Optional<CopyPasteBean> getBean(@PathVariable(\"id\") String id) {\n\n\t\tOptional<CopyPasteBean> bean = repository.findById(id);\n\n\t\tif (!(bean.isPresent())) {\n\t\t\tthrow new ApiException(\"ID : \" + id + \" is not found\");\n\t\t} else\n\t\t\treturn bean;\n\n\t}", "url": "https://raw.githubusercontent.com/akifarfien/RestApi-SpringBoot--ChatMateApp/master/src/main/java/com/project/copypasteapi/Controller/ApiController.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 61273, "method_name": "say", "class_name": "ApiController", "params": [], "throws": null, "modifiers": ["public"], "return_type": "List<CopyPasteBean>", "snippet": "\tpublic List<CopyPasteBean> say() {\n\t\treturn repository.findAll();\n\t}", "url": "https://raw.githubusercontent.com/akifarfien/RestApi-SpringBoot--ChatMateApp/master/src/main/java/com/project/copypasteapi/Controller/ApiController.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 61274, "method_name": "createEntry", "class_name": "ApiController", "params": ["CopyPasteBean"], "throws": null, "modifiers": ["public"], "return_type": "CopyPasteBean", "snippet": "\tpublic CopyPasteBean createEntry(@RequestBody CopyPasteBean bean) {\n\n\t\tDateTimeFormatter dtf = DateTimeFormatter.ofPattern(\"yyyy/MM/dd HH:mm:ss\");\n\t\tLocalDateTime now = LocalDateTime.now();\n\t\tbean.setDateandTime(dtf.format(now));\n\n\t\tUserData ud = new UserData();\n\t\tud.setName(bean.getName());\n\t\tud.setTextmssg(bean.getLastcontent());\n\n\t\tbean.getContentList().add(ud);\n\n\t\tif (bean.getUniqueCodeUrl().isEmpty()) {\n\t\t\tbean.setUniqueCodeUrl(generateString());\n\t\t}\n\n\t\trepository.save(bean);\n\t\treturn bean;\n\n\t}", "url": "https://raw.githubusercontent.com/akifarfien/RestApi-SpringBoot--ChatMateApp/master/src/main/java/com/project/copypasteapi/Controller/ApiController.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 61275, "method_name": "updateEntry", "class_name": "ApiController", "params": ["CopyPasteBean"], "throws": null, "modifiers": ["public"], "return_type": "CopyPasteBean", "snippet": "\tpublic CopyPasteBean updateEntry(@RequestBody CopyPasteBean bean) {\n\n\t\tOptional<CopyPasteBean> dtoOptional = repository.findById(bean.getUniqueCodeUrl());\n\n\t\tif (!(dtoOptional.isPresent())) {\n\n\t\t\tthrow new ApiException(\"ID : \" + bean.getUniqueCodeUrl() + \" is not found\");\n\t\t} else {\n\t\t\tCopyPasteBean dto = dtoOptional.get();\n\n\t\t\tDateTimeFormatter dtf = DateTimeFormatter.ofPattern(\"yyyy/MM/dd HH:mm:ss\");\n\t\t\tLocalDateTime now = LocalDateTime.now();\n\t\t\tdto.setDateandTime(dtf.format(now));\n\t\t\tdto.setLastcontent(bean.getLastcontent());\n\n\t\t\tUserData ud = new UserData();\n\t\t\tud.setName(bean.getName());\n\t\t\tud.setTextmssg(bean.getLastcontent());\n\n\t\t\tdto.getContentList().add(ud);\n\n\t\t\trepository.save(dto);\n\t\t\treturn dto;\n\t\t}\n\n\t}", "url": "https://raw.githubusercontent.com/akifarfien/RestApi-SpringBoot--ChatMateApp/master/src/main/java/com/project/copypasteapi/Controller/ApiController.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 61276, "method_name": "deleteEntries", "class_name": "ApiController", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "\tprivate void deleteEntries() {\n\n\t\tSystem.out.println(\"I am from  Schedul Task\");\n\t\tList<CopyPasteBean> list = new ArrayList<CopyPasteBean>();\n\n\t\tfor (CopyPasteBean bean : repository.findAll()) {\n\n\t\t\tDateTimeFormatter dtf = DateTimeFormatter.ofPattern(\"yyyy/MM/dd HH:mm:ss\");\n\t\t\tLocalDateTime d = LocalDateTime.parse(bean.getDateandTime(), dtf);\n\n\t\t\tLocalDateTime d10 = d.plusMinutes(15); // 10\n\n\t\t\tString newTime = dtf.format(d10);\n\n\t\t\tLocalDateTime now = LocalDateTime.now();\n\n\t\t\tSystem.out.print(newTime);\n\n\t\t\tif (d10.isBefore(now)) {\n\t\t\t\tlist.add(bean);\n\n\t\t\t}\n\n\t\t}\n\n\t\tif (!(list.isEmpty())) {\n\t\t\trepository.deleteAll(list);\n\t\t}\n\t}", "url": "https://raw.githubusercontent.com/akifarfien/RestApi-SpringBoot--ChatMateApp/master/src/main/java/com/project/copypasteapi/Controller/ApiController.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 61277, "method_name": "generateString", "class_name": "ApiController", "params": [], "throws": null, "modifiers": ["static", "private"], "return_type": "String", "snippet": "\tprivate static String generateString() {\n\t\tString uuid = UUID.randomUUID().toString();\n\t\treturn uuid.substring(25);\n\t}", "url": "https://raw.githubusercontent.com/akifarfien/RestApi-SpringBoot--ChatMateApp/master/src/main/java/com/project/copypasteapi/Controller/ApiController.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 61278, "method_name": "main", "class_name": "NettyDelayQueue", "params": ["String"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void main(String[] args) {\n\n        final Timer timer = new HashedWheelTimer(Executors.defaultThreadFactory(), 5, TimeUnit.SECONDS, 2);\n        TimerTask task1 = new TimerTask() {\n            public void run(Timeout timeout) throws Exception {\n                System.out.println(\"order1  5s \u540e\u6267\u884c \");\n                timer.newTimeout(this, 5, TimeUnit.SECONDS);//\u7ed3\u675f\u65f6\u5019\u518d\u6b21\u6ce8\u518c\n            }\n        };\n        timer.newTimeout(task1, 5, TimeUnit.SECONDS);\n        TimerTask task2 = new TimerTask() {\n            public void run(Timeout timeout) throws Exception {\n                System.out.println(\"order2  10s \u540e\u6267\u884c\");\n                timer.newTimeout(this, 10, TimeUnit.SECONDS);//\u7ed3\u675f\u65f6\u5019\u518d\u6ce8\u518c\n            }\n        };\n\n        timer.newTimeout(task2, 10, TimeUnit.SECONDS);\n\n        //\u8be5\u4efb\u52a1\u4ec5\u4ec5\u8fd0\u884c\u4e00\u6b21\n        timer.newTimeout(new TimerTask() {\n            public void run(Timeout timeout) throws Exception {\n                System.out.println(\"order3  15s \u540e\u6267\u884c\u4e00\u6b21\");\n            }\n        }, 15, TimeUnit.SECONDS);\n\n    }", "url": "https://raw.githubusercontent.com/chengxy-nds/delayqueue/master/src/main/java/com/chengxy/delayqueue/netty/NettyDelayQueue.java", "stars": "7", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 61279, "method_name": "getCategorias", "class_name": "CategoriaBean", "params": [], "throws": null, "modifiers": ["public"], "return_type": "List<Categoria>", "snippet": "\tpublic List<Categoria> getCategorias() {\n\t\treturn categorias;\n\t}", "url": "https://raw.githubusercontent.com/emanoel2712/MeusPedidos/master/src/main/java/br/senac/sc/meuspedidos/bean/CategoriaBean.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 61280, "method_name": "getKnifeQQ", "class_name": "Knife", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getKnifeQQ() {\n        return knifeQQ;\n    }", "url": "https://raw.githubusercontent.com/sciuridae564/PcrTool/tick/src/main/java/cn/sciuridae/DB/bean/Knife.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 61281, "method_name": "setKnifeQQ", "class_name": "Knife", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setKnifeQQ(String knifeQQ) {\n        this.knifeQQ = knifeQQ;\n    }", "url": "https://raw.githubusercontent.com/sciuridae564/PcrTool/tick/src/main/java/cn/sciuridae/DB/bean/Knife.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 61282, "method_name": "getNo", "class_name": "Knife", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getNo() {\n        return no;\n    }", "url": "https://raw.githubusercontent.com/sciuridae564/PcrTool/tick/src/main/java/cn/sciuridae/DB/bean/Knife.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 61283, "method_name": "setNo", "class_name": "Knife", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setNo(int no) {\n        this.no = no;\n    }", "url": "https://raw.githubusercontent.com/sciuridae564/PcrTool/tick/src/main/java/cn/sciuridae/DB/bean/Knife.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 61284, "method_name": "getHurt", "class_name": "Knife", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getHurt() {\n        return hurt;\n    }", "url": "https://raw.githubusercontent.com/sciuridae564/PcrTool/tick/src/main/java/cn/sciuridae/DB/bean/Knife.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 61285, "method_name": "setHurt", "class_name": "Knife", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setHurt(int hurt) {\n        this.hurt = hurt;\n    }", "url": "https://raw.githubusercontent.com/sciuridae564/PcrTool/tick/src/main/java/cn/sciuridae/DB/bean/Knife.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 61286, "method_name": "getDate", "class_name": "Knife", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getDate() {\n        return date;\n    }", "url": "https://raw.githubusercontent.com/sciuridae564/PcrTool/tick/src/main/java/cn/sciuridae/DB/bean/Knife.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 61287, "method_name": "setDate", "class_name": "Knife", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setDate(String date) {\n        this.date = date;\n    }", "url": "https://raw.githubusercontent.com/sciuridae564/PcrTool/tick/src/main/java/cn/sciuridae/DB/bean/Knife.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 61288, "method_name": "isComplete", "class_name": "Knife", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean isComplete() {\n        return complete;\n    }", "url": "https://raw.githubusercontent.com/sciuridae564/PcrTool/tick/src/main/java/cn/sciuridae/DB/bean/Knife.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 61289, "method_name": "setComplete", "class_name": "Knife", "params": ["boolean"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setComplete(boolean complete) {\n        this.complete = complete;\n    }", "url": "https://raw.githubusercontent.com/sciuridae564/PcrTool/tick/src/main/java/cn/sciuridae/DB/bean/Knife.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 61290, "method_name": "getId", "class_name": "Knife", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getId() {\n        return id;\n    }", "url": "https://raw.githubusercontent.com/sciuridae564/PcrTool/tick/src/main/java/cn/sciuridae/DB/bean/Knife.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 61291, "method_name": "setId", "class_name": "Knife", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setId(int id) {\n        this.id = id;\n    }", "url": "https://raw.githubusercontent.com/sciuridae564/PcrTool/tick/src/main/java/cn/sciuridae/DB/bean/Knife.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 61292, "method_name": "toString", "class_name": "Knife", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String toString() {\n        return \"Knife{\" +\n                \"knifeQQ='\" + knifeQQ + '\\'' +\n                \", no=\" + no +\n                \", hurt=\" + hurt +\n                \", date='\" + date + '\\'' +\n                '}';\n    }", "url": "https://raw.githubusercontent.com/sciuridae564/PcrTool/tick/src/main/java/cn/sciuridae/DB/bean/Knife.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 61293, "method_name": "getSerialPorts", "class_name": "SerialManager", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String[] getSerialPorts() {\n        throw new RuntimeException();\n    }", "url": "https://raw.githubusercontent.com/CoboVault/cobo-vault-cold/master/encryption-core/src/main/java/android/hardware/SerialManager.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 61294, "method_name": "openSerialPort", "class_name": "SerialManager", "params": ["String", "int"], "throws": ["IOException"], "modifiers": ["public"], "return_type": "SerialPort", "snippet": "    public SerialPort openSerialPort(String name, int speed) throws IOException {\n        throw new RuntimeException();\n    }", "url": "https://raw.githubusercontent.com/CoboVault/cobo-vault-cold/master/encryption-core/src/main/java/android/hardware/SerialManager.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 61295, "method_name": "setNextApprover", "class_name": "Approver", "params": ["Approver"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setNextApprover(Approver approver){\n        this.approver = approver;\n    }", "url": "https://raw.githubusercontent.com/wangIQD/GoF23/master/GOF23/DesignPattern/src/com/wz/behavioral/chainofresponsibility/Approver.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 61296, "method_name": "deploy", "class_name": "Approver", "params": ["Course"], "throws": null, "modifiers": ["public", "abstract"], "return_type": "void", "snippet": "    public abstract void deploy(Course course);\n}\n\n", "url": "https://raw.githubusercontent.com/wangIQD/GoF23/master/GOF23/DesignPattern/src/com/wz/behavioral/chainofresponsibility/Approver.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 61297, "method_name": "onDetachedFromWindow", "class_name": "RecyclingImageView", "params": [], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void onDetachedFromWindow() {\n        // This has been detached from Window, so clear the drawable\n        setImageDrawable(null);\n\n        super.onDetachedFromWindow();\n    }", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/ImageGridActivity/src/com/example/android/displayingbitmaps/ui/RecyclingImageView.java", "stars": "74", "class_props": {"extends": "ImageView", "implements": null, "modifiers": ["public"]}}, {"id": 61298, "method_name": "setImageDrawable", "class_name": "RecyclingImageView", "params": ["Drawable"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setImageDrawable(Drawable drawable) {\n        // Keep hold of previous Drawable\n        final Drawable previousDrawable = getDrawable();\n\n        // Call super to set new Drawable\n        super.setImageDrawable(drawable);\n\n        // Notify new Drawable that it is being displayed\n        notifyDrawable(drawable, true);\n\n        // Notify old Drawable so it is no longer being displayed\n        notifyDrawable(previousDrawable, false);\n    }", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/ImageGridActivity/src/com/example/android/displayingbitmaps/ui/RecyclingImageView.java", "stars": "74", "class_props": {"extends": "ImageView", "implements": null, "modifiers": ["public"]}}, {"id": 61299, "method_name": "notifyDrawable", "class_name": "RecyclingImageView", "params": ["Drawable", "boolean"], "throws": null, "modifiers": ["static", "private"], "return_type": "void", "snippet": "    private static void notifyDrawable(Drawable drawable, final boolean isDisplayed) {\n        if (drawable instanceof RecyclingBitmapDrawable) {\n            // The drawable is a CountingBitmapDrawable, so notify it\n            ((RecyclingBitmapDrawable) drawable).setIsDisplayed(isDisplayed);\n        } else if (drawable instanceof LayerDrawable) {\n            // The drawable is a LayerDrawable, so recurse on each layer\n            LayerDrawable layerDrawable = (LayerDrawable) drawable;\n            for (int i = 0, z = layerDrawable.getNumberOfLayers(); i < z; i++) {\n                notifyDrawable(layerDrawable.getDrawable(i), isDisplayed);\n            }\n        }\n    }", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/ImageGridActivity/src/com/example/android/displayingbitmaps/ui/RecyclingImageView.java", "stars": "74", "class_props": {"extends": "ImageView", "implements": null, "modifiers": ["public"]}}, {"id": 61300, "method_name": "prepare", "class_name": "StartMenu", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void prepare()\n    {\n        Title title = new Title();\n        addObject(title,450,300);\n        Tanque tanque = new Tanque();\n        addObject(tanque,783,483);\n        \n    }", "url": "https://raw.githubusercontent.com/jesus-antulio/Tankzors-Fangame/master/StartMenu.java", "stars": "1", "class_props": {"extends": "World", "implements": null, "modifiers": ["public"]}}, {"id": 61301, "method_name": "act", "class_name": "StartMenu", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void act(){\n        if(Greenfoot.isKeyDown(\"enter\")){\n            Greenfoot.setWorld(new Level1());\n        }\n       \n    }", "url": "https://raw.githubusercontent.com/jesus-antulio/Tankzors-Fangame/master/StartMenu.java", "stars": "1", "class_props": {"extends": "World", "implements": null, "modifiers": ["public"]}}, {"id": 61302, "method_name": "getEmailAddress", "class_name": "CreateUserCommand", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getEmailAddress() {\n        return username;\n    }", "url": "https://raw.githubusercontent.com/everest-engineering/lhotse/master/users-api/src/main/java/engineering/everest/lhotse/users/domain/commands/CreateUserCommand.java", "stars": "9", "class_props": {"extends": null, "implements": ["EmailAddressValidatableCommand", "UserUniqueEmailValidatableCommand", "OrganizationStatusValidatableCommand"], "modifiers": ["public"]}}, {"id": 61303, "method_name": "getContainer", "class_name": "EVEStorageItem", "params": [], "throws": null, "modifiers": ["public"], "return_type": "ItemStack", "snippet": "    public ItemStack getContainer() {\n        return container;\n    }", "url": "https://raw.githubusercontent.com/Prunoideae/PhasePotion/master/src/main/java/com/naive/phase/Auxiliary/Magic/EVE/Storage/EVEStorageItem.java", "stars": "2", "class_props": {"extends": null, "implements": ["IEVEStorageItem", "ICapabilityProvider"], "modifiers": ["public"]}}, {"id": 61304, "method_name": "getEVE", "class_name": "EVEStorageItem", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Eve", "snippet": "    public Eve getEVE() {\n        NBTTagCompound tag = container.getTagCompound();\n        Eve blankEve = new Eve(0, capacity, hueRange.getMid(), brightnessRange.getMid(), 0);\n        if (tag == null || !tag.hasKey(EVE_NBT_KEY))\n            return blankEve;\n        return blankEve.readFromNBT(tag.getCompoundTag(EVE_NBT_KEY));\n    }", "url": "https://raw.githubusercontent.com/Prunoideae/PhasePotion/master/src/main/java/com/naive/phase/Auxiliary/Magic/EVE/Storage/EVEStorageItem.java", "stars": "2", "class_props": {"extends": null, "implements": ["IEVEStorageItem", "ICapabilityProvider"], "modifiers": ["public"]}}, {"id": 61305, "method_name": "setEVE", "class_name": "EVEStorageItem", "params": ["Eve"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setEVE(Eve incoming) {\n        if (container.getTagCompound() == null)\n            container.setTagCompound(new NBTTagCompound());\n\n        container.getTagCompound().setTag(EVE_NBT_KEY, incoming.writeToNBT());\n    }", "url": "https://raw.githubusercontent.com/Prunoideae/PhasePotion/master/src/main/java/com/naive/phase/Auxiliary/Magic/EVE/Storage/EVEStorageItem.java", "stars": "2", "class_props": {"extends": null, "implements": ["IEVEStorageItem", "ICapabilityProvider"], "modifiers": ["public"]}}, {"id": 61306, "method_name": "blendEVE", "class_name": "EVEStorageItem", "params": ["Eve", "boolean"], "throws": null, "modifiers": ["public"], "return_type": "Eve", "snippet": "    public Eve blendEVE(Eve incoming, boolean simulate) {\n        Pairs<Eve, Eve> result = DataHelper.blend(getEVE(), incoming);\n        if (!simulate)\n            setEVE(result.getFirst());\n        return result.getSecond();\n    }", "url": "https://raw.githubusercontent.com/Prunoideae/PhasePotion/master/src/main/java/com/naive/phase/Auxiliary/Magic/EVE/Storage/EVEStorageItem.java", "stars": "2", "class_props": {"extends": null, "implements": ["IEVEStorageItem", "ICapabilityProvider"], "modifiers": ["public"]}}, {"id": 61307, "method_name": "getHueRange", "class_name": "EVEStorageItem", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Range", "snippet": "    public Range getHueRange() {\n        return hueRange;\n    }", "url": "https://raw.githubusercontent.com/Prunoideae/PhasePotion/master/src/main/java/com/naive/phase/Auxiliary/Magic/EVE/Storage/EVEStorageItem.java", "stars": "2", "class_props": {"extends": null, "implements": ["IEVEStorageItem", "ICapabilityProvider"], "modifiers": ["public"]}}, {"id": 61308, "method_name": "getBrightnessRange", "class_name": "EVEStorageItem", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Range", "snippet": "    public Range getBrightnessRange() {\n        return brightnessRange;\n    }", "url": "https://raw.githubusercontent.com/Prunoideae/PhasePotion/master/src/main/java/com/naive/phase/Auxiliary/Magic/EVE/Storage/EVEStorageItem.java", "stars": "2", "class_props": {"extends": null, "implements": ["IEVEStorageItem", "ICapabilityProvider"], "modifiers": ["public"]}}, {"id": 61309, "method_name": "canBlend", "class_name": "EVEStorageItem", "params": ["Eve"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean canBlend(Eve incoming) {\n        return getHueRange().in(incoming.getHue()) && getBrightnessRange().in(incoming.getBrightness());\n    }", "url": "https://raw.githubusercontent.com/Prunoideae/PhasePotion/master/src/main/java/com/naive/phase/Auxiliary/Magic/EVE/Storage/EVEStorageItem.java", "stars": "2", "class_props": {"extends": null, "implements": ["IEVEStorageItem", "ICapabilityProvider"], "modifiers": ["public"]}}, {"id": 61310, "method_name": "hasCapability", "class_name": "EVEStorageItem", "params": ["Capability<?>", "EnumFacing"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean hasCapability(@Nonnull Capability<?> capability, @Nullable EnumFacing facing) {\n        return capability == CapabilityEVE.EVE_ITEM;\n    }", "url": "https://raw.githubusercontent.com/Prunoideae/PhasePotion/master/src/main/java/com/naive/phase/Auxiliary/Magic/EVE/Storage/EVEStorageItem.java", "stars": "2", "class_props": {"extends": null, "implements": ["IEVEStorageItem", "ICapabilityProvider"], "modifiers": ["public"]}}, {"id": 61311, "method_name": "getCapability", "class_name": "EVEStorageItem", "params": ["Capability<T>", "EnumFacing"], "throws": null, "modifiers": ["public"], "return_type": "T", "snippet": "    public <T> T getCapability(@Nonnull Capability<T> capability, @Nullable EnumFacing facing) {\n        return capability == CapabilityEVE.EVE_ITEM ? (T) this : null;\n    }", "url": "https://raw.githubusercontent.com/Prunoideae/PhasePotion/master/src/main/java/com/naive/phase/Auxiliary/Magic/EVE/Storage/EVEStorageItem.java", "stars": "2", "class_props": {"extends": null, "implements": ["IEVEStorageItem", "ICapabilityProvider"], "modifiers": ["public"]}}, {"id": 61312, "method_name": "main", "class_name": "dog", "params": ["String"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void main(String[] args) {\n        System.out.println(\"HELLO!!!\" + \"JAVA is coming!\");\n    }", "url": "https://raw.githubusercontent.com/liuminchao123/JavaWeb_Learning/master/02.%20java/Java/HF_code/01/dog.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 61313, "method_name": "ptz", "class_name": "PtzController", "params": ["String", "String", "int", "int", "int", "int", "int"], "throws": null, "modifiers": ["public"], "return_type": "ResponseEntity<String>", "snippet": "\tpublic ResponseEntity<String> ptz(@PathVariable String deviceId,@PathVariable String channelId,int leftRight, int upDown, int inOut, int moveSpeed, int zoomSpeed){\n\t\t\n\t\tif (logger.isDebugEnabled()) {\n\t\t\tlogger.debug(String.format(\"\u8bbe\u5907\u4e91\u53f0\u63a7\u5236 API\u8c03\u7528\uff0cdeviceId\uff1a%s \uff0cchannelId\uff1a%s \uff0cleftRight\uff1a%d \uff0cupDown\uff1a%d \uff0cinOut\uff1a%d \uff0cmoveSpeed\uff1a%d \uff0czoomSpeed\uff1a%d\",deviceId, channelId, leftRight, upDown, inOut, moveSpeed, zoomSpeed));\n\t\t}\n\t\tDevice device = storager.queryVideoDevice(deviceId);\n\t\t\n\t\tcmder.ptzCmd(device, channelId, leftRight, upDown, inOut, moveSpeed, zoomSpeed);\n\t\treturn new ResponseEntity<String>(\"success\",HttpStatus.OK);\n\t}", "url": "https://raw.githubusercontent.com/swwheihei/wvp/master/src/main/java/com/genersoft/iot/vmp/vmanager/ptz/PtzController.java", "stars": "29", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 61314, "method_name": "onCreateViewHolder", "class_name": "AdapterMarkets", "params": ["ViewGroup", "int"], "throws": null, "modifiers": ["public"], "return_type": "RecyclerView", "snippet": "    public RecyclerView.ViewHolder onCreateViewHolder(ViewGroup parent, int viewType) {\n\n        View view = null;\n\n        if(viewType == view_type_current_market)\n        {\n\n            return ViewHolderCurrentMarket.create(parent,fragment.getActivity());\n        }\n        else if(viewType==view_type_saved_markets_list)\n        {\n            return ViewHolderHorizontalList.create(parent,fragment.getActivity(),fragment);\n        }\n        else if(viewType == view_type_user_profile)\n        {\n            return ViewHolderUserProfile.create(parent,fragment.getActivity(),fragment);\n        }\n        else if(viewType == view_type_markets_header)\n        {\n            return ViewHolderHeader.createGreyBG(parent,fragment.getActivity());\n        }\n        else if(viewType == view_type_sign_in)\n        {\n            return ViewHolderSignIn.create(parent,fragment.getActivity(),fragment);\n        }\n        else if (viewType == VIEW_TYPE_Market) {\n\n            return ViewHolderMarket.create(parent,fragment.getActivity(), fragment);\n        }\n        else if(viewType == VIEW_TYPE_CREATE_SHOP)\n        {\n            return ViewHolderCreateShop.create(parent,fragment.getActivity(),fragment);\n        }\n        else if (viewType == VIEW_TYPE_SCROLL_PROGRESS_BAR) {\n\n\n            return LoadingViewHolder.create(parent,fragment.getActivity());\n        }\n        else if(viewType==VIEW_TYPE_create_market)\n        {\n            return ViewHolderEmptyScreenListItem.create(parent,fragment.getActivity(),fragment);\n        }\n        else if(viewType ==view_type_role_dashboard)\n        {\n            return ViewHolderRoleDashboard.create(parent,fragment.getActivity(),fragment);\n        }\n        else if(viewType ==view_type_role_dashboard_SDS)\n        {\n            return ViewHolderRoleDashboardSDS.create(parent,fragment.getActivity(),fragment);\n        }\n        else if(viewType==VIEW_TYPE_SET_LOCATION_MANUALLY)\n        {\n            return ViewHolderSetLocationManually.create(parent,fragment.getActivity(),fragment);\n        }\n        else if(viewType==VIEW_TYPE_EMPTY_SCREEN)\n        {\n            return ViewHolderEmptyScreenFullScreen.create(parent,fragment.getActivity(), fragment);\n        }\n\n        return null;\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/Lists/Markets/AdapterMarkets.java", "stars": "10", "class_props": {"extends": "RecyclerView", "implements": null, "modifiers": ["public"]}}, {"id": 61315, "method_name": "getItemViewType", "class_name": "AdapterMarkets", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getItemViewType(int position) {\n\n        super.getItemViewType(position);\n\n        if (position == dataset.size()) {\n\n            return VIEW_TYPE_SCROLL_PROGRESS_BAR;\n        }\n//        else if(dataset.get(position) instanceof Market)\n//        {\n//            return view_type_current_market;\n//        }\n        else if(dataset.get(position) instanceof MarketsList)\n        {\n            return view_type_saved_markets_list;\n        }\n        else if(dataset.get(position) instanceof SignInMarker)\n        {\n            return view_type_sign_in;\n        }\n        else if(dataset.get(position) instanceof User)\n        {\n            return view_type_user_profile;\n        }\n        else if(dataset.get(position) instanceof HeaderTitle)\n        {\n            return view_type_markets_header;\n        }\n        else if(dataset.get(position) instanceof Market){\n\n            return VIEW_TYPE_Market;\n        }\n        else if(dataset.get(position) instanceof EmptyScreenDataListItem)\n        {\n\n            return VIEW_TYPE_create_market;\n        }\n        else if(dataset.get(position) instanceof EmptyScreenDataFullScreen)\n        {\n            return VIEW_TYPE_EMPTY_SCREEN;\n        }\n        else if(dataset.get(position) instanceof RoleDashboardMarker)\n        {\n            return view_type_role_dashboard;\n        }\n        else if(dataset.get(position) instanceof RoleDashboardMarkerSDS)\n        {\n            return view_type_role_dashboard_SDS;\n        }\n        else if(dataset.get(position) instanceof SetLocationManually)\n        {\n            return VIEW_TYPE_SET_LOCATION_MANUALLY;\n        }\n        else if(dataset.get(position) instanceof CreateShopData)\n        {\n            return VIEW_TYPE_CREATE_SHOP;\n        }\n\n\n\n\n        return -1;\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/Lists/Markets/AdapterMarkets.java", "stars": "10", "class_props": {"extends": "RecyclerView", "implements": null, "modifiers": ["public"]}}, {"id": 61316, "method_name": "onBindViewHolder", "class_name": "AdapterMarkets", "params": ["RecyclerView", "int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onBindViewHolder(RecyclerView.ViewHolder holderVH, int position) {\n\n\n        if(holderVH instanceof ViewHolderCurrentMarket)\n        {\n            ViewHolderCurrentMarket holderCurrentMarket = (ViewHolderCurrentMarket) holderVH;\n            holderCurrentMarket.setItem((Market) dataset.get(position));\n\n        }\n        else if(holderVH instanceof ViewHolderRoleDashboard)\n        {\n            ((ViewHolderRoleDashboard) holderVH).bindDashboard();\n        }\n        else if(holderVH instanceof ViewHolderRoleDashboardSDS)\n        {\n            ((ViewHolderRoleDashboardSDS) holderVH).bindDashboard();\n        }\n        else if(holderVH instanceof ViewHolderCreateShop)\n        {\n            ((ViewHolderCreateShop) holderVH).setItem((CreateShopData) dataset.get(position));\n\n        }\n        else if(holderVH instanceof ViewHolderHorizontalList)\n        {\n            MarketsList marketsList = (MarketsList) dataset.get(position);\n            AdapterSavedMarkets adapter = new AdapterSavedMarkets(marketsList.getDataset(),fragment.getActivity(),fragment);\n            ((ViewHolderHorizontalList) holderVH).setItem(adapter,\"Favourite Markets\");\n\n        }\n        else if(holderVH instanceof ViewHolderUserProfile)\n        {\n            ViewHolderUserProfile viewHolderUserProfile = (ViewHolderUserProfile) holderVH;\n            viewHolderUserProfile.setItem((User) dataset.get(position));\n\n        }\n        else if (holderVH instanceof ViewHolderMarket) {\n\n\n            ((ViewHolderMarket)holderVH).setItem((Market) dataset.get(position));\n\n        }\n        else if(holderVH instanceof ViewHolderEmptyScreenFullScreen)\n        {\n            ((ViewHolderEmptyScreenFullScreen) holderVH).setItem((EmptyScreenDataFullScreen) dataset.get(position));\n        }\n        else if(holderVH instanceof ViewHolderEmptyScreenListItem)\n        {\n            if(dataset.get(position) instanceof EmptyScreenDataListItem)\n            {\n                ((ViewHolderEmptyScreenListItem) holderVH).setItem((EmptyScreenDataListItem) dataset.get(position));\n            }\n        }\n        else if(holderVH instanceof ViewHolderHeader)\n        {\n            ((ViewHolderHeader) holderVH).setItem((HeaderTitle) dataset.get(position));\n        }\n        else if (holderVH instanceof LoadingViewHolder) {\n\n            ((LoadingViewHolder) holderVH).setLoading(loadMore);\n        }\n\n\n        //        else if(holderVH instanceof ViewHolderSavedMarketList)\n//        {\n//\n//            ((ViewHolderSavedMarketList) holderVH).setItem((List<ServiceConfigurationGlobal>) dataset.get(position));\n//\n//        }\n//        else if(holderVH instanceof ViewHolderSavedMarketList)\n//        {\n//\n//            ((ViewHolderSavedMarketList) holderVH).setItem((MarketsList) dataset.get(position));\n//\n//        }\n\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/Lists/Markets/AdapterMarkets.java", "stars": "10", "class_props": {"extends": "RecyclerView", "implements": null, "modifiers": ["public"]}}, {"id": 61317, "method_name": "setLoadMore", "class_name": "AdapterMarkets", "params": ["boolean"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setLoadMore(boolean loadMore)\n    {\n        this.loadMore = loadMore;\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/Lists/Markets/AdapterMarkets.java", "stars": "10", "class_props": {"extends": "RecyclerView", "implements": null, "modifiers": ["public"]}}, {"id": 61318, "method_name": "setData", "class_name": "AdapterMarkets", "params": ["List<Object>"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setData(List<Object> data)\n    {\n        dataset = data;\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/Lists/Markets/AdapterMarkets.java", "stars": "10", "class_props": {"extends": "RecyclerView", "implements": null, "modifiers": ["public"]}}, {"id": 61319, "method_name": "getItemCount", "class_name": "AdapterMarkets", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getItemCount() {\n\n        return (dataset.size()+1);\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/Lists/Markets/AdapterMarkets.java", "stars": "10", "class_props": {"extends": "RecyclerView", "implements": null, "modifiers": ["public"]}}, {"id": 61320, "method_name": "clearGlobalVariable", "class_name": "Utility", "params": [], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void clearGlobalVariable(){\n        GlobalVar.getInstance().setDataStatsCountry(null);\n    }", "url": "https://raw.githubusercontent.com/fadhilahramadhan/Android_Covid19Stats/master/app/src/main/java/fadhilah/ramadhan/covid19stats/util/Utility.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 61321, "method_name": "buildDataStats", "class_name": "Utility", "params": ["String"], "throws": null, "modifiers": ["final", "public", "static"], "return_type": "List<DataStats>", "snippet": "    public static final List<DataStats> buildDataStats(String json) {\n        dataStatsList = new ArrayList<DataStats>();\n        dataStatsList.clear();\n\n        try {\n            JSONArray array = new JSONArray(json);\n            for (int i = 0; i < array.length(); i++) {\n                DataStats dataStats = new DataStats();\n                dataStats.setActiveCases(array.getJSONObject(i).getInt(\"Active\"));\n                dataStats.setCured(array.getJSONObject(i).getInt(\"Recovered\"));\n                dataStats.setDeath(array.getJSONObject(i).getInt(\"Deaths\"));\n                dataStats.setCountry(array.getJSONObject(i).getString(\"Country\"));\n                dataStats.setCountryCode(array.getJSONObject(i).getString(\"CountryCode\"));\n                dataStats.setDate(array.getJSONObject(i).getString(\"Date\"));\n                dataStats.setPostive(array.getJSONObject(i).getInt(\"Confirmed\"));\n                dataStatsList.add(dataStats);\n            }\n        } catch (JSONException e) {\n            Log.e(\"JSONException : \", e.getMessage());\n        }\n        return dataStatsList;\n    }", "url": "https://raw.githubusercontent.com/fadhilahramadhan/Android_Covid19Stats/master/app/src/main/java/fadhilah/ramadhan/covid19stats/util/Utility.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 61322, "method_name": "buildDataSummary", "class_name": "Utility", "params": ["String"], "throws": null, "modifiers": ["final", "public", "static"], "return_type": "List<DataStats>", "snippet": "    public static final List<DataStats> buildDataSummary(String json) {\n        dataStatsList = new ArrayList<DataStats>();\n        dataStatsList.clear();\n        try {\n            JSONArray array = new JSONArray(json);\n            for (int i = 0; i < array.length(); i++) {\n                DataStats dataStats = new DataStats();\n                dataStats.setCured(array.getJSONObject(i).getInt(\"TotalRecovered\"));\n                dataStats.setDeath(array.getJSONObject(i).getInt(\"TotalDeaths\"));\n                dataStats.setCountry(array.getJSONObject(i).getString(\"Country\"));\n                dataStats.setCountryCode(array.getJSONObject(i).getString(\"CountryCode\"));\n                dataStats.setDate(array.getJSONObject(i).getString(\"Date\"));\n                dataStats.setPostive(array.getJSONObject(i).getInt(\"TotalConfirmed\"));\n                dataStatsList.add(dataStats);\n            }\n        } catch (JSONException e) {\n            Log.e(\"JSONException : \", e.getMessage());\n        }\n        return dataStatsList;\n    }", "url": "https://raw.githubusercontent.com/fadhilahramadhan/Android_Covid19Stats/master/app/src/main/java/fadhilah/ramadhan/covid19stats/util/Utility.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 61323, "method_name": "buildDataGlobal", "class_name": "Utility", "params": ["String"], "throws": null, "modifiers": ["final", "public", "static"], "return_type": "DataStats", "snippet": "    public static final DataStats buildDataGlobal(String json) {\n        DataStats dataStats = new DataStats();\n        try {\n            JSONObject jsonObject = new JSONObject(json);\n                dataStats.setCured(jsonObject.getInt(\"TotalRecovered\"));\n                dataStats.setDeath(jsonObject.getInt(\"TotalDeaths\"));\n                dataStats.setPostive(jsonObject.getInt(\"TotalConfirmed\"));\n        } catch (JSONException e) {\n            Log.e(\"JSONException : \", e.getMessage());\n        }\n        return dataStats;\n    }", "url": "https://raw.githubusercontent.com/fadhilahramadhan/Android_Covid19Stats/master/app/src/main/java/fadhilah/ramadhan/covid19stats/util/Utility.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 61324, "method_name": "dateFormat", "class_name": "Utility", "params": ["String", "String"], "throws": null, "modifiers": ["final", "public", "static"], "return_type": "String", "snippet": "    public static final String dateFormat(String format, String dateInput){\n        SimpleDateFormat inputFormat = new SimpleDateFormat(\"yyyy-MM-dd'T'HH:mm:ss'Z'\");\n        SimpleDateFormat outputFormat = new SimpleDateFormat(format);\n        Date date = null;\n        try{\n            date = inputFormat.parse(dateInput);\n        }catch (ParseException e){\n            Log.e(\"ParseException : \", e.getMessage());\n        }\n        return outputFormat.format(date);\n    }", "url": "https://raw.githubusercontent.com/fadhilahramadhan/Android_Covid19Stats/master/app/src/main/java/fadhilah/ramadhan/covid19stats/util/Utility.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 61325, "method_name": "setListViewHeight", "class_name": "Utility", "params": ["ListView"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void setListViewHeight(ListView listView) {\n        ListAdapter listAdapter = listView.getAdapter();\n        if (listAdapter == null) {\n            return;\n        }\n\n        int totalHeight = listView.getPaddingTop() + listView.getPaddingBottom();\n        for (int i = 0; i < listAdapter.getCount(); i++) {\n            View listItem = listAdapter.getView(i, null, listView);\n            if (listItem instanceof ViewGroup)\n                listItem.setLayoutParams(new ViewGroup.LayoutParams(ViewGroup.LayoutParams.WRAP_CONTENT, ViewGroup.LayoutParams.WRAP_CONTENT));\n            listItem.measure(0, 0);\n            totalHeight += listItem.getMeasuredHeight();\n        }\n\n        ViewGroup.LayoutParams params = listView.getLayoutParams();\n        params.height = totalHeight + (listView.getDividerHeight() * (listAdapter.getCount() - 1));\n        listView.setLayoutParams(params);\n    }", "url": "https://raw.githubusercontent.com/fadhilahramadhan/Android_Covid19Stats/master/app/src/main/java/fadhilah/ramadhan/covid19stats/util/Utility.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 61326, "method_name": "StringContainAnywhere", "class_name": "Utility", "params": ["String", "String"], "throws": null, "modifiers": ["public", "static"], "return_type": "boolean", "snippet": "    public static boolean StringContainAnywhere(String param, String search){\n        return param.toLowerCase().matches(\"(?i).*\"+ search.toLowerCase() +\".*\");\n    }", "url": "https://raw.githubusercontent.com/fadhilahramadhan/Android_Covid19Stats/master/app/src/main/java/fadhilah/ramadhan/covid19stats/util/Utility.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 61327, "method_name": "cekValidResult", "class_name": "Utility", "params": ["String", "Activity"], "throws": null, "modifiers": ["public", "static"], "return_type": "boolean", "snippet": "    public static boolean  cekValidResult(String result, Activity activity){\n\n        try{\n            if(!result.contains(\"errorCode\")){\n                return true;\n            }else{\n                JSONObject jsonObject = new JSONObject(result);\n                if(jsonObject.has(\"errorCode\")){\n                    String errorCode = jsonObject.getString(\"errorCode\");\n                    String message = jsonObject.getString(\"fullMessage\");\n\n                        AlertDialogCustom dialogs = new AlertDialogCustom(activity);\n                        dialogs.setTitleandContent(activity.getString(R.string.header_message), message, activity.getString(R.string.button_close));\n\n                    return false;\n                }else{\n                }\n            }\n        }catch (JSONException e) {\n            e.printStackTrace();\n            AlertDialogCustom dialogs = new AlertDialogCustom(activity);\n            dialogs.setTitleandContent(activity.getString(R.string.header_message), activity.getString(R.string.message_gagal), activity.getString(R.string.button_close));\n            return false;\n        }catch (Exception e) {\n            e.printStackTrace();\n            AlertDialogCustom dialogs = new AlertDialogCustom(activity);\n            dialogs.setTitleandContent(activity.getString(R.string.header_message), activity.getString(R.string.message_gagal), activity.getString(R.string.button_close));\n\n            return false;\n        }\n        return true;\n    }", "url": "https://raw.githubusercontent.com/fadhilahramadhan/Android_Covid19Stats/master/app/src/main/java/fadhilah/ramadhan/covid19stats/util/Utility.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 61328, "method_name": "setLocale", "class_name": "Utility", "params": ["String", "Context", "Activity"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void setLocale(String lang, Context context, Activity activity) {\n\n        SharedPreferences mSettings = PreferenceManager.getDefaultSharedPreferences(activity);\n        SharedPreferences.Editor editor = mSettings.edit();\n        editor.putString(\"lang\", lang);\n        editor.apply();\n\n        Locale myLocale = new Locale(lang);\n        Resources res = context.getResources();\n        DisplayMetrics dm = res.getDisplayMetrics();\n        Configuration conf = res.getConfiguration();\n        conf.locale = myLocale;\n        res.updateConfiguration(conf, dm);\n    }", "url": "https://raw.githubusercontent.com/fadhilahramadhan/Android_Covid19Stats/master/app/src/main/java/fadhilah/ramadhan/covid19stats/util/Utility.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 61329, "method_name": "process", "class_name": "MqttConnectHandler", "params": ["Channel", "MqttConnectMessage"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void process(Channel channel, MqttConnectMessage msg) {\n        // \u6d88\u606f\u89e3\u7801\u5668\u51fa\u73b0\u5f02\u5e38\n        if (msg.decoderResult().isFailure()) {\n            Throwable cause = msg.decoderResult().cause();\n            log.error(cause);\n            if (cause instanceof MqttUnacceptableProtocolVersionException) {\n                MqttConnAckMessage connAckMessage = (MqttConnAckMessage) MqttMessageFactory.newMessage(\n                        new MqttFixedHeader(MqttMessageType.CONNACK, false, MqttQoS.AT_MOST_ONCE, false, 0),\n                        new MqttConnAckVariableHeader(MqttConnectReturnCode.CONNECTION_REFUSED_UNACCEPTABLE_PROTOCOL_VERSION, false), null);\n                channel.writeAndFlush(connAckMessage);\n                log.error(\"\u4e0d\u652f\u6301\u7684\u534f\u8bae\u7248\u672c\");\n                channel.close();\n                return;\n            } else if (cause instanceof MqttIdentifierRejectedException) {\n                log.error(\"\u4e0d\u5408\u683c\u7684clientId\");\n                MqttConnAckMessage connAckMessage = (MqttConnAckMessage) MqttMessageFactory.newMessage(\n                        new MqttFixedHeader(MqttMessageType.CONNACK, false, MqttQoS.AT_MOST_ONCE, false, 0),\n                        new MqttConnAckVariableHeader(MqttConnectReturnCode.CONNECTION_REFUSED_IDENTIFIER_REJECTED, false), null);\n                channel.writeAndFlush(connAckMessage);\n                channel.close();\n                return;\n            }\n            channel.close();\n            return;\n        }\n\n        // clientId\u4e3a\u7a7a\u6216null\u7684\u60c5\u51b5, \u8fd9\u91cc\u8981\u6c42\u5ba2\u6237\u7aef\u5fc5\u987b\u63d0\u4f9bclientId, \u4e0d\u7ba1cleanSession\u662f\u5426\u4e3a1, \u6b64\u5904\u6ca1\u6709\u53c2\u8003\u6807\u51c6\u534f\u8bae\u5b9e\u73b0\n        if (StrUtil.isBlank(msg.payload().clientIdentifier())) {\n            MqttConnAckMessage connAckMessage = (MqttConnAckMessage) MqttMessageFactory.newMessage(\n                    new MqttFixedHeader(MqttMessageType.CONNACK, false, MqttQoS.AT_MOST_ONCE, false, 0),\n                    new MqttConnAckVariableHeader(MqttConnectReturnCode.CONNECTION_REFUSED_IDENTIFIER_REJECTED, false), null);\n            channel.writeAndFlush(connAckMessage);\n            log.error(\"\u65e0\");\n            channel.close();\n            return;\n        }\n\n        // \u7528\u6237\u540d\u548c\u5bc6\u7801\u9a8c\u8bc1, \u8fd9\u91cc\u8981\u6c42\u5ba2\u6237\u7aef\u8fde\u63a5\u65f6\u5fc5\u987b\u63d0\u4f9b\u7528\u6237\u540d\u548c\u5bc6\u7801, \u4e0d\u7ba1\u662f\u5426\u8bbe\u7f6e\u7528\u6237\u540d\u6807\u5fd7\u548c\u5bc6\u7801\u6807\u5fd7\u4e3a1, \u6b64\u5904\u6ca1\u6709\u53c2\u8003\u6807\u51c6\u534f\u8bae\u5b9e\u73b0\n        String username = msg.payload().userName();\n        String password = msg.payload().passwordInBytes() == null ? null : new String(msg.payload().passwordInBytes(), CharsetUtil.UTF_8);\n\n        SecurityUser userDetails = (SecurityUser) securityUserDetailsService.loadUserByUserId(Integer.parseInt(username));\n\n        if (!login(msg, password, userDetails)) {\n            MqttConnAckMessage connAckMessage = (MqttConnAckMessage) MqttMessageFactory.newMessage(\n                    new MqttFixedHeader(MqttMessageType.CONNACK, false, MqttQoS.AT_MOST_ONCE, false, 0),\n                    new MqttConnAckVariableHeader(MqttConnectReturnCode.CONNECTION_REFUSED_BAD_USER_NAME_OR_PASSWORD, false), null);\n            channel.writeAndFlush(connAckMessage);\n            log.error(\"\u5bc6\u7801\u9519\u8bef\");\n            channel.close();\n            return;\n        }\n\n        NettyUtil.setName(channel, msg.payload().clientIdentifier());\n        NettyUtil.setUser(channel, userDetails);\n\n        NettyMqttHandler.channels.add(channel);\n\n        MqttConnAckMessage okResp = (MqttConnAckMessage) MqttMessageFactory.newMessage(\n                new MqttFixedHeader(MqttMessageType.CONNACK, false, MqttQoS.AT_MOST_ONCE, false, 0),\n                new MqttConnAckVariableHeader(MqttConnectReturnCode.CONNECTION_ACCEPTED, false), null);\n        log.info(\"\u94fe\u63a5\u6210\u529f\");\n        channel.writeAndFlush(okResp);\n    }", "url": "https://raw.githubusercontent.com/taoroot/taoiot/master/src/main/java/com/github/taoroot/taoiot/netty/mqtt/impl/MqttConnectHandler.java", "stars": "6", "class_props": {"extends": null, "implements": ["MqttHandler"], "modifiers": ["public"]}}, {"id": 61330, "method_name": "login", "class_name": "MqttConnectHandler", "params": ["MqttConnectMessage", "String", "SecurityUser"], "throws": null, "modifiers": ["private"], "return_type": "boolean", "snippet": "    private boolean login(MqttConnectMessage msg, String password, SecurityUser userDetails) {\n        return userDetails != null && userDetails.getToken().equals(password)\n                && Validator.isGeneral(msg.payload().clientIdentifier());\n    }", "url": "https://raw.githubusercontent.com/taoroot/taoiot/master/src/main/java/com/github/taoroot/taoiot/netty/mqtt/impl/MqttConnectHandler.java", "stars": "6", "class_props": {"extends": null, "implements": ["MqttHandler"], "modifiers": ["public"]}}, {"id": 61331, "method_name": "initDatabase", "class_name": "ComplexColumnTest", "params": [], "throws": ["Exception"], "modifiers": ["static"], "return_type": "void", "snippet": "    static void initDatabase() throws Exception {\n        try (Reader reader = Resources.getResourceAsReader(\"org/apache/ibatis/submitted/complex_column/ibatisConfig.xml\")) {\n            sqlSessionFactory = new SqlSessionFactoryBuilder().build(reader);\n        }\n\n        BaseDataTest.runScript(sqlSessionFactory.getConfiguration().getEnvironment().getDataSource(),\n                \"org/apache/ibatis/submitted/complex_column/CreateDB.sql\");\n    }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/complex_column/ComplexColumnTest.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 61332, "method_name": "testWithoutComplex", "class_name": "ComplexColumnTest", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "    void testWithoutComplex() {\n        try (SqlSession sqlSession = sqlSessionFactory.openSession()) {\n            PersonMapper personMapper = sqlSession.getMapper(PersonMapper.class);\n            Person person = personMapper.getWithoutComplex(2L);\n            Assertions.assertNotNull(person, \"person must not be null\");\n            Assertions.assertEquals(\"Christian\", person.getFirstName());\n            Assertions.assertEquals(\"Poitras\", person.getLastName());\n            Person parent = person.getParent();\n            Assertions.assertNotNull(parent, \"parent must not be null\");\n            Assertions.assertEquals(\"John\", parent.getFirstName());\n            Assertions.assertEquals(\"Smith\", parent.getLastName());\n        }\n    }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/complex_column/ComplexColumnTest.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 61333, "method_name": "testWithComplex", "class_name": "ComplexColumnTest", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "    void testWithComplex() {\n        try (SqlSession sqlSession = sqlSessionFactory.openSession()) {\n            PersonMapper personMapper = sqlSession.getMapper(PersonMapper.class);\n            Person person = personMapper.getWithComplex(2L);\n            Assertions.assertNotNull(person, \"person must not be null\");\n            Assertions.assertEquals(\"Christian\", person.getFirstName());\n            Assertions.assertEquals(\"Poitras\", person.getLastName());\n            Person parent = person.getParent();\n            Assertions.assertNotNull(parent, \"parent must not be null\");\n            Assertions.assertEquals(\"John\", parent.getFirstName());\n            Assertions.assertEquals(\"Smith\", parent.getLastName());\n        }\n    }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/complex_column/ComplexColumnTest.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 61334, "method_name": "testWithComplex2", "class_name": "ComplexColumnTest", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "    void testWithComplex2() {\n        try (SqlSession sqlSession = sqlSessionFactory.openSession()) {\n            PersonMapper personMapper = sqlSession.getMapper(PersonMapper.class);\n            Person person = personMapper.getWithComplex2(2L);\n            Assertions.assertNotNull(person, \"person must not be null\");\n            Assertions.assertEquals(\"Christian\", person.getFirstName());\n            Assertions.assertEquals(\"Poitras\", person.getLastName());\n            Person parent = person.getParent();\n            Assertions.assertNotNull(parent, \"parent must not be null\");\n            Assertions.assertEquals(\"John\", parent.getFirstName());\n            Assertions.assertEquals(\"Smith\", parent.getLastName());\n        }\n    }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/complex_column/ComplexColumnTest.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 61335, "method_name": "testWithComplex3", "class_name": "ComplexColumnTest", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "    void testWithComplex3() {\n        try (SqlSession sqlSession = sqlSessionFactory.openSession()) {\n            PersonMapper personMapper = sqlSession.getMapper(PersonMapper.class);\n            Person person = personMapper.getWithComplex3(2L);\n            Assertions.assertNotNull(person, \"person must not be null\");\n            Assertions.assertEquals(\"Christian\", person.getFirstName());\n            Assertions.assertEquals(\"Poitras\", person.getLastName());\n            Person parent = person.getParent();\n            Assertions.assertNotNull(parent, \"parent must not be null\");\n            Assertions.assertEquals(\"John\", parent.getFirstName());\n            Assertions.assertEquals(\"Smith\", parent.getLastName());\n        }\n    }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/complex_column/ComplexColumnTest.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 61336, "method_name": "testWithComplex4", "class_name": "ComplexColumnTest", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "    void testWithComplex4() {\n      try (SqlSession sqlSession = sqlSessionFactory.openSession()) {\n          PersonMapper personMapper = sqlSession.getMapper(PersonMapper.class);\n          Person criteria = new Person();\n          criteria.setFirstName(\"Christian\");\n          criteria.setLastName(\"Poitras\");\n          Person person = personMapper.getParentWithComplex(criteria);\n          Assertions.assertNotNull(person, \"person must not be null\");\n          Assertions.assertEquals(\"Christian\", person.getFirstName());\n          Assertions.assertEquals(\"Poitras\", person.getLastName());\n          Person parent = person.getParent();\n          Assertions.assertNotNull(parent, \"parent must not be null\");\n          Assertions.assertEquals(\"John\", parent.getFirstName());\n          Assertions.assertEquals(\"Smith\", parent.getLastName());\n      }\n    }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/complex_column/ComplexColumnTest.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 61337, "method_name": "testWithParamAttributes", "class_name": "ComplexColumnTest", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "    void testWithParamAttributes() {\n        try (SqlSession sqlSession = sqlSessionFactory.openSession()) {\n            PersonMapper personMapper = sqlSession.getMapper(PersonMapper.class);\n            Person person = personMapper.getComplexWithParamAttributes(2L);\n            Assertions.assertNotNull(person, \"person must not be null\");\n            Assertions.assertEquals(\"Christian\", person.getFirstName());\n            Assertions.assertEquals(\"Poitras\", person.getLastName());\n            Person parent = person.getParent();\n            Assertions.assertNotNull(parent, \"parent must not be null\");\n            Assertions.assertEquals(\"John\", parent.getFirstName());\n            Assertions.assertEquals(\"Smith\", parent.getLastName());\n        }\n    }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/complex_column/ComplexColumnTest.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 61338, "method_name": "create", "class_name": "ViewHolderShopItemButton", "params": ["ViewGroup", "Context", "Fragment", "RecyclerView", "Map<Integer,CartItem>", "CartStats"], "throws": null, "modifiers": ["public", "static"], "return_type": "ViewHolderShopItemButton", "snippet": "    public static ViewHolderShopItemButton create(ViewGroup parent, Context context, Fragment fragment, RecyclerView.Adapter adapter,\n                                                  Map<Integer, CartItem> cartItemMap, CartStats cartStatsMap)\n    {\n\n        View view = LayoutInflater.from(parent.getContext()).inflate(R.layout.list_item_shop_item_by_shop,parent,false);\n        return new ViewHolderShopItemButton(view,context,fragment,adapter,cartItemMap,cartStatsMap);\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/ViewHolders/ViewHolderShopItemButton.java", "stars": "10", "class_props": {"extends": "RecyclerView", "implements": null, "modifiers": ["public"]}}, {"id": 61339, "method_name": "bindShopItems", "class_name": "ViewHolderShopItemButton", "params": ["ShopItem"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void bindShopItems(ShopItem shopItem)\n    {\n\n        this.shopItem = shopItem;\n        Item item = shopItem.getItem();\n\n//        holder.shopName.setText(dataset.get(position).getShopName());\n//        holder.rating.setText(String.format( \"%.2f\", dataset.get(position).getRt_rating_avg()));\n//        holder.distance.setText(String.format( \"%.2f\", dataset.get(position).getDistance() )+ \" Km\");\n\n\n\n\n\n        cartItem = cartItemMap.get(shopItem.getItemID());\n//        cartStats = cartStatsMap.get(shopItem.getShopID());\n\n\n        CartItem cartItem = cartItemMap.get(shopItem.getItemID());\n\n        if(cartItem!=null)\n        {\n            itemQuantity.setText(UtilityFunctions.refinedString(cartItem.getItemQuantity()));\n            shopItemListItem.setBackgroundResource(R.color.gplus_color_2Alpha);\n\n            double total = shopItem.getItemPrice() * cartItem.getItemQuantity();\n\n            itemTotal.setText(\"Total : \"  + PrefGeneral.getCurrencySymbol(context) + \" \" + String.format( \"%.2f\", total));\n            addToCartText.setText(\"Update Cart\");\n\n        }else\n        {\n\n            shopItemListItem.setBackgroundResource(R.color.colorWhite);\n            //holder.shopItemListItem.setBackgroundColor(22000000);\n            itemQuantity.setText(String.valueOf(0));\n            addToCartText.setText(\"Add to Cart\");\n        }\n\n\n\n\n        if(shopItem.getAvailableItemQuantity()==0)\n        {\n            outOfStockIndicator.setVisibility(View.VISIBLE);\n        }\n        else\n        {\n            outOfStockIndicator.setVisibility(View.GONE);\n        }\n\n\n\n        available.setText(\"Available : \" + shopItem.getAvailableItemQuantity() + \" \" + item.getQuantityUnit());\n\n\n\n        String imagePath = null;\n\n        if(item!=null)\n        {\n            String currency = \"\";\n            currency = PrefGeneral.getCurrencySymbol(context);\n\n            itemName.setText(item.getItemName());\n            itemPrice.setText(currency + \" \" + String.format(\"%.2f\",shopItem.getItemPrice()) + \" per \" + item.getQuantityUnit());\n\n            if(item.getRt_rating_count()==0)\n            {\n                rating.setText(\" - \");\n                ratinCount.setText(\"(0 Ratings)\");\n\n            }\n            else\n            {\n                rating.setText(String.format(\"%.1f\",item.getRt_rating_avg()));\n                ratinCount.setText(\"( \" + (int) item.getRt_rating_count() +  \" Ratings )\");\n            }\n\n\n\n//                imagePath = UtilityGeneral.getImageEndpointURL(MyApplication.getAppContext())\n//                        + item.getItemImageURL();\n\n            imagePath = PrefGeneral.getServiceURL(context)\n                    + \"/api/v1/Item/Image/three_hundred_\" + item.getItemImageURL() + \".jpg\";\n\n        }\n\n\n        Drawable placeholder = VectorDrawableCompat\n                .create(context.getResources(),\n                        R.drawable.ic_nature_people_white_48px, context.getTheme());\n\n\n        Picasso.get()\n                .load(imagePath)\n                .placeholder(placeholder)\n                .into(itemImage);\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/ViewHolders/ViewHolderShopItemButton.java", "stars": "10", "class_props": {"extends": "RecyclerView", "implements": null, "modifiers": ["public"]}}, {"id": 61340, "method_name": "itemImageClick", "class_name": "ViewHolderShopItemButton", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "    void itemImageClick()\n    {\n        Item item = shopItem.getItem();\n\n        if(item!=null && fragment instanceof ListItemClick)\n        {\n            ((ListItemClick) fragment).notifyItemImageClick(item);\n\n        }\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/ViewHolders/ViewHolderShopItemButton.java", "stars": "10", "class_props": {"extends": "RecyclerView", "implements": null, "modifiers": ["public"]}}, {"id": 61341, "method_name": "addToCartClick", "class_name": "ViewHolderShopItemButton", "params": ["View"], "throws": null, "modifiers": [], "return_type": "void", "snippet": "    void addToCartClick(View view) {\n\n\n\n        cartItem = cartItemMap.get(shopItem.getItemID());\n//        cartStats = cartStatsMap.get(shopItem.getShopID());\n\n\n\n\n        CartItem cartItem = new CartItem();\n        cartItem.setItemID(shopItem.getItemID());\n\n        if (!itemQuantity.getText().toString().equals(\"\")) {\n\n            cartItem.setItemQuantity(Double.parseDouble(itemQuantity.getText().toString()));\n        }\n\n\n\n\n        if (!cartItemMap.containsKey(shopItem.getItemID()))\n        {\n\n\n            if (itemQuantity.getText().toString().equals(\"\")){\n\n                showToastMessage(\"Please select quantity !\");\n            }\n            else if (Double.parseDouble(itemQuantity.getText().toString()) == 0) {\n                showToastMessage(\"Please select quantity greater than Zero !\");\n\n            } else {\n\n                //showToastMessage(\"Add to cart! : \" + dataset.get(getLayoutPosition()).getShopID());\n\n                User endUser = PrefLogin.getUser(context);\n                if(endUser==null)\n                {\n\n//                        Toast.makeText(context, \"Please LoginUsingOTP to continue ...\", Toast.LENGTH_SHORT).show();\n                    showLoginDialog();\n\n                    return;\n                }\n\n\n                Shop shop = PrefShopHome.getShop(context);\n\n                Call<ResponseBody> call = cartItemService.createCartItem(\n                        cartItem,\n                        endUser.getUserID(),\n                        shop.getShopID()\n                );\n\n                //dataset.get(getLayoutPosition()).getShopID()\n\n                addToCartText.setVisibility(View.INVISIBLE);\n                progressBar.setVisibility(View.VISIBLE);\n\n                call.enqueue(new Callback<ResponseBody>() {\n                    @Override\n                    public void onResponse(Call<ResponseBody> call, Response<ResponseBody> response) {\n\n\n                        if (response.code() == 201) {\n\n                            Toast.makeText(context, \"Add to cart successful !\", Toast.LENGTH_SHORT).show();\n\n//                            getCartStats(true,getLayoutPosition(),false);\n\n\n                            if(fragment instanceof ListItemClick)\n                            {\n                                ((ListItemClick) fragment).setCartTotal(cartTotal,true);\n                                ((ListItemClick) fragment).setItemsInCart(itemsInCart,true);\n\n                                ((ListItemClick) fragment).cartUpdated();\n                            }\n\n\n\n                            cartItemMap.put(cartItem.getItemID(),cartItem);\n                            listAdapter.notifyItemChanged(getAdapterPosition());\n\n\n                            addToCartText.setBackgroundColor(ContextCompat.getColor(context, R.color.blueGrey800));\n                            itemTotal.setBackgroundColor(ContextCompat.getColor(context, R.color.blueGrey800));\n                        }\n\n\n                        addToCartText.setVisibility(View.VISIBLE);\n                        progressBar.setVisibility(View.INVISIBLE);\n                    }\n\n                    @Override\n                    public void onFailure(Call<ResponseBody> call, Throwable t) {\n\n                        addToCartText.setVisibility(View.VISIBLE);\n                        progressBar.setVisibility(View.INVISIBLE);\n                    }\n                });\n            }\n\n\n        }\n        else\n        {\n\n            if(itemQuantity.getText().toString().equals(\"\"))\n            {\n                return;\n            }\n\n            double quantity = Double.parseDouble(itemQuantity.getText().toString());\n\n\n            if(quantity==0)\n            {\n                // Delete from cart\n\n                //UtilityGeneral.getEndUserID(MyApplication.getAppContext())\n                User endUser = PrefLogin.getUser(context);\n                if(endUser==null)\n                {\n                    return;\n                }\n\n                Call<ResponseBody> callDelete = cartItemService.deleteCartItem(0,cartItem.getItemID(),\n                        endUser.getUserID(),\n                        shopItem.getShopID()\n                );\n\n                addToCartText.setVisibility(View.INVISIBLE);\n                progressBar.setVisibility(View.VISIBLE);\n\n                callDelete.enqueue(new Callback<ResponseBody>() {\n\n                    @Override\n                    public void onResponse(Call<ResponseBody> call, Response<ResponseBody> response) {\n\n\n                        addToCartText.setVisibility(View.VISIBLE);\n                        progressBar.setVisibility(View.INVISIBLE);\n\n\n                        if(response.code()==200)\n                        {\n\n                            showToastMessage(\"Item Removed !\");\n\n                            addToCartText.setText(\"Add to Cart\");\n\n\n\n\n                            if(fragment instanceof ListItemClick)\n                            {\n                                ((ListItemClick) fragment).setCartTotal(cartTotal,true);\n                                ((ListItemClick) fragment).setItemsInCart(itemsInCart,true);\n                            }\n\n\n\n                            cartItemMap.remove(cartItem.getItemID());\n                            listAdapter.notifyItemChanged(getLayoutPosition());\n\n\n\n\n\n//                            getCartStats(true,getLayoutPosition(),false);\n\n                            //makeNetworkCall();\n\n//                                notifyFilledCart.notifyCartDataChanged();\n\n                            addToCartText.setBackgroundColor(ContextCompat.getColor(context, R.color.blueGrey800));\n                            itemTotal.setBackgroundColor(ContextCompat.getColor(context, R.color.blueGrey800));\n\n                        }else\n                        {\n\n                        }\n\n                        progressBar.setVisibility(View.INVISIBLE);\n\n                    }\n\n                    @Override\n                    public void onFailure(Call<ResponseBody> call, Throwable t) {\n\n\n                        addToCartText.setVisibility(View.VISIBLE);\n                        progressBar.setVisibility(View.INVISIBLE);\n\n\n                        progressBar.setVisibility(View.INVISIBLE);\n                    }\n                });\n\n\n            }\n            else\n            {\n                // Update from cart\n\n                //UtilityGeneral.getEndUserID(MyApplication.getAppContext())\n                User endUser = PrefLogin.getUser(context);\n\n                if(endUser==null)\n                {\n                    return;\n                }\n\n//                if(getLayoutPosition() < dataset.size())\n//                {\n\n\n\n\n//                ShopItem shop = (ShopItem) dataset.get(getLayoutPosition());\n\n                Call<ResponseBody> callUpdate = cartItemService.updateCartItem(\n                        cartItem,\n                        endUser.getUserID(),\n                        shopItem.getShopID()\n                );\n\n                addToCartText.setVisibility(View.INVISIBLE);\n                progressBar.setVisibility(View.VISIBLE);\n\n                callUpdate.enqueue(new Callback<ResponseBody>() {\n                    @Override\n                    public void onResponse(Call<ResponseBody> call, Response<ResponseBody> response) {\n\n\n                        if (response.code() == 200) {\n\n                            Toast.makeText(context, \"Update cart successful !\", Toast.LENGTH_SHORT).show();\n//                            getCartStats(false,getLayoutPosition(),false);\n\n\n                            if(fragment instanceof ListItemClick)\n                            {\n                                ((ListItemClick) fragment).setCartTotal(cartTotal,true);\n                                ((ListItemClick) fragment).setItemsInCart(itemsInCart,true);\n                            }\n\n\n\n                            cartItemMap.put(cartItem.getItemID(),cartItem);\n                            listAdapter.notifyItemChanged(getAdapterPosition());\n\n\n\n                            addToCartText.setBackgroundColor(ContextCompat.getColor(context, R.color.blueGrey800));\n                            itemTotal.setBackgroundColor(ContextCompat.getColor(context, R.color.blueGrey800));\n                        }\n\n                        addToCartText.setVisibility(View.VISIBLE);\n                        progressBar.setVisibility(View.INVISIBLE);\n                    }\n\n                    @Override\n                    public void onFailure(Call<ResponseBody> call, Throwable t) {\n\n                        addToCartText.setVisibility(View.VISIBLE);\n                        progressBar.setVisibility(View.INVISIBLE);\n                    }\n                });\n\n//\n//                }\n            }\n        }\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/ViewHolders/ViewHolderShopItemButton.java", "stars": "10", "class_props": {"extends": "RecyclerView", "implements": null, "modifiers": ["public"]}}, {"id": 61342, "method_name": "setFilter", "class_name": "ViewHolderShopItemButton", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void setFilter() {\n\n\n        if (shopItem != null) {\n            int availableItems = shopItem.getAvailableItemQuantity();\n\n//            itemQuantity.setFilters(new InputFilter[]{new InputFilterMinMax(\"0\", String.valueOf(availableItems))});\n        }\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/ViewHolders/ViewHolderShopItemButton.java", "stars": "10", "class_props": {"extends": "RecyclerView", "implements": null, "modifiers": ["public"]}}, {"id": 61343, "method_name": "cartTotalNeutral", "class_name": "ViewHolderShopItemButton", "params": [], "throws": null, "modifiers": ["private"], "return_type": "double", "snippet": "    private double cartTotalNeutral(){\n\n        double previousTotal = 0;\n\n        if(cartItem!=null && shopItem!=null)\n        {\n            previousTotal = shopItem.getItemPrice() * cartItem.getItemQuantity();\n        }\n\n        double cartTotalValue = 0;\n\n\n//        Shop shop = PrefShopHome.getShopDetails(context);\n//        CartStats cartStats = this.cartStats;\n\n        if(cartStats!=null)\n        {\n            cartTotalValue = cartStats.getCart_Total();\n        }\n\n        return (cartTotalValue - previousTotal);\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/ViewHolders/ViewHolderShopItemButton.java", "stars": "10", "class_props": {"extends": "RecyclerView", "implements": null, "modifiers": ["public"]}}, {"id": 61344, "method_name": "reduceQuantityClick", "class_name": "ViewHolderShopItemButton", "params": ["View"], "throws": null, "modifiers": [], "return_type": "void", "snippet": "    void reduceQuantityClick(View view)\n    {\n//        Shop shop = PrefShopHome.getShopDetails(context);\n\n\n        cartItem = cartItemMap.get(shopItem.getItemID());\n//        cartStats = cartStatsMap.get(shop.getShopID());\n\n        addToCartText.setBackgroundColor(ContextCompat.getColor(context, R.color.gplus_color_1));\n//            itemTotal.setBackgroundColor(ContextCompat.getColor(context,R.color.colorPrimary));\n\n\n        double total = 0;\n\n\n        if (!itemQuantity.getText().toString().equals(\"\")){\n\n\n            try{\n\n                if(Double.parseDouble(itemQuantity.getText().toString())<=0) {\n\n                    if (cartItem == null) {\n\n\n                        if(cartStats==null)\n                        {\n\n\n//                            if(fragment instanceof ItemsInShopByCatFragmentDeprecated)\n//                            {\n//                                ((ItemsInShopByCatFragmentDeprecated)fragment).itemsInCart.setText(String.valueOf(0) + \" \" + \"Items in Cart\");\n//                            }\n                        }\n                        else\n                        {\n\n//                            if(fragment instanceof ItemsInShopByCatFragmentDeprecated)\n//                            {\n//                                ((ItemsInShopByCatFragmentDeprecated)fragment).itemsInCart.setText(String.valueOf(cartStats.getItemsInCart()) + \" \" + \"Items in Cart\");;\n//                            }\n\n\n                        }\n\n\n                    } else\n                    {\n//                        if(fragment instanceof ItemsInShopByCatFragmentDeprecated)\n//                        {\n//                            ((ItemsInShopByCatFragmentDeprecated)fragment).itemsInCart.setText(String.valueOf(cartStats.getItemsInCart() - 1) + \" \" + \"Items in Cart\");\n//                        }\n                    }\n\n                    return;\n                }\n\n                itemQuantity.setText(UtilityFunctions.refinedString(Double.parseDouble(itemQuantity.getText().toString()) - 1.0));\n\n                total = shopItem.getItemPrice() * Double.parseDouble(itemQuantity.getText().toString());\n\n            }\n            catch (Exception ex)\n            {\n\n            }\n\n\n\n\n//            if(fragment instanceof ItemsInShopByCatFragmentDeprecated)\n//            {\n//                ((ItemsInShopByCatFragmentDeprecated)fragment).cartTotal.setText(\"Cart Total : \"  + PrefGeneral.getCurrencySymbol(context) + \" \" + String.valueOf(cartTotalNeutral() + total));\n//            }\n\n\n\n            itemTotal.setText(\"Total : \" + PrefGeneral.getCurrencySymbol(context) + \" \" + String.format( \"%.2f\", total));\n\n        }else\n        {\n            itemQuantity.setText(String.valueOf(0));\n            itemTotal.setText(\"Total : \" + PrefGeneral.getCurrencySymbol(context) + \" \" + String.format( \"%.2f\", total));\n        }\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/ViewHolders/ViewHolderShopItemButton.java", "stars": "10", "class_props": {"extends": "RecyclerView", "implements": null, "modifiers": ["public"]}}, {"id": 61345, "method_name": "increaseQuantityClick", "class_name": "ViewHolderShopItemButton", "params": ["View"], "throws": null, "modifiers": [], "return_type": "void", "snippet": "    void increaseQuantityClick(View view)\n    {\n        Shop shop = PrefShopHome.getShop(context);\n\n//        shopItem = (ShopItem) dataset.get(getLayoutPosition());\n        cartItem = cartItemMap.get(shopItem.getItemID());\n//        cartStats = cartStatsMap.get(shop.getShopID());\n\n        //dataset.get(getLayoutPosition()).getShopID()\n\n        addToCartText.setBackgroundColor(ContextCompat.getColor(context, R.color.gplus_color_1));\n//            itemTotal.setBackgroundColor(ContextCompat.getColor(context,R.color.colorPrimary));\n\n\n        int availableItems = shopItem.getAvailableItemQuantity();\n        double total = 0;\n\n\n        if (!itemQuantity.getText().toString().equals(\"\")) {\n\n\n            if(cartItem==null)\n            {\n                if(Double.parseDouble(itemQuantity.getText().toString())>0 )\n                {\n\n                    if(cartStats==null)\n                    {\n//                        if(fragment instanceof ItemsInShopByCatFragmentDeprecated)\n//                        {\n//                            ((ItemsInShopByCatFragmentDeprecated)fragment).itemsInCart.setText(String.valueOf(1) + \" \" + \"Items in Cart\");\n//                        }\n                    }\n                    else\n                    {\n\n//                        if(fragment instanceof ItemsInShopByCatFragmentDeprecated) {\n//\n//                            ((ItemsInShopByCatFragmentDeprecated)fragment).itemsInCart.setText(String.valueOf(cartStats.getItemsInCart() + 1) + \" \" + \"Items in Cart\");\n//                        }\n\n\n\n                    }\n\n                }\n\n            }\n            else\n            {\n\n\n//                if(fragment instanceof ItemsInShopByCatFragmentDeprecated) {\n//\n//                    ((ItemsInShopByCatFragmentDeprecated)fragment).itemsInCart.setText(String.valueOf(cartStats.getItemsInCart()) + \" \" + \"Items in Cart\");\n//                }\n            }\n\n\n            try {\n\n                if (Double.parseDouble(itemQuantity.getText().toString()) >= availableItems) {\n                    return;\n                }\n\n\n                itemQuantity.setText(UtilityFunctions.refinedString(Double.parseDouble(itemQuantity.getText().toString()) + 1.0));\n                total = shopItem.getItemPrice() * Double.parseDouble(itemQuantity.getText().toString());\n\n            }catch (Exception ex)\n            {\n\n            }\n\n            itemTotal.setText(\"Total : \"  + PrefGeneral.getCurrencySymbol(context) + \" \" + String.format(\"%.2f\", total));\n\n\n//            if(fragment instanceof ItemsInShopByCatFragmentDeprecated)\n//            {\n//                ((ItemsInShopByCatFragmentDeprecated)fragment).cartTotal.setText(\"Cart Total : \"  + PrefGeneral.getCurrencySymbol(context) + \" \" + String.valueOf(cartTotalNeutral() + total));\n//            }\n\n\n\n        }else\n        {\n            itemQuantity.setText(String.valueOf(0));\n            itemTotal.setText(\"Total : \"  + PrefGeneral.getCurrencySymbol(context) + \" \" + String.format( \"%.2f\", total));\n        }\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/ViewHolders/ViewHolderShopItemButton.java", "stars": "10", "class_props": {"extends": "RecyclerView", "implements": null, "modifiers": ["public"]}}, {"id": 61346, "method_name": "showToastMessage", "class_name": "ViewHolderShopItemButton", "params": ["String"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void showToastMessage(String message)\n    {\n        Toast.makeText(context,message, Toast.LENGTH_SHORT).show();\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/ViewHolders/ViewHolderShopItemButton.java", "stars": "10", "class_props": {"extends": "RecyclerView", "implements": null, "modifiers": ["public"]}}, {"id": 61347, "method_name": "showLoginDialog", "class_name": "ViewHolderShopItemButton", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void showLoginDialog()\n    {\n\n//        if(context instanceof AppCompatActivity)\n//        {\n//            FragmentManager fm =  ((AppCompatActivity)context).getSupportFragmentManager();\n//            LoginDialog loginDialog = new LoginDialog();\n//            loginDialog.show(fm,\"serviceUrl\");\n//        }\n\n\n\n        if(fragment instanceof ListItemClick)\n        {\n            ((ListItemClick) fragment).showLogin();\n        }\n\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/ViewHolders/ViewHolderShopItemButton.java", "stars": "10", "class_props": {"extends": "RecyclerView", "implements": null, "modifiers": ["public"]}}, {"id": 61348, "method_name": "createPizza", "class_name": "ChicagoStylePizzaFactory", "params": ["String"], "throws": null, "modifiers": ["protected"], "return_type": "Pizza", "snippet": "    protected Pizza createPizza(String type) {\n        if (type == \"Cheese\")\n            return new ChicagoStyleCheesePizza();\n        // we can have an if-else ladder here.\n        // Also rather than String as type we can have something like constants/enums.\n        return null;\n    }", "url": "https://raw.githubusercontent.com/piyush6348/Design-Patterns/master/Factory%20Patterns/Factory%20Method%20Pattern/src/PizzaFactory/ChicagoStylePizzaFactory.java", "stars": "38", "class_props": {"extends": "PizzaFactory", "implements": null, "modifiers": ["public"]}}, {"id": 61349, "method_name": "main", "class_name": "WholeNumber2", "params": ["String"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "\tpublic static void main(String args[]) {\n\t\tint num = 100;\n\n\t\tSystem.out.println(\"Number: \" + num);\n\n\t\t// your code goes here\n\t\tnum = 200;\n\t\tSystem.out.println(\"Number: \" + num);\n\n\t\t// your code goes here. Increase num by 30\n\n\t\tnum = num + 30;\n\t\t// 230\n\t\tSystem.out.println(\"Number: \" + num);\n\n\t\t//BREAK 10 MIN. TILL 2:18\n\t}", "url": "https://raw.githubusercontent.com/Suranchiyev/java-sdet-2020/master/src/day3/WholeNumber2.java", "stars": "21", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 61350, "method_name": "initValues", "class_name": "SharpnessEffect", "params": ["GLSurfaceView"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void initValues(GLSurfaceView mGlSurfaceView) {\n        mWidth = mGlSurfaceView.getWidth();\n        mHeight = mGlSurfaceView.getHeight();\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/com/shuyu/gsyvideoplayer/render/effect/SharpnessEffect.java", "stars": "2", "class_props": {"extends": null, "implements": ["ShaderInterface"], "modifiers": ["public"]}}, {"id": 61351, "method_name": "getShader", "class_name": "SharpnessEffect", "params": ["GLSurfaceView"], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getShader(GLSurfaceView mGlSurfaceView) {\n        initValues(mGlSurfaceView);\n\n        String stepsizeXString = \"stepsizeX = \" + 1.0f / mWidth + \";\\n\";\n        String stepsizeYString = \"stepsizeY = \" + 1.0f / mHeight + \";\\n\";\n        String scaleString = \"scale = \" + scale + \";\\n\";\n\n        String shader = \"#extension GL_OES_EGL_image_external : require\\n\"\n                + \"precision mediump float;\\n\"\n                + \"uniform samplerExternalOES sTexture;\\n\"\n                + \" float scale;\\n\"\n                + \" float stepsizeX;\\n\"\n                + \" float stepsizeY;\\n\"\n                + \"varying vec2 vTextureCoord;\\n\"\n                + \"void main() {\\n\"\n                // Parameters that were created above\n                + stepsizeXString\n                + stepsizeYString\n                + scaleString\n                + \"  vec3 nbr_color = vec3(0.0, 0.0, 0.0);\\n\"\n                + \"  vec2 coord;\\n\"\n                + \"  vec4 color = texture2D(sTexture, vTextureCoord);\\n\"\n                + \"  coord.x = vTextureCoord.x - 0.5 * stepsizeX;\\n\"\n                + \"  coord.y = vTextureCoord.y - stepsizeY;\\n\"\n                + \"  nbr_color += texture2D(sTexture, coord).rgb - color.rgb;\\n\"\n                + \"  coord.x = vTextureCoord.x - stepsizeX;\\n\"\n                + \"  coord.y = vTextureCoord.y + 0.5 * stepsizeY;\\n\"\n                + \"  nbr_color += texture2D(sTexture, coord).rgb - color.rgb;\\n\"\n                + \"  coord.x = vTextureCoord.x + stepsizeX;\\n\"\n                + \"  coord.y = vTextureCoord.y - 0.5 * stepsizeY;\\n\"\n                + \"  nbr_color += texture2D(sTexture, coord).rgb - color.rgb;\\n\"\n                + \"  coord.x = vTextureCoord.x + stepsizeX;\\n\"\n                + \"  coord.y = vTextureCoord.y + 0.5 * stepsizeY;\\n\"\n                + \"  nbr_color += texture2D(sTexture, coord).rgb - color.rgb;\\n\"\n                + \"  gl_FragColor = vec4(color.rgb - 2.0 * scale * nbr_color, color.a);\\n\"\n                + \"}\\n\";\n\n        return shader;\n\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/com/shuyu/gsyvideoplayer/render/effect/SharpnessEffect.java", "stars": "2", "class_props": {"extends": null, "implements": ["ShaderInterface"], "modifiers": ["public"]}}, {"id": 61352, "method_name": "execute", "class_name": "ObfuscatedAccess", "params": ["Map<String,Clazz>", "boolean"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "  public boolean execute(Map<String, Clazz> classes, boolean verbose) {\n    classes.values().stream().map(c -> c.node.methods).flatMap(List::stream).filter(this::shouldRemove)\n        .forEach(m -> m.access = Access.removeAccess(m.access, ACC_SYNTHETIC, ACC_BRIDGE, ACC_DEPRECATED));\n    classes.values().stream().map(c -> c.node.fields).flatMap(List::stream).filter(this::shouldRemove)\n        .forEach(f -> f.access = Access.removeAccess(f.access, ACC_SYNTHETIC, ACC_BRIDGE, ACC_DEPRECATED));\n    logger.info(\"Removed every synthetic, bridge and deprecated access\");\n    return true;\n  }", "url": "https://raw.githubusercontent.com/GraxCode/threadtear/master/src/me/nov/threadtear/execution/generic/ObfuscatedAccess.java", "stars": "140", "class_props": {"extends": "Execution", "implements": null, "modifiers": ["public"]}}, {"id": 61353, "method_name": "shouldRemove", "class_name": "ObfuscatedAccess", "params": ["FieldNode"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "  public boolean shouldRemove(FieldNode fn) {\n    return !(Access.isFinal(fn.access) && fn.name.matches(\"(val\\\\$|this\\\\$).*\"));\n  }", "url": "https://raw.githubusercontent.com/GraxCode/threadtear/master/src/me/nov/threadtear/execution/generic/ObfuscatedAccess.java", "stars": "140", "class_props": {"extends": "Execution", "implements": null, "modifiers": ["public"]}}, {"id": 61354, "method_name": "shouldRemove", "class_name": "ObfuscatedAccess", "params": ["MethodNode"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "  public boolean shouldRemove(MethodNode mn) {\n    return !(Access.isStatic(mn.access) && mn.name.matches(\"(access\\\\$|lambda\\\\$).*\"));\n  }", "url": "https://raw.githubusercontent.com/GraxCode/threadtear/master/src/me/nov/threadtear/execution/generic/ObfuscatedAccess.java", "stars": "140", "class_props": {"extends": "Execution", "implements": null, "modifiers": ["public"]}}, {"id": 61355, "method_name": "route", "class_name": "ExecutorRouteFailover", "params": ["TriggerParam", "List<String>"], "throws": null, "modifiers": ["public"], "return_type": "ReturnT<String>", "snippet": "    public ReturnT<String> route(TriggerParam triggerParam, List<String> addressList) {\n\n        StringBuffer beatResultSB = new StringBuffer();\n        for (String address : addressList) {\n            // beat\n            ReturnT<String> beatResult = null;\n            try {\n                ExecutorBiz executorBiz = XxlJobScheduler.getExecutorBiz(address);\n                beatResult = executorBiz.beat();\n            } catch (Exception e) {\n                logger.error(e.getMessage(), e);\n                beatResult = new ReturnT<String>(ReturnT.FAIL_CODE, \"\"+e );\n            }\n            beatResultSB.append( (beatResultSB.length()>0)?\"<br><br>\":\"\")\n                    .append(I18nUtil.getString(\"jobconf_beat\") + \"\uff1a\")\n                    .append(\"<br>address\uff1a\").append(address)\n                    .append(\"<br>code\uff1a\").append(beatResult.getCode())\n                    .append(\"<br>msg\uff1a\").append(beatResult.getMsg());\n\n            // beat success\n            if (beatResult.getCode() == ReturnT.SUCCESS_CODE) {\n\n                beatResult.setMsg(beatResultSB.toString());\n                beatResult.setContent(address);\n                return beatResult;\n            }\n        }\n        return new ReturnT<String>(ReturnT.FAIL_CODE, beatResultSB.toString());\n\n    }", "url": "https://raw.githubusercontent.com/miaoo92/xxl-job-mongo/master/src/main/java/com/avon/rga/core/route/strategy/ExecutorRouteFailover.java", "stars": "1", "class_props": {"extends": "ExecutorRouter", "implements": null, "modifiers": ["public"]}}, {"id": 61356, "method_name": "addResourceHandlers", "class_name": "AdminWebMvcConfig", "params": ["ResourceHandlerRegistry"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void addResourceHandlers(ResourceHandlerRegistry registry) {\n        // \u8bbe\u7f6e\u9879\u76ee\u9759\u6001\u8d44\u6e90\u8bbf\u95ee\n        registry.addResourceHandler(\"/static/**\")\n                .addResourceLocations(\"classpath:/static/\");\n    }", "url": "https://raw.githubusercontent.com/geekidea/spring-cloud-plus/master/scp-admin/src/main/java/io/geekidea/cloud/admin/config/AdminWebMvcConfig.java", "stars": "22", "class_props": {"extends": null, "implements": ["WebMvcConfigurer"], "modifiers": ["public"]}}, {"id": 61357, "method_name": "forAll", "class_name": "GaussJordan", "params": ["BigMatrix", "Collection<BigMatrix>", "Consumer<BigMatrix>"], "throws": null, "modifiers": ["static", "private"], "return_type": "void", "snippet": "    private static void forAll(BigMatrix matrix, Collection<BigMatrix> others, Consumer<BigMatrix> action) {\n        action.accept(matrix);\n        others.forEach(action);\n    }", "url": "https://raw.githubusercontent.com/mjtb49/LattiCG/master/src/randomreverser/math/component/GaussJordan.java", "stars": "14", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 61358, "method_name": "reduce", "class_name": "GaussJordan", "params": ["BigMatrix", "Collection<BigMatrix>", "ReduceColumnPredicate"], "throws": null, "modifiers": ["public", "static"], "return_type": "int", "snippet": "    public static int[] reduce(BigMatrix matrix, Collection<BigMatrix> others, ReduceColumnPredicate reduceColumn) {\n        int[] pivotRows = new int[matrix.getColumnCount()];\n        Arrays.fill(pivotRows, -1);\n\n        int row = 0;\n        int pivotColumn = 0;\n\n        while (row < matrix.getRowCount() && pivotColumn < matrix.getColumnCount()) {\n            int pivotRow;\n\n            for (pivotRow = row; pivotRow < matrix.getRowCount(); ++pivotRow) {\n                if (!matrix.get(pivotRow, pivotColumn).equals(BigFraction.ZERO)) {\n                    break;\n                }\n            }\n\n            if (pivotRow < matrix.getRowCount()) {\n                final int finalRow = row;\n                final int finalPivotRow = pivotRow;\n                final int finalPivotColumn = pivotColumn;\n\n                final BigFraction finalPivot = matrix.get(finalPivotRow, finalPivotColumn);\n\n                forAll(matrix, others, m -> m.getRow(finalPivotRow).divideEquals(finalPivot));\n\n                for (int i = 0; i < matrix.getRowCount(); ++i) {\n                    if (i == finalPivotRow) {\n                        continue;\n                    }\n\n                    final int finalI = i;\n                    final BigFraction finalScale = matrix.get(i, finalPivotColumn);\n\n                    forAll(matrix, others, m -> m.getRow(finalI).subtractEquals(m.getRow(finalPivotRow).multiply(finalScale)));\n                }\n\n                forAll(matrix, others, m -> m.swapRowsEquals(finalRow, finalPivotRow));\n                pivotRows[finalPivotColumn] = finalRow;\n                ++row;\n            }\n\n            do {\n                ++pivotColumn;\n            } while(pivotColumn < matrix.getColumnCount() && !reduceColumn.test(pivotColumn, pivotRows));\n        }\n\n        return pivotRows;\n    }", "url": "https://raw.githubusercontent.com/mjtb49/LattiCG/master/src/randomreverser/math/component/GaussJordan.java", "stars": "14", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 61359, "method_name": "reduce", "class_name": "GaussJordan", "params": ["BigMatrix", "BigMatrix", "ReduceColumnPredicate"], "throws": null, "modifiers": ["public", "static"], "return_type": "int", "snippet": "    public static int[] reduce(BigMatrix matrix, BigMatrix other, ReduceColumnPredicate reduceColumn) {\n        return reduce(matrix, Collections.singleton(other), reduceColumn);\n    }", "url": "https://raw.githubusercontent.com/mjtb49/LattiCG/master/src/randomreverser/math/component/GaussJordan.java", "stars": "14", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 61360, "method_name": "reduce", "class_name": "GaussJordan", "params": ["BigMatrix", "ReduceColumnPredicate"], "throws": null, "modifiers": ["public", "static"], "return_type": "int", "snippet": "    public static int[] reduce(BigMatrix matrix, ReduceColumnPredicate reduceColumn) {\n        return reduce(matrix, Collections.emptyList(), reduceColumn);\n    }", "url": "https://raw.githubusercontent.com/mjtb49/LattiCG/master/src/randomreverser/math/component/GaussJordan.java", "stars": "14", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 61361, "method_name": "reduce", "class_name": "GaussJordan", "params": ["BigMatrix", "Collection<BigMatrix>"], "throws": null, "modifiers": ["public", "static"], "return_type": "int", "snippet": "    public static int[] reduce(BigMatrix matrix, Collection<BigMatrix> others) {\n        return reduce(matrix, others, ReduceColumnPredicate.ALWAYS);\n    }", "url": "https://raw.githubusercontent.com/mjtb49/LattiCG/master/src/randomreverser/math/component/GaussJordan.java", "stars": "14", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 61362, "method_name": "reduce", "class_name": "GaussJordan", "params": ["BigMatrix", "BigMatrix"], "throws": null, "modifiers": ["public", "static"], "return_type": "int", "snippet": "    public static int[] reduce(BigMatrix matrix, BigMatrix other) {\n        return reduce(matrix, Collections.singleton(other), ReduceColumnPredicate.ALWAYS);\n    }", "url": "https://raw.githubusercontent.com/mjtb49/LattiCG/master/src/randomreverser/math/component/GaussJordan.java", "stars": "14", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 61363, "method_name": "reduce", "class_name": "GaussJordan", "params": ["BigMatrix"], "throws": null, "modifiers": ["public", "static"], "return_type": "int", "snippet": "    public static int[] reduce(BigMatrix matrix) {\n        return reduce(matrix, Collections.emptyList(), ReduceColumnPredicate.ALWAYS);\n    }", "url": "https://raw.githubusercontent.com/mjtb49/LattiCG/master/src/randomreverser/math/component/GaussJordan.java", "stars": "14", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 61364, "method_name": "main", "class_name": "ConvertStringToPrimitives", "params": ["String"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "\tpublic static void main(String[] args) {\n\t\tString numStr = \"99\";\n\t\t//        convert String number to int\n\t\tint num = Integer.parseInt(numStr);\n\t\tSystem.out.println(num + 10); // 109\n\n\n\t\tString numStr2 = \"10.99\";\n\t\tdouble dNumber = Double.parseDouble(numStr2);\n\t\tSystem.out.println(dNumber + 0.01); // 11.0\n\n\t\tint num2 = Integer.parseInt(\"77\");\n\t\tSystem.out.println(num2);\n\n\t\tString bStr = \"false\";\n\t\tboolean b = Boolean.parseBoolean(bStr);\n\t\tSystem.out.println(b);\n\t}", "url": "https://raw.githubusercontent.com/Suranchiyev/java-sdet-2020/master/src/day5/ConvertStringToPrimitives.java", "stars": "21", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 61365, "method_name": "onCreate", "class_name": "BaseStreamLoadingFragment", "params": ["Bundle"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        setRetainInstance(true);\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/fragments/BaseStreamLoadingFragment.java", "stars": "4", "class_props": {"extends": "Fragment", "implements": ["TorrentServerListener", "SubtitleDownloader", "SubsProvider"], "modifiers": ["public", "abstract"]}}, {"id": 61366, "method_name": "onActivityCreated", "class_name": "BaseStreamLoadingFragment", "params": ["Bundle"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onActivityCreated(@Nullable Bundle savedInstanceState) {\n        super.onActivityCreated(savedInstanceState);\n\n        ThreadUtils.runOnUiThread(new Runnable() {\n            @Override\n            public void run() {\n                mStreamInfo = mCallback.getStreamInformation();\n                if (mStreamInfo == null) {\n                    getActivity().finish();\n                    return;\n                }\n                loadSubtitles();\n            }\n        });\n\n        if (!(getActivity() instanceof TorrentActivity)) {\n            throw new IllegalStateException(\"Parent activity is not a TorrentBaseActivity\");\n        }\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/fragments/BaseStreamLoadingFragment.java", "stars": "4", "class_props": {"extends": "Fragment", "implements": ["TorrentServerListener", "SubtitleDownloader", "SubsProvider"], "modifiers": ["public", "abstract"]}}, {"id": 61367, "method_name": "onAttach", "class_name": "BaseStreamLoadingFragment", "params": ["Context"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onAttach(Context context) {\n        super.onAttach(context);\n        if (context instanceof FragmentListener) mCallback = (FragmentListener) context;\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/fragments/BaseStreamLoadingFragment.java", "stars": "4", "class_props": {"extends": "Fragment", "implements": ["TorrentServerListener", "SubtitleDownloader", "SubsProvider"], "modifiers": ["public", "abstract"]}}, {"id": 61368, "method_name": "onTorrentServiceConnected", "class_name": "BaseStreamLoadingFragment", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onTorrentServiceConnected() {\n        if(getActivity() == null)\n            return;\n\n        mService = ((TorrentActivity)getActivity()).getTorrentService();\n\n        if (streamLoadingActivityContext != null) {\n            mService.setStreamLoadingActivityContext(streamLoadingActivityContext);\n        }\n        if(mService != null) {\n            mService.addListener(this);\n            startStream();\n        }\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/fragments/BaseStreamLoadingFragment.java", "stars": "4", "class_props": {"extends": "Fragment", "implements": ["TorrentServerListener", "SubtitleDownloader", "SubsProvider"], "modifiers": ["public", "abstract"]}}, {"id": 61369, "method_name": "setStreamLoadingActivityContext", "class_name": "BaseStreamLoadingFragment", "params": ["Context"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setStreamLoadingActivityContext(Context context) {\n        streamLoadingActivityContext = context;\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/fragments/BaseStreamLoadingFragment.java", "stars": "4", "class_props": {"extends": "Fragment", "implements": ["TorrentServerListener", "SubtitleDownloader", "SubsProvider"], "modifiers": ["public", "abstract"]}}, {"id": 61370, "method_name": "onTorrentServiceDisconnected", "class_name": "BaseStreamLoadingFragment", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onTorrentServiceDisconnected() {\n        if(mService != null) {\n            mService.removeListener(this);\n        }\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/fragments/BaseStreamLoadingFragment.java", "stars": "4", "class_props": {"extends": "Fragment", "implements": ["TorrentServerListener", "SubtitleDownloader", "SubsProvider"], "modifiers": ["public", "abstract"]}}, {"id": 61371, "method_name": "onPause", "class_name": "BaseStreamLoadingFragment", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onPause() {\n        super.onPause();\n        if (null != mService) {\n            mService.removeListener(this);\n        }\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/fragments/BaseStreamLoadingFragment.java", "stars": "4", "class_props": {"extends": "Fragment", "implements": ["TorrentServerListener", "SubtitleDownloader", "SubsProvider"], "modifiers": ["public", "abstract"]}}, {"id": 61372, "method_name": "onDestroy", "class_name": "BaseStreamLoadingFragment", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onDestroy() {\n        super.onDestroy();\n\n        if (null != mService) {\n            mService.stopStreaming();\n            mService.removeListener(this);\n            mService.stopService();\n        }\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/fragments/BaseStreamLoadingFragment.java", "stars": "4", "class_props": {"extends": "Fragment", "implements": ["TorrentServerListener", "SubtitleDownloader", "SubsProvider"], "modifiers": ["public", "abstract"]}}, {"id": 61373, "method_name": "updateView", "class_name": "BaseStreamLoadingFragment", "params": ["State", "Object"], "throws": null, "modifiers": ["protected", "abstract"], "return_type": "void", "snippet": "    protected abstract void updateView(State state, Object extra);\n\n    /**\n     * Start the internal player for a streaming torrent\n     *\n     * @param location Location\n     * @param resumePosition Resume position\n     */\n    protected abstract void startPlayerActivity(String location, int resumePosition);\n\n    @DebugLog\n    protected void setState(final State state) {\n        setState(state, null);\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/fragments/BaseStreamLoadingFragment.java", "stars": "4", "class_props": {"extends": "Fragment", "implements": ["TorrentServerListener", "SubtitleDownloader", "SubsProvider"], "modifiers": ["public", "abstract"]}}, {"id": 61374, "method_name": "startPlayerActivity", "class_name": "BaseStreamLoadingFragment", "params": ["String", "int"], "throws": null, "modifiers": ["protected", "abstract"], "return_type": "void", "snippet": "    protected abstract void startPlayerActivity(String location, int resumePosition);\n\n    @DebugLog\n    protected void setState(final State state) {\n        setState(state, null);\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/fragments/BaseStreamLoadingFragment.java", "stars": "4", "class_props": {"extends": "Fragment", "implements": ["TorrentServerListener", "SubtitleDownloader", "SubsProvider"], "modifiers": ["public", "abstract"]}}, {"id": 61375, "method_name": "setState", "class_name": "BaseStreamLoadingFragment", "params": ["State"], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void setState(final State state) {\n        setState(state, null);\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/fragments/BaseStreamLoadingFragment.java", "stars": "4", "class_props": {"extends": "Fragment", "implements": ["TorrentServerListener", "SubtitleDownloader", "SubsProvider"], "modifiers": ["public", "abstract"]}}, {"id": 61376, "method_name": "setState", "class_name": "BaseStreamLoadingFragment", "params": ["State", "Object"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void setState(final State state, final Object extra) {\n        mState = state;\n\n        ThreadUtils.runOnUiThread(new Runnable() {\n            @Override\n            public void run() {\n                updateView(state, extra);\n            }\n        });\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/fragments/BaseStreamLoadingFragment.java", "stars": "4", "class_props": {"extends": "Fragment", "implements": ["TorrentServerListener", "SubtitleDownloader", "SubsProvider"], "modifiers": ["public", "abstract"]}}, {"id": 61377, "method_name": "startPlayer", "class_name": "BaseStreamLoadingFragment", "params": ["String"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void startPlayer(String location) {\n        if (mHasSubs && mSubsStatus == SubsStatus.DOWNLOADING) {\n            ThreadUtils.runOnUiThread(new Runnable() {\n                @Override\n                public void run() {\n                    setState(State.WAITING_SUBTITLES);\n                }\n            });\n            return;\n        }\n\n        if (!mPlayerStarted) {\n            mService.removeListener(BaseStreamLoadingFragment.this);\n            startPlayerActivity(location, 0);\n\n            mPlayerStarted = true;\n        }\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/fragments/BaseStreamLoadingFragment.java", "stars": "4", "class_props": {"extends": "Fragment", "implements": ["TorrentServerListener", "SubtitleDownloader", "SubsProvider"], "modifiers": ["public", "abstract"]}}, {"id": 61378, "method_name": "onResume", "class_name": "BaseStreamLoadingFragment", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onResume() {\n        super.onResume();\n        if (mPlayerStarted) {\n            if(!mPlayingExternal)\n                getActivity().onBackPressed();\n        }\n\n        if(mService != null && mService.isStreaming() && mService.isReady()) {\n            onStreamReady(mService.getCurrentTorrent());\n            onServerReady(mService.getCurrentStreamUrl());\n        }\n\n        if(mState == null) {\n            setState(State.WAITING_TORRENT);\n        } else {\n            setState(mState);\n        }\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/fragments/BaseStreamLoadingFragment.java", "stars": "4", "class_props": {"extends": "Fragment", "implements": ["TorrentServerListener", "SubtitleDownloader", "SubsProvider"], "modifiers": ["public", "abstract"]}}, {"id": 61379, "method_name": "startStream", "class_name": "BaseStreamLoadingFragment", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void startStream() {\n        if (null == mService) throw new IllegalStateException(\"Torrent service must be bound\");\n        String torrentUrl = mStreamInfo.getTorrentUrl();\n\n        //if the torrent service is currently streaming another file, stop it.\n        if (mService.isStreaming() && !mService.getCurrentTorrentUrl().equals(torrentUrl)) {\n            mService.stopStreaming();\n        } else if(mService.isReady()) {\n            onStreamReady(mService.getCurrentTorrent());\n            onServerReady(mService.getCurrentStreamUrl());\n        }\n\n        //start streaming the new file\n        mService.streamTorrent(torrentUrl);\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/fragments/BaseStreamLoadingFragment.java", "stars": "4", "class_props": {"extends": "Fragment", "implements": ["TorrentServerListener", "SubtitleDownloader", "SubsProvider"], "modifiers": ["public", "abstract"]}}, {"id": 61380, "method_name": "cancelStream", "class_name": "BaseStreamLoadingFragment", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void cancelStream() {\n        if (mService != null) {\n            mService.stopStreaming();\n        }\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/fragments/BaseStreamLoadingFragment.java", "stars": "4", "class_props": {"extends": "Fragment", "implements": ["TorrentServerListener", "SubtitleDownloader", "SubsProvider"], "modifiers": ["public", "abstract"]}}, {"id": 61381, "method_name": "onStreamStarted", "class_name": "BaseStreamLoadingFragment", "params": ["Torrent"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onStreamStarted(Torrent torrent) {\n        setState(State.BUFFERING);\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/fragments/BaseStreamLoadingFragment.java", "stars": "4", "class_props": {"extends": "Fragment", "implements": ["TorrentServerListener", "SubtitleDownloader", "SubsProvider"], "modifiers": ["public", "abstract"]}}, {"id": 61382, "method_name": "onStreamError", "class_name": "BaseStreamLoadingFragment", "params": ["Torrent", "Exception"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onStreamError(Torrent torrent, final Exception e) {\n        if (e.getMessage().equals(\"Write error\")) {\n            setState(State.ERROR, getString(R.string.error_files));\n        } else if (e.getMessage().equals(\"Torrent error\")) {\n            setState(State.ERROR, getString(R.string.torrent_failed));\n        } else {\n            setState(State.ERROR, getString(R.string.unknown_error));\n        }\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/fragments/BaseStreamLoadingFragment.java", "stars": "4", "class_props": {"extends": "Fragment", "implements": ["TorrentServerListener", "SubtitleDownloader", "SubsProvider"], "modifiers": ["public", "abstract"]}}, {"id": 61383, "method_name": "onStreamReady", "class_name": "BaseStreamLoadingFragment", "params": ["Torrent"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onStreamReady(Torrent torrent) { }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/fragments/BaseStreamLoadingFragment.java", "stars": "4", "class_props": {"extends": "Fragment", "implements": ["TorrentServerListener", "SubtitleDownloader", "SubsProvider"], "modifiers": ["public", "abstract"]}}, {"id": 61384, "method_name": "onServerReady", "class_name": "BaseStreamLoadingFragment", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onServerReady(String url) {\n        startPlayer(url);\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/fragments/BaseStreamLoadingFragment.java", "stars": "4", "class_props": {"extends": "Fragment", "implements": ["TorrentServerListener", "SubtitleDownloader", "SubsProvider"], "modifiers": ["public", "abstract"]}}, {"id": 61385, "method_name": "onStreamProgress", "class_name": "BaseStreamLoadingFragment", "params": ["Torrent", "StreamStatus"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onStreamProgress(Torrent torrent, StreamStatus status) {\n        if (!mVideoLocation.isEmpty()) {\n            startPlayer(mVideoLocation);\n        }\n        setState(State.STREAMING, status);\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/fragments/BaseStreamLoadingFragment.java", "stars": "4", "class_props": {"extends": "Fragment", "implements": ["TorrentServerListener", "SubtitleDownloader", "SubsProvider"], "modifiers": ["public", "abstract"]}}, {"id": 61386, "method_name": "onStreamPrepared", "class_name": "BaseStreamLoadingFragment", "params": ["Torrent"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onStreamPrepared(Torrent torrent) { }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/fragments/BaseStreamLoadingFragment.java", "stars": "4", "class_props": {"extends": "Fragment", "implements": ["TorrentServerListener", "SubtitleDownloader", "SubsProvider"], "modifiers": ["public", "abstract"]}}, {"id": 61387, "method_name": "onStreamStopped", "class_name": "BaseStreamLoadingFragment", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onStreamStopped() {\n\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/fragments/BaseStreamLoadingFragment.java", "stars": "4", "class_props": {"extends": "Fragment", "implements": ["TorrentServerListener", "SubtitleDownloader", "SubsProvider"], "modifiers": ["public", "abstract"]}}, {"id": 61388, "method_name": "loadSubtitles", "class_name": "BaseStreamLoadingFragment", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void loadSubtitles() {\n        Media media = mStreamInfo.getMedia();\n        if (media == null) return;\n\n        SubsProvider subsProvider = providerManager.getCurrentSubsProvider();\n        if (subsProvider == null) return;\n\n        if (mStreamInfo.isShow()) {\n            subsProvider.getList((Episode) media, this);\n        }\n        else {\n            subsProvider.getList((Movie) media, this);\n        }\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/fragments/BaseStreamLoadingFragment.java", "stars": "4", "class_props": {"extends": "Fragment", "implements": ["TorrentServerListener", "SubtitleDownloader", "SubsProvider"], "modifiers": ["public", "abstract"]}}, {"id": 61389, "method_name": "onSuccess", "class_name": "BaseStreamLoadingFragment", "params": ["Map<String,String>"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onSuccess(Map<String, String> items) {\n        Media media = mStreamInfo.getMedia();\n        media.subtitles = items;\n\n        mSubsStatus = SubsStatus.SUCCESS;\n        mHasSubs = false;\n\n        if (media.subtitles == null || media.subtitles.size() == 0) return;\n\n        if (mStreamInfo.getSubtitleLanguage() == null) {\n            if (media.subtitles.containsKey(PrefUtils.get(getActivity(), Prefs.SUBTITLE_DEFAULT, SubsProvider.SUBTITLE_LANGUAGE_NONE))) {\n                mStreamInfo.setSubtitleLanguage(PrefUtils.get(getActivity(), Prefs.SUBTITLE_DEFAULT, SubsProvider.SUBTITLE_LANGUAGE_NONE));\n            }\n            else {\n                mStreamInfo.setSubtitleLanguage(SubsProvider.SUBTITLE_LANGUAGE_NONE);\n            }\n        }\n\n        if (mStreamInfo.getSubtitleLanguage() != null && !mStreamInfo.getSubtitleLanguage().equals(SubsProvider.SUBTITLE_LANGUAGE_NONE)) {\n            String mSubtitleLanguage = mStreamInfo.getSubtitleLanguage();\n            mSubsStatus = SubsStatus.DOWNLOADING;\n            mHasSubs = true;\n            SubtitleDownloader subtitleDownloader = new SubtitleDownloader(providerManager.getCurrentSubsProvider(),\n                    getActivity(), mStreamInfo, mSubtitleLanguage);\n            subtitleDownloader.setSubtitleDownloaderListener(this);\n            subtitleDownloader.downloadSubtitle();\n        }\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/fragments/BaseStreamLoadingFragment.java", "stars": "4", "class_props": {"extends": "Fragment", "implements": ["TorrentServerListener", "SubtitleDownloader", "SubsProvider"], "modifiers": ["public", "abstract"]}}, {"id": 61390, "method_name": "onFailure", "class_name": "BaseStreamLoadingFragment", "params": ["Exception"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onFailure(Exception e) {\n        mSubsStatus = SubsStatus.FAILURE;\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/fragments/BaseStreamLoadingFragment.java", "stars": "4", "class_props": {"extends": "Fragment", "implements": ["TorrentServerListener", "SubtitleDownloader", "SubsProvider"], "modifiers": ["public", "abstract"]}}, {"id": 61391, "method_name": "onSubtitleDownloadCompleted", "class_name": "BaseStreamLoadingFragment", "params": ["boolean", "TimedTextObject"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onSubtitleDownloadCompleted(boolean isSuccessful, TimedTextObject subtitleFile) {\n        mSubsStatus = isSuccessful ? SubsStatus.SUCCESS : SubsStatus.FAILURE;\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/fragments/BaseStreamLoadingFragment.java", "stars": "4", "class_props": {"extends": "Fragment", "implements": ["TorrentServerListener", "SubtitleDownloader", "SubsProvider"], "modifiers": ["public", "abstract"]}}, {"id": 61392, "method_name": "getFieldOrder", "class_name": "HostInfoReply", "params": [], "throws": null, "modifiers": ["protected"], "return_type": "List<String>", "snippet": "    protected List<String> getFieldOrder() {\n        return Arrays.asList(\"NDR\", \"retCode\", \"host_info_outCnt\", \"host_info_out\");\n    }", "url": "https://raw.githubusercontent.com/wmm1996528/unidbg_douyin10/master/src/main/java/com/github/unidbg/ios/struct/kernel/HostInfoReply.java", "stars": "16", "class_props": {"extends": "UnicornStructure", "implements": null, "modifiers": ["public"]}}, {"id": 61393, "method_name": "getHelpdeskParamService", "class_name": "HelpdeskParamService_Service", "params": [], "throws": null, "modifiers": ["public"], "return_type": "HelpdeskParamService", "snippet": "    public HelpdeskParamService getHelpdeskParamService() {\n        return super.getPort(new QName(\"http://service.common.helpdesk.plugins.bgbilling.bitel.ru/\", \"HelpdeskParamService\"), HelpdeskParamService.class);\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/ws/helpdesk/param/HelpdeskParamService_Service.java", "stars": "12", "class_props": {"extends": "Service", "implements": null, "modifiers": ["public"]}}, {"id": 61394, "method_name": "getHelpdeskParamService", "class_name": "HelpdeskParamService_Service", "params": ["WebServiceFeature"], "throws": null, "modifiers": ["public"], "return_type": "HelpdeskParamService", "snippet": "    public HelpdeskParamService getHelpdeskParamService(WebServiceFeature... features) {\n        return super.getPort(new QName(\"http://service.common.helpdesk.plugins.bgbilling.bitel.ru/\", \"HelpdeskParamService\"), HelpdeskParamService.class, features);\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/ws/helpdesk/param/HelpdeskParamService_Service.java", "stars": "12", "class_props": {"extends": "Service", "implements": null, "modifiers": ["public"]}}, {"id": 61395, "method_name": "__getWsdlLocation", "class_name": "HelpdeskParamService_Service", "params": [], "throws": null, "modifiers": ["static", "private"], "return_type": "URL", "snippet": "    private static URL __getWsdlLocation() {\n        if (HELPDESKPARAMSERVICE_EXCEPTION!= null) {\n            throw HELPDESKPARAMSERVICE_EXCEPTION;\n        }\n        return HELPDESKPARAMSERVICE_WSDL_LOCATION;\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/ws/helpdesk/param/HelpdeskParamService_Service.java", "stars": "12", "class_props": {"extends": "Service", "implements": null, "modifiers": ["public"]}}, {"id": 61396, "method_name": "onDraw", "class_name": "Practice4DrawPointView", "params": ["Canvas"], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void onDraw(Canvas canvas) {\n        super.onDraw(canvas);\n\n//        \u7ec3\u4e60\u5185\u5bb9\uff1a\u4f7f\u7528 canvas.drawPoint() \u65b9\u6cd5\u753b\u70b9\n//        \u4e00\u4e2a\u5706\u70b9\uff0c\u4e00\u4e2a\u65b9\u70b9\n//        \u5706\u70b9\u548c\u65b9\u70b9\u7684\u5207\u6362\u4f7f\u7528 paint.setStrokeCap(cap)\uff1a`ROUND` \u662f\u5706\u70b9\uff0c`BUTT` \u6216 `SQUARE` \u662f\u65b9\u70b9\n        paint.setStrokeCap(Paint.Cap.ROUND);\n        paint.setStrokeWidth(20);\n        paint.setColor(Color.BLACK);\n        canvas.drawPoint(100, 100, paint);\n\n        paint.setStrokeCap(Paint.Cap.SQUARE);\n        canvas.drawPoint(200, 100, paint);\n\n    }", "url": "https://raw.githubusercontent.com/Geekholt/Practice-CustomView/master/app/src/main/java/com/geekholt/practiceui/view/lesson1/Practice4DrawPointView.java", "stars": "2", "class_props": {"extends": "View", "implements": null, "modifiers": ["public"]}}, {"id": 61397, "method_name": "getExpression", "class_name": "ReturnStatement", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "Expression", "snippet": "\tpublic Expression getExpression(int index) {\n\t\treturn returnValues.get(index);\n\t}", "url": "https://raw.githubusercontent.com/geertvos/gs-lang/master/src/main/java/net/geertvos/gvm/ast/ReturnStatement.java", "stars": "17", "class_props": {"extends": "Statement", "implements": null, "modifiers": ["public"]}}, {"id": 61398, "method_name": "compile", "class_name": "ReturnStatement", "params": ["GScriptCompiler"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void compile(GScriptCompiler c) {\n\t\tsuper.compile(c);\n\t\tif( returnValues == null )\n\t\t\tc.code.add(GVM.LDC_U);\n\t\telse {\n\t\t\tif(returnValues.size() == 1) {\n\t\t\t\treturnValues.get(0).compile(c);\n\t\t\t} else {\n\t\t\t\t//Wrap multiple return values in an object and set fields by index\n\t\t\t\tc.code.add(GVM.NEW);\n\t\t\t\tfor(int i=0;i<returnValues.size();i++) {\n\t\t\t\t\treturnValues.get(i).compile(c); //this line is in the wrong spot\n\t\t\t\t\tc.code.add(GVM.LDS);\n\t\t\t\t\tc.code.writeInt(-1);\n\t\t\t\t\tc.code.add(GVM.GET);\n\t\t\t\t\tc.code.writeString(\"field_\"+i);\n\t\t\t\t\tc.code.add(GVM.PUT);\n\t\t\t\t\tc.code.add(GVM.POP);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tc.code.add(GVM.RETURN);\n\t}", "url": "https://raw.githubusercontent.com/geertvos/gs-lang/master/src/main/java/net/geertvos/gvm/ast/ReturnStatement.java", "stars": "17", "class_props": {"extends": "Statement", "implements": null, "modifiers": ["public"]}}, {"id": 61399, "method_name": "getContractPaymentList", "class_name": "BalanceDAO", "params": ["int", "Date", "Date", "List<ContractPayment>", "List<ContractPayment>"], "throws": ["BGException"], "modifiers": ["public"], "return_type": "BigDecimal", "snippet": "\tpublic BigDecimal getContractPaymentList( int contractId, Date dateFrom, Date dateTo, \n\t                                          List<ContractPayment> paymentList, List<ContractPayment> subPaymentList )\n\t\tthrows BGException\n\t{\n\t\tRequest request = new Request();\n\t\trequest.setModule( CONTRACT_MODULE_ID );\n\t\trequest.setAction( \"ContractPayments\" );\n\t\trequest.setContractId( String.valueOf( contractId ) );\n\t\trequest.setAttribute( \"date1\", TimeUtils.format( dateFrom, TimeUtils.PATTERN_DDMMYYYY ) );\n\t\trequest.setAttribute( \"date2\", TimeUtils.format( dateTo, TimeUtils.PATTERN_DDMMYYYY ) );\n\n\t\tBigDecimal summa = BigDecimal.ZERO;\n\t\t\n\t\tDocument doc = transferData.postData( request, user );\n\t\t\n\t\tif( paymentList != null )\n\t\t{\n\t\t\tfor( Element rowElement : XMLUtils.selectElements( doc, \"/data/table/data/row\" ) )\n\t\t\t{\n\t\t\t\tContractPayment payment = new ContractPayment();\n\t\t\t\tpayment.setId( Utils.parseInt( rowElement.getAttribute( \"f0\" ) ) );\n\t\t\t\tpayment.setEditable( Utils.parseBoolean( rowElement.getAttribute( \"f1\" ) ) );\n\t\t\t\tpayment.setDate( TimeUtils.parse( rowElement.getAttribute( \"f2\" ), TimeUtils.PATTERN_DDMMYYYY ) );\n\t\t\t\tpayment.setLastChangeTime( TimeUtils.parse( rowElement.getAttribute( \"f6\" ), TimeUtils.PATTERN_DDMMYYYYHHMMSS ) );\n\t\t\t\tpayment.setSum( Utils.parseBigDecimal( rowElement.getAttribute( \"f3\" ) ) );\n\t\t\t\tpayment.setType( rowElement.getAttribute( \"f4\" ) );\n\t\t\t\tpayment.setComment( rowElement.getAttribute( \"f5\" ) );\n\t\t\t\tpayment.setUser( rowElement.getAttribute( \"f7\" ) );\n\n\t\t\t\tpaymentList.add( payment );\n\t\t\t\t\n\t\t\t\tsumma = summa.add( payment.getSum() );\n\t\t\t}\n\t\t}\n\t\t\n\t\tif( subPaymentList != null )\n\t\t{\n\t\t\tfor( Element rowElement : XMLUtils.selectElements( doc, \"/data/sub_table/data/row\" ) )\n\t\t\t{\n\t\t\t\tContractPayment payment = new ContractPayment();\n\t\t\t\tpayment.setContract( rowElement.getAttribute( \"contract\" ) );\n\t\t\t\tpayment.setDate( TimeUtils.parse( rowElement.getAttribute( \"date\" ), TimeUtils.PATTERN_DDMMYYYY ) );\n\t\t\t\tpayment.setSum( Utils.parseBigDecimal( rowElement.getAttribute( \"summa\" ) ) );\n\t\t\t\tpayment.setType( rowElement.getAttribute( \"type\" ) );\n\t\t\t\t\n\t\t\t\tsubPaymentList.add( payment );\n\t\t\t}\n\t\t}\n\n\t\treturn summa;\n\t}", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/proto/dao/BalanceDAO.java", "stars": "12", "class_props": {"extends": "BillingDAO", "implements": null, "modifiers": ["public"]}}, {"id": 61400, "method_name": "getContractChargeList", "class_name": "BalanceDAO", "params": ["int", "Date", "Date", "List<ContractCharge>", "List<ContractCharge>"], "throws": ["BGException"], "modifiers": ["public"], "return_type": "BigDecimal", "snippet": "\tpublic BigDecimal getContractChargeList( int contractId, Date dateFrom, Date dateTo,\n\t                                         List<ContractCharge> chargeList, List<ContractCharge> subChargeList )\n\t\tthrows BGException\n\t{\n\t\tRequest request = new Request();\n\t\trequest.setModule( CONTRACT_MODULE_ID );\n\t\trequest.setAction( \"ContractCharges\" );\n\t\trequest.setContractId( String.valueOf( contractId ) );\n\t\trequest.setAttribute( \"date1\", TimeUtils.format( dateFrom, TimeUtils.PATTERN_DDMMYYYY ) );\n\t\trequest.setAttribute( \"date2\", TimeUtils.format( dateTo, TimeUtils.PATTERN_DDMMYYYY ) );\n\n\t\tDocument doc = transferData.postData( request, user );\n\t\t\n\t\tif( chargeList != null )\n\t\t{\n\t\t\tfor( Element rowElement : XMLUtils.selectElements( doc, \"/data/table/data/row\" ) )\n\t\t\t{\n\t\t\t\tContractCharge charge = new ContractCharge();\n\t\t\t\tcharge.setId( Utils.parseInt( rowElement.getAttribute( \"f0\" ) ) );\n\t\t\t\tcharge.setEditable( Utils.parseBoolean( rowElement.getAttribute( \"f1\" ) ) );\n\t\t\t\tcharge.setDate( TimeUtils.parse( rowElement.getAttribute( \"f2\" ), TimeUtils.PATTERN_DDMMYYYY ) );\n\t\t\t\tcharge.setLastChangeTime( TimeUtils.parse( rowElement.getAttribute( \"f6\" ), TimeUtils.PATTERN_DDMMYYYYHHMMSS ) );\n\t\t\t\tcharge.setSum( Utils.parseBigDecimal( rowElement.getAttribute( \"f3\" ) ) );\n\t\t\t\tcharge.setType( rowElement.getAttribute( \"f4\" ) );\n\t\t\t\tcharge.setComment( rowElement.getAttribute( \"f5\" ) );\n\t\t\t\tcharge.setUser( rowElement.getAttribute( \"f7\" ) );\n\n\t\t\t\tchargeList.add( charge );\n\t\t\t}\n\t\t}\n\n\t\t//subcontract charges\n\t\tif( subChargeList != null )\n\t\t{\n\t\t\tfor( Element rowElement : XMLUtils.selectElements( doc, \"/data/sub_table/data/row\" ) )\n\t\t\t{\n\t\t\t\tContractCharge charge = new ContractCharge();\n\t\t\t\tcharge.setContract( rowElement.getAttribute( \"contract\" ) );\n\t\t\t\tcharge.setDate( TimeUtils.parse( rowElement.getAttribute( \"date\" ), TimeUtils.PATTERN_DDMMYYYY ) );\n\t\t\t\tcharge.setSum( Utils.parseBigDecimal( rowElement.getAttribute( \"summa\" ) ) );\n\t\t\t\tcharge.setType( rowElement.getAttribute( \"type\" ) );\n\t\t\t\t\n\t\t\t\tsubChargeList.add( charge );\n\t\t\t}\n\t\t}\n\n\t\treturn Utils.parseBigDecimal( XMLUtils.selectText( doc, \"/data/table/@summa\" ) );\n\t}", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/proto/dao/BalanceDAO.java", "stars": "12", "class_props": {"extends": "BillingDAO", "implements": null, "modifiers": ["public"]}}, {"id": 61401, "method_name": "getContractAccountList", "class_name": "BalanceDAO", "params": ["int", "Date", "Date", "List<ContractAccount>", "List<ContractAccount>"], "throws": ["BGException"], "modifiers": ["public"], "return_type": "BigDecimal", "snippet": "\tpublic BigDecimal getContractAccountList( int contractId, Date dateFrom, Date dateTo,\n\t                                          List<ContractAccount> accountList, List<ContractAccount> subAccountList )\n\t\tthrows BGException\n\t{\n\t\tRequest request = new Request();\n\t\trequest.setModule( CONTRACT_MODULE_ID );\n\t\trequest.setAction( \"ContractAccounts\" );\n\t\trequest.setContractId( String.valueOf( contractId ) );\n\t\trequest.setAttribute( \"date1\", TimeUtils.format( dateFrom, TimeUtils.PATTERN_DDMMYYYY ) );\n\t\trequest.setAttribute( \"date2\", TimeUtils.format( dateTo, TimeUtils.PATTERN_DDMMYYYY ) );\n\n\t\tDocument doc = transferData.postData( request, user );\n\t\t\n\t\tif( accountList != null )\n\t\t{\n\t\t\tfor( Element rowElement : XMLUtils.selectElements( doc, \"/data/table/data/row\" ) )\n\t\t\t{\n\t\t\t\tContractAccount account = new ContractAccount();\n\t\t\t\taccount.setServiceId( Utils.parseInt( rowElement.getAttribute( \"sid\" ) ) );\n\t\t\t\taccount.setMonth( rowElement.getAttribute( \"date\" ) );\n\t\t\t\taccount.setSum( Utils.parseBigDecimal( rowElement.getAttribute( \"summa\" ) ) );\n\t\t\t\taccount.setTitle( rowElement.getAttribute( \"title\" ) );\n\n\t\t\t\taccountList.add( account );\n\t\t\t}\n\t\t}\n\n\t\t//subcontract charges\n\t\tif( subAccountList != null )\n\t\t{\n\t\t\tfor( Element rowElement : XMLUtils.selectElements( doc, \"/data/sub_table/data/row\" ) )\n\t\t\t{\n\t\t\t\tContractAccount account = new ContractAccount();\n\t\t\t\taccount.setContract( rowElement.getAttribute( \"contract\" ) );\n\t\t\t\taccount.setServiceId( Utils.parseInt( rowElement.getAttribute( \"sid\" ) ) );\n\t\t\t\taccount.setMonth( rowElement.getAttribute( \"date\" ) );\n\t\t\t\taccount.setSum( Utils.parseBigDecimal( rowElement.getAttribute( \"summa\" ) ) );\n\t\t\t\taccount.setTitle( rowElement.getAttribute( \"service\" ) );\n\n\t\t\t\tsubAccountList.add( account );\n\t\t\t}\n\t\t}\n\n\t\treturn Utils.parseBigDecimal( XMLUtils.selectText( doc, \"/data/table/@summa\" ) );\n\t}", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/proto/dao/BalanceDAO.java", "stars": "12", "class_props": {"extends": "BillingDAO", "implements": null, "modifiers": ["public"]}}, {"id": 61402, "method_name": "getContractBalanceList", "class_name": "BalanceDAO", "params": ["int", "Date", "Date", "List<ContractBalanceGeneral>"], "throws": ["BGException"], "modifiers": ["public"], "return_type": "BigDecimal", "snippet": "\tpublic BigDecimal[] getContractBalanceList( int contractId, Date dateFrom, Date dateTo, List<ContractBalanceGeneral> list )\n    \tthrows BGException\n    {\n    \tRequest request = new Request();\n    \trequest.setModule( CONTRACT_MODULE_ID );\n    \trequest.setAction( \"ContractBalanceGeneral\" );\n    \trequest.setContractId( String.valueOf( contractId ) );\n    \trequest.setAttribute( \"date1\", TimeUtils.format( dateFrom, TimeUtils.PATTERN_DDMMYYYY ) );\n    \trequest.setAttribute( \"date2\", TimeUtils.format( dateTo, TimeUtils.PATTERN_DDMMYYYY ) );\n    \n    \tDocument doc = transferData.postData( request, user );\n    \t\n    \tfor( Element rowElement : XMLUtils.selectElements( doc, \"/data/table/data/row\" ) )\n    \t{\n    \t\tContractBalanceGeneral balanceGeneral = new ContractBalanceGeneral();\n    \t\tbalanceGeneral.setAccount( Utils.parseBigDecimal( rowElement.getAttribute( \"account\" ) ) );\n    \t\tbalanceGeneral.setCharge( Utils.parseBigDecimal( rowElement.getAttribute( \"charge\" ) ) );\n    \t\tbalanceGeneral.setInputBalance( Utils.parseBigDecimal( rowElement.getAttribute( \"input_balance\" ) ) );\n    \t\tbalanceGeneral.setMonth( rowElement.getAttribute( \"month\" ) );\n    \t\tbalanceGeneral.setOutputBalance( Utils.parseBigDecimal( rowElement.getAttribute( \"output_balance\" ) ) );\n    \t\tbalanceGeneral.setPayment( Utils.parseBigDecimal( rowElement.getAttribute( \"payment\" ) ) );\n    \n    \t\tlist.add( balanceGeneral );\n    \t}\n    \n    \tBigDecimal[] summs = new BigDecimal[]\n    \t{\n    \t\tUtils.parseBigDecimal( XMLUtils.selectText( doc, \"/data/table/@summa1\" ) ),\n    \t\tUtils.parseBigDecimal( XMLUtils.selectText( doc, \"/data/table/@summa2\" ) ),\n    \t\tUtils.parseBigDecimal( XMLUtils.selectText( doc, \"/data/table/@summa3\" ) ),\n    \t\tUtils.parseBigDecimal( XMLUtils.selectText( doc, \"/data/table/@summa4\" ) ),\n    \t\tUtils.parseBigDecimal( XMLUtils.selectText( doc, \"/data/table/@summa5\" ) )\n    \t};\n    \t\n    \treturn summs;\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/proto/dao/BalanceDAO.java", "stars": "12", "class_props": {"extends": "BillingDAO", "implements": null, "modifiers": ["public"]}}, {"id": 61403, "method_name": "getContractBalanceDetailList", "class_name": "BalanceDAO", "params": ["int", "Date", "Date", "List<ContractBalanceDetail>"], "throws": ["BGException"], "modifiers": ["public"], "return_type": "BigDecimal", "snippet": "\tpublic BigDecimal getContractBalanceDetailList( int contractId, Date dateFrom, Date dateTo, List<ContractBalanceDetail> list )\n\t\tthrows BGException\n\t{\n\t\tRequest request = new Request();\n\t\trequest.setModule( CONTRACT_MODULE_ID );\n\t\trequest.setAction( \"ContractBalanceDetail\" );\n\t\trequest.setContractId( String.valueOf( contractId ) );\n\t\trequest.setAttribute( \"date1\", TimeUtils.format( dateFrom, TimeUtils.PATTERN_DDMMYYYY ) );\n\t\trequest.setAttribute( \"date2\", TimeUtils.format( dateTo, TimeUtils.PATTERN_DDMMYYYY ) );\n\n\t\tDocument doc = transferData.postData( request, user );\n\n\t\tif( list != null )\n    \t{\n    \t\tfor( Element rowElement : XMLUtils.selectElements( doc, \"/data/table/data/row\" ) )\n    \t\t{\n    \t\t\tContractBalanceDetail balanceDetail = new ContractBalanceDetail();\n    \t\t\tbalanceDetail.setComment( rowElement.getAttribute( \"comment\" ) );\n    \t\t\tbalanceDetail.setDate( rowElement.getAttribute( \"date\" ) );\n    \t\t\tbalanceDetail.setSumma( Utils.parseBigDecimal( rowElement.getAttribute( \"summa\" ) ) );\n    \t\t\tbalanceDetail.setType( rowElement.getAttribute( \"type\" ) );\n    \n    \t\t\tlist.add( balanceDetail );\n    \t\t}\n    \t}\n\n\t\treturn Utils.parseBigDecimal( XMLUtils.selectText( doc, \"/data/table/@summa\" ) );\n\t}", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/proto/dao/BalanceDAO.java", "stars": "12", "class_props": {"extends": "BillingDAO", "implements": null, "modifiers": ["public"]}}, {"id": 61404, "method_name": "addContractPayment", "class_name": "BalanceDAO", "params": ["int", "BigDecimal", "Date", "int", "String"], "throws": ["BGException"], "modifiers": ["public"], "return_type": "int", "snippet": "\tpublic int addContractPayment( int contractId, BigDecimal summa, Date date, int typeId, String comment )\n\t\tthrows BGException\n\t{\n\t\treturn updateContractPayment( 0, contractId, summa, date, typeId, comment );\n\t}", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/proto/dao/BalanceDAO.java", "stars": "12", "class_props": {"extends": "BillingDAO", "implements": null, "modifiers": ["public"]}}, {"id": 61405, "method_name": "updateContractPayment", "class_name": "BalanceDAO", "params": ["int", "int", "BigDecimal", "Date", "int", "String"], "throws": ["BGException"], "modifiers": ["public"], "return_type": "int", "snippet": "\tpublic int updateContractPayment( int id, int contractId, BigDecimal summa, Date date, int typeId, String comment )\n\t\tthrows BGException\n\t{\n\t\tRequest request = new Request();\n\t\trequest.setModule( CONTRACT_MODULE_ID );\n\t\trequest.setAction( \"UpdateContractPayment\" );\n\t\trequest.setContractId( String.valueOf( contractId ) );\n\t\trequest.setAttribute( \"date\", TimeUtils.format( date, TimeUtils.PATTERN_DDMMYYYY ) );\n\t\trequest.setAttribute( \"pt\", typeId );\n\t\trequest.setAttribute( \"summa\", summa );\n\t\trequest.setAttribute( \"comment\", comment );\n\t\tif( id == 0 )\n\t\t{\n\t\t\trequest.setAttribute( \"id\", \"new\" );\n\t\t}\n\t\telse\n\t\t{\n\t\t\trequest.setAttribute( \"id\", id );\n\t\t}\n\n\t\tDocument doc = transferData.postDataSync( request, user );\n\n\t\treturn Utils.parseInt( XMLUtils.getElement( doc, \"data\" ).getAttribute( \"id\" ) );\n\t}", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/proto/dao/BalanceDAO.java", "stars": "12", "class_props": {"extends": "BillingDAO", "implements": null, "modifiers": ["public"]}}, {"id": 61406, "method_name": "addContractCharge", "class_name": "BalanceDAO", "params": ["int", "BigDecimal", "Date", "int", "String"], "throws": ["BGException"], "modifiers": ["public"], "return_type": "int", "snippet": "\tpublic int addContractCharge( int contractId, BigDecimal summa, Date date, int typeId, String comment )\n\t\tthrows BGException\n\t{\n\t\treturn updateContractCharge( 0, contractId, summa, date, typeId, comment );\n\t}", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/proto/dao/BalanceDAO.java", "stars": "12", "class_props": {"extends": "BillingDAO", "implements": null, "modifiers": ["public"]}}, {"id": 61407, "method_name": "updateContractCharge", "class_name": "BalanceDAO", "params": ["int", "int", "BigDecimal", "Date", "int", "String"], "throws": ["BGException"], "modifiers": ["public"], "return_type": "int", "snippet": "\tpublic int updateContractCharge( int id, int contractId, BigDecimal summa, Date date, int typeId, String comment )\n\t\tthrows BGException\n\t{\n\t\tRequest request = new Request();\n\t\trequest.setModule( CONTRACT_MODULE_ID );\n\t\trequest.setAction( \"UpdateContractCharge\" );\n\t\trequest.setContractId( String.valueOf( contractId ) );\n\t\trequest.setAttribute( \"date\", TimeUtils.format( date, TimeUtils.PATTERN_DDMMYYYY ) );\n\t\trequest.setAttribute( \"pt\", typeId );\n\t\trequest.setAttribute( \"summa\", summa );\n\t\trequest.setAttribute( \"comment\", comment );\n\t\tif( id == 0 )\n\t\t{\n\t\t\trequest.setAttribute( \"id\", \"new\" );\n\t\t}\n\t\telse\n\t\t{\n\t\t\trequest.setAttribute( \"id\", id );\n\t\t}\n\n\t\tDocument doc = transferData.postDataSync( request, user );\n\n\t\treturn Utils.parseInt( XMLUtils.getElement( doc, \"data\" ).getAttribute( \"id\" ) );\n\t}", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/proto/dao/BalanceDAO.java", "stars": "12", "class_props": {"extends": "BillingDAO", "implements": null, "modifiers": ["public"]}}, {"id": 61408, "method_name": "getContractPayment", "class_name": "BalanceDAO", "params": ["int"], "throws": ["BGException"], "modifiers": ["public"], "return_type": "ContractPayment", "snippet": "\tpublic ContractPayment getContractPayment( int paymentId )\n\t\tthrows BGException\n\t{\n\t\tRequest request = new Request();\n\t\trequest.setModule( CONTRACT_MODULE_ID );\n\t\trequest.setAction( \"ContractPayment\" );\n\t\trequest.setAttribute( \"id\", paymentId );\n\n\t\tDocument document = transferData.postData( request, user );\n\n\t\tElement dataElement = document.getDocumentElement();\n\t\tNodeList nodeList = dataElement.getElementsByTagName( \"payment\" );\n\n\t\tif( nodeList.getLength() > 0 )\n\t\t{\n\t\t\tContractPayment payment = new ContractPayment();\n\t\t\tElement element = (Element)nodeList.item( 0 );\n\t\t\tpayment.setId( paymentId );\n\t\t\tpayment.setDate( TimeUtils.parse( element.getAttribute( \"date\" ), TimeUtils.PATTERN_DDMMYYYY ) );\n\t\t\tpayment.setComment( element.getAttribute( \"comment\" ) );\n\t\t\tpayment.setSum( Utils.parseBigDecimal( element.getAttribute( \"summa\" ) ) );\n\t\t\tpayment.setType( element.getAttribute( \"pt\" ) );\n\n\t\t\treturn payment;\n\t\t}\n\n\t\treturn null;\n\t}", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/proto/dao/BalanceDAO.java", "stars": "12", "class_props": {"extends": "BillingDAO", "implements": null, "modifiers": ["public"]}}, {"id": 61409, "method_name": "getContractCharge", "class_name": "BalanceDAO", "params": ["int"], "throws": ["BGException"], "modifiers": ["public"], "return_type": "ContractCharge", "snippet": "\tpublic ContractCharge getContractCharge( int chargeId )\n\t\tthrows BGException\n\t{\n\t\tRequest request = new Request();\n\t\trequest.setModule( CONTRACT_MODULE_ID );\n\t\trequest.setAction( \"ContractCharge\" );\n\t\trequest.setAttribute( \"id\", chargeId );\n\n\t\tDocument document = transferData.postData( request, user );\n\n\t\tElement dataElement = document.getDocumentElement();\n\t\tNodeList nodeList = dataElement.getElementsByTagName( \"charge\" );\n\n\t\tif( nodeList.getLength() > 0 )\n\t\t{\n\t\t\tContractCharge charge = new ContractCharge();\n\t\t\tElement element = (Element)nodeList.item( 0 );\n\n\t\t\tcharge.setId( chargeId );\n\t\t\tcharge.setDate( TimeUtils.parse( element.getAttribute( \"date\" ), TimeUtils.PATTERN_DDMMYYYY ) );\n\t\t\tcharge.setComment( element.getAttribute( \"comment\" ) );\n\t\t\tcharge.setSum( Utils.parseBigDecimal( element.getAttribute( \"summa\" ) ) );\n\t\t\tcharge.setType( element.getAttribute( \"pt\" ) );\n\n\t\t\treturn charge;\n\t\t}\n\n\t\treturn null;\n\t}", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/proto/dao/BalanceDAO.java", "stars": "12", "class_props": {"extends": "BillingDAO", "implements": null, "modifiers": ["public"]}}, {"id": 61410, "method_name": "deleteContractCharge", "class_name": "BalanceDAO", "params": ["int", "int"], "throws": ["BGException"], "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void deleteContractCharge( int chargeId, int contractId )\n\t\tthrows BGException\n\t{\n\t\tRequest request = new Request();\n\t\trequest.setModule( CONTRACT_MODULE_ID );\n\t\trequest.setAction( \"DeleteContractCharge\" );\n\t\trequest.setAttribute( \"id\", chargeId );\n\t\trequest.setContractId( contractId );\n\n\t\ttransferData.postData( request, user );\n\t}", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/proto/dao/BalanceDAO.java", "stars": "12", "class_props": {"extends": "BillingDAO", "implements": null, "modifiers": ["public"]}}, {"id": 61411, "method_name": "deleteContractPayment", "class_name": "BalanceDAO", "params": ["int", "int"], "throws": ["BGException"], "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void deleteContractPayment( int paymentId, int contractId )\n\t\tthrows BGException\n\t{\n\t\tRequest request = new Request();\n\t\trequest.setModule( CONTRACT_MODULE_ID );\n\t\trequest.setAction( \"DeleteContractPayment\" );\n\t\trequest.setAttribute( \"id\", paymentId );\n\t\trequest.setContractId( contractId );\n\n\t\ttransferData.postData( request, user );\n\t}", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/proto/dao/BalanceDAO.java", "stars": "12", "class_props": {"extends": "BillingDAO", "implements": null, "modifiers": ["public"]}}, {"id": 61412, "method_name": "getContractPaymentList", "class_name": "BalanceDAO", "params": ["int", "Date", "Date"], "throws": ["BGException"], "modifiers": ["public"], "return_type": "List<ContractPayment>", "snippet": "\tpublic List<ContractPayment> getContractPaymentList( int contractId, Date dateFrom, Date dateTo )\n\t\tthrows BGException\n\t{\n\t\tList<ContractPayment> result = new ArrayList<ContractPayment>();\n\t\tgetContractPaymentList( contractId, dateFrom, dateTo, result, null );\n\t\treturn result;\n\t}", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/proto/dao/BalanceDAO.java", "stars": "12", "class_props": {"extends": "BillingDAO", "implements": null, "modifiers": ["public"]}}, {"id": 61413, "method_name": "getContractBalanceSum", "class_name": "BalanceDAO", "params": ["int", "Date", "Date"], "throws": ["BGException"], "modifiers": ["public"], "return_type": "BigDecimal", "snippet": "\tpublic BigDecimal getContractBalanceSum( int contractId, Date dateFrom, Date dateTo )\n\t\tthrows BGException\n\t{\n\t\treturn new ContractDAO( user, dbInfo ).getContractInfo( contractId ).getBalanceOut();\n\t}", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/proto/dao/BalanceDAO.java", "stars": "12", "class_props": {"extends": "BillingDAO", "implements": null, "modifiers": ["public"]}}, {"id": 61414, "method_name": "getContractAccountSum", "class_name": "BalanceDAO", "params": ["int", "Date", "Date"], "throws": ["BGException"], "modifiers": ["public"], "return_type": "BigDecimal", "snippet": "\tpublic BigDecimal getContractAccountSum( int contractId, Date dateFrom, Date dateTo )\n\t\tthrows BGException\n\t{\n\t\treturn getContractAccountList( contractId, dateFrom, dateTo, null, null );\n\t}", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/proto/dao/BalanceDAO.java", "stars": "12", "class_props": {"extends": "BillingDAO", "implements": null, "modifiers": ["public"]}}, {"id": 61415, "method_name": "setValue", "class_name": "FloatTag", "params": ["Float"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setValue(Float s) {\n        this.value = s;\n    }", "url": "https://raw.githubusercontent.com/ryandw11/ODS/master/src/main/java/me/ryandw11/ods/tags/FloatTag.java", "stars": "2", "class_props": {"extends": null, "implements": ["Tag"], "modifiers": ["public"]}}, {"id": 61416, "method_name": "getValue", "class_name": "FloatTag", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Float", "snippet": "    public Float getValue() {\n        return value;\n    }", "url": "https://raw.githubusercontent.com/ryandw11/ODS/master/src/main/java/me/ryandw11/ods/tags/FloatTag.java", "stars": "2", "class_props": {"extends": null, "implements": ["Tag"], "modifiers": ["public"]}}, {"id": 61417, "method_name": "setName", "class_name": "FloatTag", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setName(String name) {\n        this.name = name;\n    }", "url": "https://raw.githubusercontent.com/ryandw11/ODS/master/src/main/java/me/ryandw11/ods/tags/FloatTag.java", "stars": "2", "class_props": {"extends": null, "implements": ["Tag"], "modifiers": ["public"]}}, {"id": 61418, "method_name": "getName", "class_name": "FloatTag", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getName() {\n        return name;\n    }", "url": "https://raw.githubusercontent.com/ryandw11/ODS/master/src/main/java/me/ryandw11/ods/tags/FloatTag.java", "stars": "2", "class_props": {"extends": null, "implements": ["Tag"], "modifiers": ["public"]}}, {"id": 61419, "method_name": "writeData", "class_name": "FloatTag", "params": ["DataOutputStream"], "throws": ["IOException"], "modifiers": ["public"], "return_type": "void", "snippet": "    public void writeData(DataOutputStream dos) throws IOException {\n        // Indicates the string\n        dos.write(getID());\n        //Create a new DataOutputStream\n        ByteArrayOutputStream os = new ByteArrayOutputStream();\n        CountingOutputStream cos = new CountingOutputStream(os);\n        DataOutputStream tempDos = new DataOutputStream(cos);\n\n        tempDos.writeShort(name.getBytes(StandardCharsets.UTF_8).length);\n        tempDos.write(name.getBytes(StandardCharsets.UTF_8));\n        tempDos.writeFloat(value);\n\n        dos.writeInt(cos.getCount());\n        dos.write(os.toByteArray());\n        tempDos.close();\n    }", "url": "https://raw.githubusercontent.com/ryandw11/ODS/master/src/main/java/me/ryandw11/ods/tags/FloatTag.java", "stars": "2", "class_props": {"extends": null, "implements": ["Tag"], "modifiers": ["public"]}}, {"id": 61420, "method_name": "createFromData", "class_name": "FloatTag", "params": ["byte"], "throws": null, "modifiers": ["public"], "return_type": "Tag<Float>", "snippet": "    public Tag<Float> createFromData(byte[] value) {\n        ByteBuffer wrappedFloat = ByteBuffer.wrap(value);\n        this.value = wrappedFloat.getFloat();\n        wrappedFloat.clear();\n        return this;\n    }", "url": "https://raw.githubusercontent.com/ryandw11/ODS/master/src/main/java/me/ryandw11/ods/tags/FloatTag.java", "stars": "2", "class_props": {"extends": null, "implements": ["Tag"], "modifiers": ["public"]}}, {"id": 61421, "method_name": "getID", "class_name": "FloatTag", "params": [], "throws": null, "modifiers": ["public"], "return_type": "byte", "snippet": "    public byte getID() {\n        return 3;\n    }", "url": "https://raw.githubusercontent.com/ryandw11/ODS/master/src/main/java/me/ryandw11/ods/tags/FloatTag.java", "stars": "2", "class_props": {"extends": null, "implements": ["Tag"], "modifiers": ["public"]}}, {"id": 61422, "method_name": "onCreateViewHolder", "class_name": "AdapterItemImages", "params": ["ViewGroup", "int"], "throws": null, "modifiers": ["public"], "return_type": "RecyclerView", "snippet": "    public RecyclerView.ViewHolder onCreateViewHolder(ViewGroup parent, int viewType) {\n\n        View v = null;\n\n        if(viewType==VIEW_TYPE_IMAGE)\n        {\n            v = LayoutInflater.from(parent.getContext()).inflate(R.layout.list_item_item_image,parent,false);\n            return new ViewHolderItemImage(v);\n        }\n        else if(viewType == VIEW_TYPE_ADD_IMAGE)\n        {\n            v = LayoutInflater.from(parent.getContext()).inflate(R.layout.list_item_add_item,parent,false);\n            return new ViewHolderAddItem(v);\n        }\n\n\n        return null;\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/EditDataScreens/EditItem/AdapterItemImages.java", "stars": "10", "class_props": {"extends": "RecyclerView", "implements": null, "modifiers": ["public"]}}, {"id": 61423, "method_name": "onBindViewHolder", "class_name": "AdapterItemImages", "params": ["RecyclerView", "int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onBindViewHolder(RecyclerView.ViewHolder holderGiven, final int position) {\n\n        if(holderGiven instanceof ViewHolderItemImage)\n        {\n            ViewHolderItemImage holder = (ViewHolderItemImage) holderGiven;\n\n\n            holder.copyrights.setText(dataset.get(position-1).getImageCopyrights());\n\n\n            String imagePath = PrefGeneral.getServiceURL(context) + \"/api/v1/ItemImage/Image/five_hundred_\"\n                    + dataset.get(position-1).getImageFilename() + \".jpg\";\n\n            Drawable placeholder = VectorDrawableCompat\n                    .create(context.getResources(),\n                            R.drawable.ic_nature_people_white_48px, context.getTheme());\n\n            Picasso.get()\n                    .load(imagePath)\n                    .placeholder(placeholder)\n                    .into(holder.itemImage);\n        }\n\n\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/EditDataScreens/EditItem/AdapterItemImages.java", "stars": "10", "class_props": {"extends": "RecyclerView", "implements": null, "modifiers": ["public"]}}, {"id": 61424, "method_name": "getItemViewType", "class_name": "AdapterItemImages", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getItemViewType(int position) {\n\n        if(position==0)\n        {\n            return VIEW_TYPE_ADD_IMAGE;\n        }\n        else\n        {\n            return VIEW_TYPE_IMAGE;\n        }\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/EditDataScreens/EditItem/AdapterItemImages.java", "stars": "10", "class_props": {"extends": "RecyclerView", "implements": null, "modifiers": ["public"]}}, {"id": 61425, "method_name": "getItemCount", "class_name": "AdapterItemImages", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getItemCount() {\n\n        return dataset.size()+1;\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/EditDataScreens/EditItem/AdapterItemImages.java", "stars": "10", "class_props": {"extends": "RecyclerView", "implements": null, "modifiers": ["public"]}}, {"id": 61426, "method_name": "showToastMessage", "class_name": "AdapterItemImages", "params": ["String"], "throws": null, "modifiers": [], "return_type": "void", "snippet": "    void showToastMessage(String message)\n    {\n        Toast.makeText(context,message,Toast.LENGTH_SHORT).show();\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/EditDataScreens/EditItem/AdapterItemImages.java", "stars": "10", "class_props": {"extends": "RecyclerView", "implements": null, "modifiers": ["public"]}}, {"id": 61427, "method_name": "listItemClick", "class_name": "ViewHolderAddItem", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "        void listItemClick()\n        {\n//            showToastMessage(\"Add Item Click!\");\n            notificationReceiver.addItemImage();\n        }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/EditDataScreens/EditItem/AdapterItemImages.java", "stars": "10", "class_props": {"extends": "RecyclerView", "implements": null, "modifiers": ["public"]}}, {"id": 61428, "method_name": "itemCategoryListItemClick", "class_name": "ViewHolderItemImage", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "        public void itemCategoryListItemClick()\n        {\n\n        }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/EditDataScreens/EditItem/AdapterItemImages.java", "stars": "10", "class_props": {"extends": "RecyclerView", "implements": ["PopupMenu"], "modifiers": ["public"]}}, {"id": 61429, "method_name": "optionsOverflowClick", "class_name": "ViewHolderItemImage", "params": ["View"], "throws": null, "modifiers": [], "return_type": "void", "snippet": "        void optionsOverflowClick(View v)\n        {\n            PopupMenu popup = new PopupMenu(context, v);\n            MenuInflater inflater = popup.getMenuInflater();\n            inflater.inflate(R.menu.item_image_item_overflow, popup.getMenu());\n            popup.setOnMenuItemClickListener(this);\n            popup.show();\n        }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/EditDataScreens/EditItem/AdapterItemImages.java", "stars": "10", "class_props": {"extends": "RecyclerView", "implements": ["PopupMenu"], "modifiers": ["public"]}}, {"id": 61430, "method_name": "onMenuItemClick", "class_name": "ViewHolderItemImage", "params": ["MenuItem"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "        public boolean onMenuItemClick(MenuItem item) {\n\n            switch (item.getItemId())\n            {\n\n                case R.id.action_remove:\n\n//                    showToastMessage(\"Remove\");\n                    notificationReceiver.removeItemImage(dataset.get(getLayoutPosition()-1),getLayoutPosition()-1);\n\n                    break;\n\n                case R.id.action_edit:\n\n//                    showToastMessage(\"Edit\");\n                    notificationReceiver.editItemImage(dataset.get(getLayoutPosition()-1),getLayoutPosition()-1);\n\n                    break;\n\n\n                default:\n                    break;\n\n            }\n\n            return false;\n        }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/EditDataScreens/EditItem/AdapterItemImages.java", "stars": "10", "class_props": {"extends": "RecyclerView", "implements": ["PopupMenu"], "modifiers": ["public"]}}, {"id": 61431, "method_name": "calculate", "class_name": "LsLinearRegression", "params": ["double", "double", "double", "int", "DoubleUnaryOperator"], "throws": ["Exception"], "modifiers": ["public"], "return_type": "String", "snippet": "    public String calculate(double searched, double start, double end, int n, DoubleUnaryOperator function) throws Exception {\n        validate(searched, start, end, n);\n\n        var points = arrayPoints(start, end, n, function);\n        var xs = points.getKey();\n        var ys = points.getValue();\n\n        var length = points.getKey().length;\n\n        var xMid = Arrays.stream(xs).average().orElse(Double.NaN);\n        var yMid = Arrays.stream(ys).average().orElse(Double.NaN);\n\n        var xx = 0.0;\n        var xy = 0.0;\n\n        for (int i = 0; i < length; i++) {\n            var dX = (xs[i] - xMid);\n\n            xx += Math.pow(dX, 2);\n            xy += dX * (ys[i] - yMid);\n        }\n\n        if (xx == 0)\n            xx = Math.pow(1, -10);\n\n        var slope = xy / xx;\n        var intercept = yMid - slope * xMid;\n\n        DoubleUnaryOperator y = (double x) -> slope * x + intercept;\n        return \"\u0420\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442: \" + y.applyAsDouble(searched);\n    }", "url": "https://raw.githubusercontent.com/pi-181/num-methods-lab6/master/src/main/java/com/demkom58/nmlab6/regression/LsLinearRegression.java", "stars": "2", "class_props": {"extends": null, "implements": ["Regression"], "modifiers": ["public"]}}, {"id": 61432, "method_name": "callEntry", "class_name": "IpaLoaderImpl", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void callEntry() {\n        executable.callEntry(emulator);\n    }", "url": "https://raw.githubusercontent.com/wmm1996528/unidbg_douyin10/master/src/main/java/com/github/unidbg/ios/ipa/IpaLoaderImpl.java", "stars": "16", "class_props": {"extends": "IpaLoader", "implements": null, "modifiers": []}}, {"id": 61433, "method_name": "getExecutable", "class_name": "IpaLoaderImpl", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Module", "snippet": "    public Module getExecutable() {\n        return executable;\n    }", "url": "https://raw.githubusercontent.com/wmm1996528/unidbg_douyin10/master/src/main/java/com/github/unidbg/ios/ipa/IpaLoaderImpl.java", "stars": "16", "class_props": {"extends": "IpaLoader", "implements": null, "modifiers": []}}, {"id": 61434, "method_name": "getEmulator", "class_name": "IpaLoaderImpl", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Emulator<?>", "snippet": "    public Emulator<?> getEmulator() {\n        return emulator;\n    }", "url": "https://raw.githubusercontent.com/wmm1996528/unidbg_douyin10/master/src/main/java/com/github/unidbg/ios/ipa/IpaLoaderImpl.java", "stars": "16", "class_props": {"extends": "IpaLoader", "implements": null, "modifiers": []}}, {"id": 61435, "method_name": "main", "class_name": "Demo01GetStream", "params": ["String"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void main(String[] args) {\n        //\u628a\u96c6\u5408\u8f6c\u6362\u4e3aStream\u6d41\n        List<String> list = new ArrayList<>();\n        Stream<String> stream1 = list.stream();\n\n        Set<String> set = new HashSet<>();\n        Stream<String> stream2 = set.stream();\n\n        Map<String,String> map = new HashMap<>();\n        //\u83b7\u53d6\u952e,\u5b58\u50a8\u5230\u4e00\u4e2aSet\u96c6\u5408\u4e2d\n        Set<String> keySet = map.keySet();\n        Stream<String> stream3 = keySet.stream();\n\n        //\u83b7\u53d6\u503c,\u5b58\u50a8\u5230\u4e00\u4e2aCollection\u96c6\u5408\u4e2d\n        Collection<String> values = map.values();\n        Stream<String> stream4 = values.stream();\n\n        //\u83b7\u53d6\u952e\u503c\u5bf9(\u952e\u4e0e\u503c\u7684\u6620\u5c04\u5173\u7cfb entrySet)\n        Set<Map.Entry<String, String>> entries = map.entrySet();\n        Stream<Map.Entry<String, String>> stream5 = entries.stream();\n\n        //\u628a\u6570\u7ec4\u8f6c\u6362\u4e3aStream\u6d41\n        Stream<Integer> stream6 = Stream.of(1, 2, 3, 4, 5);\n        //\u53ef\u53d8\u53c2\u6570\u53ef\u4ee5\u4f20\u9012\u6570\u7ec4\n        Integer[] arr = {1,2,3,4,5};\n        Stream<Integer> stream7 = Stream.of(arr);\n        String[] arr2 = {\"a\",\"bb\",\"ccc\"};\n        Stream<String> stream8 = Stream.of(arr2);\n    }", "url": "https://raw.githubusercontent.com/liuminchao123/JavaWeb_Learning/master/02.%20java/Java/%E9%BB%91%E9%A9%AC%E6%95%99%E7%A8%8B/24.%E3%80%90Stream%E6%B5%81%E3%80%81%E6%96%B9%E6%B3%95%E5%BC%95%E7%94%A8%E3%80%91%E7%AC%94%E8%AE%B0/code/13_StreamAndMethodReference/src/com/itheima/demo02/Stream/Demo01GetStream.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 61436, "method_name": "toString", "class_name": "BookShelfVO", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String toString() {\n        return super.toString();\n    }", "url": "https://raw.githubusercontent.com/201206030/novel-plus/master/novel-front/src/main/java/com/java2nb/novel/vo/BookShelfVO.java", "stars": "137", "class_props": {"extends": "UserBookshelf", "implements": null, "modifiers": ["public"]}}, {"id": 61437, "method_name": "getCoid", "class_name": "CommentDomain", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Integer", "snippet": "    public Integer getCoid() {\n        return coid;\n    }", "url": "https://raw.githubusercontent.com/chenval/my-site/master/src/main/java/cn/blog/Domin/CommentDomain.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 61438, "method_name": "setCoid", "class_name": "CommentDomain", "params": ["Integer"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setCoid(Integer coid) {\n        this.coid = coid;\n    }", "url": "https://raw.githubusercontent.com/chenval/my-site/master/src/main/java/cn/blog/Domin/CommentDomain.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 61439, "method_name": "getCid", "class_name": "CommentDomain", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Integer", "snippet": "    public Integer getCid() {\n        return cid;\n    }", "url": "https://raw.githubusercontent.com/chenval/my-site/master/src/main/java/cn/blog/Domin/CommentDomain.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 61440, "method_name": "setCid", "class_name": "CommentDomain", "params": ["Integer"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setCid(Integer cid) {\n        this.cid = cid;\n    }", "url": "https://raw.githubusercontent.com/chenval/my-site/master/src/main/java/cn/blog/Domin/CommentDomain.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 61441, "method_name": "getCreated", "class_name": "CommentDomain", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Integer", "snippet": "    public Integer getCreated() {\n        return created;\n    }", "url": "https://raw.githubusercontent.com/chenval/my-site/master/src/main/java/cn/blog/Domin/CommentDomain.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 61442, "method_name": "setCreated", "class_name": "CommentDomain", "params": ["Integer"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setCreated(Integer created) {\n        this.created = created;\n    }", "url": "https://raw.githubusercontent.com/chenval/my-site/master/src/main/java/cn/blog/Domin/CommentDomain.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 61443, "method_name": "getAuthor", "class_name": "CommentDomain", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getAuthor() {\n        return author;\n    }", "url": "https://raw.githubusercontent.com/chenval/my-site/master/src/main/java/cn/blog/Domin/CommentDomain.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 61444, "method_name": "setAuthor", "class_name": "CommentDomain", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setAuthor(String author) {\n        this.author = author;\n    }", "url": "https://raw.githubusercontent.com/chenval/my-site/master/src/main/java/cn/blog/Domin/CommentDomain.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 61445, "method_name": "getAuthorId", "class_name": "CommentDomain", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Integer", "snippet": "    public Integer getAuthorId() {\n        return authorId;\n    }", "url": "https://raw.githubusercontent.com/chenval/my-site/master/src/main/java/cn/blog/Domin/CommentDomain.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 61446, "method_name": "setAuthorId", "class_name": "CommentDomain", "params": ["Integer"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setAuthorId(Integer authorId) {\n        this.authorId = authorId;\n    }", "url": "https://raw.githubusercontent.com/chenval/my-site/master/src/main/java/cn/blog/Domin/CommentDomain.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 61447, "method_name": "getOwnerId", "class_name": "CommentDomain", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Integer", "snippet": "    public Integer getOwnerId() {\n        return ownerId;\n    }", "url": "https://raw.githubusercontent.com/chenval/my-site/master/src/main/java/cn/blog/Domin/CommentDomain.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 61448, "method_name": "setOwnerId", "class_name": "CommentDomain", "params": ["Integer"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setOwnerId(Integer ownerId) {\n        this.ownerId = ownerId;\n    }", "url": "https://raw.githubusercontent.com/chenval/my-site/master/src/main/java/cn/blog/Domin/CommentDomain.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 61449, "method_name": "getMail", "class_name": "CommentDomain", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getMail() {\n        return mail;\n    }", "url": "https://raw.githubusercontent.com/chenval/my-site/master/src/main/java/cn/blog/Domin/CommentDomain.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 61450, "method_name": "setMail", "class_name": "CommentDomain", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setMail(String mail) {\n        this.mail = mail;\n    }", "url": "https://raw.githubusercontent.com/chenval/my-site/master/src/main/java/cn/blog/Domin/CommentDomain.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 61451, "method_name": "getUrl", "class_name": "CommentDomain", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getUrl() {\n        return url;\n    }", "url": "https://raw.githubusercontent.com/chenval/my-site/master/src/main/java/cn/blog/Domin/CommentDomain.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 61452, "method_name": "setUrl", "class_name": "CommentDomain", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setUrl(String url) {\n        this.url = url;\n    }", "url": "https://raw.githubusercontent.com/chenval/my-site/master/src/main/java/cn/blog/Domin/CommentDomain.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 61453, "method_name": "getIp", "class_name": "CommentDomain", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getIp() {\n        return ip;\n    }", "url": "https://raw.githubusercontent.com/chenval/my-site/master/src/main/java/cn/blog/Domin/CommentDomain.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 61454, "method_name": "setIp", "class_name": "CommentDomain", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setIp(String ip) {\n        this.ip = ip;\n    }", "url": "https://raw.githubusercontent.com/chenval/my-site/master/src/main/java/cn/blog/Domin/CommentDomain.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 61455, "method_name": "getAgent", "class_name": "CommentDomain", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getAgent() {\n        return agent;\n    }", "url": "https://raw.githubusercontent.com/chenval/my-site/master/src/main/java/cn/blog/Domin/CommentDomain.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 61456, "method_name": "setAgent", "class_name": "CommentDomain", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setAgent(String agent) {\n        this.agent = agent;\n    }", "url": "https://raw.githubusercontent.com/chenval/my-site/master/src/main/java/cn/blog/Domin/CommentDomain.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 61457, "method_name": "getType", "class_name": "CommentDomain", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getType() {\n        return type;\n    }", "url": "https://raw.githubusercontent.com/chenval/my-site/master/src/main/java/cn/blog/Domin/CommentDomain.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 61458, "method_name": "setType", "class_name": "CommentDomain", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setType(String type) {\n        this.type = type;\n    }", "url": "https://raw.githubusercontent.com/chenval/my-site/master/src/main/java/cn/blog/Domin/CommentDomain.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 61459, "method_name": "getStatus", "class_name": "CommentDomain", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getStatus() {\n        return status;\n    }", "url": "https://raw.githubusercontent.com/chenval/my-site/master/src/main/java/cn/blog/Domin/CommentDomain.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 61460, "method_name": "setStatus", "class_name": "CommentDomain", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setStatus(String status) {\n        this.status = status;\n    }", "url": "https://raw.githubusercontent.com/chenval/my-site/master/src/main/java/cn/blog/Domin/CommentDomain.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 61461, "method_name": "getParent", "class_name": "CommentDomain", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Integer", "snippet": "    public Integer getParent() {\n        return parent;\n    }", "url": "https://raw.githubusercontent.com/chenval/my-site/master/src/main/java/cn/blog/Domin/CommentDomain.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 61462, "method_name": "setParent", "class_name": "CommentDomain", "params": ["Integer"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setParent(Integer parent) {\n        this.parent = parent;\n    }", "url": "https://raw.githubusercontent.com/chenval/my-site/master/src/main/java/cn/blog/Domin/CommentDomain.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 61463, "method_name": "getContent", "class_name": "CommentDomain", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getContent() {\n        return content;\n    }", "url": "https://raw.githubusercontent.com/chenval/my-site/master/src/main/java/cn/blog/Domin/CommentDomain.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 61464, "method_name": "setContent", "class_name": "CommentDomain", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setContent(String content) {\n        this.content = content;\n    }", "url": "https://raw.githubusercontent.com/chenval/my-site/master/src/main/java/cn/blog/Domin/CommentDomain.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 61465, "method_name": "run", "class_name": "AzkabanDssJobType", "params": [], "throws": ["Exception"], "modifiers": ["public"], "return_type": "void", "snippet": "    public void run() throws Exception {\n\n        info(\"Start to execute job\");\n        logJobProperties();\n        this.job = JobBuilder.getAzkanbanBuilder().setJobProps(this.jobPropsMap).build();\n        this.job.setLogObj(new AzkabanAppjointLog(this.log));\n        if(JobTypeEnum.EmptyJob == ((LinkisJob)this.job).getJobType()){\n            this.log.warn(\"This node is empty type\");\n            return;\n        }\n        LinkisNodeExecutionImpl.getLinkisNodeExecution().runJob(this.job);\n        LinkisNodeExecutionImpl.getLinkisNodeExecution().waitForComplete(this.job);\n\n        LinkisExecutionListener listener = (LinkisExecutionListener)LinkisNodeExecutionImpl.getLinkisNodeExecution();\n        listener.onStatusChanged(null,  LinkisNodeExecutionImpl.getLinkisNodeExecution().getState(this.job),this.job);\n        int resultSize =  LinkisNodeExecutionImpl.getLinkisNodeExecution().getResultSize(this.job);\n        for(int i =0; i < resultSize; i++){\n            this.log.info(\"The content of the \" + (i + 1) + \"th resultset is :\"\n                    +  LinkisNodeExecutionImpl.getLinkisNodeExecution().getResult(this.job, i, LinkisJobExecutionConfiguration.RESULT_PRINT_SIZE.getValue(this.jobPropsMap)));\n        }\n\n        info(\"Finished to execute job\");\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-jobtype/src/main/java/com/webank/wedatasphere/schedulis/jobtype/util/AzkabanDssJobType.java", "stars": "18", "class_props": {"extends": "AbstractJob", "implements": null, "modifiers": ["public"]}}, {"id": 61466, "method_name": "cancel", "class_name": "AzkabanDssJobType", "params": [], "throws": ["Exception"], "modifiers": ["public"], "return_type": "void", "snippet": "    public void cancel() throws Exception {\n//        super.cancel();\n        LinkisNodeExecutionImpl.getLinkisNodeExecution().cancel(this.job);\n        isCanceled = true;\n        warn(\"This job has been canceled\");\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-jobtype/src/main/java/com/webank/wedatasphere/schedulis/jobtype/util/AzkabanDssJobType.java", "stars": "18", "class_props": {"extends": "AbstractJob", "implements": null, "modifiers": ["public"]}}, {"id": 61467, "method_name": "isCanceled", "class_name": "AzkabanDssJobType", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean isCanceled() {\n        return isCanceled;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-jobtype/src/main/java/com/webank/wedatasphere/schedulis/jobtype/util/AzkabanDssJobType.java", "stars": "18", "class_props": {"extends": "AbstractJob", "implements": null, "modifiers": ["public"]}}, {"id": 61468, "method_name": "getProgress", "class_name": "AzkabanDssJobType", "params": [], "throws": ["Exception"], "modifiers": ["public"], "return_type": "double", "snippet": "    public double getProgress() throws Exception {\n        return   LinkisNodeExecutionImpl.getLinkisNodeExecution().getProgress(this.job);\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-jobtype/src/main/java/com/webank/wedatasphere/schedulis/jobtype/util/AzkabanDssJobType.java", "stars": "18", "class_props": {"extends": "AbstractJob", "implements": null, "modifiers": ["public"]}}, {"id": 61469, "method_name": "logJobProperties", "class_name": "AzkabanDssJobType", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void logJobProperties() {\n        if (this.jobProps != null &&\n                this.jobProps.getBoolean(JOB_DUMP_PROPERTIES_IN_LOG, true)) {\n            try {\n                this.info(\"******   Job properties   ******\");\n                this.info(String.format(\"- Note : value is masked if property name ends with '%s'.\",\n                        SENSITIVE_JOB_PROP_NAME_SUFFIX));\n                for (final Map.Entry<String, String> entry : this.jobPropsMap.entrySet()) {\n                    final String key = entry.getKey();\n                    final String value = key.endsWith(SENSITIVE_JOB_PROP_NAME_SUFFIX) ?\n                            SENSITIVE_JOB_PROP_VALUE_PLACEHOLDER :\n                            entry.getValue();\n                    this.info(String.format(\"%s=%s\", key, value));\n                }\n                this.info(\"****** End Job properties  ******\");\n            } catch (final Exception ex) {\n                this.log.error(\"failed to log job properties \", ex);\n            }\n        }\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-jobtype/src/main/java/com/webank/wedatasphere/schedulis/jobtype/util/AzkabanDssJobType.java", "stars": "18", "class_props": {"extends": "AbstractJob", "implements": null, "modifiers": ["public"]}}, {"id": 61470, "method_name": "onCreate", "class_name": "EditItem", "params": ["Bundle"], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        setContentView(R.layout.activity_fragment_container);\n\n//        Toolbar toolbar = (Toolbar) findViewById(R.id.toolbar);\n//        setSupportActionBar(toolbar);\n//        getSupportActionBar().setDisplayHomeAsUpEnabled(true);\n\n        if(getSupportFragmentManager().findFragmentByTag(TAG_FRAGMENT_EDIT)==null)\n        {\n            getSupportFragmentManager()\n                    .beginTransaction()\n                    .add(R.id.fragment_container,new EditItemFragmentNew(),TAG_FRAGMENT_EDIT)\n                    .commit();\n        }\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/EditDataScreens/EditItem/EditItem.java", "stars": "10", "class_props": {"extends": "AppCompatActivity", "implements": null, "modifiers": ["public"]}}, {"id": 61471, "method_name": "run", "class_name": "ClockDaemon", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void run() {\n        TimeUnit unit = timeUnit;\n        long timeStamp = System.currentTimeMillis();\n        try {\n            if(null != listener && timeoutDuration > 0){\n                if(null == unit){\n                    unit = TimeUnit.SECONDS;\n                }\n                long clock = System.currentTimeMillis();\n                int count = 0;\n                while(!exec.tryLock(timeoutDuration, unit)){\n                    //The task is timeout, invoke the listener\n                    try {\n                        listener.handle(taskProcess, \"RUN \" +\n                                TimeUnit.MILLISECONDS.toSeconds(System.currentTimeMillis() - clock)\n                                + \" \" +unit.name());\n                        if(++ count >= 3){\n                            break;\n                        }\n                    }catch(Exception e){\n                        logger.error(\"Notify server task {} timeout error\", TaskProcessUtils.getTaskId(taskProcess), e);\n                    }\n                    exec.lock();\n                }\n            }else{\n                exec.lock();\n            }\n        } catch (InterruptedException e) {\n            logger.error(e.getMessage(), e);\n            Thread.currentThread().interrupt();\n        } finally{\n           if(exec.isHeldByCurrentThread()){\n               exec.unlock();\n               if(logger.isInfoEnabled()) {\n                   logger.info(\"Task finished, spent time in seconds: {}\",\n                           TimeUnit.SECONDS.convert(System.currentTimeMillis() - timeStamp, TimeUnit.MILLISECONDS));\n               }\n           }\n        }\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/core/src/main/java/com/webank/wedatasphere/exchangis/executor/daemons/ClockDaemon.java", "stars": "23", "class_props": {"extends": "AbstractTaskDaemon", "implements": null, "modifiers": ["public"]}}, {"id": 61472, "method_name": "getId", "class_name": "Comments", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Long", "snippet": "    public Long getId() {\n        return id;\n    }", "url": "https://raw.githubusercontent.com/rubywooJ/beyond/master/src/main/java/cn/tsxygfy/beyond/model/po/Comments.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 61473, "method_name": "setId", "class_name": "Comments", "params": ["Long"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setId(Long id) {\n        this.id = id;\n    }", "url": "https://raw.githubusercontent.com/rubywooJ/beyond/master/src/main/java/cn/tsxygfy/beyond/model/po/Comments.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 61474, "method_name": "getpId", "class_name": "Comments", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Long", "snippet": "    public Long getpId() {\n        return pId;\n    }", "url": "https://raw.githubusercontent.com/rubywooJ/beyond/master/src/main/java/cn/tsxygfy/beyond/model/po/Comments.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 61475, "method_name": "setpId", "class_name": "Comments", "params": ["Long"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setpId(Long pId) {\n        this.pId = pId;\n    }", "url": "https://raw.githubusercontent.com/rubywooJ/beyond/master/src/main/java/cn/tsxygfy/beyond/model/po/Comments.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 61476, "method_name": "getcId", "class_name": "Comments", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Long", "snippet": "    public Long getcId() {\n        return cId;\n    }", "url": "https://raw.githubusercontent.com/rubywooJ/beyond/master/src/main/java/cn/tsxygfy/beyond/model/po/Comments.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 61477, "method_name": "setcId", "class_name": "Comments", "params": ["Long"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setcId(Long cId) {\n        this.cId = cId;\n    }", "url": "https://raw.githubusercontent.com/rubywooJ/beyond/master/src/main/java/cn/tsxygfy/beyond/model/po/Comments.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 61478, "method_name": "getArticleTitle", "class_name": "Comments", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getArticleTitle() {\n        return articleTitle;\n    }", "url": "https://raw.githubusercontent.com/rubywooJ/beyond/master/src/main/java/cn/tsxygfy/beyond/model/po/Comments.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 61479, "method_name": "setArticleTitle", "class_name": "Comments", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setArticleTitle(String articleTitle) {\n        this.articleTitle = articleTitle;\n    }", "url": "https://raw.githubusercontent.com/rubywooJ/beyond/master/src/main/java/cn/tsxygfy/beyond/model/po/Comments.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 61480, "method_name": "getArticleId", "class_name": "Comments", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Long", "snippet": "    public Long getArticleId() {\n        return articleId;\n    }", "url": "https://raw.githubusercontent.com/rubywooJ/beyond/master/src/main/java/cn/tsxygfy/beyond/model/po/Comments.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 61481, "method_name": "setArticleId", "class_name": "Comments", "params": ["Long"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setArticleId(Long articleId) {\n        this.articleId = articleId;\n    }", "url": "https://raw.githubusercontent.com/rubywooJ/beyond/master/src/main/java/cn/tsxygfy/beyond/model/po/Comments.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 61482, "method_name": "getName", "class_name": "Comments", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getName() {\n        return name;\n    }", "url": "https://raw.githubusercontent.com/rubywooJ/beyond/master/src/main/java/cn/tsxygfy/beyond/model/po/Comments.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 61483, "method_name": "setName", "class_name": "Comments", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setName(String name) {\n        this.name = name;\n    }", "url": "https://raw.githubusercontent.com/rubywooJ/beyond/master/src/main/java/cn/tsxygfy/beyond/model/po/Comments.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 61484, "method_name": "getcName", "class_name": "Comments", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getcName() {\n        return cName;\n    }", "url": "https://raw.githubusercontent.com/rubywooJ/beyond/master/src/main/java/cn/tsxygfy/beyond/model/po/Comments.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 61485, "method_name": "setcName", "class_name": "Comments", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setcName(String cName) {\n        this.cName = cName;\n    }", "url": "https://raw.githubusercontent.com/rubywooJ/beyond/master/src/main/java/cn/tsxygfy/beyond/model/po/Comments.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 61486, "method_name": "getTime", "class_name": "Comments", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Long", "snippet": "    public Long getTime() {\n        return time;\n    }", "url": "https://raw.githubusercontent.com/rubywooJ/beyond/master/src/main/java/cn/tsxygfy/beyond/model/po/Comments.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 61487, "method_name": "setTime", "class_name": "Comments", "params": ["Long"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setTime(Long time) {\n        this.time = time;\n    }", "url": "https://raw.githubusercontent.com/rubywooJ/beyond/master/src/main/java/cn/tsxygfy/beyond/model/po/Comments.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 61488, "method_name": "getEmail", "class_name": "Comments", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getEmail() {\n        return email;\n    }", "url": "https://raw.githubusercontent.com/rubywooJ/beyond/master/src/main/java/cn/tsxygfy/beyond/model/po/Comments.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 61489, "method_name": "setEmail", "class_name": "Comments", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setEmail(String email) {\n        this.email = email;\n    }", "url": "https://raw.githubusercontent.com/rubywooJ/beyond/master/src/main/java/cn/tsxygfy/beyond/model/po/Comments.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 61490, "method_name": "getUrl", "class_name": "Comments", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getUrl() {\n        return url;\n    }", "url": "https://raw.githubusercontent.com/rubywooJ/beyond/master/src/main/java/cn/tsxygfy/beyond/model/po/Comments.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 61491, "method_name": "setUrl", "class_name": "Comments", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setUrl(String url) {\n        this.url = url;\n    }", "url": "https://raw.githubusercontent.com/rubywooJ/beyond/master/src/main/java/cn/tsxygfy/beyond/model/po/Comments.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 61492, "method_name": "getType", "class_name": "Comments", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Integer", "snippet": "    public Integer getType() {\n        return type;\n    }", "url": "https://raw.githubusercontent.com/rubywooJ/beyond/master/src/main/java/cn/tsxygfy/beyond/model/po/Comments.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 61493, "method_name": "setType", "class_name": "Comments", "params": ["Integer"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setType(Integer type) {\n        this.type = type;\n    }", "url": "https://raw.githubusercontent.com/rubywooJ/beyond/master/src/main/java/cn/tsxygfy/beyond/model/po/Comments.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 61494, "method_name": "getIp", "class_name": "Comments", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getIp() {\n        return ip;\n    }", "url": "https://raw.githubusercontent.com/rubywooJ/beyond/master/src/main/java/cn/tsxygfy/beyond/model/po/Comments.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 61495, "method_name": "setIp", "class_name": "Comments", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setIp(String ip) {\n        this.ip = ip;\n    }", "url": "https://raw.githubusercontent.com/rubywooJ/beyond/master/src/main/java/cn/tsxygfy/beyond/model/po/Comments.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 61496, "method_name": "getDevice", "class_name": "Comments", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getDevice() {\n        return device;\n    }", "url": "https://raw.githubusercontent.com/rubywooJ/beyond/master/src/main/java/cn/tsxygfy/beyond/model/po/Comments.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 61497, "method_name": "setDevice", "class_name": "Comments", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setDevice(String device) {\n        this.device = device;\n    }", "url": "https://raw.githubusercontent.com/rubywooJ/beyond/master/src/main/java/cn/tsxygfy/beyond/model/po/Comments.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 61498, "method_name": "getAddress", "class_name": "Comments", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getAddress() {\n        return address;\n    }", "url": "https://raw.githubusercontent.com/rubywooJ/beyond/master/src/main/java/cn/tsxygfy/beyond/model/po/Comments.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 61499, "method_name": "setAddress", "class_name": "Comments", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setAddress(String address) {\n        this.address = address;\n    }", "url": "https://raw.githubusercontent.com/rubywooJ/beyond/master/src/main/java/cn/tsxygfy/beyond/model/po/Comments.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 61500, "method_name": "getContent", "class_name": "Comments", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getContent() {\n        return content;\n    }", "url": "https://raw.githubusercontent.com/rubywooJ/beyond/master/src/main/java/cn/tsxygfy/beyond/model/po/Comments.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 61501, "method_name": "setContent", "class_name": "Comments", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setContent(String content) {\n        this.content = content;\n    }", "url": "https://raw.githubusercontent.com/rubywooJ/beyond/master/src/main/java/cn/tsxygfy/beyond/model/po/Comments.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 61502, "method_name": "getFieldOrder", "class_name": "VmRegionRecurse32Request", "params": [], "throws": null, "modifiers": ["protected"], "return_type": "List<String>", "snippet": "    protected List<String> getFieldOrder() {\n        return Arrays.asList(\"NDR\", \"address\", \"nestingDepth\", \"infoCnt\");\n    }", "url": "https://raw.githubusercontent.com/wmm1996528/unidbg_douyin10/master/src/main/java/com/github/unidbg/ios/struct/kernel/VmRegionRecurse32Request.java", "stars": "16", "class_props": {"extends": "UnicornStructure", "implements": null, "modifiers": ["public"]}}, {"id": 61503, "method_name": "getAddress", "class_name": "VmRegionRecurse32Request", "params": [], "throws": null, "modifiers": ["public"], "return_type": "long", "snippet": "    public long getAddress() {\n        return address & 0xffffffffL;\n    }", "url": "https://raw.githubusercontent.com/wmm1996528/unidbg_douyin10/master/src/main/java/com/github/unidbg/ios/struct/kernel/VmRegionRecurse32Request.java", "stars": "16", "class_props": {"extends": "UnicornStructure", "implements": null, "modifiers": ["public"]}}, {"id": 61504, "method_name": "start", "class_name": "CameraActivity", "params": ["BaseActivity", "OnCameraListener"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void start(BaseActivity activity, OnCameraListener listener) {\n        File file = createCameraFile();\n        Intent intent = new Intent(activity, CameraActivity.class);\n        intent.putExtra(IntentKey.FILE, file);\n        activity.startActivityForResult(intent, (resultCode, data) -> {\n\n            if (listener == null) {\n                return;\n            }\n\n            if (resultCode == RESULT_OK) {\n                listener.onSelected(file);\n            } else {\n                listener.onCancel();\n            }\n        });\n    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/ui/activity/CameraActivity.java", "stars": "1", "class_props": {"extends": "MyActivity", "implements": null, "modifiers": ["final", "public"]}}, {"id": 61505, "method_name": "getLayoutId", "class_name": "CameraActivity", "params": [], "throws": null, "modifiers": ["protected"], "return_type": "int", "snippet": "    protected int getLayoutId() {\n        return 0;\n    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/ui/activity/CameraActivity.java", "stars": "1", "class_props": {"extends": "MyActivity", "implements": null, "modifiers": ["final", "public"]}}, {"id": 61506, "method_name": "initView", "class_name": "CameraActivity", "params": [], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void initView() {\n\n    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/ui/activity/CameraActivity.java", "stars": "1", "class_props": {"extends": "MyActivity", "implements": null, "modifiers": ["final", "public"]}}, {"id": 61507, "method_name": "initData", "class_name": "CameraActivity", "params": [], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void initData() {\n        // \u542f\u52a8\u7cfb\u7edf\u76f8\u673a\n        Intent intent = new Intent(MediaStore.ACTION_IMAGE_CAPTURE);\n        if (XXPermissions.isHasPermission(this, Permission.READ_EXTERNAL_STORAGE, Permission.WRITE_EXTERNAL_STORAGE, Permission.CAMERA)\n                && intent.resolveActivity(getPackageManager()) != null) {\n            mFile = getSerializable(IntentKey.FILE);\n            if (mFile != null && mFile.exists()) {\n\n                Uri imageUri;\n                if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.N) {\n                    // \u901a\u8fc7 FileProvider \u521b\u5efa\u4e00\u4e2a Content \u7c7b\u578b\u7684 Uri \u6587\u4ef6\n                    imageUri = FileProvider.getUriForFile(this, AppConfig.getPackageName() + \".provider\", mFile);\n                } else {\n                    imageUri = Uri.fromFile(mFile);\n                }\n                // \u5bf9\u76ee\u6807\u5e94\u7528\u4e34\u65f6\u6388\u6743\u8be5 Uri \u6240\u4ee3\u8868\u7684\u6587\u4ef6\n                intent.addFlags(Intent.FLAG_GRANT_READ_URI_PERMISSION);\n                // \u5c06\u62cd\u53d6\u7684\u7167\u7247\u4fdd\u5b58\u5230\u6307\u5b9a Uri\n                intent.putExtra(MediaStore.EXTRA_OUTPUT, imageUri);\n                startActivityForResult(intent, CAMERA_REQUEST_CODE);\n            } else {\n                toast(R.string.photo_picture_error);\n                finish();\n            }\n        } else {\n            toast(R.string.photo_launch_fail);\n            finish();\n        }\n    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/ui/activity/CameraActivity.java", "stars": "1", "class_props": {"extends": "MyActivity", "implements": null, "modifiers": ["final", "public"]}}, {"id": 61508, "method_name": "onActivityResult", "class_name": "CameraActivity", "params": ["int", "int", "Intent"], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void onActivityResult(int requestCode, int resultCode, @Nullable Intent data) {\n        super.onActivityResult(requestCode, resultCode, data);\n        if (requestCode == CAMERA_REQUEST_CODE) {\n            switch (resultCode) {\n                case RESULT_OK:\n                    // \u91cd\u65b0\u626b\u63cf\u591a\u5a92\u4f53\uff08\u5426\u5219\u53ef\u80fd\u626b\u63cf\u4e0d\u5230\uff09\n                    MediaScannerConnection.scanFile(getApplicationContext(), new String[]{mFile.getPath()}, null,null);\n                    break;\n                case RESULT_CANCELED:\n                    // \u5220\u9664\u8fd9\u4e2a\u6587\u4ef6\n                    mFile.delete();\n                    break;\n                default:\n                    break;\n            }\n            setResult(resultCode);\n            finish();\n        }\n    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/ui/activity/CameraActivity.java", "stars": "1", "class_props": {"extends": "MyActivity", "implements": null, "modifiers": ["final", "public"]}}, {"id": 61509, "method_name": "createCameraFile", "class_name": "CameraActivity", "params": [], "throws": null, "modifiers": ["static", "private"], "return_type": "File", "snippet": "    private static File createCameraFile() {\n        File folder = new File(Environment.getExternalStoragePublicDirectory(Environment.DIRECTORY_DCIM), \"Camera\");\n        if (!folder.exists() || !folder.isDirectory()) {\n            if (!folder.mkdirs()) {\n                folder = Environment.getExternalStorageDirectory();\n            }\n        }\n\n        try {\n            File file = new File(folder, \"IMG_\" + new SimpleDateFormat(\"yyyyMMdd_kkmmss\", Locale.getDefault()).format(new Date()) + \".jpg\");\n            file.createNewFile();\n            return file;\n        } catch (IOException e) {\n            e.printStackTrace();\n            return null;\n        }\n    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/ui/activity/CameraActivity.java", "stars": "1", "class_props": {"extends": "MyActivity", "implements": null, "modifiers": ["final", "public"]}}, {"id": 61510, "method_name": "fillTypes", "class_name": "CustomUserTaskJsonConverter", "params": ["Map<String,Class>", "Map<Class,Class>"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void fillTypes(Map<String, Class<? extends BaseBpmnJsonConverter>> convertersToBpmnMap,\n\n    Map<Class<? extends BaseElement>, Class<? extends BaseBpmnJsonConverter>> convertersToJsonMap) {\n        \n        fillJsonTypes(convertersToBpmnMap);\n        fillBpmnTypes(convertersToJsonMap);\n    }", "url": "https://raw.githubusercontent.com/griabcrh/vue-activiti-demo/master/vue-activiti-service-demo/src/main/java/com/activiti/converter/CustomUserTaskJsonConverter.java", "stars": "25", "class_props": {"extends": "BaseBpmnJsonConverter", "implements": null, "modifiers": ["public"]}}, {"id": 61511, "method_name": "fillJsonTypes", "class_name": "CustomUserTaskJsonConverter", "params": ["Map<String,Class>"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void fillJsonTypes(Map<String, Class<? extends BaseBpmnJsonConverter>> convertersToBpmnMap) {\n        convertersToBpmnMap.put(STENCIL_TASK_USER, CustomUserTaskJsonConverter.class);\n    }", "url": "https://raw.githubusercontent.com/griabcrh/vue-activiti-demo/master/vue-activiti-service-demo/src/main/java/com/activiti/converter/CustomUserTaskJsonConverter.java", "stars": "25", "class_props": {"extends": "BaseBpmnJsonConverter", "implements": null, "modifiers": ["public"]}}, {"id": 61512, "method_name": "fillBpmnTypes", "class_name": "CustomUserTaskJsonConverter", "params": ["Map<Class,Class>"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void fillBpmnTypes(Map<Class<? extends BaseElement>, Class<? extends BaseBpmnJsonConverter>> convertersToJsonMap) {\n        convertersToJsonMap.put(UserTask.class, CustomUserTaskJsonConverter.class);\n    }", "url": "https://raw.githubusercontent.com/griabcrh/vue-activiti-demo/master/vue-activiti-service-demo/src/main/java/com/activiti/converter/CustomUserTaskJsonConverter.java", "stars": "25", "class_props": {"extends": "BaseBpmnJsonConverter", "implements": null, "modifiers": ["public"]}}, {"id": 61513, "method_name": "convertToBpmnModel", "class_name": "CustomUserTaskJsonConverter", "params": ["JsonNode", "JsonNode", "ActivityProcessor", "BaseElement", "Map<String,JsonNode>", "BpmnModel"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void convertToBpmnModel(JsonNode elementNode, JsonNode modelNode, ActivityProcessor processor, BaseElement parentElement,\n                                   Map<String, JsonNode> shapeMap, BpmnModel bpmnModel) {\n        \n        this.processor = processor;\n        this.model = bpmnModel;\n        \n        BaseElement baseElement = convertJsonToElement(elementNode, modelNode, shapeMap);\n        baseElement.setId(BpmnJsonConverterUtil.getElementId(elementNode));\n        \n        if (baseElement instanceof FlowElement) {\n            FlowElement flowElement = (FlowElement) baseElement;\n            flowElement.setName(getPropertyValueAsString(PROPERTY_NAME, elementNode));\n            flowElement.setDocumentation(getPropertyValueAsString(PROPERTY_DOCUMENTATION, elementNode));\n            \n            BpmnJsonConverterUtil.convertJsonToListeners(elementNode, flowElement);\n            \n            if (baseElement instanceof Activity) {\n                Activity activity = (Activity) baseElement;\n                activity.setAsynchronous(getPropertyValueAsBoolean(PROPERTY_ASYNCHRONOUS, elementNode));\n                activity.setNotExclusive(!getPropertyValueAsBoolean(PROPERTY_EXCLUSIVE, elementNode));\n                // \u591a\u5b9e\u4f8b\u7c7b\u578b \u6ce8\u610f\u770b TODO\n                String multiInstanceType = getPropertyValueAsString(PROPERTY_MULTIINSTANCE_TYPE, elementNode);\n                // \u901a\u8fc7\u6743\u91cd\n                String multiInstanceCondition = getPropertyValueAsString(PROPERTY_MULTIINSTANCE_CONDITION, elementNode);\n                if (StringUtils.isNotEmpty(multiInstanceType) && !\"none\".equalsIgnoreCase(multiInstanceType)) {\n                    String name = getPropertyValueAsString(PROPERTY_NAME, elementNode);\n                    \n                    MultiInstanceLoopCharacteristics multiInstanceObject = new MultiInstanceLoopCharacteristics();\n                    if (\"sequential\".equalsIgnoreCase(multiInstanceType)) {\n                        multiInstanceObject.setSequential(true);\n                    } else {\n                        multiInstanceObject.setSequential(false);\n                    }\n                    \n                    if (StringUtils.isNotEmpty(multiInstanceCondition)) {\n                        try {\n                            Integer.valueOf(multiInstanceCondition);\n                        } catch (Exception ex) {\n                            LOG.error(name + \"\u914d\u7f6e\u6210\u4e86\u4f1a\u7b7e\uff0c\u4f46\u901a\u8fc7\u6743\u91cd\u4e0d\u662f\u4e00\u4e2a\u6574\u6570\");\n                        }\n                        multiInstanceObject.setCompletionCondition(\"${nextTaskEvaluator.isComplete(execution,\" + multiInstanceCondition + \")}\");\n                    } else {\n                        LOG.error(name + \"\u914d\u7f6e\u6210\u4e86\u4f1a\u7b7e\uff0c\u4f46\u6ca1\u6709\u914d\u7f6e\u901a\u8fc7\u6743\u91cd\");\n                    }\n                    // usertaskassignment \u8fd9\u5757\u62a5\u9519\n                    JsonNode assignmentNode = getProperty(PROPERTY_USERTASK_ASSIGNMENT, elementNode);\n                    if (assignmentNode != null) {\n                        JsonNode assignmentDefNode = assignmentNode.get(\"assignment\");\n                        List<String> candidateGroups = null;\n                        try {\n                            candidateGroups = getValueAsList(PROPERTY_USERTASK_CANDIDATE_GROUPS, assignmentDefNode);\n                        } catch (Exception e) {\n                            LOG.error(name + \"\u914d\u7f6e\u6210\u4e86\u4f1a\u7b7e\uff0c\u5fc5\u987b\u8981\u914d\u7f6e\u5c97\u4f4d\");\n                        }\n                        \n                        StringBuilder inputItemsStr = new StringBuilder(\"${nextTaskEvaluator.getCandiateUser(execution,\");\n                        boolean isFirst = true;\n                        for (String temp : candidateGroups) {\n                            if (isFirst) {\n                                isFirst = false;\n                            } else {\n                                inputItemsStr.append(\",\");\n                            }\n                            inputItemsStr.append(\"\\\"\").append(temp).append(\"\\\"\");\n                        }\n                        inputItemsStr.append(\")}\");\n                        // \u4e0d\u786e\u5b9a\u8fd9\u91cc\u662f\u4e0d\u662floopDataInputRef ? TODO\n                        multiInstanceObject.setInputDataItem(inputItemsStr.toString());\n                        multiInstanceObject.setElementVariable(\"assignee\");\n                        \n                        activity.setLoopCharacteristics(multiInstanceObject);\n                    }\n                }\n                \n            } else if (baseElement instanceof Gateway) {\n                // \u7f51\u5173\u6d41\u7a0b\u987a\u5e8f\u8bbe\u7f6e\n                JsonNode flowOrderNode = getProperty(PROPERTY_SEQUENCEFLOW_ORDER, elementNode);\n                if (flowOrderNode != null) {\n                    flowOrderNode = BpmnJsonConverterUtil.validateIfNodeIsTextual(flowOrderNode);\n                    JsonNode orderArray = flowOrderNode.get(\"sequenceFlowOrder\");\n                    if (orderArray != null && orderArray.size() > 0) {\n                        for (JsonNode orderNode : orderArray) {\n                            ExtensionElement orderElement = new ExtensionElement();\n                            orderElement.setName(\"EDITOR_FLOW_ORDER\");\n                            orderElement.setElementText(orderNode.asText());\n                            flowElement.addExtensionElement(orderElement);\n                        }\n                    }\n                }\n            }\n        }\n        \n        if (baseElement instanceof FlowElement) {\n            FlowElement flowElement = (FlowElement) baseElement;\n            if (flowElement instanceof SequenceFlow) {\n                ExtensionElement idExtensionElement = new ExtensionElement();\n                idExtensionElement.setName(\"EDITOR_RESOURCEID\");\n                idExtensionElement.setElementText(elementNode.get(EDITOR_SHAPE_ID).asText());\n                flowElement.addExtensionElement(idExtensionElement);\n            }\n            \n            if (parentElement instanceof Process) {\n                ((Process) parentElement).addFlowElement(flowElement);\n                \n            } else if (parentElement instanceof SubProcess) {\n                ((SubProcess) parentElement).addFlowElement(flowElement);\n                \n            } else if (parentElement instanceof Lane) {\n                Lane lane = (Lane) parentElement;\n                lane.getFlowReferences().add(flowElement.getId());\n                lane.getParentProcess().addFlowElement(flowElement);\n            }\n            \n        } else if (baseElement instanceof Artifact) {\n            Artifact artifact = (Artifact) baseElement;\n            if (parentElement instanceof Process) {\n                ((Process) parentElement).addArtifact(artifact);\n                \n            } else if (parentElement instanceof SubProcess) {\n                ((SubProcess) parentElement).addArtifact(artifact);\n                \n            } else if (parentElement instanceof Lane) {\n                Lane lane = (Lane) parentElement;\n                lane.getFlowReferences().add(artifact.getId());\n                lane.getParentProcess().addArtifact(artifact);\n            }\n        }\n        \n    }", "url": "https://raw.githubusercontent.com/griabcrh/vue-activiti-demo/master/vue-activiti-service-demo/src/main/java/com/activiti/converter/CustomUserTaskJsonConverter.java", "stars": "25", "class_props": {"extends": "BaseBpmnJsonConverter", "implements": null, "modifiers": ["public"]}}, {"id": 61514, "method_name": "convertElementToJson", "class_name": "CustomUserTaskJsonConverter", "params": ["ObjectNode", "BaseElement"], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void convertElementToJson(ObjectNode propertiesNode, BaseElement baseElement) {\n        UserTask userTask = (UserTask) baseElement;\n        String assignee = userTask.getAssignee();\n        String owner = userTask.getOwner();\n        \n        if (StringUtils.isNotEmpty(assignee) || StringUtils.isNotEmpty(owner) || CollectionUtils.isNotEmpty(userTask.getCandidateUsers()) ||\n                CollectionUtils.isNotEmpty(userTask.getCandidateGroups())) {\n            \n            ObjectNode assignmentNode = objectMapper.createObjectNode();\n            ObjectNode assignmentValuesNode = objectMapper.createObjectNode();\n            \n            if (StringUtils.isNotEmpty(assignee)) {\n                assignmentValuesNode.put(PROPERTY_USERTASK_ASSIGNEE, assignee);\n            }\n            \n            if (StringUtils.isNotEmpty(owner)) {\n                assignmentValuesNode.put(PROPERTY_USERTASK_OWNER, owner);\n            }\n            \n            if (CollectionUtils.isNotEmpty(userTask.getCandidateUsers())) {\n                ArrayNode candidateArrayNode = objectMapper.createArrayNode();\n                for (String candidateUser : userTask.getCandidateUsers()) {\n                    ObjectNode candidateNode = objectMapper.createObjectNode();\n                    candidateNode.put(\"value\", candidateUser);\n                    candidateArrayNode.add(candidateNode);\n                }\n                assignmentValuesNode.put(PROPERTY_USERTASK_CANDIDATE_USERS, candidateArrayNode);\n            }\n            \n            if (CollectionUtils.isNotEmpty(userTask.getCandidateGroups())) {\n                ArrayNode candidateArrayNode = objectMapper.createArrayNode();\n                for (String candidateGroup : userTask.getCandidateGroups()) {\n                    ObjectNode candidateNode = objectMapper.createObjectNode();\n                    candidateNode.put(\"value\", candidateGroup);\n                    candidateArrayNode.add(candidateNode);\n                }\n                assignmentValuesNode.put(PROPERTY_USERTASK_CANDIDATE_GROUPS, candidateArrayNode);\n            }\n            \n            assignmentNode.put(\"assignment\", assignmentValuesNode);\n            propertiesNode.put(PROPERTY_USERTASK_ASSIGNMENT, assignmentNode);\n        }\n        \n        if (userTask.getPriority() != null) { // getAttributes().get(\"weights\").get(0).getValue()\n            setPropertyValue(PROPERTY_USERTASK_PRIORITY, userTask.getPriority().toString(), propertiesNode);\n        }\n        \n        if (StringUtils.isNotEmpty(userTask.getFormKey())) {\n            setPropertyValue(PROPERTY_FORMKEY, userTask.getFormKey(), propertiesNode);\n        }\n        \n        setPropertyValue(PROPERTY_USERTASK_DUEDATE, userTask.getDueDate(), propertiesNode);\n        setPropertyValue(PROPERTY_USERTASK_CATEGORY, userTask.getCategory(), propertiesNode);\n        // \u6dfb\u52a0\u7528\u6237\u4efb\u52a1\u7684\u81ea\u5b9a\u4e49\u5c5e\u6027  start\n        if (userTask.getAttributes().get(\"multiinstance_type\") != null && !\"\".equals(userTask.getAttributes().get(\"multiinstance_type\").get(0).getValue())) {\n            setPropertyValue(PROPERTY_MULTIINSTANCE_TYPE, userTask.getAttributes().get(\"multiinstance_type\").get(0).getValue(), propertiesNode);\n        }\n        \n        if (userTask.getAttributes().get(\"multiinstance_cardinality\") != null && !\"\".equals(userTask.getAttributes().get(\"multiinstance_cardinality\").get(0).getValue())) {\n            setPropertyValue(PROPERTY_MULTIINSTANCE_CARDINALITY, userTask.getAttributes().get(\"multiinstance_cardinality\").get(0).getValue(), propertiesNode);\n        }\n        \n        if (userTask.getAttributes().get(\"multiinstance_collection\") != null && !\"\".equals(userTask.getAttributes().get(\"multiinstance_collection\").get(0).getValue())) {\n            setPropertyValue(PROPERTY_MULTIINSTANCE_COLLECTION, userTask.getAttributes().get(\"multiinstance_collection\").get(0).getValue(), propertiesNode);\n        }\n        if (userTask.getAttributes().get(\"multiinstance_variable\") != null && !\"\".equals(userTask.getAttributes().get(\"multiinstance_variable\").get(0).getValue())) {\n            setPropertyValue(PROPERTY_MULTIINSTANCE_VARIABLE, userTask.getAttributes().get(\"multiinstance_variable\").get(0).getValue(), propertiesNode);\n        }\n        if (userTask.getAttributes().get(\"multiinstance_condition\") != null && !\"\".equals(userTask.getAttributes().get(\"multiinstance_condition\").get(0).getValue())) {\n            setPropertyValue(PROPERTY_MULTIINSTANCE_CONDITION, userTask.getAttributes().get(\"multiinstance_condition\").get(0).getValue(), propertiesNode);\n        }\n        \n        \n        // \u6dfb\u52a0\u9ed8\u8ba4\u6d41\u7a0b\u5c5e\u6027\n        if (StringUtils.isNotEmpty(userTask.getDefaultFlow())) {\n            setPropertyValue(\"default\", userTask.getDefaultFlow(), propertiesNode);\n        }\n        // end\n        addFormProperties(userTask.getFormProperties(), propertiesNode);\n    }", "url": "https://raw.githubusercontent.com/griabcrh/vue-activiti-demo/master/vue-activiti-service-demo/src/main/java/com/activiti/converter/CustomUserTaskJsonConverter.java", "stars": "25", "class_props": {"extends": "BaseBpmnJsonConverter", "implements": null, "modifiers": ["public"]}}, {"id": 61515, "method_name": "convertJsonToElement", "class_name": "CustomUserTaskJsonConverter", "params": ["JsonNode", "JsonNode", "Map<String,JsonNode>"], "throws": null, "modifiers": ["protected"], "return_type": "FlowElement", "snippet": "    protected FlowElement convertJsonToElement(JsonNode elementNode, JsonNode modelNode, Map<String, JsonNode> shapeMap) {\n        UserTask task = new UserTask();\n        task.setPriority(getPropertyValueAsString(PROPERTY_USERTASK_PRIORITY, elementNode));\n        String formKey = getPropertyValueAsString(PROPERTY_FORMKEY, elementNode);\n        String name = getPropertyValueAsString(PROPERTY_NAME, elementNode);\n        if (StringUtils.isNotEmpty(formKey)) {\n            task.setFormKey(formKey);\n        } else {\n            LOG.error(name + \"\u6ca1\u6709\u914d\u7f6e\u8868\u5355\");\n        }\n        task.setDueDate(getPropertyValueAsString(PROPERTY_USERTASK_DUEDATE, elementNode));\n        task.setCategory(getPropertyValueAsString(PROPERTY_USERTASK_CATEGORY, elementNode));\n        \n        JsonNode assignmentNode = getProperty(PROPERTY_USERTASK_ASSIGNMENT, elementNode);\n        if (assignmentNode != null) {\n            String multiInstanceType = getPropertyValueAsString(PROPERTY_MULTIINSTANCE_TYPE, elementNode);\n            if (StringUtils.isNotEmpty(multiInstanceType) && !\"none\".equalsIgnoreCase(multiInstanceType)) {\n                task.setAssignee(\"${assignee}\");\n                task.setCandidateUsers(new ArrayList<String>());\n                task.setCandidateGroups(new ArrayList<String>());\n            } else {\n                JsonNode assignmentDefNode = assignmentNode.get(\"assignment\");\n                if (assignmentDefNode != null) {\n                    \n                    JsonNode assigneeNode = assignmentDefNode.get(PROPERTY_USERTASK_ASSIGNEE);\n                    if (assigneeNode != null && !assigneeNode.isNull()) {\n                        task.setAssignee(assigneeNode.asText());\n                    }\n                    \n                    JsonNode ownerNode = assignmentDefNode.get(PROPERTY_USERTASK_OWNER);\n                    if (ownerNode != null && !ownerNode.isNull()) {\n                        task.setOwner(ownerNode.asText());\n                    }\n                    \n                    task.setCandidateUsers(getValueAsList(PROPERTY_USERTASK_CANDIDATE_USERS, assignmentDefNode));\n                    task.setCandidateGroups(getValueAsList(PROPERTY_USERTASK_CANDIDATE_GROUPS, assignmentDefNode));\n                }\n            }\n            \n            \n        }\n        \n        // \u6dfb\u52a0\u591a\u5b9e\u4f8b\u5c5e\u6027\n        List<CustomProperty> list = new ArrayList<>();\n        if (StringUtils.isNotEmpty(getPropertyValueAsString(PROPERTY_MULTIINSTANCE_CONDITION, elementNode))) {\n            CustomProperty customProperty = new CustomProperty();\n            customProperty.setName(\"multiinstance_condition\");\n            customProperty.setSimpleValue(getPropertyValueAsString(PROPERTY_MULTIINSTANCE_CONDITION, elementNode));\n            list.add(customProperty);\n        }\n        \n        \n        if (StringUtils.isNotEmpty(getPropertyValueAsString(PROPERTY_MULTIINSTANCE_TYPE, elementNode))) {\n            CustomProperty customProperty = new CustomProperty();\n            customProperty.setName(\"multiinstance_type\");\n            customProperty.setSimpleValue(getPropertyValueAsString(PROPERTY_MULTIINSTANCE_TYPE, elementNode));\n            list.add(customProperty);\n        }\n        \n        task.setCustomProperties(list);\n        \n        // \u6dfb\u52a0\u9ed8\u8ba4\u6d41\u7a0b\u5c5e\u6027\n        if (StringUtils.isNotEmpty(getPropertyValueAsString(\"default\", elementNode))) {\n            task.setDefaultFlow(getPropertyValueAsString(\"default\", elementNode));\n        }\n        \n        convertJsonToFormProperties(elementNode, task);\n        return task;\n    }", "url": "https://raw.githubusercontent.com/griabcrh/vue-activiti-demo/master/vue-activiti-service-demo/src/main/java/com/activiti/converter/CustomUserTaskJsonConverter.java", "stars": "25", "class_props": {"extends": "BaseBpmnJsonConverter", "implements": null, "modifiers": ["public"]}}, {"id": 61516, "method_name": "getStencilId", "class_name": "CustomUserTaskJsonConverter", "params": ["BaseElement"], "throws": null, "modifiers": ["protected"], "return_type": "String", "snippet": "    protected String getStencilId(BaseElement baseElement) {\n        return STENCIL_TASK_USER;\n    }", "url": "https://raw.githubusercontent.com/griabcrh/vue-activiti-demo/master/vue-activiti-service-demo/src/main/java/com/activiti/converter/CustomUserTaskJsonConverter.java", "stars": "25", "class_props": {"extends": "BaseBpmnJsonConverter", "implements": null, "modifiers": ["public"]}}, {"id": 61517, "method_name": "exists", "class_name": "VideoManagerRedisStoragerImpl", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "\tpublic boolean exists(String deviceId) {\n\t\treturn redis.hasKey(VideoManagerConstants.CACHEKEY_PREFIX+deviceId);\n\t}", "url": "https://raw.githubusercontent.com/swwheihei/wvp/master/src/main/java/com/genersoft/iot/vmp/storager/redis/VideoManagerRedisStoragerImpl.java", "stars": "29", "class_props": {"extends": null, "implements": ["IVideoManagerStorager"], "modifiers": ["public"]}}, {"id": 61518, "method_name": "create", "class_name": "VideoManagerRedisStoragerImpl", "params": ["Device"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "\tpublic boolean create(Device device) {\n\t\treturn redis.set(VideoManagerConstants.CACHEKEY_PREFIX+device.getDeviceId(), device);\n\t}", "url": "https://raw.githubusercontent.com/swwheihei/wvp/master/src/main/java/com/genersoft/iot/vmp/storager/redis/VideoManagerRedisStoragerImpl.java", "stars": "29", "class_props": {"extends": null, "implements": ["IVideoManagerStorager"], "modifiers": ["public"]}}, {"id": 61519, "method_name": "update", "class_name": "VideoManagerRedisStoragerImpl", "params": ["Device"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "\tpublic boolean update(Device device) {\n\t\treturn redis.set(VideoManagerConstants.CACHEKEY_PREFIX+device.getDeviceId(), device);\n\t}", "url": "https://raw.githubusercontent.com/swwheihei/wvp/master/src/main/java/com/genersoft/iot/vmp/storager/redis/VideoManagerRedisStoragerImpl.java", "stars": "29", "class_props": {"extends": null, "implements": ["IVideoManagerStorager"], "modifiers": ["public"]}}, {"id": 61520, "method_name": "queryVideoDevice", "class_name": "VideoManagerRedisStoragerImpl", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "Device", "snippet": "\tpublic Device queryVideoDevice(String deviceId) {\n\t\treturn (Device)redis.get(VideoManagerConstants.CACHEKEY_PREFIX+deviceId);\n\t}", "url": "https://raw.githubusercontent.com/swwheihei/wvp/master/src/main/java/com/genersoft/iot/vmp/storager/redis/VideoManagerRedisStoragerImpl.java", "stars": "29", "class_props": {"extends": null, "implements": ["IVideoManagerStorager"], "modifiers": ["public"]}}, {"id": 61521, "method_name": "queryVideoDeviceList", "class_name": "VideoManagerRedisStoragerImpl", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "List<Device>", "snippet": "\tpublic List<Device> queryVideoDeviceList(String[] deviceIds) {\n\t\tList<Device> devices = new ArrayList<>();\n\t\tif (deviceIds == null || deviceIds.length == 0) {\n\t\t\tList<Object> deviceIdList = redis.keys(VideoManagerConstants.CACHEKEY_PREFIX+\"*\");\n\t\t\tfor (int i = 0; i < deviceIdList.size(); i++) {\n\t\t\t\tdevices.add((Device)redis.get((String)deviceIdList.get(i)));\n\t\t\t}\n\t\t} else {\n\t\t\tfor (int i = 0; i < deviceIds.length; i++) {\n\t\t\t\tdevices.add((Device)redis.get(VideoManagerConstants.CACHEKEY_PREFIX+deviceIds[i]));\n\t\t\t}\n\t\t}\n\t\treturn devices;\n\t}", "url": "https://raw.githubusercontent.com/swwheihei/wvp/master/src/main/java/com/genersoft/iot/vmp/storager/redis/VideoManagerRedisStoragerImpl.java", "stars": "29", "class_props": {"extends": null, "implements": ["IVideoManagerStorager"], "modifiers": ["public"]}}, {"id": 61522, "method_name": "delete", "class_name": "VideoManagerRedisStoragerImpl", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "\tpublic boolean delete(String deviceId) {\n\t\tredis.del(VideoManagerConstants.CACHEKEY_PREFIX+deviceId);\n\t\treturn true;  \n\t}", "url": "https://raw.githubusercontent.com/swwheihei/wvp/master/src/main/java/com/genersoft/iot/vmp/storager/redis/VideoManagerRedisStoragerImpl.java", "stars": "29", "class_props": {"extends": null, "implements": ["IVideoManagerStorager"], "modifiers": ["public"]}}, {"id": 61523, "method_name": "online", "class_name": "VideoManagerRedisStoragerImpl", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "\tpublic boolean online(String deviceId) {\n\t\tDevice device = (Device)redis.get(VideoManagerConstants.CACHEKEY_PREFIX+deviceId);\n\t\tdevice.setOnline(1);\n\t\treturn redis.set(VideoManagerConstants.CACHEKEY_PREFIX+device.getDeviceId(), device);\n\t}", "url": "https://raw.githubusercontent.com/swwheihei/wvp/master/src/main/java/com/genersoft/iot/vmp/storager/redis/VideoManagerRedisStoragerImpl.java", "stars": "29", "class_props": {"extends": null, "implements": ["IVideoManagerStorager"], "modifiers": ["public"]}}, {"id": 61524, "method_name": "outline", "class_name": "VideoManagerRedisStoragerImpl", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "\tpublic boolean outline(String deviceId) {\n\t\tDevice device = (Device)redis.get(VideoManagerConstants.CACHEKEY_PREFIX+deviceId);\n\t\tdevice.setOnline(0);\n\t\treturn redis.set(VideoManagerConstants.CACHEKEY_PREFIX+device.getDeviceId(), device);\n\t}", "url": "https://raw.githubusercontent.com/swwheihei/wvp/master/src/main/java/com/genersoft/iot/vmp/storager/redis/VideoManagerRedisStoragerImpl.java", "stars": "29", "class_props": {"extends": null, "implements": ["IVideoManagerStorager"], "modifiers": ["public"]}}, {"id": 61525, "method_name": "dispose", "class_name": "SecurityAuthenticatedComposer", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void dispose() {\n\n    }", "url": "https://raw.githubusercontent.com/billsonnn/nitro-java/master/application/src/main/java/com/nitro/application/communication/messages/outgoing/security/SecurityAuthenticatedComposer.java", "stars": "2", "class_props": {"extends": null, "implements": ["IMessageComposer"], "modifiers": ["public"]}}, {"id": 61526, "method_name": "getMessageArray", "class_name": "SecurityAuthenticatedComposer", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Object", "snippet": "    public Object[] getMessageArray() {\n        return this.data.toArray();\n    }", "url": "https://raw.githubusercontent.com/billsonnn/nitro-java/master/application/src/main/java/com/nitro/application/communication/messages/outgoing/security/SecurityAuthenticatedComposer.java", "stars": "2", "class_props": {"extends": null, "implements": ["IMessageComposer"], "modifiers": ["public"]}}, {"id": 61527, "method_name": "main", "class_name": "Demo02Calendar", "params": ["String"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void main(String[] args) {\n        demo04();\n    }", "url": "https://raw.githubusercontent.com/liuminchao123/JavaWeb_Learning/master/02.%20java/Java/%E9%BB%91%E9%A9%AC%E6%95%99%E7%A8%8B/12.%E3%80%90Object%E7%B1%BB%E3%80%81%E5%B8%B8%E7%94%A8API%E3%80%91-%E7%AC%94%E8%AE%B0/code/01_API/src/com/itheima/demo04/Calendar/Demo02Calendar.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 61528, "method_name": "demo04", "class_name": "Demo02Calendar", "params": [], "throws": null, "modifiers": ["static", "private"], "return_type": "void", "snippet": "    private static void demo04() {\n        //\u4f7f\u7528getInstance\u65b9\u6cd5\u83b7\u53d6Calendar\u5bf9\u8c61\n        Calendar c = Calendar.getInstance();\n\n        Date date = c.getTime();\n        System.out.println(date);\n    }", "url": "https://raw.githubusercontent.com/liuminchao123/JavaWeb_Learning/master/02.%20java/Java/%E9%BB%91%E9%A9%AC%E6%95%99%E7%A8%8B/12.%E3%80%90Object%E7%B1%BB%E3%80%81%E5%B8%B8%E7%94%A8API%E3%80%91-%E7%AC%94%E8%AE%B0/code/01_API/src/com/itheima/demo04/Calendar/Demo02Calendar.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 61529, "method_name": "demo03", "class_name": "Demo02Calendar", "params": [], "throws": null, "modifiers": ["static", "private"], "return_type": "void", "snippet": "    private static void demo03() {\n        //\u4f7f\u7528getInstance\u65b9\u6cd5\u83b7\u53d6Calendar\u5bf9\u8c61\n        Calendar c = Calendar.getInstance();\n\n        //\u628a\u5e74\u589e\u52a02\u5e74\n        c.add(Calendar.YEAR,2);\n        //\u628a\u6708\u4efd\u51cf\u5c113\u4e2a\u6708\n        c.add(Calendar.MONTH,-3);\n\n\n        int year = c.get(Calendar.YEAR);\n        System.out.println(year);\n\n        int month = c.get(Calendar.MONTH);\n        System.out.println(month);//\u897f\u65b9\u7684\u6708\u4efd0-11 \u4e1c\u65b9:1-12\n\n        //int date = c.get(Calendar.DAY_OF_MONTH);\n        int date = c.get(Calendar.DATE);\n        System.out.println(date);\n    }", "url": "https://raw.githubusercontent.com/liuminchao123/JavaWeb_Learning/master/02.%20java/Java/%E9%BB%91%E9%A9%AC%E6%95%99%E7%A8%8B/12.%E3%80%90Object%E7%B1%BB%E3%80%81%E5%B8%B8%E7%94%A8API%E3%80%91-%E7%AC%94%E8%AE%B0/code/01_API/src/com/itheima/demo04/Calendar/Demo02Calendar.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 61530, "method_name": "demo02", "class_name": "Demo02Calendar", "params": [], "throws": null, "modifiers": ["static", "private"], "return_type": "void", "snippet": "    private static void demo02() {\n        //\u4f7f\u7528getInstance\u65b9\u6cd5\u83b7\u53d6Calendar\u5bf9\u8c61\n        Calendar c = Calendar.getInstance();\n\n        //\u8bbe\u7f6e\u5e74\u4e3a9999\n        c.set(Calendar.YEAR,9999);\n        //\u8bbe\u7f6e\u6708\u4e3a9\u6708\n        c.set(Calendar.MONTH,9);\n        //\u8bbe\u7f6e\u65e59\u65e5\n        c.set(Calendar.DATE,9);\n\n        //\u540c\u65f6\u8bbe\u7f6e\u5e74\u6708\u65e5,\u53ef\u4ee5\u4f7f\u7528set\u7684\u91cd\u8f7d\u65b9\u6cd5\n        c.set(8888,8,8);\n\n        int year = c.get(Calendar.YEAR);\n        System.out.println(year);\n\n        int month = c.get(Calendar.MONTH);\n        System.out.println(month);//\u897f\u65b9\u7684\u6708\u4efd0-11 \u4e1c\u65b9:1-12\n\n        int date = c.get(Calendar.DATE);\n        System.out.println(date);\n    }", "url": "https://raw.githubusercontent.com/liuminchao123/JavaWeb_Learning/master/02.%20java/Java/%E9%BB%91%E9%A9%AC%E6%95%99%E7%A8%8B/12.%E3%80%90Object%E7%B1%BB%E3%80%81%E5%B8%B8%E7%94%A8API%E3%80%91-%E7%AC%94%E8%AE%B0/code/01_API/src/com/itheima/demo04/Calendar/Demo02Calendar.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 61531, "method_name": "demo01", "class_name": "Demo02Calendar", "params": [], "throws": null, "modifiers": ["static", "private"], "return_type": "void", "snippet": "    private static void demo01() {\n        //\u4f7f\u7528getInstance\u65b9\u6cd5\u83b7\u53d6Calendar\u5bf9\u8c61\n        Calendar c = Calendar.getInstance();\n        int year = c.get(Calendar.YEAR);\n        System.out.println(year);\n\n        int month = c.get(Calendar.MONTH);\n        System.out.println(month);//\u897f\u65b9\u7684\u6708\u4efd0-11 \u4e1c\u65b9:1-12\n\n        //int date = c.get(Calendar.DAY_OF_MONTH);\n        int date = c.get(Calendar.DATE);\n        System.out.println(date);\n    }", "url": "https://raw.githubusercontent.com/liuminchao123/JavaWeb_Learning/master/02.%20java/Java/%E9%BB%91%E9%A9%AC%E6%95%99%E7%A8%8B/12.%E3%80%90Object%E7%B1%BB%E3%80%81%E5%B8%B8%E7%94%A8API%E3%80%91-%E7%AC%94%E8%AE%B0/code/01_API/src/com/itheima/demo04/Calendar/Demo02Calendar.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 61532, "method_name": "trackSession", "class_name": "SessionLogAppender", "params": ["HttpSession", "boolean"], "throws": null, "modifiers": ["final", "public", "static"], "return_type": "void", "snippet": "\tpublic static final void trackSession(HttpSession session, boolean create) {\n\t\tTrackedSession tracked = untrackSession(session);\n\t\tif (tracked == null && create)\n\t\t\ttracked = new TrackedSession(session);\n\t\tif (tracked != null)\n\t\t\ttrackedSessions.put(Thread.currentThread(), tracked);\n\t}", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/util/SessionLogAppender.java", "stars": "12", "class_props": {"extends": "WriterAppender", "implements": null, "modifiers": ["public"]}}, {"id": 61533, "method_name": "untrackSession", "class_name": "SessionLogAppender", "params": ["HttpSession"], "throws": null, "modifiers": ["final", "public", "static"], "return_type": "TrackedSession", "snippet": "\tpublic static final TrackedSession untrackSession(HttpSession session) {\n\t\tCollection<TrackedSession> valuesIterator = trackedSessions.values();\n\t\tfor (TrackedSession tracked : valuesIterator) {\n\t\t\tif (tracked.session == session) {\n\t\t\t\tvaluesIterator.remove(tracked);\n\t\t\t\treturn tracked;\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t}", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/util/SessionLogAppender.java", "stars": "12", "class_props": {"extends": "WriterAppender", "implements": null, "modifiers": ["public"]}}, {"id": 61534, "method_name": "isSessionTracked", "class_name": "SessionLogAppender", "params": ["HttpSession"], "throws": null, "modifiers": ["public", "static"], "return_type": "boolean", "snippet": "\tpublic static boolean isSessionTracked(HttpSession session) {\n\t\treturn getTrackedSession(session) != null;\n\t}", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/util/SessionLogAppender.java", "stars": "12", "class_props": {"extends": "WriterAppender", "implements": null, "modifiers": ["public"]}}, {"id": 61535, "method_name": "getTrackedSession", "class_name": "SessionLogAppender", "params": ["HttpSession"], "throws": null, "modifiers": ["static", "private"], "return_type": "TrackedSession", "snippet": "\tprivate static TrackedSession getTrackedSession(HttpSession session) {\n\t\treturn trackedSessions.values().stream()\n\t\t\t\t.filter(ts -> ts.session == session)\n\t\t\t\t.findAny().orElse(null);\n\t}", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/util/SessionLogAppender.java", "stars": "12", "class_props": {"extends": "WriterAppender", "implements": null, "modifiers": ["public"]}}, {"id": 61536, "method_name": "getSessionLog", "class_name": "SessionLogAppender", "params": ["HttpSession"], "throws": null, "modifiers": ["final", "public", "static"], "return_type": "String", "snippet": "\tpublic static final String getSessionLog(HttpSession session) {\n\t\tStringBuilder result = new StringBuilder(MAX_LOG_LINES * 200);\n\t\t\t\t\n\t\tTrackedSession tracked = trackedSessions.values().stream()\n\t\t\t\t.filter(ts -> ts.session == session)\n\t\t\t\t.findAny().orElse(null);\n\t\tif (tracked != null) {\n\t\t\tfor (Object line : tracked.buffer)\n\t\t\t\tresult.append((char[]) line);\n\t\t}\n\t\t\n\t\treturn result.toString();\n\t}", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/util/SessionLogAppender.java", "stars": "12", "class_props": {"extends": "WriterAppender", "implements": null, "modifiers": ["public"]}}, {"id": 61537, "method_name": "write", "class_name": "SessionBufferWriter", "params": ["char", "int", "int"], "throws": ["IOException"], "modifiers": ["public"], "return_type": "void", "snippet": "\t\tpublic void write(char[] cbuf, int off, int len) throws IOException {\n\t\t\tTrackedSession tracked = trackedSessions.get(Thread.currentThread());\n\t\t\tif (tracked != null) {\n\t\t\t\ttracked.buffer.add(Arrays.copyOfRange(cbuf, off, off + len));\n\t\t\t}\n\t\t}", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/util/SessionLogAppender.java", "stars": "12", "class_props": {"extends": "Writer", "implements": null, "modifiers": ["private"]}}, {"id": 61538, "method_name": "flush", "class_name": "SessionBufferWriter", "params": [], "throws": ["IOException"], "modifiers": ["public"], "return_type": "void", "snippet": "\t\tpublic void flush() throws IOException {}", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/util/SessionLogAppender.java", "stars": "12", "class_props": {"extends": "Writer", "implements": null, "modifiers": ["private"]}}, {"id": 61539, "method_name": "close", "class_name": "SessionBufferWriter", "params": [], "throws": ["IOException"], "modifiers": ["public"], "return_type": "void", "snippet": "\t\tpublic void close() throws IOException {}", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/util/SessionLogAppender.java", "stars": "12", "class_props": {"extends": "Writer", "implements": null, "modifiers": ["private"]}}, {"id": 61540, "method_name": "setNonNullParameter", "class_name": "ClobTypeHandler", "params": ["PreparedStatement", "int", "String", "JdbcType"], "throws": ["SQLException"], "modifiers": ["public"], "return_type": "void", "snippet": "  public void setNonNullParameter(PreparedStatement ps, int i, String parameter, JdbcType jdbcType)\n      throws SQLException {\n    StringReader reader = new StringReader(parameter);\n    ps.setCharacterStream(i, reader, parameter.length());\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/type/ClobTypeHandler.java", "stars": "15", "class_props": {"extends": "BaseTypeHandler", "implements": null, "modifiers": ["public"]}}, {"id": 61541, "method_name": "getNullableResult", "class_name": "ClobTypeHandler", "params": ["ResultSet", "String"], "throws": ["SQLException"], "modifiers": ["public"], "return_type": "String", "snippet": "  public String getNullableResult(ResultSet rs, String columnName)\n      throws SQLException {\n    Clob clob = rs.getClob(columnName);\n    return toString(clob);\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/type/ClobTypeHandler.java", "stars": "15", "class_props": {"extends": "BaseTypeHandler", "implements": null, "modifiers": ["public"]}}, {"id": 61542, "method_name": "getNullableResult", "class_name": "ClobTypeHandler", "params": ["ResultSet", "int"], "throws": ["SQLException"], "modifiers": ["public"], "return_type": "String", "snippet": "  public String getNullableResult(ResultSet rs, int columnIndex)\n      throws SQLException {\n    Clob clob = rs.getClob(columnIndex);\n    return toString(clob);\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/type/ClobTypeHandler.java", "stars": "15", "class_props": {"extends": "BaseTypeHandler", "implements": null, "modifiers": ["public"]}}, {"id": 61543, "method_name": "getNullableResult", "class_name": "ClobTypeHandler", "params": ["CallableStatement", "int"], "throws": ["SQLException"], "modifiers": ["public"], "return_type": "String", "snippet": "  public String getNullableResult(CallableStatement cs, int columnIndex)\n      throws SQLException {\n    Clob clob = cs.getClob(columnIndex);\n    return toString(clob);\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/type/ClobTypeHandler.java", "stars": "15", "class_props": {"extends": "BaseTypeHandler", "implements": null, "modifiers": ["public"]}}, {"id": 61544, "method_name": "toString", "class_name": "ClobTypeHandler", "params": ["Clob"], "throws": ["SQLException"], "modifiers": ["private"], "return_type": "String", "snippet": "  private String toString(Clob clob) throws SQLException {\n    return clob == null ? null : clob.getSubString(1, (int) clob.length());\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/type/ClobTypeHandler.java", "stars": "15", "class_props": {"extends": "BaseTypeHandler", "implements": null, "modifiers": ["public"]}}, {"id": 61545, "method_name": "onPacket", "class_name": "ChatSuffix", "params": ["PacketEvent"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onPacket(PacketEvent event) {\n        if (event.getType().equals(PacketEvent.Type.OUTGOING) && event.getPacket() instanceof CPacketChatMessage) {\n            CPacketChatMessage packet = (CPacketChatMessage) event.getPacket();\n            if (packet.getMessage().startsWith(\"/\") || packet.getMessage().startsWith(Commands.prefix))\n                return;\n            packet.message = packet.getMessage() + \" \" + Mercury.INSTANCE.getSmallTextManager().convert(this.suffix);\n        }\n    }", "url": "https://raw.githubusercontent.com/Crystallinqq/Mercury-Client/master/src/main/java/fail/mercury/client/client/modules/misc/ChatSuffix.java", "stars": "12", "class_props": {"extends": "Module", "implements": null, "modifiers": ["public"]}}, {"id": 61546, "method_name": "onStart", "class_name": "DiscordService", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onStart() {\n        super.onStart();\n        client.getEventDispatcher().on(MessageCreateEvent.class)\n                // subscribe is like block, in that it will *request* for action\n                // to be done, but instead of blocking the thread, waiting for it\n                // to finish, it will just execute the results asynchronously.\n                .subscribe(event -> {\n                    final Message message = event.getMessage();\n                    notifyMessageReceived(message.getContent().orElse(null));\n\n                    channel = message.getChannel().block();\n                    if (message.getContent().map(s -> \"ping\".equals(s.toLowerCase(Locale.getDefault()))).orElse(false)) {\n                        channel.createMessage(\"Pong!\").block();\n                    }\n                    if (message.getContent().map(s -> \"!clean\".equals(s.toLowerCase(Locale.getDefault()))).orElse(false)) {\n                        removeChannelMessages(channel);\n                    }\n                });\n        new Thread(() -> client.login().block()).start();\n    }", "url": "https://raw.githubusercontent.com/javmarina/Nintendo-Switch-Remote-Control/master/gui/client/src/main/java/com/javmarina/client/services/bot/DiscordService.java", "stars": "17", "class_props": {"extends": "BotService", "implements": null, "modifiers": ["public"]}}, {"id": 61547, "method_name": "onFinish", "class_name": "DiscordService", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onFinish() {\n        super.onFinish();\n        removeChannelMessages(channel);\n        client.logout().block();\n    }", "url": "https://raw.githubusercontent.com/javmarina/Nintendo-Switch-Remote-Control/master/gui/client/src/main/java/com/javmarina/client/services/bot/DiscordService.java", "stars": "17", "class_props": {"extends": "BotService", "implements": null, "modifiers": ["public"]}}, {"id": 61548, "method_name": "removeChannelMessages", "class_name": "DiscordService", "params": ["MessageChannel"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void removeChannelMessages(@Nullable final MessageChannel messageChannel) {\n        if (messageChannel == null) {\n            return;\n        }\n        final GuildMessageChannel guildMessageChannel\n                = client.getChannelById(messageChannel.getId()).ofType(GuildMessageChannel.class).block();\n        if (guildMessageChannel != null) {\n            guildMessageChannel.getLastMessageId().ifPresent(lastMessageId -> guildMessageChannel.bulkDelete(\n                    guildMessageChannel.getMessagesBefore(lastMessageId).map(Message::getId)\n            ).subscribe(System.out::println));\n        }\n    }", "url": "https://raw.githubusercontent.com/javmarina/Nintendo-Switch-Remote-Control/master/gui/client/src/main/java/com/javmarina/client/services/bot/DiscordService.java", "stars": "17", "class_props": {"extends": "BotService", "implements": null, "modifiers": ["public"]}}, {"id": 61549, "method_name": "toString", "class_name": "DiscordService", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String toString() {\n        return \"Discord bot\";\n    }", "url": "https://raw.githubusercontent.com/javmarina/Nintendo-Switch-Remote-Control/master/gui/client/src/main/java/com/javmarina/client/services/bot/DiscordService.java", "stars": "17", "class_props": {"extends": "BotService", "implements": null, "modifiers": ["public"]}}, {"id": 61550, "method_name": "getPackTypeDesc", "class_name": "AbstractProtocolBody", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getPackTypeDesc() {\n        PackageType annotation = AnnotationUtil.getAnnotation(this.getClass(), PackageType.class);\n        if (annotation != null) {\n            return annotation.desc();\n        }\n        return \"\";\n    }", "url": "https://raw.githubusercontent.com/taoroot/taoiot/master/src/main/java/com/github/taoroot/taoiot/netty/tcp/core/AbstractProtocolBody.java", "stars": "6", "class_props": {"extends": null, "implements": ["ProtocolBody"], "modifiers": ["public", "abstract"]}}, {"id": 61551, "method_name": "getPackType", "class_name": "AbstractProtocolBody", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getPackType() {\n        PackageType annotation = AnnotationUtil.getAnnotation(this.getClass(), PackageType.class);\n        if (annotation != null) {\n            return annotation.value();\n        }\n        return -1;\n    }", "url": "https://raw.githubusercontent.com/taoroot/taoiot/master/src/main/java/com/github/taoroot/taoiot/netty/tcp/core/AbstractProtocolBody.java", "stars": "6", "class_props": {"extends": null, "implements": ["ProtocolBody"], "modifiers": ["public", "abstract"]}}, {"id": 61552, "method_name": "getPackTypeHexStr", "class_name": "AbstractProtocolBody", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getPackTypeHexStr() {\n        return String.format(\"0x%08x\", getPackType());\n    }", "url": "https://raw.githubusercontent.com/taoroot/taoiot/master/src/main/java/com/github/taoroot/taoiot/netty/tcp/core/AbstractProtocolBody.java", "stars": "6", "class_props": {"extends": null, "implements": ["ProtocolBody"], "modifiers": ["public", "abstract"]}}, {"id": 61553, "method_name": "getHexStr", "class_name": "AbstractProtocolBody", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getHexStr() {\n        return NettyUtil.bytesToStr(data);\n    }", "url": "https://raw.githubusercontent.com/taoroot/taoiot/master/src/main/java/com/github/taoroot/taoiot/netty/tcp/core/AbstractProtocolBody.java", "stars": "6", "class_props": {"extends": null, "implements": ["ProtocolBody"], "modifiers": ["public", "abstract"]}}, {"id": 61554, "method_name": "main", "class_name": "Search", "params": ["String"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void main(String[] args) {\n        File file = new File(\"/Users/chengcheng/Desktop/test/abc\");\n        getAllFile(file);\n    }", "url": "https://raw.githubusercontent.com/chengcheng1021/javaStudy/master/src/java2/File/Search.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 61555, "method_name": "getAllFile", "class_name": "Search", "params": ["File"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void getAllFile(File dir){\n        //System.out.println(dir);//\u6253\u5370\u88ab\u904d\u5386\u7684\u76ee\u5f55\u7ed3\u6784\n\n        File[] files = dir.listFiles();\n        for (File f : files){\n            //\u5224\u65ad\u662f\u5426\u6587\u4ef6\u5939\n            if(f.isDirectory()){\n                //\u662f\u4e00\u4e2a\u6587\u4ef6\u5939\uff0c\u8c03\u7528\u81ea\u5df1\n                getAllFile(f);\n            }else{\n                //f\u662f\u4e00\u4e2a\u6587\u4ef6\uff0c\u76f4\u63a5\u6253\u5370\n                /**\n                 * \u53ea\u8981java\u7ed3\u5c3e\u7684\u6587\u4ef6\n                 * 1\u3001\u628aFile\u5bf9\u8c61f\uff0c\u8f6c\u6362\u5b57\u7b26\u4e32\u5bf9\u8c61\n                 */\n                //String name = f.getName();//abc.java\n                //String path = f.getPath();//abc/abc.java\n                String s = f.toString();//abc/abc.java\n\n                s = s.toLowerCase();\n\n                //2\u3001\u8c03\u7528String\u7c7b\u91cd\u7684\u65b9\u6cd5\uff0cendsWith\u5224\u65ad\u5b57\u7b26\u4e32\u662f\u5426\u4ee5.java\u7ed3\u5c3e\n                boolean b = s.endsWith(\".java\");\n\n                //3\u3001\u5982\u679c\u662f\uff0c\u5219\u8f93\u51fa\n                if(b){\n                    System.out.println(f);\n                }\n\n                //\u7b49\u540c\u4e8e\u4e0a\u9762\u90a3\u6bb5\n                if(f.getName().toLowerCase().endsWith(\".java\")){\n                    System.out.println(f);\n                }\n            }\n        }\n    }", "url": "https://raw.githubusercontent.com/chengcheng1021/javaStudy/master/src/java2/File/Search.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 61556, "method_name": "initElements", "class_name": "RoughRedSanstoneSlabBlock", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void initElements() {\n\t\telements.blocks.add(() -> new CustomBlock());\n\t\telements.items\n\t\t\t\t.add(() -> new BlockItem(block, new Item.Properties().group(ItemGroup.BUILDING_BLOCKS)).setRegistryName(block.getRegistryName()));\n\t}", "url": "https://raw.githubusercontent.com/KarogathModdingStudios/Enhanced-Vanilla-1.15/master/src/main/java/com/karogath/enhancedvanilla/block/RoughRedSanstoneSlabBlock.java", "stars": "2", "class_props": {"extends": "EnhancedVanillaElements", "implements": null, "modifiers": ["public"]}}, {"id": 61557, "method_name": "clientLoad", "class_name": "RoughRedSanstoneSlabBlock", "params": ["FMLClientSetupEvent"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void clientLoad(FMLClientSetupEvent event) {\n\t\tRenderTypeLookup.setRenderLayer(block, RenderType.getCutout());\n\t}", "url": "https://raw.githubusercontent.com/KarogathModdingStudios/Enhanced-Vanilla-1.15/master/src/main/java/com/karogath/enhancedvanilla/block/RoughRedSanstoneSlabBlock.java", "stars": "2", "class_props": {"extends": "EnhancedVanillaElements", "implements": null, "modifiers": ["public"]}}, {"id": 61558, "method_name": "init", "class_name": "RoughRedSanstoneSlabBlock", "params": ["FMLCommonSetupEvent"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void init(FMLCommonSetupEvent event) {\n\t\tfor (Biome biome : ForgeRegistries.BIOMES.getValues()) {\n\t\t\tboolean biomeCriteria = false;\n\t\t\tif (ForgeRegistries.BIOMES.getKey(biome).equals(new ResourceLocation(\"badlands\")))\n\t\t\t\tbiomeCriteria = true;\n\t\t\tif (ForgeRegistries.BIOMES.getKey(biome).equals(new ResourceLocation(\"wooded_badlands_plateau\")))\n\t\t\t\tbiomeCriteria = true;\n\t\t\tif (ForgeRegistries.BIOMES.getKey(biome).equals(new ResourceLocation(\"badlands_plateau\")))\n\t\t\t\tbiomeCriteria = true;\n\t\t\tif (ForgeRegistries.BIOMES.getKey(biome).equals(new ResourceLocation(\"eroded_badlands\")))\n\t\t\t\tbiomeCriteria = true;\n\t\t\tif (ForgeRegistries.BIOMES.getKey(biome).equals(new ResourceLocation(\"modified_wooded_badlands_plateau\")))\n\t\t\t\tbiomeCriteria = true;\n\t\t\tif (ForgeRegistries.BIOMES.getKey(biome).equals(new ResourceLocation(\"modified_badlands_plateau\")))\n\t\t\t\tbiomeCriteria = true;\n\t\t\tif (!biomeCriteria)\n\t\t\t\tcontinue;\n\t\t\tbiome.addFeature(GenerationStage.Decoration.UNDERGROUND_ORES, new OreFeature(OreFeatureConfig::deserialize) {\n\t\t\t\t@Override\n\t\t\t\tpublic boolean place(IWorld world, ChunkGenerator generator, Random rand, BlockPos pos, OreFeatureConfig config) {\n\t\t\t\t\tDimensionType dimensionType = world.getDimension().getType();\n\t\t\t\t\tboolean dimensionCriteria = false;\n\t\t\t\t\tif (dimensionType == DimensionType.OVERWORLD)\n\t\t\t\t\t\tdimensionCriteria = true;\n\t\t\t\t\tif (!dimensionCriteria)\n\t\t\t\t\t\treturn false;\n\t\t\t\t\treturn super.place(world, generator, rand, pos, config);\n\t\t\t\t}\n\t\t\t}.withConfiguration(\n\t\t\t\t\tnew OreFeatureConfig(OreFeatureConfig.FillerBlockType.create(\"roughredsanstoneslab\", \"roughredsanstoneslab\", blockAt -> {\n\t\t\t\t\t\tboolean blockCriteria = false;\n\t\t\t\t\t\tif (blockAt.getBlock() == Blocks.RED_SANDSTONE.getDefaultState().getBlock())\n\t\t\t\t\t\t\tblockCriteria = true;\n\t\t\t\t\t\treturn blockCriteria;\n\t\t\t\t\t}), block.getDefaultState(), 16)).withPlacement(Placement.COUNT_RANGE.configure(new CountRangeConfig(16, 0, 0, 256))));\n\t\t}\n\t}", "url": "https://raw.githubusercontent.com/KarogathModdingStudios/Enhanced-Vanilla-1.15/master/src/main/java/com/karogath/enhancedvanilla/block/RoughRedSanstoneSlabBlock.java", "stars": "2", "class_props": {"extends": "EnhancedVanillaElements", "implements": null, "modifiers": ["public"]}}, {"id": 61559, "method_name": "isNormalCube", "class_name": "CustomBlock", "params": ["BlockState", "IBlockReader", "BlockPos"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "\t\tpublic boolean isNormalCube(BlockState state, IBlockReader worldIn, BlockPos pos) {\n\t\t\treturn false;\n\t\t}", "url": "https://raw.githubusercontent.com/KarogathModdingStudios/Enhanced-Vanilla-1.15/master/src/main/java/com/karogath/enhancedvanilla/block/RoughRedSanstoneSlabBlock.java", "stars": "2", "class_props": {"extends": "SlabBlock", "implements": null, "modifiers": ["public", "static"]}}, {"id": 61560, "method_name": "propagatesSkylightDown", "class_name": "CustomBlock", "params": ["BlockState", "IBlockReader", "BlockPos"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "\t\tpublic boolean propagatesSkylightDown(BlockState state, IBlockReader reader, BlockPos pos) {\n\t\t\treturn true;\n\t\t}", "url": "https://raw.githubusercontent.com/KarogathModdingStudios/Enhanced-Vanilla-1.15/master/src/main/java/com/karogath/enhancedvanilla/block/RoughRedSanstoneSlabBlock.java", "stars": "2", "class_props": {"extends": "SlabBlock", "implements": null, "modifiers": ["public", "static"]}}, {"id": 61561, "method_name": "getPickBlock", "class_name": "CustomBlock", "params": ["BlockState", "RayTraceResult", "IBlockReader", "BlockPos", "PlayerEntity"], "throws": null, "modifiers": ["public"], "return_type": "ItemStack", "snippet": "\t\tpublic ItemStack getPickBlock(BlockState state, RayTraceResult target, IBlockReader world, BlockPos pos, PlayerEntity player) {\n\t\t\treturn new ItemStack(RoughRedSanstoneSlabBlock.block, (int) (1));\n\t\t}", "url": "https://raw.githubusercontent.com/KarogathModdingStudios/Enhanced-Vanilla-1.15/master/src/main/java/com/karogath/enhancedvanilla/block/RoughRedSanstoneSlabBlock.java", "stars": "2", "class_props": {"extends": "SlabBlock", "implements": null, "modifiers": ["public", "static"]}}, {"id": 61562, "method_name": "getDrops", "class_name": "CustomBlock", "params": ["BlockState", "LootContext"], "throws": null, "modifiers": ["public"], "return_type": "List<ItemStack>", "snippet": "\t\tpublic List<ItemStack> getDrops(BlockState state, LootContext.Builder builder) {\n\t\t\tList<ItemStack> dropsOriginal = super.getDrops(state, builder);\n\t\t\tif (!dropsOriginal.isEmpty())\n\t\t\t\treturn dropsOriginal;\n\t\t\treturn Collections.singletonList(new ItemStack(this, 0));\n\t\t}", "url": "https://raw.githubusercontent.com/KarogathModdingStudios/Enhanced-Vanilla-1.15/master/src/main/java/com/karogath/enhancedvanilla/block/RoughRedSanstoneSlabBlock.java", "stars": "2", "class_props": {"extends": "SlabBlock", "implements": null, "modifiers": ["public", "static"]}}, {"id": 61563, "method_name": "processCommand", "class_name": "BreakpointCommand", "params": ["Emulator<?>", "GdbStub", "String"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean processCommand(Emulator<?> emulator, GdbStub stub, String command) {\n        int divider = command.substring(3).indexOf(\",\");\n        long address = Long.parseLong(command.substring(3, divider + 3), 16);\n\n        /*\n         * 2: 16-bit Thumb mode breakpoint.\n         * 3: 32-bit Thumb mode (Thumb-2) breakpoint.\n         * 4: 32-bit ARM mode breakpoint.\n         */\n        int type = Integer.parseInt(command.substring(divider + 4));\n        boolean isThumb = type == 2 || type == 3;\n        if (isThumb) {\n            address |= 1;\n        }\n\n        if (command.startsWith(\"Z0\")) {\n            stub.addBreakPoint(address);\n        } else {\n            stub.removeBreakPoint(address);\n        }\n        stub.makePacketAndSend(\"OK\");\n        return true;\n    }", "url": "https://raw.githubusercontent.com/wmm1996528/unidbg_douyin10/master/src/main/java/com/github/unidbg/debugger/gdb/BreakpointCommand.java", "stars": "16", "class_props": {"extends": null, "implements": ["GdbStubCommand"], "modifiers": []}}, {"id": 61564, "method_name": "getPointerArg", "class_name": "HookZzArm64RegisterContextImpl", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "UnicornPointer", "snippet": "    public UnicornPointer getPointerArg(int index) {\n        if (index < 8) {\n            return getXPointer(index);\n        }\n\n        UnicornPointer sp = getStackPointer();\n        return sp.getPointer((index - 8) * emulator.getPointerSize());\n    }", "url": "https://raw.githubusercontent.com/wmm1996528/unidbg_douyin10/master/src/main/java/com/github/unidbg/hook/hookzz/HookZzArm64RegisterContextImpl.java", "stars": "16", "class_props": {"extends": "HookZzRegisterContext", "implements": ["HookZzArm64RegisterContext"], "modifiers": ["public"]}}, {"id": 61565, "method_name": "getXLong", "class_name": "HookZzArm64RegisterContextImpl", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "long", "snippet": "    public long getXLong(int index) {\n        if (index >= 0 && index <= 28) {\n            return reg_ctx.getLong(index * 8);\n        }\n        throw new IllegalArgumentException(\"invalid index: \" + index);\n    }", "url": "https://raw.githubusercontent.com/wmm1996528/unidbg_douyin10/master/src/main/java/com/github/unidbg/hook/hookzz/HookZzArm64RegisterContextImpl.java", "stars": "16", "class_props": {"extends": "HookZzRegisterContext", "implements": ["HookZzArm64RegisterContext"], "modifiers": ["public"]}}, {"id": 61566, "method_name": "getXInt", "class_name": "HookZzArm64RegisterContextImpl", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getXInt(int index) {\n        return (int) getXLong(index);\n    }", "url": "https://raw.githubusercontent.com/wmm1996528/unidbg_douyin10/master/src/main/java/com/github/unidbg/hook/hookzz/HookZzArm64RegisterContextImpl.java", "stars": "16", "class_props": {"extends": "HookZzRegisterContext", "implements": ["HookZzArm64RegisterContext"], "modifiers": ["public"]}}, {"id": 61567, "method_name": "getXPointer", "class_name": "HookZzArm64RegisterContextImpl", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "UnicornPointer", "snippet": "    public UnicornPointer getXPointer(int index) {\n        return UnicornPointer.pointer(emulator, getXLong(index));\n    }", "url": "https://raw.githubusercontent.com/wmm1996528/unidbg_douyin10/master/src/main/java/com/github/unidbg/hook/hookzz/HookZzArm64RegisterContextImpl.java", "stars": "16", "class_props": {"extends": "HookZzRegisterContext", "implements": ["HookZzArm64RegisterContext"], "modifiers": ["public"]}}, {"id": 61568, "method_name": "getFp", "class_name": "HookZzArm64RegisterContextImpl", "params": [], "throws": null, "modifiers": ["public"], "return_type": "long", "snippet": "    public long getFp() {\n        return reg_ctx.getLong(29 * 8);\n    }", "url": "https://raw.githubusercontent.com/wmm1996528/unidbg_douyin10/master/src/main/java/com/github/unidbg/hook/hookzz/HookZzArm64RegisterContextImpl.java", "stars": "16", "class_props": {"extends": "HookZzRegisterContext", "implements": ["HookZzArm64RegisterContext"], "modifiers": ["public"]}}, {"id": 61569, "method_name": "getFpPointer", "class_name": "HookZzArm64RegisterContextImpl", "params": [], "throws": null, "modifiers": ["public"], "return_type": "UnicornPointer", "snippet": "    public UnicornPointer getFpPointer() {\n        return UnicornPointer.pointer(emulator, getFp());\n    }", "url": "https://raw.githubusercontent.com/wmm1996528/unidbg_douyin10/master/src/main/java/com/github/unidbg/hook/hookzz/HookZzArm64RegisterContextImpl.java", "stars": "16", "class_props": {"extends": "HookZzRegisterContext", "implements": ["HookZzArm64RegisterContext"], "modifiers": ["public"]}}, {"id": 61570, "method_name": "getLR", "class_name": "HookZzArm64RegisterContextImpl", "params": [], "throws": null, "modifiers": ["public"], "return_type": "long", "snippet": "    public long getLR() {\n        return reg_ctx.getLong(30 * 8);\n    }", "url": "https://raw.githubusercontent.com/wmm1996528/unidbg_douyin10/master/src/main/java/com/github/unidbg/hook/hookzz/HookZzArm64RegisterContextImpl.java", "stars": "16", "class_props": {"extends": "HookZzRegisterContext", "implements": ["HookZzArm64RegisterContext"], "modifiers": ["public"]}}, {"id": 61571, "method_name": "getLRPointer", "class_name": "HookZzArm64RegisterContextImpl", "params": [], "throws": null, "modifiers": ["public"], "return_type": "UnicornPointer", "snippet": "    public UnicornPointer getLRPointer() {\n        return UnicornPointer.pointer(emulator, getLR());\n    }", "url": "https://raw.githubusercontent.com/wmm1996528/unidbg_douyin10/master/src/main/java/com/github/unidbg/hook/hookzz/HookZzArm64RegisterContextImpl.java", "stars": "16", "class_props": {"extends": "HookZzRegisterContext", "implements": ["HookZzArm64RegisterContext"], "modifiers": ["public"]}}, {"id": 61572, "method_name": "getStackPointer", "class_name": "HookZzArm64RegisterContextImpl", "params": [], "throws": null, "modifiers": ["public"], "return_type": "UnicornPointer", "snippet": "    public UnicornPointer getStackPointer() {\n        return (UnicornPointer) reg_ctx.share(30 * 8 + 8 + 16 * 8);\n    }", "url": "https://raw.githubusercontent.com/wmm1996528/unidbg_douyin10/master/src/main/java/com/github/unidbg/hook/hookzz/HookZzArm64RegisterContextImpl.java", "stars": "16", "class_props": {"extends": "HookZzRegisterContext", "implements": ["HookZzArm64RegisterContext"], "modifiers": ["public"]}}, {"id": 61573, "method_name": "onCreateView", "class_name": "SpalshScreen", "params": ["LayoutInflater", "ViewGroup", "Bundle"], "throws": null, "modifiers": ["public"], "return_type": "View", "snippet": "    public View onCreateView(LayoutInflater inflater, ViewGroup container,\n                             Bundle savedInstanceState) {\n        // Inflate the layout for this fragment\n        return inflater.inflate(R.layout.fragment_spalsh_screen, container, false);\n    }", "url": "https://raw.githubusercontent.com/RzTutul/Covid-19/master/app/src/main/java/com/example/covid19/SpalshScreen.java", "stars": "2", "class_props": {"extends": "Fragment", "implements": null, "modifiers": ["public"]}}, {"id": 61574, "method_name": "onViewCreated", "class_name": "SpalshScreen", "params": ["View", "Bundle"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onViewCreated(@NonNull View view, @Nullable Bundle savedInstanceState) {\n        super.onViewCreated(view, savedInstanceState);\n\n        preventingTV = view.findViewById(R.id.prentationTV);\n\n\n        Random random = new Random();\n        int n = random.nextInt((prevention.length)-1);\n\n        preventingTV.setText(prevention[n]);\n\n        Thread thread = new Thread(new Runnable() {\n            @Override\n            public void run() {\n               doWork();\n                StartApp();\n\n            }\n        });\n        thread.start();\n\n\n\n    }", "url": "https://raw.githubusercontent.com/RzTutul/Covid-19/master/app/src/main/java/com/example/covid19/SpalshScreen.java", "stars": "2", "class_props": {"extends": "Fragment", "implements": null, "modifiers": ["public"]}}, {"id": 61575, "method_name": "StartApp", "class_name": "SpalshScreen", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void StartApp() {\n\n        Navigation.findNavController(getActivity(),R.id.nav_host_fragment_container).navigate(R.id.homeFragment);\n\n    }", "url": "https://raw.githubusercontent.com/RzTutul/Covid-19/master/app/src/main/java/com/example/covid19/SpalshScreen.java", "stars": "2", "class_props": {"extends": "Fragment", "implements": null, "modifiers": ["public"]}}, {"id": 61576, "method_name": "doWork", "class_name": "SpalshScreen", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void doWork() {\n        try {\n            Thread.sleep(3000);\n        } catch (InterruptedException e) {\n            e.printStackTrace();\n        }\n    }", "url": "https://raw.githubusercontent.com/RzTutul/Covid-19/master/app/src/main/java/com/example/covid19/SpalshScreen.java", "stars": "2", "class_props": {"extends": "Fragment", "implements": null, "modifiers": ["public"]}}, {"id": 61577, "method_name": "create", "class_name": "ViewHolderHighlight", "params": ["ViewGroup", "Context", "Fragment", "RecyclerView"], "throws": null, "modifiers": ["public", "static"], "return_type": "ViewHolderHighlight", "snippet": "    public static ViewHolderHighlight create(ViewGroup parent, Context context, Fragment fragment, RecyclerView.Adapter adapter) {\n\n        View view = LayoutInflater.from(parent.getContext()).inflate(R.layout.list_item_highlight,parent,false);\n        return new ViewHolderHighlight(view,context,fragment,adapter);\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/UtilityScreens/zHighlightSlider/ViewHolders/ViewHolderHighlight.java", "stars": "10", "class_props": {"extends": "RecyclerView", "implements": null, "modifiers": ["public"]}}, {"id": 61578, "method_name": "setItem", "class_name": "ViewHolderHighlight", "params": ["HighlightItem"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setItem(HighlightItem highlightItem)\n    {\n\n        this.highlightItem = highlightItem;\n\n\n        titleTop.setText(highlightItem.getTitleTop());\n        title.setText(highlightItem.getTitle());\n        description.setText(highlightItem.getDescription());\n        footer.setText(highlightItem.getFooter());\n\n\n        Drawable drawable = ContextCompat.getDrawable(context,R.drawable.ic_nature_people_white_48px);\n\n//        String imagePath = PrefGeneral.getServiceURL(context) + \"/api/v1/VehicleType/Image/\" + \"five_hundred_\"+ this.highlightItem.getImagePath() + \".jpg\";\n//        String image_url = PrefGeneral.getServiceURL(context) + \"/api/v1/VehicleType/Image/\" + this.highlightItem.getImagePath();\n\n\n        Picasso.get()\n                .load(highlightItem.getImageURL())\n                .placeholder(drawable)\n                .into(image);\n\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/UtilityScreens/zHighlightSlider/ViewHolders/ViewHolderHighlight.java", "stars": "10", "class_props": {"extends": "RecyclerView", "implements": null, "modifiers": ["public"]}}, {"id": 61579, "method_name": "listItemClick", "class_name": "ViewHolderHighlight", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "    void listItemClick()\n    {\n\n        if(fragment instanceof ListItemClick)\n        {\n            ((ListItemClick) fragment).notifyItemSelected(highlightItem);\n        }\n\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/UtilityScreens/zHighlightSlider/ViewHolders/ViewHolderHighlight.java", "stars": "10", "class_props": {"extends": "RecyclerView", "implements": null, "modifiers": ["public"]}}, {"id": 61580, "method_name": "getName", "class_name": "MetaCond", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getName() {\n        return name;\n    }", "url": "https://raw.githubusercontent.com/chenval/my-site/master/src/main/java/cn/blog/dto/cond/MetaCond.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 61581, "method_name": "setName", "class_name": "MetaCond", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setName(String name) {\n        this.name = name;\n    }", "url": "https://raw.githubusercontent.com/chenval/my-site/master/src/main/java/cn/blog/dto/cond/MetaCond.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 61582, "method_name": "getType", "class_name": "MetaCond", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getType() {\n        return type;\n    }", "url": "https://raw.githubusercontent.com/chenval/my-site/master/src/main/java/cn/blog/dto/cond/MetaCond.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 61583, "method_name": "setType", "class_name": "MetaCond", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setType(String type) {\n        this.type = type;\n    }", "url": "https://raw.githubusercontent.com/chenval/my-site/master/src/main/java/cn/blog/dto/cond/MetaCond.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 61584, "method_name": "insertQuarter", "class_name": "NoQuarterState", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void insertQuarter() {\n        System.out.println(\"Quarter inserted\");\n        this.gumballMachine.setState(this.gumballMachine.getHasQuarterState());\n    }", "url": "https://raw.githubusercontent.com/piyush6348/Design-Patterns/master/State%20Pattern/src/NoQuarterState.java", "stars": "38", "class_props": {"extends": null, "implements": ["IState"], "modifiers": ["public"]}}, {"id": 61585, "method_name": "ejectQuarter", "class_name": "NoQuarterState", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void ejectQuarter() {\n        System.out.println(\"You haven't inserted a quarter that you can eject\");\n    }", "url": "https://raw.githubusercontent.com/piyush6348/Design-Patterns/master/State%20Pattern/src/NoQuarterState.java", "stars": "38", "class_props": {"extends": null, "implements": ["IState"], "modifiers": ["public"]}}, {"id": 61586, "method_name": "rotateCrank", "class_name": "NoQuarterState", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void rotateCrank() {\n        System.out.println(\"Please insert a quarter first and then rotate\");\n    }", "url": "https://raw.githubusercontent.com/piyush6348/Design-Patterns/master/State%20Pattern/src/NoQuarterState.java", "stars": "38", "class_props": {"extends": null, "implements": ["IState"], "modifiers": ["public"]}}, {"id": 61587, "method_name": "dispense", "class_name": "NoQuarterState", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void dispense() {\n        System.out.println(\"Please insert a quarter first\");\n    }", "url": "https://raw.githubusercontent.com/piyush6348/Design-Patterns/master/State%20Pattern/src/NoQuarterState.java", "stars": "38", "class_props": {"extends": null, "implements": ["IState"], "modifiers": ["public"]}}, {"id": 61588, "method_name": "send", "class_name": "KafkaProducerController", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void send(@RequestParam String message){\n        senderService.send(message);\n    }", "url": "https://raw.githubusercontent.com/camelya58/kafka-sample/master/kafka-producer/src/main/java/com/example/kafkaproducer/controller/KafkaProducerController.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 61589, "method_name": "isFromBeforeTo", "class_name": "LeasingDTO", "params": [], "throws": null, "modifiers": ["private"], "return_type": "boolean", "snippet": "    private boolean isFromBeforeTo() {\n        return from.isBefore(to);\n    }", "url": "https://raw.githubusercontent.com/gardle/gardle-web/master/src/main/java/com/gardle/service/dto/leasing/LeasingDTO.java", "stars": "2", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 61590, "method_name": "getConfig", "class_name": "Step", "params": [], "throws": null, "modifiers": ["public"], "return_type": "ParameterMap", "snippet": "    public ParameterMap getConfig() {\n        return config;\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/model/process/wizard/Step.java", "stars": "12", "class_props": {"extends": "IdTitle", "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 61591, "method_name": "getExpression", "class_name": "Step", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getExpression() {\n        return expression;\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/model/process/wizard/Step.java", "stars": "12", "class_props": {"extends": "IdTitle", "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 61592, "method_name": "setExpression", "class_name": "Step", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setExpression(String expression) {\n        this.expression = expression;\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/model/process/wizard/Step.java", "stars": "12", "class_props": {"extends": "IdTitle", "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 61593, "method_name": "getJspFile", "class_name": "Step", "params": [], "throws": null, "modifiers": ["public", "abstract"], "return_type": "String", "snippet": "    public abstract String getJspFile();\n\n    public abstract StepData<?> newStepData(WizardData data);\n\n    public static final Step newInstance(String className, ParameterMap config) {\n        try {\n            Class<?> clazz = DynamicClassManager.getClass(className);\n            if (!Step.class.isAssignableFrom(clazz)) {\n                throw new BGException(\"Incorrect class: \" + className);\n            }\n\n            return (Step) clazz.getConstructor(ParameterMap.class).newInstance(config);\n        } catch (Exception e) {\n            log.error(e.getMessage(), e);\n        }\n\n        return null;\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/model/process/wizard/Step.java", "stars": "12", "class_props": {"extends": "IdTitle", "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 61594, "method_name": "newStepData", "class_name": "Step", "params": ["WizardData"], "throws": null, "modifiers": ["public", "abstract"], "return_type": "StepData<?>", "snippet": "    public abstract StepData<?> newStepData(WizardData data);\n\n    public static final Step newInstance(String className, ParameterMap config) {\n        try {\n            Class<?> clazz = DynamicClassManager.getClass(className);\n            if (!Step.class.isAssignableFrom(clazz)) {\n                throw new BGException(\"Incorrect class: \" + className);\n            }\n\n            return (Step) clazz.getConstructor(ParameterMap.class).newInstance(config);\n        } catch (Exception e) {\n            log.error(e.getMessage(), e);\n        }\n\n        return null;\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/model/process/wizard/Step.java", "stars": "12", "class_props": {"extends": "IdTitle", "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 61595, "method_name": "newInstance", "class_name": "Step", "params": ["String", "ParameterMap"], "throws": null, "modifiers": ["final", "public", "static"], "return_type": "Step", "snippet": "    public static final Step newInstance(String className, ParameterMap config) {\n        try {\n            Class<?> clazz = DynamicClassManager.getClass(className);\n            if (!Step.class.isAssignableFrom(clazz)) {\n                throw new BGException(\"Incorrect class: \" + className);\n            }\n\n            return (Step) clazz.getConstructor(ParameterMap.class).newInstance(config);\n        } catch (Exception e) {\n            log.error(e.getMessage(), e);\n        }\n\n        return null;\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/model/process/wizard/Step.java", "stars": "12", "class_props": {"extends": "IdTitle", "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 61596, "method_name": "init", "class_name": "FlowTriggerInstanceServlet", "params": ["ServletConfig"], "throws": ["ServletException"], "modifiers": ["public"], "return_type": "void", "snippet": "  public void init(final ServletConfig config) throws ServletException {\n    super.init(config);\n    final AzkabanWebServer server = (AzkabanWebServer) getApplication();\n    this.triggerService = server.getFlowTriggerService();\n    this.projectManager = server.getProjectManager();\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-web-server/src/main/java/azkaban/webapp/servlet/FlowTriggerInstanceServlet.java", "stars": "18", "class_props": {"extends": "LoginAbstractAzkabanServlet", "implements": null, "modifiers": ["public"]}}, {"id": 61597, "method_name": "handleGet", "class_name": "FlowTriggerInstanceServlet", "params": ["HttpServletRequest", "HttpServletResponse", "Session"], "throws": ["ServletException", "IOException"], "modifiers": ["protected"], "return_type": "void", "snippet": "  protected void handleGet(final HttpServletRequest req, final HttpServletResponse resp,\n      final Session session) throws ServletException, IOException {\n    if (hasParam(req, \"ajax\")) {\n      handleAJAXAction(req, resp, session);\n    } else {\n      handlePage(req, resp, session);\n    }\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-web-server/src/main/java/azkaban/webapp/servlet/FlowTriggerInstanceServlet.java", "stars": "18", "class_props": {"extends": "LoginAbstractAzkabanServlet", "implements": null, "modifiers": ["public"]}}, {"id": 61598, "method_name": "handlePage", "class_name": "FlowTriggerInstanceServlet", "params": ["HttpServletRequest", "HttpServletResponse", "Session"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "  private void handlePage(final HttpServletRequest req,\n      final HttpServletResponse resp, final Session session) {\n    final Page page =\n        newPage(req, resp, session,\n            \"azkaban/webapp/servlet/velocity/executingflowtriggerspage.vm\");\n\n    page.add(\"runningTriggers\", this.triggerService.getRunningTriggers());\n    page.add(\"recentTriggers\", this.triggerService.getRecentlyFinished());\n\n    String languageType = LoadJsonUtils.getLanguageType();\n    page.add(\"currentlangType\", languageType);\n\n    page.add(\"vmutils\", new ExecutorVMHelper());\n    page.render();\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-web-server/src/main/java/azkaban/webapp/servlet/FlowTriggerInstanceServlet.java", "stars": "18", "class_props": {"extends": "LoginAbstractAzkabanServlet", "implements": null, "modifiers": ["public"]}}, {"id": 61599, "method_name": "handleAJAXAction", "class_name": "FlowTriggerInstanceServlet", "params": ["HttpServletRequest", "HttpServletResponse", "Session"], "throws": ["ServletException", "IOException"], "modifiers": ["private"], "return_type": "void", "snippet": "  private void handleAJAXAction(final HttpServletRequest req,\n      final HttpServletResponse resp, final Session session) throws ServletException,\n      IOException {\n    final HashMap<String, Object> ret = new HashMap<>();\n    final String ajaxName = getParam(req, \"ajax\");\n\n    //todo chengren311: add permission control\n    if (ajaxName.equals(\"fetchRunningTriggers\")) {\n      ajaxFetchRunningTriggerInstances(ret);\n    } else if (ajaxName.equals(\"killRunningTrigger\")) {\n      if (hasParam(req, \"id\")) {\n        final String triggerInstanceId = getParam(req, \"id\");\n        ajaxKillTriggerInstance(triggerInstanceId, session, ret);\n      } else {\n        ret.put(\"error\", \"please specify a valid running trigger instance id\");\n      }\n    } else if (ajaxName.equals(\"showTriggerProperties\")) {\n      if (hasParam(req, \"id\")) {\n        final String triggerInstanceId = getParam(req, \"id\");\n        loadTriggerProperties(triggerInstanceId, ret);\n      } else {\n        ret.put(\"error\", \"please specify a valid running trigger instance id\");\n      }\n    } else if (ajaxName.equals(\"fetchTriggerStatus\")) {\n      if (hasParam(req, \"triggerinstid\")) {\n        final String triggerInstanceId = getParam(req, \"triggerinstid\");\n        ajaxFetchTriggerInstanceByTriggerInstId(triggerInstanceId, session, ret);\n      } else if (hasParam(req, \"execid\")) {\n        final int execId = getIntParam(req, \"execid\");\n        ajaxFetchTriggerInstanceByExecId(execId, session, ret);\n      } else {\n        ret.put(\"error\", \"please specify a valid trigger instance id or flow execution id\");\n      }\n    } else if (ajaxName.equals(\"fetchTriggerInstances\")) {\n      if (hasParam(req, \"project\") && hasParam(req, \"flow\")) {\n        final String projectName = getParam(req, \"project\");\n        final String flowId = getParam(req, \"flow\");\n        final Project project = this.projectManager.getProject(projectName);\n        if (project == null) {\n          ret.put(\"error\", \"please specify a valid project name\");\n        } else if (!hasPermission(project, session.getUser(), Type.READ)) {\n          ret.put(\"error\", \"Permission denied. Need READ access.\");\n        } else {\n          ajaxFetchTriggerInstances(project.getId(), flowId, ret, req);\n        }\n      } else {\n        ret.put(\"error\", \"please specify project id and flow id\");\n      }\n    }\n\n    if (ret != null) {\n      this.writeJSON(resp, ret);\n    }\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-web-server/src/main/java/azkaban/webapp/servlet/FlowTriggerInstanceServlet.java", "stars": "18", "class_props": {"extends": "LoginAbstractAzkabanServlet", "implements": null, "modifiers": ["public"]}}, {"id": 61600, "method_name": "ajaxFetchTriggerInstances", "class_name": "FlowTriggerInstanceServlet", "params": ["int", "String", "HashMap<String,Object>", "HttpServletRequest"], "throws": ["ServletException"], "modifiers": ["private"], "return_type": "void", "snippet": "  private void ajaxFetchTriggerInstances(\n      final int projectId,\n      final String flowId,\n      final HashMap<String, Object> ret,\n      final HttpServletRequest req)\n      throws ServletException {\n\n    final int from = Integer.valueOf(getParam(req, \"start\"));\n    final int length = Integer.valueOf(getParam(req, \"length\"));\n\n    final Collection<TriggerInstance> triggerInstances = this.triggerService\n        .getTriggerInstances(projectId, flowId, from, length);\n\n    ret.put(\"flow\", flowId);\n    ret.put(\"total\", triggerInstances.size());\n    ret.put(\"from\", from);\n    ret.put(\"length\", length);\n\n    final List<Object> history = new ArrayList<>();\n    for (final TriggerInstance instance : triggerInstances) {\n      final HashMap<String, Object> triggerInfo = new HashMap<>();\n      triggerInfo.put(\"instanceId\", instance.getId());\n      triggerInfo.put(\"submitUser\", instance.getSubmitUser());\n      triggerInfo.put(\"startTime\", instance.getStartTime());\n      triggerInfo.put(\"endTime\", instance.getEndTime());\n      triggerInfo.put(\"status\", instance.getStatus().toString());\n      history.add(triggerInfo);\n    }\n\n    ret.put(\"executions\", history);\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-web-server/src/main/java/azkaban/webapp/servlet/FlowTriggerInstanceServlet.java", "stars": "18", "class_props": {"extends": "LoginAbstractAzkabanServlet", "implements": null, "modifiers": ["public"]}}, {"id": 61601, "method_name": "loadTriggerProperties", "class_name": "FlowTriggerInstanceServlet", "params": ["String", "HashMap<String,Object>"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "  private void loadTriggerProperties(final String triggerInstanceId,\n      final HashMap<String, Object> ret) {\n    final TriggerInstance triggerInstance = this.triggerService\n        .findTriggerInstanceById(triggerInstanceId);\n    if (triggerInstance != null) {\n      ret.put(\"triggerProperties\", triggerInstance.getFlowTrigger().toString());\n    } else {\n      ret.put(\"error\", \"the trigger instance doesn't exist\");\n    }\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-web-server/src/main/java/azkaban/webapp/servlet/FlowTriggerInstanceServlet.java", "stars": "18", "class_props": {"extends": "LoginAbstractAzkabanServlet", "implements": null, "modifiers": ["public"]}}, {"id": 61602, "method_name": "wrapTriggerInst", "class_name": "FlowTriggerInstanceServlet", "params": ["TriggerInstance", "HashMap<String,Object>"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "  private void wrapTriggerInst(final TriggerInstance triggerInst,\n      final HashMap<String, Object> ret) {\n    final List<Map<String, Object>> dependencyOutput = new ArrayList<>();\n    for (final DependencyInstance depInst : triggerInst.getDepInstances()) {\n      final Map<String, Object> depMap = new HashMap<>();\n      depMap.put(\"triggerInstanceId\", depInst.getTriggerInstance().getId());\n      depMap.put(\"dependencyName\", depInst.getDepName());\n      depMap.put(\"dependencyType\", depInst.getTriggerInstance().getFlowTrigger()\n          .getDependencyByName(depInst.getDepName()).getType());\n      depMap.put(\"dependencyStartTime\", depInst.getStartTime());\n      depMap.put(\"dependencyEndTime\", depInst.getEndTime());\n      depMap.put(\"dependencyStatus\", depInst.getStatus());\n      depMap.put(\"dependencyCancelCause\", depInst.getCancellationCause());\n      depMap.put(\"dependencyConfig\", depInst.getTriggerInstance().getFlowTrigger()\n          .getDependencyByName(depInst.getDepName()));\n      dependencyOutput.add(depMap);\n    }\n    ret.put(\"items\", dependencyOutput);\n\n    ret.put(\"triggerId\", triggerInst.getId());\n    ret.put(\"triggerSubmitter\", triggerInst.getSubmitUser());\n    ret.put(\"triggerStartTime\", triggerInst.getStartTime());\n    ret.put(\"triggerEndTime\", triggerInst.getEndTime());\n    ret.put(\"triggerStatus\", triggerInst.getStatus());\n    final String flowTriggerJson = new GsonBuilder().setPrettyPrinting().create()\n        .toJson(triggerInst.getFlowTrigger());\n    ret.put(\"triggerProps\", flowTriggerJson);\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-web-server/src/main/java/azkaban/webapp/servlet/FlowTriggerInstanceServlet.java", "stars": "18", "class_props": {"extends": "LoginAbstractAzkabanServlet", "implements": null, "modifiers": ["public"]}}, {"id": 61603, "method_name": "ajaxFetchTriggerInstanceByExecId", "class_name": "FlowTriggerInstanceServlet", "params": ["int", "Session", "HashMap<String,Object>"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "  private void ajaxFetchTriggerInstanceByExecId(final int execId, final Session session,\n      final HashMap<String, Object> ret) {\n    final TriggerInstance triggerInst = this.triggerService\n        .findTriggerInstanceByExecId(execId);\n    if (triggerInst != null) {\n      wrapTriggerInst(triggerInst, ret);\n    }\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-web-server/src/main/java/azkaban/webapp/servlet/FlowTriggerInstanceServlet.java", "stars": "18", "class_props": {"extends": "LoginAbstractAzkabanServlet", "implements": null, "modifiers": ["public"]}}, {"id": 61604, "method_name": "ajaxFetchTriggerInstanceByTriggerInstId", "class_name": "FlowTriggerInstanceServlet", "params": ["String", "Session", "HashMap<String,Object>"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "  private void ajaxFetchTriggerInstanceByTriggerInstId(final String triggerInstanceId,\n      final Session session, final HashMap<String, Object> ret) {\n    final TriggerInstance triggerInst = this.triggerService\n        .findTriggerInstanceById(triggerInstanceId);\n    if (triggerInst != null) {\n      wrapTriggerInst(triggerInst, ret);\n    }\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-web-server/src/main/java/azkaban/webapp/servlet/FlowTriggerInstanceServlet.java", "stars": "18", "class_props": {"extends": "LoginAbstractAzkabanServlet", "implements": null, "modifiers": ["public"]}}, {"id": 61605, "method_name": "ajaxKillTriggerInstance", "class_name": "FlowTriggerInstanceServlet", "params": ["String", "Session", "HashMap<String,Object>"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "  private void ajaxKillTriggerInstance(final String triggerInstanceId, final Session session,\n      final HashMap<String, Object> ret) {\n    final TriggerInstance triggerInst = this.triggerService\n        .findRunningTriggerInstById(triggerInstanceId);\n    if (triggerInst != null) {\n      if (hasPermission(triggerInst.getProject(), session.getUser(), Type.EXECUTE)) {\n        this.triggerService.cancelTriggerInstance(triggerInst, CancellationCause.MANUAL);\n      } else {\n        ret.put(\"error\", \"no permission to kill the trigger\");\n      }\n    } else {\n      ret.put(\"error\", \"the trigger doesn't exist, might already finished or cancelled\");\n    }\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-web-server/src/main/java/azkaban/webapp/servlet/FlowTriggerInstanceServlet.java", "stars": "18", "class_props": {"extends": "LoginAbstractAzkabanServlet", "implements": null, "modifiers": ["public"]}}, {"id": 61606, "method_name": "ajaxFetchRunningTriggerInstances", "class_name": "FlowTriggerInstanceServlet", "params": ["HashMap<String,Object>"], "throws": ["ServletException"], "modifiers": ["private"], "return_type": "void", "snippet": "  private void ajaxFetchRunningTriggerInstances(final HashMap<String, Object> ret) throws\n      ServletException {\n    final Collection<TriggerInstance> triggerInstanceList = this.triggerService\n        .getRunningTriggers();\n\n    final List<HashMap<String, Object>> output = new ArrayList<>();\n    ret.put(\"items\", output);\n\n    for (final TriggerInstance triggerInstance : triggerInstanceList) {\n      writeTriggerInstancesData(output, triggerInstance);\n    }\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-web-server/src/main/java/azkaban/webapp/servlet/FlowTriggerInstanceServlet.java", "stars": "18", "class_props": {"extends": "LoginAbstractAzkabanServlet", "implements": null, "modifiers": ["public"]}}, {"id": 61607, "method_name": "writeTriggerInstancesData", "class_name": "FlowTriggerInstanceServlet", "params": ["List<HashMap>", "TriggerInstance"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "  private void writeTriggerInstancesData(final List<HashMap<String, Object>> output,\n      final TriggerInstance triggerInst) {\n\n    final HashMap<String, Object> data = new HashMap<>();\n    data.put(\"id\", triggerInst.getId());\n    data.put(\"starttime\", triggerInst.getStartTime());\n    data.put(\"endtime\", triggerInst.getEndTime());\n    data.put(\"status\", triggerInst.getStatus());\n    data.put(\"flowExecutionId\", triggerInst.getFlowExecId());\n    data.put(\"submitUser\", triggerInst.getSubmitUser());\n    data.put(\"flowTriggerConfig\", triggerInst.getFlowTrigger());\n    final List<Map<String, Object>> dependencyOutput = new ArrayList<>();\n    for (final DependencyInstance depInst : triggerInst.getDepInstances()) {\n      final Map<String, Object> depMap = new HashMap<>();\n      depMap.put(\"dependencyName\", depInst.getDepName());\n      depMap.put(\"dependencyStarttime\", depInst.getStartTime());\n      depMap.put(\"dependencyEndtime\", depInst.getEndTime());\n      depMap.put(\"dependencyStatus\", depInst.getStatus());\n      depMap.put(\"dependencyConfig\", depInst.getTriggerInstance().getFlowTrigger()\n          .getDependencyByName\n              (depInst.getDepName()));\n      dependencyOutput.add(depMap);\n    }\n    data.put(\"dependencies\", dependencyOutput);\n    output.add(data);\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-web-server/src/main/java/azkaban/webapp/servlet/FlowTriggerInstanceServlet.java", "stars": "18", "class_props": {"extends": "LoginAbstractAzkabanServlet", "implements": null, "modifiers": ["public"]}}, {"id": 61608, "method_name": "handlePost", "class_name": "FlowTriggerInstanceServlet", "params": ["HttpServletRequest", "HttpServletResponse", "Session"], "throws": ["ServletException", "IOException"], "modifiers": ["protected"], "return_type": "void", "snippet": "  protected void handlePost(final HttpServletRequest req, final HttpServletResponse resp,\n      final Session session) throws ServletException, IOException {\n    if (hasParam(req, \"ajax\")) {\n      handleAJAXAction(req, resp, session);\n    }\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-web-server/src/main/java/azkaban/webapp/servlet/FlowTriggerInstanceServlet.java", "stars": "18", "class_props": {"extends": "LoginAbstractAzkabanServlet", "implements": null, "modifiers": ["public"]}}, {"id": 61609, "method_name": "parseTimeZone", "class_name": "FlowTriggerInstanceServlet", "params": ["String"], "throws": null, "modifiers": ["private"], "return_type": "DateTimeZone", "snippet": "  private DateTimeZone parseTimeZone(final String cronTimezone) {\n    if (cronTimezone != null && cronTimezone.equals(\"UTC\")) {\n      return DateTimeZone.UTC;\n    }\n\n    return DateTimeZone.getDefault();\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-web-server/src/main/java/azkaban/webapp/servlet/FlowTriggerInstanceServlet.java", "stars": "18", "class_props": {"extends": "LoginAbstractAzkabanServlet", "implements": null, "modifiers": ["public"]}}, {"id": 61610, "method_name": "getPresentTimeByTimezone", "class_name": "FlowTriggerInstanceServlet", "params": ["DateTimeZone"], "throws": null, "modifiers": ["private"], "return_type": "DateTime", "snippet": "  private DateTime getPresentTimeByTimezone(final DateTimeZone timezone) {\n    return new DateTime(timezone);\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-web-server/src/main/java/azkaban/webapp/servlet/FlowTriggerInstanceServlet.java", "stars": "18", "class_props": {"extends": "LoginAbstractAzkabanServlet", "implements": null, "modifiers": ["public"]}}, {"id": 61611, "method_name": "getProjectName", "class_name": "ExecutorVMHelper", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getProjectName(final int id) {\n      final Project project = FlowTriggerInstanceServlet.this.projectManager.getProject(id);\n      if (project == null) {\n        return String.valueOf(id);\n      }\n\n      return project.getName();\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-web-server/src/main/java/azkaban/webapp/servlet/FlowTriggerInstanceServlet.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 61612, "method_name": "getCount", "class_name": "FormsFragmentPagerAdapter_1", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "\tpublic int getCount ()\n\t{\n\t\treturn n_getCount ();\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc64720bb2db43a66fe9/FormsFragmentPagerAdapter_1.java", "stars": "2", "class_props": {"extends": "android", "implements": ["mono"], "modifiers": ["public"]}}, {"id": 61613, "method_name": "n_getCount", "class_name": "FormsFragmentPagerAdapter_1", "params": [], "throws": null, "modifiers": ["private", "native"], "return_type": "int", "snippet": "\tprivate native int n_getCount ();\n\n\n\tpublic android.support.v4.app.Fragment getItem (int p0)\n\t{\n\t\treturn n_getItem (p0);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc64720bb2db43a66fe9/FormsFragmentPagerAdapter_1.java", "stars": "2", "class_props": {"extends": "android", "implements": ["mono"], "modifiers": ["public"]}}, {"id": 61614, "method_name": "getItem", "class_name": "FormsFragmentPagerAdapter_1", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "android", "snippet": "\tpublic android.support.v4.app.Fragment getItem (int p0)\n\t{\n\t\treturn n_getItem (p0);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc64720bb2db43a66fe9/FormsFragmentPagerAdapter_1.java", "stars": "2", "class_props": {"extends": "android", "implements": ["mono"], "modifiers": ["public"]}}, {"id": 61615, "method_name": "n_getItem", "class_name": "FormsFragmentPagerAdapter_1", "params": ["int"], "throws": null, "modifiers": ["private", "native"], "return_type": "android", "snippet": "\tprivate native android.support.v4.app.Fragment n_getItem (int p0);\n\n\n\tpublic long getItemId (int p0)\n\t{\n\t\treturn n_getItemId (p0);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc64720bb2db43a66fe9/FormsFragmentPagerAdapter_1.java", "stars": "2", "class_props": {"extends": "android", "implements": ["mono"], "modifiers": ["public"]}}, {"id": 61616, "method_name": "getItemId", "class_name": "FormsFragmentPagerAdapter_1", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "long", "snippet": "\tpublic long getItemId (int p0)\n\t{\n\t\treturn n_getItemId (p0);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc64720bb2db43a66fe9/FormsFragmentPagerAdapter_1.java", "stars": "2", "class_props": {"extends": "android", "implements": ["mono"], "modifiers": ["public"]}}, {"id": 61617, "method_name": "n_getItemId", "class_name": "FormsFragmentPagerAdapter_1", "params": ["int"], "throws": null, "modifiers": ["private", "native"], "return_type": "long", "snippet": "\tprivate native long n_getItemId (int p0);\n\n\n\tpublic int getItemPosition (java.lang.Object p0)\n\t{\n\t\treturn n_getItemPosition (p0);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc64720bb2db43a66fe9/FormsFragmentPagerAdapter_1.java", "stars": "2", "class_props": {"extends": "android", "implements": ["mono"], "modifiers": ["public"]}}, {"id": 61618, "method_name": "getItemPosition", "class_name": "FormsFragmentPagerAdapter_1", "params": ["java"], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "\tpublic int getItemPosition (java.lang.Object p0)\n\t{\n\t\treturn n_getItemPosition (p0);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc64720bb2db43a66fe9/FormsFragmentPagerAdapter_1.java", "stars": "2", "class_props": {"extends": "android", "implements": ["mono"], "modifiers": ["public"]}}, {"id": 61619, "method_name": "n_getItemPosition", "class_name": "FormsFragmentPagerAdapter_1", "params": ["java"], "throws": null, "modifiers": ["private", "native"], "return_type": "int", "snippet": "\tprivate native int n_getItemPosition (java.lang.Object p0);\n\n\n\tpublic java.lang.CharSequence getPageTitle (int p0)\n\t{\n\t\treturn n_getPageTitle (p0);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc64720bb2db43a66fe9/FormsFragmentPagerAdapter_1.java", "stars": "2", "class_props": {"extends": "android", "implements": ["mono"], "modifiers": ["public"]}}, {"id": 61620, "method_name": "getPageTitle", "class_name": "FormsFragmentPagerAdapter_1", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "java", "snippet": "\tpublic java.lang.CharSequence getPageTitle (int p0)\n\t{\n\t\treturn n_getPageTitle (p0);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc64720bb2db43a66fe9/FormsFragmentPagerAdapter_1.java", "stars": "2", "class_props": {"extends": "android", "implements": ["mono"], "modifiers": ["public"]}}, {"id": 61621, "method_name": "n_getPageTitle", "class_name": "FormsFragmentPagerAdapter_1", "params": ["int"], "throws": null, "modifiers": ["private", "native"], "return_type": "java", "snippet": "\tprivate native java.lang.CharSequence n_getPageTitle (int p0);\n\n\n\tpublic void restoreState (android.os.Parcelable p0, java.lang.ClassLoader p1)\n\t{\n\t\tn_restoreState (p0, p1);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc64720bb2db43a66fe9/FormsFragmentPagerAdapter_1.java", "stars": "2", "class_props": {"extends": "android", "implements": ["mono"], "modifiers": ["public"]}}, {"id": 61622, "method_name": "restoreState", "class_name": "FormsFragmentPagerAdapter_1", "params": ["android", "java"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void restoreState (android.os.Parcelable p0, java.lang.ClassLoader p1)\n\t{\n\t\tn_restoreState (p0, p1);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc64720bb2db43a66fe9/FormsFragmentPagerAdapter_1.java", "stars": "2", "class_props": {"extends": "android", "implements": ["mono"], "modifiers": ["public"]}}, {"id": 61623, "method_name": "n_restoreState", "class_name": "FormsFragmentPagerAdapter_1", "params": ["android", "java"], "throws": null, "modifiers": ["private", "native"], "return_type": "void", "snippet": "\tprivate native void n_restoreState (android.os.Parcelable p0, java.lang.ClassLoader p1);\n\n\tprivate java.util.ArrayList refList;\n\tpublic void monodroidAddReference (java.lang.Object obj)\n\t{\n\t\tif (refList == null)\n\t\t\trefList = new java.util.ArrayList ();\n\t\trefList.add (obj);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc64720bb2db43a66fe9/FormsFragmentPagerAdapter_1.java", "stars": "2", "class_props": {"extends": "android", "implements": ["mono"], "modifiers": ["public"]}}, {"id": 61624, "method_name": "monodroidAddReference", "class_name": "FormsFragmentPagerAdapter_1", "params": ["java"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void monodroidAddReference (java.lang.Object obj)\n\t{\n\t\tif (refList == null)\n\t\t\trefList = new java.util.ArrayList ();\n\t\trefList.add (obj);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc64720bb2db43a66fe9/FormsFragmentPagerAdapter_1.java", "stars": "2", "class_props": {"extends": "android", "implements": ["mono"], "modifiers": ["public"]}}, {"id": 61625, "method_name": "monodroidClearReferences", "class_name": "FormsFragmentPagerAdapter_1", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void monodroidClearReferences ()\n\t{\n\t\tif (refList != null)\n\t\t\trefList.clear ();\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc64720bb2db43a66fe9/FormsFragmentPagerAdapter_1.java", "stars": "2", "class_props": {"extends": "android", "implements": ["mono"], "modifiers": ["public"]}}, {"id": 61626, "method_name": "version", "class_name": "SampleSourceTask", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String version() {\n        return PropertiesUtil.getConnectorVersion();\n    }", "url": "https://raw.githubusercontent.com/riferrei/kafka-source-connector/master/src/main/java/com/acme/kafka/connect/sample/SampleSourceTask.java", "stars": "11", "class_props": {"extends": "SourceTask", "implements": null, "modifiers": ["public"]}}, {"id": 61627, "method_name": "start", "class_name": "SampleSourceTask", "params": ["Map<String,String>"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void start(Map<String, String> properties) {\n        config = new SampleSourceConnectorConfig(properties);\n        monitorThreadTimeout = config.getInt(MONITOR_THREAD_TIMEOUT_CONFIG);\n        String sourcesStr = properties.get(\"sources\");\n        sources = Arrays.asList(sourcesStr.split(\",\"));\n    }", "url": "https://raw.githubusercontent.com/riferrei/kafka-source-connector/master/src/main/java/com/acme/kafka/connect/sample/SampleSourceTask.java", "stars": "11", "class_props": {"extends": "SourceTask", "implements": null, "modifiers": ["public"]}}, {"id": 61628, "method_name": "poll", "class_name": "SampleSourceTask", "params": [], "throws": ["InterruptedException"], "modifiers": ["public"], "return_type": "List<SourceRecord>", "snippet": "    public List<SourceRecord> poll() throws InterruptedException {\n        Thread.sleep(monitorThreadTimeout / 2);\n        List<SourceRecord> records = new ArrayList<>();\n        for (String source : sources) {\n            log.info(\"Polling data from the source '\" + source + \"'\");\n            records.add(new SourceRecord(\n                Collections.singletonMap(\"source\", source),\n                Collections.singletonMap(\"offset\", 0),\n                source, null, null, null, Schema.BYTES_SCHEMA,\n                String.format(\"Data from %s\", source).getBytes()));\n        }\n        return records;\n    }", "url": "https://raw.githubusercontent.com/riferrei/kafka-source-connector/master/src/main/java/com/acme/kafka/connect/sample/SampleSourceTask.java", "stars": "11", "class_props": {"extends": "SourceTask", "implements": null, "modifiers": ["public"]}}, {"id": 61629, "method_name": "stop", "class_name": "SampleSourceTask", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void stop() {\n    }", "url": "https://raw.githubusercontent.com/riferrei/kafka-source-connector/master/src/main/java/com/acme/kafka/connect/sample/SampleSourceTask.java", "stars": "11", "class_props": {"extends": "SourceTask", "implements": null, "modifiers": ["public"]}}, {"id": 61630, "method_name": "showAccount", "class_name": "Bank", "params": [], "throws": null, "modifiers": ["abstract"], "return_type": "Account", "snippet": "    abstract Account showAccount();\n}\n\n", "url": "https://raw.githubusercontent.com/wangIQD/GoF23/master/GOF23/DesignPattern/src/com/wz/structural/bridge/Bank.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 61631, "method_name": "isConnected", "class_name": "DeviceNetwork", "params": ["Context"], "throws": null, "modifiers": ["public", "static"], "return_type": "boolean", "snippet": "    public static boolean isConnected(Context context){\n        ConnectivityManager connectivityManager = (ConnectivityManager)context.getSystemService(Context.CONNECTIVITY_SERVICE);\n        return isMobileNetworkConnected(connectivityManager) || isWiFiConnected(connectivityManager);\n    }", "url": "https://raw.githubusercontent.com/swesust/covid-19-help-support-bd/master/Covid19Shahajjo/app/src/main/java/com/example/covid19shahajjo/helper/DeviceNetwork.java", "stars": "9", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 61632, "method_name": "isMobileNetworkConnected", "class_name": "DeviceNetwork", "params": ["ConnectivityManager"], "throws": null, "modifiers": ["public", "static"], "return_type": "boolean", "snippet": "    public static boolean isMobileNetworkConnected(ConnectivityManager connectivityManager){\n        return connectivityManager.getNetworkInfo(ConnectivityManager.TYPE_MOBILE).getState() == NetworkInfo.State.CONNECTED;\n    }", "url": "https://raw.githubusercontent.com/swesust/covid-19-help-support-bd/master/Covid19Shahajjo/app/src/main/java/com/example/covid19shahajjo/helper/DeviceNetwork.java", "stars": "9", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 61633, "method_name": "isWiFiConnected", "class_name": "DeviceNetwork", "params": ["ConnectivityManager"], "throws": null, "modifiers": ["public", "static"], "return_type": "boolean", "snippet": "    public static boolean isWiFiConnected(ConnectivityManager connectivityManager){\n        return connectivityManager.getNetworkInfo(ConnectivityManager.TYPE_WIFI).getState() == NetworkInfo.State.CONNECTED;\n    }", "url": "https://raw.githubusercontent.com/swesust/covid-19-help-support-bd/master/Covid19Shahajjo/app/src/main/java/com/example/covid19shahajjo/helper/DeviceNetwork.java", "stars": "9", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 61634, "method_name": "isGPSActive", "class_name": "DeviceNetwork", "params": ["Context"], "throws": null, "modifiers": ["public", "static"], "return_type": "boolean", "snippet": "    public static boolean isGPSActive(Context context){\n        LocationManager manager = (LocationManager) context.getSystemService(Context.LOCATION_SERVICE );\n        return manager.isProviderEnabled(LocationManager.GPS_PROVIDER);\n    }", "url": "https://raw.githubusercontent.com/swesust/covid-19-help-support-bd/master/Covid19Shahajjo/app/src/main/java/com/example/covid19shahajjo/helper/DeviceNetwork.java", "stars": "9", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 61635, "method_name": "getSignalKeyByJob", "class_name": "AzkabanJobSignalKeyCreator", "params": ["Job"], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getSignalKeyByJob(Job job) {\n        String projectId = job.getJobProps().get(LinkisJobTypeConf.PROJECT_ID);\n        String flowId = job.getJobProps().get(LinkisJobTypeConf.FLOW_NAME);\n        String flowExecId = job.getJobProps().get(LinkisJobTypeConf.FLOW_EXEC_ID);\n        return projectId + \".\" + flowId + \".\" + flowExecId ;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-jobtype/src/main/java/com/webank/wedatasphere/schedulis/linkis/job/AzkabanJobSignalKeyCreator.java", "stars": "18", "class_props": {"extends": null, "implements": ["JobSignalKeyCreator"], "modifiers": ["public"]}}, {"id": 61636, "method_name": "getSignalKeyBySignalSharedJob", "class_name": "AzkabanJobSignalKeyCreator", "params": ["SignalSharedJob"], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getSignalKeyBySignalSharedJob(SignalSharedJob job) {\n        return getSignalKeyByJob((Job)job);\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-jobtype/src/main/java/com/webank/wedatasphere/schedulis/linkis/job/AzkabanJobSignalKeyCreator.java", "stars": "18", "class_props": {"extends": null, "implements": ["JobSignalKeyCreator"], "modifiers": ["public"]}}, {"id": 61637, "method_name": "openAccount", "class_name": "DepositAccount", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Account", "snippet": "    public Account openAccount() {\n        System.out.println(\"\u6253\u5f00\u4e00\u4e2a\u5b9a\u671f\u5b58\u6b3e\u7684\u8d26\u6237\");\n        return new DepositAccount();\n    }", "url": "https://raw.githubusercontent.com/wangIQD/GoF23/master/GOF23/DesignPattern/src/com/wz/structural/bridge/DepositAccount.java", "stars": "2", "class_props": {"extends": null, "implements": ["Account"], "modifiers": ["public"]}}, {"id": 61638, "method_name": "showAccountType", "class_name": "DepositAccount", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void showAccountType() {\n        System.out.println(\"\u8fd9\u662f\u4e00\u4e2a\u5b9a\u671f\u8d26\u53f7\");\n    }", "url": "https://raw.githubusercontent.com/wangIQD/GoF23/master/GOF23/DesignPattern/src/com/wz/structural/bridge/DepositAccount.java", "stars": "2", "class_props": {"extends": null, "implements": ["Account"], "modifiers": ["public"]}}, {"id": 61639, "method_name": "redirectOutAndErrToLog", "class_name": "StdOutErrRedirect", "params": [], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "  public static void redirectOutAndErrToLog() {\n    System.setOut(infoStream);\n    System.setErr(errorStream);\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/utils/StdOutErrRedirect.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 61640, "method_name": "createStream", "class_name": "StdOutErrRedirect", "params": ["PrintStream", "Level"], "throws": null, "modifiers": ["static", "private"], "return_type": "PrintStream", "snippet": "  private static PrintStream createStream(final PrintStream stream, final Level level) {\n    return new LogStream(stream, level);\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/utils/StdOutErrRedirect.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 61641, "method_name": "write", "class_name": "LogStream", "params": ["String"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void write(final String string) {\n      logger.log(this.level, string);\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/utils/StdOutErrRedirect.java", "stars": "18", "class_props": {"extends": "PrintStream", "implements": null, "modifiers": ["static", "private"]}}, {"id": 61642, "method_name": "println", "class_name": "LogStream", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void println(final String string) {\n      print(string);\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/utils/StdOutErrRedirect.java", "stars": "18", "class_props": {"extends": "PrintStream", "implements": null, "modifiers": ["static", "private"]}}, {"id": 61643, "method_name": "print", "class_name": "LogStream", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void print(final String string) {\n      write(string);\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/utils/StdOutErrRedirect.java", "stars": "18", "class_props": {"extends": "PrintStream", "implements": null, "modifiers": ["static", "private"]}}, {"id": 61644, "method_name": "println", "class_name": "LogStream", "params": ["boolean"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void println(final boolean bool) {\n      print(bool);\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/utils/StdOutErrRedirect.java", "stars": "18", "class_props": {"extends": "PrintStream", "implements": null, "modifiers": ["static", "private"]}}, {"id": 61645, "method_name": "print", "class_name": "LogStream", "params": ["boolean"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void print(final boolean bool) {\n      write(String.valueOf(bool));\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/utils/StdOutErrRedirect.java", "stars": "18", "class_props": {"extends": "PrintStream", "implements": null, "modifiers": ["static", "private"]}}, {"id": 61646, "method_name": "println", "class_name": "LogStream", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void println(final int i) {\n      print(i);\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/utils/StdOutErrRedirect.java", "stars": "18", "class_props": {"extends": "PrintStream", "implements": null, "modifiers": ["static", "private"]}}, {"id": 61647, "method_name": "print", "class_name": "LogStream", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void print(final int i) {\n      write(String.valueOf(i));\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/utils/StdOutErrRedirect.java", "stars": "18", "class_props": {"extends": "PrintStream", "implements": null, "modifiers": ["static", "private"]}}, {"id": 61648, "method_name": "println", "class_name": "LogStream", "params": ["float"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void println(final float f) {\n      print(f);\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/utils/StdOutErrRedirect.java", "stars": "18", "class_props": {"extends": "PrintStream", "implements": null, "modifiers": ["static", "private"]}}, {"id": 61649, "method_name": "print", "class_name": "LogStream", "params": ["float"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void print(final float f) {\n      write(String.valueOf(f));\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/utils/StdOutErrRedirect.java", "stars": "18", "class_props": {"extends": "PrintStream", "implements": null, "modifiers": ["static", "private"]}}, {"id": 61650, "method_name": "println", "class_name": "LogStream", "params": ["char"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void println(final char c) {\n      print(c);\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/utils/StdOutErrRedirect.java", "stars": "18", "class_props": {"extends": "PrintStream", "implements": null, "modifiers": ["static", "private"]}}, {"id": 61651, "method_name": "print", "class_name": "LogStream", "params": ["char"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void print(final char c) {\n      write(String.valueOf(c));\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/utils/StdOutErrRedirect.java", "stars": "18", "class_props": {"extends": "PrintStream", "implements": null, "modifiers": ["static", "private"]}}, {"id": 61652, "method_name": "println", "class_name": "LogStream", "params": ["long"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void println(final long l) {\n      print(l);\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/utils/StdOutErrRedirect.java", "stars": "18", "class_props": {"extends": "PrintStream", "implements": null, "modifiers": ["static", "private"]}}, {"id": 61653, "method_name": "print", "class_name": "LogStream", "params": ["long"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void print(final long l) {\n      write(String.valueOf(l));\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/utils/StdOutErrRedirect.java", "stars": "18", "class_props": {"extends": "PrintStream", "implements": null, "modifiers": ["static", "private"]}}, {"id": 61654, "method_name": "println", "class_name": "LogStream", "params": ["double"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void println(final double d) {\n      print(d);\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/utils/StdOutErrRedirect.java", "stars": "18", "class_props": {"extends": "PrintStream", "implements": null, "modifiers": ["static", "private"]}}, {"id": 61655, "method_name": "print", "class_name": "LogStream", "params": ["double"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void print(final double d) {\n      write(String.valueOf(d));\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/utils/StdOutErrRedirect.java", "stars": "18", "class_props": {"extends": "PrintStream", "implements": null, "modifiers": ["static", "private"]}}, {"id": 61656, "method_name": "println", "class_name": "LogStream", "params": ["char"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void println(final char[] c) {\n      print(c);\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/utils/StdOutErrRedirect.java", "stars": "18", "class_props": {"extends": "PrintStream", "implements": null, "modifiers": ["static", "private"]}}, {"id": 61657, "method_name": "print", "class_name": "LogStream", "params": ["char"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void print(final char[] c) {\n      write(new String(c));\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/utils/StdOutErrRedirect.java", "stars": "18", "class_props": {"extends": "PrintStream", "implements": null, "modifiers": ["static", "private"]}}, {"id": 61658, "method_name": "println", "class_name": "LogStream", "params": ["Object"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void println(final Object o) {\n      print(o);\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/utils/StdOutErrRedirect.java", "stars": "18", "class_props": {"extends": "PrintStream", "implements": null, "modifiers": ["static", "private"]}}, {"id": 61659, "method_name": "print", "class_name": "LogStream", "params": ["Object"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void print(final Object o) {\n      write(o.toString());\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/utils/StdOutErrRedirect.java", "stars": "18", "class_props": {"extends": "PrintStream", "implements": null, "modifiers": ["static", "private"]}}, {"id": 61660, "method_name": "getId", "class_name": "UserBuyRecord", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Long", "snippet": "    public Long getId() {\n        return id;\n    }", "url": "https://raw.githubusercontent.com/201206030/novel-plus/master/novel-common/src/main/java/com/java2nb/novel/entity/UserBuyRecord.java", "stars": "137", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 61661, "method_name": "setId", "class_name": "UserBuyRecord", "params": ["Long"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setId(Long id) {\n        this.id = id;\n    }", "url": "https://raw.githubusercontent.com/201206030/novel-plus/master/novel-common/src/main/java/com/java2nb/novel/entity/UserBuyRecord.java", "stars": "137", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 61662, "method_name": "getUserId", "class_name": "UserBuyRecord", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Long", "snippet": "    public Long getUserId() {\n        return userId;\n    }", "url": "https://raw.githubusercontent.com/201206030/novel-plus/master/novel-common/src/main/java/com/java2nb/novel/entity/UserBuyRecord.java", "stars": "137", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 61663, "method_name": "setUserId", "class_name": "UserBuyRecord", "params": ["Long"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setUserId(Long userId) {\n        this.userId = userId;\n    }", "url": "https://raw.githubusercontent.com/201206030/novel-plus/master/novel-common/src/main/java/com/java2nb/novel/entity/UserBuyRecord.java", "stars": "137", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 61664, "method_name": "getBookId", "class_name": "UserBuyRecord", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Long", "snippet": "    public Long getBookId() {\n        return bookId;\n    }", "url": "https://raw.githubusercontent.com/201206030/novel-plus/master/novel-common/src/main/java/com/java2nb/novel/entity/UserBuyRecord.java", "stars": "137", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 61665, "method_name": "setBookId", "class_name": "UserBuyRecord", "params": ["Long"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setBookId(Long bookId) {\n        this.bookId = bookId;\n    }", "url": "https://raw.githubusercontent.com/201206030/novel-plus/master/novel-common/src/main/java/com/java2nb/novel/entity/UserBuyRecord.java", "stars": "137", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 61666, "method_name": "getBookName", "class_name": "UserBuyRecord", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getBookName() {\n        return bookName;\n    }", "url": "https://raw.githubusercontent.com/201206030/novel-plus/master/novel-common/src/main/java/com/java2nb/novel/entity/UserBuyRecord.java", "stars": "137", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 61667, "method_name": "setBookName", "class_name": "UserBuyRecord", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setBookName(String bookName) {\n        this.bookName = bookName == null ? null : bookName.trim();\n    }", "url": "https://raw.githubusercontent.com/201206030/novel-plus/master/novel-common/src/main/java/com/java2nb/novel/entity/UserBuyRecord.java", "stars": "137", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 61668, "method_name": "getBookIndexId", "class_name": "UserBuyRecord", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Long", "snippet": "    public Long getBookIndexId() {\n        return bookIndexId;\n    }", "url": "https://raw.githubusercontent.com/201206030/novel-plus/master/novel-common/src/main/java/com/java2nb/novel/entity/UserBuyRecord.java", "stars": "137", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 61669, "method_name": "setBookIndexId", "class_name": "UserBuyRecord", "params": ["Long"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setBookIndexId(Long bookIndexId) {\n        this.bookIndexId = bookIndexId;\n    }", "url": "https://raw.githubusercontent.com/201206030/novel-plus/master/novel-common/src/main/java/com/java2nb/novel/entity/UserBuyRecord.java", "stars": "137", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 61670, "method_name": "getBookIndexName", "class_name": "UserBuyRecord", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getBookIndexName() {\n        return bookIndexName;\n    }", "url": "https://raw.githubusercontent.com/201206030/novel-plus/master/novel-common/src/main/java/com/java2nb/novel/entity/UserBuyRecord.java", "stars": "137", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 61671, "method_name": "setBookIndexName", "class_name": "UserBuyRecord", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setBookIndexName(String bookIndexName) {\n        this.bookIndexName = bookIndexName == null ? null : bookIndexName.trim();\n    }", "url": "https://raw.githubusercontent.com/201206030/novel-plus/master/novel-common/src/main/java/com/java2nb/novel/entity/UserBuyRecord.java", "stars": "137", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 61672, "method_name": "getBuyAmount", "class_name": "UserBuyRecord", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Integer", "snippet": "    public Integer getBuyAmount() {\n        return buyAmount;\n    }", "url": "https://raw.githubusercontent.com/201206030/novel-plus/master/novel-common/src/main/java/com/java2nb/novel/entity/UserBuyRecord.java", "stars": "137", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 61673, "method_name": "setBuyAmount", "class_name": "UserBuyRecord", "params": ["Integer"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setBuyAmount(Integer buyAmount) {\n        this.buyAmount = buyAmount;\n    }", "url": "https://raw.githubusercontent.com/201206030/novel-plus/master/novel-common/src/main/java/com/java2nb/novel/entity/UserBuyRecord.java", "stars": "137", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 61674, "method_name": "getCreateTime", "class_name": "UserBuyRecord", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Date", "snippet": "    public Date getCreateTime() {\n        return createTime;\n    }", "url": "https://raw.githubusercontent.com/201206030/novel-plus/master/novel-common/src/main/java/com/java2nb/novel/entity/UserBuyRecord.java", "stars": "137", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 61675, "method_name": "setCreateTime", "class_name": "UserBuyRecord", "params": ["Date"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setCreateTime(Date createTime) {\n        this.createTime = createTime;\n    }", "url": "https://raw.githubusercontent.com/201206030/novel-plus/master/novel-common/src/main/java/com/java2nb/novel/entity/UserBuyRecord.java", "stars": "137", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 61676, "method_name": "onCreate", "class_name": "MyProjectsActivity", "params": ["Bundle"], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        setContentView(R.layout.activity_my_projects);\n        findViews();\n        initLogic();\n    }", "url": "https://raw.githubusercontent.com/justneon33/Sketchcode/master/app/src/main/java/com/sketch/code/two/activity/MyProjectsActivity.java", "stars": "4", "class_props": {"extends": "AppCompatActivity", "implements": null, "modifiers": ["public"]}}, {"id": 61677, "method_name": "findViews", "class_name": "MyProjectsActivity", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void findViews () {\n        viewPager = findViewById(R.id.viewPager);\n        tabLayout = findViewById(R.id.tabLayout);\n        toolbar = findViewById(R.id.toolbar);\n    }", "url": "https://raw.githubusercontent.com/justneon33/Sketchcode/master/app/src/main/java/com/sketch/code/two/activity/MyProjectsActivity.java", "stars": "4", "class_props": {"extends": "AppCompatActivity", "implements": null, "modifiers": ["public"]}}, {"id": 61678, "method_name": "initLogic", "class_name": "MyProjectsActivity", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void initLogic () {\n        setSupportActionBar(toolbar);\n        toolbar.setNavigationOnClickListener(v -> finish());\n        initViewPager();\n    }", "url": "https://raw.githubusercontent.com/justneon33/Sketchcode/master/app/src/main/java/com/sketch/code/two/activity/MyProjectsActivity.java", "stars": "4", "class_props": {"extends": "AppCompatActivity", "implements": null, "modifiers": ["public"]}}, {"id": 61679, "method_name": "initViewPager", "class_name": "MyProjectsActivity", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void initViewPager () {\n        viewPager.setAdapter(new MyProjectsAdapter(getSupportFragmentManager(), getApplicationContext()));\n        tabLayout.setupWithViewPager(viewPager);\n    }", "url": "https://raw.githubusercontent.com/justneon33/Sketchcode/master/app/src/main/java/com/sketch/code/two/activity/MyProjectsActivity.java", "stars": "4", "class_props": {"extends": "AppCompatActivity", "implements": null, "modifiers": ["public"]}}, {"id": 61680, "method_name": "run", "class_name": "Byd", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void run() {\n        System.out.println(\"\u6bd4\u4e9a\u8fea\u5728\u516c\u8def\u4e0a\u884c\u9a76\");\n    }", "url": "https://raw.githubusercontent.com/wangIQD/GoF23/master/GOF23/DesignPattern/src/com/wz/creational/simplefactory/Byd.java", "stars": "2", "class_props": {"extends": "Car", "implements": null, "modifiers": ["public"]}}, {"id": 61681, "method_name": "getLocalDc", "class_name": "LocalDcSupplier", "params": [], "throws": null, "modifiers": ["public", "static"], "return_type": "String", "snippet": "    public static String getLocalDc()\n    {\n        return LOCAL_DC_SUPPLIER.get();\n    }", "url": "https://raw.githubusercontent.com/datastax/metric-collector-for-apache-cassandra/master/src/main/java/com/datastax/mcac/utils/LocalDcSupplier.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 61682, "method_name": "doFilterInternal", "class_name": "ValidateCodeFilter", "params": ["HttpServletRequest", "HttpServletResponse", "FilterChain"], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void doFilterInternal(HttpServletRequest request, HttpServletResponse response, FilterChain filterChain) {\n        boolean match = securityProperties.getValidateCodeUrls()\n                .stream()\n                .anyMatch(requestMatcher -> new AntPathRequestMatcher(requestMatcher).matches(request));\n\n        if (match) {\n            String key = request.getParameter(\"key\");\n            String code = request.getParameter(\"code\");\n            boolean b = ValidateCodeUtil.verifyCaptcha(key, code);\n            if (!b) {\n                SecurityUtil.writeToResponse(R.err(HttpStatus.HTTP_UNAUTHORIZED, \"\u9a8c\u8bc1\u7801\u9519\u8bef\"), response);\n                return;\n            }\n        }\n        filterChain.doFilter(request, response);\n    }", "url": "https://raw.githubusercontent.com/taoroot/taoiot/master/src/main/java/com/github/taoroot/taoiot/security/filter/ValidateCodeFilter.java", "stars": "6", "class_props": {"extends": "OncePerRequestFilter", "implements": null, "modifiers": ["public"]}}, {"id": 61683, "method_name": "main", "class_name": "interface_demo", "params": ["String"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void main(String args[]){\n//        Computer mycom = new Computer();\n//        IUSB mykey = new Keyboard();\n//        IUSB myprint = new Print();\n//        mycom.plugin(mykey);\n//        mycom.plugin(myprint);\n\n        IUSB usb = Factory.getInstance(\"Keyboard\");\n        usb.work();\n    }", "url": "https://raw.githubusercontent.com/hzc869046779/JAVA-STUDY/master/src/javaStudy/interface_study/interface_demo.java", "stars": "10", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 61684, "method_name": "plugin", "class_name": "Computer", "params": ["IUSB"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void plugin(IUSB usb){\n        if (usb.check()){\n            usb.work();\n        }\n    }", "url": "https://raw.githubusercontent.com/hzc869046779/JAVA-STUDY/master/src/javaStudy/interface_study/interface_demo.java", "stars": "10", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 61685, "method_name": "check", "class_name": "Keyboard", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean check(){\n        return true;\n    }", "url": "https://raw.githubusercontent.com/hzc869046779/JAVA-STUDY/master/src/javaStudy/interface_study/interface_demo.java", "stars": "10", "class_props": {"extends": null, "implements": ["IUSB"], "modifiers": []}}, {"id": 61686, "method_name": "work", "class_name": "Keyboard", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void work(){\n        System.out.println(\"\u5f00\u59cb\u8fdb\u884c\u7801\u5b57\u4efb\u52a1\u3002\");\n    }", "url": "https://raw.githubusercontent.com/hzc869046779/JAVA-STUDY/master/src/javaStudy/interface_study/interface_demo.java", "stars": "10", "class_props": {"extends": null, "implements": ["IUSB"], "modifiers": []}}, {"id": 61687, "method_name": "check", "class_name": "Print", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean check(){\n        return false;\n    }", "url": "https://raw.githubusercontent.com/hzc869046779/JAVA-STUDY/master/src/javaStudy/interface_study/interface_demo.java", "stars": "10", "class_props": {"extends": null, "implements": ["IUSB"], "modifiers": []}}, {"id": 61688, "method_name": "work", "class_name": "Print", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void work(){\n        System.out.println(\"\u5f00\u59cb\u8fdb\u884c\u7167\u7247\u6253\u5370\");\n    }", "url": "https://raw.githubusercontent.com/hzc869046779/JAVA-STUDY/master/src/javaStudy/interface_study/interface_demo.java", "stars": "10", "class_props": {"extends": null, "implements": ["IUSB"], "modifiers": []}}, {"id": 61689, "method_name": "getInstance", "class_name": "Factory", "params": ["String"], "throws": null, "modifiers": ["public", "static"], "return_type": "IUSB", "snippet": "    public static IUSB getInstance(String className){\n        if(\"Keyboard\".equals(className)){\n            return new Keyboard();\n        }else if(\"Print\".equals(className)){\n            return new Print();\n        }else {\n            return null;\n        }\n    }", "url": "https://raw.githubusercontent.com/hzc869046779/JAVA-STUDY/master/src/javaStudy/interface_study/interface_demo.java", "stars": "10", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 61690, "method_name": "main", "class_name": "StrCount", "params": ["String"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "\tpublic static void main(String[] args) {\n\t\t/**\n\t\t *  Program should ask a user to type any word\n\t\t *  It will print the number of letters in the given word\n\t\t */\n\t\t\n\t\tScanner scanner = new Scanner(System.in);\n\t\t\n\t\tSystem.out.println(\"Enter any word: \");\n\t\tString word = scanner.next();\n\t\t               \n\t\tint count = word.length();\n\t\t\n\t\tSystem.out.println(\"Your word has \" + count + \" letters inside\");\n\t}", "url": "https://raw.githubusercontent.com/Suranchiyev/java-sdet-2020/master/src/day10/StrCount.java", "stars": "21", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 61691, "method_name": "forObject", "class_name": "MetaObject", "params": ["Object", "ObjectFactory", "ObjectWrapperFactory", "ReflectorFactory"], "throws": null, "modifiers": ["public", "static"], "return_type": "MetaObject", "snippet": "  public static MetaObject forObject(Object object, ObjectFactory objectFactory, ObjectWrapperFactory objectWrapperFactory, ReflectorFactory reflectorFactory) {\n    if (object == null) {\n      return SystemMetaObject.NULL_META_OBJECT;\n    } else {\n      return new MetaObject(object, objectFactory, objectWrapperFactory, reflectorFactory);\n    }\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/reflection/MetaObject.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 61692, "method_name": "getObjectFactory", "class_name": "MetaObject", "params": [], "throws": null, "modifiers": ["public"], "return_type": "ObjectFactory", "snippet": "  public ObjectFactory getObjectFactory() {\n    return objectFactory;\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/reflection/MetaObject.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 61693, "method_name": "getObjectWrapperFactory", "class_name": "MetaObject", "params": [], "throws": null, "modifiers": ["public"], "return_type": "ObjectWrapperFactory", "snippet": "  public ObjectWrapperFactory getObjectWrapperFactory() {\n    return objectWrapperFactory;\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/reflection/MetaObject.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 61694, "method_name": "getReflectorFactory", "class_name": "MetaObject", "params": [], "throws": null, "modifiers": ["public"], "return_type": "ReflectorFactory", "snippet": "  public ReflectorFactory getReflectorFactory() {\n    return reflectorFactory;\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/reflection/MetaObject.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 61695, "method_name": "getOriginalObject", "class_name": "MetaObject", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Object", "snippet": "  public Object getOriginalObject() {\n    return originalObject;\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/reflection/MetaObject.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 61696, "method_name": "findProperty", "class_name": "MetaObject", "params": ["String", "boolean"], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "  public String findProperty(String propName, boolean useCamelCaseMapping) {\n    return objectWrapper.findProperty(propName, useCamelCaseMapping);\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/reflection/MetaObject.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 61697, "method_name": "getGetterNames", "class_name": "MetaObject", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "  public String[] getGetterNames() {\n    return objectWrapper.getGetterNames();\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/reflection/MetaObject.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 61698, "method_name": "getSetterNames", "class_name": "MetaObject", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "  public String[] getSetterNames() {\n    return objectWrapper.getSetterNames();\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/reflection/MetaObject.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 61699, "method_name": "getSetterType", "class_name": "MetaObject", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "Class<?>", "snippet": "  public Class<?> getSetterType(String name) {\n    return objectWrapper.getSetterType(name);\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/reflection/MetaObject.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 61700, "method_name": "getGetterType", "class_name": "MetaObject", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "Class<?>", "snippet": "  public Class<?> getGetterType(String name) {\n    return objectWrapper.getGetterType(name);\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/reflection/MetaObject.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 61701, "method_name": "hasSetter", "class_name": "MetaObject", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "  public boolean hasSetter(String name) {\n    return objectWrapper.hasSetter(name);\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/reflection/MetaObject.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 61702, "method_name": "hasGetter", "class_name": "MetaObject", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "  public boolean hasGetter(String name) {\n    return objectWrapper.hasGetter(name);\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/reflection/MetaObject.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 61703, "method_name": "getValue", "class_name": "MetaObject", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "Object", "snippet": "  public Object getValue(String name) {\n    PropertyTokenizer prop = new PropertyTokenizer(name);\n    if (prop.hasNext()) {\n      MetaObject metaValue = metaObjectForProperty(prop.getIndexedName());\n      if (metaValue == SystemMetaObject.NULL_META_OBJECT) {\n        return null;\n      } else {\n        return metaValue.getValue(prop.getChildren());\n      }\n    } else {\n      return objectWrapper.get(prop);\n    }\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/reflection/MetaObject.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 61704, "method_name": "setValue", "class_name": "MetaObject", "params": ["String", "Object"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void setValue(String name, Object value) {\n    PropertyTokenizer prop = new PropertyTokenizer(name);\n    if (prop.hasNext()) {\n      MetaObject metaValue = metaObjectForProperty(prop.getIndexedName());\n      if (metaValue == SystemMetaObject.NULL_META_OBJECT) {\n        if (value == null) {\n          // don't instantiate child path if value is null\n          return;\n        } else {\n          metaValue = objectWrapper.instantiatePropertyValue(name, prop, objectFactory);\n        }\n      }\n      metaValue.setValue(prop.getChildren(), value);\n    } else {\n      objectWrapper.set(prop, value);\n    }\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/reflection/MetaObject.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 61705, "method_name": "metaObjectForProperty", "class_name": "MetaObject", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "MetaObject", "snippet": "  public MetaObject metaObjectForProperty(String name) {\n    Object value = getValue(name);\n    return MetaObject.forObject(value, objectFactory, objectWrapperFactory, reflectorFactory);\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/reflection/MetaObject.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 61706, "method_name": "getObjectWrapper", "class_name": "MetaObject", "params": [], "throws": null, "modifiers": ["public"], "return_type": "ObjectWrapper", "snippet": "  public ObjectWrapper getObjectWrapper() {\n    return objectWrapper;\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/reflection/MetaObject.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 61707, "method_name": "isCollection", "class_name": "MetaObject", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "  public boolean isCollection() {\n    return objectWrapper.isCollection();\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/reflection/MetaObject.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 61708, "method_name": "add", "class_name": "MetaObject", "params": ["Object"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void add(Object element) {\n    objectWrapper.add(element);\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/reflection/MetaObject.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 61709, "method_name": "addAll", "class_name": "MetaObject", "params": ["List<E>"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public <E> void addAll(List<E> list) {\n    objectWrapper.addAll(list);\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/reflection/MetaObject.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 61710, "method_name": "apiInfo", "class_name": "SwaggerDocumentationConfig", "params": [], "throws": null, "modifiers": [], "return_type": "ApiInfo", "snippet": "    ApiInfo apiInfo() {\n        return new ApiInfoBuilder()\n            .title(\"User Administration API\")\n            .description(\"## API of User Administration Services  This specification describes the endpoints, request/response model of the User Administration API. This API provides REST resources to manage musics of Music Hoster application.\")\n            .license(\"\")\n            .licenseUrl(\"http://unlicense.org\")\n            .termsOfServiceUrl(\"\")\n            .version(\"1.0.0\")\n            .contact(new Contact(\"\",\"\", \"\"))\n            .build();\n    }", "url": "https://raw.githubusercontent.com/aayush-grover/SoundCloud-Rest-Api/master/musichoster-api/target/generated-sources/io/swagger/configuration/SwaggerDocumentationConfig.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 61711, "method_name": "customImplementation", "class_name": "SwaggerDocumentationConfig", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Docket", "snippet": "    public Docket customImplementation(){\n        return new Docket(DocumentationType.SWAGGER_2)\n                .select()\n                    .apis(RequestHandlerSelectors.basePackage(\"io.swagger.api\"))\n                    .build()\n                .directModelSubstitute(java.time.LocalDate.class, java.sql.Date.class)\n                .directModelSubstitute(java.time.OffsetDateTime.class, java.util.Date.class)\n                .apiInfo(apiInfo());\n    }", "url": "https://raw.githubusercontent.com/aayush-grover/SoundCloud-Rest-Api/master/musichoster-api/target/generated-sources/io/swagger/configuration/SwaggerDocumentationConfig.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 61712, "method_name": "findSubscriberMethods", "class_name": "SubscriberMethodFinder", "params": ["Class<?>"], "throws": null, "modifiers": [], "return_type": "List<SubscriberMethod>", "snippet": "    List<SubscriberMethod> findSubscriberMethods(Class<?> subscriberClass) {\n        List<SubscriberMethod> subscriberMethods = METHOD_CACHE.get(subscriberClass);\n        if (subscriberMethods != null) {\n            return subscriberMethods;\n        }\n\n        if (ignoreGeneratedIndex) {\n            subscriberMethods = findUsingReflection(subscriberClass);\n        } else {\n            subscriberMethods = findUsingInfo(subscriberClass);\n        }\n        if (subscriberMethods.isEmpty()) {\n            throw new EventBusException(\"Subscriber \" + subscriberClass\n                    + \" and its super classes have no public methods with the @Subscribe annotation\");\n        } else {\n            METHOD_CACHE.put(subscriberClass, subscriberMethods);\n            return subscriberMethods;\n        }\n    }", "url": "https://raw.githubusercontent.com/chenjk-520/keventbus/master/keventbus/src/main/java/com/util/keventbus/SubscriberMethodFinder.java", "stars": "7", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 61713, "method_name": "findUsingInfo", "class_name": "SubscriberMethodFinder", "params": ["Class<?>"], "throws": null, "modifiers": ["private"], "return_type": "List<SubscriberMethod>", "snippet": "    private List<SubscriberMethod> findUsingInfo(Class<?> subscriberClass) {\n        FindState findState = prepareFindState();\n        findState.initForSubscriber(subscriberClass);\n        while (findState.clazz != null) {\n            findState.subscriberInfo = getSubscriberInfo(findState);\n            if (findState.subscriberInfo != null) {\n                SubscriberMethod[] array = findState.subscriberInfo.getSubscriberMethods();\n                for (SubscriberMethod subscriberMethod : array) {\n                    if (findState.checkAdd(subscriberMethod.method, subscriberMethod.eventType)) {\n                        findState.subscriberMethods.add(subscriberMethod);\n                    }\n                }\n            } else {\n                findUsingReflectionInSingleClass(findState);\n            }\n            findState.moveToSuperclass();\n        }\n        return getMethodsAndRelease(findState);\n    }", "url": "https://raw.githubusercontent.com/chenjk-520/keventbus/master/keventbus/src/main/java/com/util/keventbus/SubscriberMethodFinder.java", "stars": "7", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 61714, "method_name": "getMethodsAndRelease", "class_name": "SubscriberMethodFinder", "params": ["FindState"], "throws": null, "modifiers": ["private"], "return_type": "List<SubscriberMethod>", "snippet": "    private List<SubscriberMethod> getMethodsAndRelease(FindState findState) {\n        List<SubscriberMethod> subscriberMethods = new ArrayList<>(findState.subscriberMethods);\n        findState.recycle();\n        synchronized (FIND_STATE_POOL) {\n            for (int i = 0; i < POOL_SIZE; i++) {\n                if (FIND_STATE_POOL[i] == null) {\n                    FIND_STATE_POOL[i] = findState;\n                    break;\n                }\n            }\n        }\n        return subscriberMethods;\n    }", "url": "https://raw.githubusercontent.com/chenjk-520/keventbus/master/keventbus/src/main/java/com/util/keventbus/SubscriberMethodFinder.java", "stars": "7", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 61715, "method_name": "prepareFindState", "class_name": "SubscriberMethodFinder", "params": [], "throws": null, "modifiers": ["private"], "return_type": "FindState", "snippet": "    private FindState prepareFindState() {\n        synchronized (FIND_STATE_POOL) {\n            for (int i = 0; i < POOL_SIZE; i++) {\n                FindState state = FIND_STATE_POOL[i];\n                if (state != null) {\n                    FIND_STATE_POOL[i] = null;\n                    return state;\n                }\n            }\n        }\n        return new FindState();\n    }", "url": "https://raw.githubusercontent.com/chenjk-520/keventbus/master/keventbus/src/main/java/com/util/keventbus/SubscriberMethodFinder.java", "stars": "7", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 61716, "method_name": "getSubscriberInfo", "class_name": "SubscriberMethodFinder", "params": ["FindState"], "throws": null, "modifiers": ["private"], "return_type": "SubscriberInfo", "snippet": "    private SubscriberInfo getSubscriberInfo(FindState findState) {\n        if (findState.subscriberInfo != null && findState.subscriberInfo.getSuperSubscriberInfo() != null) {\n            SubscriberInfo superclassInfo = findState.subscriberInfo.getSuperSubscriberInfo();\n            if (findState.clazz == superclassInfo.getSubscriberClass()) {\n                return superclassInfo;\n            }\n        }\n        if (subscriberInfoIndexes != null) {\n            for (SubscriberInfoIndex index : subscriberInfoIndexes) {\n                SubscriberInfo info = index.getSubscriberInfo(findState.clazz);\n                if (info != null) {\n                    return info;\n                }\n            }\n        }\n        return null;\n    }", "url": "https://raw.githubusercontent.com/chenjk-520/keventbus/master/keventbus/src/main/java/com/util/keventbus/SubscriberMethodFinder.java", "stars": "7", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 61717, "method_name": "findUsingReflection", "class_name": "SubscriberMethodFinder", "params": ["Class<?>"], "throws": null, "modifiers": ["private"], "return_type": "List<SubscriberMethod>", "snippet": "    private List<SubscriberMethod> findUsingReflection(Class<?> subscriberClass) {\n        FindState findState = prepareFindState();\n        findState.initForSubscriber(subscriberClass);\n        while (findState.clazz != null) {\n            findUsingReflectionInSingleClass(findState);\n            findState.moveToSuperclass();\n        }\n        return getMethodsAndRelease(findState);\n    }", "url": "https://raw.githubusercontent.com/chenjk-520/keventbus/master/keventbus/src/main/java/com/util/keventbus/SubscriberMethodFinder.java", "stars": "7", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 61718, "method_name": "findUsingReflectionInSingleClass", "class_name": "SubscriberMethodFinder", "params": ["FindState"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void findUsingReflectionInSingleClass(FindState findState) {\n        Method[] methods;\n        try {\n            // This is faster than getMethods, especially when subscribers are fat classes like Activities\n            methods = findState.clazz.getDeclaredMethods();\n        } catch (Throwable th) {\n            // Workaround for java.lang.NoClassDefFoundError, see https://github.com/greenrobot/EventBus/issues/149\n            methods = findState.clazz.getMethods();\n            findState.skipSuperClasses = true;\n        }\n        for (Method method : methods) {\n            method.setAccessible(true);\n            int modifiers = method.getModifiers();\n//            if ((modifiers & Modifier.PUBLIC) != 0 && (modifiers & MODIFIERS_IGNORE) == 0) {\n                Class<?>[] parameterTypes = method.getParameterTypes();\n                if (parameterTypes.length == 1) {\n                    Subscribe subscribeAnnotation = method.getAnnotation(Subscribe.class);\n                    if (subscribeAnnotation != null) {\n                        Class<?> eventType = parameterTypes[0];\n                        if (findState.checkAdd(method, eventType)) {\n                            ThreadMode threadMode = subscribeAnnotation.threadMode();\n                            findState.subscriberMethods.add(new SubscriberMethod(method, eventType, threadMode,\n                                    subscribeAnnotation.priority(), subscribeAnnotation.sticky(),subscribeAnnotation.event(),subscribeAnnotation.enback()));\n                        }\n                    }\n                } else if (strictMethodVerification && method.isAnnotationPresent(Subscribe.class)) {\n                    String methodName = method.getDeclaringClass().getName() + \".\" + method.getName();\n                    throw new EventBusException(\"@Subscribe method \" + methodName +\n                            \"must have exactly 1 parameter but has \" + parameterTypes.length);\n                }\n//            } else if (strictMethodVerification && method.isAnnotationPresent(Subscribe.class)) {\n//                String methodName = method.getDeclaringClass().getName() + \".\" + method.getName();\n//                throw new EventBusException(methodName +\n//                        \" is a illegal @Subscribe method: must be public, non-static, and non-abstract\");\n//            }\n        }\n    }", "url": "https://raw.githubusercontent.com/chenjk-520/keventbus/master/keventbus/src/main/java/com/util/keventbus/SubscriberMethodFinder.java", "stars": "7", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 61719, "method_name": "clearCaches", "class_name": "SubscriberMethodFinder", "params": [], "throws": null, "modifiers": ["static"], "return_type": "void", "snippet": "    static void clearCaches() {\n        METHOD_CACHE.clear();\n    }", "url": "https://raw.githubusercontent.com/chenjk-520/keventbus/master/keventbus/src/main/java/com/util/keventbus/SubscriberMethodFinder.java", "stars": "7", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 61720, "method_name": "initForSubscriber", "class_name": "FindState", "params": ["Class<?>"], "throws": null, "modifiers": [], "return_type": "void", "snippet": "        void initForSubscriber(Class<?> subscriberClass) {\n            this.subscriberClass = clazz = subscriberClass;\n            skipSuperClasses = false;\n            subscriberInfo = null;\n        }", "url": "https://raw.githubusercontent.com/chenjk-520/keventbus/master/keventbus/src/main/java/com/util/keventbus/SubscriberMethodFinder.java", "stars": "7", "class_props": {"extends": null, "implements": null, "modifiers": ["static"]}}, {"id": 61721, "method_name": "recycle", "class_name": "FindState", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "        void recycle() {\n            subscriberMethods.clear();\n            anyMethodByEventType.clear();\n            subscriberClassByMethodKey.clear();\n            methodKeyBuilder.setLength(0);\n            subscriberClass = null;\n            clazz = null;\n            skipSuperClasses = false;\n            subscriberInfo = null;\n        }", "url": "https://raw.githubusercontent.com/chenjk-520/keventbus/master/keventbus/src/main/java/com/util/keventbus/SubscriberMethodFinder.java", "stars": "7", "class_props": {"extends": null, "implements": null, "modifiers": ["static"]}}, {"id": 61722, "method_name": "checkAdd", "class_name": "FindState", "params": ["Method", "Class<?>"], "throws": null, "modifiers": [], "return_type": "boolean", "snippet": "        boolean checkAdd(Method method, Class<?> eventType) {\n            // 2 level check: 1st level with event type only (fast), 2nd level with complete signature when required.\n            // Usually a subscriber doesn't have methods listening to the same event type.\n            Object existing = anyMethodByEventType.put(eventType, method);\n            if (existing == null) {\n                return true;\n            } else {\n                if (existing instanceof Method) {\n                    if (!checkAddWithMethodSignature((Method) existing, eventType)) {\n                        // Paranoia check\n                        throw new IllegalStateException();\n                    }\n                    // Put any non-Method object to \"consume\" the existing Method\n                    anyMethodByEventType.put(eventType, this);\n                }\n                return checkAddWithMethodSignature(method, eventType);\n            }\n        }", "url": "https://raw.githubusercontent.com/chenjk-520/keventbus/master/keventbus/src/main/java/com/util/keventbus/SubscriberMethodFinder.java", "stars": "7", "class_props": {"extends": null, "implements": null, "modifiers": ["static"]}}, {"id": 61723, "method_name": "checkAddWithMethodSignature", "class_name": "FindState", "params": ["Method", "Class<?>"], "throws": null, "modifiers": ["private"], "return_type": "boolean", "snippet": "        private boolean checkAddWithMethodSignature(Method method, Class<?> eventType) {\n            methodKeyBuilder.setLength(0);\n            methodKeyBuilder.append(method.getName());\n            methodKeyBuilder.append('>').append(eventType.getName());\n\n            String methodKey = methodKeyBuilder.toString();\n            Class<?> methodClass = method.getDeclaringClass();\n            Class<?> methodClassOld = subscriberClassByMethodKey.put(methodKey, methodClass);\n            if (methodClassOld == null || methodClassOld.isAssignableFrom(methodClass)) {\n                // Only add if not already found in a sub class\n                return true;\n            } else {\n                // Revert the put, old class is further down the class hierarchy\n                subscriberClassByMethodKey.put(methodKey, methodClassOld);\n                return false;\n            }\n        }", "url": "https://raw.githubusercontent.com/chenjk-520/keventbus/master/keventbus/src/main/java/com/util/keventbus/SubscriberMethodFinder.java", "stars": "7", "class_props": {"extends": null, "implements": null, "modifiers": ["static"]}}, {"id": 61724, "method_name": "moveToSuperclass", "class_name": "FindState", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "        void moveToSuperclass() {\n            if (skipSuperClasses) {\n                clazz = null;\n            } else {\n                clazz = clazz.getSuperclass();\n                String clazzName = clazz.getName();\n                /** Skip system classes, this just degrades performance. */\n                if (clazzName.startsWith(\"java.\") || clazzName.startsWith(\"javax.\") || clazzName.startsWith(\"android.\")) {\n                    clazz = null;\n                }\n            }\n        }", "url": "https://raw.githubusercontent.com/chenjk-520/keventbus/master/keventbus/src/main/java/com/util/keventbus/SubscriberMethodFinder.java", "stars": "7", "class_props": {"extends": null, "implements": null, "modifiers": ["static"]}}, {"id": 61725, "method_name": "getResultFromPy", "class_name": "Client", "params": ["String"], "throws": ["MyExcetion", "org.apache.thrift.TException"], "modifiers": ["public"], "return_type": "Message", "snippet": "    public Message getResultFromPy(String message) throws MyExcetion, org.apache.thrift.TException\n    {\n      send_getResultFromPy(message);\n      return recv_getResultFromPy();\n    }", "url": "https://raw.githubusercontent.com/zhuchangwu/lawyer-lover-cloud-backend/master/lawyer-lover-consumer/src/main/java/com/changwu/thrift/MessageService.java", "stars": "12", "class_props": {"extends": "org", "implements": ["Iface"], "modifiers": ["public", "static"]}}, {"id": 61726, "method_name": "send_getResultFromPy", "class_name": "Client", "params": ["String"], "throws": ["org.apache.thrift.TException"], "modifiers": ["public"], "return_type": "void", "snippet": "    public void send_getResultFromPy(String message) throws org.apache.thrift.TException\n    {\n      getResultFromPy_args args = new getResultFromPy_args();\n      args.setMessage(message);\n      sendBase(\"getResultFromPy\", args);\n    }", "url": "https://raw.githubusercontent.com/zhuchangwu/lawyer-lover-cloud-backend/master/lawyer-lover-consumer/src/main/java/com/changwu/thrift/MessageService.java", "stars": "12", "class_props": {"extends": "org", "implements": ["Iface"], "modifiers": ["public", "static"]}}, {"id": 61727, "method_name": "recv_getResultFromPy", "class_name": "Client", "params": [], "throws": ["MyExcetion", "org.apache.thrift.TException"], "modifiers": ["public"], "return_type": "Message", "snippet": "    public Message recv_getResultFromPy() throws MyExcetion, org.apache.thrift.TException\n    {\n      getResultFromPy_result result = new getResultFromPy_result();\n      receiveBase(result, \"getResultFromPy\");\n      if (result.isSetSuccess()) {\n        return result.success;\n      }\n      if (result.e != null) {\n        throw result.e;\n      }\n      throw new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.MISSING_RESULT, \"getResultFromPy failed: unknown result\");\n    }", "url": "https://raw.githubusercontent.com/zhuchangwu/lawyer-lover-cloud-backend/master/lawyer-lover-consumer/src/main/java/com/changwu/thrift/MessageService.java", "stars": "12", "class_props": {"extends": "org", "implements": ["Iface"], "modifiers": ["public", "static"]}}, {"id": 61728, "method_name": "getClient", "class_name": "Factory", "params": ["org"], "throws": null, "modifiers": ["public"], "return_type": "Client", "snippet": "      public Client getClient(org.apache.thrift.protocol.TProtocol prot) {\n        return new Client(prot);\n      }", "url": "https://raw.githubusercontent.com/zhuchangwu/lawyer-lover-cloud-backend/master/lawyer-lover-consumer/src/main/java/com/changwu/thrift/MessageService.java", "stars": "12", "class_props": {"extends": null, "implements": ["org"], "modifiers": ["public", "static"]}}, {"id": 61729, "method_name": "getClient", "class_name": "Factory", "params": ["org", "org"], "throws": null, "modifiers": ["public"], "return_type": "Client", "snippet": "      public Client getClient(org.apache.thrift.protocol.TProtocol iprot, org.apache.thrift.protocol.TProtocol oprot) {\n        return new Client(iprot, oprot);\n      }", "url": "https://raw.githubusercontent.com/zhuchangwu/lawyer-lover-cloud-backend/master/lawyer-lover-consumer/src/main/java/com/changwu/thrift/MessageService.java", "stars": "12", "class_props": {"extends": null, "implements": ["org"], "modifiers": ["public", "static"]}}, {"id": 61730, "method_name": "getResultFromPy", "class_name": "AsyncClient", "params": ["String", "org"], "throws": ["org.apache.thrift.TException"], "modifiers": ["public"], "return_type": "void", "snippet": "    public void getResultFromPy(String message, org.apache.thrift.async.AsyncMethodCallback<Message> resultHandler) throws org.apache.thrift.TException {\n      checkReady();\n      getResultFromPy_call method_call = new getResultFromPy_call(message, resultHandler, this, ___protocolFactory, ___transport);\n      this.___currentMethod = method_call;\n      ___manager.call(method_call);\n    }", "url": "https://raw.githubusercontent.com/zhuchangwu/lawyer-lover-cloud-backend/master/lawyer-lover-consumer/src/main/java/com/changwu/thrift/MessageService.java", "stars": "12", "class_props": {"extends": "org", "implements": ["AsyncIface"], "modifiers": ["public", "static"]}}, {"id": 61731, "method_name": "getAsyncClient", "class_name": "Factory", "params": ["org"], "throws": null, "modifiers": ["public"], "return_type": "AsyncClient", "snippet": "      public AsyncClient getAsyncClient(org.apache.thrift.transport.TNonblockingTransport transport) {\n        return new AsyncClient(protocolFactory, clientManager, transport);\n      }", "url": "https://raw.githubusercontent.com/zhuchangwu/lawyer-lover-cloud-backend/master/lawyer-lover-consumer/src/main/java/com/changwu/thrift/MessageService.java", "stars": "12", "class_props": {"extends": null, "implements": ["org"], "modifiers": ["public", "static"]}}, {"id": 61732, "method_name": "write_args", "class_name": "getResultFromPy_call", "params": ["org"], "throws": ["org.apache.thrift.TException"], "modifiers": ["public"], "return_type": "void", "snippet": "      public void write_args(org.apache.thrift.protocol.TProtocol prot) throws org.apache.thrift.TException {\n        prot.writeMessageBegin(new org.apache.thrift.protocol.TMessage(\"getResultFromPy\", org.apache.thrift.protocol.TMessageType.CALL, 0));\n        getResultFromPy_args args = new getResultFromPy_args();\n        args.setMessage(message);\n        args.write(prot);\n        prot.writeMessageEnd();\n      }", "url": "https://raw.githubusercontent.com/zhuchangwu/lawyer-lover-cloud-backend/master/lawyer-lover-consumer/src/main/java/com/changwu/thrift/MessageService.java", "stars": "12", "class_props": {"extends": "org", "implements": null, "modifiers": ["public", "static"]}}, {"id": 61733, "method_name": "getResult", "class_name": "getResultFromPy_call", "params": [], "throws": ["MyExcetion", "org.apache.thrift.TException"], "modifiers": ["public"], "return_type": "Message", "snippet": "      public Message getResult() throws MyExcetion, org.apache.thrift.TException {\n        if (getState() != State.RESPONSE_READ) {\n          throw new IllegalStateException(\"Method call not finished!\");\n        }\n        org.apache.thrift.transport.TMemoryInputTransport memoryTransport = new org.apache.thrift.transport.TMemoryInputTransport(getFrameBuffer().array());\n        org.apache.thrift.protocol.TProtocol prot = client.getProtocolFactory().getProtocol(memoryTransport);\n        return (new Client(prot)).recv_getResultFromPy();\n      }", "url": "https://raw.githubusercontent.com/zhuchangwu/lawyer-lover-cloud-backend/master/lawyer-lover-consumer/src/main/java/com/changwu/thrift/MessageService.java", "stars": "12", "class_props": {"extends": "org", "implements": null, "modifiers": ["public", "static"]}}, {"id": 61734, "method_name": "getProcessMap", "class_name": "Processor", "params": ["java"], "throws": null, "modifiers": ["static", "private"], "return_type": "java", "snippet": "    private static <I extends Iface> java.util.Map<String,  org.apache.thrift.ProcessFunction<I, ? extends org.apache.thrift.TBase>> getProcessMap(java.util.Map<String, org.apache.thrift.ProcessFunction<I, ? extends  org.apache.thrift.TBase>> processMap) {\n      processMap.put(\"getResultFromPy\", new getResultFromPy());\n      return processMap;\n    }", "url": "https://raw.githubusercontent.com/zhuchangwu/lawyer-lover-cloud-backend/master/lawyer-lover-consumer/src/main/java/com/changwu/thrift/MessageService.java", "stars": "12", "class_props": {"extends": "org", "implements": ["org"], "modifiers": ["public", "static"]}}, {"id": 61735, "method_name": "getEmptyArgsInstance", "class_name": "getResultFromPy", "params": [], "throws": null, "modifiers": ["public"], "return_type": "getResultFromPy_args", "snippet": "      public getResultFromPy_args getEmptyArgsInstance() {\n        return new getResultFromPy_args();\n      }", "url": "https://raw.githubusercontent.com/zhuchangwu/lawyer-lover-cloud-backend/master/lawyer-lover-consumer/src/main/java/com/changwu/thrift/MessageService.java", "stars": "12", "class_props": {"extends": "org", "implements": null, "modifiers": ["public", "static"]}}, {"id": 61736, "method_name": "isOneway", "class_name": "getResultFromPy", "params": [], "throws": null, "modifiers": ["protected"], "return_type": "boolean", "snippet": "      protected boolean isOneway() {\n        return false;\n      }", "url": "https://raw.githubusercontent.com/zhuchangwu/lawyer-lover-cloud-backend/master/lawyer-lover-consumer/src/main/java/com/changwu/thrift/MessageService.java", "stars": "12", "class_props": {"extends": "org", "implements": null, "modifiers": ["public", "static"]}}, {"id": 61737, "method_name": "rethrowUnhandledExceptions", "class_name": "getResultFromPy", "params": [], "throws": null, "modifiers": ["protected"], "return_type": "boolean", "snippet": "      protected boolean rethrowUnhandledExceptions() {\n        return false;\n      }", "url": "https://raw.githubusercontent.com/zhuchangwu/lawyer-lover-cloud-backend/master/lawyer-lover-consumer/src/main/java/com/changwu/thrift/MessageService.java", "stars": "12", "class_props": {"extends": "org", "implements": null, "modifiers": ["public", "static"]}}, {"id": 61738, "method_name": "getResult", "class_name": "getResultFromPy", "params": ["I", "getResultFromPy_args"], "throws": ["org.apache.thrift.TException"], "modifiers": ["public"], "return_type": "getResultFromPy_result", "snippet": "      public getResultFromPy_result getResult(I iface, getResultFromPy_args args) throws org.apache.thrift.TException {\n        getResultFromPy_result result = new getResultFromPy_result();\n        try {\n          result.success = iface.getResultFromPy(args.message);\n        } catch (MyExcetion e) {\n          result.e = e;\n        }\n        return result;\n      }", "url": "https://raw.githubusercontent.com/zhuchangwu/lawyer-lover-cloud-backend/master/lawyer-lover-consumer/src/main/java/com/changwu/thrift/MessageService.java", "stars": "12", "class_props": {"extends": "org", "implements": null, "modifiers": ["public", "static"]}}, {"id": 61739, "method_name": "getProcessMap", "class_name": "AsyncProcessor", "params": ["java"], "throws": null, "modifiers": ["static", "private"], "return_type": "java", "snippet": "    private static <I extends AsyncIface> java.util.Map<String,  org.apache.thrift.AsyncProcessFunction<I, ? extends  org.apache.thrift.TBase,?>> getProcessMap(java.util.Map<String,  org.apache.thrift.AsyncProcessFunction<I, ? extends  org.apache.thrift.TBase, ?>> processMap) {\n      processMap.put(\"getResultFromPy\", new getResultFromPy());\n      return processMap;\n    }", "url": "https://raw.githubusercontent.com/zhuchangwu/lawyer-lover-cloud-backend/master/lawyer-lover-consumer/src/main/java/com/changwu/thrift/MessageService.java", "stars": "12", "class_props": {"extends": "org", "implements": null, "modifiers": ["public", "static"]}}, {"id": 61740, "method_name": "getEmptyArgsInstance", "class_name": "getResultFromPy", "params": [], "throws": null, "modifiers": ["public"], "return_type": "getResultFromPy_args", "snippet": "      public getResultFromPy_args getEmptyArgsInstance() {\n        return new getResultFromPy_args();\n      }", "url": "https://raw.githubusercontent.com/zhuchangwu/lawyer-lover-cloud-backend/master/lawyer-lover-consumer/src/main/java/com/changwu/thrift/MessageService.java", "stars": "12", "class_props": {"extends": "org", "implements": null, "modifiers": ["public", "static"]}}, {"id": 61741, "method_name": "getResultHandler", "class_name": "getResultFromPy", "params": ["org", "int"], "throws": null, "modifiers": ["public"], "return_type": "org", "snippet": "      public org.apache.thrift.async.AsyncMethodCallback<Message> getResultHandler(final org.apache.thrift.server.AbstractNonblockingServer.AsyncFrameBuffer fb, final int seqid) {\n        final org.apache.thrift.AsyncProcessFunction fcall = this;\n        return new org.apache.thrift.async.AsyncMethodCallback<Message>() {\n          public void onComplete(Message o) {\n            getResultFromPy_result result = new getResultFromPy_result();\n            result.success = o;\n            try {\n              fcall.sendResponse(fb, result, org.apache.thrift.protocol.TMessageType.REPLY,seqid);\n            } catch (org.apache.thrift.transport.TTransportException e) {\n              _LOGGER.error(\"TTransportException writing to internal frame buffer\", e);\n              fb.close();\n            } catch (Exception e) {\n              _LOGGER.error(\"Exception writing to internal frame buffer\", e);\n              onError(e);\n            }\n          }\n          public void onError(Exception e) {\n            byte msgType = org.apache.thrift.protocol.TMessageType.REPLY;\n            org.apache.thrift.TSerializable msg;\n            getResultFromPy_result result = new getResultFromPy_result();\n            if (e instanceof MyExcetion) {\n              result.e = (MyExcetion) e;\n              result.setEIsSet(true);\n              msg = result;\n            } else if (e instanceof org.apache.thrift.transport.TTransportException) {\n              _LOGGER.error(\"TTransportException inside handler\", e);\n              fb.close();\n              return;\n            } else if (e instanceof org.apache.thrift.TApplicationException) {\n              _LOGGER.error(\"TApplicationException inside handler\", e);\n              msgType = org.apache.thrift.protocol.TMessageType.EXCEPTION;\n              msg = (org.apache.thrift.TApplicationException)e;\n            } else {\n              _LOGGER.error(\"Exception inside handler\", e);\n              msgType = org.apache.thrift.protocol.TMessageType.EXCEPTION;\n              msg = new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.INTERNAL_ERROR, e.getMessage());\n            }\n            try {\n              fcall.sendResponse(fb,msg,msgType,seqid);\n            } catch (Exception ex) {\n              _LOGGER.error(\"Exception writing to internal frame buffer\", ex);\n              fb.close();\n            }\n          }\n        };\n      }", "url": "https://raw.githubusercontent.com/zhuchangwu/lawyer-lover-cloud-backend/master/lawyer-lover-consumer/src/main/java/com/changwu/thrift/MessageService.java", "stars": "12", "class_props": {"extends": "org", "implements": null, "modifiers": ["public", "static"]}}, {"id": 61742, "method_name": "isOneway", "class_name": "getResultFromPy", "params": [], "throws": null, "modifiers": ["protected"], "return_type": "boolean", "snippet": "      protected boolean isOneway() {\n        return false;\n      }", "url": "https://raw.githubusercontent.com/zhuchangwu/lawyer-lover-cloud-backend/master/lawyer-lover-consumer/src/main/java/com/changwu/thrift/MessageService.java", "stars": "12", "class_props": {"extends": "org", "implements": null, "modifiers": ["public", "static"]}}, {"id": 61743, "method_name": "start", "class_name": "getResultFromPy", "params": ["I", "getResultFromPy_args", "org"], "throws": ["org.apache.thrift.TException"], "modifiers": ["public"], "return_type": "void", "snippet": "      public void start(I iface, getResultFromPy_args args, org.apache.thrift.async.AsyncMethodCallback<Message> resultHandler) throws org.apache.thrift.TException {\n        iface.getResultFromPy(args.message,resultHandler);\n      }", "url": "https://raw.githubusercontent.com/zhuchangwu/lawyer-lover-cloud-backend/master/lawyer-lover-consumer/src/main/java/com/changwu/thrift/MessageService.java", "stars": "12", "class_props": {"extends": "org", "implements": null, "modifiers": ["public", "static"]}}, {"id": 61744, "method_name": "deepCopy", "class_name": "getResultFromPy_args", "params": [], "throws": null, "modifiers": ["public"], "return_type": "getResultFromPy_args", "snippet": "    public getResultFromPy_args deepCopy() {\n      return new getResultFromPy_args(this);\n    }", "url": "https://raw.githubusercontent.com/zhuchangwu/lawyer-lover-cloud-backend/master/lawyer-lover-consumer/src/main/java/com/changwu/thrift/MessageService.java", "stars": "12", "class_props": {"extends": null, "implements": ["org", "java", "Cloneable", "Comparable"], "modifiers": ["public", "static"]}}, {"id": 61745, "method_name": "clear", "class_name": "getResultFromPy_args", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void clear() {\n      this.message = null;\n    }", "url": "https://raw.githubusercontent.com/zhuchangwu/lawyer-lover-cloud-backend/master/lawyer-lover-consumer/src/main/java/com/changwu/thrift/MessageService.java", "stars": "12", "class_props": {"extends": null, "implements": ["org", "java", "Cloneable", "Comparable"], "modifiers": ["public", "static"]}}, {"id": 61746, "method_name": "getMessage", "class_name": "getResultFromPy_args", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getMessage() {\n      return this.message;\n    }", "url": "https://raw.githubusercontent.com/zhuchangwu/lawyer-lover-cloud-backend/master/lawyer-lover-consumer/src/main/java/com/changwu/thrift/MessageService.java", "stars": "12", "class_props": {"extends": null, "implements": ["org", "java", "Cloneable", "Comparable"], "modifiers": ["public", "static"]}}, {"id": 61747, "method_name": "setMessage", "class_name": "getResultFromPy_args", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "getResultFromPy_args", "snippet": "    public getResultFromPy_args setMessage(@org.apache.thrift.annotation.Nullable String message) {\n      this.message = message;\n      return this;\n    }", "url": "https://raw.githubusercontent.com/zhuchangwu/lawyer-lover-cloud-backend/master/lawyer-lover-consumer/src/main/java/com/changwu/thrift/MessageService.java", "stars": "12", "class_props": {"extends": null, "implements": ["org", "java", "Cloneable", "Comparable"], "modifiers": ["public", "static"]}}, {"id": 61748, "method_name": "unsetMessage", "class_name": "getResultFromPy_args", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void unsetMessage() {\n      this.message = null;\n    }", "url": "https://raw.githubusercontent.com/zhuchangwu/lawyer-lover-cloud-backend/master/lawyer-lover-consumer/src/main/java/com/changwu/thrift/MessageService.java", "stars": "12", "class_props": {"extends": null, "implements": ["org", "java", "Cloneable", "Comparable"], "modifiers": ["public", "static"]}}, {"id": 61749, "method_name": "isSetMessage", "class_name": "getResultFromPy_args", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean isSetMessage() {\n      return this.message != null;\n    }", "url": "https://raw.githubusercontent.com/zhuchangwu/lawyer-lover-cloud-backend/master/lawyer-lover-consumer/src/main/java/com/changwu/thrift/MessageService.java", "stars": "12", "class_props": {"extends": null, "implements": ["org", "java", "Cloneable", "Comparable"], "modifiers": ["public", "static"]}}, {"id": 61750, "method_name": "setMessageIsSet", "class_name": "getResultFromPy_args", "params": ["boolean"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setMessageIsSet(boolean value) {\n      if (!value) {\n        this.message = null;\n      }\n    }", "url": "https://raw.githubusercontent.com/zhuchangwu/lawyer-lover-cloud-backend/master/lawyer-lover-consumer/src/main/java/com/changwu/thrift/MessageService.java", "stars": "12", "class_props": {"extends": null, "implements": ["org", "java", "Cloneable", "Comparable"], "modifiers": ["public", "static"]}}, {"id": 61751, "method_name": "setFieldValue", "class_name": "getResultFromPy_args", "params": ["_Fields", "Object"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setFieldValue(_Fields field, @org.apache.thrift.annotation.Nullable Object value) {\n      switch (field) {\n      case MESSAGE:\n        if (value == null) {\n          unsetMessage();\n        } else {\n          setMessage((String)value);\n        }\n        break;\n\n      }\n    }", "url": "https://raw.githubusercontent.com/zhuchangwu/lawyer-lover-cloud-backend/master/lawyer-lover-consumer/src/main/java/com/changwu/thrift/MessageService.java", "stars": "12", "class_props": {"extends": null, "implements": ["org", "java", "Cloneable", "Comparable"], "modifiers": ["public", "static"]}}, {"id": 61752, "method_name": "getFieldValue", "class_name": "getResultFromPy_args", "params": ["_Fields"], "throws": null, "modifiers": ["public"], "return_type": "Object", "snippet": "    public Object getFieldValue(_Fields field) {\n      switch (field) {\n      case MESSAGE:\n        return getMessage();\n\n      }\n      throw new IllegalStateException();\n    }", "url": "https://raw.githubusercontent.com/zhuchangwu/lawyer-lover-cloud-backend/master/lawyer-lover-consumer/src/main/java/com/changwu/thrift/MessageService.java", "stars": "12", "class_props": {"extends": null, "implements": ["org", "java", "Cloneable", "Comparable"], "modifiers": ["public", "static"]}}, {"id": 61753, "method_name": "isSet", "class_name": "getResultFromPy_args", "params": ["_Fields"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean isSet(_Fields field) {\n      if (field == null) {\n        throw new IllegalArgumentException();\n      }\n\n      switch (field) {\n      case MESSAGE:\n        return isSetMessage();\n      }\n      throw new IllegalStateException();\n    }", "url": "https://raw.githubusercontent.com/zhuchangwu/lawyer-lover-cloud-backend/master/lawyer-lover-consumer/src/main/java/com/changwu/thrift/MessageService.java", "stars": "12", "class_props": {"extends": null, "implements": ["org", "java", "Cloneable", "Comparable"], "modifiers": ["public", "static"]}}, {"id": 61754, "method_name": "equals", "class_name": "getResultFromPy_args", "params": ["Object"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean equals(Object that) {\n      if (that == null)\n        return false;\n      if (that instanceof getResultFromPy_args)\n        return this.equals((getResultFromPy_args)that);\n      return false;\n    }", "url": "https://raw.githubusercontent.com/zhuchangwu/lawyer-lover-cloud-backend/master/lawyer-lover-consumer/src/main/java/com/changwu/thrift/MessageService.java", "stars": "12", "class_props": {"extends": null, "implements": ["org", "java", "Cloneable", "Comparable"], "modifiers": ["public", "static"]}}, {"id": 61755, "method_name": "equals", "class_name": "getResultFromPy_args", "params": ["getResultFromPy_args"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean equals(getResultFromPy_args that) {\n      if (that == null)\n        return false;\n      if (this == that)\n        return true;\n\n      boolean this_present_message = true && this.isSetMessage();\n      boolean that_present_message = true && that.isSetMessage();\n      if (this_present_message || that_present_message) {\n        if (!(this_present_message && that_present_message))\n          return false;\n        if (!this.message.equals(that.message))\n          return false;\n      }\n\n      return true;\n    }", "url": "https://raw.githubusercontent.com/zhuchangwu/lawyer-lover-cloud-backend/master/lawyer-lover-consumer/src/main/java/com/changwu/thrift/MessageService.java", "stars": "12", "class_props": {"extends": null, "implements": ["org", "java", "Cloneable", "Comparable"], "modifiers": ["public", "static"]}}, {"id": 61756, "method_name": "hashCode", "class_name": "getResultFromPy_args", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int hashCode() {\n      int hashCode = 1;\n\n      hashCode = hashCode * 8191 + ((isSetMessage()) ? 131071 : 524287);\n      if (isSetMessage())\n        hashCode = hashCode * 8191 + message.hashCode();\n\n      return hashCode;\n    }", "url": "https://raw.githubusercontent.com/zhuchangwu/lawyer-lover-cloud-backend/master/lawyer-lover-consumer/src/main/java/com/changwu/thrift/MessageService.java", "stars": "12", "class_props": {"extends": null, "implements": ["org", "java", "Cloneable", "Comparable"], "modifiers": ["public", "static"]}}, {"id": 61757, "method_name": "compareTo", "class_name": "getResultFromPy_args", "params": ["getResultFromPy_args"], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int compareTo(getResultFromPy_args other) {\n      if (!getClass().equals(other.getClass())) {\n        return getClass().getName().compareTo(other.getClass().getName());\n      }\n\n      int lastComparison = 0;\n\n      lastComparison = Boolean.valueOf(isSetMessage()).compareTo(other.isSetMessage());\n      if (lastComparison != 0) {\n        return lastComparison;\n      }\n      if (isSetMessage()) {\n        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.message, other.message);\n        if (lastComparison != 0) {\n          return lastComparison;\n        }\n      }\n      return 0;\n    }", "url": "https://raw.githubusercontent.com/zhuchangwu/lawyer-lover-cloud-backend/master/lawyer-lover-consumer/src/main/java/com/changwu/thrift/MessageService.java", "stars": "12", "class_props": {"extends": null, "implements": ["org", "java", "Cloneable", "Comparable"], "modifiers": ["public", "static"]}}, {"id": 61758, "method_name": "fieldForId", "class_name": "getResultFromPy_args", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "_Fields", "snippet": "    public _Fields fieldForId(int fieldId) {\n      return _Fields.findByThriftId(fieldId);\n    }", "url": "https://raw.githubusercontent.com/zhuchangwu/lawyer-lover-cloud-backend/master/lawyer-lover-consumer/src/main/java/com/changwu/thrift/MessageService.java", "stars": "12", "class_props": {"extends": null, "implements": ["org", "java", "Cloneable", "Comparable"], "modifiers": ["public", "static"]}}, {"id": 61759, "method_name": "read", "class_name": "getResultFromPy_args", "params": ["org"], "throws": ["org.apache.thrift.TException"], "modifiers": ["public"], "return_type": "void", "snippet": "    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {\n      scheme(iprot).read(iprot, this);\n    }", "url": "https://raw.githubusercontent.com/zhuchangwu/lawyer-lover-cloud-backend/master/lawyer-lover-consumer/src/main/java/com/changwu/thrift/MessageService.java", "stars": "12", "class_props": {"extends": null, "implements": ["org", "java", "Cloneable", "Comparable"], "modifiers": ["public", "static"]}}, {"id": 61760, "method_name": "write", "class_name": "getResultFromPy_args", "params": ["org"], "throws": ["org.apache.thrift.TException"], "modifiers": ["public"], "return_type": "void", "snippet": "    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {\n      scheme(oprot).write(oprot, this);\n    }", "url": "https://raw.githubusercontent.com/zhuchangwu/lawyer-lover-cloud-backend/master/lawyer-lover-consumer/src/main/java/com/changwu/thrift/MessageService.java", "stars": "12", "class_props": {"extends": null, "implements": ["org", "java", "Cloneable", "Comparable"], "modifiers": ["public", "static"]}}, {"id": 61761, "method_name": "toString", "class_name": "getResultFromPy_args", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String toString() {\n      StringBuilder sb = new StringBuilder(\"getResultFromPy_args(\");\n      boolean first = true;\n\n      sb.append(\"message:\");\n      if (this.message == null) {\n        sb.append(\"null\");\n      } else {\n        sb.append(this.message);\n      }\n      first = false;\n      sb.append(\")\");\n      return sb.toString();\n    }", "url": "https://raw.githubusercontent.com/zhuchangwu/lawyer-lover-cloud-backend/master/lawyer-lover-consumer/src/main/java/com/changwu/thrift/MessageService.java", "stars": "12", "class_props": {"extends": null, "implements": ["org", "java", "Cloneable", "Comparable"], "modifiers": ["public", "static"]}}, {"id": 61762, "method_name": "validate", "class_name": "getResultFromPy_args", "params": [], "throws": ["org.apache.thrift.TException"], "modifiers": ["public"], "return_type": "void", "snippet": "    public void validate() throws org.apache.thrift.TException {\n      // check for required fields\n      if (message == null) {\n        throw new org.apache.thrift.protocol.TProtocolException(\"Required field 'message' was not present! Struct: \" + toString());\n      }\n      // check for sub-struct validity\n    }", "url": "https://raw.githubusercontent.com/zhuchangwu/lawyer-lover-cloud-backend/master/lawyer-lover-consumer/src/main/java/com/changwu/thrift/MessageService.java", "stars": "12", "class_props": {"extends": null, "implements": ["org", "java", "Cloneable", "Comparable"], "modifiers": ["public", "static"]}}, {"id": 61763, "method_name": "writeObject", "class_name": "getResultFromPy_args", "params": ["java"], "throws": ["java.io.IOException"], "modifiers": ["private"], "return_type": "void", "snippet": "    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {\n      try {\n        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));\n      } catch (org.apache.thrift.TException te) {\n        throw new java.io.IOException(te);\n      }\n    }", "url": "https://raw.githubusercontent.com/zhuchangwu/lawyer-lover-cloud-backend/master/lawyer-lover-consumer/src/main/java/com/changwu/thrift/MessageService.java", "stars": "12", "class_props": {"extends": null, "implements": ["org", "java", "Cloneable", "Comparable"], "modifiers": ["public", "static"]}}, {"id": 61764, "method_name": "readObject", "class_name": "getResultFromPy_args", "params": ["java"], "throws": ["java.io.IOException", "ClassNotFoundException"], "modifiers": ["private"], "return_type": "void", "snippet": "    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {\n      try {\n        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));\n      } catch (org.apache.thrift.TException te) {\n        throw new java.io.IOException(te);\n      }\n    }", "url": "https://raw.githubusercontent.com/zhuchangwu/lawyer-lover-cloud-backend/master/lawyer-lover-consumer/src/main/java/com/changwu/thrift/MessageService.java", "stars": "12", "class_props": {"extends": null, "implements": ["org", "java", "Cloneable", "Comparable"], "modifiers": ["public", "static"]}}, {"id": 61765, "method_name": "scheme", "class_name": "getResultFromPy_args", "params": ["org"], "throws": null, "modifiers": ["static", "private"], "return_type": "S", "snippet": "    private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {\n      return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();\n    }", "url": "https://raw.githubusercontent.com/zhuchangwu/lawyer-lover-cloud-backend/master/lawyer-lover-consumer/src/main/java/com/changwu/thrift/MessageService.java", "stars": "12", "class_props": {"extends": null, "implements": ["org", "java", "Cloneable", "Comparable"], "modifiers": ["public", "static"]}}, {"id": 61766, "method_name": "getScheme", "class_name": "getResultFromPy_argsStandardSchemeFactory", "params": [], "throws": null, "modifiers": ["public"], "return_type": "getResultFromPy_argsStandardScheme", "snippet": "      public getResultFromPy_argsStandardScheme getScheme() {\n        return new getResultFromPy_argsStandardScheme();\n      }", "url": "https://raw.githubusercontent.com/zhuchangwu/lawyer-lover-cloud-backend/master/lawyer-lover-consumer/src/main/java/com/changwu/thrift/MessageService.java", "stars": "12", "class_props": {"extends": null, "implements": ["org"], "modifiers": ["static", "private"]}}, {"id": 61767, "method_name": "read", "class_name": "getResultFromPy_argsStandardScheme", "params": ["org", "getResultFromPy_args"], "throws": ["org.apache.thrift.TException"], "modifiers": ["public"], "return_type": "void", "snippet": "      public void read(org.apache.thrift.protocol.TProtocol iprot, getResultFromPy_args struct) throws org.apache.thrift.TException {\n        org.apache.thrift.protocol.TField schemeField;\n        iprot.readStructBegin();\n        while (true)\n        {\n          schemeField = iprot.readFieldBegin();\n          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { \n            break;\n          }\n          switch (schemeField.id) {\n            case 1: // MESSAGE\n              if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {\n                struct.message = iprot.readString();\n                struct.setMessageIsSet(true);\n              } else { \n                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);\n              }\n              break;\n            default:\n              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);\n          }\n          iprot.readFieldEnd();\n        }\n        iprot.readStructEnd();\n\n        // check for required fields of primitive type, which can't be checked in the validate method\n        struct.validate();\n      }", "url": "https://raw.githubusercontent.com/zhuchangwu/lawyer-lover-cloud-backend/master/lawyer-lover-consumer/src/main/java/com/changwu/thrift/MessageService.java", "stars": "12", "class_props": {"extends": "org", "implements": null, "modifiers": ["static", "private"]}}, {"id": 61768, "method_name": "write", "class_name": "getResultFromPy_argsStandardScheme", "params": ["org", "getResultFromPy_args"], "throws": ["org.apache.thrift.TException"], "modifiers": ["public"], "return_type": "void", "snippet": "      public void write(org.apache.thrift.protocol.TProtocol oprot, getResultFromPy_args struct) throws org.apache.thrift.TException {\n        struct.validate();\n\n        oprot.writeStructBegin(STRUCT_DESC);\n        if (struct.message != null) {\n          oprot.writeFieldBegin(MESSAGE_FIELD_DESC);\n          oprot.writeString(struct.message);\n          oprot.writeFieldEnd();\n        }\n        oprot.writeFieldStop();\n        oprot.writeStructEnd();\n      }", "url": "https://raw.githubusercontent.com/zhuchangwu/lawyer-lover-cloud-backend/master/lawyer-lover-consumer/src/main/java/com/changwu/thrift/MessageService.java", "stars": "12", "class_props": {"extends": "org", "implements": null, "modifiers": ["static", "private"]}}, {"id": 61769, "method_name": "getScheme", "class_name": "getResultFromPy_argsTupleSchemeFactory", "params": [], "throws": null, "modifiers": ["public"], "return_type": "getResultFromPy_argsTupleScheme", "snippet": "      public getResultFromPy_argsTupleScheme getScheme() {\n        return new getResultFromPy_argsTupleScheme();\n      }", "url": "https://raw.githubusercontent.com/zhuchangwu/lawyer-lover-cloud-backend/master/lawyer-lover-consumer/src/main/java/com/changwu/thrift/MessageService.java", "stars": "12", "class_props": {"extends": null, "implements": ["org"], "modifiers": ["static", "private"]}}, {"id": 61770, "method_name": "write", "class_name": "getResultFromPy_argsTupleScheme", "params": ["org", "getResultFromPy_args"], "throws": ["org.apache.thrift.TException"], "modifiers": ["public"], "return_type": "void", "snippet": "      public void write(org.apache.thrift.protocol.TProtocol prot, getResultFromPy_args struct) throws org.apache.thrift.TException {\n        org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;\n        oprot.writeString(struct.message);\n      }", "url": "https://raw.githubusercontent.com/zhuchangwu/lawyer-lover-cloud-backend/master/lawyer-lover-consumer/src/main/java/com/changwu/thrift/MessageService.java", "stars": "12", "class_props": {"extends": "org", "implements": null, "modifiers": ["static", "private"]}}, {"id": 61771, "method_name": "read", "class_name": "getResultFromPy_argsTupleScheme", "params": ["org", "getResultFromPy_args"], "throws": ["org.apache.thrift.TException"], "modifiers": ["public"], "return_type": "void", "snippet": "      public void read(org.apache.thrift.protocol.TProtocol prot, getResultFromPy_args struct) throws org.apache.thrift.TException {\n        org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;\n        struct.message = iprot.readString();\n        struct.setMessageIsSet(true);\n      }", "url": "https://raw.githubusercontent.com/zhuchangwu/lawyer-lover-cloud-backend/master/lawyer-lover-consumer/src/main/java/com/changwu/thrift/MessageService.java", "stars": "12", "class_props": {"extends": "org", "implements": null, "modifiers": ["static", "private"]}}, {"id": 61772, "method_name": "deepCopy", "class_name": "getResultFromPy_result", "params": [], "throws": null, "modifiers": ["public"], "return_type": "getResultFromPy_result", "snippet": "    public getResultFromPy_result deepCopy() {\n      return new getResultFromPy_result(this);\n    }", "url": "https://raw.githubusercontent.com/zhuchangwu/lawyer-lover-cloud-backend/master/lawyer-lover-consumer/src/main/java/com/changwu/thrift/MessageService.java", "stars": "12", "class_props": {"extends": null, "implements": ["org", "java", "Cloneable", "Comparable"], "modifiers": ["public", "static"]}}, {"id": 61773, "method_name": "clear", "class_name": "getResultFromPy_result", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void clear() {\n      this.success = null;\n      this.e = null;\n    }", "url": "https://raw.githubusercontent.com/zhuchangwu/lawyer-lover-cloud-backend/master/lawyer-lover-consumer/src/main/java/com/changwu/thrift/MessageService.java", "stars": "12", "class_props": {"extends": null, "implements": ["org", "java", "Cloneable", "Comparable"], "modifiers": ["public", "static"]}}, {"id": 61774, "method_name": "getSuccess", "class_name": "getResultFromPy_result", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Message", "snippet": "    public Message getSuccess() {\n      return this.success;\n    }", "url": "https://raw.githubusercontent.com/zhuchangwu/lawyer-lover-cloud-backend/master/lawyer-lover-consumer/src/main/java/com/changwu/thrift/MessageService.java", "stars": "12", "class_props": {"extends": null, "implements": ["org", "java", "Cloneable", "Comparable"], "modifiers": ["public", "static"]}}, {"id": 61775, "method_name": "setSuccess", "class_name": "getResultFromPy_result", "params": ["Message"], "throws": null, "modifiers": ["public"], "return_type": "getResultFromPy_result", "snippet": "    public getResultFromPy_result setSuccess(@org.apache.thrift.annotation.Nullable Message success) {\n      this.success = success;\n      return this;\n    }", "url": "https://raw.githubusercontent.com/zhuchangwu/lawyer-lover-cloud-backend/master/lawyer-lover-consumer/src/main/java/com/changwu/thrift/MessageService.java", "stars": "12", "class_props": {"extends": null, "implements": ["org", "java", "Cloneable", "Comparable"], "modifiers": ["public", "static"]}}, {"id": 61776, "method_name": "unsetSuccess", "class_name": "getResultFromPy_result", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void unsetSuccess() {\n      this.success = null;\n    }", "url": "https://raw.githubusercontent.com/zhuchangwu/lawyer-lover-cloud-backend/master/lawyer-lover-consumer/src/main/java/com/changwu/thrift/MessageService.java", "stars": "12", "class_props": {"extends": null, "implements": ["org", "java", "Cloneable", "Comparable"], "modifiers": ["public", "static"]}}, {"id": 61777, "method_name": "isSetSuccess", "class_name": "getResultFromPy_result", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean isSetSuccess() {\n      return this.success != null;\n    }", "url": "https://raw.githubusercontent.com/zhuchangwu/lawyer-lover-cloud-backend/master/lawyer-lover-consumer/src/main/java/com/changwu/thrift/MessageService.java", "stars": "12", "class_props": {"extends": null, "implements": ["org", "java", "Cloneable", "Comparable"], "modifiers": ["public", "static"]}}, {"id": 61778, "method_name": "setSuccessIsSet", "class_name": "getResultFromPy_result", "params": ["boolean"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setSuccessIsSet(boolean value) {\n      if (!value) {\n        this.success = null;\n      }\n    }", "url": "https://raw.githubusercontent.com/zhuchangwu/lawyer-lover-cloud-backend/master/lawyer-lover-consumer/src/main/java/com/changwu/thrift/MessageService.java", "stars": "12", "class_props": {"extends": null, "implements": ["org", "java", "Cloneable", "Comparable"], "modifiers": ["public", "static"]}}, {"id": 61779, "method_name": "getE", "class_name": "getResultFromPy_result", "params": [], "throws": null, "modifiers": ["public"], "return_type": "MyExcetion", "snippet": "    public MyExcetion getE() {\n      return this.e;\n    }", "url": "https://raw.githubusercontent.com/zhuchangwu/lawyer-lover-cloud-backend/master/lawyer-lover-consumer/src/main/java/com/changwu/thrift/MessageService.java", "stars": "12", "class_props": {"extends": null, "implements": ["org", "java", "Cloneable", "Comparable"], "modifiers": ["public", "static"]}}, {"id": 61780, "method_name": "setE", "class_name": "getResultFromPy_result", "params": ["MyExcetion"], "throws": null, "modifiers": ["public"], "return_type": "getResultFromPy_result", "snippet": "    public getResultFromPy_result setE(@org.apache.thrift.annotation.Nullable MyExcetion e) {\n      this.e = e;\n      return this;\n    }", "url": "https://raw.githubusercontent.com/zhuchangwu/lawyer-lover-cloud-backend/master/lawyer-lover-consumer/src/main/java/com/changwu/thrift/MessageService.java", "stars": "12", "class_props": {"extends": null, "implements": ["org", "java", "Cloneable", "Comparable"], "modifiers": ["public", "static"]}}, {"id": 61781, "method_name": "unsetE", "class_name": "getResultFromPy_result", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void unsetE() {\n      this.e = null;\n    }", "url": "https://raw.githubusercontent.com/zhuchangwu/lawyer-lover-cloud-backend/master/lawyer-lover-consumer/src/main/java/com/changwu/thrift/MessageService.java", "stars": "12", "class_props": {"extends": null, "implements": ["org", "java", "Cloneable", "Comparable"], "modifiers": ["public", "static"]}}, {"id": 61782, "method_name": "isSetE", "class_name": "getResultFromPy_result", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean isSetE() {\n      return this.e != null;\n    }", "url": "https://raw.githubusercontent.com/zhuchangwu/lawyer-lover-cloud-backend/master/lawyer-lover-consumer/src/main/java/com/changwu/thrift/MessageService.java", "stars": "12", "class_props": {"extends": null, "implements": ["org", "java", "Cloneable", "Comparable"], "modifiers": ["public", "static"]}}, {"id": 61783, "method_name": "setEIsSet", "class_name": "getResultFromPy_result", "params": ["boolean"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setEIsSet(boolean value) {\n      if (!value) {\n        this.e = null;\n      }\n    }", "url": "https://raw.githubusercontent.com/zhuchangwu/lawyer-lover-cloud-backend/master/lawyer-lover-consumer/src/main/java/com/changwu/thrift/MessageService.java", "stars": "12", "class_props": {"extends": null, "implements": ["org", "java", "Cloneable", "Comparable"], "modifiers": ["public", "static"]}}, {"id": 61784, "method_name": "setFieldValue", "class_name": "getResultFromPy_result", "params": ["_Fields", "Object"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setFieldValue(_Fields field, @org.apache.thrift.annotation.Nullable Object value) {\n      switch (field) {\n      case SUCCESS:\n        if (value == null) {\n          unsetSuccess();\n        } else {\n          setSuccess((Message)value);\n        }\n        break;\n\n      case E:\n        if (value == null) {\n          unsetE();\n        } else {\n          setE((MyExcetion)value);\n        }\n        break;\n\n      }\n    }", "url": "https://raw.githubusercontent.com/zhuchangwu/lawyer-lover-cloud-backend/master/lawyer-lover-consumer/src/main/java/com/changwu/thrift/MessageService.java", "stars": "12", "class_props": {"extends": null, "implements": ["org", "java", "Cloneable", "Comparable"], "modifiers": ["public", "static"]}}, {"id": 61785, "method_name": "getFieldValue", "class_name": "getResultFromPy_result", "params": ["_Fields"], "throws": null, "modifiers": ["public"], "return_type": "Object", "snippet": "    public Object getFieldValue(_Fields field) {\n      switch (field) {\n      case SUCCESS:\n        return getSuccess();\n\n      case E:\n        return getE();\n\n      }\n      throw new IllegalStateException();\n    }", "url": "https://raw.githubusercontent.com/zhuchangwu/lawyer-lover-cloud-backend/master/lawyer-lover-consumer/src/main/java/com/changwu/thrift/MessageService.java", "stars": "12", "class_props": {"extends": null, "implements": ["org", "java", "Cloneable", "Comparable"], "modifiers": ["public", "static"]}}, {"id": 61786, "method_name": "isSet", "class_name": "getResultFromPy_result", "params": ["_Fields"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean isSet(_Fields field) {\n      if (field == null) {\n        throw new IllegalArgumentException();\n      }\n\n      switch (field) {\n      case SUCCESS:\n        return isSetSuccess();\n      case E:\n        return isSetE();\n      }\n      throw new IllegalStateException();\n    }", "url": "https://raw.githubusercontent.com/zhuchangwu/lawyer-lover-cloud-backend/master/lawyer-lover-consumer/src/main/java/com/changwu/thrift/MessageService.java", "stars": "12", "class_props": {"extends": null, "implements": ["org", "java", "Cloneable", "Comparable"], "modifiers": ["public", "static"]}}, {"id": 61787, "method_name": "equals", "class_name": "getResultFromPy_result", "params": ["Object"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean equals(Object that) {\n      if (that == null)\n        return false;\n      if (that instanceof getResultFromPy_result)\n        return this.equals((getResultFromPy_result)that);\n      return false;\n    }", "url": "https://raw.githubusercontent.com/zhuchangwu/lawyer-lover-cloud-backend/master/lawyer-lover-consumer/src/main/java/com/changwu/thrift/MessageService.java", "stars": "12", "class_props": {"extends": null, "implements": ["org", "java", "Cloneable", "Comparable"], "modifiers": ["public", "static"]}}, {"id": 61788, "method_name": "equals", "class_name": "getResultFromPy_result", "params": ["getResultFromPy_result"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean equals(getResultFromPy_result that) {\n      if (that == null)\n        return false;\n      if (this == that)\n        return true;\n\n      boolean this_present_success = true && this.isSetSuccess();\n      boolean that_present_success = true && that.isSetSuccess();\n      if (this_present_success || that_present_success) {\n        if (!(this_present_success && that_present_success))\n          return false;\n        if (!this.success.equals(that.success))\n          return false;\n      }\n\n      boolean this_present_e = true && this.isSetE();\n      boolean that_present_e = true && that.isSetE();\n      if (this_present_e || that_present_e) {\n        if (!(this_present_e && that_present_e))\n          return false;\n        if (!this.e.equals(that.e))\n          return false;\n      }\n\n      return true;\n    }", "url": "https://raw.githubusercontent.com/zhuchangwu/lawyer-lover-cloud-backend/master/lawyer-lover-consumer/src/main/java/com/changwu/thrift/MessageService.java", "stars": "12", "class_props": {"extends": null, "implements": ["org", "java", "Cloneable", "Comparable"], "modifiers": ["public", "static"]}}, {"id": 61789, "method_name": "hashCode", "class_name": "getResultFromPy_result", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int hashCode() {\n      int hashCode = 1;\n\n      hashCode = hashCode * 8191 + ((isSetSuccess()) ? 131071 : 524287);\n      if (isSetSuccess())\n        hashCode = hashCode * 8191 + success.hashCode();\n\n      hashCode = hashCode * 8191 + ((isSetE()) ? 131071 : 524287);\n      if (isSetE())\n        hashCode = hashCode * 8191 + e.hashCode();\n\n      return hashCode;\n    }", "url": "https://raw.githubusercontent.com/zhuchangwu/lawyer-lover-cloud-backend/master/lawyer-lover-consumer/src/main/java/com/changwu/thrift/MessageService.java", "stars": "12", "class_props": {"extends": null, "implements": ["org", "java", "Cloneable", "Comparable"], "modifiers": ["public", "static"]}}, {"id": 61790, "method_name": "compareTo", "class_name": "getResultFromPy_result", "params": ["getResultFromPy_result"], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int compareTo(getResultFromPy_result other) {\n      if (!getClass().equals(other.getClass())) {\n        return getClass().getName().compareTo(other.getClass().getName());\n      }\n\n      int lastComparison = 0;\n\n      lastComparison = Boolean.valueOf(isSetSuccess()).compareTo(other.isSetSuccess());\n      if (lastComparison != 0) {\n        return lastComparison;\n      }\n      if (isSetSuccess()) {\n        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.success, other.success);\n        if (lastComparison != 0) {\n          return lastComparison;\n        }\n      }\n      lastComparison = Boolean.valueOf(isSetE()).compareTo(other.isSetE());\n      if (lastComparison != 0) {\n        return lastComparison;\n      }\n      if (isSetE()) {\n        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.e, other.e);\n        if (lastComparison != 0) {\n          return lastComparison;\n        }\n      }\n      return 0;\n    }", "url": "https://raw.githubusercontent.com/zhuchangwu/lawyer-lover-cloud-backend/master/lawyer-lover-consumer/src/main/java/com/changwu/thrift/MessageService.java", "stars": "12", "class_props": {"extends": null, "implements": ["org", "java", "Cloneable", "Comparable"], "modifiers": ["public", "static"]}}, {"id": 61791, "method_name": "fieldForId", "class_name": "getResultFromPy_result", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "_Fields", "snippet": "    public _Fields fieldForId(int fieldId) {\n      return _Fields.findByThriftId(fieldId);\n    }", "url": "https://raw.githubusercontent.com/zhuchangwu/lawyer-lover-cloud-backend/master/lawyer-lover-consumer/src/main/java/com/changwu/thrift/MessageService.java", "stars": "12", "class_props": {"extends": null, "implements": ["org", "java", "Cloneable", "Comparable"], "modifiers": ["public", "static"]}}, {"id": 61792, "method_name": "read", "class_name": "getResultFromPy_result", "params": ["org"], "throws": ["org.apache.thrift.TException"], "modifiers": ["public"], "return_type": "void", "snippet": "    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {\n      scheme(iprot).read(iprot, this);\n    }", "url": "https://raw.githubusercontent.com/zhuchangwu/lawyer-lover-cloud-backend/master/lawyer-lover-consumer/src/main/java/com/changwu/thrift/MessageService.java", "stars": "12", "class_props": {"extends": null, "implements": ["org", "java", "Cloneable", "Comparable"], "modifiers": ["public", "static"]}}, {"id": 61793, "method_name": "write", "class_name": "getResultFromPy_result", "params": ["org"], "throws": ["org.apache.thrift.TException"], "modifiers": ["public"], "return_type": "void", "snippet": "    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {\n      scheme(oprot).write(oprot, this);\n      }", "url": "https://raw.githubusercontent.com/zhuchangwu/lawyer-lover-cloud-backend/master/lawyer-lover-consumer/src/main/java/com/changwu/thrift/MessageService.java", "stars": "12", "class_props": {"extends": null, "implements": ["org", "java", "Cloneable", "Comparable"], "modifiers": ["public", "static"]}}, {"id": 61794, "method_name": "toString", "class_name": "getResultFromPy_result", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String toString() {\n      StringBuilder sb = new StringBuilder(\"getResultFromPy_result(\");\n      boolean first = true;\n\n      sb.append(\"success:\");\n      if (this.success == null) {\n        sb.append(\"null\");\n      } else {\n        sb.append(this.success);\n      }\n      first = false;\n      if (!first) sb.append(\", \");\n      sb.append(\"e:\");\n      if (this.e == null) {\n        sb.append(\"null\");\n      } else {\n        sb.append(this.e);\n      }\n      first = false;\n      sb.append(\")\");\n      return sb.toString();\n    }", "url": "https://raw.githubusercontent.com/zhuchangwu/lawyer-lover-cloud-backend/master/lawyer-lover-consumer/src/main/java/com/changwu/thrift/MessageService.java", "stars": "12", "class_props": {"extends": null, "implements": ["org", "java", "Cloneable", "Comparable"], "modifiers": ["public", "static"]}}, {"id": 61795, "method_name": "validate", "class_name": "getResultFromPy_result", "params": [], "throws": ["org.apache.thrift.TException"], "modifiers": ["public"], "return_type": "void", "snippet": "    public void validate() throws org.apache.thrift.TException {\n      // check for required fields\n      // check for sub-struct validity\n      if (success != null) {\n        success.validate();\n      }\n    }", "url": "https://raw.githubusercontent.com/zhuchangwu/lawyer-lover-cloud-backend/master/lawyer-lover-consumer/src/main/java/com/changwu/thrift/MessageService.java", "stars": "12", "class_props": {"extends": null, "implements": ["org", "java", "Cloneable", "Comparable"], "modifiers": ["public", "static"]}}, {"id": 61796, "method_name": "writeObject", "class_name": "getResultFromPy_result", "params": ["java"], "throws": ["java.io.IOException"], "modifiers": ["private"], "return_type": "void", "snippet": "    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {\n      try {\n        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));\n      } catch (org.apache.thrift.TException te) {\n        throw new java.io.IOException(te);\n      }\n    }", "url": "https://raw.githubusercontent.com/zhuchangwu/lawyer-lover-cloud-backend/master/lawyer-lover-consumer/src/main/java/com/changwu/thrift/MessageService.java", "stars": "12", "class_props": {"extends": null, "implements": ["org", "java", "Cloneable", "Comparable"], "modifiers": ["public", "static"]}}, {"id": 61797, "method_name": "readObject", "class_name": "getResultFromPy_result", "params": ["java"], "throws": ["java.io.IOException", "ClassNotFoundException"], "modifiers": ["private"], "return_type": "void", "snippet": "    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {\n      try {\n        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));\n      } catch (org.apache.thrift.TException te) {\n        throw new java.io.IOException(te);\n      }\n    }", "url": "https://raw.githubusercontent.com/zhuchangwu/lawyer-lover-cloud-backend/master/lawyer-lover-consumer/src/main/java/com/changwu/thrift/MessageService.java", "stars": "12", "class_props": {"extends": null, "implements": ["org", "java", "Cloneable", "Comparable"], "modifiers": ["public", "static"]}}, {"id": 61798, "method_name": "scheme", "class_name": "getResultFromPy_result", "params": ["org"], "throws": null, "modifiers": ["static", "private"], "return_type": "S", "snippet": "    private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {\n      return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();\n    }", "url": "https://raw.githubusercontent.com/zhuchangwu/lawyer-lover-cloud-backend/master/lawyer-lover-consumer/src/main/java/com/changwu/thrift/MessageService.java", "stars": "12", "class_props": {"extends": null, "implements": ["org", "java", "Cloneable", "Comparable"], "modifiers": ["public", "static"]}}, {"id": 61799, "method_name": "getScheme", "class_name": "getResultFromPy_resultStandardSchemeFactory", "params": [], "throws": null, "modifiers": ["public"], "return_type": "getResultFromPy_resultStandardScheme", "snippet": "      public getResultFromPy_resultStandardScheme getScheme() {\n        return new getResultFromPy_resultStandardScheme();\n      }", "url": "https://raw.githubusercontent.com/zhuchangwu/lawyer-lover-cloud-backend/master/lawyer-lover-consumer/src/main/java/com/changwu/thrift/MessageService.java", "stars": "12", "class_props": {"extends": null, "implements": ["org"], "modifiers": ["static", "private"]}}, {"id": 61800, "method_name": "read", "class_name": "getResultFromPy_resultStandardScheme", "params": ["org", "getResultFromPy_result"], "throws": ["org.apache.thrift.TException"], "modifiers": ["public"], "return_type": "void", "snippet": "      public void read(org.apache.thrift.protocol.TProtocol iprot, getResultFromPy_result struct) throws org.apache.thrift.TException {\n        org.apache.thrift.protocol.TField schemeField;\n        iprot.readStructBegin();\n        while (true)\n        {\n          schemeField = iprot.readFieldBegin();\n          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { \n            break;\n          }\n          switch (schemeField.id) {\n            case 0: // SUCCESS\n              if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {\n                struct.success = new Message();\n                struct.success.read(iprot);\n                struct.setSuccessIsSet(true);\n              } else { \n                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);\n              }\n              break;\n            case 1: // E\n              if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {\n                struct.e = new MyExcetion();\n                struct.e.read(iprot);\n                struct.setEIsSet(true);\n              } else { \n                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);\n              }\n              break;\n            default:\n              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);\n          }\n          iprot.readFieldEnd();\n        }\n        iprot.readStructEnd();\n\n        // check for required fields of primitive type, which can't be checked in the validate method\n        struct.validate();\n      }", "url": "https://raw.githubusercontent.com/zhuchangwu/lawyer-lover-cloud-backend/master/lawyer-lover-consumer/src/main/java/com/changwu/thrift/MessageService.java", "stars": "12", "class_props": {"extends": "org", "implements": null, "modifiers": ["static", "private"]}}, {"id": 61801, "method_name": "write", "class_name": "getResultFromPy_resultStandardScheme", "params": ["org", "getResultFromPy_result"], "throws": ["org.apache.thrift.TException"], "modifiers": ["public"], "return_type": "void", "snippet": "      public void write(org.apache.thrift.protocol.TProtocol oprot, getResultFromPy_result struct) throws org.apache.thrift.TException {\n        struct.validate();\n\n        oprot.writeStructBegin(STRUCT_DESC);\n        if (struct.success != null) {\n          oprot.writeFieldBegin(SUCCESS_FIELD_DESC);\n          struct.success.write(oprot);\n          oprot.writeFieldEnd();\n        }\n        if (struct.e != null) {\n          oprot.writeFieldBegin(E_FIELD_DESC);\n          struct.e.write(oprot);\n          oprot.writeFieldEnd();\n        }\n        oprot.writeFieldStop();\n        oprot.writeStructEnd();\n      }", "url": "https://raw.githubusercontent.com/zhuchangwu/lawyer-lover-cloud-backend/master/lawyer-lover-consumer/src/main/java/com/changwu/thrift/MessageService.java", "stars": "12", "class_props": {"extends": "org", "implements": null, "modifiers": ["static", "private"]}}, {"id": 61802, "method_name": "getScheme", "class_name": "getResultFromPy_resultTupleSchemeFactory", "params": [], "throws": null, "modifiers": ["public"], "return_type": "getResultFromPy_resultTupleScheme", "snippet": "      public getResultFromPy_resultTupleScheme getScheme() {\n        return new getResultFromPy_resultTupleScheme();\n      }", "url": "https://raw.githubusercontent.com/zhuchangwu/lawyer-lover-cloud-backend/master/lawyer-lover-consumer/src/main/java/com/changwu/thrift/MessageService.java", "stars": "12", "class_props": {"extends": null, "implements": ["org"], "modifiers": ["static", "private"]}}, {"id": 61803, "method_name": "write", "class_name": "getResultFromPy_resultTupleScheme", "params": ["org", "getResultFromPy_result"], "throws": ["org.apache.thrift.TException"], "modifiers": ["public"], "return_type": "void", "snippet": "      public void write(org.apache.thrift.protocol.TProtocol prot, getResultFromPy_result struct) throws org.apache.thrift.TException {\n        org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;\n        java.util.BitSet optionals = new java.util.BitSet();\n        if (struct.isSetSuccess()) {\n          optionals.set(0);\n        }\n        if (struct.isSetE()) {\n          optionals.set(1);\n        }\n        oprot.writeBitSet(optionals, 2);\n        if (struct.isSetSuccess()) {\n          struct.success.write(oprot);\n        }\n        if (struct.isSetE()) {\n          struct.e.write(oprot);\n        }\n      }", "url": "https://raw.githubusercontent.com/zhuchangwu/lawyer-lover-cloud-backend/master/lawyer-lover-consumer/src/main/java/com/changwu/thrift/MessageService.java", "stars": "12", "class_props": {"extends": "org", "implements": null, "modifiers": ["static", "private"]}}, {"id": 61804, "method_name": "read", "class_name": "getResultFromPy_resultTupleScheme", "params": ["org", "getResultFromPy_result"], "throws": ["org.apache.thrift.TException"], "modifiers": ["public"], "return_type": "void", "snippet": "      public void read(org.apache.thrift.protocol.TProtocol prot, getResultFromPy_result struct) throws org.apache.thrift.TException {\n        org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;\n        java.util.BitSet incoming = iprot.readBitSet(2);\n        if (incoming.get(0)) {\n          struct.success = new Message();\n          struct.success.read(iprot);\n          struct.setSuccessIsSet(true);\n        }\n        if (incoming.get(1)) {\n          struct.e = new MyExcetion();\n          struct.e.read(iprot);\n          struct.setEIsSet(true);\n        }\n      }", "url": "https://raw.githubusercontent.com/zhuchangwu/lawyer-lover-cloud-backend/master/lawyer-lover-consumer/src/main/java/com/changwu/thrift/MessageService.java", "stars": "12", "class_props": {"extends": "org", "implements": null, "modifiers": ["static", "private"]}}, {"id": 61805, "method_name": "getId", "class_name": "ItemStockDO", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Integer", "snippet": "    public Integer getId() {\n        return id;\n    }", "url": "https://raw.githubusercontent.com/ryewen/quickbuy/master/src/main/java/com/loststars/quickbuy/dataobject/ItemStockDO.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 61806, "method_name": "setId", "class_name": "ItemStockDO", "params": ["Integer"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setId(Integer id) {\n        this.id = id;\n    }", "url": "https://raw.githubusercontent.com/ryewen/quickbuy/master/src/main/java/com/loststars/quickbuy/dataobject/ItemStockDO.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 61807, "method_name": "getStock", "class_name": "ItemStockDO", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Integer", "snippet": "    public Integer getStock() {\n        return stock;\n    }", "url": "https://raw.githubusercontent.com/ryewen/quickbuy/master/src/main/java/com/loststars/quickbuy/dataobject/ItemStockDO.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 61808, "method_name": "setStock", "class_name": "ItemStockDO", "params": ["Integer"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setStock(Integer stock) {\n        this.stock = stock;\n    }", "url": "https://raw.githubusercontent.com/ryewen/quickbuy/master/src/main/java/com/loststars/quickbuy/dataobject/ItemStockDO.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 61809, "method_name": "getItemId", "class_name": "ItemStockDO", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Integer", "snippet": "    public Integer getItemId() {\n        return itemId;\n    }", "url": "https://raw.githubusercontent.com/ryewen/quickbuy/master/src/main/java/com/loststars/quickbuy/dataobject/ItemStockDO.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 61810, "method_name": "setItemId", "class_name": "ItemStockDO", "params": ["Integer"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setItemId(Integer itemId) {\n        this.itemId = itemId;\n    }", "url": "https://raw.githubusercontent.com/ryewen/quickbuy/master/src/main/java/com/loststars/quickbuy/dataobject/ItemStockDO.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 61811, "method_name": "execute", "class_name": "ReobfuscateMembers", "params": ["Map<String,Clazz>", "boolean"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "  public boolean execute(Map<String, Clazz> classes, boolean verbose) {\n    this.classes = classes;\n    this.verbose = verbose;\n\n    logger.info(\"Generating random names\");\n    this.words = Strings.generateWordQueue(\n        (int) (classes.values().stream().map(c -> c.node.fields).flatMap(List::stream).count() + classes.values().stream().map(c -> c.node.methods).flatMap(List::stream).count()),\n        ReobfuscateMembers.class.getResourceAsStream(\"/res/english-words.txt\"));\n\n    logger.info(\"Making method mappings\");\n    classes.values().stream().map(c -> c.node).forEach(c -> makeMethodMappings(c));\n    logger.info(methods.size() + \" method mappings created for classes and superclasses\");\n\n    logger.info(\"Renaming methods\");\n    classes.values().stream().map(c -> c.node).forEach(c -> {\n      c.methods.forEach(m -> m.name = methods.get(c.name).stream().filter(mapped -> mapped.equalsMethod(m)).findFirst().get().newName);\n    });\n\n    logger.info(\"Updating method references in code\");\n    int mrefs = classes.values().stream().map(c -> c.node.methods).flatMap(List::stream).map(m -> m.instructions.toArray()).flatMap(Arrays::stream)\n        .mapToInt(ain -> References.remapMethodRefs(methods, ain)).sum();\n    logger.info(mrefs + \" method references updated successfully!\");\n\n    logger.info(\"Making field mappings\");\n    classes.values().stream().map(c -> c.node).forEach(c -> makeFieldMappings(c));\n\n    logger.info(\"Renaming fields\");\n    classes.values().stream().map(c -> c.node).forEach(c -> {\n      c.fields.forEach(f -> f.name = fields.get(c.name).stream().filter(mapped -> mapped.equalsField(f)).findFirst().get().newName);\n    });\n\n    logger.info(\"Updating field references in code\");\n    int frefs = classes.values().stream().map(c -> c.node.methods).flatMap(List::stream).map(m -> m.instructions.toArray()).flatMap(Arrays::stream)\n        .mapToInt(ain -> References.remapFieldRefs(fields, ain)).sum();\n    logger.info(frefs + \" field references updated successfully!\");\n    return frefs > 0 && mrefs > 0;\n  }", "url": "https://raw.githubusercontent.com/GraxCode/threadtear/master/src/me/nov/threadtear/execution/analysis/ReobfuscateMembers.java", "stars": "140", "class_props": {"extends": "Execution", "implements": null, "modifiers": ["public"]}}, {"id": 61812, "method_name": "makeFieldMappings", "class_name": "ReobfuscateMembers", "params": ["ClassNode"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "  private void makeFieldMappings(ClassNode c) {\n    ArrayList<MappedMember> list = new ArrayList<>();\n    c.fields.forEach(f -> list.add(new MappedMember(f.name, f.desc, words.poll() + \"$\"))); // add a dollar sign to avoid collisions\n    fields.put(c.name, list);\n  }", "url": "https://raw.githubusercontent.com/GraxCode/threadtear/master/src/me/nov/threadtear/execution/analysis/ReobfuscateMembers.java", "stars": "140", "class_props": {"extends": "Execution", "implements": null, "modifiers": ["public"]}}, {"id": 61813, "method_name": "makeMethodMappings", "class_name": "ReobfuscateMembers", "params": ["ClassNode"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "  private void makeMethodMappings(ClassNode c) {\n    if (methods.containsKey(c.name))\n      return;\n    boolean isLocal = classes.values().stream().anyMatch(clazz -> clazz.node.equals(c));\n    ArrayList<ClassNode> parents = new ArrayList<>();\n    // first remap parents\n    if (c.superName != null) {\n      ClassNode superClass = findClass(c.superName);\n      if (superClass != null) {\n        parents.add(superClass);\n        makeMethodMappings(superClass);\n      } else {\n        isLocal = false;\n      }\n    }\n    for (String itf : c.interfaces) {\n      ClassNode interfaze = findClass(itf);\n      if (interfaze != null) {\n        parents.add(interfaze);\n        makeMethodMappings(interfaze);\n      } else {\n        isLocal = false;\n      }\n    }\n    ArrayList<MappedMember> list = new ArrayList<>();\n    parents.forEach(p -> list.addAll(methods.get(p.name))); // add parent methods. there are better solutions in terms of performance but\n                                                            // this is the simplest one\n    final boolean local = isLocal;\n    c.methods.forEach(m -> list.add(new MappedMember(m.name, m.desc, local && isChangeable(m) ? makeName(parents, m) : m.name)));\n    methods.put(c.name, list);\n  }", "url": "https://raw.githubusercontent.com/GraxCode/threadtear/master/src/me/nov/threadtear/execution/analysis/ReobfuscateMembers.java", "stars": "140", "class_props": {"extends": "Execution", "implements": null, "modifiers": ["public"]}}, {"id": 61814, "method_name": "makeName", "class_name": "ReobfuscateMembers", "params": ["ArrayList<ClassNode>", "MethodNode"], "throws": null, "modifiers": ["private"], "return_type": "String", "snippet": "  private String makeName(ArrayList<ClassNode> parents, MethodNode m) {\n    MappedMember overriddenMethod = parents.stream().map(c -> c.name).filter(methods::containsKey).map(methods::get).flatMap(List::stream).filter(mapped -> mapped.equalsMethod(m)).findFirst()\n        .orElse(null);\n    if (overriddenMethod != null) {\n      // return parent name\n      return overriddenMethod.newName;\n    }\n    return \"_\" + words.poll(); // add an underscore to avoid collisions\n  }", "url": "https://raw.githubusercontent.com/GraxCode/threadtear/master/src/me/nov/threadtear/execution/analysis/ReobfuscateMembers.java", "stars": "140", "class_props": {"extends": "Execution", "implements": null, "modifiers": ["public"]}}, {"id": 61815, "method_name": "isChangeable", "class_name": "ReobfuscateMembers", "params": ["MethodNode"], "throws": null, "modifiers": ["private"], "return_type": "boolean", "snippet": "  private boolean isChangeable(MethodNode m) {\n    if (Access.isNative(m.access))\n      return false;\n    if (m.name.startsWith(\"<\"))\n      return false;\n    if (m.name.equals(\"main\") && m.desc.equals(\"([Ljava/lang/String;)V\"))\n      return false;\n    if (ignore.contains(m.name))\n      return false;\n    return true;\n  }", "url": "https://raw.githubusercontent.com/GraxCode/threadtear/master/src/me/nov/threadtear/execution/analysis/ReobfuscateMembers.java", "stars": "140", "class_props": {"extends": "Execution", "implements": null, "modifiers": ["public"]}}, {"id": 61816, "method_name": "findClass", "class_name": "ReobfuscateMembers", "params": ["String"], "throws": null, "modifiers": ["private"], "return_type": "ClassNode", "snippet": "  private ClassNode findClass(String name) {\n    Clazz node = classes.get(name);\n    return node == null ? findInRT(name) : node.node;\n  }", "url": "https://raw.githubusercontent.com/GraxCode/threadtear/master/src/me/nov/threadtear/execution/analysis/ReobfuscateMembers.java", "stars": "140", "class_props": {"extends": "Execution", "implements": null, "modifiers": ["public"]}}, {"id": 61817, "method_name": "findInRT", "class_name": "ReobfuscateMembers", "params": ["String"], "throws": null, "modifiers": ["private"], "return_type": "ClassNode", "snippet": "  private ClassNode findInRT(String name) {\n    if (loadedRuntimeClasses.containsKey(name)) {\n      return loadedRuntimeClasses.get(name);\n    }\n    String classFile = \"/\" + name + \".class\";\n    URL url = ReobfuscateMembers.class.getResource(classFile);\n    try {\n      ClassNode loadedNode = Conversion.toNode(IOUtils.toByteArray(url));\n      loadedRuntimeClasses.put(name, loadedNode);\n      return loadedNode;\n    } catch (Exception e) {\n      if (verbose)\n        Threadtear.logger.warning(\"Couldn't find or resolve {}, {}\", name, shortStacktrace(e));\n      return null;\n    }\n  }", "url": "https://raw.githubusercontent.com/GraxCode/threadtear/master/src/me/nov/threadtear/execution/analysis/ReobfuscateMembers.java", "stars": "140", "class_props": {"extends": "Execution", "implements": null, "modifiers": ["public"]}}, {"id": 61818, "method_name": "equalsMethod", "class_name": "MappedMember", "params": ["MethodNode"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean equalsMethod(MethodNode mn) {\n      return oldName.equals(mn.name) && oldDesc.equals(mn.desc);\n    }", "url": "https://raw.githubusercontent.com/GraxCode/threadtear/master/src/me/nov/threadtear/execution/analysis/ReobfuscateMembers.java", "stars": "140", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "static"]}}, {"id": 61819, "method_name": "equalsField", "class_name": "MappedMember", "params": ["FieldNode"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean equalsField(FieldNode fn) {\n      return oldName.equals(fn.name) && oldDesc.equals(fn.desc);\n    }", "url": "https://raw.githubusercontent.com/GraxCode/threadtear/master/src/me/nov/threadtear/execution/analysis/ReobfuscateMembers.java", "stars": "140", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "static"]}}, {"id": 61820, "method_name": "toString", "class_name": "MappedMember", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String toString() {\n      return oldName + oldDesc + \" -> \" + newName;\n    }", "url": "https://raw.githubusercontent.com/GraxCode/threadtear/master/src/me/nov/threadtear/execution/analysis/ReobfuscateMembers.java", "stars": "140", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "static"]}}, {"id": 61821, "method_name": "getLocalIpByNetCard", "class_name": "ServerStart", "params": [], "throws": null, "modifiers": ["public", "static"], "return_type": "String", "snippet": "\tpublic static String getLocalIpByNetCard() {\n\t\ttry {\n\t\t\tfor (Enumeration<NetworkInterface> e = NetworkInterface.getNetworkInterfaces(); e.hasMoreElements(); ) {\n\t\t\t\tNetworkInterface item = e.nextElement();\n\t\t\t\tfor (InterfaceAddress address : item.getInterfaceAddresses()) {\n\t\t\t\t\tif (item.isLoopback() || !item.isUp()) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t\tif (address.getAddress() instanceof Inet4Address) {\n\t\t\t\t\t\tInet4Address inet4Address = (Inet4Address) address.getAddress();\n\t\t\t\t\t\treturn inet4Address.getHostAddress();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn InetAddress.getLocalHost().getHostAddress();\n\t\t} catch (Exception e) {\n\t\t\tthrow new RuntimeException(e);\n\t\t}\n\t}", "url": "https://raw.githubusercontent.com/JosephTribbianni/JNDI/master/src/main/java/org/su18/server/ServerStart.java", "stars": "165", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 61822, "method_name": "getIpAddr", "class_name": "ServerStart", "params": [], "throws": null, "modifiers": ["public", "static"], "return_type": "String", "snippet": "\tpublic static String getIpAddr() {\n\t\tString ip = StringUtil.getCurrentPropertiesValue(\"server.ip\");\n\t\tif (!StringUtil.isNotEmpty(ip)) {\n\t\t\tip = getLocalIpByNetCard();\n\t\t}\n\t\treturn ip;\n\t}", "url": "https://raw.githubusercontent.com/JosephTribbianni/JNDI/master/src/main/java/org/su18/server/ServerStart.java", "stars": "165", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 61823, "method_name": "main", "class_name": "ServerStart", "params": ["String"], "throws": ["Exception"], "modifiers": ["public", "static"], "return_type": "void", "snippet": "\tpublic static void main(String[] args) throws Exception {\n\n\t\tServerStart servers = new ServerStart(new URL(\"http://\" + addr + \":\" + jettyPort + \"/\"));\n\t\tClass.forName(\"org.su18.utils.Mapper\");\n\n\t\tLogger.print(\"-------------------------- \u670d\u52a1\u7aef\u65e5\u5fd7 ---------------------------\");\n\t\tLogger.info(\"JETTY \u670d\u52a1\u5668\u542f\u52a8 >> \u76d1\u542c\u5730\u5740\uff1a0.0.0.0:\" + jettyPort);\n\t\tThread threadJetty = new Thread(servers.jettyServer);\n\t\tthreadJetty.start();\n\n\t\tLogger.info(\" RMI  \u670d\u52a1\u5668\u542f\u52a8 >> \u76d1\u542c\u5730\u5740\uff1a0.0.0.0:\" + rmiPort);\n\t\tThread threadRMI = new Thread(servers.rmiServer);\n\t\tthreadRMI.start();\n\n\t\tLogger.info(\"LDAP  \u670d\u52a1\u5668\u542f\u52a8 >> \u76d1\u542c\u5730\u5740\uff1a0.0.0.0:\" + ldapPort);\n\t\tThread threadLDAP = new Thread(servers.ldapServer);\n\t\tthreadLDAP.start();\n\n\t}", "url": "https://raw.githubusercontent.com/JosephTribbianni/JNDI/master/src/main/java/org/su18/server/ServerStart.java", "stars": "165", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 61824, "method_name": "getDataBaseSource", "class_name": "AbstractDatabaseSource", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "AbstractDataBasePool", "snippet": "    public AbstractDataBasePool getDataBaseSource(String uuid) {\n        Objects.requireNonNull(uuid);\n        return pools.get(uuid);\n    }", "url": "https://raw.githubusercontent.com/GZYangKui/openjfx-database/master/database/src/main/java/com/openjfx/database/base/AbstractDatabaseSource.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 61825, "method_name": "createPool", "class_name": "AbstractDatabaseSource", "params": ["ConnectionParam"], "throws": null, "modifiers": ["public", "abstract"], "return_type": "AbstractDataBasePool", "snippet": "    public abstract AbstractDataBasePool createPool(ConnectionParam params);\n\n    /**\n     * \u5173\u95ed\u67d0\u4e00\u4e2a\u8fde\u63a5\u6c60\n     *\n     * @param uuid uuid\n     */\n    public abstract void close(String uuid);\n\n    /**\n     * \u5173\u95ed\u8d44\u6e90\n     */\n    public abstract void closeAll();\n\n    /**\n     * \u9632\u6b62\u957f\u65f6\u95f4\u6ca1\u6709\u4ea4\u4e92\u4e0e\u6570\u636e\u5e93\u670d\u52a1\u5668\u5931\u53bb\u54cd\u5e94\n     */\n    public abstract void heartBeat();\n}\n\n", "url": "https://raw.githubusercontent.com/GZYangKui/openjfx-database/master/database/src/main/java/com/openjfx/database/base/AbstractDatabaseSource.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 61826, "method_name": "close", "class_name": "AbstractDatabaseSource", "params": ["String"], "throws": null, "modifiers": ["public", "abstract"], "return_type": "void", "snippet": "    public abstract void close(String uuid);\n\n    /**\n     * \u5173\u95ed\u8d44\u6e90\n     */\n    public abstract void closeAll();\n\n    /**\n     * \u9632\u6b62\u957f\u65f6\u95f4\u6ca1\u6709\u4ea4\u4e92\u4e0e\u6570\u636e\u5e93\u670d\u52a1\u5668\u5931\u53bb\u54cd\u5e94\n     */\n    public abstract void heartBeat();\n}\n\n", "url": "https://raw.githubusercontent.com/GZYangKui/openjfx-database/master/database/src/main/java/com/openjfx/database/base/AbstractDatabaseSource.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 61827, "method_name": "closeAll", "class_name": "AbstractDatabaseSource", "params": [], "throws": null, "modifiers": ["public", "abstract"], "return_type": "void", "snippet": "    public abstract void closeAll();\n\n    /**\n     * \u9632\u6b62\u957f\u65f6\u95f4\u6ca1\u6709\u4ea4\u4e92\u4e0e\u6570\u636e\u5e93\u670d\u52a1\u5668\u5931\u53bb\u54cd\u5e94\n     */\n    public abstract void heartBeat();\n}\n\n", "url": "https://raw.githubusercontent.com/GZYangKui/openjfx-database/master/database/src/main/java/com/openjfx/database/base/AbstractDatabaseSource.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 61828, "method_name": "heartBeat", "class_name": "AbstractDatabaseSource", "params": [], "throws": null, "modifiers": ["public", "abstract"], "return_type": "void", "snippet": "    public abstract void heartBeat();\n}\n\n", "url": "https://raw.githubusercontent.com/GZYangKui/openjfx-database/master/database/src/main/java/com/openjfx/database/base/AbstractDatabaseSource.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 61829, "method_name": "toProperties", "class_name": "PropertyUtils", "params": ["TreeMap<String,Map>"], "throws": null, "modifiers": ["public", "static"], "return_type": "String", "snippet": "  public static String toProperties(TreeMap<String, Map<String, Object>> config) {\n    StringBuilder sb = new StringBuilder();\n    for (String key : config.keySet()) {\n      sb.append(toString(key, config.get(key)));\n    }\n    return sb.toString();\n  }", "url": "https://raw.githubusercontent.com/AquiverV/apex/master/src/main/java/org/apex/PropertyUtils.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["final", "public"]}}, {"id": 61830, "method_name": "confFieldMap", "class_name": "PropertyUtils", "params": [], "throws": ["IllegalAccessException"], "modifiers": ["public", "static"], "return_type": "Map<String,String>", "snippet": "  public static Map<String, String> confFieldMap() throws IllegalAccessException {\n    final Map<String, String> constArgsMap = new HashMap<>();\n    List<Field> fields = Arrays.asList(Const.class.getFields());\n    for (Field field : new ArrayList<>(fields)) {\n      if (field.getName().contains(Const.PATH_PREFIX_ROOT)) {\n        continue;\n      }\n      constArgsMap.put(field.getName(), String.valueOf(field.get(field.getName())));\n    }\n    return constArgsMap;\n  }", "url": "https://raw.githubusercontent.com/AquiverV/apex/master/src/main/java/org/apex/PropertyUtils.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["final", "public"]}}, {"id": 61831, "method_name": "toString", "class_name": "PropertyUtils", "params": ["String", "Map<String,Object>"], "throws": null, "modifiers": ["public", "static"], "return_type": "String", "snippet": "  public static String toString(String key, Map<String, Object> map) {\n    StringBuilder sb = new StringBuilder();\n    for (String mapKey : map.keySet()) {\n      if (map.get(mapKey) instanceof Map) {\n        sb.append(toString(String.format(\"%s.%s\", key, mapKey), (Map<String, Object>) map.get(mapKey)));\n      } else {\n        sb.append(String.format(\"%s.%s=%s%n\", key, mapKey, map.get(mapKey).toString()));\n      }\n    }\n    return sb.toString();\n  }", "url": "https://raw.githubusercontent.com/AquiverV/apex/master/src/main/java/org/apex/PropertyUtils.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["final", "public"]}}, {"id": 61832, "method_name": "parseArgs", "class_name": "PropertyUtils", "params": ["String"], "throws": null, "modifiers": ["public", "static"], "return_type": "Map<String,String>", "snippet": "  public static Map<String, String> parseArgs(String[] args) {\n    Map<String, String> argsMap = new HashMap<>();\n    if (args == null || args.length == 0) {\n      return argsMap;\n    }\n\n    for (String arg : args) {\n      if (arg.startsWith(\"--\") && arg.contains(\"=\")) {\n        String[] param = arg.substring(2).split(\"=\");\n        argsMap.put(param[0], param[1]);\n      }\n    }\n    return argsMap;\n  }", "url": "https://raw.githubusercontent.com/AquiverV/apex/master/src/main/java/org/apex/PropertyUtils.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["final", "public"]}}, {"id": 61833, "method_name": "yaml", "class_name": "PropertyUtils", "params": ["String"], "throws": null, "modifiers": ["public", "static"], "return_type": "TreeMap<String,Map>", "snippet": "  public static TreeMap<String, Map<String, Object>> yaml(String location) {\n    if (!location.startsWith(\"/\")) {\n      location = \"/\" + location;\n    }\n    InputStream resourceAsStream = PropertyUtils.class.getResourceAsStream(location);\n    if (resourceAsStream == null) {\n      return null;\n    }\n    return yaml().loadAs(resourceAsStream, TreeMap.class);\n  }", "url": "https://raw.githubusercontent.com/AquiverV/apex/master/src/main/java/org/apex/PropertyUtils.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["final", "public"]}}, {"id": 61834, "method_name": "yaml", "class_name": "PropertyUtils", "params": [], "throws": null, "modifiers": ["static", "private"], "return_type": "Yaml", "snippet": "  private static Yaml yaml() {\n    return new Yaml();\n  }", "url": "https://raw.githubusercontent.com/AquiverV/apex/master/src/main/java/org/apex/PropertyUtils.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["final", "public"]}}, {"id": 61835, "method_name": "getCurrentClassPath", "class_name": "PropertyUtils", "params": [], "throws": null, "modifiers": ["public", "static"], "return_type": "String", "snippet": "  public static String getCurrentClassPath() {\n    URL url = PropertyUtils.class.getResource(\"/\");\n    String path;\n    if (null == url) {\n      File f = new File(PropertyUtils.class.getProtectionDomain().getCodeSource().getLocation().getPath());\n      path = f.getPath();\n    } else {\n      path = url.getPath();\n    }\n    try {\n      if (isWindows()) {\n        return decode(path.replaceFirst(\"^/(.:/)\", \"$1\"));\n      }\n      return decode(path);\n    } catch (UnsupportedEncodingException e) {\n      return \"/\";\n    }\n  }", "url": "https://raw.githubusercontent.com/AquiverV/apex/master/src/main/java/org/apex/PropertyUtils.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["final", "public"]}}, {"id": 61836, "method_name": "decode", "class_name": "PropertyUtils", "params": ["String"], "throws": ["UnsupportedEncodingException"], "modifiers": ["static", "private"], "return_type": "String", "snippet": "  private static String decode(String path) throws UnsupportedEncodingException {\n    return java.net.URLDecoder.decode(path, StandardCharsets.UTF_8);\n  }", "url": "https://raw.githubusercontent.com/AquiverV/apex/master/src/main/java/org/apex/PropertyUtils.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["final", "public"]}}, {"id": 61837, "method_name": "type", "class_name": "FlushInterceptorLegacy", "params": [], "throws": null, "modifiers": ["public", "static"], "return_type": "ElementMatcher<TypeDescription>", "snippet": "    public static ElementMatcher<? super TypeDescription> type()\n    {\n        return ElementMatchers.nameEndsWith(\"Memtable\");\n    }", "url": "https://raw.githubusercontent.com/datastax/metric-collector-for-apache-cassandra/master/src/main/java/com/datastax/mcac/interceptors/FlushInterceptorLegacy.java", "stars": "23", "class_props": {"extends": "AbstractInterceptor", "implements": null, "modifiers": ["public"]}}, {"id": 61838, "method_name": "transformer", "class_name": "FlushInterceptorLegacy", "params": [], "throws": null, "modifiers": ["public", "static"], "return_type": "AgentBuilder", "snippet": "    public static AgentBuilder.Transformer transformer()\n    {\n        return new AgentBuilder.Transformer() {\n            @Override\n            public DynamicType.Builder<?> transform(DynamicType.Builder<?> builder, TypeDescription typeDescription, ClassLoader classLoader, JavaModule javaModule)\n            {\n                return builder.method(ElementMatchers.named(\"flush\")).intercept(MethodDelegation.to(FlushInterceptorLegacy.class));\n            }\n        };\n    }", "url": "https://raw.githubusercontent.com/datastax/metric-collector-for-apache-cassandra/master/src/main/java/com/datastax/mcac/interceptors/FlushInterceptorLegacy.java", "stars": "23", "class_props": {"extends": "AbstractInterceptor", "implements": null, "modifiers": ["public"]}}, {"id": 61839, "method_name": "intercept", "class_name": "FlushInterceptorLegacy", "params": ["Object", "Callable<Object>"], "throws": ["Throwable"], "modifiers": ["public", "static"], "return_type": "Object", "snippet": "    public static Object intercept(@This Object instance, @SuperCall Callable<Object> zuper) throws Throwable\n    {\n        long start = System.currentTimeMillis();\n        Object rObj = zuper.call();\n\n        try\n        {\n            long duration = System.currentTimeMillis() - start;\n            Collection<SSTableReader> result;\n            if (rObj instanceof Collection)\n                result = (Collection<SSTableReader>) rObj;\n            else\n                result = Collections.singletonList((SSTableReader) rObj);\n\n            client.get().report(new FlushInformation((Memtable) instance, result, duration, result.isEmpty()));\n        }\n        catch (Throwable t)\n        {\n            logger.info(\"Problem collecting flush information\", t);\n        }\n\n        return rObj;\n    }", "url": "https://raw.githubusercontent.com/datastax/metric-collector-for-apache-cassandra/master/src/main/java/com/datastax/mcac/interceptors/FlushInterceptorLegacy.java", "stars": "23", "class_props": {"extends": "AbstractInterceptor", "implements": null, "modifiers": ["public"]}}, {"id": 61840, "method_name": "onAttachedToWindow", "class_name": "TabbedPageRenderer", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void onAttachedToWindow ()\n\t{\n\t\tn_onAttachedToWindow ();\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc64720bb2db43a66fe9/TabbedPageRenderer.java", "stars": "2", "class_props": {"extends": "crc643f46942d9dd1fff9", "implements": ["mono", "android", "android", "android"], "modifiers": ["public"]}}, {"id": 61841, "method_name": "n_onAttachedToWindow", "class_name": "TabbedPageRenderer", "params": [], "throws": null, "modifiers": ["private", "native"], "return_type": "void", "snippet": "\tprivate native void n_onAttachedToWindow ();\n\n\n\tpublic void onDetachedFromWindow ()\n\t{\n\t\tn_onDetachedFromWindow ();\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc64720bb2db43a66fe9/TabbedPageRenderer.java", "stars": "2", "class_props": {"extends": "crc643f46942d9dd1fff9", "implements": ["mono", "android", "android", "android"], "modifiers": ["public"]}}, {"id": 61842, "method_name": "onDetachedFromWindow", "class_name": "TabbedPageRenderer", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void onDetachedFromWindow ()\n\t{\n\t\tn_onDetachedFromWindow ();\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc64720bb2db43a66fe9/TabbedPageRenderer.java", "stars": "2", "class_props": {"extends": "crc643f46942d9dd1fff9", "implements": ["mono", "android", "android", "android"], "modifiers": ["public"]}}, {"id": 61843, "method_name": "n_onDetachedFromWindow", "class_name": "TabbedPageRenderer", "params": [], "throws": null, "modifiers": ["private", "native"], "return_type": "void", "snippet": "\tprivate native void n_onDetachedFromWindow ();\n\n\n\tpublic void onLayout (boolean p0, int p1, int p2, int p3, int p4)\n\t{\n\t\tn_onLayout (p0, p1, p2, p3, p4);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc64720bb2db43a66fe9/TabbedPageRenderer.java", "stars": "2", "class_props": {"extends": "crc643f46942d9dd1fff9", "implements": ["mono", "android", "android", "android"], "modifiers": ["public"]}}, {"id": 61844, "method_name": "onLayout", "class_name": "TabbedPageRenderer", "params": ["boolean", "int", "int", "int", "int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void onLayout (boolean p0, int p1, int p2, int p3, int p4)\n\t{\n\t\tn_onLayout (p0, p1, p2, p3, p4);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc64720bb2db43a66fe9/TabbedPageRenderer.java", "stars": "2", "class_props": {"extends": "crc643f46942d9dd1fff9", "implements": ["mono", "android", "android", "android"], "modifiers": ["public"]}}, {"id": 61845, "method_name": "n_onLayout", "class_name": "TabbedPageRenderer", "params": ["boolean", "int", "int", "int", "int"], "throws": null, "modifiers": ["private", "native"], "return_type": "void", "snippet": "\tprivate native void n_onLayout (boolean p0, int p1, int p2, int p3, int p4);\n\n\n\tpublic void onTabReselected (android.support.design.widget.TabLayout.Tab p0)\n\t{\n\t\tn_onTabReselected (p0);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc64720bb2db43a66fe9/TabbedPageRenderer.java", "stars": "2", "class_props": {"extends": "crc643f46942d9dd1fff9", "implements": ["mono", "android", "android", "android"], "modifiers": ["public"]}}, {"id": 61846, "method_name": "onTabReselected", "class_name": "TabbedPageRenderer", "params": ["android"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void onTabReselected (android.support.design.widget.TabLayout.Tab p0)\n\t{\n\t\tn_onTabReselected (p0);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc64720bb2db43a66fe9/TabbedPageRenderer.java", "stars": "2", "class_props": {"extends": "crc643f46942d9dd1fff9", "implements": ["mono", "android", "android", "android"], "modifiers": ["public"]}}, {"id": 61847, "method_name": "n_onTabReselected", "class_name": "TabbedPageRenderer", "params": ["android"], "throws": null, "modifiers": ["private", "native"], "return_type": "void", "snippet": "\tprivate native void n_onTabReselected (android.support.design.widget.TabLayout.Tab p0);\n\n\n\tpublic void onTabSelected (android.support.design.widget.TabLayout.Tab p0)\n\t{\n\t\tn_onTabSelected (p0);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc64720bb2db43a66fe9/TabbedPageRenderer.java", "stars": "2", "class_props": {"extends": "crc643f46942d9dd1fff9", "implements": ["mono", "android", "android", "android"], "modifiers": ["public"]}}, {"id": 61848, "method_name": "onTabSelected", "class_name": "TabbedPageRenderer", "params": ["android"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void onTabSelected (android.support.design.widget.TabLayout.Tab p0)\n\t{\n\t\tn_onTabSelected (p0);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc64720bb2db43a66fe9/TabbedPageRenderer.java", "stars": "2", "class_props": {"extends": "crc643f46942d9dd1fff9", "implements": ["mono", "android", "android", "android"], "modifiers": ["public"]}}, {"id": 61849, "method_name": "n_onTabSelected", "class_name": "TabbedPageRenderer", "params": ["android"], "throws": null, "modifiers": ["private", "native"], "return_type": "void", "snippet": "\tprivate native void n_onTabSelected (android.support.design.widget.TabLayout.Tab p0);\n\n\n\tpublic void onTabUnselected (android.support.design.widget.TabLayout.Tab p0)\n\t{\n\t\tn_onTabUnselected (p0);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc64720bb2db43a66fe9/TabbedPageRenderer.java", "stars": "2", "class_props": {"extends": "crc643f46942d9dd1fff9", "implements": ["mono", "android", "android", "android"], "modifiers": ["public"]}}, {"id": 61850, "method_name": "onTabUnselected", "class_name": "TabbedPageRenderer", "params": ["android"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void onTabUnselected (android.support.design.widget.TabLayout.Tab p0)\n\t{\n\t\tn_onTabUnselected (p0);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc64720bb2db43a66fe9/TabbedPageRenderer.java", "stars": "2", "class_props": {"extends": "crc643f46942d9dd1fff9", "implements": ["mono", "android", "android", "android"], "modifiers": ["public"]}}, {"id": 61851, "method_name": "n_onTabUnselected", "class_name": "TabbedPageRenderer", "params": ["android"], "throws": null, "modifiers": ["private", "native"], "return_type": "void", "snippet": "\tprivate native void n_onTabUnselected (android.support.design.widget.TabLayout.Tab p0);\n\n\n\tpublic void onPageScrollStateChanged (int p0)\n\t{\n\t\tn_onPageScrollStateChanged (p0);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc64720bb2db43a66fe9/TabbedPageRenderer.java", "stars": "2", "class_props": {"extends": "crc643f46942d9dd1fff9", "implements": ["mono", "android", "android", "android"], "modifiers": ["public"]}}, {"id": 61852, "method_name": "onPageScrollStateChanged", "class_name": "TabbedPageRenderer", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void onPageScrollStateChanged (int p0)\n\t{\n\t\tn_onPageScrollStateChanged (p0);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc64720bb2db43a66fe9/TabbedPageRenderer.java", "stars": "2", "class_props": {"extends": "crc643f46942d9dd1fff9", "implements": ["mono", "android", "android", "android"], "modifiers": ["public"]}}, {"id": 61853, "method_name": "n_onPageScrollStateChanged", "class_name": "TabbedPageRenderer", "params": ["int"], "throws": null, "modifiers": ["private", "native"], "return_type": "void", "snippet": "\tprivate native void n_onPageScrollStateChanged (int p0);\n\n\n\tpublic void onPageScrolled (int p0, float p1, int p2)\n\t{\n\t\tn_onPageScrolled (p0, p1, p2);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc64720bb2db43a66fe9/TabbedPageRenderer.java", "stars": "2", "class_props": {"extends": "crc643f46942d9dd1fff9", "implements": ["mono", "android", "android", "android"], "modifiers": ["public"]}}, {"id": 61854, "method_name": "onPageScrolled", "class_name": "TabbedPageRenderer", "params": ["int", "float", "int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void onPageScrolled (int p0, float p1, int p2)\n\t{\n\t\tn_onPageScrolled (p0, p1, p2);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc64720bb2db43a66fe9/TabbedPageRenderer.java", "stars": "2", "class_props": {"extends": "crc643f46942d9dd1fff9", "implements": ["mono", "android", "android", "android"], "modifiers": ["public"]}}, {"id": 61855, "method_name": "n_onPageScrolled", "class_name": "TabbedPageRenderer", "params": ["int", "float", "int"], "throws": null, "modifiers": ["private", "native"], "return_type": "void", "snippet": "\tprivate native void n_onPageScrolled (int p0, float p1, int p2);\n\n\n\tpublic void onPageSelected (int p0)\n\t{\n\t\tn_onPageSelected (p0);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc64720bb2db43a66fe9/TabbedPageRenderer.java", "stars": "2", "class_props": {"extends": "crc643f46942d9dd1fff9", "implements": ["mono", "android", "android", "android"], "modifiers": ["public"]}}, {"id": 61856, "method_name": "onPageSelected", "class_name": "TabbedPageRenderer", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void onPageSelected (int p0)\n\t{\n\t\tn_onPageSelected (p0);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc64720bb2db43a66fe9/TabbedPageRenderer.java", "stars": "2", "class_props": {"extends": "crc643f46942d9dd1fff9", "implements": ["mono", "android", "android", "android"], "modifiers": ["public"]}}, {"id": 61857, "method_name": "n_onPageSelected", "class_name": "TabbedPageRenderer", "params": ["int"], "throws": null, "modifiers": ["private", "native"], "return_type": "void", "snippet": "\tprivate native void n_onPageSelected (int p0);\n\n\n\tpublic boolean onNavigationItemSelected (android.view.MenuItem p0)\n\t{\n\t\treturn n_onNavigationItemSelected (p0);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc64720bb2db43a66fe9/TabbedPageRenderer.java", "stars": "2", "class_props": {"extends": "crc643f46942d9dd1fff9", "implements": ["mono", "android", "android", "android"], "modifiers": ["public"]}}, {"id": 61858, "method_name": "onNavigationItemSelected", "class_name": "TabbedPageRenderer", "params": ["android"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "\tpublic boolean onNavigationItemSelected (android.view.MenuItem p0)\n\t{\n\t\treturn n_onNavigationItemSelected (p0);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc64720bb2db43a66fe9/TabbedPageRenderer.java", "stars": "2", "class_props": {"extends": "crc643f46942d9dd1fff9", "implements": ["mono", "android", "android", "android"], "modifiers": ["public"]}}, {"id": 61859, "method_name": "n_onNavigationItemSelected", "class_name": "TabbedPageRenderer", "params": ["android"], "throws": null, "modifiers": ["private", "native"], "return_type": "boolean", "snippet": "\tprivate native boolean n_onNavigationItemSelected (android.view.MenuItem p0);\n\n\tprivate java.util.ArrayList refList;\n\tpublic void monodroidAddReference (java.lang.Object obj)\n\t{\n\t\tif (refList == null)\n\t\t\trefList = new java.util.ArrayList ();\n\t\trefList.add (obj);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc64720bb2db43a66fe9/TabbedPageRenderer.java", "stars": "2", "class_props": {"extends": "crc643f46942d9dd1fff9", "implements": ["mono", "android", "android", "android"], "modifiers": ["public"]}}, {"id": 61860, "method_name": "monodroidAddReference", "class_name": "TabbedPageRenderer", "params": ["java"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void monodroidAddReference (java.lang.Object obj)\n\t{\n\t\tif (refList == null)\n\t\t\trefList = new java.util.ArrayList ();\n\t\trefList.add (obj);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc64720bb2db43a66fe9/TabbedPageRenderer.java", "stars": "2", "class_props": {"extends": "crc643f46942d9dd1fff9", "implements": ["mono", "android", "android", "android"], "modifiers": ["public"]}}, {"id": 61861, "method_name": "monodroidClearReferences", "class_name": "TabbedPageRenderer", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void monodroidClearReferences ()\n\t{\n\t\tif (refList != null)\n\t\t\trefList.clear ();\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc64720bb2db43a66fe9/TabbedPageRenderer.java", "stars": "2", "class_props": {"extends": "crc643f46942d9dd1fff9", "implements": ["mono", "android", "android", "android"], "modifiers": ["public"]}}, {"id": 61862, "method_name": "testHasAdditionalParameter", "class_name": "BoundSqlTest", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "  void testHasAdditionalParameter() {\n    List<ParameterMapping> params = Collections.emptyList();\n    BoundSql boundSql = new BoundSql(new Configuration(), \"some sql\", params, new Object());\n\n    Map<String, String> map = new HashMap<>();\n    map.put(\"key1\", \"value1\");\n    boundSql.setAdditionalParameter(\"map\", map);\n\n    Person bean = new Person();\n    bean.id = 1;\n    boundSql.setAdditionalParameter(\"person\", bean);\n\n    String[] array = new String[] {\"User1\", \"User2\"};\n    boundSql.setAdditionalParameter(\"array\", array);\n\n    assertFalse(boundSql.hasAdditionalParameter(\"pet\"));\n    assertFalse(boundSql.hasAdditionalParameter(\"pet.name\"));\n\n    assertTrue(boundSql.hasAdditionalParameter(\"map\"));\n    assertTrue(boundSql.hasAdditionalParameter(\"map.key1\"));\n    assertTrue(boundSql.hasAdditionalParameter(\"map.key2\"), \"should return true even if the child property does not exists.\");\n\n    assertTrue(boundSql.hasAdditionalParameter(\"person\"));\n    assertTrue(boundSql.hasAdditionalParameter(\"person.id\"));\n    assertTrue(boundSql.hasAdditionalParameter(\"person.name\"), \"should return true even if the child property does not exists.\");\n\n    assertTrue(boundSql.hasAdditionalParameter(\"array[0]\"));\n    assertTrue(boundSql.hasAdditionalParameter(\"array[99]\"), \"should return true even if the element does not exists.\");\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/mapping/BoundSqlTest.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 61863, "method_name": "setView", "class_name": "AboutFragment", "params": [], "throws": null, "modifiers": ["protected"], "return_type": "int", "snippet": "    protected int setView() {\n        return R.layout.about_fragment;\n    }", "url": "https://raw.githubusercontent.com/CoboVault/cobo-vault-cold/master/app/src/main/java/com/cobo/cold/ui/fragment/AboutFragment.java", "stars": "13", "class_props": {"extends": "BaseFragment", "implements": null, "modifiers": ["public"]}}, {"id": 61864, "method_name": "init", "class_name": "AboutFragment", "params": ["View"], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void init(View view) {\n        mActivity.setSupportActionBar(mBinding.toolbar);\n        mBinding.toolbar.setNavigationOnClickListener(((MainActivity) mActivity)::toggleDrawer);\n        mBinding.toolbar.setTitle(\"\");\n        mBinding.logo.setOnClickListener(new ExportLogHandler(mActivity,Executors.newSingleThreadExecutor()));\n    }", "url": "https://raw.githubusercontent.com/CoboVault/cobo-vault-cold/master/app/src/main/java/com/cobo/cold/ui/fragment/AboutFragment.java", "stars": "13", "class_props": {"extends": "BaseFragment", "implements": null, "modifiers": ["public"]}}, {"id": 61865, "method_name": "initData", "class_name": "AboutFragment", "params": ["Bundle"], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void initData(Bundle savedInstanceState) {\n        mBinding.setViewModel(ViewModelProviders.of(this).get(AboutViewModel.class));\n    }", "url": "https://raw.githubusercontent.com/CoboVault/cobo-vault-cold/master/app/src/main/java/com/cobo/cold/ui/fragment/AboutFragment.java", "stars": "13", "class_props": {"extends": "BaseFragment", "implements": null, "modifiers": ["public"]}}, {"id": 61866, "method_name": "onClick", "class_name": "ExportLogHandler", "params": ["View"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "        public void onClick(View v) {\n            if (isExporting) {\n                return;\n            }\n            System.arraycopy(mHits, 1, mHits, 0, mHits.length - 1);\n            mHits[mHits.length - 1] = SystemClock.uptimeMillis();\n            if (mHits[0] >= (SystemClock.uptimeMillis() - DURATION)) {\n                executor.execute(() -> {\n                    isExporting = true;\n                    String message;\n                    if (FileLogger.exportLogfiles(activity)) {\n                        message = \"export log success\";\n                    } else {\n                        message = \"export log failed\";\n                    }\n                    isExporting = false;\n                    activity.runOnUiThread(() ->\n                            Toast.makeText(activity, message, Toast.LENGTH_SHORT).show());\n                });\n            }\n        }", "url": "https://raw.githubusercontent.com/CoboVault/cobo-vault-cold/master/app/src/main/java/com/cobo/cold/ui/fragment/AboutFragment.java", "stars": "13", "class_props": {"extends": null, "implements": ["View"], "modifiers": ["public", "static"]}}, {"id": 61867, "method_name": "initApplication", "class_name": "SparrowApp", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void initApplication() {\n        Collection<String> activeProfiles = Arrays.asList(env.getActiveProfiles());\n        if (\n            activeProfiles.contains(JHipsterConstants.SPRING_PROFILE_DEVELOPMENT) &&\n            activeProfiles.contains(JHipsterConstants.SPRING_PROFILE_PRODUCTION)\n        ) {\n            log.error(\n                \"You have misconfigured your application! It should not run \" + \"with both the 'dev' and 'prod' profiles at the same time.\"\n            );\n        }\n        if (\n            activeProfiles.contains(JHipsterConstants.SPRING_PROFILE_DEVELOPMENT) &&\n            activeProfiles.contains(JHipsterConstants.SPRING_PROFILE_CLOUD)\n        ) {\n            log.error(\n                \"You have misconfigured your application! It should not \" + \"run with both the 'dev' and 'cloud' profiles at the same time.\"\n            );\n        }\n    }", "url": "https://raw.githubusercontent.com/Vondser/mmwms-antd/master/src/main/java/com/meimos/myapp/SparrowApp.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 61868, "method_name": "main", "class_name": "SparrowApp", "params": ["String"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void main(String[] args) {\n        SpringApplication app = new SpringApplication(SparrowApp.class);\n        DefaultProfileUtil.addDefaultProfile(app);\n        Environment env = app.run(args).getEnvironment();\n        logApplicationStartup(env);\n    }", "url": "https://raw.githubusercontent.com/Vondser/mmwms-antd/master/src/main/java/com/meimos/myapp/SparrowApp.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 61869, "method_name": "logApplicationStartup", "class_name": "SparrowApp", "params": ["Environment"], "throws": null, "modifiers": ["static", "private"], "return_type": "void", "snippet": "    private static void logApplicationStartup(Environment env) {\n        String protocol = \"http\";\n        if (env.getProperty(\"server.ssl.key-store\") != null) {\n            protocol = \"https\";\n        }\n        String serverPort = env.getProperty(\"server.port\");\n        String contextPath = env.getProperty(\"server.servlet.context-path\");\n        if (StringUtils.isBlank(contextPath)) {\n            contextPath = \"/\";\n        }\n        String hostAddress = \"localhost\";\n        try {\n            hostAddress = InetAddress.getLocalHost().getHostAddress();\n        } catch (UnknownHostException e) {\n            log.warn(\"The host name could not be determined, using `localhost` as fallback\");\n        }\n        log.info(\n            \"\\n----------------------------------------------------------\\n\\t\" +\n            \"Application '{}' is running! Access URLs:\\n\\t\" +\n            \"Local: \\t\\t{}://localhost:{}{}\\n\\t\" +\n            \"External: \\t{}://{}:{}{}\\n\\t\" +\n            \"Profile(s): \\t{}\\n----------------------------------------------------------\",\n            env.getProperty(\"spring.application.name\"),\n            protocol,\n            serverPort,\n            contextPath,\n            protocol,\n            hostAddress,\n            serverPort,\n            contextPath,\n            env.getActiveProfiles()\n        );\n    }", "url": "https://raw.githubusercontent.com/Vondser/mmwms-antd/master/src/main/java/com/meimos/myapp/SparrowApp.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 61870, "method_name": "process", "class_name": "InviteRequestProcessor", "params": ["RequestEvent", "SipLayer", "ServerTransaction"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void process(RequestEvent evt, SipLayer layer, ServerTransaction transaction) {\n\t\t// TODO Auto-generated method stub\n//\t\tRequest request = requestEvent.getRequest();\n//\n//\t\ttry {\n//\t\t\t// \u53d1\u9001100 Trying\n//\t\t\tServerTransaction serverTransaction = getServerTransaction(requestEvent);\n//\t\t\t// \u67e5\u8be2\u76ee\u6807\u5730\u5740\n//\t\t\tURI reqUri = request.getRequestURI();\n//\t\t\tURI contactURI = currUser.get(reqUri);\n//\n//\t\t\tSystem.out.println(\"processInvite rqStr=\" + reqUri + \" contact=\" + contactURI);\n//\n//\t\t\t// \u6839\u636eRequest uri\u6765\u8def\u7531\uff0c\u540e\u7eed\u7684\u54cd\u5e94\u6d88\u606f\u901a\u8fc7VIA\u6765\u8def\u7531\n//\t\t\tRequest cliReq = messageFactory.createRequest(request.toString());\n//\t\t\tcliReq.setRequestURI(contactURI);\n//\n//\t\t\tHeaderFactory headerFactory = SipFactory.getInstance().createHeaderFactory();\n//\t\t\tVia callerVia = (Via) request.getHeader(Via.NAME);\n//\t\t\tVia via = (Via) headerFactory.createViaHeader(SIPMain.ip, SIPMain.port, \"UDP\",\n//\t\t\t\t\tcallerVia.getBranch() + \"sipphone\");\n//\n//\t\t\t// FIXME \u9700\u8981\u6d4b\u8bd5\u662f\u5426\u80fd\u591f\u901a\u8fc7\u8bbe\u7f6eVIA\u5934\u57df\u6765\u4fee\u6539VIA\u5934\u57df\u503c\n//\t\t\tcliReq.removeHeader(Via.NAME);\n//\t\t\tcliReq.addHeader(via);\n//\n//\t\t\t// \u66f4\u65b0contact\u7684\u5730\u5740\n//\t\t\tContactHeader contactHeader = headerFactory.createContactHeader();\n//\t\t\tAddress address = SipFactory.getInstance().createAddressFactory()\n//\t\t\t\t\t.createAddress(\"sip:sipsoft@\" + SIPMain.ip + \":\" + SIPMain.port);\n//\t\t\tcontactHeader.setAddress(address);\n//\t\t\tcontactHeader.setExpires(3600);\n//\t\t\tcliReq.setHeader(contactHeader);\n//\n//\t\t\tclientTransactionId = sipProvider.getNewClientTransaction(cliReq);\n//\t\t\tclientTransactionId.sendRequest();\n//\n//\t\t\tSystem.out.println(\"processInvite clientTransactionId=\" + clientTransactionId.toString());\n//\n//\t\t\tSystem.out.println(\"send invite to callee: \" + cliReq);\n//\t\t} catch (TransactionUnavailableException e1) {\n//\t\t\te1.printStackTrace();\n//\t\t} catch (SipException e) {\n//\t\t\te.printStackTrace();\n//\t\t} catch (ParseException e) {\n//\t\t\te.printStackTrace();\n//\t\t} catch (Exception e) {\n//\t\t\te.printStackTrace();\n//\t\t}\n\t}", "url": "https://raw.githubusercontent.com/swwheihei/wvp/master/src/main/java/com/genersoft/iot/vmp/gb28181/transmit/request/impl/InviteRequestProcessor.java", "stars": "29", "class_props": {"extends": null, "implements": ["ISIPRequestProcessor"], "modifiers": ["public"]}}, {"id": 61871, "method_name": "tech", "class_name": "MissileBaseShield", "params": [], "throws": null, "modifiers": ["public"], "return_type": "TechDeflectorShield", "snippet": "    public TechDeflectorShield tech()  { return (TechDeflectorShield) super.tech(); }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/colony/MissileBaseShield.java", "stars": "74", "class_props": {"extends": "MissileBaseComponent", "implements": null, "modifiers": ["final", "public"]}}, {"id": 61872, "method_name": "level", "class_name": "MissileBaseShield", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int level() {\n        return tech() == null ? 0 : tech().damage;\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/colony/MissileBaseShield.java", "stars": "74", "class_props": {"extends": "MissileBaseComponent", "implements": null, "modifiers": ["final", "public"]}}, {"id": 61873, "method_name": "newInstance", "class_name": "SqlSessionManager", "params": ["Reader"], "throws": null, "modifiers": ["public", "static"], "return_type": "SqlSessionManager", "snippet": "  public static SqlSessionManager newInstance(Reader reader) {\n    return new SqlSessionManager(new SqlSessionFactoryBuilder().build(reader, null, null));\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/session/SqlSessionManager.java", "stars": "15", "class_props": {"extends": null, "implements": ["SqlSessionFactory", "SqlSession"], "modifiers": ["public"]}}, {"id": 61874, "method_name": "newInstance", "class_name": "SqlSessionManager", "params": ["Reader", "String"], "throws": null, "modifiers": ["public", "static"], "return_type": "SqlSessionManager", "snippet": "  public static SqlSessionManager newInstance(Reader reader, String environment) {\n    return new SqlSessionManager(new SqlSessionFactoryBuilder().build(reader, environment, null));\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/session/SqlSessionManager.java", "stars": "15", "class_props": {"extends": null, "implements": ["SqlSessionFactory", "SqlSession"], "modifiers": ["public"]}}, {"id": 61875, "method_name": "newInstance", "class_name": "SqlSessionManager", "params": ["Reader", "Properties"], "throws": null, "modifiers": ["public", "static"], "return_type": "SqlSessionManager", "snippet": "  public static SqlSessionManager newInstance(Reader reader, Properties properties) {\n    return new SqlSessionManager(new SqlSessionFactoryBuilder().build(reader, null, properties));\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/session/SqlSessionManager.java", "stars": "15", "class_props": {"extends": null, "implements": ["SqlSessionFactory", "SqlSession"], "modifiers": ["public"]}}, {"id": 61876, "method_name": "newInstance", "class_name": "SqlSessionManager", "params": ["InputStream"], "throws": null, "modifiers": ["public", "static"], "return_type": "SqlSessionManager", "snippet": "  public static SqlSessionManager newInstance(InputStream inputStream) {\n    return new SqlSessionManager(new SqlSessionFactoryBuilder().build(inputStream, null, null));\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/session/SqlSessionManager.java", "stars": "15", "class_props": {"extends": null, "implements": ["SqlSessionFactory", "SqlSession"], "modifiers": ["public"]}}, {"id": 61877, "method_name": "newInstance", "class_name": "SqlSessionManager", "params": ["InputStream", "String"], "throws": null, "modifiers": ["public", "static"], "return_type": "SqlSessionManager", "snippet": "  public static SqlSessionManager newInstance(InputStream inputStream, String environment) {\n    return new SqlSessionManager(new SqlSessionFactoryBuilder().build(inputStream, environment, null));\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/session/SqlSessionManager.java", "stars": "15", "class_props": {"extends": null, "implements": ["SqlSessionFactory", "SqlSession"], "modifiers": ["public"]}}, {"id": 61878, "method_name": "newInstance", "class_name": "SqlSessionManager", "params": ["InputStream", "Properties"], "throws": null, "modifiers": ["public", "static"], "return_type": "SqlSessionManager", "snippet": "  public static SqlSessionManager newInstance(InputStream inputStream, Properties properties) {\n    return new SqlSessionManager(new SqlSessionFactoryBuilder().build(inputStream, null, properties));\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/session/SqlSessionManager.java", "stars": "15", "class_props": {"extends": null, "implements": ["SqlSessionFactory", "SqlSession"], "modifiers": ["public"]}}, {"id": 61879, "method_name": "newInstance", "class_name": "SqlSessionManager", "params": ["SqlSessionFactory"], "throws": null, "modifiers": ["public", "static"], "return_type": "SqlSessionManager", "snippet": "  public static SqlSessionManager newInstance(SqlSessionFactory sqlSessionFactory) {\n    return new SqlSessionManager(sqlSessionFactory);\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/session/SqlSessionManager.java", "stars": "15", "class_props": {"extends": null, "implements": ["SqlSessionFactory", "SqlSession"], "modifiers": ["public"]}}, {"id": 61880, "method_name": "startManagedSession", "class_name": "SqlSessionManager", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void startManagedSession() {\n    this.localSqlSession.set(openSession());\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/session/SqlSessionManager.java", "stars": "15", "class_props": {"extends": null, "implements": ["SqlSessionFactory", "SqlSession"], "modifiers": ["public"]}}, {"id": 61881, "method_name": "startManagedSession", "class_name": "SqlSessionManager", "params": ["boolean"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void startManagedSession(boolean autoCommit) {\n    this.localSqlSession.set(openSession(autoCommit));\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/session/SqlSessionManager.java", "stars": "15", "class_props": {"extends": null, "implements": ["SqlSessionFactory", "SqlSession"], "modifiers": ["public"]}}, {"id": 61882, "method_name": "startManagedSession", "class_name": "SqlSessionManager", "params": ["Connection"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void startManagedSession(Connection connection) {\n    this.localSqlSession.set(openSession(connection));\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/session/SqlSessionManager.java", "stars": "15", "class_props": {"extends": null, "implements": ["SqlSessionFactory", "SqlSession"], "modifiers": ["public"]}}, {"id": 61883, "method_name": "startManagedSession", "class_name": "SqlSessionManager", "params": ["TransactionIsolationLevel"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void startManagedSession(TransactionIsolationLevel level) {\n    this.localSqlSession.set(openSession(level));\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/session/SqlSessionManager.java", "stars": "15", "class_props": {"extends": null, "implements": ["SqlSessionFactory", "SqlSession"], "modifiers": ["public"]}}, {"id": 61884, "method_name": "startManagedSession", "class_name": "SqlSessionManager", "params": ["ExecutorType"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void startManagedSession(ExecutorType execType) {\n    this.localSqlSession.set(openSession(execType));\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/session/SqlSessionManager.java", "stars": "15", "class_props": {"extends": null, "implements": ["SqlSessionFactory", "SqlSession"], "modifiers": ["public"]}}, {"id": 61885, "method_name": "startManagedSession", "class_name": "SqlSessionManager", "params": ["ExecutorType", "boolean"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void startManagedSession(ExecutorType execType, boolean autoCommit) {\n    this.localSqlSession.set(openSession(execType, autoCommit));\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/session/SqlSessionManager.java", "stars": "15", "class_props": {"extends": null, "implements": ["SqlSessionFactory", "SqlSession"], "modifiers": ["public"]}}, {"id": 61886, "method_name": "startManagedSession", "class_name": "SqlSessionManager", "params": ["ExecutorType", "TransactionIsolationLevel"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void startManagedSession(ExecutorType execType, TransactionIsolationLevel level) {\n    this.localSqlSession.set(openSession(execType, level));\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/session/SqlSessionManager.java", "stars": "15", "class_props": {"extends": null, "implements": ["SqlSessionFactory", "SqlSession"], "modifiers": ["public"]}}, {"id": 61887, "method_name": "startManagedSession", "class_name": "SqlSessionManager", "params": ["ExecutorType", "Connection"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void startManagedSession(ExecutorType execType, Connection connection) {\n    this.localSqlSession.set(openSession(execType, connection));\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/session/SqlSessionManager.java", "stars": "15", "class_props": {"extends": null, "implements": ["SqlSessionFactory", "SqlSession"], "modifiers": ["public"]}}, {"id": 61888, "method_name": "isManagedSessionStarted", "class_name": "SqlSessionManager", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "  public boolean isManagedSessionStarted() {\n    return this.localSqlSession.get() != null;\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/session/SqlSessionManager.java", "stars": "15", "class_props": {"extends": null, "implements": ["SqlSessionFactory", "SqlSession"], "modifiers": ["public"]}}, {"id": 61889, "method_name": "openSession", "class_name": "SqlSessionManager", "params": [], "throws": null, "modifiers": ["public"], "return_type": "SqlSession", "snippet": "  public SqlSession openSession() {\n    return sqlSessionFactory.openSession();\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/session/SqlSessionManager.java", "stars": "15", "class_props": {"extends": null, "implements": ["SqlSessionFactory", "SqlSession"], "modifiers": ["public"]}}, {"id": 61890, "method_name": "openSession", "class_name": "SqlSessionManager", "params": ["boolean"], "throws": null, "modifiers": ["public"], "return_type": "SqlSession", "snippet": "  public SqlSession openSession(boolean autoCommit) {\n    return sqlSessionFactory.openSession(autoCommit);\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/session/SqlSessionManager.java", "stars": "15", "class_props": {"extends": null, "implements": ["SqlSessionFactory", "SqlSession"], "modifiers": ["public"]}}, {"id": 61891, "method_name": "openSession", "class_name": "SqlSessionManager", "params": ["Connection"], "throws": null, "modifiers": ["public"], "return_type": "SqlSession", "snippet": "  public SqlSession openSession(Connection connection) {\n    return sqlSessionFactory.openSession(connection);\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/session/SqlSessionManager.java", "stars": "15", "class_props": {"extends": null, "implements": ["SqlSessionFactory", "SqlSession"], "modifiers": ["public"]}}, {"id": 61892, "method_name": "openSession", "class_name": "SqlSessionManager", "params": ["TransactionIsolationLevel"], "throws": null, "modifiers": ["public"], "return_type": "SqlSession", "snippet": "  public SqlSession openSession(TransactionIsolationLevel level) {\n    return sqlSessionFactory.openSession(level);\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/session/SqlSessionManager.java", "stars": "15", "class_props": {"extends": null, "implements": ["SqlSessionFactory", "SqlSession"], "modifiers": ["public"]}}, {"id": 61893, "method_name": "openSession", "class_name": "SqlSessionManager", "params": ["ExecutorType"], "throws": null, "modifiers": ["public"], "return_type": "SqlSession", "snippet": "  public SqlSession openSession(ExecutorType execType) {\n    return sqlSessionFactory.openSession(execType);\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/session/SqlSessionManager.java", "stars": "15", "class_props": {"extends": null, "implements": ["SqlSessionFactory", "SqlSession"], "modifiers": ["public"]}}, {"id": 61894, "method_name": "openSession", "class_name": "SqlSessionManager", "params": ["ExecutorType", "boolean"], "throws": null, "modifiers": ["public"], "return_type": "SqlSession", "snippet": "  public SqlSession openSession(ExecutorType execType, boolean autoCommit) {\n    return sqlSessionFactory.openSession(execType, autoCommit);\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/session/SqlSessionManager.java", "stars": "15", "class_props": {"extends": null, "implements": ["SqlSessionFactory", "SqlSession"], "modifiers": ["public"]}}, {"id": 61895, "method_name": "openSession", "class_name": "SqlSessionManager", "params": ["ExecutorType", "TransactionIsolationLevel"], "throws": null, "modifiers": ["public"], "return_type": "SqlSession", "snippet": "  public SqlSession openSession(ExecutorType execType, TransactionIsolationLevel level) {\n    return sqlSessionFactory.openSession(execType, level);\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/session/SqlSessionManager.java", "stars": "15", "class_props": {"extends": null, "implements": ["SqlSessionFactory", "SqlSession"], "modifiers": ["public"]}}, {"id": 61896, "method_name": "openSession", "class_name": "SqlSessionManager", "params": ["ExecutorType", "Connection"], "throws": null, "modifiers": ["public"], "return_type": "SqlSession", "snippet": "  public SqlSession openSession(ExecutorType execType, Connection connection) {\n    return sqlSessionFactory.openSession(execType, connection);\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/session/SqlSessionManager.java", "stars": "15", "class_props": {"extends": null, "implements": ["SqlSessionFactory", "SqlSession"], "modifiers": ["public"]}}, {"id": 61897, "method_name": "getConfiguration", "class_name": "SqlSessionManager", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Configuration", "snippet": "  public Configuration getConfiguration() {\n    return sqlSessionFactory.getConfiguration();\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/session/SqlSessionManager.java", "stars": "15", "class_props": {"extends": null, "implements": ["SqlSessionFactory", "SqlSession"], "modifiers": ["public"]}}, {"id": 61898, "method_name": "selectOne", "class_name": "SqlSessionManager", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "T", "snippet": "  public <T> T selectOne(String statement) {\n    return sqlSessionProxy.selectOne(statement);\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/session/SqlSessionManager.java", "stars": "15", "class_props": {"extends": null, "implements": ["SqlSessionFactory", "SqlSession"], "modifiers": ["public"]}}, {"id": 61899, "method_name": "selectOne", "class_name": "SqlSessionManager", "params": ["String", "Object"], "throws": null, "modifiers": ["public"], "return_type": "T", "snippet": "  public <T> T selectOne(String statement, Object parameter) {\n    return sqlSessionProxy.selectOne(statement, parameter);\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/session/SqlSessionManager.java", "stars": "15", "class_props": {"extends": null, "implements": ["SqlSessionFactory", "SqlSession"], "modifiers": ["public"]}}, {"id": 61900, "method_name": "selectMap", "class_name": "SqlSessionManager", "params": ["String", "String"], "throws": null, "modifiers": ["public"], "return_type": "Map<K,V>", "snippet": "  public <K, V> Map<K, V> selectMap(String statement, String mapKey) {\n    return sqlSessionProxy.selectMap(statement, mapKey);\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/session/SqlSessionManager.java", "stars": "15", "class_props": {"extends": null, "implements": ["SqlSessionFactory", "SqlSession"], "modifiers": ["public"]}}, {"id": 61901, "method_name": "selectMap", "class_name": "SqlSessionManager", "params": ["String", "Object", "String"], "throws": null, "modifiers": ["public"], "return_type": "Map<K,V>", "snippet": "  public <K, V> Map<K, V> selectMap(String statement, Object parameter, String mapKey) {\n    return sqlSessionProxy.selectMap(statement, parameter, mapKey);\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/session/SqlSessionManager.java", "stars": "15", "class_props": {"extends": null, "implements": ["SqlSessionFactory", "SqlSession"], "modifiers": ["public"]}}, {"id": 61902, "method_name": "selectMap", "class_name": "SqlSessionManager", "params": ["String", "Object", "String", "RowBounds"], "throws": null, "modifiers": ["public"], "return_type": "Map<K,V>", "snippet": "  public <K, V> Map<K, V> selectMap(String statement, Object parameter, String mapKey, RowBounds rowBounds) {\n    return sqlSessionProxy.selectMap(statement, parameter, mapKey, rowBounds);\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/session/SqlSessionManager.java", "stars": "15", "class_props": {"extends": null, "implements": ["SqlSessionFactory", "SqlSession"], "modifiers": ["public"]}}, {"id": 61903, "method_name": "selectCursor", "class_name": "SqlSessionManager", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "Cursor<T>", "snippet": "  public <T> Cursor<T> selectCursor(String statement) {\n    return sqlSessionProxy.selectCursor(statement);\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/session/SqlSessionManager.java", "stars": "15", "class_props": {"extends": null, "implements": ["SqlSessionFactory", "SqlSession"], "modifiers": ["public"]}}, {"id": 61904, "method_name": "selectCursor", "class_name": "SqlSessionManager", "params": ["String", "Object"], "throws": null, "modifiers": ["public"], "return_type": "Cursor<T>", "snippet": "  public <T> Cursor<T> selectCursor(String statement, Object parameter) {\n    return sqlSessionProxy.selectCursor(statement, parameter);\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/session/SqlSessionManager.java", "stars": "15", "class_props": {"extends": null, "implements": ["SqlSessionFactory", "SqlSession"], "modifiers": ["public"]}}, {"id": 61905, "method_name": "selectCursor", "class_name": "SqlSessionManager", "params": ["String", "Object", "RowBounds"], "throws": null, "modifiers": ["public"], "return_type": "Cursor<T>", "snippet": "  public <T> Cursor<T> selectCursor(String statement, Object parameter, RowBounds rowBounds) {\n    return sqlSessionProxy.selectCursor(statement, parameter, rowBounds);\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/session/SqlSessionManager.java", "stars": "15", "class_props": {"extends": null, "implements": ["SqlSessionFactory", "SqlSession"], "modifiers": ["public"]}}, {"id": 61906, "method_name": "selectList", "class_name": "SqlSessionManager", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "List<E>", "snippet": "  public <E> List<E> selectList(String statement) {\n    return sqlSessionProxy.selectList(statement);\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/session/SqlSessionManager.java", "stars": "15", "class_props": {"extends": null, "implements": ["SqlSessionFactory", "SqlSession"], "modifiers": ["public"]}}, {"id": 61907, "method_name": "selectList", "class_name": "SqlSessionManager", "params": ["String", "Object"], "throws": null, "modifiers": ["public"], "return_type": "List<E>", "snippet": "  public <E> List<E> selectList(String statement, Object parameter) {\n    return sqlSessionProxy.selectList(statement, parameter);\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/session/SqlSessionManager.java", "stars": "15", "class_props": {"extends": null, "implements": ["SqlSessionFactory", "SqlSession"], "modifiers": ["public"]}}, {"id": 61908, "method_name": "selectList", "class_name": "SqlSessionManager", "params": ["String", "Object", "RowBounds"], "throws": null, "modifiers": ["public"], "return_type": "List<E>", "snippet": "  public <E> List<E> selectList(String statement, Object parameter, RowBounds rowBounds) {\n    return sqlSessionProxy.selectList(statement, parameter, rowBounds);\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/session/SqlSessionManager.java", "stars": "15", "class_props": {"extends": null, "implements": ["SqlSessionFactory", "SqlSession"], "modifiers": ["public"]}}, {"id": 61909, "method_name": "select", "class_name": "SqlSessionManager", "params": ["String", "ResultHandler"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void select(String statement, ResultHandler handler) {\n    sqlSessionProxy.select(statement, handler);\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/session/SqlSessionManager.java", "stars": "15", "class_props": {"extends": null, "implements": ["SqlSessionFactory", "SqlSession"], "modifiers": ["public"]}}, {"id": 61910, "method_name": "select", "class_name": "SqlSessionManager", "params": ["String", "Object", "ResultHandler"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void select(String statement, Object parameter, ResultHandler handler) {\n    sqlSessionProxy.select(statement, parameter, handler);\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/session/SqlSessionManager.java", "stars": "15", "class_props": {"extends": null, "implements": ["SqlSessionFactory", "SqlSession"], "modifiers": ["public"]}}, {"id": 61911, "method_name": "select", "class_name": "SqlSessionManager", "params": ["String", "Object", "RowBounds", "ResultHandler"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void select(String statement, Object parameter, RowBounds rowBounds, ResultHandler handler) {\n    sqlSessionProxy.select(statement, parameter, rowBounds, handler);\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/session/SqlSessionManager.java", "stars": "15", "class_props": {"extends": null, "implements": ["SqlSessionFactory", "SqlSession"], "modifiers": ["public"]}}, {"id": 61912, "method_name": "insert", "class_name": "SqlSessionManager", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "  public int insert(String statement) {\n    return sqlSessionProxy.insert(statement);\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/session/SqlSessionManager.java", "stars": "15", "class_props": {"extends": null, "implements": ["SqlSessionFactory", "SqlSession"], "modifiers": ["public"]}}, {"id": 61913, "method_name": "insert", "class_name": "SqlSessionManager", "params": ["String", "Object"], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "  public int insert(String statement, Object parameter) {\n    return sqlSessionProxy.insert(statement, parameter);\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/session/SqlSessionManager.java", "stars": "15", "class_props": {"extends": null, "implements": ["SqlSessionFactory", "SqlSession"], "modifiers": ["public"]}}, {"id": 61914, "method_name": "update", "class_name": "SqlSessionManager", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "  public int update(String statement) {\n    return sqlSessionProxy.update(statement);\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/session/SqlSessionManager.java", "stars": "15", "class_props": {"extends": null, "implements": ["SqlSessionFactory", "SqlSession"], "modifiers": ["public"]}}, {"id": 61915, "method_name": "update", "class_name": "SqlSessionManager", "params": ["String", "Object"], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "  public int update(String statement, Object parameter) {\n    return sqlSessionProxy.update(statement, parameter);\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/session/SqlSessionManager.java", "stars": "15", "class_props": {"extends": null, "implements": ["SqlSessionFactory", "SqlSession"], "modifiers": ["public"]}}, {"id": 61916, "method_name": "delete", "class_name": "SqlSessionManager", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "  public int delete(String statement) {\n    return sqlSessionProxy.delete(statement);\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/session/SqlSessionManager.java", "stars": "15", "class_props": {"extends": null, "implements": ["SqlSessionFactory", "SqlSession"], "modifiers": ["public"]}}, {"id": 61917, "method_name": "delete", "class_name": "SqlSessionManager", "params": ["String", "Object"], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "  public int delete(String statement, Object parameter) {\n    return sqlSessionProxy.delete(statement, parameter);\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/session/SqlSessionManager.java", "stars": "15", "class_props": {"extends": null, "implements": ["SqlSessionFactory", "SqlSession"], "modifiers": ["public"]}}, {"id": 61918, "method_name": "getMapper", "class_name": "SqlSessionManager", "params": ["Class<T>"], "throws": null, "modifiers": ["public"], "return_type": "T", "snippet": "  public <T> T getMapper(Class<T> type) {\n    return getConfiguration().getMapper(type, this);\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/session/SqlSessionManager.java", "stars": "15", "class_props": {"extends": null, "implements": ["SqlSessionFactory", "SqlSession"], "modifiers": ["public"]}}, {"id": 61919, "method_name": "getConnection", "class_name": "SqlSessionManager", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Connection", "snippet": "  public Connection getConnection() {\n    final SqlSession sqlSession = localSqlSession.get();\n    if (sqlSession == null) {\n      throw new SqlSessionException(\"Error:  Cannot get connection.  No managed session is started.\");\n    }\n    return sqlSession.getConnection();\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/session/SqlSessionManager.java", "stars": "15", "class_props": {"extends": null, "implements": ["SqlSessionFactory", "SqlSession"], "modifiers": ["public"]}}, {"id": 61920, "method_name": "clearCache", "class_name": "SqlSessionManager", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void clearCache() {\n    final SqlSession sqlSession = localSqlSession.get();\n    if (sqlSession == null) {\n      throw new SqlSessionException(\"Error:  Cannot clear the cache.  No managed session is started.\");\n    }\n    sqlSession.clearCache();\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/session/SqlSessionManager.java", "stars": "15", "class_props": {"extends": null, "implements": ["SqlSessionFactory", "SqlSession"], "modifiers": ["public"]}}, {"id": 61921, "method_name": "commit", "class_name": "SqlSessionManager", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void commit() {\n    final SqlSession sqlSession = localSqlSession.get();\n    if (sqlSession == null) {\n      throw new SqlSessionException(\"Error:  Cannot commit.  No managed session is started.\");\n    }\n    sqlSession.commit();\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/session/SqlSessionManager.java", "stars": "15", "class_props": {"extends": null, "implements": ["SqlSessionFactory", "SqlSession"], "modifiers": ["public"]}}, {"id": 61922, "method_name": "commit", "class_name": "SqlSessionManager", "params": ["boolean"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void commit(boolean force) {\n    final SqlSession sqlSession = localSqlSession.get();\n    if (sqlSession == null) {\n      throw new SqlSessionException(\"Error:  Cannot commit.  No managed session is started.\");\n    }\n    sqlSession.commit(force);\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/session/SqlSessionManager.java", "stars": "15", "class_props": {"extends": null, "implements": ["SqlSessionFactory", "SqlSession"], "modifiers": ["public"]}}, {"id": 61923, "method_name": "rollback", "class_name": "SqlSessionManager", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void rollback() {\n    final SqlSession sqlSession = localSqlSession.get();\n    if (sqlSession == null) {\n      throw new SqlSessionException(\"Error:  Cannot rollback.  No managed session is started.\");\n    }\n    sqlSession.rollback();\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/session/SqlSessionManager.java", "stars": "15", "class_props": {"extends": null, "implements": ["SqlSessionFactory", "SqlSession"], "modifiers": ["public"]}}, {"id": 61924, "method_name": "rollback", "class_name": "SqlSessionManager", "params": ["boolean"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void rollback(boolean force) {\n    final SqlSession sqlSession = localSqlSession.get();\n    if (sqlSession == null) {\n      throw new SqlSessionException(\"Error:  Cannot rollback.  No managed session is started.\");\n    }\n    sqlSession.rollback(force);\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/session/SqlSessionManager.java", "stars": "15", "class_props": {"extends": null, "implements": ["SqlSessionFactory", "SqlSession"], "modifiers": ["public"]}}, {"id": 61925, "method_name": "flushStatements", "class_name": "SqlSessionManager", "params": [], "throws": null, "modifiers": ["public"], "return_type": "List<BatchResult>", "snippet": "  public List<BatchResult> flushStatements() {\n    final SqlSession sqlSession = localSqlSession.get();\n    if (sqlSession == null) {\n      throw new SqlSessionException(\"Error:  Cannot rollback.  No managed session is started.\");\n    }\n    return sqlSession.flushStatements();\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/session/SqlSessionManager.java", "stars": "15", "class_props": {"extends": null, "implements": ["SqlSessionFactory", "SqlSession"], "modifiers": ["public"]}}, {"id": 61926, "method_name": "close", "class_name": "SqlSessionManager", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void close() {\n    final SqlSession sqlSession = localSqlSession.get();\n    if (sqlSession == null) {\n      throw new SqlSessionException(\"Error:  Cannot close.  No managed session is started.\");\n    }\n    try {\n      sqlSession.close();\n    } finally {\n      localSqlSession.set(null);\n    }\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/session/SqlSessionManager.java", "stars": "15", "class_props": {"extends": null, "implements": ["SqlSessionFactory", "SqlSession"], "modifiers": ["public"]}}, {"id": 61927, "method_name": "invoke", "class_name": "SqlSessionInterceptor", "params": ["Object", "Method", "Object"], "throws": ["Throwable"], "modifiers": ["public"], "return_type": "Object", "snippet": "    public Object invoke(Object proxy, Method method, Object[] args) throws Throwable {\n      final SqlSession sqlSession = SqlSessionManager.this.localSqlSession.get();\n      if (sqlSession != null) {\n        try {\n          return method.invoke(sqlSession, args);\n        } catch (Throwable t) {\n          throw ExceptionUtil.unwrapThrowable(t);\n        }\n      } else {\n        try (SqlSession autoSqlSession = openSession()) {\n          try {\n            final Object result = method.invoke(autoSqlSession, args);\n            autoSqlSession.commit();\n            return result;\n          } catch (Throwable t) {\n            autoSqlSession.rollback();\n            throw ExceptionUtil.unwrapThrowable(t);\n          }\n        }\n      }\n    }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/session/SqlSessionManager.java", "stars": "15", "class_props": {"extends": null, "implements": ["InvocationHandler"], "modifiers": ["private"]}}, {"id": 61928, "method_name": "deserialize", "class_name": "SerializeUtils", "params": ["byte"], "throws": null, "modifiers": ["public", "static"], "return_type": "Object", "snippet": "    public static Object deserialize(byte[] bytes) {\n\n        Object result = null;\n\n        if (isEmpty(bytes)) {\n            return null;\n        }\n\n        try {\n            ByteArrayInputStream byteStream = new ByteArrayInputStream(bytes);\n            try {\n                ObjectInputStream objectInputStream = new ObjectInputStream(byteStream);\n                try {\n                    result = objectInputStream.readObject();\n                }\n                catch (ClassNotFoundException ex) {\n                    throw new Exception(\"Failed to deserialize object type\", ex);\n                }\n            }\n            catch (Throwable ex) {\n                throw new Exception(\"Failed to deserialize\", ex);\n            }\n        } catch (Exception e) {\n            logger.error(\"Failed to deserialize\",e);\n        }\n        return result;\n    }", "url": "https://raw.githubusercontent.com/201206030/novel-plus/master/novel-admin/src/main/java/com/java2nb/common/redis/shiro/SerializeUtils.java", "stars": "137", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 61929, "method_name": "isEmpty", "class_name": "SerializeUtils", "params": ["byte"], "throws": null, "modifiers": ["public", "static"], "return_type": "boolean", "snippet": "    public static boolean isEmpty(byte[] data) {\n        return (data == null || data.length == 0);\n    }", "url": "https://raw.githubusercontent.com/201206030/novel-plus/master/novel-admin/src/main/java/com/java2nb/common/redis/shiro/SerializeUtils.java", "stars": "137", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 61930, "method_name": "serialize", "class_name": "SerializeUtils", "params": ["Object"], "throws": null, "modifiers": ["public", "static"], "return_type": "byte", "snippet": "    public static byte[] serialize(Object object) {\n\n        byte[] result = null;\n\n        if (object == null) {\n            return new byte[0];\n        }\n        try {\n            ByteArrayOutputStream byteStream = new ByteArrayOutputStream(128);\n            try  {\n                if (!(object instanceof Serializable)) {\n                    throw new IllegalArgumentException(SerializeUtils.class.getSimpleName() + \" requires a Serializable payload \" +\n                            \"but received an object of type [\" + object.getClass().getName() + \"]\");\n                }\n                ObjectOutputStream objectOutputStream = new ObjectOutputStream(byteStream);\n                objectOutputStream.writeObject(object);\n                objectOutputStream.flush();\n                result =  byteStream.toByteArray();\n            }\n            catch (Throwable ex) {\n                throw new Exception(\"Failed to serialize\", ex);\n            }\n        } catch (Exception ex) {\n            logger.error(\"Failed to serialize\",ex);\n        }\n        return result;\n    }", "url": "https://raw.githubusercontent.com/201206030/novel-plus/master/novel-admin/src/main/java/com/java2nb/common/redis/shiro/SerializeUtils.java", "stars": "137", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 61931, "method_name": "onCreate", "class_name": "SaveService", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onCreate() {\n        super.onCreate();\n\n        mHandler = new Handler(Looper.getMainLooper(), msg -> {\n            if (msg.obj instanceof Notification.Builder) {\n                mNotificationManager.notify(msg.what, ((Notification.Builder) msg.obj).build());\n                return true;\n            }\n            return false;\n        });\n\n        mNotificationManager = getSystemService(NotificationManager.class);\n        //noinspection ConstantConditions\n        onCreateNotificationChannel(mNotificationManager);\n\n        startForeground(NOTIFICATION_ID_PROGRESS, onStartForeground());\n    }", "url": "https://raw.githubusercontent.com/RikkaApps/SaveCopy/master/app/src/main/java/app/rikka/savecopy/SaveService.java", "stars": "13", "class_props": {"extends": "IntentService", "implements": null, "modifiers": ["public"]}}, {"id": 61932, "method_name": "onStartForeground", "class_name": "SaveService", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Notification", "snippet": "    public Notification onStartForeground() {\n        Notification.Builder builder = newNotificationBuilder(NOTIFICATION_CHANNEL_PROGRESS, getString(R.string.notification_working_title), null);\n        return builder.build();\n    }", "url": "https://raw.githubusercontent.com/RikkaApps/SaveCopy/master/app/src/main/java/app/rikka/savecopy/SaveService.java", "stars": "13", "class_props": {"extends": "IntentService", "implements": null, "modifiers": ["public"]}}, {"id": 61933, "method_name": "onCreateNotificationChannel", "class_name": "SaveService", "params": ["NotificationManager"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onCreateNotificationChannel(@NonNull NotificationManager nm) {\n        List<NotificationChannel> channels = new ArrayList<>();\n        NotificationChannel channel = new NotificationChannel(\n                NOTIFICATION_CHANNEL_PROGRESS,\n                getString(R.string.notification_channel_progress),\n                NotificationManager.IMPORTANCE_MIN);\n        channel.setSound(null, null);\n        channel.enableLights(false);\n        channel.enableVibration(false);\n        channel.setBypassDnd(true);\n        channel.setShowBadge(false);\n        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.Q) {\n            channel.setAllowBubbles(false);\n        }\n        channels.add(channel);\n\n        channel = new NotificationChannel(\n                NOTIFICATION_CHANNEL_RESULT,\n                getString(R.string.notification_channel_result),\n                NotificationManager.IMPORTANCE_HIGH);\n        channel.setSound(null, null);\n        channel.enableLights(false);\n        channel.enableVibration(false);\n        channel.setBypassDnd(true);\n        channel.setShowBadge(false);\n        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.Q) {\n            channel.setAllowBubbles(false);\n        }\n        channels.add(channel);\n        nm.createNotificationChannels(channels);\n    }", "url": "https://raw.githubusercontent.com/RikkaApps/SaveCopy/master/app/src/main/java/app/rikka/savecopy/SaveService.java", "stars": "13", "class_props": {"extends": "IntentService", "implements": null, "modifiers": ["public"]}}, {"id": 61934, "method_name": "newNotificationBuilder", "class_name": "SaveService", "params": ["String", "CharSequence", "CharSequence"], "throws": null, "modifiers": ["public"], "return_type": "Notification", "snippet": "    public Notification.Builder newNotificationBuilder(String channelId, CharSequence title, CharSequence text) {\n        Notification.Builder builder = Build.VERSION.SDK_INT >= Build.VERSION_CODES.O ? new Notification.Builder(this, channelId) : new Notification.Builder(this);\n        //noinspection deprecation\n        builder.setSmallIcon(R.drawable.ic_notification_24)\n                .setColor(Build.VERSION.SDK_INT >= Build.VERSION_CODES.M ? getColor(R.color.notification) : getResources().getColor(R.color.notification));\n        if (title != null) {\n            builder.setContentTitle(title);\n        }\n        if (text != null) {\n            builder.setContentText(text);\n        }\n        return builder;\n    }", "url": "https://raw.githubusercontent.com/RikkaApps/SaveCopy/master/app/src/main/java/app/rikka/savecopy/SaveService.java", "stars": "13", "class_props": {"extends": "IntentService", "implements": null, "modifiers": ["public"]}}, {"id": 61935, "method_name": "scheduleNotification", "class_name": "SaveService", "params": ["int", "Notification"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void scheduleNotification(int id, Notification.Builder builder) {\n        scheduleNotification(id, builder, 0);\n    }", "url": "https://raw.githubusercontent.com/RikkaApps/SaveCopy/master/app/src/main/java/app/rikka/savecopy/SaveService.java", "stars": "13", "class_props": {"extends": "IntentService", "implements": null, "modifiers": ["public"]}}, {"id": 61936, "method_name": "scheduleNotification", "class_name": "SaveService", "params": ["int", "Notification", "long"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void scheduleNotification(int id, Notification.Builder builder, long delay) {\n        if (delay == 0) {\n            mHandler.removeMessages(id);\n            mNotificationManager.notify(id, builder.build());\n        } else {\n            if (!mHandler.hasMessages(id)) {\n                mHandler.sendMessageDelayed(Message.obtain(mHandler, id, builder), delay);\n            }\n        }\n    }", "url": "https://raw.githubusercontent.com/RikkaApps/SaveCopy/master/app/src/main/java/app/rikka/savecopy/SaveService.java", "stars": "13", "class_props": {"extends": "IntentService", "implements": null, "modifiers": ["public"]}}, {"id": 61937, "method_name": "onHandleIntent", "class_name": "SaveService", "params": ["Intent"], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void onHandleIntent(Intent intent) {\n        onSave(intent);\n    }", "url": "https://raw.githubusercontent.com/RikkaApps/SaveCopy/master/app/src/main/java/app/rikka/savecopy/SaveService.java", "stars": "13", "class_props": {"extends": "IntentService", "implements": null, "modifiers": ["public"]}}, {"id": 61938, "method_name": "loadLabelForPackage", "class_name": "SaveService", "params": ["String"], "throws": null, "modifiers": ["private"], "return_type": "String", "snippet": "    private String loadLabelForPackage(String packageName) {\n        Resources resources;\n        ApplicationInfo info;\n        try {\n            Configuration configuration = new Configuration();\n            configuration.locale = Locale.ENGLISH;\n            resources = getPackageManager().getResourcesForApplication(packageName);\n            resources.updateConfiguration(configuration, getResources().getDisplayMetrics());\n\n            info = getPackageManager().getApplicationInfo(packageName, 0);\n        } catch (PackageManager.NameNotFoundException e) {\n            return null;\n        }\n\n        String label;\n        try {\n            if (info.labelRes != 0) label = resources.getString(info.labelRes);\n            else label = info.nonLocalizedLabel.toString();\n        } catch (Resources.NotFoundException | NullPointerException e) {\n            label = info.packageName;\n        }\n        return label;\n    }", "url": "https://raw.githubusercontent.com/RikkaApps/SaveCopy/master/app/src/main/java/app/rikka/savecopy/SaveService.java", "stars": "13", "class_props": {"extends": "IntentService", "implements": null, "modifiers": ["public"]}}, {"id": 61939, "method_name": "onSave", "class_name": "SaveService", "params": ["Intent"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void onSave(Intent intent) {\n        String callingPackage = intent.getStringExtra(CALLING_PACKAGE);\n        int[] id = new int[]{Integer.MIN_VALUE};\n        try {\n            doSave(intent, id, callingPackage);\n        } catch (Throwable e) {\n            Log.e(TAG, \"save \" + intent.getData(), e);\n\n            Throwable cause = e.getCause() == null ? e : e.getCause();\n            CharSequence notificationTitle = getString(R.string.notification_error_title);\n            CharSequence notificationText = getString(R.string.notification_error_text) + \"\\n\\n\" + cause.getMessage();\n\n            Notification.Builder builder = newNotificationBuilder(NOTIFICATION_CHANNEL_RESULT, notificationTitle, notificationText)\n                    .setStyle(new Notification.BigTextStyle().bigText(notificationText));\n            scheduleNotification(id[0], builder);\n        }\n    }", "url": "https://raw.githubusercontent.com/RikkaApps/SaveCopy/master/app/src/main/java/app/rikka/savecopy/SaveService.java", "stars": "13", "class_props": {"extends": "IntentService", "implements": null, "modifiers": ["public"]}}, {"id": 61940, "method_name": "doSave", "class_name": "SaveService", "params": ["Intent", "int", "String"], "throws": ["IOException", "SaveException"], "modifiers": ["private"], "return_type": "void", "snippet": "    private void doSave(Intent intent, int[] _id, String callingPackage) throws IOException, SaveException {\n        Context context = this;\n        CharSequence notificationTitle, notificationText;\n        Notification.Builder builder;\n        Uri data = intent.getData();\n        if (data == null) {\n            throw new SaveException(\"data is null\");\n        }\n\n        ContentResolver cr = context.getContentResolver();\n\n        String displayName = \"unknown-\" + System.currentTimeMillis();\n        long totalSize = -1;\n        try (Cursor cursor = cr.query(data, null, null, null, null)) {\n            if (cursor != null && cursor.moveToFirst()) {\n                int displayNameIndex = cursor.getColumnIndex(OpenableColumns.DISPLAY_NAME);\n                if (displayNameIndex != -1) {\n                    displayName = cursor.getString(displayNameIndex);\n                }\n                int sizeIndex = cursor.getColumnIndex(OpenableColumns.SIZE);\n                if (sizeIndex != -1) {\n                    totalSize = cursor.getLong(sizeIndex);\n                }\n            }\n        }\n\n        String download = Environment.DIRECTORY_DOWNLOADS;\n        if (getSharedPreferences(Settings.FILE_NAME, MODE_PRIVATE).getBoolean(Settings.KEY_PREFER_APP_FOLDER, false)) {\n            String label = null;\n            if (callingPackage != null) label = loadLabelForPackage(callingPackage);\n\n            download += (label != null ? File.separator + label : \"\");\n        }\n\n        if (Build.VERSION.SDK_INT <= 29) {\n            // before Android 11 (actually before 11 DP2), MediaStore can't name the file correctly\n\n            String[] displayParts = FileUtils.spiltFileName(displayName);\n            List<String> existingNames = new ArrayList<>();\n            for (File file : Optional.ofNullable(new File(Environment.getExternalStorageDirectory(), download).listFiles()).orElse(new File[0])) {\n                String name = file.getName();\n                String[] parts = FileUtils.spiltFileName(name);\n                boolean add = false;\n                if (name.equals(displayName)) {\n                    add = true;\n                } else if (displayParts[1].equals(parts[1])) {\n                    add = parts[0].matches(String.format(\"%s \\\\(\\\\d+\\\\)\", displayParts[0].replaceAll(\"([\\\\\\\\+*?\\\\[\\\\](){}|.^$])\", \"\\\\\\\\$1\")));\n                }\n                if (add) {\n                    existingNames.add(name);\n                }\n            }\n            if (!existingNames.isEmpty()) {\n                int index = 1;\n                while (existingNames.contains(displayName)) {\n                    displayName = String.format(Locale.ENGLISH, \"%s (%d)%s\", displayParts[0], index++, displayParts[1]);\n                }\n            }\n        }\n\n        InputStream is = cr.openInputStream(data);\n        if (is == null) {\n            throw new SaveException(\"can't open data\");\n        }\n\n        ContentValues values;\n        values = new ContentValues();\n\n        if (Build.VERSION.SDK_INT >= 29) {\n            values.put(MediaStore.MediaColumns.RELATIVE_PATH, download);\n            values.put(MediaStore.MediaColumns.IS_PENDING, true);\n        } else {\n            File parent = new File(Environment.getExternalStorageDirectory(), download);\n            values.put(MediaStore.MediaColumns.DATA, new File(parent, displayName).getPath());\n\n            // on lower versions, if the folder doesn't exist, insert will fail\n            // as we have storage permission, just manually create it\n\n            //noinspection ResultOfMethodCallIgnored\n            parent.mkdirs();\n        }\n        values.put(MediaStore.MediaColumns.DISPLAY_NAME, displayName);\n\n        Uri tableUri;\n        if (Build.VERSION.SDK_INT >= 29) {\n            // files insert into Files table will not show in the Download table\n            tableUri = MediaStore.Downloads.EXTERNAL_CONTENT_URI;\n        } else {\n            tableUri = MediaStore.Files.getContentUri(\"external\");\n        }\n        Uri fileUri = cr.insert(tableUri, values);\n        if (fileUri == null) {\n            throw new SaveException(\"can't insert\");\n        }\n        int id = fileUri.toString().hashCode();\n        _id[0] = id;\n\n        notificationTitle = Html.fromHtml(getString(R.string.notification_saving_title,\n                String.format(\"<font face=\\\"sans-serif-medium\\\">%s</font>\", displayName)));\n        builder = newNotificationBuilder(NOTIFICATION_CHANNEL_PROGRESS, notificationTitle, null);\n        builder.setProgress(100, 0, true);\n        scheduleNotification(id, builder);\n\n        OutputStream os = cr.openOutputStream(fileUri, \"w\");\n        if (os == null) {\n            throw new SaveException(\"can't open output\");\n        }\n\n        long writeSize = 0;\n        byte[] b = new byte[8192];\n        for (int r; (r = is.read(b)) != -1; ) {\n            os.write(b, 0, r);\n            os.flush();\n\n            writeSize += r;\n            if (totalSize != -1) {\n                int progress = (int) ((float) writeSize / totalSize * 100);\n                builder.setProgress(100, progress, false);\n                scheduleNotification(id, builder, 1000);\n            }\n        }\n        os.close();\n        is.close();\n\n        Log.d(TAG, writeSize + \"/\" + totalSize);\n\n        if (Build.VERSION.SDK_INT >= 29) {\n            values = new ContentValues();\n            values.put(MediaStore.Images.ImageColumns.IS_PENDING, false);\n            cr.update(fileUri, values, null, null);\n        }\n\n        String newName = displayName;\n        try (Cursor cursor = cr.query(fileUri, new String[]{MediaStore.MediaColumns.DISPLAY_NAME}, null, null, null)) {\n            if (cursor != null && cursor.moveToFirst()) {\n                int displayNameIndex = cursor.getColumnIndex(OpenableColumns.DISPLAY_NAME);\n                if (displayNameIndex != -1) {\n                    newName = cursor.getString(displayNameIndex);\n                }\n            }\n        }\n\n        notificationTitle = getString(R.string.notification_saved_title, displayName);\n        notificationText = Html.fromHtml(getString(R.string.notification_saved_text,\n                String.format(\"<font face=\\\"sans-serif-medium\\\">%s/%s</font>\", download, newName)));\n        builder = newNotificationBuilder(NOTIFICATION_CHANNEL_RESULT, notificationTitle, notificationText)\n                .setStyle(new Notification.BigTextStyle().bigText(notificationText));\n        if (Build.VERSION.SDK_INT < Build.VERSION_CODES.O) {\n            builder.setPriority(Notification.PRIORITY_HIGH)\n                    .setSound(Uri.EMPTY)\n                    .setVibrate(new long[0]);\n        }\n        if (!\"application/vnd.android.package-archive\".equals(intent.getType())) {\n            String type = intent.getType();\n            Intent newIntent = new Intent(intent)\n                    .setComponent(null)\n                    .setPackage(null)\n                    .setDataAndType(fileUri, type)\n                    .addFlags(Intent.FLAG_GRANT_READ_URI_PERMISSION | Intent.FLAG_GRANT_WRITE_URI_PERMISSION);\n\n            Intent openIntent = Intent.createChooser(newIntent, getString(R.string.open_with));\n            if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.N) {\n                openIntent.putExtra(Intent.EXTRA_EXCLUDE_COMPONENTS, new ComponentName[]{ComponentName.createRelative(this, SaveActivity.class.getName())});\n            }\n            PendingIntent openPendingIntent = PendingIntent.getActivity(this, id, openIntent, PendingIntent.FLAG_CANCEL_CURRENT);\n            builder.addAction(new Notification.Action.Builder(\n                    Icon.createWithResource(this, R.drawable.ic_notification_open_24),\n                    getString(R.string.notification_action_open),\n                    openPendingIntent).build());\n        }\n        scheduleNotification(id, builder);\n    }", "url": "https://raw.githubusercontent.com/RikkaApps/SaveCopy/master/app/src/main/java/app/rikka/savecopy/SaveService.java", "stars": "13", "class_props": {"extends": "IntentService", "implements": null, "modifiers": ["public"]}}, {"id": 61941, "method_name": "createPool", "class_name": "MysqlHelper", "params": ["ConnectionParam"], "throws": null, "modifiers": ["public", "static"], "return_type": "MySQLPool", "snippet": "    public static MySQLPool createPool(ConnectionParam param) {\n        return createPool(param, 10);\n    }", "url": "https://raw.githubusercontent.com/GZYangKui/openjfx-database/master/mysql/src/main/java/com/openjfx/database/mysql/MysqlHelper.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 61942, "method_name": "createPool", "class_name": "MysqlHelper", "params": ["ConnectionParam", "int"], "throws": null, "modifiers": ["public", "static"], "return_type": "MySQLPool", "snippet": "    public static MySQLPool createPool(ConnectionParam param, int initSize) {\n        return createPool(param, initSize, null);\n    }", "url": "https://raw.githubusercontent.com/GZYangKui/openjfx-database/master/mysql/src/main/java/com/openjfx/database/mysql/MysqlHelper.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 61943, "method_name": "createPool", "class_name": "MysqlHelper", "params": ["ConnectionParam", "int", "String"], "throws": null, "modifiers": ["public", "static"], "return_type": "MySQLPool", "snippet": "    public static MySQLPool createPool(ConnectionParam param, int initSize, String database) {\n        var options = new MySQLConnectOptions()\n                .setPort(param.getPort())\n                .setHost(param.getHost())\n                .setUser(param.getUser())\n                .setPassword(param.getPassword())\n                .setTcpKeepAlive(true)\n                //\u8bbe\u7f6e\u94fe\u63a5\u8d85\u65f6\u4e3a5s\n                .setConnectTimeout(5000)\n                .setIdleTimeout(5)\n                .setSslHandshakeTimeout(5);\n\n        if (StringUtils.nonEmpty(database)) {\n            options.setDatabase(database);\n        }\n\n        var poolOptions = new PoolOptions();\n        poolOptions.setMaxSize(initSize);\n        return MySQLPool.pool(options, poolOptions);\n    }", "url": "https://raw.githubusercontent.com/GZYangKui/openjfx-database/master/mysql/src/main/java/com/openjfx/database/mysql/MysqlHelper.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 61944, "method_name": "testConnection", "class_name": "MysqlHelper", "params": ["ConnectionParam"], "throws": null, "modifiers": ["public", "static"], "return_type": "Future<Boolean>", "snippet": "    public static Future<Boolean> testConnection(ConnectionParam param) {\n        var client = createPool(param);\n        var testSql = \"SELECT 1\";\n        var promise = Promise.<Boolean>promise();\n        client.query(testSql).setHandler(ar -> {\n            if (ar.succeeded()) {\n                promise.complete(true);\n            } else {\n                promise.fail(ar.cause());\n            }\n            //\u5173\u95ed\u8fde\u63a5\n            client.close();\n        });\n        return promise.future();\n    }", "url": "https://raw.githubusercontent.com/GZYangKui/openjfx-database/master/mysql/src/main/java/com/openjfx/database/mysql/MysqlHelper.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 61945, "method_name": "listar", "class_name": "ClienteController", "params": ["ModelMap"], "throws": null, "modifiers": ["public"], "return_type": "ModelAndView", "snippet": "    public ModelAndView listar(ModelMap model) {\n        model.addAttribute(\"clientes\", clienteService.recuperar());\n        return new ModelAndView(\"/cliente/list\", model);\n    }", "url": "https://raw.githubusercontent.com/bonamigor/gera_notas/master/src/main/java/br/com/geranotas/controller/ClienteController.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 61946, "method_name": "preSalvar", "class_name": "ClienteController", "params": ["Cliente"], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String preSalvar(@ModelAttribute(\"cliente\") Cliente cliente) {\n        return \"/cliente/add\";\n    }", "url": "https://raw.githubusercontent.com/bonamigor/gera_notas/master/src/main/java/br/com/geranotas/controller/ClienteController.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 61947, "method_name": "salvar", "class_name": "ClienteController", "params": ["Cliente", "BindingResult", "RedirectAttributes"], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String salvar(@Valid @ModelAttribute(\"cliente\") Cliente cliente, BindingResult result, RedirectAttributes attr) {\n        if (result.hasErrors()) {\n            return \"/cliente/add\";\n        }\n\n        clienteService.salvar(cliente);\n        attr.addFlashAttribute(\"mensagem\", \"Cliente salvo com sucesso.\");\n        return \"redirect:/clientes/listar\";\n    }", "url": "https://raw.githubusercontent.com/bonamigor/gera_notas/master/src/main/java/br/com/geranotas/controller/ClienteController.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 61948, "method_name": "preAtualizar", "class_name": "ClienteController", "params": ["Integer", "ModelMap"], "throws": null, "modifiers": ["public"], "return_type": "ModelAndView", "snippet": "    public ModelAndView preAtualizar(@PathVariable(\"id\") Integer id, ModelMap model) {\n        Cliente cliente = clienteService.recuperarPorId(id);\n        model.addAttribute(\"cliente\", cliente);\n        return new ModelAndView(\"/cliente/add\", model);\n    }", "url": "https://raw.githubusercontent.com/bonamigor/gera_notas/master/src/main/java/br/com/geranotas/controller/ClienteController.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 61949, "method_name": "atualizar", "class_name": "ClienteController", "params": ["Cliente", "BindingResult", "RedirectAttributes"], "throws": null, "modifiers": ["public"], "return_type": "ModelAndView", "snippet": "    public ModelAndView atualizar(@Valid @ModelAttribute(\"cliente\") Cliente cliente, BindingResult result, RedirectAttributes attr) {\n        if (result.hasErrors()) {\n            return new ModelAndView(\"/cliente/add\");\n        }\n\n        clienteService.atualizar(cliente);\n        attr.addFlashAttribute(\"mensagem\", \"Cliente atualizado com sucesso.\");\n        return new ModelAndView(\"redirect:/clientes/listar\");\n    }", "url": "https://raw.githubusercontent.com/bonamigor/gera_notas/master/src/main/java/br/com/geranotas/controller/ClienteController.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 61950, "method_name": "remover", "class_name": "ClienteController", "params": ["Integer", "RedirectAttributes"], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String remover(@PathVariable(\"id\") Integer id, RedirectAttributes attr) {\n        clienteService.excluir(id);\n        attr.addFlashAttribute(\"mensagem\", \"Cliente exclu\u00eddo com sucesso.\");\n        return \"redirect:/clientes/listar\";\n    }", "url": "https://raw.githubusercontent.com/bonamigor/gera_notas/master/src/main/java/br/com/geranotas/controller/ClienteController.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 61951, "method_name": "replaceWithProxyIfNeeded", "class_name": "DeprecatedHandlerProxyConfigurator", "params": ["Object", "Class"], "throws": null, "modifiers": ["public"], "return_type": "Object", "snippet": "    public Object replaceWithProxyIfNeeded(Object t, Class implClass) {\n        //todo make support for @Deprecate above methods, not class\n        if (implClass.isAnnotationPresent(Deprecated.class)) {\n\n            if (implClass.getInterfaces().length == 0) {\n                return Enhancer.create(implClass, new net.sf.cglib.proxy.InvocationHandler() {\n                    @Override\n                    public Object invoke(Object proxy, Method method, Object[] args) throws Throwable {\n                        return getInvocationHandlerLogic(method, args, t);\n                    }\n                });\n            }\n\n\n            return Proxy.newProxyInstance(implClass.getClassLoader(), implClass.getInterfaces(), new InvocationHandler() {\n                @Override\n                public Object invoke(Object proxy, Method method, Object[] args) throws Throwable {\n                    return getInvocationHandlerLogic(method, args, t);\n                }\n            });\n        } else {\n            return t;\n        }\n\n    }", "url": "https://raw.githubusercontent.com/Jeka1978/coronadesinfectorlifedemo/master/src/main/java/com/epam/DeprecatedHandlerProxyConfigurator.java", "stars": "60", "class_props": {"extends": null, "implements": ["ProxyConfigurator"], "modifiers": ["public"]}}, {"id": 61952, "method_name": "getInvocationHandlerLogic", "class_name": "DeprecatedHandlerProxyConfigurator", "params": ["Method", "Object", "Object"], "throws": ["IllegalAccessException", "InvocationTargetException"], "modifiers": ["private"], "return_type": "Object", "snippet": "    private Object getInvocationHandlerLogic(Method method, Object[] args, Object t) throws IllegalAccessException, InvocationTargetException {\n        System.out.println(\"********** \u0447\u0442\u043e \u0436 \u0442\u044b \u0434\u0435\u043b\u0430\u0435\u0448\u044c \u0443\u0440\u043e\u0434!! \");\n        return method.invoke(t, args);\n    }", "url": "https://raw.githubusercontent.com/Jeka1978/coronadesinfectorlifedemo/master/src/main/java/com/epam/DeprecatedHandlerProxyConfigurator.java", "stars": "60", "class_props": {"extends": null, "implements": ["ProxyConfigurator"], "modifiers": ["public"]}}, {"id": 61953, "method_name": "setLicencePlateInput", "class_name": "VehiclesPage", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setLicencePlateInput(String licencePlate) {\n        BrowserUtilities.waitForPageToLoad(20);\n        wait.until(ExpectedConditions.presenceOfElementLocated(By.cssSelector(\"input[name='custom_entity_type[LicensePlate]']\")));\n        wait.until(ExpectedConditions.visibilityOf(licencePlateInput));\n        licencePlateInput.sendKeys(licencePlate);\n    }", "url": "https://raw.githubusercontent.com/CybertekSchool/Fall2019OnlineCucumberSelenium/master/src/test/java/com/vytrack/pages/fleet/VehiclesPage.java", "stars": "26", "class_props": {"extends": "AbstractPageBase", "implements": null, "modifiers": ["public"]}}, {"id": 61954, "method_name": "setDriverInput", "class_name": "VehiclesPage", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setDriverInput(String driver) {\n        driverInput.sendKeys(driver);\n    }", "url": "https://raw.githubusercontent.com/CybertekSchool/Fall2019OnlineCucumberSelenium/master/src/test/java/com/vytrack/pages/fleet/VehiclesPage.java", "stars": "26", "class_props": {"extends": "AbstractPageBase", "implements": null, "modifiers": ["public"]}}, {"id": 61955, "method_name": "setLocationInput", "class_name": "VehiclesPage", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setLocationInput(String location) {\n        locationInput.sendKeys(location);\n        wait.until(ExpectedConditions.attributeToBe(locationInput, \"value\", location));\n    }", "url": "https://raw.githubusercontent.com/CybertekSchool/Fall2019OnlineCucumberSelenium/master/src/test/java/com/vytrack/pages/fleet/VehiclesPage.java", "stars": "26", "class_props": {"extends": "AbstractPageBase", "implements": null, "modifiers": ["public"]}}, {"id": 61956, "method_name": "setModelYear", "class_name": "VehiclesPage", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setModelYear(String year) {\n        modelYear.sendKeys(year);\n    }", "url": "https://raw.githubusercontent.com/CybertekSchool/Fall2019OnlineCucumberSelenium/master/src/test/java/com/vytrack/pages/fleet/VehiclesPage.java", "stars": "26", "class_props": {"extends": "AbstractPageBase", "implements": null, "modifiers": ["public"]}}, {"id": 61957, "method_name": "setColor", "class_name": "VehiclesPage", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setColor(String color) {\n        this.color.sendKeys(color);\n    }", "url": "https://raw.githubusercontent.com/CybertekSchool/Fall2019OnlineCucumberSelenium/master/src/test/java/com/vytrack/pages/fleet/VehiclesPage.java", "stars": "26", "class_props": {"extends": "AbstractPageBase", "implements": null, "modifiers": ["public"]}}, {"id": 61958, "method_name": "submit", "class_name": "VehiclesPage", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void submit() {\n        submit.click();\n    }", "url": "https://raw.githubusercontent.com/CybertekSchool/Fall2019OnlineCucumberSelenium/master/src/test/java/com/vytrack/pages/fleet/VehiclesPage.java", "stars": "26", "class_props": {"extends": "AbstractPageBase", "implements": null, "modifiers": ["public"]}}, {"id": 61959, "method_name": "clickToCreateCar", "class_name": "VehiclesPage", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void clickToCreateCar() {\n        wait.until(ExpectedConditions.elementToBeClickable(createCar)).click();\n        waitForLoaderMask();\n    }", "url": "https://raw.githubusercontent.com/CybertekSchool/Fall2019OnlineCucumberSelenium/master/src/test/java/com/vytrack/pages/fleet/VehiclesPage.java", "stars": "26", "class_props": {"extends": "AbstractPageBase", "implements": null, "modifiers": ["public"]}}, {"id": 61960, "method_name": "getCarGeneralInfo", "class_name": "VehiclesPage", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getCarGeneralInfo(String parameter) {\n        String xpath = \"//label[text()='\" + parameter + \"']/following-sibling::div/div\";\n        wait.until(ExpectedConditions.presenceOfElementLocated(By.xpath(xpath)));\n        return driver.findElement(By.xpath(xpath)).getText().trim();\n    }", "url": "https://raw.githubusercontent.com/CybertekSchool/Fall2019OnlineCucumberSelenium/master/src/test/java/com/vytrack/pages/fleet/VehiclesPage.java", "stars": "26", "class_props": {"extends": "AbstractPageBase", "implements": null, "modifiers": ["public"]}}, {"id": 61961, "method_name": "setView", "class_name": "ListPreferenceFragment", "params": [], "throws": null, "modifiers": ["protected"], "return_type": "int", "snippet": "    protected int setView() {\n        return R.layout.list_preference;\n    }", "url": "https://raw.githubusercontent.com/CoboVault/cobo-vault-cold/master/app/src/main/java/com/cobo/cold/ui/fragment/setting/ListPreferenceFragment.java", "stars": "13", "class_props": {"extends": "BaseFragment", "implements": ["ListPreferenceCallback"], "modifiers": ["public", "abstract"]}}, {"id": 61962, "method_name": "getEntries", "class_name": "ListPreferenceFragment", "params": [], "throws": null, "modifiers": ["protected", "abstract"], "return_type": "int", "snippet": "    protected abstract int getEntries();\n\n    protected abstract int getValues();\n\n    protected abstract String getKey();\n\n    protected abstract String defaultValue();\n\n    @Override\n    protected void init(View view) {\n        Objects.requireNonNull(getArguments());\n        mBinding.toolbar.setNavigationOnClickListener(v -> navigateUp());\n        mBinding.toolbarTitle.setText(getArguments().getInt(KEY_TITLE));\n        prefs = Utilities.getPrefs(mActivity);\n        entries = getResources().getStringArray(getEntries());\n        values = getResources().getStringArray(getValues());\n        value = prefs.getString(getKey(), defaultValue());\n        adapter = new Adapter(mActivity);\n        adapter.setItems(Arrays.asList(entries));\n        mBinding.list.setAdapter(adapter);\n    }", "url": "https://raw.githubusercontent.com/CoboVault/cobo-vault-cold/master/app/src/main/java/com/cobo/cold/ui/fragment/setting/ListPreferenceFragment.java", "stars": "13", "class_props": {"extends": "BaseFragment", "implements": ["ListPreferenceCallback"], "modifiers": ["public", "abstract"]}}, {"id": 61963, "method_name": "getValues", "class_name": "ListPreferenceFragment", "params": [], "throws": null, "modifiers": ["protected", "abstract"], "return_type": "int", "snippet": "    protected abstract int getValues();\n\n    protected abstract String getKey();\n\n    protected abstract String defaultValue();\n\n    @Override\n    protected void init(View view) {\n        Objects.requireNonNull(getArguments());\n        mBinding.toolbar.setNavigationOnClickListener(v -> navigateUp());\n        mBinding.toolbarTitle.setText(getArguments().getInt(KEY_TITLE));\n        prefs = Utilities.getPrefs(mActivity);\n        entries = getResources().getStringArray(getEntries());\n        values = getResources().getStringArray(getValues());\n        value = prefs.getString(getKey(), defaultValue());\n        adapter = new Adapter(mActivity);\n        adapter.setItems(Arrays.asList(entries));\n        mBinding.list.setAdapter(adapter);\n    }", "url": "https://raw.githubusercontent.com/CoboVault/cobo-vault-cold/master/app/src/main/java/com/cobo/cold/ui/fragment/setting/ListPreferenceFragment.java", "stars": "13", "class_props": {"extends": "BaseFragment", "implements": ["ListPreferenceCallback"], "modifiers": ["public", "abstract"]}}, {"id": 61964, "method_name": "getKey", "class_name": "ListPreferenceFragment", "params": [], "throws": null, "modifiers": ["protected", "abstract"], "return_type": "String", "snippet": "    protected abstract String getKey();\n\n    protected abstract String defaultValue();\n\n    @Override\n    protected void init(View view) {\n        Objects.requireNonNull(getArguments());\n        mBinding.toolbar.setNavigationOnClickListener(v -> navigateUp());\n        mBinding.toolbarTitle.setText(getArguments().getInt(KEY_TITLE));\n        prefs = Utilities.getPrefs(mActivity);\n        entries = getResources().getStringArray(getEntries());\n        values = getResources().getStringArray(getValues());\n        value = prefs.getString(getKey(), defaultValue());\n        adapter = new Adapter(mActivity);\n        adapter.setItems(Arrays.asList(entries));\n        mBinding.list.setAdapter(adapter);\n    }", "url": "https://raw.githubusercontent.com/CoboVault/cobo-vault-cold/master/app/src/main/java/com/cobo/cold/ui/fragment/setting/ListPreferenceFragment.java", "stars": "13", "class_props": {"extends": "BaseFragment", "implements": ["ListPreferenceCallback"], "modifiers": ["public", "abstract"]}}, {"id": 61965, "method_name": "defaultValue", "class_name": "ListPreferenceFragment", "params": [], "throws": null, "modifiers": ["protected", "abstract"], "return_type": "String", "snippet": "    protected abstract String defaultValue();\n\n    @Override\n    protected void init(View view) {\n        Objects.requireNonNull(getArguments());\n        mBinding.toolbar.setNavigationOnClickListener(v -> navigateUp());\n        mBinding.toolbarTitle.setText(getArguments().getInt(KEY_TITLE));\n        prefs = Utilities.getPrefs(mActivity);\n        entries = getResources().getStringArray(getEntries());\n        values = getResources().getStringArray(getValues());\n        value = prefs.getString(getKey(), defaultValue());\n        adapter = new Adapter(mActivity);\n        adapter.setItems(Arrays.asList(entries));\n        mBinding.list.setAdapter(adapter);\n    }", "url": "https://raw.githubusercontent.com/CoboVault/cobo-vault-cold/master/app/src/main/java/com/cobo/cold/ui/fragment/setting/ListPreferenceFragment.java", "stars": "13", "class_props": {"extends": "BaseFragment", "implements": ["ListPreferenceCallback"], "modifiers": ["public", "abstract"]}}, {"id": 61966, "method_name": "init", "class_name": "ListPreferenceFragment", "params": ["View"], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void init(View view) {\n        Objects.requireNonNull(getArguments());\n        mBinding.toolbar.setNavigationOnClickListener(v -> navigateUp());\n        mBinding.toolbarTitle.setText(getArguments().getInt(KEY_TITLE));\n        prefs = Utilities.getPrefs(mActivity);\n        entries = getResources().getStringArray(getEntries());\n        values = getResources().getStringArray(getValues());\n        value = prefs.getString(getKey(), defaultValue());\n        adapter = new Adapter(mActivity);\n        adapter.setItems(Arrays.asList(entries));\n        mBinding.list.setAdapter(adapter);\n    }", "url": "https://raw.githubusercontent.com/CoboVault/cobo-vault-cold/master/app/src/main/java/com/cobo/cold/ui/fragment/setting/ListPreferenceFragment.java", "stars": "13", "class_props": {"extends": "BaseFragment", "implements": ["ListPreferenceCallback"], "modifiers": ["public", "abstract"]}}, {"id": 61967, "method_name": "initData", "class_name": "ListPreferenceFragment", "params": ["Bundle"], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void initData(Bundle savedInstanceState) {\n\n    }", "url": "https://raw.githubusercontent.com/CoboVault/cobo-vault-cold/master/app/src/main/java/com/cobo/cold/ui/fragment/setting/ListPreferenceFragment.java", "stars": "13", "class_props": {"extends": "BaseFragment", "implements": ["ListPreferenceCallback"], "modifiers": ["public", "abstract"]}}, {"id": 61968, "method_name": "getLayoutResId", "class_name": "Adapter", "params": ["int"], "throws": null, "modifiers": ["protected"], "return_type": "int", "snippet": "        protected int getLayoutResId(int viewType) {\n            return R.layout.setting_item_selectable;\n        }", "url": "https://raw.githubusercontent.com/CoboVault/cobo-vault-cold/master/app/src/main/java/com/cobo/cold/ui/fragment/setting/ListPreferenceFragment.java", "stars": "13", "class_props": {"extends": "BaseBindingAdapter", "implements": null, "modifiers": ["protected"]}}, {"id": 61969, "method_name": "onBindViewHolder", "class_name": "Adapter", "params": ["RecyclerView", "int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "        public void onBindViewHolder(@NonNull RecyclerView.ViewHolder holder, int position) {\n            SettingItemSelectableBinding binding = DataBindingUtil.getBinding(holder.itemView);\n            binding.title.setText(entries[position]);\n            binding.setIndex(position);\n            binding.setCallback(ListPreferenceFragment.this);\n            if (values[position].equals(value)) {\n                binding.setChecked(true);\n            } else {\n                binding.setChecked(false);\n            }\n        }", "url": "https://raw.githubusercontent.com/CoboVault/cobo-vault-cold/master/app/src/main/java/com/cobo/cold/ui/fragment/setting/ListPreferenceFragment.java", "stars": "13", "class_props": {"extends": "BaseBindingAdapter", "implements": null, "modifiers": ["protected"]}}, {"id": 61970, "method_name": "onBindItem", "class_name": "Adapter", "params": ["SettingItemSelectableBinding", "CharSequence"], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "        protected void onBindItem(SettingItemSelectableBinding binding, CharSequence item) {\n        }", "url": "https://raw.githubusercontent.com/CoboVault/cobo-vault-cold/master/app/src/main/java/com/cobo/cold/ui/fragment/setting/ListPreferenceFragment.java", "stars": "13", "class_props": {"extends": "BaseBindingAdapter", "implements": null, "modifiers": ["protected"]}}, {"id": 61971, "method_name": "login", "class_name": "JobInfoControllerTest", "params": [], "throws": ["Exception"], "modifiers": ["public"], "return_type": "void", "snippet": "  public void login() throws Exception {\n    MvcResult ret = mockMvc.perform(\n        post(\"/login\")\n            .contentType(MediaType.APPLICATION_FORM_URLENCODED)\n            .param(\"userName\", \"admin\")\n            .param(\"password\", \"123456\")\n    ).andReturn();\n    cookie = ret.getResponse().getCookie(LoginService.LOGIN_IDENTITY_KEY);\n  }", "url": "https://raw.githubusercontent.com/miaoo92/xxl-job-mongo/master/src/test/java/com/avon/rga/controller/JobInfoControllerTest.java", "stars": "1", "class_props": {"extends": "AbstractSpringMvcTest", "implements": null, "modifiers": ["public"]}}, {"id": 61972, "method_name": "testAdd", "class_name": "JobInfoControllerTest", "params": [], "throws": ["Exception"], "modifiers": ["public"], "return_type": "void", "snippet": "  public void testAdd() throws Exception {\n    MultiValueMap<String, String> parameters = new LinkedMultiValueMap<String, String>();\n    parameters.add(\"jobGroup\", \"1\");\n\n    MvcResult ret = mockMvc.perform(\n        post(\"/jobinfo/pageList\")\n            .contentType(MediaType.APPLICATION_FORM_URLENCODED)\n            //.content(paramsJson)\n            .params(parameters)\n            .cookie(cookie)\n    ).andReturn();\n\n    System.out.println(ret.getResponse().getContentAsString());\n  }", "url": "https://raw.githubusercontent.com/miaoo92/xxl-job-mongo/master/src/test/java/com/avon/rga/controller/JobInfoControllerTest.java", "stars": "1", "class_props": {"extends": "AbstractSpringMvcTest", "implements": null, "modifiers": ["public"]}}, {"id": 61973, "method_name": "isFilled", "class_name": "JexlStepData", "params": ["DynActionForm", "Connection"], "throws": ["BGException"], "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean isFilled(DynActionForm form, Connection con) throws BGException {\n        Map<String, Object> context = DefaultProcessChangeListener.getProcessJexlContext(\n                new SingleConnectionConnectionSet(con), form, null, data.getProcess());\n        Map<?, ?> state = (Map<?, ?>) new Expression(context).executeScript(step.getDoExpression());\n        if (state == null)\n            return filled = false;\n        \n        filled = (Boolean) state.get(\"filled\");\n        message = (String) state.get(\"message\");\n        \n        return filled;\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/model/process/wizard/JexlStepData.java", "stars": "12", "class_props": {"extends": "StepData", "implements": null, "modifiers": ["public"]}}, {"id": 61974, "method_name": "isFilled", "class_name": "JexlStepData", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean isFilled() {\n        return filled;\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/model/process/wizard/JexlStepData.java", "stars": "12", "class_props": {"extends": "StepData", "implements": null, "modifiers": ["public"]}}, {"id": 61975, "method_name": "getMessage", "class_name": "JexlStepData", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getMessage() {\n        return message;\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/model/process/wizard/JexlStepData.java", "stars": "12", "class_props": {"extends": "StepData", "implements": null, "modifiers": ["public"]}}, {"id": 61976, "method_name": "checkAppSignature", "class_name": "SignUtils", "params": ["Context"], "throws": null, "modifiers": ["public", "static"], "return_type": "int", "snippet": "    public static int checkAppSignature(Context context) {\n        try {\n\n            PackageInfo packageInfo = context.getPackageManager().getPackageInfo(context.getPackageName(), PackageManager.GET_SIGNATURES);\n\n            for (Signature signature : packageInfo.signatures) {\n                byte[] signatureBytes = signature.toByteArray();\n\n                MessageDigest md = MessageDigest.getInstance(\"SHA-256\");\n                md.update(signatureBytes);\n                String currentSignature = Base64.encodeToString(md.digest(), Base64.NO_WRAP);\n\n                Timber.d(\"Detected signature: %s\", currentSignature);\n\n                //compare signatures\n                if (SIGNATURE.equals(currentSignature) || SIGNATURE_DEV.equals(currentSignature)){\n                    return VALID;\n                }\n            }\n        } catch (Exception e) {\n            //assumes an issue in checking signature., but we let the caller decide on what to do.\n        }\n\n        return INVALID;\n\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/utils/SignUtils.java", "stars": "4", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 61977, "method_name": "getCount", "class_name": "SwitchListVideoAdapter", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getCount() {\n        return list.size();\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/app/src/main/java/com/example/gsyvideoplayer/switchplay/SwitchListVideoAdapter.java", "stars": "2", "class_props": {"extends": "BaseAdapter", "implements": null, "modifiers": ["public"]}}, {"id": 61978, "method_name": "getItem", "class_name": "SwitchListVideoAdapter", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "Object", "snippet": "    public Object getItem(int position) {\n        return null;\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/app/src/main/java/com/example/gsyvideoplayer/switchplay/SwitchListVideoAdapter.java", "stars": "2", "class_props": {"extends": "BaseAdapter", "implements": null, "modifiers": ["public"]}}, {"id": 61979, "method_name": "getItemId", "class_name": "SwitchListVideoAdapter", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "long", "snippet": "    public long getItemId(int position) {\n        return 0;\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/app/src/main/java/com/example/gsyvideoplayer/switchplay/SwitchListVideoAdapter.java", "stars": "2", "class_props": {"extends": "BaseAdapter", "implements": null, "modifiers": ["public"]}}, {"id": 61980, "method_name": "getView", "class_name": "SwitchListVideoAdapter", "params": ["int", "View", "ViewGroup"], "throws": null, "modifiers": ["public"], "return_type": "View", "snippet": "    public View getView(final int position, View convertView, ViewGroup parent) {\n        final ViewHolder holder;\n        if (convertView == null) {\n            holder = new ViewHolder();\n            convertView = inflater.inflate(R.layout.switch_list_video_item, null);\n            holder.gsyVideoPlayer = (SwitchVideo) convertView.findViewById(R.id.video_item_player);\n            holder.imageView = new ImageView(context);\n            convertView.setTag(holder);\n        } else {\n            holder = (ViewHolder) convertView.getTag();\n        }\n        final String urlH = \"http://9890.vod.myqcloud.com/9890_4e292f9a3dd011e6b4078980237cc3d3.f20.mp4\";\n        final String urlV = \"http://7xjmzj.com1.z0.glb.clouddn.com/20171026175005_JObCxCE2.mp4\";\n        final String url = (position % 2 == 0) ? urlH : urlV;\n        final int coverId = (position % 2 == 0) ? R.mipmap.xxx1 : R.mipmap.xxx2;\n\n\n        //\u9632\u6b62\u9519\u4f4d\u8bbe\u7f6e\n        holder.gsyVideoPlayer.setPlayTag(TAG);\n        holder.gsyVideoPlayer.setPlayPosition(position);\n        SwitchUtil.optionPlayer(holder.gsyVideoPlayer, url, true, \"\u8fd9\u662ftitle\");\n        holder.gsyVideoPlayer.setUpLazy(url, true, null, null, \"\u8fd9\u662ftitle\");\n\n        //\u589e\u52a0\u5c01\u9762\n        holder.imageView.setScaleType(ImageView.ScaleType.CENTER_CROP);\n        holder.imageView.setImageResource(coverId);\n        if (holder.imageView.getParent() != null) {\n            ViewGroup viewGroup = (ViewGroup) holder.imageView.getParent();\n            viewGroup.removeView(holder.imageView);\n        }\n        holder.gsyVideoPlayer.setThumbImageView(holder.imageView);\n\n        if (GSYVideoManager.instance().getPlayTag().equals(SwitchListVideoAdapter.TAG)\n                && (position == GSYVideoManager.instance().getPlayPosition())) {\n            holder.gsyVideoPlayer.getThumbImageViewLayout().setVisibility(View.GONE);\n        } else {\n            holder.gsyVideoPlayer.getThumbImageViewLayout().setVisibility(View.VISIBLE);\n        }\n\n        return convertView;\n\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/app/src/main/java/com/example/gsyvideoplayer/switchplay/SwitchListVideoAdapter.java", "stars": "2", "class_props": {"extends": "BaseAdapter", "implements": null, "modifiers": ["public"]}}, {"id": 61981, "method_name": "lastAttacker", "class_name": "SpaceMonster", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Empire", "snippet": "    public Empire lastAttacker()               { return galaxy().empire(lastAttackerId); }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/galaxy/SpaceMonster.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "NamedObject", "Serializable"], "modifiers": ["public"]}}, {"id": 61982, "method_name": "lastAttacker", "class_name": "SpaceMonster", "params": ["Empire"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void lastAttacker(Empire c)         { lastAttackerId = c.id; }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/galaxy/SpaceMonster.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "NamedObject", "Serializable"], "modifiers": ["public"]}}, {"id": 61983, "method_name": "visitSystem", "class_name": "SpaceMonster", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void visitSystem(int sysId)         { path.add(sysId); }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/galaxy/SpaceMonster.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "NamedObject", "Serializable"], "modifiers": ["public"]}}, {"id": 61984, "method_name": "vistedSystems", "class_name": "SpaceMonster", "params": [], "throws": null, "modifiers": ["public"], "return_type": "List<Integer>", "snippet": "    public List<Integer> vistedSystems()       { return path; }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/galaxy/SpaceMonster.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "NamedObject", "Serializable"], "modifiers": ["public"]}}, {"id": 61985, "method_name": "combatStacks", "class_name": "SpaceMonster", "params": [], "throws": null, "modifiers": ["public"], "return_type": "List<CombatStack>", "snippet": "    public List<CombatStack> combatStacks()    {\n        if (combatStacks == null)\n            combatStacks = new ArrayList<>();\n        return combatStacks; \n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/galaxy/SpaceMonster.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "NamedObject", "Serializable"], "modifiers": ["public"]}}, {"id": 61986, "method_name": "initCombat", "class_name": "SpaceMonster", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void initCombat() { }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/galaxy/SpaceMonster.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "NamedObject", "Serializable"], "modifiers": ["public"]}}, {"id": 61987, "method_name": "addCombatStack", "class_name": "SpaceMonster", "params": ["CombatStack"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void addCombatStack(CombatStack c)  { combatStacks.add(c); }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/galaxy/SpaceMonster.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "NamedObject", "Serializable"], "modifiers": ["public"]}}, {"id": 61988, "method_name": "name", "class_name": "SpaceMonster", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String name()      { return text(nameKey);  }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/galaxy/SpaceMonster.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "NamedObject", "Serializable"], "modifiers": ["public"]}}, {"id": 61989, "method_name": "alive", "class_name": "SpaceMonster", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean alive()    { \n        boolean alive = false;\n        for (CombatStack st: combatStacks) {\n            if (!st.destroyed())\n                return true;\n        }\n        return alive;\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/galaxy/SpaceMonster.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "NamedObject", "Serializable"], "modifiers": ["public"]}}, {"id": 61990, "method_name": "plunder", "class_name": "SpaceMonster", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void plunder() { notifyGalaxy(); }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/galaxy/SpaceMonster.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "NamedObject", "Serializable"], "modifiers": ["public"]}}, {"id": 61991, "method_name": "killIncident", "class_name": "SpaceMonster", "params": ["Empire"], "throws": null, "modifiers": ["protected"], "return_type": "DiplomaticIncident", "snippet": "    protected DiplomaticIncident killIncident(Empire emp) { return KillMonsterIncident.create(emp.id, lastAttackerId, nameKey); }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/galaxy/SpaceMonster.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "NamedObject", "Serializable"], "modifiers": ["public"]}}, {"id": 61992, "method_name": "notifyGalaxy", "class_name": "SpaceMonster", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void notifyGalaxy() {\n        Empire slayerEmp = lastAttacker();\n        for (Empire emp: galaxy().empires()) {\n            if ((emp.id != lastAttackerId) && emp.knowsOf(slayerEmp)) {\n                DiplomaticIncident inc = killIncident(emp);\n                emp.diplomatAI().noticeIncident(inc, slayerEmp);\n            }\n        }\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/galaxy/SpaceMonster.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "NamedObject", "Serializable"], "modifiers": ["public"]}}, {"id": 61993, "method_name": "missingNumber", "class_name": "MissingNumber", "params": ["int"], "throws": null, "modifiers": ["public", "static"], "return_type": "int", "snippet": "    public static int missingNumber(int[] arr) {\n        int XOR = 0;\n\n        for(int i = 0; i < arr.length; i ++) {\n            XOR ^= i ^ arr[i];\n        }\n\n        return XOR ^ arr.length;\n    }", "url": "https://raw.githubusercontent.com/nishantc1527/LeetCode/master/src/MissingNumber.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 61994, "method_name": "setUp", "class_name": "UsersEventHandlerTest", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "    void setUp() {\n        usersEventHandler = new UsersEventHandler(usersRepository);\n    }", "url": "https://raw.githubusercontent.com/everest-engineering/lhotse/master/users/src/test/java/engineering/everest/lhotse/users/eventhandlers/UsersEventHandlerTest.java", "stars": "9", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 61995, "method_name": "prepareForReplay_willDeleteAllProjections", "class_name": "UsersEventHandlerTest", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "    void prepareForReplay_willDeleteAllProjections() {\n        usersEventHandler.prepareForReplay();\n\n        verify(usersRepository).deleteByIdNot(ADMIN_ID);\n    }", "url": "https://raw.githubusercontent.com/everest-engineering/lhotse/master/users/src/test/java/engineering/everest/lhotse/users/eventhandlers/UsersEventHandlerTest.java", "stars": "9", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 61996, "method_name": "onUserCreatedByAdminEvent_WillDelegate", "class_name": "UsersEventHandlerTest", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "    void onUserCreatedByAdminEvent_WillDelegate() {\n        usersEventHandler.on(new UserCreatedByAdminEvent(USER_ID, ORGANIZATION_ID, ADMIN_ID,\n                USER_DISPLAY_NAME, USER_USERNAME, ENCODED_PASSWORD), CREATION_TIME);\n\n        verify(usersRepository).createUser(USER_ID, ORGANIZATION_ID, USER_DISPLAY_NAME, USER_USERNAME, ENCODED_PASSWORD, CREATION_TIME);\n    }", "url": "https://raw.githubusercontent.com/everest-engineering/lhotse/master/users/src/test/java/engineering/everest/lhotse/users/eventhandlers/UsersEventHandlerTest.java", "stars": "9", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 61997, "method_name": "onUserUpdatedByAdminEvent_WillPersistChanges_WhenFieldsHaveChanged", "class_name": "UsersEventHandlerTest", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "    void onUserUpdatedByAdminEvent_WillPersistChanges_WhenFieldsHaveChanged() {\n        PersistableUser persistableUser = createPersistableUser();\n\n        when(usersRepository.findById(USER_ID)).thenReturn(Optional.of(persistableUser));\n\n        usersEventHandler.on(new UserDetailsUpdatedByAdminEvent(USER_ID, ORGANIZATION_ID, \"display-name-change\",\n                \"email-change\", \"password-change\", ADMIN_ID));\n\n        assertEquals(\"display-name-change\", persistableUser.getDisplayName());\n        assertEquals(\"email-change\", persistableUser.getEmail());\n        assertEquals(\"password-change\", persistableUser.getEncodedPassword());\n\n        verify(usersRepository).save(persistableUser);\n    }", "url": "https://raw.githubusercontent.com/everest-engineering/lhotse/master/users/src/test/java/engineering/everest/lhotse/users/eventhandlers/UsersEventHandlerTest.java", "stars": "9", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 61998, "method_name": "onUserDetailsUpdatedByAdminEvent_WillIgnoreFieldsThatAreNotBeingChanged", "class_name": "UsersEventHandlerTest", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "    void onUserDetailsUpdatedByAdminEvent_WillIgnoreFieldsThatAreNotBeingChanged() {\n        PersistableUser persistableUser = createPersistableUser();\n\n        when(usersRepository.findById(USER_ID)).thenReturn(Optional.of(persistableUser));\n\n        usersEventHandler.on(new UserDetailsUpdatedByAdminEvent(USER_ID, ORGANIZATION_ID, NO_CHANGE,\n                NO_CHANGE, NO_CHANGE, ADMIN_ID));\n\n        assertEquals(\"old-display-name\", persistableUser.getDisplayName());\n        assertEquals(\"old-email\", persistableUser.getEmail());\n        assertEquals(\"old-password\", persistableUser.getEncodedPassword());\n\n        verify(usersRepository).save(persistableUser);\n    }", "url": "https://raw.githubusercontent.com/everest-engineering/lhotse/master/users/src/test/java/engineering/everest/lhotse/users/eventhandlers/UsersEventHandlerTest.java", "stars": "9", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 61999, "method_name": "onUserDetailsUpdatedByAdminEvent_WillUpdateFieldsBeingBlanked", "class_name": "UsersEventHandlerTest", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "    void onUserDetailsUpdatedByAdminEvent_WillUpdateFieldsBeingBlanked() {\n        PersistableUser persistableUser = createPersistableUser();\n\n        when(usersRepository.findById(USER_ID)).thenReturn(Optional.of(persistableUser));\n\n        usersEventHandler.on(new UserDetailsUpdatedByAdminEvent(USER_ID, ORGANIZATION_ID, BLANK_FIELD,\n                BLANK_FIELD, BLANK_FIELD, ADMIN_ID));\n\n        assertEquals(BLANK_FIELD, persistableUser.getDisplayName());\n        assertEquals(BLANK_FIELD, persistableUser.getEmail());\n        assertEquals(BLANK_FIELD, persistableUser.getEncodedPassword());\n\n        verify(usersRepository).save(persistableUser);\n    }", "url": "https://raw.githubusercontent.com/everest-engineering/lhotse/master/users/src/test/java/engineering/everest/lhotse/users/eventhandlers/UsersEventHandlerTest.java", "stars": "9", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 62000, "method_name": "onUserProfilePhotoUploadedEvent_WillUpdateProfilePhotoFileId", "class_name": "UsersEventHandlerTest", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "    void onUserProfilePhotoUploadedEvent_WillUpdateProfilePhotoFileId() {\n        PersistableUser persistableUser = createPersistableUser();\n\n        when(usersRepository.findById(USER_ID)).thenReturn(Optional.of(persistableUser));\n\n        usersEventHandler.on(new UserProfilePhotoUploadedEvent(USER_ID, PROFILE_PHOTO_FILE_ID));\n\n        assertEquals(PROFILE_PHOTO_FILE_ID, persistableUser.getProfilePhotoFileId());\n        verify(usersRepository).save(persistableUser);\n    }", "url": "https://raw.githubusercontent.com/everest-engineering/lhotse/master/users/src/test/java/engineering/everest/lhotse/users/eventhandlers/UsersEventHandlerTest.java", "stars": "9", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 62001, "method_name": "createPersistableUser", "class_name": "UsersEventHandlerTest", "params": [], "throws": null, "modifiers": ["static", "private"], "return_type": "PersistableUser", "snippet": "    private static PersistableUser createPersistableUser() {\n        PersistableUser persistableUser = new PersistableUser();\n        persistableUser.setEmail(\"old-email\");\n        persistableUser.setDisplayName(\"old-display-name\");\n        persistableUser.setEncodedPassword(\"old-password\");\n        return persistableUser;\n    }", "url": "https://raw.githubusercontent.com/everest-engineering/lhotse/master/users/src/test/java/engineering/everest/lhotse/users/eventhandlers/UsersEventHandlerTest.java", "stars": "9", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 62002, "method_name": "init", "class_name": "GalaxySpiralShape", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void init(int n) {\n        super.init(n);\n        circle = new Ellipse2D.Float(0,0,galaxyWidthLY(), galaxyHeightLY());\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/galaxy/GalaxySpiralShape.java", "stars": "74", "class_props": {"extends": "GalaxyShape", "implements": null, "modifiers": ["public"]}}, {"id": 62003, "method_name": "maxScaleAdj", "class_name": "GalaxySpiralShape", "params": [], "throws": null, "modifiers": ["public"], "return_type": "float", "snippet": "    public float maxScaleAdj()               { return 1.1f; }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/galaxy/GalaxySpiralShape.java", "stars": "74", "class_props": {"extends": "GalaxyShape", "implements": null, "modifiers": ["public"]}}, {"id": 62004, "method_name": "galaxyWidthLY", "class_name": "GalaxySpiralShape", "params": [], "throws": null, "modifiers": ["protected"], "return_type": "int", "snippet": "    protected int galaxyWidthLY() { \n        return (int) (Math.sqrt(maxStars*adjustedSizeFactor()));\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/galaxy/GalaxySpiralShape.java", "stars": "74", "class_props": {"extends": "GalaxyShape", "implements": null, "modifiers": ["public"]}}, {"id": 62005, "method_name": "galaxyHeightLY", "class_name": "GalaxySpiralShape", "params": [], "throws": null, "modifiers": ["protected"], "return_type": "int", "snippet": "    protected int galaxyHeightLY() { \n        return (int) (Math.sqrt(maxStars*adjustedSizeFactor()));\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/galaxy/GalaxySpiralShape.java", "stars": "74", "class_props": {"extends": "GalaxyShape", "implements": null, "modifiers": ["public"]}}, {"id": 62006, "method_name": "setRandom", "class_name": "GalaxySpiralShape", "params": ["Point"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setRandom(Point.Float pt) {\n        float buff = galaxyEdgeBuffer();\n        float adjW = width-buff-buff;\n        float adjH = height-buff-buff;\n        \n        float dist = random();\n        dist = dist * dist;\n        \n        float angle = random()*2*(float)Math.PI;\n        float armOffset = random() * armOffsetMax;\n        armOffset = (armOffset - armOffsetMax/2)/dist;\n        armOffset = armOffset > 0 ? armOffset*armOffset : -1*armOffset*armOffset;\n        \n        float rotation = dist * rotationFactor;\n        angle = (int)(angle/armSeparationDistance)*armSeparationDistance+armOffset+rotation;\n        \n        float rX = (float)(Math.cos(angle)*dist);\n        float rY = (float)(Math.sin(angle)*dist);\n        pt.x = buff+(adjW*(1+rX)/2);\n        pt.y = buff+(adjH*(1+rY)/2);\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/galaxy/GalaxySpiralShape.java", "stars": "74", "class_props": {"extends": "GalaxyShape", "implements": null, "modifiers": ["public"]}}, {"id": 62007, "method_name": "valid", "class_name": "GalaxySpiralShape", "params": ["Point"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean valid(Point.Float pt) {\n        return true;\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/galaxy/GalaxySpiralShape.java", "stars": "74", "class_props": {"extends": "GalaxyShape", "implements": null, "modifiers": ["public"]}}, {"id": 62008, "method_name": "randomLocation", "class_name": "GalaxySpiralShape", "params": ["float", "float"], "throws": null, "modifiers": [], "return_type": "float", "snippet": "    float randomLocation(float max, float buff) {\n        return buff + (random() * (max-buff-buff));\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/galaxy/GalaxySpiralShape.java", "stars": "74", "class_props": {"extends": "GalaxyShape", "implements": null, "modifiers": ["public"]}}, {"id": 62009, "method_name": "sizeFactor", "class_name": "GalaxySpiralShape", "params": ["String"], "throws": null, "modifiers": ["protected"], "return_type": "float", "snippet": "    protected float sizeFactor(String size) {\n        switch (opts.selectedGalaxySize()) {\n            case IGameOptions.SIZE_TINY:      return 24; \n            case IGameOptions.SIZE_SMALL:     return 24; \n            case IGameOptions.SIZE_SMALL2:    return 25;\n            case IGameOptions.SIZE_MEDIUM:    return 26; \n            case IGameOptions.SIZE_MEDIUM2:   return 29; \n            case IGameOptions.SIZE_LARGE:     return 32; \n            case IGameOptions.SIZE_LARGE2:    return 36; \n            case IGameOptions.SIZE_HUGE:      return 40; \n            case IGameOptions.SIZE_HUGE2:     return 44; \n            case IGameOptions.SIZE_MASSIVE:   return 48; \n            case IGameOptions.SIZE_MASSIVE2:  return 50; \n            case IGameOptions.SIZE_MASSIVE3:  return 52; \n            case IGameOptions.SIZE_MASSIVE4:  return 54; \n            case IGameOptions.SIZE_MASSIVE5:  return 56; \n            case IGameOptions.SIZE_INSANE:    return 58; \n            case IGameOptions.SIZE_LUDICROUS: return 58; \n            default:             return 19; \n        }\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/galaxy/GalaxySpiralShape.java", "stars": "74", "class_props": {"extends": "GalaxyShape", "implements": null, "modifiers": ["public"]}}, {"id": 62010, "method_name": "toString", "class_name": "SelectedPageCategory", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String toString() {\n        return \"SelectedPageCategory{\" +\n                \"success=\" + success +\n                \", code=\" + code +\n                \", message='\" + message + '\\'' +\n                \", data=\" + data +\n                '}';\n    }", "url": "https://raw.githubusercontent.com/TrillGates/TaobaoUnion/master/app/src/main/java/com/sunofbeaches/taobaounion/model/domain/SelectedPageCategory.java", "stars": "9", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 62011, "method_name": "isSuccess", "class_name": "SelectedPageCategory", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean isSuccess() {\n        return success;\n    }", "url": "https://raw.githubusercontent.com/TrillGates/TaobaoUnion/master/app/src/main/java/com/sunofbeaches/taobaounion/model/domain/SelectedPageCategory.java", "stars": "9", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 62012, "method_name": "setSuccess", "class_name": "SelectedPageCategory", "params": ["boolean"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setSuccess(boolean success) {\n        this.success = success;\n    }", "url": "https://raw.githubusercontent.com/TrillGates/TaobaoUnion/master/app/src/main/java/com/sunofbeaches/taobaounion/model/domain/SelectedPageCategory.java", "stars": "9", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 62013, "method_name": "getCode", "class_name": "SelectedPageCategory", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getCode() {\n        return code;\n    }", "url": "https://raw.githubusercontent.com/TrillGates/TaobaoUnion/master/app/src/main/java/com/sunofbeaches/taobaounion/model/domain/SelectedPageCategory.java", "stars": "9", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 62014, "method_name": "setCode", "class_name": "SelectedPageCategory", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setCode(int code) {\n        this.code = code;\n    }", "url": "https://raw.githubusercontent.com/TrillGates/TaobaoUnion/master/app/src/main/java/com/sunofbeaches/taobaounion/model/domain/SelectedPageCategory.java", "stars": "9", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 62015, "method_name": "getMessage", "class_name": "SelectedPageCategory", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getMessage() {\n        return message;\n    }", "url": "https://raw.githubusercontent.com/TrillGates/TaobaoUnion/master/app/src/main/java/com/sunofbeaches/taobaounion/model/domain/SelectedPageCategory.java", "stars": "9", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 62016, "method_name": "setMessage", "class_name": "SelectedPageCategory", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setMessage(String message) {\n        this.message = message;\n    }", "url": "https://raw.githubusercontent.com/TrillGates/TaobaoUnion/master/app/src/main/java/com/sunofbeaches/taobaounion/model/domain/SelectedPageCategory.java", "stars": "9", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 62017, "method_name": "getData", "class_name": "SelectedPageCategory", "params": [], "throws": null, "modifiers": ["public"], "return_type": "List<DataBean>", "snippet": "    public List<DataBean> getData() {\n        return data;\n    }", "url": "https://raw.githubusercontent.com/TrillGates/TaobaoUnion/master/app/src/main/java/com/sunofbeaches/taobaounion/model/domain/SelectedPageCategory.java", "stars": "9", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 62018, "method_name": "setData", "class_name": "SelectedPageCategory", "params": ["List<DataBean>"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setData(List<DataBean> data) {\n        this.data = data;\n    }", "url": "https://raw.githubusercontent.com/TrillGates/TaobaoUnion/master/app/src/main/java/com/sunofbeaches/taobaounion/model/domain/SelectedPageCategory.java", "stars": "9", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 62019, "method_name": "toString", "class_name": "DataBean", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "        public String toString() {\n            return \"DataBean{\" +\n                    \"type=\" + type +\n                    \", favorites_id=\" + favorites_id +\n                    \", favorites_title='\" + favorites_title + '\\'' +\n                    '}';\n        }", "url": "https://raw.githubusercontent.com/TrillGates/TaobaoUnion/master/app/src/main/java/com/sunofbeaches/taobaounion/model/domain/SelectedPageCategory.java", "stars": "9", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "static"]}}, {"id": 62020, "method_name": "getType", "class_name": "DataBean", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "        public int getType() {\n            return type;\n        }", "url": "https://raw.githubusercontent.com/TrillGates/TaobaoUnion/master/app/src/main/java/com/sunofbeaches/taobaounion/model/domain/SelectedPageCategory.java", "stars": "9", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "static"]}}, {"id": 62021, "method_name": "setType", "class_name": "DataBean", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "        public void setType(int type) {\n            this.type = type;\n        }", "url": "https://raw.githubusercontent.com/TrillGates/TaobaoUnion/master/app/src/main/java/com/sunofbeaches/taobaounion/model/domain/SelectedPageCategory.java", "stars": "9", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "static"]}}, {"id": 62022, "method_name": "getFavorites_id", "class_name": "DataBean", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "        public int getFavorites_id() {\n            return favorites_id;\n        }", "url": "https://raw.githubusercontent.com/TrillGates/TaobaoUnion/master/app/src/main/java/com/sunofbeaches/taobaounion/model/domain/SelectedPageCategory.java", "stars": "9", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "static"]}}, {"id": 62023, "method_name": "setFavorites_id", "class_name": "DataBean", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "        public void setFavorites_id(int favorites_id) {\n            this.favorites_id = favorites_id;\n        }", "url": "https://raw.githubusercontent.com/TrillGates/TaobaoUnion/master/app/src/main/java/com/sunofbeaches/taobaounion/model/domain/SelectedPageCategory.java", "stars": "9", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "static"]}}, {"id": 62024, "method_name": "getFavorites_title", "class_name": "DataBean", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "        public String getFavorites_title() {\n            return favorites_title;\n        }", "url": "https://raw.githubusercontent.com/TrillGates/TaobaoUnion/master/app/src/main/java/com/sunofbeaches/taobaounion/model/domain/SelectedPageCategory.java", "stars": "9", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "static"]}}, {"id": 62025, "method_name": "setFavorites_title", "class_name": "DataBean", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "        public void setFavorites_title(String favorites_title) {\n            this.favorites_title = favorites_title;\n        }", "url": "https://raw.githubusercontent.com/TrillGates/TaobaoUnion/master/app/src/main/java/com/sunofbeaches/taobaounion/model/domain/SelectedPageCategory.java", "stars": "9", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "static"]}}, {"id": 62026, "method_name": "callEntry", "class_name": "MachOModule", "params": ["Emulator<?>", "String"], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int callEntry(Emulator<?> emulator, String... args) {\n        if (entryPoint <= 0) {\n            throw new IllegalStateException(\"Invalid entry point\");\n        }\n\n        Memory memory = emulator.getMemory();\n        final UnicornPointer stack = memory.allocateStack(0);\n\n        int argc = 0;\n        List<Pointer> argv = new ArrayList<>();\n\n        argv.add(memory.writeStackString(emulator.getProcessName()));\n        argc++;\n\n        for (int i = 0; args != null && i < args.length; i++) {\n            String arg = args[i];\n            argv.add(memory.writeStackString(arg));\n            argc++;\n        }\n\n        Pointer auxvPointer = memory.allocateStack(emulator.getPointerSize());\n        assert auxvPointer != null;\n        auxvPointer.setPointer(0, null);\n\n        Pointer envPointer = memory.allocateStack(emulator.getPointerSize());\n        assert envPointer != null;\n        envPointer.setPointer(0, null);\n\n        Pointer pointer = memory.allocateStack(emulator.getPointerSize());\n        assert pointer != null;\n        pointer.setPointer(0, null); // NULL-terminated argv\n\n        Collections.reverse(argv);\n        for (Pointer arg : argv) {\n            pointer = memory.allocateStack(emulator.getPointerSize());\n            assert pointer != null;\n            pointer.setPointer(0, arg);\n        }\n\n        if (log.isDebugEnabled()) {\n            UnicornPointer sp = memory.allocateStack(0);\n            byte[] data = sp.getByteArray(0, (int) (stack.peer - sp.peer));\n            Inspector.inspect(data, \"callEntry sp=0x\" + Long.toHexString(memory.getStackPoint()) + \", envPointer=\" + envPointer + \", auxvPointer=\" + auxvPointer);\n        }\n\n        Pointer argvPointer = memory.allocateStack(0);\n        return emulateFunction(emulator, machHeader + entryPoint, argc, argvPointer, envPointer, auxvPointer)[0].intValue();\n//        return emulator.eFunc(machHeader + entryPoint, argc, argvPointer)[0].intValue();\n    }", "url": "https://raw.githubusercontent.com/wmm1996528/unidbg_douyin10/master/src/main/java/com/github/unidbg/ios/MachOModule.java", "stars": "16", "class_props": {"extends": "Module", "implements": ["com"], "modifiers": ["public"]}}, {"id": 62027, "method_name": "doInitialization", "class_name": "MachOModule", "params": ["Emulator<?>"], "throws": null, "modifiers": ["final"], "return_type": "void", "snippet": "    final void doInitialization(Emulator<?> emulator) {\n        if (loader.executableModule == null) {\n            vars.setPointer(0, UnicornPointer.pointer(emulator, machHeader)); // _NSGetMachExecuteHeader\n        }\n\n        callRoutines(emulator);\n        for (Module module : neededLibraries.values()) {\n            MachOModule mm = (MachOModule) module;\n            mm.doInitialization(emulator);\n        }\n        callInitFunction(emulator);\n    }", "url": "https://raw.githubusercontent.com/wmm1996528/unidbg_douyin10/master/src/main/java/com/github/unidbg/ios/MachOModule.java", "stars": "16", "class_props": {"extends": "Module", "implements": ["com"], "modifiers": ["public"]}}, {"id": 62028, "method_name": "callRoutines", "class_name": "MachOModule", "params": ["Emulator<?>"], "throws": null, "modifiers": ["final"], "return_type": "void", "snippet": "    final void callRoutines(Emulator<?> emulator) {\n        Log log = LogFactory.getLog(MachOModule.class);\n        if (log.isDebugEnabled() && !routines.isEmpty()) {\n            log.debug(\"callRoutines name=\" + name);\n        }\n        while (!routines.isEmpty()) {\n            InitFunction routine = routines.remove(0);\n            routine.call(emulator);\n        }\n    }", "url": "https://raw.githubusercontent.com/wmm1996528/unidbg_douyin10/master/src/main/java/com/github/unidbg/ios/MachOModule.java", "stars": "16", "class_props": {"extends": "Module", "implements": ["com"], "modifiers": ["public"]}}, {"id": 62029, "method_name": "callInitFunction", "class_name": "MachOModule", "params": ["Emulator<?>"], "throws": null, "modifiers": ["final"], "return_type": "void", "snippet": "    final void callInitFunction(Emulator<?> emulator) {\n        /*if (!initFunctionList.isEmpty() && \"libSystem.B.dylib\".equals(name)) {\n            Module libsystem_c = loader.findModule(\"libsystem_c.dylib\");\n            if (libsystem_c != null) {\n                long _program_vars_init;\n                if (emulator.is64Bit()) {\n                    _program_vars_init = 0x9974;\n                } else {\n                    _program_vars_init = 0x6d10 | 1; // thumb\n                }\n                libsystem_c.callFunction(emulator, _program_vars_init, vars);\n\n                MachOModule mCoreFoundation = (MachOModule) loader.findModule(\"CoreFoundation\");\n                if (mCoreFoundation != null) {\n                    mCoreFoundation.callRoutines(emulator);\n                }\n            }\n        }*/\n\n        Log log = LogFactory.getLog(MachOModule.class);\n        if (log.isDebugEnabled() && !initFunctionList.isEmpty()) {\n            log.debug(\"callInitFunction name=\" + name);\n        }\n\n        while (!initFunctionList.isEmpty()) {\n            InitFunction initFunction = initFunctionList.remove(0);\n            initFunction.call(emulator);\n        }\n    }", "url": "https://raw.githubusercontent.com/wmm1996528/unidbg_douyin10/master/src/main/java/com/github/unidbg/ios/MachOModule.java", "stars": "16", "class_props": {"extends": "Module", "implements": ["com"], "modifiers": ["public"]}}, {"id": 62030, "method_name": "processExportNode", "class_name": "MachOModule", "params": ["Log", "ByteBuffer", "byte", "int", "Map<String,ExportSymbol>"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void processExportNode(Log log, ByteBuffer buffer, byte[] cummulativeString, int curStrOffset, Map<String, ExportSymbol> map) {\n        int terminalSize = Utils.readULEB128(buffer).intValue();\n\n        if (terminalSize != 0) {\n            buffer.mark();\n            int flags = Utils.readULEB128(buffer).intValue();\n            long address;\n            long other;\n            String importName;\n            if ((flags & EXPORT_SYMBOL_FLAGS_REEXPORT) != 0) {\n                address = 0;\n                other = Utils.readULEB128(buffer).longValue();\n                ByteArrayOutputStream baos = new ByteArrayOutputStream();\n                byte b;\n                while ((b = buffer.get()) != 0) {\n                    baos.write(b);\n                }\n                importName = baos.toString();\n            } else {\n                address = Utils.readULEB128(buffer).longValue();\n                if((flags & EXPORT_SYMBOL_FLAGS_STUB_AND_RESOLVER) != 0) {\n                    other = Utils.readULEB128(buffer).longValue();\n                } else {\n                    other = 0;\n                }\n                importName = null;\n            }\n            String symbolName = new String(cummulativeString, 0, curStrOffset);\n            map.put(symbolName, new ExportSymbol(symbolName, address, this, base + other, (flags & EXPORT_SYMBOL_FLAGS_KIND_MASK) == EXPORT_SYMBOL_FLAGS_KIND_ABSOLUTE));\n            if (log.isDebugEnabled()) {\n                log.debug(\"exportNode symbolName=\" + symbolName + \", address=0x\" + Long.toHexString(address) + \", other=0x\" + Long.toHexString(other) + \", importName=\" + importName + \", flags=0x\" + Integer.toHexString(flags));\n            }\n            buffer.reset();\n            buffer.position(buffer.position() + terminalSize);\n        }\n\n        int childrenCount = buffer.get() & 0xff;\n        for (int i = 0; i < childrenCount; i++) {\n            int edgeStrLen = 0;\n            byte b;\n            while ((b = buffer.get()) != 0) {\n                cummulativeString[curStrOffset+edgeStrLen] = b;\n                ++edgeStrLen;\n            }\n            cummulativeString[curStrOffset+edgeStrLen] = 0;\n\n            int childNodeOffset = Utils.readULEB128(buffer).intValue();\n\n            ByteBuffer duplicate = buffer.duplicate();\n            duplicate.position(childNodeOffset);\n            processExportNode(log, duplicate, cummulativeString, curStrOffset+edgeStrLen, map);\n        }\n    }", "url": "https://raw.githubusercontent.com/wmm1996528/unidbg_douyin10/master/src/main/java/com/github/unidbg/ios/MachOModule.java", "stars": "16", "class_props": {"extends": "Module", "implements": ["com"], "modifiers": ["public"]}}, {"id": 62031, "method_name": "processExportNode", "class_name": "MachOModule", "params": ["Log", "MachO", "ByteBuffer"], "throws": null, "modifiers": ["private"], "return_type": "Map<String,ExportSymbol>", "snippet": "    private Map<String, ExportSymbol> processExportNode(Log log, MachO.DyldInfoCommand dyldInfoCommand, ByteBuffer buffer) {\n        if (dyldInfoCommand == null) {\n            return Collections.emptyMap();\n        }\n\n        Map<String, ExportSymbol> map = new HashMap<>();\n        if (dyldInfoCommand.exportSize() > 0) {\n            buffer = buffer.duplicate();\n            buffer.limit((int) (dyldInfoCommand.exportOff() + dyldInfoCommand.exportSize()));\n            buffer.position((int) dyldInfoCommand.exportOff());\n            processExportNode(log, buffer.slice(), new byte[4000], 0, map);\n        }\n        return map;\n    }", "url": "https://raw.githubusercontent.com/wmm1996528/unidbg_douyin10/master/src/main/java/com/github/unidbg/ios/MachOModule.java", "stars": "16", "class_props": {"extends": "Module", "implements": ["com"], "modifiers": ["public"]}}, {"id": 62032, "method_name": "parseRoutines", "class_name": "MachOModule", "params": ["MachO"], "throws": null, "modifiers": ["private"], "return_type": "List<InitFunction>", "snippet": "    private List<InitFunction> parseRoutines(MachO machO) {\n        List<InitFunction> routines = new ArrayList<>();\n        for (MachO.LoadCommand command : machO.loadCommands()) {\n            switch (command.type()) {\n                case ROUTINES: {\n                    MachO.RoutinesCommand routinesCommand = (MachO.RoutinesCommand) command.body();\n                    long address = routinesCommand.initAddress();\n                    if (log.isDebugEnabled()) {\n                        log.debug(\"parseRoutines address=0x\" + Long.toHexString(address));\n                    }\n                    routines.add(new MachOModuleInit(this, envp, apple, vars, false, address));\n                    break;\n                }\n                case ROUTINES_64: {\n                    MachO.RoutinesCommand64 routinesCommand64 = (MachO.RoutinesCommand64) command.body();\n                    long address = routinesCommand64.initAddress();\n                    if (log.isDebugEnabled()) {\n                        log.debug(\"parseRoutines64 address=0x\" + Long.toHexString(address));\n                    }\n                    routines.add(new MachOModuleInit(this, envp, apple, vars, false, address));\n                    break;\n                }\n            }\n        }\n        return routines;\n    }", "url": "https://raw.githubusercontent.com/wmm1996528/unidbg_douyin10/master/src/main/java/com/github/unidbg/ios/MachOModule.java", "stars": "16", "class_props": {"extends": "Module", "implements": ["com"], "modifiers": ["public"]}}, {"id": 62033, "method_name": "parseInitFunction", "class_name": "MachOModule", "params": ["MachO", "ByteBuffer", "String", "Emulator<?>"], "throws": null, "modifiers": ["private"], "return_type": "List<InitFunction>", "snippet": "    private List<InitFunction> parseInitFunction(MachO machO, ByteBuffer buffer, String libName, Emulator<?> emulator) {\n        List<InitFunction> initFunctionList = new ArrayList<>();\n        for (MachO.LoadCommand command : machO.loadCommands()) {\n            switch (command.type()) {\n                case SEGMENT:\n                    MachO.SegmentCommand segmentCommand = (MachO.SegmentCommand) command.body();\n                    for (MachO.SegmentCommand.Section section : segmentCommand.sections()) {\n                        long type = section.flags() & SECTION_TYPE;\n                        if (type != S_MOD_INIT_FUNC_POINTERS) {\n                            continue;\n                        }\n\n                        long elementCount = section.size() / emulator.getPointerSize();\n                        buffer.order(ByteOrder.LITTLE_ENDIAN);\n                        buffer.limit((int) (section.offset() + section.size()));\n                        buffer.position((int) section.offset());\n                        for (int i = 0; i < elementCount; i++) {\n                            long address = emulator.is32Bit() ? buffer.getInt() : buffer.getLong();\n                            if (log.isDebugEnabled()) {\n                                log.debug(\"parseInitFunction libName=\" + libName + \", address=0x\" + Long.toHexString(address) + \", offset=0x\" + Long.toHexString(section.offset()) + \", elementCount=\" + elementCount);\n                            }\n                            initFunctionList.add(new MachOModuleInit(this, envp, apple, vars, true, address));\n                        }\n                    }\n                    break;\n                case SEGMENT_64:\n                    MachO.SegmentCommand64 segmentCommand64 = (MachO.SegmentCommand64) command.body();\n                    for (MachO.SegmentCommand64.Section64 section : segmentCommand64.sections()) {\n                        long type = section.flags() & SECTION_TYPE;\n                        if (type != S_MOD_INIT_FUNC_POINTERS) {\n                            continue;\n                        }\n\n                        long elementCount = section.size() / emulator.getPointerSize();\n                        buffer.order(ByteOrder.LITTLE_ENDIAN);\n                        buffer.limit((int) (section.offset() + section.size()));\n                        buffer.position((int) section.offset());\n                        for (int i = 0; i < elementCount; i++) {\n                            long address = emulator.is32Bit() ? buffer.getInt() : buffer.getLong();\n                            if (log.isDebugEnabled()) {\n                                log.debug(\"parseInitFunction libName=\" + libName + \", address=0x\" + Long.toHexString(address) + \", offset=0x\" + Long.toHexString(section.offset()) + \", elementCount=\" + elementCount);\n                            }\n                            initFunctionList.add(new MachOModuleInit(this, envp, apple, vars, true, address));\n                        }\n                    }\n            }\n        }\n        return initFunctionList;\n    }", "url": "https://raw.githubusercontent.com/wmm1996528/unidbg_douyin10/master/src/main/java/com/github/unidbg/ios/MachOModule.java", "stars": "16", "class_props": {"extends": "Module", "implements": ["com"], "modifiers": ["public"]}}, {"id": 62034, "method_name": "neededLibraries", "class_name": "MachOModule", "params": [], "throws": null, "modifiers": ["final"], "return_type": "Map<String,Module>", "snippet": "    final Map<String, Module> neededLibraries() {\n        return neededLibraries;\n    }", "url": "https://raw.githubusercontent.com/wmm1996528/unidbg_douyin10/master/src/main/java/com/github/unidbg/ios/MachOModule.java", "stars": "16", "class_props": {"extends": "Module", "implements": ["com"], "modifiers": ["public"]}}, {"id": 62035, "method_name": "callFunction", "class_name": "MachOModule", "params": ["Emulator<?>", "long", "Object"], "throws": null, "modifiers": ["public"], "return_type": "Number", "snippet": "    public Number[] callFunction(Emulator<?> emulator, long offset, Object... args) {\n        return emulateFunction(emulator, base + offset, args);\n    }", "url": "https://raw.githubusercontent.com/wmm1996528/unidbg_douyin10/master/src/main/java/com/github/unidbg/ios/MachOModule.java", "stars": "16", "class_props": {"extends": "Module", "implements": ["com"], "modifiers": ["public"]}}, {"id": 62036, "method_name": "getSymbolByIndex", "class_name": "MachOModule", "params": ["int"], "throws": null, "modifiers": [], "return_type": "MachOSymbol", "snippet": "    MachOSymbol getSymbolByIndex(int index) {\n        buffer.limit((int) (symtabCommand.strOff() + symtabCommand.strSize()));\n        buffer.position((int) symtabCommand.strOff());\n        ByteBuffer strBuffer = buffer.slice();\n        ByteBufferKaitaiStream io = new ByteBufferKaitaiStream(strBuffer);\n\n        MachO.SymtabCommand.Nlist nlist = symtabCommand.symbols().get(index);\n        strBuffer.position((int) nlist.un());\n        String symbolName = new String(io.readBytesTerm(0, false, true, true), StandardCharsets.US_ASCII);\n        return new MachOSymbol(this, nlist, symbolName);\n    }", "url": "https://raw.githubusercontent.com/wmm1996528/unidbg_douyin10/master/src/main/java/com/github/unidbg/ios/MachOModule.java", "stars": "16", "class_props": {"extends": "Module", "implements": ["com"], "modifiers": ["public"]}}, {"id": 62037, "method_name": "findSymbolByName", "class_name": "MachOModule", "params": ["String", "boolean"], "throws": null, "modifiers": ["public"], "return_type": "Symbol", "snippet": "    public Symbol findSymbolByName(String name, boolean withDependencies) {\n        if (withDependencies && failedSymbols.contains(name)) {\n            return null;\n        }\n        Symbol symbol = findSymbolByNameInternal(name, withDependencies);\n        if (withDependencies && symbol == null) {\n            failedSymbols.add(name);\n        }\n\n        if (symbol != null) {\n            if (symbol instanceof IndirectSymbol) {\n                IndirectSymbol indirectSymbol = (IndirectSymbol) symbol;\n                symbol = indirectSymbol.resolveSymbol();\n                if (symbol == null) {\n                    log.warn(\"Resolve indirect symbol failed: name=\" + this.name + \", symbolName=\" + name + \", indirectSymbol=\" + indirectSymbol.symbol + \", neededLibraries=\" + neededLibraries.values());\n                }\n            }\n            return symbol;\n        } else {\n            return null;\n        }\n    }", "url": "https://raw.githubusercontent.com/wmm1996528/unidbg_douyin10/master/src/main/java/com/github/unidbg/ios/MachOModule.java", "stars": "16", "class_props": {"extends": "Module", "implements": ["com"], "modifiers": ["public"]}}, {"id": 62038, "method_name": "findSymbolByNameInternal", "class_name": "MachOModule", "params": ["String", "boolean"], "throws": null, "modifiers": ["private"], "return_type": "Symbol", "snippet": "    private Symbol findSymbolByNameInternal(String name, boolean withDependencies) {\n        Symbol symbol = symbolMap.get(name);\n        if (symbol != null) {\n            return symbol;\n        }\n\n        if (withDependencies) {\n            Set<Module> findSet = new LinkedHashSet<>(loader.getLoadedModules().size());\n            findSet.addAll(exportModules.values());\n            findSet.addAll(upwardLibraries.values());\n            findSet.addAll(neededLibraries.values());\n            findSet.addAll(loader.getLoadedModules());\n            for (Module module : findSet) {\n                symbol = module.findSymbolByName(name, false);\n                if (symbol != null) {\n                    return symbol;\n                }\n            }\n        }\n\n        return null;\n    }", "url": "https://raw.githubusercontent.com/wmm1996528/unidbg_douyin10/master/src/main/java/com/github/unidbg/ios/MachOModule.java", "stars": "16", "class_props": {"extends": "Module", "implements": ["com"], "modifiers": ["public"]}}, {"id": 62039, "method_name": "findNearestSymbolByAddress", "class_name": "MachOModule", "params": ["long"], "throws": null, "modifiers": ["public"], "return_type": "Symbol", "snippet": "    public Symbol findNearestSymbolByAddress(long addr) {\n        long abs = Long.MAX_VALUE;\n        Symbol nearestSymbol = null;\n        for (Symbol symbol : symbolMap.values()) {\n            if (symbol.getAddress() <= addr) {\n                long off = addr - symbol.getAddress();\n                if (off < abs) {\n                    abs = off;\n                    nearestSymbol = symbol;\n                }\n            }\n        }\n        return nearestSymbol;\n    }", "url": "https://raw.githubusercontent.com/wmm1996528/unidbg_douyin10/master/src/main/java/com/github/unidbg/ios/MachOModule.java", "stars": "16", "class_props": {"extends": "Module", "implements": ["com"], "modifiers": ["public"]}}, {"id": 62040, "method_name": "toString", "class_name": "MachOModule", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String toString() {\n        return path;\n    }", "url": "https://raw.githubusercontent.com/wmm1996528/unidbg_douyin10/master/src/main/java/com/github/unidbg/ios/MachOModule.java", "stars": "16", "class_props": {"extends": "Module", "implements": ["com"], "modifiers": ["public"]}}, {"id": 62041, "method_name": "hasUnresolvedSymbol", "class_name": "MachOModule", "params": [], "throws": null, "modifiers": [], "return_type": "boolean", "snippet": "    boolean hasUnresolvedSymbol() {\n        return !allSymbolBond || !allLazySymbolBond;\n    }", "url": "https://raw.githubusercontent.com/wmm1996528/unidbg_douyin10/master/src/main/java/com/github/unidbg/ios/MachOModule.java", "stars": "16", "class_props": {"extends": "Module", "implements": ["com"], "modifiers": ["public"]}}, {"id": 62042, "method_name": "getPath", "class_name": "MachOModule", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getPath() {\n        return path;\n    }", "url": "https://raw.githubusercontent.com/wmm1996528/unidbg_douyin10/master/src/main/java/com/github/unidbg/ios/MachOModule.java", "stars": "16", "class_props": {"extends": "Module", "implements": ["com"], "modifiers": ["public"]}}, {"id": 62043, "method_name": "registerSymbol", "class_name": "MachOModule", "params": ["String", "long"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void registerSymbol(String symbolName, long address) {\n        throw new UnsupportedOperationException();\n    }", "url": "https://raw.githubusercontent.com/wmm1996528/unidbg_douyin10/master/src/main/java/com/github/unidbg/ios/MachOModule.java", "stars": "16", "class_props": {"extends": "Module", "implements": ["com"], "modifiers": ["public"]}}, {"id": 62044, "method_name": "createVirtualModule", "class_name": "MachOModule", "params": ["String", "Map<String,UnicornPointer>", "Emulator<?>"], "throws": null, "modifiers": ["static"], "return_type": "MachOModule", "snippet": "    static MachOModule createVirtualModule(String name, final Map<String, UnicornPointer> symbols, Emulator<?> emulator) {\n        if (symbols.isEmpty()) {\n            throw new IllegalArgumentException(\"symbols is empty\");\n        }\n\n        List<UnicornPointer> list = new ArrayList<>(symbols.values());\n        Collections.sort(list, new Comparator<UnicornPointer>() {\n            @Override\n            public int compare(UnicornPointer o1, UnicornPointer o2) {\n                return (int) (o1.peer - o2.peer);\n            }\n        });\n        UnicornPointer first = list.get(0);\n        UnicornPointer last = list.get(list.size() - 1);\n        Alignment alignment = emulator.align(first.peer, last.peer - first.peer);\n        final long base = alignment.address;\n        final long size = alignment.size;\n\n        Log log = LogFactory.getLog(MachOModule.class);\n        if (log.isDebugEnabled()) {\n            log.debug(\"createVirtualModule first=0x\" + Long.toHexString(first.peer) + \", last=0x\" + Long.toHexString(last.peer) + \", base=0x\" + Long.toHexString(base) + \", size=0x\" + Long.toHexString(size));\n        }\n\n        MachOModule module = new MachOModule(null, name, base, size, Collections.<String, Module>emptyMap(),\n                Collections.<MemRegion>emptyList(),\n                null, null, null,\n                Collections.<NeedLibrary>emptyList(),\n                Collections.<String, Module>emptyMap(),\n                Collections.<String, Module>emptyMap(),\n                name, emulator, null, null, null, null, 0L, false, null) {\n            @Override\n            public Symbol findSymbolByName(String name, boolean withDependencies) {\n                UnicornPointer pointer = symbols.get(name);\n                if (pointer != null) {\n                    return new VirtualSymbol(name, this, pointer.peer);\n                } else {\n                    return null;\n                }\n            }\n            @Override\n            public void registerSymbol(String symbolName, long address) {\n            }\n            @Override\n            public boolean isVirtual() {\n                return true;\n            }\n        };\n        for (Map.Entry<String, UnicornPointer> entry : symbols.entrySet()) {\n            module.registerSymbol(entry.getKey(), entry.getValue().peer);\n        }\n        return module;\n    }", "url": "https://raw.githubusercontent.com/wmm1996528/unidbg_douyin10/master/src/main/java/com/github/unidbg/ios/MachOModule.java", "stars": "16", "class_props": {"extends": "Module", "implements": ["com"], "modifiers": ["public"]}}, {"id": 62045, "method_name": "isSpying", "class_name": "EspionageTechIncident", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean isSpying()         { return true; }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/incidents/EspionageTechIncident.java", "stars": "74", "class_props": {"extends": "DiplomaticIncident", "implements": null, "modifiers": ["public"]}}, {"id": 62046, "method_name": "title", "class_name": "EspionageTechIncident", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String title()             { return text(\"INC_TECH_STOLEN_TITLE\"); }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/incidents/EspionageTechIncident.java", "stars": "74", "class_props": {"extends": "DiplomaticIncident", "implements": null, "modifiers": ["public"]}}, {"id": 62047, "method_name": "description", "class_name": "EspionageTechIncident", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String description()       {\n        if (empSpy == empThief)\n            return  decode(text(\"INC_TECH_STOLEN_DESC\"));\n        else\n            return decode(text(\"INC_TECH_FRAMED_DESC\"));\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/incidents/EspionageTechIncident.java", "stars": "74", "class_props": {"extends": "DiplomaticIncident", "implements": null, "modifiers": ["public"]}}, {"id": 62048, "method_name": "frameEmpire", "class_name": "EspionageTechIncident", "params": ["Empire"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void frameEmpire(Empire e) {\n        empThief = e.id;\n        if (galaxy().empire(empVictim).isPlayer())\n            TechStolenAlert.create(empThief, techId);\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/incidents/EspionageTechIncident.java", "stars": "74", "class_props": {"extends": "DiplomaticIncident", "implements": null, "modifiers": ["public"]}}, {"id": 62049, "method_name": "warningMessageId", "class_name": "EspionageTechIncident", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String warningMessageId() { return galaxy().empire(empVictim).isPlayer() ? \"\" : DialogueManager.WARNING_ESPIONAGE; }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/incidents/EspionageTechIncident.java", "stars": "74", "class_props": {"extends": "DiplomaticIncident", "implements": null, "modifiers": ["public"]}}, {"id": 62050, "method_name": "key", "class_name": "EspionageTechIncident", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String key() {\n        return str(dateOccurred)+\":Espionage\";\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/incidents/EspionageTechIncident.java", "stars": "74", "class_props": {"extends": "DiplomaticIncident", "implements": null, "modifiers": ["public"]}}, {"id": 62051, "method_name": "decode", "class_name": "EspionageTechIncident", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String decode(String s) {\n        String frameMessage = empThief == empSpy ? \"\" : text(\"SPY_FRAMED\");\n        String s1 = super.decode(s);\n        s1 = galaxy().empire(empThief).replaceTokens(s1, \"spy\");\n        s1 = galaxy().empire(empVictim).replaceTokens(s1, \"victim\");\n        s1 = s1.replace(\"[tech]\", tech(techId).name());\n        s1 = s1.replace(\"[framed]\", frameMessage);\n        return s1;\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/incidents/EspionageTechIncident.java", "stars": "74", "class_props": {"extends": "DiplomaticIncident", "implements": null, "modifiers": ["public"]}}, {"id": 62052, "method_name": "create", "class_name": "GNNAllianceFormedNotice", "params": ["Empire", "Empire"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void create(Empire emp1, Empire emp2) {\n        new GNNAllianceFormedNotice(emp1, emp2);\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/notifications/GNNAllianceFormedNotice.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base"], "modifiers": ["public"]}}, {"id": 62053, "method_name": "addParam", "class_name": "BaseControlPresenter", "params": ["String", "Object"], "throws": null, "modifiers": ["public"], "return_type": "BaseControlPresenter", "snippet": "    public BaseControlPresenter addParam(String key, Object value) {\n        externParams.put(key, value);\n        return this;\n    }", "url": "https://raw.githubusercontent.com/FanChael/MVVM/master/librarys/lib_network/src/main/java/com/hl/lib_network/controller/presenter/BaseControlPresenter.java", "stars": "14", "class_props": {"extends": null, "implements": ["BaseControlContract"], "modifiers": ["public"]}}, {"id": 62054, "method_name": "addHeaders", "class_name": "BaseControlPresenter", "params": ["String", "String"], "throws": null, "modifiers": ["public"], "return_type": "BaseControlPresenter", "snippet": "    public BaseControlPresenter addHeaders(String key, String value) {\n        headers.put(key, value);\n        return this;\n    }", "url": "https://raw.githubusercontent.com/FanChael/MVVM/master/librarys/lib_network/src/main/java/com/hl/lib_network/controller/presenter/BaseControlPresenter.java", "stars": "14", "class_props": {"extends": null, "implements": ["BaseControlContract"], "modifiers": ["public"]}}, {"id": 62055, "method_name": "enableRequestTime", "class_name": "BaseControlPresenter", "params": ["boolean"], "throws": null, "modifiers": ["public"], "return_type": "BaseControlPresenter", "snippet": "    public BaseControlPresenter enableRequestTime(boolean bNeedRequestime) {\n        this.bNeedRequestime = bNeedRequestime;\n        return this;\n    }", "url": "https://raw.githubusercontent.com/FanChael/MVVM/master/librarys/lib_network/src/main/java/com/hl/lib_network/controller/presenter/BaseControlPresenter.java", "stars": "14", "class_props": {"extends": null, "implements": ["BaseControlContract"], "modifiers": ["public"]}}, {"id": 62056, "method_name": "releaseResource", "class_name": "BaseControlPresenter", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void releaseResource() {\n        for (int i = 0; i < subscriptionList.size(); ++i) {\n            if (null != subscriptionList.get(i) && !subscriptionList.get(i).isDisposed()) {\n                subscriptionList.get(i).dispose();\n            }\n        }\n        requestList.clear();\n        subscriptionList.clear();\n        ///< \u6e05\u7a7acookiejar\u5185\u5bb9\n        NetWork.clearByCookie(NetUrl.base_url);\n    }", "url": "https://raw.githubusercontent.com/FanChael/MVVM/master/librarys/lib_network/src/main/java/com/hl/lib_network/controller/presenter/BaseControlPresenter.java", "stars": "14", "class_props": {"extends": null, "implements": ["BaseControlContract"], "modifiers": ["public"]}}, {"id": 62057, "method_name": "requestData", "class_name": "BaseControlPresenter", "params": ["String", "TypeCallBack", "HashMap<String,String>", "boolean"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void requestData(String _function, TypeCallBack _resultCallBack, HashMap<String, String> _paramList, boolean _bShowDialog) {\n        getPostData(_function, _resultCallBack, _paramList, true, _bShowDialog);\n    }", "url": "https://raw.githubusercontent.com/FanChael/MVVM/master/librarys/lib_network/src/main/java/com/hl/lib_network/controller/presenter/BaseControlPresenter.java", "stars": "14", "class_props": {"extends": null, "implements": ["BaseControlContract"], "modifiers": ["public"]}}, {"id": 62058, "method_name": "postData", "class_name": "BaseControlPresenter", "params": ["String", "TypeCallBack", "HashMap<String,String>", "boolean"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void postData(String _function, TypeCallBack _resultCallBack, HashMap<String, String> _paramList, boolean _bShowDialog) {\n        getPostData(_function, _resultCallBack, _paramList, false, _bShowDialog);\n    }", "url": "https://raw.githubusercontent.com/FanChael/MVVM/master/librarys/lib_network/src/main/java/com/hl/lib_network/controller/presenter/BaseControlPresenter.java", "stars": "14", "class_props": {"extends": null, "implements": ["BaseControlContract"], "modifiers": ["public"]}}, {"id": 62059, "method_name": "getPostData", "class_name": "BaseControlPresenter", "params": ["String", "TypeCallBack", "HashMap<String,String>", "boolean", "boolean"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void getPostData(final String _function, final TypeCallBack _resultCallBack, HashMap<String, String> _paramList, boolean bIsRequest, final boolean _bShowDialog) {\n        // \u6dfb\u52a0\u5f53\u524d\u8bf7\u6c42\u6807\u8bc6,\u9632\u6b62\u591a\u6b21\u8bf7\u6c42\n        synchronized (BaseControlPresenter.class){\n            if (addRequestFlag(_function)) {\n                return;\n            }\n        }\n        ///< \u663e\u793a\u8fdb\u5ea6\u6761\n        if (_bShowDialog) {\n            view.showDialog();\n        }\n        HashMap<String, String> paramList = null;\n        if (null == _paramList) {\n            paramList = new HashMap<>();\n        } else {\n            paramList = new HashMap<>(_paramList);\n        }\n        // \u52a0\u5165\u989d\u5916\u8bf7\u6c42\u53c2\u6570\n        if (null != externParams && externParams.size() > 0) {\n            for (Map.Entry<String, Object> entry : externParams.entrySet()) {\n                if (entry.getValue() instanceof Integer) {\n                    paramList.put(entry.getKey(), String.valueOf(entry.getValue()));\n                } else {\n                    paramList.put(entry.getKey(), (String) entry.getValue());\n                }\n            }\n            externParams.clear();\n        }\n        // \u662f\u5426\u5e26\u4e0a\u4e0a\u4e00\u6b21\u8bf7\u6c42\u7684\u65f6\u95f4\n        if (bNeedRequestime && !lastRequestTime.equals(\"\")) {\n            paramList.put(\"starttime\", lastRequestTime);\n        }\n\n        Observable<HttpResponse<String>> observable = null;\n        if (bIsRequest) {\n            observable = baseService.getData(_function, paramList);\n        } else {\n            observable = baseService.postData(_function, paramList);\n        }\n        observable\n                .subscribeOn(Schedulers.io())\n                .observeOn(Schedulers.io())\n                .map(new ResponsePreHandle<>(new ResponsePreHandle.CallMe<Object, String>() {\n                    @Override\n                    public Object onCall(String data, String requestTime) {\n                        lastRequestTime = requestTime;\n                        return ParseManager.getBean(data, _resultCallBack);\n                    }\n                }))\n                .observeOn(AndroidSchedulers.mainThread())\n                .subscribe(new BaseObserver<Object>() {\n\n                    @Override\n                    public void onComplete() {\n\n                    }\n\n                    @Override\n                    public void onErrors(ExceptionHandle.ResponeThrowable responeThrowable) {\n                        ///< \u63a5\u4e0b\u6765\u5c31\u53ef\u4ee5\u6839\u636e\u72b6\u6001\u7801\u8fdb\u884c\u5904\u7406...\n                        int statusCode = responeThrowable.code;\n                        switch (statusCode) {\n                            case ExceptionHandle.ERROR.TOKEN:\n                                view.onLoinOut(_function, new Object[]{statusCode, responeThrowable.message});\n                                view.showToast(\"\u4f60\u7684\u8d26\u53f7\u5f02\u5e38\uff0c\u8bf7\u91cd\u65b0\u767b\u5f55\uff0c\u8c22\u8c22!\");\n                                break;\n                            case ExceptionHandle.ERROR.THIRD_BIND:\n                                ///< \u52a0\u8f7d\u91cd\u8bd5\n                                if (_bShowDialog) {\n                                    view.retryDialog();\n                                }\n                                // \u9700\u8981\u7ed1\u5b9a\u8d26\u53f7 - \u6b64\u65f6\u5176\u5b9e\u662f\u6210\u529f\u7684\u4e00\u79cd\u60c5\u51b5\uff0c\u6240\u4ee5\u76f4\u63a5return.\n                                view.onThirdBind(_function, 11);\n\n                                // \u6e05\u9664\u672c\u6b21\u8bf7\u6c42\n                                clearRequestFlag(_function);\n                                return;\n                            default:\n                                view.showToast(responeThrowable.message);\n                                break;\n                        }\n                        ///< \u52a0\u8f7d\u91cd\u8bd5\n                        if (_bShowDialog) {\n                            view.retryDialog();\n                        }\n                        view.onFailed(_function, responeThrowable.message);\n\n                        // \u6e05\u9664\u672c\u6b21\u8bf7\u6c42\n                        clearRequestFlag(_function);\n                    }\n\n                    @Override\n                    public void onSubscribe(Disposable d) {\n                        subscriptionList.add(d);\n                    }\n\n                    @Override\n                    public void onSuccess(Object data) {\n                        view.onSucess(_function, data);\n                        ///< \u663e\u793a\u8fdb\u5ea6\u6761\n                        if (_bShowDialog) {\n                            view.disDialog();\n                        }\n\n                        // \u6e05\u9664\u672c\u6b21\u8bf7\u6c42\n                        clearRequestFlag(_function);\n                    }\n                });\n    }", "url": "https://raw.githubusercontent.com/FanChael/MVVM/master/librarys/lib_network/src/main/java/com/hl/lib_network/controller/presenter/BaseControlPresenter.java", "stars": "14", "class_props": {"extends": null, "implements": ["BaseControlContract"], "modifiers": ["public"]}}, {"id": 62060, "method_name": "addRequestFlag", "class_name": "BaseControlPresenter", "params": ["String"], "throws": null, "modifiers": ["private"], "return_type": "boolean", "snippet": "    private boolean addRequestFlag(String _function) {\n        if (requestList.contains(_function)) {\n            return true;\n        }\n        requestList.add(_function);\n        return false;\n    }", "url": "https://raw.githubusercontent.com/FanChael/MVVM/master/librarys/lib_network/src/main/java/com/hl/lib_network/controller/presenter/BaseControlPresenter.java", "stars": "14", "class_props": {"extends": null, "implements": ["BaseControlContract"], "modifiers": ["public"]}}, {"id": 62061, "method_name": "clearRequestFlag", "class_name": "BaseControlPresenter", "params": ["String"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void clearRequestFlag(String _function) {\n        // \u6e05\u9664\u5f53\u524d\u8bf7\u6c42\u6807\u8bc6\n        if (requestList.contains(_function)) {\n            requestList.remove(_function);\n        }\n    }", "url": "https://raw.githubusercontent.com/FanChael/MVVM/master/librarys/lib_network/src/main/java/com/hl/lib_network/controller/presenter/BaseControlPresenter.java", "stars": "14", "class_props": {"extends": null, "implements": ["BaseControlContract"], "modifiers": ["public"]}}, {"id": 62062, "method_name": "main", "class_name": "DoubleChar", "params": ["String"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "\tpublic static void main(String[] args) {\n\t\tString res = doubleChar(\"The\");\n\t\tSystem.out.println(res);\n\t}", "url": "https://raw.githubusercontent.com/Suranchiyev/java-sdet-2020/master/src/day18/DoubleChar.java", "stars": "21", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 62063, "method_name": "doubleChar", "class_name": "DoubleChar", "params": ["String"], "throws": null, "modifiers": ["public", "static"], "return_type": "String", "snippet": "\tpublic static String doubleChar(String str) {\n\t\t// empty string\n\t\t// loop to go throw each char in the str\n\t\t// keep adding to empty string in the loop each char two times\n\t\t\n\t\tString res = \"\";\n\t\tfor(int i = 0; i < str.length(); i++) {\n\t\t\t//  =  \"\" +    'T'     +             'T'\n\t\t\tres = res + str.charAt(i) + str.charAt(i);\n\t\t}\n\t\t\n\t\treturn res;\n\t}", "url": "https://raw.githubusercontent.com/Suranchiyev/java-sdet-2020/master/src/day18/DoubleChar.java", "stars": "21", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 62064, "method_name": "initNodeHandlerMap", "class_name": "XMLScriptBuilder", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "  private void initNodeHandlerMap() {\n    nodeHandlerMap.put(\"trim\", new TrimHandler());\n    nodeHandlerMap.put(\"where\", new WhereHandler());\n    nodeHandlerMap.put(\"set\", new SetHandler());\n    nodeHandlerMap.put(\"foreach\", new ForEachHandler());\n    nodeHandlerMap.put(\"if\", new IfHandler());\n    nodeHandlerMap.put(\"choose\", new ChooseHandler());\n    nodeHandlerMap.put(\"when\", new IfHandler());\n    nodeHandlerMap.put(\"otherwise\", new OtherwiseHandler());\n    nodeHandlerMap.put(\"bind\", new BindHandler());\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/scripting/xmltags/XMLScriptBuilder.java", "stars": "15", "class_props": {"extends": "BaseBuilder", "implements": null, "modifiers": ["public"]}}, {"id": 62065, "method_name": "parseScriptNode", "class_name": "XMLScriptBuilder", "params": [], "throws": null, "modifiers": ["public"], "return_type": "SqlSource", "snippet": "  public SqlSource parseScriptNode() {\n    MixedSqlNode rootSqlNode = parseDynamicTags(context);\n    SqlSource sqlSource;\n    if (isDynamic) {\n      sqlSource = new DynamicSqlSource(configuration, rootSqlNode);\n    } else {\n      sqlSource = new RawSqlSource(configuration, rootSqlNode, parameterType);\n    }\n    return sqlSource;\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/scripting/xmltags/XMLScriptBuilder.java", "stars": "15", "class_props": {"extends": "BaseBuilder", "implements": null, "modifiers": ["public"]}}, {"id": 62066, "method_name": "parseDynamicTags", "class_name": "XMLScriptBuilder", "params": ["XNode"], "throws": null, "modifiers": ["protected"], "return_type": "MixedSqlNode", "snippet": "  protected MixedSqlNode parseDynamicTags(XNode node) {\n    List<SqlNode> contents = new ArrayList<>();\n    NodeList children = node.getNode().getChildNodes();\n    for (int i = 0; i < children.getLength(); i++) {\n      XNode child = node.newXNode(children.item(i));\n      if (child.getNode().getNodeType() == Node.CDATA_SECTION_NODE || child.getNode().getNodeType() == Node.TEXT_NODE) {\n        String data = child.getStringBody(\"\");\n        TextSqlNode textSqlNode = new TextSqlNode(data);\n        if (textSqlNode.isDynamic()) {\n          contents.add(textSqlNode);\n          isDynamic = true;\n        } else {\n          contents.add(new StaticTextSqlNode(data));\n        }\n      } else if (child.getNode().getNodeType() == Node.ELEMENT_NODE) { // issue #628\n        String nodeName = child.getNode().getNodeName();\n        NodeHandler handler = nodeHandlerMap.get(nodeName);\n        if (handler == null) {\n          throw new BuilderException(\"Unknown element <\" + nodeName + \"> in SQL statement.\");\n        }\n        handler.handleNode(child, contents);\n        isDynamic = true;\n      }\n    }\n    return new MixedSqlNode(contents);\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/scripting/xmltags/XMLScriptBuilder.java", "stars": "15", "class_props": {"extends": "BaseBuilder", "implements": null, "modifiers": ["public"]}}, {"id": 62067, "method_name": "handleNode", "class_name": "BindHandler", "params": ["XNode", "List<SqlNode>"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void handleNode(XNode nodeToHandle, List<SqlNode> targetContents) {\n      final String name = nodeToHandle.getStringAttribute(\"name\");\n      final String expression = nodeToHandle.getStringAttribute(\"value\");\n      final VarDeclSqlNode node = new VarDeclSqlNode(name, expression);\n      targetContents.add(node);\n    }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/scripting/xmltags/XMLScriptBuilder.java", "stars": "15", "class_props": {"extends": null, "implements": ["NodeHandler"], "modifiers": ["private"]}}, {"id": 62068, "method_name": "handleNode", "class_name": "TrimHandler", "params": ["XNode", "List<SqlNode>"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void handleNode(XNode nodeToHandle, List<SqlNode> targetContents) {\n      MixedSqlNode mixedSqlNode = parseDynamicTags(nodeToHandle);\n      String prefix = nodeToHandle.getStringAttribute(\"prefix\");\n      String prefixOverrides = nodeToHandle.getStringAttribute(\"prefixOverrides\");\n      String suffix = nodeToHandle.getStringAttribute(\"suffix\");\n      String suffixOverrides = nodeToHandle.getStringAttribute(\"suffixOverrides\");\n      TrimSqlNode trim = new TrimSqlNode(configuration, mixedSqlNode, prefix, prefixOverrides, suffix, suffixOverrides);\n      targetContents.add(trim);\n    }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/scripting/xmltags/XMLScriptBuilder.java", "stars": "15", "class_props": {"extends": null, "implements": ["NodeHandler"], "modifiers": ["private"]}}, {"id": 62069, "method_name": "handleNode", "class_name": "WhereHandler", "params": ["XNode", "List<SqlNode>"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void handleNode(XNode nodeToHandle, List<SqlNode> targetContents) {\n      MixedSqlNode mixedSqlNode = parseDynamicTags(nodeToHandle);\n      WhereSqlNode where = new WhereSqlNode(configuration, mixedSqlNode);\n      targetContents.add(where);\n    }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/scripting/xmltags/XMLScriptBuilder.java", "stars": "15", "class_props": {"extends": null, "implements": ["NodeHandler"], "modifiers": ["private"]}}, {"id": 62070, "method_name": "handleNode", "class_name": "SetHandler", "params": ["XNode", "List<SqlNode>"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void handleNode(XNode nodeToHandle, List<SqlNode> targetContents) {\n      MixedSqlNode mixedSqlNode = parseDynamicTags(nodeToHandle);\n      SetSqlNode set = new SetSqlNode(configuration, mixedSqlNode);\n      targetContents.add(set);\n    }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/scripting/xmltags/XMLScriptBuilder.java", "stars": "15", "class_props": {"extends": null, "implements": ["NodeHandler"], "modifiers": ["private"]}}, {"id": 62071, "method_name": "handleNode", "class_name": "ForEachHandler", "params": ["XNode", "List<SqlNode>"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void handleNode(XNode nodeToHandle, List<SqlNode> targetContents) {\n      MixedSqlNode mixedSqlNode = parseDynamicTags(nodeToHandle);\n      String collection = nodeToHandle.getStringAttribute(\"collection\");\n      String item = nodeToHandle.getStringAttribute(\"item\");\n      String index = nodeToHandle.getStringAttribute(\"index\");\n      String open = nodeToHandle.getStringAttribute(\"open\");\n      String close = nodeToHandle.getStringAttribute(\"close\");\n      String separator = nodeToHandle.getStringAttribute(\"separator\");\n      ForEachSqlNode forEachSqlNode = new ForEachSqlNode(configuration, mixedSqlNode, collection, index, item, open, close, separator);\n      targetContents.add(forEachSqlNode);\n    }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/scripting/xmltags/XMLScriptBuilder.java", "stars": "15", "class_props": {"extends": null, "implements": ["NodeHandler"], "modifiers": ["private"]}}, {"id": 62072, "method_name": "handleNode", "class_name": "IfHandler", "params": ["XNode", "List<SqlNode>"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void handleNode(XNode nodeToHandle, List<SqlNode> targetContents) {\n      MixedSqlNode mixedSqlNode = parseDynamicTags(nodeToHandle);\n      String test = nodeToHandle.getStringAttribute(\"test\");\n      IfSqlNode ifSqlNode = new IfSqlNode(mixedSqlNode, test);\n      targetContents.add(ifSqlNode);\n    }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/scripting/xmltags/XMLScriptBuilder.java", "stars": "15", "class_props": {"extends": null, "implements": ["NodeHandler"], "modifiers": ["private"]}}, {"id": 62073, "method_name": "handleNode", "class_name": "OtherwiseHandler", "params": ["XNode", "List<SqlNode>"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void handleNode(XNode nodeToHandle, List<SqlNode> targetContents) {\n      MixedSqlNode mixedSqlNode = parseDynamicTags(nodeToHandle);\n      targetContents.add(mixedSqlNode);\n    }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/scripting/xmltags/XMLScriptBuilder.java", "stars": "15", "class_props": {"extends": null, "implements": ["NodeHandler"], "modifiers": ["private"]}}, {"id": 62074, "method_name": "handleNode", "class_name": "ChooseHandler", "params": ["XNode", "List<SqlNode>"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void handleNode(XNode nodeToHandle, List<SqlNode> targetContents) {\n      List<SqlNode> whenSqlNodes = new ArrayList<>();\n      List<SqlNode> otherwiseSqlNodes = new ArrayList<>();\n      handleWhenOtherwiseNodes(nodeToHandle, whenSqlNodes, otherwiseSqlNodes);\n      SqlNode defaultSqlNode = getDefaultSqlNode(otherwiseSqlNodes);\n      ChooseSqlNode chooseSqlNode = new ChooseSqlNode(whenSqlNodes, defaultSqlNode);\n      targetContents.add(chooseSqlNode);\n    }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/scripting/xmltags/XMLScriptBuilder.java", "stars": "15", "class_props": {"extends": null, "implements": ["NodeHandler"], "modifiers": ["private"]}}, {"id": 62075, "method_name": "handleWhenOtherwiseNodes", "class_name": "ChooseHandler", "params": ["XNode", "List<SqlNode>", "List<SqlNode>"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void handleWhenOtherwiseNodes(XNode chooseSqlNode, List<SqlNode> ifSqlNodes, List<SqlNode> defaultSqlNodes) {\n      List<XNode> children = chooseSqlNode.getChildren();\n      for (XNode child : children) {\n        String nodeName = child.getNode().getNodeName();\n        NodeHandler handler = nodeHandlerMap.get(nodeName);\n        if (handler instanceof IfHandler) {\n          handler.handleNode(child, ifSqlNodes);\n        } else if (handler instanceof OtherwiseHandler) {\n          handler.handleNode(child, defaultSqlNodes);\n        }\n      }\n    }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/scripting/xmltags/XMLScriptBuilder.java", "stars": "15", "class_props": {"extends": null, "implements": ["NodeHandler"], "modifiers": ["private"]}}, {"id": 62076, "method_name": "getDefaultSqlNode", "class_name": "ChooseHandler", "params": ["List<SqlNode>"], "throws": null, "modifiers": ["private"], "return_type": "SqlNode", "snippet": "    private SqlNode getDefaultSqlNode(List<SqlNode> defaultSqlNodes) {\n      SqlNode defaultSqlNode = null;\n      if (defaultSqlNodes.size() == 1) {\n        defaultSqlNode = defaultSqlNodes.get(0);\n      } else if (defaultSqlNodes.size() > 1) {\n        throw new BuilderException(\"Too many default (otherwise) elements in choose statement.\");\n      }\n      return defaultSqlNode;\n    }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/scripting/xmltags/XMLScriptBuilder.java", "stars": "15", "class_props": {"extends": null, "implements": ["NodeHandler"], "modifiers": ["private"]}}, {"id": 62077, "method_name": "hasValidAESProvider", "class_name": "CypherAES256", "params": [], "throws": null, "modifiers": ["private"], "return_type": "boolean", "snippet": "    private boolean hasValidAESProvider() {\n        boolean canCrypt = false;\n        try {\n            int maxKeyLen = Cipher.getMaxAllowedKeyLength(CYPHER_ALGO);\n            logger.debug(\"Available keylen: {}\", maxKeyLen);\n            if (maxKeyLen >= AES_KEYLEN) {\n                canCrypt = true;\n            } else {\n                logger.warn(String.format(\"JRE doesn't support %s keylength for %sInstall unrestricted policy files from:%s\",\n                        AES_KEYLEN, CYPHER_KEY_ALGO, JDK8_UPF_URL));\n            }\n        } catch (Exception ex) {\n            logger.warn(String.format(\"Failed to check for proper cypher algorithms: %s\", ex.getMessage()));\n        }\n        return canCrypt;\n    }", "url": "https://raw.githubusercontent.com/sadv1r/ansible-vault-editor-idea-plugin/master/src/main/java/ru/sadv1r/ansible/vault/crypto/decoders/impl/CypherAES256.java", "stars": "7", "class_props": {"extends": null, "implements": ["Cypher"], "modifiers": ["public"]}}, {"id": 62078, "method_name": "calculateHMAC", "class_name": "CypherAES256", "params": ["byte", "byte"], "throws": ["IOException"], "modifiers": ["public"], "return_type": "byte", "snippet": "    public byte[] calculateHMAC(byte[] key, byte[] data) throws IOException {\n        byte[] computedMac;\n\n        try {\n            SecretKeySpec hmacKey = new SecretKeySpec(key, KEYGEN_ALGO);\n            Mac mac = Mac.getInstance(KEYGEN_ALGO);\n            mac.init(hmacKey);\n            computedMac = mac.doFinal(data);\n        } catch (Exception ex) {\n            throw new IOException(\"Error decrypting HMAC hash: \" + ex.getMessage());\n        }\n\n        return computedMac;\n    }", "url": "https://raw.githubusercontent.com/sadv1r/ansible-vault-editor-idea-plugin/master/src/main/java/ru/sadv1r/ansible/vault/crypto/decoders/impl/CypherAES256.java", "stars": "7", "class_props": {"extends": null, "implements": ["Cypher"], "modifiers": ["public"]}}, {"id": 62079, "method_name": "verifyHMAC", "class_name": "CypherAES256", "params": ["byte", "byte", "byte"], "throws": ["IOException"], "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean verifyHMAC(byte[] hmac, byte[] key, byte[] data) throws IOException {\n        byte[] calculated = calculateHMAC(key, data);\n        return Arrays.equals(hmac, calculated);\n    }", "url": "https://raw.githubusercontent.com/sadv1r/ansible-vault-editor-idea-plugin/master/src/main/java/ru/sadv1r/ansible/vault/crypto/decoders/impl/CypherAES256.java", "stars": "7", "class_props": {"extends": null, "implements": ["Cypher"], "modifiers": ["public"]}}, {"id": 62080, "method_name": "paddingLength", "class_name": "CypherAES256", "params": ["byte"], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int paddingLength(byte[] decrypted) {\n        if (decrypted.length == 0) {\n            logger.debug(\"Empty decoded text has no padding.\");\n            return 0;\n        }\n\n        logger.debug(\"Padding length: {}\", decrypted[decrypted.length - 1]);\n        return decrypted[decrypted.length - 1];\n    }", "url": "https://raw.githubusercontent.com/sadv1r/ansible-vault-editor-idea-plugin/master/src/main/java/ru/sadv1r/ansible/vault/crypto/decoders/impl/CypherAES256.java", "stars": "7", "class_props": {"extends": null, "implements": ["Cypher"], "modifiers": ["public"]}}, {"id": 62081, "method_name": "unpad", "class_name": "CypherAES256", "params": ["byte"], "throws": null, "modifiers": ["public"], "return_type": "byte", "snippet": "    public byte[] unpad(byte[] decrypted) {\n        int length = decrypted.length - paddingLength(decrypted);\n        return Arrays.copyOfRange(decrypted, 0, length);\n    }", "url": "https://raw.githubusercontent.com/sadv1r/ansible-vault-editor-idea-plugin/master/src/main/java/ru/sadv1r/ansible/vault/crypto/decoders/impl/CypherAES256.java", "stars": "7", "class_props": {"extends": null, "implements": ["Cypher"], "modifiers": ["public"]}}, {"id": 62082, "method_name": "pad", "class_name": "CypherAES256", "params": ["byte"], "throws": ["IOException"], "modifiers": ["public"], "return_type": "byte", "snippet": "    public byte[] pad(byte[] cleartext) throws IOException {\n        byte[] padded;\n\n        try {\n            int blockSize = Cipher.getInstance(CYPHER_ALGO).getBlockSize();\n            logger.debug(\"Padding to block size: {}\", blockSize);\n            int padding_length = (blockSize - (cleartext.length % blockSize));\n            if (padding_length == 0) {\n                padding_length = blockSize;\n            }\n            padded = Arrays.copyOf(cleartext, cleartext.length + padding_length);\n            padded[padded.length - 1] = (byte) padding_length;\n\n        } catch (Exception ex) {\n            throw new IOException(\"Error calculating padding for \" + CYPHER_ALGO + \": \" + ex.getMessage());\n        }\n\n        return padded;\n    }", "url": "https://raw.githubusercontent.com/sadv1r/ansible-vault-editor-idea-plugin/master/src/main/java/ru/sadv1r/ansible/vault/crypto/decoders/impl/CypherAES256.java", "stars": "7", "class_props": {"extends": null, "implements": ["Cypher"], "modifiers": ["public"]}}, {"id": 62083, "method_name": "decryptAES", "class_name": "CypherAES256", "params": ["byte", "byte", "byte"], "throws": ["IOException"], "modifiers": ["public"], "return_type": "byte", "snippet": "    public byte[] decryptAES(byte[] cypher, byte[] key, byte[] iv) throws IOException {\n\n        SecretKeySpec keySpec = new SecretKeySpec(key, CYPHER_KEY_ALGO);\n        IvParameterSpec ivSpec = new IvParameterSpec(iv);\n        try {\n            Cipher cipher = Cipher.getInstance(CYPHER_ALGO);\n            cipher.init(Cipher.DECRYPT_MODE, keySpec, ivSpec);\n            byte[] decrypted = cipher.doFinal(cypher);\n            return unpad(decrypted);\n        } catch (Exception ex) {\n            throw new IOException(\"Failed to decrypt data: \" + ex.getMessage());\n        }\n    }", "url": "https://raw.githubusercontent.com/sadv1r/ansible-vault-editor-idea-plugin/master/src/main/java/ru/sadv1r/ansible/vault/crypto/decoders/impl/CypherAES256.java", "stars": "7", "class_props": {"extends": null, "implements": ["Cypher"], "modifiers": ["public"]}}, {"id": 62084, "method_name": "encryptAES", "class_name": "CypherAES256", "params": ["byte", "byte", "byte"], "throws": ["IOException"], "modifiers": ["public"], "return_type": "byte", "snippet": "    public byte[] encryptAES(byte[] cleartext, byte[] key, byte[] iv) throws IOException {\n        SecretKeySpec keySpec = new SecretKeySpec(key, CYPHER_KEY_ALGO);\n        IvParameterSpec ivSpec = new IvParameterSpec(iv);\n        try {\n            Cipher cipher = Cipher.getInstance(CYPHER_ALGO);\n            cipher.init(Cipher.ENCRYPT_MODE, keySpec, ivSpec);\n            return cipher.doFinal(cleartext);\n        } catch (Exception ex) {\n            throw new IOException(\"Failed to encrypt data: \" + ex.getMessage());\n        }\n    }", "url": "https://raw.githubusercontent.com/sadv1r/ansible-vault-editor-idea-plugin/master/src/main/java/ru/sadv1r/ansible/vault/crypto/decoders/impl/CypherAES256.java", "stars": "7", "class_props": {"extends": null, "implements": ["Cypher"], "modifiers": ["public"]}}, {"id": 62085, "method_name": "decrypt", "class_name": "CypherAES256", "params": ["byte", "String"], "throws": ["IOException"], "modifiers": ["public"], "return_type": "byte", "snippet": "    public byte[] decrypt(byte[] data, String password) throws IOException {\n        byte[] decrypted;\n\n        if (!hasValidAESProvider()) {\n            throw new IOException(\"Missing valid AES256 provider - install unrestricted policy profiles.\");\n        }\n\n        VaultContent vaultContent = new VaultContent(data);\n\n        byte[] salt = vaultContent.getSalt();\n        byte[] hmac = vaultContent.getHmac();\n        byte[] cypher = vaultContent.getData();\n        logger.debug(\"Salt: {} - {}\", salt.length, Util.hexit(salt, 100));\n        logger.debug(\"HMAC: {} - {}\", hmac.length, Util.hexit(hmac, 100));\n        logger.debug(\"Data: {} - {}\", cypher.length, Util.hexit(cypher, 100));\n\n        EncryptionKeychain keys = new EncryptionKeychain(salt, password, KEYLEN, IVLEN, ITERATIONS, KEYGEN_ALGO);\n        keys.createKeys();\n\n        byte[] cypherKey = keys.getEncryptionKey();\n        logger.debug(\"Key 1: {} - {}\", cypherKey.length, Util.hexit(cypherKey, 100));\n        byte[] hmacKey = keys.getHmacKey();\n        logger.debug(\"Key 2: {} - {}\", hmacKey.length, Util.hexit(hmacKey, 100));\n        byte[] iv = keys.getIv();\n        logger.debug(\"IV: {} - {}\", iv.length, Util.hexit(iv, 100));\n\n        if (verifyHMAC(hmac, hmacKey, cypher)) {\n            logger.debug(\"Signature matches - decrypting\");\n            decrypted = decryptAES(cypher, cypherKey, iv);\n            logger.debug(\"Decoded:\\n{}\", new String(decrypted, CHAR_ENCODING));\n        } else {\n            throw new IOException(\"HMAC Digest doesn't match - possibly it's the wrong password.\");\n        }\n\n        return decrypted;\n    }", "url": "https://raw.githubusercontent.com/sadv1r/ansible-vault-editor-idea-plugin/master/src/main/java/ru/sadv1r/ansible/vault/crypto/decoders/impl/CypherAES256.java", "stars": "7", "class_props": {"extends": null, "implements": ["Cypher"], "modifiers": ["public"]}}, {"id": 62086, "method_name": "infoLine", "class_name": "CypherAES256", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String infoLine() {\n        return VaultInfo.vaultInfoForCypher(CYPHER_ID);\n    }", "url": "https://raw.githubusercontent.com/sadv1r/ansible-vault-editor-idea-plugin/master/src/main/java/ru/sadv1r/ansible/vault/crypto/decoders/impl/CypherAES256.java", "stars": "7", "class_props": {"extends": null, "implements": ["Cypher"], "modifiers": ["public"]}}, {"id": 62087, "method_name": "encrypt", "class_name": "CypherAES256", "params": ["byte", "String"], "throws": ["IOException"], "modifiers": ["public"], "return_type": "byte", "snippet": "    public byte[] encrypt(byte[] data, String password) throws IOException {\n        EncryptionKeychain keys = new EncryptionKeychain(SALT_LENGTH, password, KEYLEN, IVLEN, ITERATIONS, KEYGEN_ALGO);\n        keys.createKeys();\n        byte[] cypherKey = keys.getEncryptionKey();\n        logger.debug(\"Key 1: {} - {}\", cypherKey.length, Util.hexit(cypherKey, 100));\n        byte[] hmacKey = keys.getHmacKey();\n        logger.debug(\"Key 2: {} - {}\", hmacKey.length, Util.hexit(hmacKey, 100));\n        byte[] iv = keys.getIv();\n        logger.debug(\"IV: {} - {}\", iv.length, Util.hexit(iv, 100));\n        logger.debug(\"Original data length: {}\", data.length);\n        data = pad(data);\n        logger.debug(\"Padded data length: {}\", data.length);\n        byte[] encrypted = encryptAES(data, keys.getEncryptionKey(), keys.getIv());\n        byte[] hmacHash = calculateHMAC(keys.getHmacKey(), encrypted);\n        VaultContent vaultContent = new VaultContent(keys.getSalt(), hmacHash, encrypted);\n        return vaultContent.toByteArray();\n    }", "url": "https://raw.githubusercontent.com/sadv1r/ansible-vault-editor-idea-plugin/master/src/main/java/ru/sadv1r/ansible/vault/crypto/decoders/impl/CypherAES256.java", "stars": "7", "class_props": {"extends": null, "implements": ["Cypher"], "modifiers": ["public"]}}, {"id": 62088, "method_name": "supportLayoutChange", "class_name": "GraceViewPagerSupport", "params": ["ViewPager"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void supportLayoutChange(@NonNull ViewPager viewPager) {\n        viewPager.addOnLayoutChangeListener(new ViewPagerLayoutChangeListener());\n    }", "url": "https://raw.githubusercontent.com/wurensen/GraceViewPager/master/graceviewpager/src/main/java/com/lancewu/graceviewpager/GraceViewPagerSupport.java", "stars": "331", "class_props": {"extends": null, "implements": null, "modifiers": ["final", "public"]}}, {"id": 62089, "method_name": "supportMultiPage", "class_name": "GraceViewPagerSupport", "params": ["ViewPager", "GraceMultiPagePlugin"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void supportMultiPage(@NonNull ViewPager viewPager, final GraceMultiPagePlugin multiPagePlugin) {\n        viewPager.addOnLayoutChangeListener(new View.OnLayoutChangeListener() {\n\n            private SizeChangeHandler mSizeChangeHandler = new SizeChangeHandler();\n\n            @Override\n            public void onLayoutChange(final View v, int left, int top, int right, int bottom, int oldLeft, int oldTop, int oldRight, int oldBottom) {\n                final int width = right - left;\n                final int height = bottom - top;\n                // \u5f53\u524d\u6b63\u5728layout\uff0c\u9700\u8981\u4e0b\u4e00\u5e27\u91cd\u65b0\u6d4b\u91cf\u5e03\u5c40\u751f\u6548\n                v.post(new Runnable() {\n                    @Override\n                    public void run() {\n                        multiPagePlugin.determinePageSize(width, height);\n                        mSizeChangeHandler.onSizeChange((ViewPager) v, width);\n                    }\n                });\n            }\n        });\n    }", "url": "https://raw.githubusercontent.com/wurensen/GraceViewPager/master/graceviewpager/src/main/java/com/lancewu/graceviewpager/GraceViewPagerSupport.java", "stars": "331", "class_props": {"extends": null, "implements": null, "modifiers": ["final", "public"]}}, {"id": 62090, "method_name": "setPageMargin", "class_name": "GraceViewPagerSupport", "params": ["ViewPager", "int"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void setPageMargin(@NonNull ViewPager viewPager, int pageMargin) {\n        int oldPageMargin = viewPager.getPageMargin();\n        if (pageMargin == oldPageMargin) {\n            return;\n        }\n        int childWidth = viewPager.getMeasuredWidth() - viewPager.getPaddingLeft() - viewPager.getPaddingRight();\n        if (childWidth == 0) {\n            viewPager.setPageMargin(pageMargin);\n        } else {\n            // setPageMargin()\u8c03\u7528\u540e\u5f53\u524ditem\u7684offset\u503c\u548cchildWidth\u4e0d\u53d8\uff0c\u6240\u4ee5\u76f4\u63a5\u53d6\u51fa\u8c03\u7528\u524d\u7684scrollX\u503c\u8fdb\u884c\u5b9a\u4f4d\u5373\u53ef\n            int oldScrollX = viewPager.getScrollX();\n            viewPager.setPageMargin(pageMargin);\n            viewPager.scrollTo(oldScrollX, viewPager.getScrollY());\n        }\n    }", "url": "https://raw.githubusercontent.com/wurensen/GraceViewPager/master/graceviewpager/src/main/java/com/lancewu/graceviewpager/GraceViewPagerSupport.java", "stars": "331", "class_props": {"extends": null, "implements": null, "modifiers": ["final", "public"]}}, {"id": 62091, "method_name": "onLayoutChange", "class_name": "ViewPagerLayoutChangeListener", "params": ["View", "int", "int", "int", "int", "int", "int", "int", "int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "        public void onLayoutChange(View v, int left, int top, int right, int bottom, int oldLeft,\n                                   int oldTop, int oldRight, int oldBottom) {\n            mSizeChangeHandler.onSizeChange((ViewPager) v, right - left);\n        }", "url": "https://raw.githubusercontent.com/wurensen/GraceViewPager/master/graceviewpager/src/main/java/com/lancewu/graceviewpager/GraceViewPagerSupport.java", "stars": "331", "class_props": {"extends": null, "implements": ["View"], "modifiers": ["final", "static", "private"]}}, {"id": 62092, "method_name": "onSizeChange", "class_name": "SizeChangeHandler", "params": ["ViewPager", "int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "        public void onSizeChange(ViewPager viewPager, int width) {\n            int childWidth = width - viewPager.getPaddingLeft() - viewPager.getPaddingRight();\n            if (childWidth == 0) {\n                return;\n            }\n            if (mLastChildWidth == 0) {\n                mLastChildWidth = childWidth;\n                return;\n            }\n            if (mLastChildWidth == childWidth) {\n                return;\n            }\n            /*\n             * \u95ee\u9898\uff1apage\u5bbd\u5ea6\u53d8\u5316\u540e\uff0clayout\u4f1a\u6b63\u786e\u653e\u7f6echild\u4f4d\u7f6e\uff0c\u4f46\u662fscrollX\u503c\u4ecd\u7136\u662f\u65e7\u503c\uff0c\u5bfc\u81f4\u7ed8\u5236\u4f4d\u7f6e\u504f\u5dee\uff1b\n             * \u540c\u65f6\uff0c\u7ecf\u8fc7\u6570\u636e\u5237\u65b0\u540escrollX=0\u4e0d\u4ee3\u8868\u5b9a\u4f4d\u5230\u7b2c\u4e00\u4e2a\u9875\u9762\uff0c\u53d6\u51b3\u4e8e\u6700\u5de6\u8fb9child\u7684\u4f4d\u7f6e\uff0c\u6240\u4ee5\u8be5\u503c\u6709\u53ef\u80fd\u662f\u8d1f\u503c\uff1b\n             * \u89e3\u51b3\u65b9\u6848\uff1a\u6839\u636e\u65e7\u503c\u83b7\u53d6\u9875\u9762\u504f\u79fb\uff0c\u6839\u636e\u9875\u9762\u504f\u79fb\u8ba1\u7b97\u65b0\u7684scrollX\u4f4d\u7f6e\n             */\n            recomputeScrollPosition(viewPager, viewPager.getScrollX(), childWidth, mLastChildWidth);\n            mLastChildWidth = childWidth;\n        }", "url": "https://raw.githubusercontent.com/wurensen/GraceViewPager/master/graceviewpager/src/main/java/com/lancewu/graceviewpager/GraceViewPagerSupport.java", "stars": "331", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "static"]}}, {"id": 62093, "method_name": "recomputeScrollPosition", "class_name": "SizeChangeHandler", "params": ["ViewPager", "int", "int", "int"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "        private void recomputeScrollPosition(ViewPager viewPager, int scrollX,\n                                             int childWidth, int oldChildWidth) {\n            float pageOffset = (float) scrollX / oldChildWidth;\n            int newOffsetPixels = (int) (pageOffset * childWidth);\n            viewPager.scrollTo(newOffsetPixels, viewPager.getScrollY());\n        }", "url": "https://raw.githubusercontent.com/wurensen/GraceViewPager/master/graceviewpager/src/main/java/com/lancewu/graceviewpager/GraceViewPagerSupport.java", "stars": "331", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "static"]}}, {"id": 62094, "method_name": "setService", "class_name": "WebAppSession", "params": ["DeviceService"], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void setService(DeviceService service) {\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/service/sessions/WebAppSession.java", "stars": "4", "class_props": {"extends": null, "implements": ["MediaControl", "MediaPlayer", "PlaylistControl"], "modifiers": ["public"]}}, {"id": 62095, "method_name": "subscribeWebAppStatus", "class_name": "WebAppSession", "params": ["MessageListener"], "throws": null, "modifiers": ["public"], "return_type": "ServiceSubscription<MessageListener>", "snippet": "    public ServiceSubscription<MessageListener> subscribeWebAppStatus(\n            MessageListener listener) {\n        if (listener != null)\n            listener.onError(ServiceCommandError.notSupported());\n\n        return null;\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/service/sessions/WebAppSession.java", "stars": "4", "class_props": {"extends": null, "implements": ["MediaControl", "MediaPlayer", "PlaylistControl"], "modifiers": ["public"]}}, {"id": 62096, "method_name": "connect", "class_name": "WebAppSession", "params": ["ResponseListener<Object>"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void connect(ResponseListener<Object> connectionListener) {\n        Util.postError(connectionListener, ServiceCommandError.notSupported());\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/service/sessions/WebAppSession.java", "stars": "4", "class_props": {"extends": null, "implements": ["MediaControl", "MediaPlayer", "PlaylistControl"], "modifiers": ["public"]}}, {"id": 62097, "method_name": "join", "class_name": "WebAppSession", "params": ["ResponseListener<Object>"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void join(ResponseListener<Object> connectionListener) {\n        Util.postError(connectionListener, ServiceCommandError.notSupported());\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/service/sessions/WebAppSession.java", "stars": "4", "class_props": {"extends": null, "implements": ["MediaControl", "MediaPlayer", "PlaylistControl"], "modifiers": ["public"]}}, {"id": 62098, "method_name": "disconnectFromWebApp", "class_name": "WebAppSession", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void disconnectFromWebApp() {\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/service/sessions/WebAppSession.java", "stars": "4", "class_props": {"extends": null, "implements": ["MediaControl", "MediaPlayer", "PlaylistControl"], "modifiers": ["public"]}}, {"id": 62099, "method_name": "pinWebApp", "class_name": "WebAppSession", "params": ["String", "ResponseListener<Object>"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void pinWebApp(String webAppId, ResponseListener<Object> listener) {\n        Util.postError(listener, ServiceCommandError.notSupported());\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/service/sessions/WebAppSession.java", "stars": "4", "class_props": {"extends": null, "implements": ["MediaControl", "MediaPlayer", "PlaylistControl"], "modifiers": ["public"]}}, {"id": 62100, "method_name": "unPinWebApp", "class_name": "WebAppSession", "params": ["String", "ResponseListener<Object>"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void unPinWebApp(String webAppId, ResponseListener<Object> listener) {\n        Util.postError(listener, ServiceCommandError.notSupported());\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/service/sessions/WebAppSession.java", "stars": "4", "class_props": {"extends": null, "implements": ["MediaControl", "MediaPlayer", "PlaylistControl"], "modifiers": ["public"]}}, {"id": 62101, "method_name": "isWebAppPinned", "class_name": "WebAppSession", "params": ["String", "WebAppPinStatusListener"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void isWebAppPinned(String webAppId, WebAppPinStatusListener listener) {\n        Util.postError(listener, ServiceCommandError.notSupported());\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/service/sessions/WebAppSession.java", "stars": "4", "class_props": {"extends": null, "implements": ["MediaControl", "MediaPlayer", "PlaylistControl"], "modifiers": ["public"]}}, {"id": 62102, "method_name": "subscribeIsWebAppPinned", "class_name": "WebAppSession", "params": ["String", "WebAppPinStatusListener"], "throws": null, "modifiers": ["public"], "return_type": "ServiceSubscription<WebAppPinStatusListener>", "snippet": "    public ServiceSubscription<WebAppPinStatusListener> subscribeIsWebAppPinned(String webAppId, WebAppPinStatusListener listener) {\n        Util.postError(listener, ServiceCommandError.notSupported());\n        return null;\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/service/sessions/WebAppSession.java", "stars": "4", "class_props": {"extends": null, "implements": ["MediaControl", "MediaPlayer", "PlaylistControl"], "modifiers": ["public"]}}, {"id": 62103, "method_name": "close", "class_name": "WebAppSession", "params": ["ResponseListener<Object>"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void close(ResponseListener<Object> listener) {\n        if (listener != null)\n            listener.onError(ServiceCommandError.notSupported());\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/service/sessions/WebAppSession.java", "stars": "4", "class_props": {"extends": null, "implements": ["MediaControl", "MediaPlayer", "PlaylistControl"], "modifiers": ["public"]}}, {"id": 62104, "method_name": "sendMessage", "class_name": "WebAppSession", "params": ["String", "ResponseListener<Object>"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void sendMessage(String message, ResponseListener<Object> listener) {\n        if (listener != null)\n            listener.onError(ServiceCommandError.notSupported());\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/service/sessions/WebAppSession.java", "stars": "4", "class_props": {"extends": null, "implements": ["MediaControl", "MediaPlayer", "PlaylistControl"], "modifiers": ["public"]}}, {"id": 62105, "method_name": "sendMessage", "class_name": "WebAppSession", "params": ["JSONObject", "ResponseListener<Object>"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void sendMessage(JSONObject message,\n            ResponseListener<Object> listener) {\n        if (listener != null) {\n            listener.onError(ServiceCommandError.notSupported());\n        }\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/service/sessions/WebAppSession.java", "stars": "4", "class_props": {"extends": null, "implements": ["MediaControl", "MediaPlayer", "PlaylistControl"], "modifiers": ["public"]}}, {"id": 62106, "method_name": "getMediaControl", "class_name": "WebAppSession", "params": [], "throws": null, "modifiers": ["public"], "return_type": "MediaControl", "snippet": "    public MediaControl getMediaControl() {\n        return null;\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/service/sessions/WebAppSession.java", "stars": "4", "class_props": {"extends": null, "implements": ["MediaControl", "MediaPlayer", "PlaylistControl"], "modifiers": ["public"]}}, {"id": 62107, "method_name": "getMediaControlCapabilityLevel", "class_name": "WebAppSession", "params": [], "throws": null, "modifiers": ["public"], "return_type": "CapabilityPriorityLevel", "snippet": "    public CapabilityPriorityLevel getMediaControlCapabilityLevel() {\n        return CapabilityPriorityLevel.VERY_LOW;\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/service/sessions/WebAppSession.java", "stars": "4", "class_props": {"extends": null, "implements": ["MediaControl", "MediaPlayer", "PlaylistControl"], "modifiers": ["public"]}}, {"id": 62108, "method_name": "getMediaInfo", "class_name": "WebAppSession", "params": ["MediaInfoListener"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void getMediaInfo(MediaInfoListener listener) {\n        Util.postError(listener, ServiceCommandError.notSupported());\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/service/sessions/WebAppSession.java", "stars": "4", "class_props": {"extends": null, "implements": ["MediaControl", "MediaPlayer", "PlaylistControl"], "modifiers": ["public"]}}, {"id": 62109, "method_name": "subscribeMediaInfo", "class_name": "WebAppSession", "params": ["MediaInfoListener"], "throws": null, "modifiers": ["public"], "return_type": "ServiceSubscription<MediaInfoListener>", "snippet": "    public ServiceSubscription<MediaInfoListener> subscribeMediaInfo(\n            MediaInfoListener listener) {\n        listener.onError(ServiceCommandError.notSupported());\n        return null;\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/service/sessions/WebAppSession.java", "stars": "4", "class_props": {"extends": null, "implements": ["MediaControl", "MediaPlayer", "PlaylistControl"], "modifiers": ["public"]}}, {"id": 62110, "method_name": "play", "class_name": "WebAppSession", "params": ["ResponseListener<Object>"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void play(ResponseListener<Object> listener) {\n        MediaControl mediaControl = null;\n\n        if (service != null)\n            mediaControl = service.getAPI(MediaControl.class);\n\n        if (mediaControl != null)\n            mediaControl.play(listener);\n        else if (listener != null)\n            listener.onError(ServiceCommandError.notSupported());\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/service/sessions/WebAppSession.java", "stars": "4", "class_props": {"extends": null, "implements": ["MediaControl", "MediaPlayer", "PlaylistControl"], "modifiers": ["public"]}}, {"id": 62111, "method_name": "pause", "class_name": "WebAppSession", "params": ["ResponseListener<Object>"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void pause(ResponseListener<Object> listener) {\n        MediaControl mediaControl = null;\n\n        if (service != null)\n            mediaControl = service.getAPI(MediaControl.class);\n\n        if (mediaControl != null)\n            mediaControl.pause(listener);\n        else if (listener != null)\n            listener.onError(ServiceCommandError.notSupported());\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/service/sessions/WebAppSession.java", "stars": "4", "class_props": {"extends": null, "implements": ["MediaControl", "MediaPlayer", "PlaylistControl"], "modifiers": ["public"]}}, {"id": 62112, "method_name": "stop", "class_name": "WebAppSession", "params": ["ResponseListener<Object>"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void stop(ResponseListener<Object> listener) {\n        MediaControl mediaControl = null;\n\n        if (service != null)\n            mediaControl = service.getAPI(MediaControl.class);\n\n        if (mediaControl != null)\n            mediaControl.stop(listener);\n        else if (listener != null)\n            listener.onError(ServiceCommandError.notSupported());\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/service/sessions/WebAppSession.java", "stars": "4", "class_props": {"extends": null, "implements": ["MediaControl", "MediaPlayer", "PlaylistControl"], "modifiers": ["public"]}}, {"id": 62113, "method_name": "rewind", "class_name": "WebAppSession", "params": ["ResponseListener<Object>"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void rewind(ResponseListener<Object> listener) {\n        MediaControl mediaControl = null;\n\n        if (service != null)\n            mediaControl = service.getAPI(MediaControl.class);\n\n        if (mediaControl != null)\n            mediaControl.rewind(listener);\n        else if (listener != null)\n            listener.onError(ServiceCommandError.notSupported());\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/service/sessions/WebAppSession.java", "stars": "4", "class_props": {"extends": null, "implements": ["MediaControl", "MediaPlayer", "PlaylistControl"], "modifiers": ["public"]}}, {"id": 62114, "method_name": "fastForward", "class_name": "WebAppSession", "params": ["ResponseListener<Object>"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void fastForward(ResponseListener<Object> listener) {\n        MediaControl mediaControl = null;\n\n        if (service != null)\n            mediaControl = service.getAPI(MediaControl.class);\n\n        if (mediaControl != null)\n            mediaControl.fastForward(listener);\n        else if (listener != null)\n            listener.onError(ServiceCommandError.notSupported());\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/service/sessions/WebAppSession.java", "stars": "4", "class_props": {"extends": null, "implements": ["MediaControl", "MediaPlayer", "PlaylistControl"], "modifiers": ["public"]}}, {"id": 62115, "method_name": "previous", "class_name": "WebAppSession", "params": ["ResponseListener<Object>"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void previous(ResponseListener<Object> listener) {\n        MediaControl mediaControl = null;\n\n        if (service != null)\n            mediaControl = service.getAPI(MediaControl.class);\n\n        if (mediaControl != null)\n            mediaControl.previous(listener);\n        else if (listener != null)\n            listener.onError(ServiceCommandError.notSupported());\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/service/sessions/WebAppSession.java", "stars": "4", "class_props": {"extends": null, "implements": ["MediaControl", "MediaPlayer", "PlaylistControl"], "modifiers": ["public"]}}, {"id": 62116, "method_name": "next", "class_name": "WebAppSession", "params": ["ResponseListener<Object>"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void next(ResponseListener<Object> listener) {\n        MediaControl mediaControl = null;\n\n        if (service != null)\n            mediaControl = service.getAPI(MediaControl.class);\n\n        if (mediaControl != null)\n            mediaControl.next(listener);\n        else if (listener != null)\n            listener.onError(ServiceCommandError.notSupported());\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/service/sessions/WebAppSession.java", "stars": "4", "class_props": {"extends": null, "implements": ["MediaControl", "MediaPlayer", "PlaylistControl"], "modifiers": ["public"]}}, {"id": 62117, "method_name": "seek", "class_name": "WebAppSession", "params": ["long", "ResponseListener<Object>"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void seek(long position, ResponseListener<Object> listener) {\n        MediaControl mediaControl = null;\n\n        if (service != null)\n            mediaControl = service.getAPI(MediaControl.class);\n\n        if (mediaControl != null)\n            mediaControl.seek(position, listener);\n        else if (listener != null)\n            listener.onError(ServiceCommandError.notSupported());\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/service/sessions/WebAppSession.java", "stars": "4", "class_props": {"extends": null, "implements": ["MediaControl", "MediaPlayer", "PlaylistControl"], "modifiers": ["public"]}}, {"id": 62118, "method_name": "getDuration", "class_name": "WebAppSession", "params": ["DurationListener"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void getDuration(DurationListener listener) {\n        MediaControl mediaControl = null;\n\n        if (service != null)\n            mediaControl = service.getAPI(MediaControl.class);\n\n        if (mediaControl != null)\n            mediaControl.getDuration(listener);\n        else if (listener != null)\n            listener.onError(ServiceCommandError.notSupported());\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/service/sessions/WebAppSession.java", "stars": "4", "class_props": {"extends": null, "implements": ["MediaControl", "MediaPlayer", "PlaylistControl"], "modifiers": ["public"]}}, {"id": 62119, "method_name": "getPosition", "class_name": "WebAppSession", "params": ["PositionListener"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void getPosition(PositionListener listener) {\n        MediaControl mediaControl = null;\n\n        if (service != null)\n            mediaControl = service.getAPI(MediaControl.class);\n\n        if (mediaControl != null)\n            mediaControl.getPosition(listener);\n        else if (listener != null)\n            listener.onError(ServiceCommandError.notSupported());\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/service/sessions/WebAppSession.java", "stars": "4", "class_props": {"extends": null, "implements": ["MediaControl", "MediaPlayer", "PlaylistControl"], "modifiers": ["public"]}}, {"id": 62120, "method_name": "getPlayState", "class_name": "WebAppSession", "params": ["PlayStateListener"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void getPlayState(PlayStateListener listener) {\n        MediaControl mediaControl = null;\n\n        if (service != null)\n            mediaControl = service.getAPI(MediaControl.class);\n\n        if (mediaControl != null)\n            mediaControl.getPlayState(listener);\n        else if (listener != null)\n            listener.onError(ServiceCommandError.notSupported());\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/service/sessions/WebAppSession.java", "stars": "4", "class_props": {"extends": null, "implements": ["MediaControl", "MediaPlayer", "PlaylistControl"], "modifiers": ["public"]}}, {"id": 62121, "method_name": "subscribePlayState", "class_name": "WebAppSession", "params": ["PlayStateListener"], "throws": null, "modifiers": ["public"], "return_type": "ServiceSubscription<PlayStateListener>", "snippet": "    public ServiceSubscription<PlayStateListener> subscribePlayState(\n            PlayStateListener listener) {\n        MediaControl mediaControl = null;\n\n        if (service != null)\n            mediaControl = service.getAPI(MediaControl.class);\n\n        if (mediaControl != null)\n            return mediaControl.subscribePlayState(listener);\n        else if (listener != null)\n            listener.onError(ServiceCommandError.notSupported());\n\n        return null;\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/service/sessions/WebAppSession.java", "stars": "4", "class_props": {"extends": null, "implements": ["MediaControl", "MediaPlayer", "PlaylistControl"], "modifiers": ["public"]}}, {"id": 62122, "method_name": "closeMedia", "class_name": "WebAppSession", "params": ["LaunchSession", "ResponseListener<Object>"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void closeMedia(LaunchSession launchSession,\n            ResponseListener<Object> listener) {\n        Util.postError(listener, ServiceCommandError.notSupported());\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/service/sessions/WebAppSession.java", "stars": "4", "class_props": {"extends": null, "implements": ["MediaControl", "MediaPlayer", "PlaylistControl"], "modifiers": ["public"]}}, {"id": 62123, "method_name": "displayImage", "class_name": "WebAppSession", "params": ["String", "String", "String", "String", "String", "MediaPlayer"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void displayImage(String url, String mimeType, String title,\n            String description, String iconSrc,\n            MediaPlayer.LaunchListener listener) {\n        Util.postError(listener, ServiceCommandError.notSupported());\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/service/sessions/WebAppSession.java", "stars": "4", "class_props": {"extends": null, "implements": ["MediaControl", "MediaPlayer", "PlaylistControl"], "modifiers": ["public"]}}, {"id": 62124, "method_name": "displayImage", "class_name": "WebAppSession", "params": ["MediaInfo", "MediaPlayer"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void displayImage(MediaInfo mediaInfo, MediaPlayer.LaunchListener listener) {\n        Util.postError(listener, ServiceCommandError.notSupported());\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/service/sessions/WebAppSession.java", "stars": "4", "class_props": {"extends": null, "implements": ["MediaControl", "MediaPlayer", "PlaylistControl"], "modifiers": ["public"]}}, {"id": 62125, "method_name": "playMedia", "class_name": "WebAppSession", "params": ["String", "String", "String", "String", "String", "boolean", "MediaPlayer"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void playMedia(String url, String mimeType, String title, String description, String iconSrc, boolean shouldLoop, MediaPlayer.LaunchListener listener) {\n        Util.postError(listener, ServiceCommandError.notSupported());\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/service/sessions/WebAppSession.java", "stars": "4", "class_props": {"extends": null, "implements": ["MediaControl", "MediaPlayer", "PlaylistControl"], "modifiers": ["public"]}}, {"id": 62126, "method_name": "playMedia", "class_name": "WebAppSession", "params": ["MediaInfo", "boolean", "MediaPlayer"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void playMedia(MediaInfo mediaInfo, boolean shouldLoop,\n            MediaPlayer.LaunchListener listener) {\n        Util.postError(listener, ServiceCommandError.notSupported());\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/service/sessions/WebAppSession.java", "stars": "4", "class_props": {"extends": null, "implements": ["MediaControl", "MediaPlayer", "PlaylistControl"], "modifiers": ["public"]}}, {"id": 62127, "method_name": "getMediaPlayer", "class_name": "WebAppSession", "params": [], "throws": null, "modifiers": ["public"], "return_type": "MediaPlayer", "snippet": "    public MediaPlayer getMediaPlayer() {\n        return null;\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/service/sessions/WebAppSession.java", "stars": "4", "class_props": {"extends": null, "implements": ["MediaControl", "MediaPlayer", "PlaylistControl"], "modifiers": ["public"]}}, {"id": 62128, "method_name": "getMediaPlayerCapabilityLevel", "class_name": "WebAppSession", "params": [], "throws": null, "modifiers": ["public"], "return_type": "CapabilityPriorityLevel", "snippet": "    public CapabilityPriorityLevel getMediaPlayerCapabilityLevel() {\n        return CapabilityPriorityLevel.VERY_LOW;\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/service/sessions/WebAppSession.java", "stars": "4", "class_props": {"extends": null, "implements": ["MediaControl", "MediaPlayer", "PlaylistControl"], "modifiers": ["public"]}}, {"id": 62129, "method_name": "getPlaylistControl", "class_name": "WebAppSession", "params": [], "throws": null, "modifiers": ["public"], "return_type": "PlaylistControl", "snippet": "    public PlaylistControl getPlaylistControl() {\n        return null;\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/service/sessions/WebAppSession.java", "stars": "4", "class_props": {"extends": null, "implements": ["MediaControl", "MediaPlayer", "PlaylistControl"], "modifiers": ["public"]}}, {"id": 62130, "method_name": "getPlaylistControlCapabilityLevel", "class_name": "WebAppSession", "params": [], "throws": null, "modifiers": ["public"], "return_type": "CapabilityPriorityLevel", "snippet": "    public CapabilityPriorityLevel getPlaylistControlCapabilityLevel() {\n        return CapabilityPriorityLevel.VERY_LOW;\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/service/sessions/WebAppSession.java", "stars": "4", "class_props": {"extends": null, "implements": ["MediaControl", "MediaPlayer", "PlaylistControl"], "modifiers": ["public"]}}, {"id": 62131, "method_name": "jumpToTrack", "class_name": "WebAppSession", "params": ["long", "ResponseListener<Object>"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void jumpToTrack(long index, ResponseListener<Object> listener) {\n        Util.postError(listener, ServiceCommandError.notSupported());\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/service/sessions/WebAppSession.java", "stars": "4", "class_props": {"extends": null, "implements": ["MediaControl", "MediaPlayer", "PlaylistControl"], "modifiers": ["public"]}}, {"id": 62132, "method_name": "setPlayMode", "class_name": "WebAppSession", "params": ["PlayMode", "ResponseListener<Object>"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setPlayMode(PlayMode playMode, ResponseListener<Object> listener) {\n        Util.postError(listener, ServiceCommandError.notSupported());\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/service/sessions/WebAppSession.java", "stars": "4", "class_props": {"extends": null, "implements": ["MediaControl", "MediaPlayer", "PlaylistControl"], "modifiers": ["public"]}}, {"id": 62133, "method_name": "getWebAppSessionListener", "class_name": "WebAppSession", "params": [], "throws": null, "modifiers": ["public"], "return_type": "WebAppSessionListener", "snippet": "    public WebAppSessionListener getWebAppSessionListener() {\n        return webAppListener;\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/service/sessions/WebAppSession.java", "stars": "4", "class_props": {"extends": null, "implements": ["MediaControl", "MediaPlayer", "PlaylistControl"], "modifiers": ["public"]}}, {"id": 62134, "method_name": "setWebAppSessionListener", "class_name": "WebAppSession", "params": ["WebAppSessionListener"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setWebAppSessionListener(WebAppSessionListener listener) {\n        webAppListener = listener;\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/service/sessions/WebAppSession.java", "stars": "4", "class_props": {"extends": null, "implements": ["MediaControl", "MediaPlayer", "PlaylistControl"], "modifiers": ["public"]}}, {"id": 62135, "method_name": "onCreateView", "class_name": "FragmentEditProfile", "params": ["LayoutInflater", "ViewGroup", "Bundle"], "throws": null, "modifiers": ["public"], "return_type": "View", "snippet": "    public View onCreateView(LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstanceState) {\n        super.onCreateView(inflater, container, savedInstanceState);\n\n        setRetainInstance(true);\n        View rootView = inflater.inflate(R.layout.fragment_edit_profile, container, false);\n\n        ButterKnife.bind(this,rootView);\n\n\n        Toolbar toolbar = rootView.findViewById(R.id.toolbar);\n        ((AppCompatActivity)getActivity()).setSupportActionBar(toolbar);\n        ((AppCompatActivity)getActivity()).getSupportActionBar().setDisplayHomeAsUpEnabled(true);\n\n\n\n        if(savedInstanceState==null)\n        {\n\n            current_mode = getActivity().getIntent().getIntExtra(EDIT_MODE_INTENT_KEY,MODE_ADD);\n\n            if(current_mode == MODE_UPDATE)\n            {\n\n                if(PrefGeneral.getMultiMarketMode(getActivity()))\n                {\n                    user = PrefLoginGlobal.getUser(getContext());\n                }\n                else\n                {\n                    user = PrefLogin.getUser(getContext());\n                }\n\n\n                if(user !=null) {\n                    bindUserData();\n                }\n            }\n            else if(current_mode==MODE_UPDATE_BY_ADMIN)\n            {\n\n                String jsonString = getActivity().getIntent().getStringExtra(\"user_profile\");\n                user = UtilityFunctions.provideGson().fromJson(jsonString,User.class);\n                bindUserData();\n\n                getUserDetails();\n            }\n            else if(current_mode==MODE_UPDATE_BY_SUPER_ADMIN)\n            {\n\n                String jsonString = getActivity().getIntent().getStringExtra(\"user_profile\");\n                user = UtilityFunctions.provideGson().fromJson(jsonString,User.class);\n                bindUserData();\n\n                getUserDetails();\n            }\n        }\n\n\n\n\n        updateFieldVisibility();\n\n\n        if(user !=null) {\n            loadImage(user.getProfileImagePath());\n            System.out.println(\"Loading Image !\");\n        }\n\n\n        setActionBarTitle();\n\n        return rootView;\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/EditDataScreens/EditProfile/FragmentEditProfile.java", "stars": "10", "class_props": {"extends": "Fragment", "implements": null, "modifiers": ["public"]}}, {"id": 62136, "method_name": "getUserDetails", "class_name": "FragmentEditProfile", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void getUserDetails()\n    {\n\n        final ProgressDialog pd = new ProgressDialog(getActivity());\n        pd.setMessage(\"Please with ... Getting user details !\");\n        pd.show();\n\n\n        Call<User> call;\n\n\n        if(current_mode==MODE_UPDATE_BY_SUPER_ADMIN)\n        {\n\n            Retrofit retrofit = new Retrofit.Builder()\n                    .addConverterFactory(GsonConverterFactory.create(gson))\n                    .baseUrl(PrefServiceConfig.getServiceURL_SDS(MyApplication.getAppContext()))\n                    .client(new OkHttpClient().newBuilder().build())\n                    .build();\n\n\n            call = retrofit.create(UserServiceGlobal.class).getUserDetails(\n                    PrefLoginGlobal.getAuthorizationHeaders(getActivity()),\n                    user.getUserID()\n            );\n\n\n        }\n        else\n        {\n\n            call = userService.getUserDetails(\n                    PrefLogin.getAuthorizationHeaders(getActivity()),\n                    user.getUserID()\n            );\n        }\n\n\n\n\n        call.enqueue(new Callback<User>() {\n            @Override\n            public void onResponse(Call<User> call, Response<User> response) {\n\n                if(!isVisible())\n                {\n                    return;\n                }\n\n                pd.dismiss();\n\n\n\n                if(response.code()==200)\n                {\n                    user = response.body();\n\n                    bindUserData();\n                }\n                else\n                {\n                    showToastMessage(\"Failed to get User Details : Code : \" + response.code());\n                }\n\n            }\n\n            @Override\n            public void onFailure(Call<User> call, Throwable t) {\n\n                if(!isVisible())\n                {\n                    return;\n                }\n\n                showToastMessage(\"Failed !\");\n\n            }\n        });\n\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/EditDataScreens/EditProfile/FragmentEditProfile.java", "stars": "10", "class_props": {"extends": "Fragment", "implements": null, "modifiers": ["public"]}}, {"id": 62137, "method_name": "changePasswordClick", "class_name": "FragmentEditProfile", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "    void changePasswordClick()\n    {\n        if(getActivity() instanceof NotifyChangePassword)\n        {\n            ((NotifyChangePassword)getActivity()).changePasswordClick();\n        }\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/EditDataScreens/EditProfile/FragmentEditProfile.java", "stars": "10", "class_props": {"extends": "Fragment", "implements": null, "modifiers": ["public"]}}, {"id": 62138, "method_name": "changeEmailClick", "class_name": "FragmentEditProfile", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "    void changeEmailClick()\n    {\n\n        PrefChangeEmail.saveUser(null,getActivity());\n        Intent intent = new Intent(getActivity(), ChangeEmail.class);\n        startActivityForResult(intent,10);\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/EditDataScreens/EditProfile/FragmentEditProfile.java", "stars": "10", "class_props": {"extends": "Fragment", "implements": null, "modifiers": ["public"]}}, {"id": 62139, "method_name": "changePhoneClick", "class_name": "FragmentEditProfile", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "    void changePhoneClick()\n    {\n        PrefChangePhone.saveUser(null,getActivity());\n        Intent intent = new Intent(getActivity(), ChangePhone.class);\n        startActivityForResult(intent,10);\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/EditDataScreens/EditProfile/FragmentEditProfile.java", "stars": "10", "class_props": {"extends": "Fragment", "implements": null, "modifiers": ["public"]}}, {"id": 62140, "method_name": "setActionBarTitle", "class_name": "FragmentEditProfile", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void setActionBarTitle()\n    {\n        if(getActivity() instanceof AppCompatActivity)\n        {\n            ActionBar actionBar = ((AppCompatActivity)getActivity()).getSupportActionBar();\n\n            if(actionBar!=null)\n            {\n                if(current_mode == MODE_ADD)\n                {\n                    actionBar.setTitle(\"Sign Up\");\n                }\n                else if(current_mode==MODE_UPDATE || current_mode==MODE_UPDATE_BY_ADMIN)\n                {\n                    actionBar.setTitle(\"Edit Profile\");\n                }\n\n            }\n        }\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/EditDataScreens/EditProfile/FragmentEditProfile.java", "stars": "10", "class_props": {"extends": "Fragment", "implements": null, "modifiers": ["public"]}}, {"id": 62141, "method_name": "updateFieldVisibility", "class_name": "FragmentEditProfile", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void updateFieldVisibility()\n    {\n\n        if(current_mode==MODE_UPDATE_BY_ADMIN)\n        {\n\n            labelChangePhone.setVisibility(GONE);\n            labelChangeEmail.setVisibility(GONE);\n            labelChangePassword.setVisibility(GONE);\n        }\n        else if(current_mode==MODE_UPDATE_BY_SUPER_ADMIN)\n        {\n\n\n            labelChangePhone.setVisibility(GONE);\n            labelChangeEmail.setVisibility(GONE);\n            labelChangePassword.setVisibility(GONE);\n\n        }\n        else\n        {\n\n            labelChangePhone.setVisibility(VISIBLE);\n            labelChangeEmail.setVisibility(VISIBLE);\n            labelChangePassword.setVisibility(VISIBLE);\n\n\n            if(current_mode==MODE_ADD)\n            {\n                saveButton.setText(\"Sign Up\");\n                localUserID.setVisibility(GONE);\n\n                password.setEnabled(true);\n                password.setText(\"\");\n                email.setEnabled(true);\n\n\n            }\n            else if(current_mode== MODE_UPDATE)\n            {\n                localUserID.setVisibility(VISIBLE);\n                saveButton.setText(\"Save\");\n\n                password.setEnabled(false);\n                password.setText(\"Password\");\n                email.setEnabled(false);\n            }\n        }\n\n\n\n\n\n        if(PrefGeneral.getMultiMarketMode(getActivity()))\n        {\n            // multi-market mode enabled\n\n            if(current_mode==MODE_UPDATE_BY_SUPER_ADMIN)\n            {\n                localUserIDBlock.setVisibility(GONE);\n            }\n            else\n            {\n                localUserIDBlock.setVisibility(VISIBLE);\n            }\n\n\n            globalUserID.setHint(\"Global User ID\");\n        }\n        else\n        {\n            localUserIDBlock.setVisibility(GONE);\n            globalUserID.setHint(\"User ID\");\n        }\n\n\n        setActionBarTitle();\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/EditDataScreens/EditProfile/FragmentEditProfile.java", "stars": "10", "class_props": {"extends": "Fragment", "implements": null, "modifiers": ["public"]}}, {"id": 62142, "method_name": "showLogMessage", "class_name": "FragmentEditProfile", "params": ["String"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void showLogMessage(String message)\n    {\n        Log.d(TAG_LOG,message);\n        System.out.println(message);\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/EditDataScreens/EditProfile/FragmentEditProfile.java", "stars": "10", "class_props": {"extends": "Fragment", "implements": null, "modifiers": ["public"]}}, {"id": 62143, "method_name": "loadImage", "class_name": "FragmentEditProfile", "params": ["String"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void loadImage(String imagePath) {\n\n        String imagePathLocal = \"\";\n\n\n\n        if(PrefGeneral.getMultiMarketMode(getActivity()))\n        {\n            imagePathLocal = PrefServiceConfig.getServiceURL_SDS(getContext()) + \"/api/v1/User/Image/five_hundred_\" + imagePath + \".jpg\";\n        }\n        else\n        {\n            imagePathLocal = PrefGeneral.getServiceURL(getContext()) + \"/api/v1/User/Image/five_hundred_\" + imagePath + \".jpg\";\n        }\n\n\n//        System.out.println(iamgepath);\n\n        Picasso.get()\n                .load(imagePathLocal)\n                .into(resultView);\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/EditDataScreens/EditProfile/FragmentEditProfile.java", "stars": "10", "class_props": {"extends": "Fragment", "implements": null, "modifiers": ["public"]}}, {"id": 62144, "method_name": "UpdateButtonClick", "class_name": "FragmentEditProfile", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void UpdateButtonClick()\n    {\n\n        if(!validateData())\n        {\n            return;\n        }\n\n        if(current_mode == MODE_ADD)\n        {\n            addAccount();\n        }\n        else if(current_mode == MODE_UPDATE || current_mode==MODE_UPDATE_BY_ADMIN || current_mode==MODE_UPDATE_BY_SUPER_ADMIN)\n        {\n            update();\n        }\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/EditDataScreens/EditProfile/FragmentEditProfile.java", "stars": "10", "class_props": {"extends": "Fragment", "implements": null, "modifiers": ["public"]}}, {"id": 62145, "method_name": "validateData", "class_name": "FragmentEditProfile", "params": [], "throws": null, "modifiers": ["private"], "return_type": "boolean", "snippet": "    private boolean validateData()\n    {\n        boolean isValid = true;\n\n//        if(phone.getText().toString().length()==0)\n//        {\n//            phone.setError(\"Please enter Phone Number\");\n//            phone.requestFocus();\n//            isValid= false;\n//        }\n\n\n//\n//        if(email.getText().toString().length()==0)\n//        {\n//            email.requestFocus();\n//            email.setError(\"E-mail cannot be empty !\");\n//            isValid = false;\n//        }\n\n\n        if(password.getText().toString().length()==0)\n        {\n            password.requestFocus();\n            password.setError(\"Password cannot be empty\");\n            isValid = false;\n        }\n\n\n\n//        if(username.getText().toString().length()==0)\n//        {\n//            username.requestFocus();\n//            username.setError(\"Username cannot be empty\");\n//            isValid= false;\n//        }\n\n\n        if(name.getText().toString().length()==0)\n        {\n\n//            Drawable drawable = ContextCompat.getDrawable(getContext(),R.drawable.ic_close_black_24dp);\n            name.requestFocus();\n            name.setError(\"Name cannot be empty\");\n            isValid = false;\n        }\n\n\n        return isValid;\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/EditDataScreens/EditProfile/FragmentEditProfile.java", "stars": "10", "class_props": {"extends": "Fragment", "implements": null, "modifiers": ["public"]}}, {"id": 62146, "method_name": "addAccount", "class_name": "FragmentEditProfile", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void addAccount()\n    {\n        if(isImageChanged)\n        {\n            if(!isImageRemoved)\n            {\n                // upload image with add\n                uploadPickedImage(false);\n            }\n\n\n            // reset the flags\n            isImageChanged = false;\n            isImageRemoved = false;\n\n        }\n        else\n        {\n            // post request\n            retrofitPOSTRequest();\n        }\n\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/EditDataScreens/EditProfile/FragmentEditProfile.java", "stars": "10", "class_props": {"extends": "Fragment", "implements": null, "modifiers": ["public"]}}, {"id": 62147, "method_name": "update", "class_name": "FragmentEditProfile", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void update()\n    {\n\n        if(isImageChanged)\n        {\n\n\n            // delete previous Image from the Server\n            deleteImage(user.getProfileImagePath());\n\n\n            if(isImageRemoved)\n            {\n\n                user.setProfileImagePath(null);\n                retrofitPUTRequest();\n\n            }else\n            {\n\n                uploadPickedImage(true);\n            }\n\n\n            // resetting the flag in order to ensure that future updates do not upload the same image again to the server\n            isImageChanged = false;\n            isImageRemoved = false;\n\n        }else {\n\n            retrofitPUTRequest();\n        }\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/EditDataScreens/EditProfile/FragmentEditProfile.java", "stars": "10", "class_props": {"extends": "Fragment", "implements": null, "modifiers": ["public"]}}, {"id": 62148, "method_name": "bindUserData", "class_name": "FragmentEditProfile", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void bindUserData()\n    {\n        if(user !=null) {\n\n\n            if(PrefGeneral.getMultiMarketMode(getActivity()))\n            {\n                User localUserProfile = PrefLogin.getUser(getActivity());\n                if(localUserProfile!=null)\n                {\n                    localUserID.setText(String.valueOf(localUserProfile.getUserID()));\n                }\n            }\n\n\n            globalUserID.setText(String.valueOf(user.getUserID()));\n            name.setText(user.getName());\n            secretCode.setText(String.valueOf(user.getSecretCode()));\n\n            username.setText(user.getUsername());\n//            password.setText(user.getPassword());\n            email.setText(user.getEmail());\n            about.setText(user.getAbout());\n            phone.setText(user.getPhone());\n\n\n\n            if(user.getGender()!=null)\n            {\n                if(user.getGender())\n                {\n                    choiceMale.setChecked(true);\n                }\n                else\n                {\n                    choiceFemale.setChecked(true);\n                }\n            }\n\n\n        }\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/EditDataScreens/EditProfile/FragmentEditProfile.java", "stars": "10", "class_props": {"extends": "Fragment", "implements": null, "modifiers": ["public"]}}, {"id": 62149, "method_name": "getDataFromViews", "class_name": "FragmentEditProfile", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void getDataFromViews()\n    {\n\n        user.setName(name.getText().toString());\n\n        user.setSecretCode(Integer.parseInt(secretCode.getText().toString()));\n\n        user.setUsername(username.getText().toString());\n        user.setAbout(about.getText().toString());\n        user.setGender(choiceMale.isChecked());\n\n\n        if(username.getText().toString().length()==0)\n        {\n            user.setUsername(null);\n        }\n        else\n        {\n            user.setUsername(username.getText().toString());\n        }\n\n\n\n        if(email.getText().toString().length()==0)\n        {\n            user.setEmail(null);\n        }\n        else\n        {\n            user.setEmail(email.getText().toString());\n        }\n\n        if(phone.getText().toString().length()==0)\n        {\n            user.setPhone(null);\n        }\n        else\n        {\n            user.setPhone(phone.getText().toString());\n        }\n\n\n\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/EditDataScreens/EditProfile/FragmentEditProfile.java", "stars": "10", "class_props": {"extends": "Fragment", "implements": null, "modifiers": ["public"]}}, {"id": 62150, "method_name": "retrofitPUTRequest", "class_name": "FragmentEditProfile", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void retrofitPUTRequest()\n    {\n\n        getDataFromViews();\n\n\n        saveButton.setVisibility(View.INVISIBLE);\n        progressBar.setVisibility(VISIBLE);\n\n\n\n//        boolean isGlobalProfile = getActivity().getIntent().getBooleanExtra(EditProfile.TAG_IS_GLOBAL_PROFILE,false);\n\n        Call<ResponseBody> call;\n        Call<ResponseBody> callUpdateLocal = null;\n\n\n\n        if(current_mode==MODE_UPDATE)\n        {\n\n            if(PrefGeneral.getMultiMarketMode(getActivity()))\n            {\n                Retrofit retrofit = new Retrofit.Builder()\n                        .addConverterFactory(GsonConverterFactory.create(gson))\n                        .baseUrl(PrefServiceConfig.getServiceURL_SDS(MyApplication.getAppContext()))\n                        .client(new OkHttpClient().newBuilder().build())\n                        .build();\n\n\n\n                call = retrofit.create(UserServiceGlobal.class).updateProfileEndUser(\n                        PrefLoginGlobal.getAuthorizationHeaders(getActivity()),\n                        user\n                );\n\n\n\n\n\n                callUpdateLocal = userService.updateProfileEndUser(\n                        PrefLogin.getAuthorizationHeaders(getActivity()),\n                        user\n                );\n\n\n            }\n            else\n            {\n\n                // update Item Call\n                call = userService.updateProfileEndUser(\n                        PrefLogin.getAuthorizationHeaders(getActivity()),\n                        user\n                );\n            }\n\n\n\n        }\n        else if(current_mode==MODE_UPDATE_BY_ADMIN)\n        {\n            // update Item Call\n            call = userService.updateProfileByAdmin(\n                    PrefLogin.getAuthorizationHeaders(getActivity()),\n                    user\n            );\n\n        }\n        else if(current_mode==MODE_UPDATE_BY_SUPER_ADMIN)\n        {\n\n            Retrofit retrofit = new Retrofit.Builder()\n                    .addConverterFactory(GsonConverterFactory.create(gson))\n                    .baseUrl(PrefServiceConfig.getServiceURL_SDS(MyApplication.getAppContext()))\n                    .client(new OkHttpClient().newBuilder().build())\n                    .build();\n\n\n            call = retrofit.create(UserServiceGlobal.class).updateProfileByAdmin(\n                    PrefLoginGlobal.getAuthorizationHeaders(getActivity()),\n                    user\n            );\n\n\n        }\n        else\n        {\n\n\n            showToastMessage(\"Current Mode : \" + current_mode);\n            saveButton.setVisibility(VISIBLE);\n            progressBar.setVisibility(View.INVISIBLE);\n            return;\n        }\n\n\n\n\n\n\n        call.enqueue(new Callback<ResponseBody>() {\n            @Override\n            public void onResponse(Call<ResponseBody> call, Response<ResponseBody> response) {\n\n\n                if(isDestroyed)\n                {\n                    return;\n                }\n\n\n                if(response.code()==200)\n                {\n                    showToastMessage(\"Update Successful !\");\n\n\n\n                    if(getActivity().getIntent().getIntExtra(EDIT_MODE_INTENT_KEY,MODE_UPDATE)==MODE_UPDATE)\n                    {\n\n\n                        if(PrefGeneral.getMultiMarketMode(getActivity()))\n                        {\n                            PrefLoginGlobal.saveUserProfile(user,getContext());\n                        }\n                        else\n                        {\n                            PrefLogin.saveUserProfile(user,getContext());\n                        }\n\n                    }\n\n\n                }\n                else\n                {\n                    showToastMessage(\"Update failed code : \" + response.code());\n                }\n\n\n                saveButton.setVisibility(VISIBLE);\n                progressBar.setVisibility(View.INVISIBLE);\n\n\n            }\n\n            @Override\n            public void onFailure(Call<ResponseBody> call, Throwable t) {\n\n\n                if(isDestroyed)\n                {\n                    return;\n                }\n\n\n                showToastMessage(\"Update Failed !\");\n\n\n                saveButton.setVisibility(VISIBLE);\n                progressBar.setVisibility(View.INVISIBLE);\n\n            }\n        });\n\n\n\n\n\n\n        if(callUpdateLocal!=null)\n        {\n            callUpdateLocal.enqueue(new Callback<ResponseBody>() {\n                @Override\n                public void onResponse(Call<ResponseBody> call, Response<ResponseBody> response) {\n\n                    if(response.code()==200)\n                    {\n//                        showToastMessage(\"Updated Locally !\");\n                    }\n                }\n\n                @Override\n                public void onFailure(Call<ResponseBody> call, Throwable t) {\n\n                }\n            });\n        }\n\n\n\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/EditDataScreens/EditProfile/FragmentEditProfile.java", "stars": "10", "class_props": {"extends": "Fragment", "implements": null, "modifiers": ["public"]}}, {"id": 62151, "method_name": "retrofitPOSTRequest", "class_name": "FragmentEditProfile", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void retrofitPOSTRequest()\n    {\n        getDataFromViews();\n\n\n\n//        saveButton.setVisibility(View.INVISIBLE);\n//        progressBar.setVisibility(View.VISIBLE);\n//\n//\n//        Call<User> call = userService.insertUser(user);\n//\n//\n//        call.enqueue(new Callback<User>() {\n//            @Override\n//            public void onResponse(Call<User> call, Response<User> response) {\n//\n//                if(response.code()==201)\n//                {\n//                    showToastMessage(\"Add successful !\");\n//\n//                    current_mode = MODE_UPDATE;\n//                    updateFieldVisibility();\n//                    user = response.body();\n//                    bindUserData();\n//\n//                    PrefLogin.saveCredentials(\n//                            getContext(), user.getUsername(),\n//                            user.getPassword());\n//\n//                }\n//                else\n//                {\n//                    showToastMessage(\"Add failed !\");\n//                }\n//\n//\n//\n//                saveButton.setVisibility(View.VISIBLE);\n//                progressBar.setVisibility(View.INVISIBLE);\n//\n//\n//            }\n//\n//            @Override\n//            public void onFailure(Call<User> call, Throwable t) {\n//\n//                showToastMessage(\"Sign up not completed due to network failure !\");\n//\n//\n//                saveButton.setVisibility(View.VISIBLE);\n//                progressBar.setVisibility(View.INVISIBLE);\n//\n//            }\n//        });\n\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/EditDataScreens/EditProfile/FragmentEditProfile.java", "stars": "10", "class_props": {"extends": "Fragment", "implements": null, "modifiers": ["public"]}}, {"id": 62152, "method_name": "showToastMessage", "class_name": "FragmentEditProfile", "params": ["String"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void showToastMessage(String message)\n    {\n        Toast.makeText(getActivity(),message, Toast.LENGTH_SHORT).show();\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/EditDataScreens/EditProfile/FragmentEditProfile.java", "stars": "10", "class_props": {"extends": "Fragment", "implements": null, "modifiers": ["public"]}}, {"id": 62153, "method_name": "removeImage", "class_name": "FragmentEditProfile", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "    void removeImage()\n    {\n\n        File file = new File(getContext().getCacheDir().getPath() + \"/\" + \"SampleCropImage.jpeg\");\n        file.delete();\n\n        resultView.setImageDrawable(null);\n\n        isImageChanged = true;\n        isImageRemoved = true;\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/EditDataScreens/EditProfile/FragmentEditProfile.java", "stars": "10", "class_props": {"extends": "Fragment", "implements": null, "modifiers": ["public"]}}, {"id": 62154, "method_name": "clearCache", "class_name": "FragmentEditProfile", "params": ["Context"], "throws": null, "modifiers": ["static", "private"], "return_type": "void", "snippet": "    private static void clearCache(Context context)\n    {\n        File file = new File(context.getCacheDir().getPath() + \"/\" + \"SampleCropImage.jpeg\");\n        file.delete();\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/EditDataScreens/EditProfile/FragmentEditProfile.java", "stars": "10", "class_props": {"extends": "Fragment", "implements": null, "modifiers": ["public"]}}, {"id": 62155, "method_name": "pickShopImage", "class_name": "FragmentEditProfile", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "    void pickShopImage() {\n\n//        ImageCropUtility.showFileChooser(()getActivity());\n\n\n\n        // code for checking the Read External Storage Permission and granting it.\n        if (PermissionChecker.checkSelfPermission(getContext(), Manifest.permission.READ_EXTERNAL_STORAGE)\n                != PackageManager.PERMISSION_GRANTED) {\n\n\n            /// / TODO: Consider calling\n            //    ActivityCompat#requestPermissions\n            // here to request the missing permissions, and then overriding\n            //   public void onRequestPermissionsResult(int requestCode, String[] permissions,\n            //                                          int[] grantResults)\n            // to handle the case where the user grants the permission. See the documentation\n            // for ActivityCompat#requestPermissions for more details.\n\n            requestPermissions(new String[]{Manifest.permission.READ_EXTERNAL_STORAGE},\n                    REQUEST_CODE_READ_EXTERNAL_STORAGE);\n\n            return;\n        }\n\n\n\n        clearCache(getContext());\n\n        Intent intent = new Intent();\n        intent.setType(\"image/*\");\n        intent.setAction(Intent.ACTION_GET_CONTENT);\n        startActivityForResult(Intent.createChooser(intent, \"Select Picture\"), PICK_IMAGE_REQUEST);\n\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/EditDataScreens/EditProfile/FragmentEditProfile.java", "stars": "10", "class_props": {"extends": "Fragment", "implements": null, "modifiers": ["public"]}}, {"id": 62156, "method_name": "onActivityResult", "class_name": "FragmentEditProfile", "params": ["int", "int", "Intent"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onActivityResult(int requestCode, int resultCode, Intent result) {\n\n        super.onActivityResult(requestCode, resultCode, result);\n\n        showLogMessage(\"FragmentEditProfile : onActivityResult()\"\n        + \"\\nRequest Code : \" + requestCode\n        + \"\\nResponse Code : \" + resultCode\n        );\n\n        if(requestCode==10 && resultCode == 10)\n        {\n\n            // result obtained after email change\n            current_mode = getActivity().getIntent().getIntExtra(EDIT_MODE_INTENT_KEY,MODE_ADD);\n\n            if(current_mode == MODE_UPDATE)\n            {\n                user = PrefLogin.getUser(getContext());\n\n                if(user !=null) {\n                    bindUserData();\n                }\n            }\n\n\n            showLogMessage(\"FragmentEditProfile : onActivityResult()\");\n\n        }\n        else if (requestCode == PICK_IMAGE_REQUEST && resultCode == RESULT_OK\n                && result != null\n                && result.getData() != null) {\n\n\n            Uri filePath = result.getData();\n\n            //imageUri = filePath;\n\n            if (filePath != null) {\n\n                startCropActivity(result.getData(),getContext());\n            }\n\n        }\n\n\n        if (resultCode == RESULT_OK && requestCode == UCrop.REQUEST_CROP) {\n\n            resultView.setImageURI(null);\n            resultView.setImageURI(UCrop.getOutput(result));\n\n            isImageChanged = true;\n            isImageRemoved = false;\n\n\n        } else if (resultCode == UCrop.RESULT_ERROR) {\n\n            final Throwable cropError = UCrop.getError(result);\n\n        }\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/EditDataScreens/EditProfile/FragmentEditProfile.java", "stars": "10", "class_props": {"extends": "Fragment", "implements": null, "modifiers": ["public"]}}, {"id": 62157, "method_name": "startCropActivity", "class_name": "FragmentEditProfile", "params": ["Uri", "Context"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void startCropActivity(Uri sourceUri, Context context) {\n\n\n\n        final String SAMPLE_CROPPED_IMAGE_NAME = \"SampleCropImage.jpeg\";\n\n        Uri destinationUri = Uri.fromFile(new File(getContext().getCacheDir(), SAMPLE_CROPPED_IMAGE_NAME));\n\n        UCrop.Options options = new UCrop.Options();\n        options.setFreeStyleCropEnabled(true);\n\n//        options.setCompressionFormat(Bitmap.CompressFormat.JPEG);\n//        options.setCompressionQuality(100);\n\n        options.setToolbarColor(ContextCompat.getColor(getContext(), R.color.blueGrey800));\n        options.setStatusBarColor(ContextCompat.getColor(getContext(), R.color.backgroundTinted));\n        options.setAllowedGestures(UCropActivity.SCALE, UCropActivity.ALL, UCropActivity.SCALE);\n\n\n        // this function takes the file from the source URI and saves in into the destination URI location.\n        UCrop.of(sourceUri, destinationUri)\n                .withOptions(options)\n                .withMaxResultSize(400, 400)\n                .start(context,this);\n\n        //.withMaxResultSize(400,300)\n        //.withMaxResultSize(500, 400)\n        //.withAspectRatio(16, 9)\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/EditDataScreens/EditProfile/FragmentEditProfile.java", "stars": "10", "class_props": {"extends": "Fragment", "implements": null, "modifiers": ["public"]}}, {"id": 62158, "method_name": "onRequestPermissionsResult", "class_name": "FragmentEditProfile", "params": ["int", "String", "int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onRequestPermissionsResult(int requestCode, @NonNull String[] permissions, @NonNull int[] grantResults) {\n        super.onRequestPermissionsResult(requestCode, permissions, grantResults);\n\n        switch (requestCode) {\n            case REQUEST_CODE_READ_EXTERNAL_STORAGE: {\n                // If request is cancelled, the result arrays are empty.\n                if (grantResults.length > 0\n                        && grantResults[0] == PackageManager.PERMISSION_GRANTED) {\n\n                    showToastMessage(\"Permission Granted !\");\n                    pickShopImage();\n                    // permission was granted, yay! Do the\n                    // contacts-related task you need to do.\n\n                } else {\n\n\n                    showToastMessage(\"Permission Denied for Read External Storage . \");\n                    // permission denied, boo! Disable the\n                    // functionality that depends on this permission.\n                }\n                return;\n            }\n\n            // other 'case' lines to check for other\n            // permissions this app might request\n        }\n\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/EditDataScreens/EditProfile/FragmentEditProfile.java", "stars": "10", "class_props": {"extends": "Fragment", "implements": null, "modifiers": ["public"]}}, {"id": 62159, "method_name": "uploadPickedImage", "class_name": "FragmentEditProfile", "params": ["boolean"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void uploadPickedImage(final boolean isModeEdit)\n    {\n\n        Log.d(\"applog\", \"onClickUploadImage\");\n\n\n        // code for checking the Read External Storage Permission and granting it.\n        if (PermissionChecker.checkSelfPermission(getContext(), Manifest.permission.READ_EXTERNAL_STORAGE)\n                != PackageManager.PERMISSION_GRANTED) {\n\n\n            /// / TODO: Consider calling\n            //    ActivityCompat#requestPermissions\n            // here to request the missing permissions, and then overriding\n            //   public void onRequestPermissionsResult(int requestCode, String[] permissions,\n            //                                          int[] grantResults)\n            // to handle the case where the user grants the permission. See the documentation\n            // for ActivityCompat#requestPermissions for more details.\n\n            requestPermissions(new String[]{Manifest.permission.READ_EXTERNAL_STORAGE},\n                    REQUEST_CODE_READ_EXTERNAL_STORAGE);\n\n            return;\n        }\n\n\n        File file = new File(getContext().getCacheDir().getPath() + \"/\" + \"SampleCropImage.jpeg\");\n\n\n        // Marker\n\n        RequestBody requestBodyBinary = null;\n\n        InputStream in = null;\n\n        try {\n            in = new FileInputStream(file);\n\n            byte[] buf;\n            buf = new byte[in.available()];\n            while (in.read(buf) != -1) ;\n\n            requestBodyBinary = RequestBody.create(MediaType.parse(\"application/octet-stream\"), buf);\n\n        } catch (Exception e) {\n            e.printStackTrace();\n        }\n\n\n\n\n        saveButton.setVisibility(View.INVISIBLE);\n        progressBar.setVisibility(VISIBLE);\n\n\n\n\n//        boolean isGlobalProfile = getActivity().getIntent().getBooleanExtra(EditProfile.TAG_IS_GLOBAL_PROFILE,false);\n\n        Call<Image> imageCall;\n\n\n        if(PrefGeneral.getMultiMarketMode(getActivity()))\n        {\n            Retrofit retrofit = new Retrofit.Builder()\n                    .addConverterFactory(GsonConverterFactory.create(gson))\n                    .baseUrl(PrefServiceConfig.getServiceURL_SDS(MyApplication.getAppContext()))\n                    .client(new OkHttpClient().newBuilder().build())\n                    .build();\n\n\n\n            imageCall = retrofit.create(UserServiceGlobal.class).uploadImage(\n                    PrefLoginGlobal.getAuthorizationHeaders(getActivity()),\n                    requestBodyBinary\n            );\n\n\n        }\n        else\n        {\n\n            imageCall = userService.uploadImage(\n                    PrefLogin.getAuthorizationHeaders(getContext()),\n                    requestBodyBinary\n            );\n\n        }\n\n\n\n\n\n\n        imageCall.enqueue(new Callback<Image>() {\n            @Override\n            public void onResponse(Call<Image> call, Response<Image> response) {\n\n\n                if(isDestroyed)\n                {\n                    return;\n                }\n\n\n                if(response.code()==201)\n                {\n//                    showToastMessage(\"Image UPload Success !\");\n\n\n                    Image image = response.body();\n                    // check if needed or not . If not needed then remove this line\n//                    loadImage(image.getPath());\n\n\n\n                    user.setProfileImagePath(image.getPath());\n\n                }\n                else if(response.code()==417)\n                {\n                    showToastMessage(\"Cant Upload Image. Image Size should not exceed 2 MB.\");\n\n                    user.setProfileImagePath(null);\n\n                }\n                else\n                {\n                    showToastMessage(\"Image Upload failed Code : \" + response.code());\n                    user.setProfileImagePath(null);\n\n                }\n\n                if(isModeEdit)\n                {\n                    retrofitPUTRequest();\n                }\n                else\n                {\n                    retrofitPOSTRequest();\n                }\n\n\n                saveButton.setVisibility(VISIBLE);\n                progressBar.setVisibility(View.INVISIBLE);\n\n\n            }\n\n\n\n            @Override\n            public void onFailure(Call<Image> call, Throwable t) {\n\n\n                if(isDestroyed)\n                {\n                    return;\n                }\n\n\n                showToastMessage(\"Image Upload failed !\");\n                user.setProfileImagePath(null);\n\n                if(isModeEdit)\n                {\n                    retrofitPUTRequest();\n                }\n                else\n                {\n                    retrofitPOSTRequest();\n                }\n\n\n                saveButton.setVisibility(VISIBLE);\n                progressBar.setVisibility(View.INVISIBLE);\n\n            }\n        });\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/EditDataScreens/EditProfile/FragmentEditProfile.java", "stars": "10", "class_props": {"extends": "Fragment", "implements": null, "modifiers": ["public"]}}, {"id": 62160, "method_name": "deleteImage", "class_name": "FragmentEditProfile", "params": ["String"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void deleteImage(String filename)\n    {\n\n\n//        saveButton.setVisibility(View.INVISIBLE);\n//        progressBar.setVisibility(View.VISIBLE);\n\n\n\n\n//        boolean isGlobalProfile = getActivity().getIntent().getBooleanExtra(EditProfile.TAG_IS_GLOBAL_PROFILE,false);\n\n        Call<ResponseBody> call;\n\n\n        if(PrefGeneral.getMultiMarketMode(getActivity()))\n        {\n            Retrofit retrofit = new Retrofit.Builder()\n                    .addConverterFactory(GsonConverterFactory.create(gson))\n                    .baseUrl(PrefServiceConfig.getServiceURL_SDS(MyApplication.getAppContext()))\n                    .client(new OkHttpClient().newBuilder().build())\n                    .build();\n\n\n\n            call = retrofit.create(UserServiceGlobal.class).deleteImage(\n                    PrefLoginGlobal.getAuthorizationHeaders(getActivity()),\n                    filename\n            );\n\n\n        }\n        else\n        {\n\n            call = userService.deleteImage(\n                    PrefLogin.getAuthorizationHeaders(getContext()),\n                    filename\n            );\n        }\n\n\n\n\n\n\n\n\n\n        call.enqueue(new Callback<ResponseBody>() {\n            @Override\n            public void onResponse(Call<ResponseBody> call, Response<ResponseBody> response) {\n\n\n                if(isDestroyed)\n                {\n                    return;\n                }\n\n\n                if(response.code()==200)\n                    {\n                        showToastMessage(\"Image Removed !\");\n                    }\n                    else\n                    {\n//                        showToastMessage(\"Image Delete failed\");\n                    }\n\n\n\n//                saveButton.setVisibility(View.VISIBLE);\n//                progressBar.setVisibility(View.INVISIBLE);\n\n\n            }\n\n            @Override\n            public void onFailure(Call<ResponseBody> call, Throwable t) {\n\n//                showToastMessage(\"Image Delete failed\");\n\n\n                if(isDestroyed)\n                {\n                    return;\n                }\n\n\n\n//                saveButton.setVisibility(View.VISIBLE);\n//                progressBar.setVisibility(View.INVISIBLE);\n\n            }\n        });\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/EditDataScreens/EditProfile/FragmentEditProfile.java", "stars": "10", "class_props": {"extends": "Fragment", "implements": null, "modifiers": ["public"]}}, {"id": 62161, "method_name": "onDestroy", "class_name": "FragmentEditProfile", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onDestroy() {\n        super.onDestroy();\n        isDestroyed = true;\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/EditDataScreens/EditProfile/FragmentEditProfile.java", "stars": "10", "class_props": {"extends": "Fragment", "implements": null, "modifiers": ["public"]}}, {"id": 62162, "method_name": "onResume", "class_name": "FragmentEditProfile", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onResume() {\n        super.onResume();\n\n        isDestroyed = false;\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/EditDataScreens/EditProfile/FragmentEditProfile.java", "stars": "10", "class_props": {"extends": "Fragment", "implements": null, "modifiers": ["public"]}}, {"id": 62163, "method_name": "getJspFile", "class_name": "ProcessReportDAO", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getJspFile() {\n        return \"/WEB-INF/jspf/user/plugin/report/report/process.jsp\";\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/report/dao/ProcessReportDAO.java", "stars": "12", "class_props": {"extends": "ReportDAO", "implements": null, "modifiers": ["public"]}}, {"id": 62164, "method_name": "get", "class_name": "ProcessReportDAO", "params": ["DynActionForm"], "throws": ["Exception"], "modifiers": ["public"], "return_type": "void", "snippet": "    public void get(DynActionForm form) throws Exception {\n        Date dateFrom = form.getParamDate(\"dateFrom\", new Date(), true);\n        Date dateTo = form.getParamDate(\"dateTo\", new Date(), true);\n\n        String type = form.getParam(\"type\", \"create\", true);\n        if (!StringUtils.equalsAny(type, \"create\", \"close\"))\n            throw new BGIllegalArgumentException();\n        \n        try (Connection con = Setup.getSetup().getDBSlaveConnectionFromPool()) {\n            SearchResult<Object[]> result = new SearchResult<>(form);\n            \n            PreparedDelay pd = new PreparedDelay(con);\n            pd.addQuery(SQL_SELECT_COUNT_ROWS + \"id, type_id, \" + type + \"_user_id, description\" + SQL_FROM + TABLE_PROCESS + SQL_WHERE);\n            pd.addQuery(type + \"_dt\");\n            pd.addQuery(\" BETWEEN ? AND ?\");\n            pd.addDate(dateFrom);\n            pd.addDate(TimeUtils.getNextDay(dateTo));\n            pd.addQuery(SQL_ORDER_BY);\n            pd.addQuery(type + \"_user_id\");\n            \n            ResultSet rs = pd.executeQuery();\n            while (rs.next()) {\n                // TODO: Keep in mind necessity of retrieving file uploadable data in future. \n                Object[] row = new Object[4];\n                row[0] = rs.getInt(1);\n                row[1] = ProcessTypeCache.getProcessType(rs.getInt(2));\n                row[2] = UserCache.getUser(rs.getInt(3));\n                row[3] = rs.getString(4);\n                result.getList().add(row);\n            }\n            \n            setRecordCount(form.getPage(), pd.getPrepared());\n        }\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/report/dao/ProcessReportDAO.java", "stars": "12", "class_props": {"extends": "ReportDAO", "implements": null, "modifiers": ["public"]}}, {"id": 62165, "method_name": "loadTomlFile", "class_name": "TomlUtil", "params": ["String", "Class<T>"], "throws": null, "modifiers": ["public", "static"], "return_type": "T", "snippet": "    public static <T> T loadTomlFile(String path, Class<T> t) {\n        var toml = new Toml();\n        var root = PathUtil.convertCorrectPath(path);\n        toml.read(FileUtil.file(root));\n        return toml.to(t);\n    }", "url": "https://raw.githubusercontent.com/Heemooo/Bored/master/src/main/java/com/bored/util/TomlUtil.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["final", "public"]}}, {"id": 62166, "method_name": "tomlToObj", "class_name": "TomlUtil", "params": ["String", "Class<T>"], "throws": null, "modifiers": ["public", "static"], "return_type": "T", "snippet": "    public static <T> T tomlToObj(String tomlString, Class<T> tClass) {\n        var toml = new Toml();\n        toml.read(tomlString);\n        return toml.to(tClass);\n    }", "url": "https://raw.githubusercontent.com/Heemooo/Bored/master/src/main/java/com/bored/util/TomlUtil.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["final", "public"]}}, {"id": 62167, "method_name": "main", "class_name": "TomlUtil", "params": ["String"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void main(String[] args) {\n        var path = System.getProperty(\"user.dir\") + \"/site-demo/themes/default/static\";\n        path = PathUtil.convertCorrectPath(path);\n        var files = FileUtil.loopFiles(path);\n        for (File file : files) {\n            System.out.println(file.getPath());\n            System.out.println(FileTypeUtil.getType(file));\n            System.out.println(FileUtil.getMimeType(file.getPath()));\n        }\n    }", "url": "https://raw.githubusercontent.com/Heemooo/Bored/master/src/main/java/com/bored/util/TomlUtil.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["final", "public"]}}, {"id": 62168, "method_name": "main", "class_name": "HasherLoadDistributionSandbox", "params": ["String"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void main(String[] args) {\n        // Create test nodes\n        Set<SimpleNode> nodes = buildNodes();\n\n        // Create hash ring for every default hasher\n        List<ConsistentHash<SimpleNode>> rings = Arrays.stream(DefaultHasher.values())\n                .map(HasherLoadDistributionSandbox::buildRing)\n                .peek(ring -> ring.addAll(nodes))\n                .collect(Collectors.toList());\n\n        // Locate node with random UUID key\n        for (int i = 0; i < REQUESTS_COUNT; i++) {\n            String key = UUID.randomUUID().toString();\n            rings.forEach(ring -> ring.locate(key));\n        }\n\n        // Print load distribution for all rings\n        rings.stream()\n                .map(ring -> (HashRingMetrics) ring)\n                .forEach(HashRingMetrics::printLoadDistribution);\n    }", "url": "https://raw.githubusercontent.com/ishugaliy/allgood-consistent-hash/master/samples/src/main/java/org/ishugaliy/allgood/consistent/hash/samples/HasherLoadDistributionSandbox.java", "stars": "9", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 62169, "method_name": "buildNodes", "class_name": "HasherLoadDistributionSandbox", "params": [], "throws": null, "modifiers": ["static", "private"], "return_type": "Set<SimpleNode>", "snippet": "    private static Set<SimpleNode> buildNodes() {\n        return IntStream.range(0, NODES_COUNT)\n                .mapToObj(i -> SimpleNode.of(\"192.168.1.\" + i))\n                .collect(Collectors.toSet());\n    }", "url": "https://raw.githubusercontent.com/ishugaliy/allgood-consistent-hash/master/samples/src/main/java/org/ishugaliy/allgood/consistent/hash/samples/HasherLoadDistributionSandbox.java", "stars": "9", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 62170, "method_name": "buildRing", "class_name": "HasherLoadDistributionSandbox", "params": ["DefaultHasher"], "throws": null, "modifiers": ["static", "private"], "return_type": "ConsistentHash<SimpleNode>", "snippet": "    private static ConsistentHash<SimpleNode> buildRing(DefaultHasher hasher) {\n        return new HashRingMetrics<>(\n                HashRing.<SimpleNode>newBuilder()\n                        .name(hasher.name().toLowerCase() + \"_ring\")\n                        .partitionRate(PARTITION_RATE)\n                        .hasher(hasher)\n                        .build()\n        );\n    }", "url": "https://raw.githubusercontent.com/ishugaliy/allgood-consistent-hash/master/samples/src/main/java/org/ishugaliy/allgood/consistent/hash/samples/HasherLoadDistributionSandbox.java", "stars": "9", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 62171, "method_name": "onCreate", "class_name": "EventAppCompatActivity", "params": ["Bundle"], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void onCreate(@Nullable Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        // \u666e\u901a\u4e8b\u4ef6\u76d1\u542c\u521d\u59cb\u5316\n        mPageEventEnable = initPageEvent();\n        if (mPageEventEnable && mEventList != null) {\n            for (Class<? extends PageEvent> eventPage : mEventList) {\n                EventHelper.registerEventPage(this, eventPage);\n            }\n        }\n        // \u7c98\u6027\u4e8b\u4ef6\u76d1\u542c\u521d\u59cb\u5316\n        mPageStickEventEnable = initPageStickEvent();\n        if (mPageStickEventEnable && mStickEventList != null) {\n            for (Class<? extends PageEvent> eventPage : mStickEventList) {\n                EventHelper.registerStickEventPage(this, eventPage);\n            }\n        }\n        LogHelper.i(TAG, \"activity: \" + this +\n                \", mPageEventEnable: \" + mPageEventEnable +\n                \", mPageStickEventEnable: \" + mPageStickEventEnable);\n    }", "url": "https://raw.githubusercontent.com/wkp111/PageEventDemo/master/pageevent/src/main/java/com/wkp/pageevent/base/EventAppCompatActivity.java", "stars": "1", "class_props": {"extends": "AppCompatActivity", "implements": ["PageEventListener", "PageStickEventListener", "PageEvent"], "modifiers": ["public"]}}, {"id": 62172, "method_name": "onDestroy", "class_name": "EventAppCompatActivity", "params": [], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void onDestroy() {\n        // \u666e\u901a\u4e8b\u4ef6\u76d1\u542c\u6ce8\u9500\n        if (mPageEventEnable && mEventList != null) {\n            for (Class<? extends PageEvent> eventPage : mEventList) {\n                EventHelper.unregisterEventPage(this, eventPage);\n            }\n            mEventList.clear();\n            mEventList = null;\n        }\n        // \u7c98\u6027\u4e8b\u4ef6\u76d1\u542c\u6ce8\u9500\n        if (mPageStickEventEnable && mStickEventList != null) {\n            for (Class<? extends PageEvent> eventPage : mStickEventList) {\n                EventHelper.unregisterStickEventPage(this, eventPage);\n            }\n            mStickEventList.clear();\n            mStickEventList = null;\n        }\n        super.onDestroy();\n    }", "url": "https://raw.githubusercontent.com/wkp111/PageEventDemo/master/pageevent/src/main/java/com/wkp/pageevent/base/EventAppCompatActivity.java", "stars": "1", "class_props": {"extends": "AppCompatActivity", "implements": ["PageEventListener", "PageStickEventListener", "PageEvent"], "modifiers": ["public"]}}, {"id": 62173, "method_name": "initPageEvent", "class_name": "EventAppCompatActivity", "params": [], "throws": null, "modifiers": ["protected"], "return_type": "boolean", "snippet": "    protected boolean initPageEvent() {\n        return false;\n    }", "url": "https://raw.githubusercontent.com/wkp111/PageEventDemo/master/pageevent/src/main/java/com/wkp/pageevent/base/EventAppCompatActivity.java", "stars": "1", "class_props": {"extends": "AppCompatActivity", "implements": ["PageEventListener", "PageStickEventListener", "PageEvent"], "modifiers": ["public"]}}, {"id": 62174, "method_name": "addPageEvent", "class_name": "EventAppCompatActivity", "params": ["Class<PageEvent>"], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void addPageEvent(Class<? extends PageEvent> eventPage) {\n        if (eventPage == null) {\n            return;\n        }\n        if (mEventList == null) {\n            mEventList = new ArrayList<>();\n        }\n        if (mEventList.contains(eventPage)) {\n            return;\n        }\n        mEventList.add(eventPage);\n    }", "url": "https://raw.githubusercontent.com/wkp111/PageEventDemo/master/pageevent/src/main/java/com/wkp/pageevent/base/EventAppCompatActivity.java", "stars": "1", "class_props": {"extends": "AppCompatActivity", "implements": ["PageEventListener", "PageStickEventListener", "PageEvent"], "modifiers": ["public"]}}, {"id": 62175, "method_name": "onEvent", "class_name": "EventAppCompatActivity", "params": ["Event"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onEvent(@NonNull Event event) {\n    }", "url": "https://raw.githubusercontent.com/wkp111/PageEventDemo/master/pageevent/src/main/java/com/wkp/pageevent/base/EventAppCompatActivity.java", "stars": "1", "class_props": {"extends": "AppCompatActivity", "implements": ["PageEventListener", "PageStickEventListener", "PageEvent"], "modifiers": ["public"]}}, {"id": 62176, "method_name": "initPageStickEvent", "class_name": "EventAppCompatActivity", "params": [], "throws": null, "modifiers": ["protected"], "return_type": "boolean", "snippet": "    protected boolean initPageStickEvent() {\n        return false;\n    }", "url": "https://raw.githubusercontent.com/wkp111/PageEventDemo/master/pageevent/src/main/java/com/wkp/pageevent/base/EventAppCompatActivity.java", "stars": "1", "class_props": {"extends": "AppCompatActivity", "implements": ["PageEventListener", "PageStickEventListener", "PageEvent"], "modifiers": ["public"]}}, {"id": 62177, "method_name": "addPageStickEvent", "class_name": "EventAppCompatActivity", "params": ["Class<PageEvent>"], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void addPageStickEvent(Class<? extends PageEvent> eventPage) {\n        if (eventPage == null) {\n            return;\n        }\n        if (mStickEventList == null) {\n            mStickEventList = new ArrayList<>();\n        }\n        if (mStickEventList.contains(eventPage)) {\n            return;\n        }\n        mStickEventList.add(eventPage);\n    }", "url": "https://raw.githubusercontent.com/wkp111/PageEventDemo/master/pageevent/src/main/java/com/wkp/pageevent/base/EventAppCompatActivity.java", "stars": "1", "class_props": {"extends": "AppCompatActivity", "implements": ["PageEventListener", "PageStickEventListener", "PageEvent"], "modifiers": ["public"]}}, {"id": 62178, "method_name": "onStickEvent", "class_name": "EventAppCompatActivity", "params": ["Event"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean onStickEvent(@NonNull Event event) {\n        return false;\n    }", "url": "https://raw.githubusercontent.com/wkp111/PageEventDemo/master/pageevent/src/main/java/com/wkp/pageevent/base/EventAppCompatActivity.java", "stars": "1", "class_props": {"extends": "AppCompatActivity", "implements": ["PageEventListener", "PageStickEventListener", "PageEvent"], "modifiers": ["public"]}}, {"id": 62179, "method_name": "parseConfigFile", "class_name": "InitConfigService", "params": ["String"], "throws": ["FileNotFoundException"], "modifiers": ["public"], "return_type": "InitConfigEntity", "snippet": "    public InitConfigEntity parseConfigFile(String filePath) throws FileNotFoundException {\n        File file = new File(filePath);\n        if (!file.exists() && !file.isFile()) {\n            throw new FileNotFoundException(filePath);\n        }\n        InitConfigEntity initConfigEntity = null;\n        Yaml yaml = new Yaml();\n        try {\n            initConfigEntity = yaml.loadAs(new FileInputStream(file), InitConfigEntity.class);\n        } catch (Exception e) {\n            // log.error(\"\u914d\u7f6e\u6587\u4ef6\u8bfb\u53d6\u5f02\u5e38\uff0c\u8bf7\u68c0\u67e5\u5404\u914d\u7f6e\u9879\u662f\u5426\u7b26\u5408\u683c\u5f0f\u8981\u6c42\");\n            log.error(\"An exception occurred while reading the configuration , please check whether each configuration item meets the format requirements\");\n        }\n        return initConfigEntity;\n    }", "url": "https://raw.githubusercontent.com/zeoio/fabric-toolkit/master/bcp-install-biz/src/main/java/com/cgb/bcpinstall/service/InitConfigService.java", "stars": "7", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 62180, "method_name": "isCorrectConfig", "class_name": "InitConfigService", "params": ["InitConfigEntity"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean isCorrectConfig(InitConfigEntity initConfigEntity) {\n        boolean isCorrect = true;\n\n        if (!isNotEmptyConfig(initConfigEntity)) {\n            // log.error(\"\u914d\u7f6e\u6587\u4ef6\u4e2d\u76f8\u5173\u914d\u7f6e\u9879\u4e3a\u7a7a\");\n            log.error(\"The value in the configuration  cannot be null\");\n            isCorrect = false;\n        }\n\n        if (!isCorrectFormat(initConfigEntity)) {\n            // log.error(\"\u914d\u7f6e\u6587\u4ef6\u4e2d\u76f8\u5173\u57df\u540d\u7684ip\u548c\u7aef\u53e3\u683c\u5f0f\u4e0d\u6b63\u786e\");\n            log.error(\"The ip\uff0c port and domain names is not valid\");\n            isCorrect = false;\n        }\n        if (!isCorrectDomain(initConfigEntity)) {\n            // log.error(\"\u914d\u7f6e\u6587\u4ef6\u4e2dorderer\u6216peer\u7684\u57df\u540d\u4e0d\u5339\u914d\");\n            log.error(\"The orderer or peer domain names is not matched\");\n            isCorrect = false;\n        }\n        if (!checkPeerConfig(initConfigEntity)) {\n            // log.error(\"\u914d\u7f6e\u6587\u4ef6\u4e2dpeer\u6ca1\u6709\u914d\u7f6e\u76f8\u5e94\u7684\u4ea4\u6613\u67e5\u8be2\u7aef\u53e3\");\n            log.error(\"No transaction query port about peer in the configuration \");\n            isCorrect = false;\n        }\n\n        return isCorrect;\n    }", "url": "https://raw.githubusercontent.com/zeoio/fabric-toolkit/master/bcp-install-biz/src/main/java/com/cgb/bcpinstall/service/InitConfigService.java", "stars": "7", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 62181, "method_name": "isCorrectDomain", "class_name": "InitConfigService", "params": ["InitConfigEntity"], "throws": null, "modifiers": ["private"], "return_type": "boolean", "snippet": "    private boolean isCorrectDomain(InitConfigEntity initConfigEntity) {\n        String ordererDomain = initConfigEntity.getOrdererDomain();\n        String peerDomain = initConfigEntity.getPeerDomain();\n        boolean peerMatch = initConfigEntity.getPeerHostConfig().keySet().stream().allMatch(i -> i.endsWith(peerDomain));\n        boolean ordererMatch = initConfigEntity.getOrdererHostConfig().keySet().stream().allMatch(i -> i.endsWith(ordererDomain));\n        return peerMatch && ordererMatch;\n    }", "url": "https://raw.githubusercontent.com/zeoio/fabric-toolkit/master/bcp-install-biz/src/main/java/com/cgb/bcpinstall/service/InitConfigService.java", "stars": "7", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 62182, "method_name": "checkPeerConfig", "class_name": "InitConfigService", "params": ["InitConfigEntity"], "throws": null, "modifiers": ["private"], "return_type": "boolean", "snippet": "    private boolean checkPeerConfig(InitConfigEntity configEntity) {\n        boolean isCorrect = true;\n        Map<String, String> peerConfigMap = configEntity.getPeerHostConfig();\n        Map<String, String> peerMetricConfigMap = configEntity.getMetricPortConfig();\n        for (String host : peerConfigMap.keySet()) {\n            if (peerMetricConfigMap.keySet().stream().noneMatch(i -> i.equals(host))) {\n                isCorrect = false;\n            }\n        }\n        return isCorrect;\n    }", "url": "https://raw.githubusercontent.com/zeoio/fabric-toolkit/master/bcp-install-biz/src/main/java/com/cgb/bcpinstall/service/InitConfigService.java", "stars": "7", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 62183, "method_name": "isNotEmptyConfig", "class_name": "InitConfigService", "params": ["InitConfigEntity"], "throws": null, "modifiers": ["private"], "return_type": "boolean", "snippet": "    private boolean isNotEmptyConfig(InitConfigEntity configEntity) {\n        boolean isCorrect = true;\n        if (StringUtils.isEmpty(configEntity.getNetwork())\n                || StringUtils.isEmpty(configEntity.getChannelName())\n                || StringUtils.isEmpty(configEntity.getOrgMSPID())\n                || StringUtils.isEmpty(configEntity.getOrgName())\n                || StringUtils.isEmpty(configEntity.getOrdererDomain())\n                || StringUtils.isEmpty(configEntity.getPeerDomain())) {\n            isCorrect = false;\n        }\n        if (CollectionUtils.isEmpty(configEntity.getOrdererHostConfig())\n                || CollectionUtils.isEmpty(configEntity.getPeerHostConfig())\n                || CollectionUtils.isEmpty(configEntity.getMetricPortConfig())) {\n            isCorrect = false;\n        }\n\n        if (configEntity.getOrdererHostConfig().entrySet().stream().anyMatch(i -> StringUtils.isEmpty(i.getValue()))) {\n            isCorrect = false;\n        }\n\n        if (configEntity.getPeerHostConfig().entrySet().stream().anyMatch(i -> StringUtils.isEmpty(i.getValue()))) {\n            isCorrect = false;\n        }\n\n        if (configEntity.getMetricPortConfig().entrySet().stream().anyMatch(i -> StringUtils.isEmpty(i.getValue()))) {\n            isCorrect = false;\n        }\n\n        return isCorrect;\n    }", "url": "https://raw.githubusercontent.com/zeoio/fabric-toolkit/master/bcp-install-biz/src/main/java/com/cgb/bcpinstall/service/InitConfigService.java", "stars": "7", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 62184, "method_name": "isCorrectFormat", "class_name": "InitConfigService", "params": ["InitConfigEntity"], "throws": null, "modifiers": ["private"], "return_type": "boolean", "snippet": "    private boolean isCorrectFormat(InitConfigEntity configEntity) {\n        Collection<String> peerIpPorts = configEntity.getPeerHostConfig().values();\n        if (!isCorrectFormat(peerIpPorts)) {\n            return false;\n        }\n        Collection<String> ordererIpPorts = configEntity.getOrdererHostConfig().values();\n        return isCorrectFormat(ordererIpPorts);\n    }", "url": "https://raw.githubusercontent.com/zeoio/fabric-toolkit/master/bcp-install-biz/src/main/java/com/cgb/bcpinstall/service/InitConfigService.java", "stars": "7", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 62185, "method_name": "isCorrectFormat", "class_name": "InitConfigService", "params": ["Collection<String>"], "throws": null, "modifiers": ["private"], "return_type": "boolean", "snippet": "    private boolean isCorrectFormat(Collection<String> ipPorts) {\n        for (String ipPort : ipPorts) {\n            if (ipPort.split(\":\").length != 2) {\n                return false;\n            }\n        }\n        return true;\n    }", "url": "https://raw.githubusercontent.com/zeoio/fabric-toolkit/master/bcp-install-biz/src/main/java/com/cgb/bcpinstall/service/InitConfigService.java", "stars": "7", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 62186, "method_name": "main", "class_name": "Demo04GenericInterface", "params": ["String"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void main(String[] args) {\n        //\u521b\u5efaGenericInterfaceImpl1\u5bf9\u8c61\n        GenericInterfaceImpl1 gi1 = new GenericInterfaceImpl1();\n        gi1.method(\"\u5b57\u7b26\u4e32\");\n\n        //\u521b\u5efaGenericInterfaceImpl2\u5bf9\u8c61\n        GenericInterfaceImpl2<Integer> gi2 = new GenericInterfaceImpl2<>();\n        gi2.method(10);\n\n        GenericInterfaceImpl2<Double> gi3 = new GenericInterfaceImpl2<>();\n        gi3.method(8.8);\n    }", "url": "https://raw.githubusercontent.com/liuminchao123/JavaWeb_Learning/master/02.%20java/Java/%E9%BB%91%E9%A9%AC%E6%95%99%E7%A8%8B/13.%E3%80%90Collection%E3%80%81%E6%B3%9B%E5%9E%8B%E3%80%91-%E7%AC%94%E8%AE%B0/code/02_CollectionAndReflect/src/com/itheima/demo03/Generic/Demo04GenericInterface.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 62187, "method_name": "checkTracingErrorStatus", "class_name": "ErrorHelper", "params": ["Context"], "throws": null, "modifiers": ["public", "static"], "return_type": "Collection<ErrorState>", "snippet": "\tpublic static Collection<ErrorState> checkTracingErrorStatus(Context context) {\n\t\tSet<ErrorState> errors = new HashSet<>();\n\n\t\tif (!context.getPackageManager().hasSystemFeature(PackageManager.FEATURE_BLUETOOTH_LE)) {\n\t\t\terrors.add(ErrorState.BLE_NOT_SUPPORTED);\n\t\t} else {\n\t\t\tfinal BluetoothAdapter bluetoothAdapter = BluetoothAdapter.getDefaultAdapter();\n\t\t\tif (bluetoothAdapter == null || !bluetoothAdapter.isEnabled()) {\n\t\t\t\terrors.add(ErrorState.BLE_DISABLED);\n\t\t\t}\n\t\t}\n\n\t\tPowerManager powerManager = (PowerManager) context.getSystemService(Context.POWER_SERVICE);\n\t\tboolean batteryOptimizationsDeactivated =\n\t\t\t\tpowerManager == null || powerManager.isIgnoringBatteryOptimizations(context.getPackageName());\n\t\tif (!batteryOptimizationsDeactivated) {\n\t\t\terrors.add(ErrorState.BATTERY_OPTIMIZER_ENABLED);\n\t\t}\n\n\t\tboolean locationPermissionGranted = ContextCompat.checkSelfPermission(context, Manifest.permission.ACCESS_FINE_LOCATION) ==\n\t\t\t\tPackageManager.PERMISSION_GRANTED;\n\t\tif (!locationPermissionGranted) {\n\t\t\terrors.add(ErrorState.MISSING_LOCATION_PERMISSION);\n\t\t}\n\n\t\tif (!LocationServiceUtil.isLocationEnabled(context)) {\n\t\t\terrors.add(ErrorState.LOCATION_SERVICE_DISABLED);\n\t\t}\n\n\t\tif (!AppConfigManager.getInstance(context).getLastSyncNetworkSuccess()) {\n\t\t\tErrorState syncError = SyncErrorState.getInstance().getSyncError();\n\t\t\tif (syncError == null) {\n\t\t\t\tLogger.w(TAG, \"lost sync error state\");\n\t\t\t\tsyncError = ErrorState.SYNC_ERROR_NETWORK;\n\t\t\t}\n\t\t\terrors.add(syncError);\n\t\t}\n\n\t\tif (!errors.contains(ErrorState.BLE_DISABLED)) {\n\t\t\tBluetoothServiceStatus bluetoothServiceStatus = BluetoothServiceStatus.getInstance(context);\n\t\t\tswitch (bluetoothServiceStatus.getAdvertiseStatus()) {\n\t\t\t\tcase BluetoothServiceStatus.ADVERTISE_OK:\n\t\t\t\t\t// ok\n\t\t\t\t\tbreak;\n\t\t\t\tcase AdvertiseCallback.ADVERTISE_FAILED_INTERNAL_ERROR:\n\t\t\t\tcase AdvertiseCallback.ADVERTISE_FAILED_TOO_MANY_ADVERTISERS:\n\t\t\t\t\terrors.add(ErrorState.BLE_INTERNAL_ERROR);\n\t\t\t\t\tbreak;\n\t\t\t\tcase AdvertiseCallback.ADVERTISE_FAILED_FEATURE_UNSUPPORTED:\n\t\t\t\t\terrors.add(ErrorState.BLE_NOT_SUPPORTED);\n\t\t\t\t\tbreak;\n\t\t\t\tcase AdvertiseCallback.ADVERTISE_FAILED_ALREADY_STARTED:\n\t\t\t\tcase AdvertiseCallback.ADVERTISE_FAILED_DATA_TOO_LARGE:\n\t\t\t\tdefault:\n\t\t\t\t\terrors.add(ErrorState.BLE_ADVERTISING_ERROR);\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\tswitch (bluetoothServiceStatus.getScanStatus()) {\n\t\t\t\tcase BluetoothServiceStatus.SCAN_OK:\n\t\t\t\t\t// ok\n\t\t\t\t\tbreak;\n\t\t\t\tcase ScanCallback.SCAN_FAILED_INTERNAL_ERROR:\n\t\t\t\t\terrors.add(ErrorState.BLE_INTERNAL_ERROR);\n\t\t\t\t\tbreak;\n\t\t\t\tcase ScanCallback.SCAN_FAILED_FEATURE_UNSUPPORTED:\n\t\t\t\t\terrors.add(ErrorState.BLE_NOT_SUPPORTED);\n\t\t\t\t\tbreak;\n\t\t\t\tcase ScanCallback.SCAN_FAILED_APPLICATION_REGISTRATION_FAILED:\n\t\t\t\tcase ScanCallback.SCAN_FAILED_ALREADY_STARTED:\n\t\t\t\tdefault:\n\t\t\t\t\terrors.add(ErrorState.BLE_SCANNER_ERROR);\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\treturn errors;\n\t}", "url": "https://raw.githubusercontent.com/DP-3T/dp3t-sdk-android/master-alpha/dp3t-sdk/sdk/src/main/java/org/dpppt/android/sdk/internal/ErrorHelper.java", "stars": "139", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 62188, "method_name": "get_id", "class_name": "Spit", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String get_id() {\n        return _id;\n    }", "url": "https://raw.githubusercontent.com/1127140426/tensquare/master/tensquare_spit/src/main/java/com/tensquare/spit/pojo/Spit.java", "stars": "34", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 62189, "method_name": "set_id", "class_name": "Spit", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void set_id(String _id) {\n        this._id = _id;\n    }", "url": "https://raw.githubusercontent.com/1127140426/tensquare/master/tensquare_spit/src/main/java/com/tensquare/spit/pojo/Spit.java", "stars": "34", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 62190, "method_name": "getContent", "class_name": "Spit", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getContent() {\n        return content;\n    }", "url": "https://raw.githubusercontent.com/1127140426/tensquare/master/tensquare_spit/src/main/java/com/tensquare/spit/pojo/Spit.java", "stars": "34", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 62191, "method_name": "setContent", "class_name": "Spit", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setContent(String content) {\n        this.content = content;\n    }", "url": "https://raw.githubusercontent.com/1127140426/tensquare/master/tensquare_spit/src/main/java/com/tensquare/spit/pojo/Spit.java", "stars": "34", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 62192, "method_name": "getPublishtime", "class_name": "Spit", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Date", "snippet": "    public Date getPublishtime() {\n        return publishtime;\n    }", "url": "https://raw.githubusercontent.com/1127140426/tensquare/master/tensquare_spit/src/main/java/com/tensquare/spit/pojo/Spit.java", "stars": "34", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 62193, "method_name": "setPublishtime", "class_name": "Spit", "params": ["Date"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setPublishtime(Date publishtime) {\n        this.publishtime = publishtime;\n    }", "url": "https://raw.githubusercontent.com/1127140426/tensquare/master/tensquare_spit/src/main/java/com/tensquare/spit/pojo/Spit.java", "stars": "34", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 62194, "method_name": "getUserid", "class_name": "Spit", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getUserid() {\n        return userid;\n    }", "url": "https://raw.githubusercontent.com/1127140426/tensquare/master/tensquare_spit/src/main/java/com/tensquare/spit/pojo/Spit.java", "stars": "34", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 62195, "method_name": "setUserid", "class_name": "Spit", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setUserid(String userid) {\n        this.userid = userid;\n    }", "url": "https://raw.githubusercontent.com/1127140426/tensquare/master/tensquare_spit/src/main/java/com/tensquare/spit/pojo/Spit.java", "stars": "34", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 62196, "method_name": "getNickname", "class_name": "Spit", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getNickname() {\n        return nickname;\n    }", "url": "https://raw.githubusercontent.com/1127140426/tensquare/master/tensquare_spit/src/main/java/com/tensquare/spit/pojo/Spit.java", "stars": "34", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 62197, "method_name": "setNickname", "class_name": "Spit", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setNickname(String nickname) {\n        this.nickname = nickname;\n    }", "url": "https://raw.githubusercontent.com/1127140426/tensquare/master/tensquare_spit/src/main/java/com/tensquare/spit/pojo/Spit.java", "stars": "34", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 62198, "method_name": "getVisits", "class_name": "Spit", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Integer", "snippet": "    public Integer getVisits() {\n        return visits;\n    }", "url": "https://raw.githubusercontent.com/1127140426/tensquare/master/tensquare_spit/src/main/java/com/tensquare/spit/pojo/Spit.java", "stars": "34", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 62199, "method_name": "setVisits", "class_name": "Spit", "params": ["Integer"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setVisits(Integer visits) {\n        this.visits = visits;\n    }", "url": "https://raw.githubusercontent.com/1127140426/tensquare/master/tensquare_spit/src/main/java/com/tensquare/spit/pojo/Spit.java", "stars": "34", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 62200, "method_name": "getThumbup", "class_name": "Spit", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Integer", "snippet": "    public Integer getThumbup() {\n        return thumbup;\n    }", "url": "https://raw.githubusercontent.com/1127140426/tensquare/master/tensquare_spit/src/main/java/com/tensquare/spit/pojo/Spit.java", "stars": "34", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 62201, "method_name": "setThumbup", "class_name": "Spit", "params": ["Integer"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setThumbup(Integer thumbup) {\n        this.thumbup = thumbup;\n    }", "url": "https://raw.githubusercontent.com/1127140426/tensquare/master/tensquare_spit/src/main/java/com/tensquare/spit/pojo/Spit.java", "stars": "34", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 62202, "method_name": "getShare", "class_name": "Spit", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Integer", "snippet": "    public Integer getShare() {\n        return share;\n    }", "url": "https://raw.githubusercontent.com/1127140426/tensquare/master/tensquare_spit/src/main/java/com/tensquare/spit/pojo/Spit.java", "stars": "34", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 62203, "method_name": "setShare", "class_name": "Spit", "params": ["Integer"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setShare(Integer share) {\n        this.share = share;\n    }", "url": "https://raw.githubusercontent.com/1127140426/tensquare/master/tensquare_spit/src/main/java/com/tensquare/spit/pojo/Spit.java", "stars": "34", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 62204, "method_name": "getComment", "class_name": "Spit", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Integer", "snippet": "    public Integer getComment() {\n        return comment;\n    }", "url": "https://raw.githubusercontent.com/1127140426/tensquare/master/tensquare_spit/src/main/java/com/tensquare/spit/pojo/Spit.java", "stars": "34", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 62205, "method_name": "setComment", "class_name": "Spit", "params": ["Integer"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setComment(Integer comment) {\n        this.comment = comment;\n    }", "url": "https://raw.githubusercontent.com/1127140426/tensquare/master/tensquare_spit/src/main/java/com/tensquare/spit/pojo/Spit.java", "stars": "34", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 62206, "method_name": "getState", "class_name": "Spit", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getState() {\n        return state;\n    }", "url": "https://raw.githubusercontent.com/1127140426/tensquare/master/tensquare_spit/src/main/java/com/tensquare/spit/pojo/Spit.java", "stars": "34", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 62207, "method_name": "setState", "class_name": "Spit", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setState(String state) {\n        this.state = state;\n    }", "url": "https://raw.githubusercontent.com/1127140426/tensquare/master/tensquare_spit/src/main/java/com/tensquare/spit/pojo/Spit.java", "stars": "34", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 62208, "method_name": "getParentid", "class_name": "Spit", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getParentid() {\n        return parentid;\n    }", "url": "https://raw.githubusercontent.com/1127140426/tensquare/master/tensquare_spit/src/main/java/com/tensquare/spit/pojo/Spit.java", "stars": "34", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 62209, "method_name": "setParentid", "class_name": "Spit", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setParentid(String parentid) {\n        this.parentid = parentid;\n    }", "url": "https://raw.githubusercontent.com/1127140426/tensquare/master/tensquare_spit/src/main/java/com/tensquare/spit/pojo/Spit.java", "stars": "34", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 62210, "method_name": "tryCaptureView", "class_name": "DraggableViewCallback", "params": ["View", "int"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean tryCaptureView(@NonNull View child, int pointerId) {\n        return true;\n    }", "url": "https://raw.githubusercontent.com/FanChael/MVVM/master/librarys/lib_refreshlayout/src/main/java/com/hl/lib_refreshlayout/test/DraggableViewCallback.java", "stars": "14", "class_props": {"extends": "ViewDragHelper", "implements": null, "modifiers": ["public"]}}, {"id": 62211, "method_name": "onViewPositionChanged", "class_name": "DraggableViewCallback", "params": ["View", "int", "int", "int", "int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onViewPositionChanged(@NonNull View changedView, int left, int top, int dx, int dy) {\n        super.onViewPositionChanged(changedView, left, top, dx, dy);\n        Log.e(\"test\", \"changedView=\" + changedView);\n        Log.e(\"test\", \"left=\" + left);\n        Log.e(\"test\", \"top=\" + top);\n        Log.e(\"test\", \"dx=\" + dx);\n        Log.e(\"test\", \"dy=\" + dy);\n    }", "url": "https://raw.githubusercontent.com/FanChael/MVVM/master/librarys/lib_refreshlayout/src/main/java/com/hl/lib_refreshlayout/test/DraggableViewCallback.java", "stars": "14", "class_props": {"extends": "ViewDragHelper", "implements": null, "modifiers": ["public"]}}, {"id": 62212, "method_name": "onViewReleased", "class_name": "DraggableViewCallback", "params": ["View", "float", "float"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onViewReleased(@NonNull View releasedChild, float xvel, float yvel) {\n        super.onViewReleased(releasedChild, xvel, yvel);\n    }", "url": "https://raw.githubusercontent.com/FanChael/MVVM/master/librarys/lib_refreshlayout/src/main/java/com/hl/lib_refreshlayout/test/DraggableViewCallback.java", "stars": "14", "class_props": {"extends": "ViewDragHelper", "implements": null, "modifiers": ["public"]}}, {"id": 62213, "method_name": "clampViewPositionHorizontal", "class_name": "DraggableViewCallback", "params": ["View", "int", "int"], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int clampViewPositionHorizontal(@NonNull View child, int left, int dx) {\n        // \u5c4f\u853d\u6389\u6c34\u5e73\u65b9\u5411\n        return 0;\n    }", "url": "https://raw.githubusercontent.com/FanChael/MVVM/master/librarys/lib_refreshlayout/src/main/java/com/hl/lib_refreshlayout/test/DraggableViewCallback.java", "stars": "14", "class_props": {"extends": "ViewDragHelper", "implements": null, "modifiers": ["public"]}}, {"id": 62214, "method_name": "clampViewPositionVertical", "class_name": "DraggableViewCallback", "params": ["View", "int", "int"], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int clampViewPositionVertical(@NonNull View child, int top, int dy) {\n        // \u5782\u76f4\u65b9\u5411\u6253\u5f00\n        return 1;\n    }", "url": "https://raw.githubusercontent.com/FanChael/MVVM/master/librarys/lib_refreshlayout/src/main/java/com/hl/lib_refreshlayout/test/DraggableViewCallback.java", "stars": "14", "class_props": {"extends": "ViewDragHelper", "implements": null, "modifiers": ["public"]}}, {"id": 62215, "method_name": "newInstance", "class_name": "FragmentShopsList", "params": ["boolean"], "throws": null, "modifiers": ["public", "static"], "return_type": "FragmentShopsList", "snippet": "        public static FragmentShopsList newInstance(boolean switchMade) {\n\n            FragmentShopsList fragment = new FragmentShopsList();\n            Bundle args = new Bundle();\n//            args.putParcelable(\"itemCat\",itemCategory);\n            args.putBoolean(\"switch\",switchMade);\n            fragment.setArguments(args);\n\n            return fragment;\n        }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/Lists/ShopsList/FragmentShopsList.java", "stars": "10", "class_props": {"extends": "Fragment", "implements": ["SwipeRefreshLayout", "NotifySort", "NotifySearch", "ViewHolderShopSmall", "ViewHolderSetLocationManually", "ViewHolderEmptyScreenListItem", "ViewHolderCreateShop"], "modifiers": ["public"]}}, {"id": 62216, "method_name": "onCreateView", "class_name": "FragmentShopsList", "params": ["LayoutInflater", "ViewGroup", "Bundle"], "throws": null, "modifiers": ["public"], "return_type": "View", "snippet": "        public View onCreateView(LayoutInflater inflater, ViewGroup container,\n                                 Bundle savedInstanceState) {\n\n            setRetainInstance(true);\n            View rootView = inflater.inflate(R.layout.fragment_shops_new, container, false);\n            ButterKnife.bind(this,rootView);\n\n\n            recyclerView = rootView.findViewById(R.id.recyclerView);\n            swipeContainer = rootView.findViewById(R.id.swipeContainer);\n            switchMade = getArguments().getBoolean(\"switch\");\n\n\n            Toolbar toolbar = rootView.findViewById(R.id.toolbar);\n            ((AppCompatActivity) getActivity()).setSupportActionBar(toolbar);\n\n\n//            toolbar.setTitleTextColor(ContextCompat.getColor(getActivity(), R.color.white));\n//            toolbar.setTitle(getString(R.string.app_name));\n\n\n\n\n    //\n\n            serviceName.setVisibility(View.VISIBLE);\n            serviceName.setText(PrefServiceConfig.getServiceName(getActivity()));\n\n\n\n            if(PrefGeneral.getMultiMarketMode(getActivity()) && PrefServiceConfig.getServiceName(getActivity())!=null)\n            {\n\n                buttonTryAgain.setText(\"Change Market\");\n                emptyScreenMessage.setText(\"\" +\n                        \"Uh .. oh .. no shops available at your location .. change your market ... and explore other markets !\");\n            }\n            else\n            {\n\n                emptyScreenMessage.setText(\"Uh .. oh .. no shops available at your location .. change your location ... and try again\");\n                buttonTryAgain.setText(\"Try Again\");\n            }\n\n\n\n\n            if(savedInstanceState==null && !switchMade)\n            {\n                // ensure that there is no swipe to right on first fetch\n//                    isbackPressed = true;\n\n                makeRefreshNetworkCall();\n                isSaved = true;\n            }\n\n\n\n            setupRecyclerView();\n            setupSwipeContainer();\n//            notifyDataset();\n\n\n            setupSlidingLayer();\n\n\n\n\n\n\n            if(!PrefLocation.isLocationSetByUser(getActivity()))\n            {\n                getActivity().startService(new Intent(getActivity(), LocationUpdateService.class));\n            }\n\n\n            setupLocalBroadcastManager();\n\n\n            return rootView;\n        }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/Lists/ShopsList/FragmentShopsList.java", "stars": "10", "class_props": {"extends": "Fragment", "implements": ["SwipeRefreshLayout", "NotifySort", "NotifySearch", "ViewHolderShopSmall", "ViewHolderSetLocationManually", "ViewHolderEmptyScreenListItem", "ViewHolderCreateShop"], "modifiers": ["public"]}}, {"id": 62217, "method_name": "setupLocalBroadcastManager", "class_name": "FragmentShopsList", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "        private void setupLocalBroadcastManager()\n        {\n\n\n            IntentFilter filter = new IntentFilter();\n\n            filter.addAction(UpdateServiceConfiguration.INTENT_ACTION_MARKET_CONFIG_FETCHED);\n            filter.addAction(LocationUpdateService.INTENT_ACTION_LOCATION_UPDATED);\n\n            LocalBroadcastManager.getInstance(getActivity()).registerReceiver(new BroadcastReceiver() {\n                @Override\n                public void onReceive(Context context, Intent intent) {\n\n\n                    if(getActivity()!=null)\n                    {\n                        getActivity().runOnUiThread(new Runnable() {\n                            @Override\n                            public void run() {\n\n                                serviceName.setVisibility(View.VISIBLE);\n                                serviceName.setText(PrefServiceConfig.getServiceName(getActivity()));\n\n                                makeRefreshNetworkCall();\n\n                            }\n                        });\n                    }\n\n\n                }\n            },filter);\n        }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/Lists/ShopsList/FragmentShopsList.java", "stars": "10", "class_props": {"extends": "Fragment", "implements": ["SwipeRefreshLayout", "NotifySort", "NotifySearch", "ViewHolderShopSmall", "ViewHolderSetLocationManually", "ViewHolderEmptyScreenListItem", "ViewHolderCreateShop"], "modifiers": ["public"]}}, {"id": 62218, "method_name": "setupSwipeContainer", "class_name": "FragmentShopsList", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "        private void setupSwipeContainer()\n        {\n            if(swipeContainer!=null) {\n\n                swipeContainer.setOnRefreshListener(this);\n                swipeContainer.setColorSchemeResources(android.R.color.holo_blue_bright,\n                        android.R.color.holo_green_light,\n                        android.R.color.holo_orange_light,\n                        android.R.color.holo_red_light);\n            }\n\n        }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/Lists/ShopsList/FragmentShopsList.java", "stars": "10", "class_props": {"extends": "Fragment", "implements": ["SwipeRefreshLayout", "NotifySort", "NotifySearch", "ViewHolderShopSmall", "ViewHolderSetLocationManually", "ViewHolderEmptyScreenListItem", "ViewHolderCreateShop"], "modifiers": ["public"]}}, {"id": 62219, "method_name": "sortClick", "class_name": "FragmentShopsList", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "            void sortClick()\n            {\n                slidingLayer.openLayer(true);\n        //        showToastMessage(\"Sort Clicked\");\n            }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/Lists/ShopsList/FragmentShopsList.java", "stars": "10", "class_props": {"extends": "Fragment", "implements": ["SwipeRefreshLayout", "NotifySort", "NotifySearch", "ViewHolderShopSmall", "ViewHolderSetLocationManually", "ViewHolderEmptyScreenListItem", "ViewHolderCreateShop"], "modifiers": ["public"]}}, {"id": 62220, "method_name": "setupSlidingLayer", "class_name": "FragmentShopsList", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void setupSlidingLayer()\n    {\n\n        ////slidingLayer.setShadowDrawable(R.drawable.sidebar_shadow);\n        //slidingLayer.setShadowSizeRes(R.dimen.shadow_size);\n\n        if(slidingLayer!=null)\n        {\n            slidingLayer.setChangeStateOnTap(true);\n            slidingLayer.setSlidingEnabled(true);\n//            slidingLayer.setPreviewOffsetDistance(15);\n            slidingLayer.setOffsetDistance(30);\n            slidingLayer.setStickTo(SlidingLayer.STICK_TO_RIGHT);\n\n            DisplayMetrics metrics = new DisplayMetrics();\n            getActivity().getWindowManager().getDefaultDisplay().getMetrics(metrics);\n\n            //RelativeLayout.LayoutParams layoutParams = new RelativeLayout.LayoutParams(250, ViewGroup.LayoutParams.MATCH_PARENT);\n\n            //slidingContents.setLayoutParams(layoutParams);\n\n            //slidingContents.setMinimumWidth(metrics.widthPixels-50);\n\n\n\n            if(getChildFragmentManager().findFragmentByTag(TAG_SLIDING)==null)\n            {\n//                System.out.println(\"Item Cat Simple : New Sliding Layer Loaded !\");\n                getChildFragmentManager()\n                        .beginTransaction()\n                        .replace(R.id.slidinglayerfragment,new SlidingLayerSortShops(),TAG_SLIDING)\n                        .commit();\n            }\n        }\n\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/Lists/ShopsList/FragmentShopsList.java", "stars": "10", "class_props": {"extends": "Fragment", "implements": ["SwipeRefreshLayout", "NotifySort", "NotifySearch", "ViewHolderShopSmall", "ViewHolderSetLocationManually", "ViewHolderEmptyScreenListItem", "ViewHolderCreateShop"], "modifiers": ["public"]}}, {"id": 62221, "method_name": "setupRecyclerView", "class_name": "FragmentShopsList", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void setupRecyclerView()\n        {\n            if(recyclerView == null)\n            {\n                return;\n            }\n\n\n\n\n\n            adapter = new Adapter(dataset,getActivity(),this);\n\n            recyclerView.setAdapter(adapter);\n\n//            layoutManager = new GridLayoutManager(getActivity(),1);\n\n\n            final LinearLayoutManager linearlayoutManager = new LinearLayoutManager(getActivity(),RecyclerView.VERTICAL,false);\n            recyclerView.setLayoutManager(linearlayoutManager);\n\n//            recyclerView.addItemDecoration(new EqualSpaceItemDecoration(1));\n\n\n\n//            recyclerView.addItemDecoration(\n//                    new DividerItemDecoration(getActivity(),DividerItemDecoration.VERTICAL)\n//            );\n\n\n//            recyclerView.addItemDecoration(\n//                    new DividerItemDecoration(getActivity(),DividerItemDecoration.HORIZONTAL_LIST)\n//            );\n\n//            itemCategoriesList.addItemDecoration(new DividerItemDecoration(this, DividerItemDecoration.VERTICAL_LIST));\n\n\n//            DisplayMetrics metrics = new DisplayMetrics();\n//            getActivity().getWindowManager().getDefaultDisplay().getMetrics(metrics);\n//\n//\n//            int spanCount = (int) (metrics.widthPixels/(230 * metrics.density));\n//\n//            if(spanCount==0){\n//                spanCount = 1;\n//            }\n//\n//            layoutManager.setSpanCount(spanCount);\n\n//            layoutManager.setSpanCount(metrics.widthPixels/350);\n\n            recyclerView.addOnScrollListener(new RecyclerView.OnScrollListener() {\n                @Override\n                public void onScrollStateChanged(RecyclerView recyclerView, int newState) {\n                    super.onScrollStateChanged(recyclerView, newState);\n\n                    if(linearlayoutManager.findLastVisibleItemPosition()==dataset.size())\n                    {\n                        // trigger fetch next page\n\n//                        if(dataset.size()== previous_position)\n//                        {\n//                            return;\n//                        }\n\n\n                        if(offset + limit > linearlayoutManager.findLastVisibleItemPosition())\n                        {\n                            return;\n                        }\n\n\n                        if((offset+limit)<=item_count)\n                        {\n                            offset = offset + limit;\n                            makeNetworkCall(false,false);\n                        }\n\n//                        previous_position = dataset.size();\n\n                    }\n                }\n            });\n        }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/Lists/ShopsList/FragmentShopsList.java", "stars": "10", "class_props": {"extends": "Fragment", "implements": ["SwipeRefreshLayout", "NotifySort", "NotifySearch", "ViewHolderShopSmall", "ViewHolderSetLocationManually", "ViewHolderEmptyScreenListItem", "ViewHolderCreateShop"], "modifiers": ["public"]}}, {"id": 62222, "method_name": "getItemCount", "class_name": "FragmentShopsList", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getItemCount()\n    {\n        return item_count;\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/Lists/ShopsList/FragmentShopsList.java", "stars": "10", "class_props": {"extends": "Fragment", "implements": ["SwipeRefreshLayout", "NotifySort", "NotifySearch", "ViewHolderShopSmall", "ViewHolderSetLocationManually", "ViewHolderEmptyScreenListItem", "ViewHolderCreateShop"], "modifiers": ["public"]}}, {"id": 62223, "method_name": "makeRefreshNetworkCall", "class_name": "FragmentShopsList", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "        private void makeRefreshNetworkCall() {\n\n            swipeContainer.post(new Runnable() {\n                @Override\n                public void run() {\n                    swipeContainer.setRefreshing(true);\n\n                    try {\n\n\n                        onRefresh();\n\n                    } catch (IllegalArgumentException ex)\n                    {\n                        ex.printStackTrace();\n\n                    }\n                }\n            });\n\n        }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/Lists/ShopsList/FragmentShopsList.java", "stars": "10", "class_props": {"extends": "Fragment", "implements": ["SwipeRefreshLayout", "NotifySort", "NotifySearch", "ViewHolderShopSmall", "ViewHolderSetLocationManually", "ViewHolderEmptyScreenListItem", "ViewHolderCreateShop"], "modifiers": ["public"]}}, {"id": 62224, "method_name": "onRefresh", "class_name": "FragmentShopsList", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "        public void onRefresh() {\n\n\n            makeNetworkCall(true,true);\n        }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/Lists/ShopsList/FragmentShopsList.java", "stars": "10", "class_props": {"extends": "Fragment", "implements": ["SwipeRefreshLayout", "NotifySort", "NotifySearch", "ViewHolderShopSmall", "ViewHolderSetLocationManually", "ViewHolderEmptyScreenListItem", "ViewHolderCreateShop"], "modifiers": ["public"]}}, {"id": 62225, "method_name": "makeNetworkCall", "class_name": "FragmentShopsList", "params": ["boolean", "boolean"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "        private void makeNetworkCall(final boolean clearDataset, boolean resetOffset)\n        {\n\n            if(resetOffset)\n            {\n                offset = 0;\n            }\n\n\n\n//            (double)UtilityGeneral.getFromSharedPrefFloat(UtilityGeneral.DELIVERY_RANGE_MAX_KEY)\n//            (double)UtilityGeneral.getFromSharedPrefFloat(UtilityGeneral.DELIVERY_RANGE_MIN_KEY),\n//                    (double)UtilityGeneral.getFromSharedPrefFloat(UtilityGeneral.PROXIMITY_KEY),\n\n\n\n            String current_sort = \"\";\n            current_sort = PrefSortShopsByCategory.getSort(getActivity()) + \" \" + PrefSortShopsByCategory.getAscending(getActivity());\n\n            Call<ShopEndPoint> callEndpoint = shopService.getShops(\n                    null,\n                    null,\n                    PrefLocation.getLatitude(getActivity()),\n                    PrefLocation.getLongitude(getActivity()),\n                    null, null, null,\n                    searchQuery,current_sort,limit,offset,false\n            );\n\n\n\n\n\n            emptyScreen.setVisibility(View.GONE);\n\n\n\n\n//            System.out.println(\"Lat : \" + PrefLocation.getLatitude(getActivity())\n//                                + \"\\nLon : \" + PrefLocation.getLongitude(getActivity()));\n\n\n\n\n\n            callEndpoint.enqueue(new Callback<ShopEndPoint>() {\n                @Override\n                public void onResponse(Call<ShopEndPoint> call, Response<ShopEndPoint> response) {\n\n                    if(isDestroyed)\n                    {\n                        return;\n                    }\n\n    //                dataset.clear();\n\n                    if(response.body()!=null)\n                    {\n\n                        if(clearDataset)\n                        {\n                            dataset.clear();\n//                            dataset.add(0, Highlights.getHighlightsCabRental());\n                        }\n\n                        dataset.addAll(response.body().getResults());\n\n\n                        if(response.body().getItemCount()!=null)\n                        {\n                            item_count = response.body().getItemCount();\n                        }\n\n\n\n                        boolean showCreateShop = MyApplication.getAppContext().getResources().getBoolean(R.bool.show_create_shop);\n\n\n\n                        if(response.body().getResults().size()==0)\n                        {\n                            dataset.add(0, new SetLocationManually());\n//                            emptyScreen.setVisibility(View.VISIBLE);\n\n\n\n                            User user = PrefLogin.getUser(getActivity());\n\n                            if(showCreateShop)\n                            {\n                                if(user!=null)\n                                {\n                                    if(user.getRole()==User.ROLE_END_USER_CODE)\n                                    {\n                                        dataset.add(new CreateShopData());\n                                    }\n                                }\n                                else\n                                {\n                                    dataset.add(new CreateShopData());\n                                }\n                            }\n\n\n\n\n                            if(PrefGeneral.getMultiMarketMode(getActivity()))\n                            {\n\n                                dataset.add(EmptyScreenDataListItem.getEmptyScreenShopsListMultiMarket());\n                            }\n                            else\n                            {\n\n\n                                dataset.add(EmptyScreenDataListItem.getEmptyScreenShopsListSingleMarket());\n                            }\n\n\n\n\n                        }\n                        else\n                        {\n                            if(dataset.size()>=1)\n                            {\n                                dataset.add(1, new SetLocationManually());\n\n\n\n                                if(showCreateShop)\n                                {\n                                    User user = PrefLogin.getUser(getActivity());\n\n                                    if(user!=null)\n                                    {\n                                        if(user.getRole()==User.ROLE_END_USER_CODE)\n                                        {\n                                            dataset.add(2, new CreateShopData());\n                                        }\n                                    }\n                                    else\n                                    {\n                                        dataset.add(2, new CreateShopData());\n                                    }\n                                }\n\n\n                            }\n                        }\n\n\n                        shopCountIndicator.setText(dataset.size() + \" out of \" + item_count + \" Shops\");\n\n                    }\n\n\n\n\n                    if(offset + limit >= item_count)\n                    {\n                        adapter.setLoadMore(false);\n                    }\n                    else\n                    {\n                        adapter.setLoadMore(true);\n                    }\n\n\n                    adapter.notifyDataSetChanged();\n\n                    swipeContainer.setRefreshing(false);\n\n                }\n\n                @Override\n                public void onFailure(Call<ShopEndPoint> call, Throwable t) {\n\n                    if(isDestroyed)\n                    {\n                        return;\n                    }\n\n                    dataset.clear();\n\n                    dataset.add(EmptyScreenDataFullScreen.getOffline());\n\n\n\n//                    emptyScreen.setVisibility(View.VISIBLE);\n\n\n                    adapter.notifyDataSetChanged();\n\n//                    showToastMessage(getString(R.string.network_request_failed));\n                    swipeContainer.setRefreshing(false);\n                }\n            });\n\n        }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/Lists/ShopsList/FragmentShopsList.java", "stars": "10", "class_props": {"extends": "Fragment", "implements": ["SwipeRefreshLayout", "NotifySort", "NotifySearch", "ViewHolderShopSmall", "ViewHolderSetLocationManually", "ViewHolderEmptyScreenListItem", "ViewHolderCreateShop"], "modifiers": ["public"]}}, {"id": 62226, "method_name": "tryAgainClick", "class_name": "FragmentShopsList", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "        private void tryAgainClick()\n        {\n\n            if(PrefGeneral.getMultiMarketMode(getActivity()))\n            {\n\n                if(getActivity() instanceof ShowFragment)\n                {\n                    ((ShowFragment) getActivity()).showProfileFragment(false);\n                }\n            }\n            else\n            {\n\n                makeRefreshNetworkCall();\n            }\n        }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/Lists/ShopsList/FragmentShopsList.java", "stars": "10", "class_props": {"extends": "Fragment", "implements": ["SwipeRefreshLayout", "NotifySort", "NotifySearch", "ViewHolderShopSmall", "ViewHolderSetLocationManually", "ViewHolderEmptyScreenListItem", "ViewHolderCreateShop"], "modifiers": ["public"]}}, {"id": 62227, "method_name": "buttonClick", "class_name": "FragmentShopsList", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void buttonClick(String url) {\n            tryAgainClick();\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/Lists/ShopsList/FragmentShopsList.java", "stars": "10", "class_props": {"extends": "Fragment", "implements": ["SwipeRefreshLayout", "NotifySort", "NotifySearch", "ViewHolderShopSmall", "ViewHolderSetLocationManually", "ViewHolderEmptyScreenListItem", "ViewHolderCreateShop"], "modifiers": ["public"]}}, {"id": 62228, "method_name": "showToastMessage", "class_name": "FragmentShopsList", "params": ["String"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "        private void showToastMessage(String message)\n        {\n            Toast.makeText(MyApplication.getAppContext(),message,Toast.LENGTH_SHORT).show();\n        }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/Lists/ShopsList/FragmentShopsList.java", "stars": "10", "class_props": {"extends": "Fragment", "implements": ["SwipeRefreshLayout", "NotifySort", "NotifySearch", "ViewHolderShopSmall", "ViewHolderSetLocationManually", "ViewHolderEmptyScreenListItem", "ViewHolderCreateShop"], "modifiers": ["public"]}}, {"id": 62229, "method_name": "onDestroyView", "class_name": "FragmentShopsList", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onDestroyView() {\n        super.onDestroyView();\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/Lists/ShopsList/FragmentShopsList.java", "stars": "10", "class_props": {"extends": "Fragment", "implements": ["SwipeRefreshLayout", "NotifySort", "NotifySearch", "ViewHolderShopSmall", "ViewHolderSetLocationManually", "ViewHolderEmptyScreenListItem", "ViewHolderCreateShop"], "modifiers": ["public"]}}, {"id": 62230, "method_name": "onDestroy", "class_name": "FragmentShopsList", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onDestroy() {\n        super.onDestroy();\n        isDestroyed = true;\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/Lists/ShopsList/FragmentShopsList.java", "stars": "10", "class_props": {"extends": "Fragment", "implements": ["SwipeRefreshLayout", "NotifySort", "NotifySearch", "ViewHolderShopSmall", "ViewHolderSetLocationManually", "ViewHolderEmptyScreenListItem", "ViewHolderCreateShop"], "modifiers": ["public"]}}, {"id": 62231, "method_name": "notifySortChanged", "class_name": "FragmentShopsList", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void notifySortChanged() {\n        makeRefreshNetworkCall();\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/Lists/ShopsList/FragmentShopsList.java", "stars": "10", "class_props": {"extends": "Fragment", "implements": ["SwipeRefreshLayout", "NotifySort", "NotifySearch", "ViewHolderShopSmall", "ViewHolderSetLocationManually", "ViewHolderEmptyScreenListItem", "ViewHolderCreateShop"], "modifiers": ["public"]}}, {"id": 62232, "method_name": "search", "class_name": "FragmentShopsList", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void search(final String searchString) {\n        searchQuery = searchString;\n        makeRefreshNetworkCall();\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/Lists/ShopsList/FragmentShopsList.java", "stars": "10", "class_props": {"extends": "Fragment", "implements": ["SwipeRefreshLayout", "NotifySort", "NotifySearch", "ViewHolderShopSmall", "ViewHolderSetLocationManually", "ViewHolderEmptyScreenListItem", "ViewHolderCreateShop"], "modifiers": ["public"]}}, {"id": 62233, "method_name": "endSearchMode", "class_name": "FragmentShopsList", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void endSearchMode() {\n        searchQuery = null;\n        makeRefreshNetworkCall();\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/Lists/ShopsList/FragmentShopsList.java", "stars": "10", "class_props": {"extends": "Fragment", "implements": ["SwipeRefreshLayout", "NotifySort", "NotifySearch", "ViewHolderShopSmall", "ViewHolderSetLocationManually", "ViewHolderEmptyScreenListItem", "ViewHolderCreateShop"], "modifiers": ["public"]}}, {"id": 62234, "method_name": "onResume", "class_name": "FragmentShopsList", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onResume() {\n        super.onResume();\n\n        isDestroyed = false;\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/Lists/ShopsList/FragmentShopsList.java", "stars": "10", "class_props": {"extends": "Fragment", "implements": ["SwipeRefreshLayout", "NotifySort", "NotifySearch", "ViewHolderShopSmall", "ViewHolderSetLocationManually", "ViewHolderEmptyScreenListItem", "ViewHolderCreateShop"], "modifiers": ["public"]}}, {"id": 62235, "method_name": "listItemClick", "class_name": "FragmentShopsList", "params": ["Shop", "int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void listItemClick(Shop shop, int position) {\n\n        PrefShopHome.saveShop(shop,getActivity());\n        Intent intent = new Intent(getActivity(), ItemsInShopByCat.class);\n        startActivity(intent);\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/Lists/ShopsList/FragmentShopsList.java", "stars": "10", "class_props": {"extends": "Fragment", "implements": ["SwipeRefreshLayout", "NotifySort", "NotifySearch", "ViewHolderShopSmall", "ViewHolderSetLocationManually", "ViewHolderEmptyScreenListItem", "ViewHolderCreateShop"], "modifiers": ["public"]}}, {"id": 62236, "method_name": "editClick", "class_name": "FragmentShopsList", "params": ["Shop", "int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void editClick(Shop shop, int position) {\n\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/Lists/ShopsList/FragmentShopsList.java", "stars": "10", "class_props": {"extends": "Fragment", "implements": ["SwipeRefreshLayout", "NotifySort", "NotifySearch", "ViewHolderShopSmall", "ViewHolderSetLocationManually", "ViewHolderEmptyScreenListItem", "ViewHolderCreateShop"], "modifiers": ["public"]}}, {"id": 62237, "method_name": "changeLocationClick", "class_name": "FragmentShopsList", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void changeLocationClick() {\n\n        Intent intent = null;\n\n\n        if(getResources().getBoolean(R.bool.use_google_maps))\n        {\n            intent = new Intent(getActivity(), GooglePlacePicker.class);\n        }\n        else\n        {\n            intent = new Intent(getActivity(), PickLocation.class);\n        }\n\n\n        intent.putExtra(\"lat_dest\",PrefLocation.getLatitude(getActivity()));\n        intent.putExtra(\"lon_dest\",PrefLocation.getLongitude(getActivity()));\n        startActivityForResult(intent,3);\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/Lists/ShopsList/FragmentShopsList.java", "stars": "10", "class_props": {"extends": "Fragment", "implements": ["SwipeRefreshLayout", "NotifySort", "NotifySearch", "ViewHolderShopSmall", "ViewHolderSetLocationManually", "ViewHolderEmptyScreenListItem", "ViewHolderCreateShop"], "modifiers": ["public"]}}, {"id": 62238, "method_name": "onActivityResult", "class_name": "FragmentShopsList", "params": ["int", "int", "Intent"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onActivityResult(int requestCode, int resultCode, @Nullable Intent data) {\n        super.onActivityResult(requestCode, resultCode, data);\n\n\n\n        if(requestCode==3 && resultCode==6)\n        {\n            if(data!=null)\n            {\n            }\n\n\n\n            PrefLocation.saveLatLonCurrent(data.getDoubleExtra(\"lat_dest\",0.0),data.getDoubleExtra(\"lon_dest\",0.0),\n                    getActivity());\n\n            PrefLocation.setLocationSetByUser(true,getActivity());\n\n            makeRefreshNetworkCall();\n\n        }\n        else if (requestCode==57121)\n        {\n            makeRefreshNetworkCall();\n        }\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/Lists/ShopsList/FragmentShopsList.java", "stars": "10", "class_props": {"extends": "Fragment", "implements": ["SwipeRefreshLayout", "NotifySort", "NotifySearch", "ViewHolderShopSmall", "ViewHolderSetLocationManually", "ViewHolderEmptyScreenListItem", "ViewHolderCreateShop"], "modifiers": ["public"]}}, {"id": 62239, "method_name": "listItemClick", "class_name": "FragmentShopsList", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void listItemClick() {\n\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/Lists/ShopsList/FragmentShopsList.java", "stars": "10", "class_props": {"extends": "Fragment", "implements": ["SwipeRefreshLayout", "NotifySort", "NotifySearch", "ViewHolderShopSmall", "ViewHolderSetLocationManually", "ViewHolderEmptyScreenListItem", "ViewHolderCreateShop"], "modifiers": ["public"]}}, {"id": 62240, "method_name": "chinaToUnicode", "class_name": "FontUtil", "params": ["String"], "throws": null, "modifiers": ["public", "static"], "return_type": "String", "snippet": "    public static String chinaToUnicode(String str) {\n        String result = \"\";\n        for (int i = 0; i < str.length(); i++) {\n            int chr1 = str.charAt(i);\n            if (chr1 >= 19968 && chr1 <= 171941) {\n                result += \"\\\\u\" + Integer.toHexString(chr1);\n            } else {\n                result += str.charAt(i);\n            }\n        }\n        return result;\n    }", "url": "https://raw.githubusercontent.com/buhuaqi/baidu-index/master/src/main/java/com/baidu/index/utils/FontUtil.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 62241, "method_name": "isChinese", "class_name": "FontUtil", "params": ["char"], "throws": null, "modifiers": ["public", "static"], "return_type": "boolean", "snippet": "    public static boolean isChinese(char c) {\n        Character.UnicodeBlock ub = Character.UnicodeBlock.of(c);\n        if (ub == Character.UnicodeBlock.CJK_UNIFIED_IDEOGRAPHS\n                || ub == Character.UnicodeBlock.CJK_COMPATIBILITY_IDEOGRAPHS\n                || ub == Character.UnicodeBlock.CJK_UNIFIED_IDEOGRAPHS_EXTENSION_A\n                || ub == Character.UnicodeBlock.GENERAL_PUNCTUATION\n                || ub == Character.UnicodeBlock.CJK_SYMBOLS_AND_PUNCTUATION\n                || ub == Character.UnicodeBlock.HALFWIDTH_AND_FULLWIDTH_FORMS) {\n            return true;\n        }\n        return false;\n    }", "url": "https://raw.githubusercontent.com/buhuaqi/baidu-index/master/src/main/java/com/baidu/index/utils/FontUtil.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 62242, "method_name": "decodeUnicode", "class_name": "FontUtil", "params": ["String"], "throws": null, "modifiers": ["public", "static"], "return_type": "String", "snippet": "    public static String decodeUnicode(final String unicode) {\n        StringBuffer string = new StringBuffer();\n\n        String[] hex = unicode.split(\"\\\\\\\\u\");\n\n        for (int i = 0; i < hex.length; i++) {\n\n            try {\n                // \u6c49\u5b57\u8303\u56f4 \\u4e00-\\u9fa5 (\u4e2d\u6587)\n                if (hex[i].length() >= 4) {\n                    String chinese = hex[i].substring(0, 4);\n                    try {\n                        int chr = Integer.parseInt(chinese, 16);\n                        boolean isChinese = isChinese((char) chr);\n                        //\u8f6c\u5316\u6210\u529f\uff0c\u5224\u65ad\u662f\u5426\u5728  \u6c49\u5b57\u8303\u56f4\u5185\n                        if (isChinese) {\n                            // \u8ffd\u52a0\u6210string\n                            string.append((char) chr);\n                            //\u5e76\u4e14\u8ffd\u52a0  \u540e\u9762\u7684\u5b57\u7b26\n                            String behindString = hex[i].substring(4);\n                            string.append(behindString);\n                        } else {\n                            string.append(hex[i]);\n                        }\n                    } catch (NumberFormatException e1) {\n                        string.append(hex[i]);\n                    }\n\n                } else {\n                    string.append(hex[i]);\n                }\n            } catch (NumberFormatException e) {\n                string.append(hex[i]);\n            }\n        }\n\n        return string.toString();\n    }", "url": "https://raw.githubusercontent.com/buhuaqi/baidu-index/master/src/main/java/com/baidu/index/utils/FontUtil.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 62243, "method_name": "processCommand", "class_name": "RegisterCommand", "params": ["Emulator<?>", "GdbStub", "String"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean processCommand(Emulator<?> emulator, GdbStub stub, String command) {\n        Unicorn unicorn = emulator.getUnicorn();\n        if (command.startsWith(\"p\")) {\n            int reg = Integer.parseInt(command.substring(1), 16);\n            long val = readRegister(unicorn, stub, reg);\n            if (emulator.is32Bit()) {\n                stub.makePacketAndSend(String.format(\"%08x\", Integer.reverseBytes((int) (val & 0xffffffffL))));\n            } else {\n                stub.makePacketAndSend(String.format(\"%016x\", Long.reverseBytes(val)));\n            }\n            return true;\n        } else {\n            int reg = Integer.parseInt(command.substring(1, command.indexOf('=')), 16);\n            long val = Long.parseLong(command.substring(command.indexOf('=') +  1), 16);\n            writeRegister(emulator, unicorn, stub, reg, val);\n            stub.makePacketAndSend(\"OK\");\n            return true;\n        }\n    }", "url": "https://raw.githubusercontent.com/wmm1996528/unidbg_douyin10/master/src/main/java/com/github/unidbg/debugger/gdb/RegisterCommand.java", "stars": "16", "class_props": {"extends": null, "implements": ["GdbStubCommand"], "modifiers": []}}, {"id": 62244, "method_name": "readRegister", "class_name": "RegisterCommand", "params": ["Unicorn", "GdbStub", "int"], "throws": null, "modifiers": ["private"], "return_type": "long", "snippet": "    private long readRegister(Unicorn unicorn, GdbStub stub, int reg) {\n        final int index;\n        if (reg >= 0 && reg < stub.registers.length) {\n            index = stub.registers[reg];\n        } else if(reg == 0x18) { // for arm32\n            index = ArmConst.UC_ARM_REG_FP;\n        } else if(reg == 0x19) { // for arm32\n            index = ArmConst.UC_ARM_REG_CPSR;\n        } else {\n            index = -1;\n        }\n\n        if (index != -1) {\n            return ((Number) unicorn.reg_read(index)).longValue();\n        } else {\n            return 0;\n        }\n    }", "url": "https://raw.githubusercontent.com/wmm1996528/unidbg_douyin10/master/src/main/java/com/github/unidbg/debugger/gdb/RegisterCommand.java", "stars": "16", "class_props": {"extends": null, "implements": ["GdbStubCommand"], "modifiers": []}}, {"id": 62245, "method_name": "writeRegister", "class_name": "RegisterCommand", "params": ["Emulator<?>", "Unicorn", "GdbStub", "int", "long"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void writeRegister(Emulator<?> emulator, Unicorn unicorn, GdbStub stub, int reg, long val) {\n        if (reg >= 0 && reg < stub.registers.length) {\n            if (emulator.is32Bit()) {\n                unicorn.reg_write(stub.registers[reg], (int) (val & 0xffffffffL));\n            } else {\n                unicorn.reg_write(stub.registers[reg], val);\n            }\n        } else if (reg == 0x19) { // for arm32\n            unicorn.reg_write(ArmConst.UC_ARM_REG_CPSR, Integer.reverseBytes((int) (val & 0xffffffffL)));\n        }\n    }", "url": "https://raw.githubusercontent.com/wmm1996528/unidbg_douyin10/master/src/main/java/com/github/unidbg/debugger/gdb/RegisterCommand.java", "stars": "16", "class_props": {"extends": null, "implements": ["GdbStubCommand"], "modifiers": []}}, {"id": 62246, "method_name": "getCityId", "class_name": "AddressItem", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getCityId()\n    {\n        return cityId;\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/model/param/address/AddressItem.java", "stars": "12", "class_props": {"extends": "AddressBase", "implements": null, "modifiers": ["public"]}}, {"id": 62247, "method_name": "setCityId", "class_name": "AddressItem", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setCityId( int cityId )\n    {\n        this.cityId = cityId;\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/model/param/address/AddressItem.java", "stars": "12", "class_props": {"extends": "AddressBase", "implements": null, "modifiers": ["public"]}}, {"id": 62248, "method_name": "getAddressCity", "class_name": "AddressItem", "params": [], "throws": null, "modifiers": ["public"], "return_type": "AddressCity", "snippet": "    public AddressCity getAddressCity()\n    {\n        return addressCity;\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/model/param/address/AddressItem.java", "stars": "12", "class_props": {"extends": "AddressBase", "implements": null, "modifiers": ["public"]}}, {"id": 62249, "method_name": "setAddressCity", "class_name": "AddressItem", "params": ["AddressCity"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setAddressCity( AddressCity addressCity )\n    {\n        this.addressCity = addressCity;\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/model/param/address/AddressItem.java", "stars": "12", "class_props": {"extends": "AddressBase", "implements": null, "modifiers": ["public"]}}, {"id": 62250, "method_name": "getFieldOrder", "class_name": "IFReq64", "params": [], "throws": null, "modifiers": ["protected"], "return_type": "List<String>", "snippet": "    protected List<String> getFieldOrder() {\n        return Arrays.asList(\"ifrn_name\", \"ifr_ifru\");\n    }", "url": "https://raw.githubusercontent.com/wmm1996528/unidbg_douyin10/master/src/main/java/com/github/unidbg/linux/struct/IFReq64.java", "stars": "16", "class_props": {"extends": "IFReq", "implements": null, "modifiers": ["public"]}}, {"id": 62251, "method_name": "result", "class_name": "ApiResult", "params": ["boolean"], "throws": null, "modifiers": ["public", "static"], "return_type": "ApiResult<Boolean>", "snippet": "    public static ApiResult<Boolean> result(boolean flag) {\n        if (flag) {\n            return ok();\n        }\n        return fail();\n    }", "url": "https://raw.githubusercontent.com/geekidea/spring-cloud-plus/master/scp-common/scp-common-core/src/main/java/io/geekidea/cloud/common/core/api/ApiResult.java", "stars": "22", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 62252, "method_name": "result", "class_name": "ApiResult", "params": ["ApiCode"], "throws": null, "modifiers": ["public", "static"], "return_type": "ApiResult<Boolean>", "snippet": "    public static ApiResult<Boolean> result(ApiCode apiCode) {\n        return result(apiCode, null);\n    }", "url": "https://raw.githubusercontent.com/geekidea/spring-cloud-plus/master/scp-common/scp-common-core/src/main/java/io/geekidea/cloud/common/core/api/ApiResult.java", "stars": "22", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 62253, "method_name": "result", "class_name": "ApiResult", "params": ["ApiCode", "T"], "throws": null, "modifiers": ["public", "static"], "return_type": "ApiResult<T>", "snippet": "    public static <T> ApiResult<T> result(ApiCode apiCode, T data) {\n        return result(apiCode, null, data);\n    }", "url": "https://raw.githubusercontent.com/geekidea/spring-cloud-plus/master/scp-common/scp-common-core/src/main/java/io/geekidea/cloud/common/core/api/ApiResult.java", "stars": "22", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 62254, "method_name": "result", "class_name": "ApiResult", "params": ["ApiCode", "String", "T"], "throws": null, "modifiers": ["public", "static"], "return_type": "ApiResult<T>", "snippet": "    public static <T> ApiResult<T> result(ApiCode apiCode, String message, T data) {\n        boolean success = false;\n        if (apiCode.getCode() == ApiCode.SUCCESS.getCode()) {\n            success = true;\n        }\n        String apiMessage = apiCode.getMessage();\n        if (StringUtils.isNotBlank(apiMessage)) {\n            message = apiMessage;\n        }\n        return (ApiResult<T>) ApiResult.builder()\n                .code(apiCode.getCode())\n                .message(message)\n                .data(data)\n                .success(success)\n                .time(new Date())\n                .build();\n    }", "url": "https://raw.githubusercontent.com/geekidea/spring-cloud-plus/master/scp-common/scp-common-core/src/main/java/io/geekidea/cloud/common/core/api/ApiResult.java", "stars": "22", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 62255, "method_name": "ok", "class_name": "ApiResult", "params": [], "throws": null, "modifiers": ["public", "static"], "return_type": "ApiResult<Boolean>", "snippet": "    public static ApiResult<Boolean> ok() {\n        return ok(null);\n    }", "url": "https://raw.githubusercontent.com/geekidea/spring-cloud-plus/master/scp-common/scp-common-core/src/main/java/io/geekidea/cloud/common/core/api/ApiResult.java", "stars": "22", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 62256, "method_name": "ok", "class_name": "ApiResult", "params": ["T"], "throws": null, "modifiers": ["public", "static"], "return_type": "ApiResult<T>", "snippet": "    public static <T> ApiResult<T> ok(T data) {\n        return result(ApiCode.SUCCESS, data);\n    }", "url": "https://raw.githubusercontent.com/geekidea/spring-cloud-plus/master/scp-common/scp-common-core/src/main/java/io/geekidea/cloud/common/core/api/ApiResult.java", "stars": "22", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 62257, "method_name": "ok", "class_name": "ApiResult", "params": ["T", "String"], "throws": null, "modifiers": ["public", "static"], "return_type": "ApiResult<T>", "snippet": "    public static <T> ApiResult<T> ok(T data, String message) {\n        return result(ApiCode.SUCCESS, message, data);\n    }", "url": "https://raw.githubusercontent.com/geekidea/spring-cloud-plus/master/scp-common/scp-common-core/src/main/java/io/geekidea/cloud/common/core/api/ApiResult.java", "stars": "22", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 62258, "method_name": "okMap", "class_name": "ApiResult", "params": ["String", "Object"], "throws": null, "modifiers": ["public", "static"], "return_type": "ApiResult<Map>", "snippet": "    public static ApiResult<Map<String, Object>> okMap(String key, Object value) {\n        Map<String, Object> map = new HashMap<>(1);\n        map.put(key, value);\n        return ok(map);\n    }", "url": "https://raw.githubusercontent.com/geekidea/spring-cloud-plus/master/scp-common/scp-common-core/src/main/java/io/geekidea/cloud/common/core/api/ApiResult.java", "stars": "22", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 62259, "method_name": "fail", "class_name": "ApiResult", "params": ["ApiCode"], "throws": null, "modifiers": ["public", "static"], "return_type": "ApiResult<Boolean>", "snippet": "    public static ApiResult<Boolean> fail(ApiCode apiCode) {\n        return result(apiCode, null);\n    }", "url": "https://raw.githubusercontent.com/geekidea/spring-cloud-plus/master/scp-common/scp-common-core/src/main/java/io/geekidea/cloud/common/core/api/ApiResult.java", "stars": "22", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 62260, "method_name": "fail", "class_name": "ApiResult", "params": ["String"], "throws": null, "modifiers": ["public", "static"], "return_type": "ApiResult<String>", "snippet": "    public static ApiResult<String> fail(String message) {\n        return result(ApiCode.FAIL, message, null);\n\n    }", "url": "https://raw.githubusercontent.com/geekidea/spring-cloud-plus/master/scp-common/scp-common-core/src/main/java/io/geekidea/cloud/common/core/api/ApiResult.java", "stars": "22", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 62261, "method_name": "fail", "class_name": "ApiResult", "params": ["ApiCode", "T"], "throws": null, "modifiers": ["public", "static"], "return_type": "ApiResult<T>", "snippet": "    public static <T> ApiResult<T> fail(ApiCode apiCode, T data) {\n        if (ApiCode.SUCCESS == apiCode) {\n            throw new RuntimeException(\"\u5931\u8d25\u7ed3\u679c\u72b6\u6001\u7801\u4e0d\u80fd\u4e3a\" + ApiCode.SUCCESS.getCode());\n        }\n        return result(apiCode, data);\n\n    }", "url": "https://raw.githubusercontent.com/geekidea/spring-cloud-plus/master/scp-common/scp-common-core/src/main/java/io/geekidea/cloud/common/core/api/ApiResult.java", "stars": "22", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 62262, "method_name": "fail", "class_name": "ApiResult", "params": ["Integer", "String"], "throws": null, "modifiers": ["public", "static"], "return_type": "ApiResult<String>", "snippet": "    public static ApiResult<String> fail(Integer errorCode, String message) {\n        return new ApiResult<String>()\n                .setSuccess(false)\n                .setCode(errorCode)\n                .setMessage(message);\n    }", "url": "https://raw.githubusercontent.com/geekidea/spring-cloud-plus/master/scp-common/scp-common-core/src/main/java/io/geekidea/cloud/common/core/api/ApiResult.java", "stars": "22", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 62263, "method_name": "fail", "class_name": "ApiResult", "params": ["String", "Object"], "throws": null, "modifiers": ["public", "static"], "return_type": "ApiResult<Map>", "snippet": "    public static ApiResult<Map<String, Object>> fail(String key, Object value) {\n        Map<String, Object> map = new HashMap<>(1);\n        map.put(key, value);\n        return result(ApiCode.FAIL, map);\n    }", "url": "https://raw.githubusercontent.com/geekidea/spring-cloud-plus/master/scp-common/scp-common-core/src/main/java/io/geekidea/cloud/common/core/api/ApiResult.java", "stars": "22", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 62264, "method_name": "fail", "class_name": "ApiResult", "params": [], "throws": null, "modifiers": ["public", "static"], "return_type": "ApiResult", "snippet": "    public static ApiResult fail() {\n        return fail(ApiCode.FAIL);\n    }", "url": "https://raw.githubusercontent.com/geekidea/spring-cloud-plus/master/scp-common/scp-common-core/src/main/java/io/geekidea/cloud/common/core/api/ApiResult.java", "stars": "22", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 62265, "method_name": "fail", "class_name": "ApiResult", "params": ["T"], "throws": null, "modifiers": ["public", "static"], "return_type": "ApiResult<T>", "snippet": "    public static <T> ApiResult<T> fail(T t) {\n        return new ApiResult<T>().setCode(ApiCode.FAIL.getCode()).setMessage(ApiCode.FAIL.getMessage());\n    }", "url": "https://raw.githubusercontent.com/geekidea/spring-cloud-plus/master/scp-common/scp-common-core/src/main/java/io/geekidea/cloud/common/core/api/ApiResult.java", "stars": "22", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 62266, "method_name": "getRGBData", "class_name": "ImageUtil", "params": ["File"], "throws": null, "modifiers": ["public", "static"], "return_type": "ImageInfo", "snippet": "    public static ImageInfo getRGBData(File file) {\n        if (file == null)\n            return null;\n        ImageInfo imageInfo;\n        try {\n            //\u5c06\u56fe\u7247\u6587\u4ef6\u52a0\u8f7d\u5230\u5185\u5b58\u7f13\u51b2\u533a\n            BufferedImage image = ImageIO.read(file);\n            imageInfo = bufferedImage2ImageInfo(image);\n        } catch (IOException e) {\n            e.printStackTrace();\n            return null;\n        }\n        return imageInfo;\n    }", "url": "https://raw.githubusercontent.com/ck003/face_recognition/master/src/main/java/me/kyriechen/face_recognition/utils/ImageUtil.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 62267, "method_name": "getRGBData", "class_name": "ImageUtil", "params": ["InputStream"], "throws": null, "modifiers": ["public", "static"], "return_type": "ImageInfo", "snippet": "    public static ImageInfo getRGBData(InputStream input) {\n        if (input == null)\n            return null;\n        ImageInfo imageInfo;\n        try {\n            BufferedImage image = ImageIO.read(input);\n            imageInfo = bufferedImage2ImageInfo(image);\n        } catch (IOException e) {\n            return null;\n        } finally {\n            if (input != null) {\n                try {\n                    input.close();\n                } catch (IOException e) {\n                    e.printStackTrace();\n                }\n            }\n        }\n\n\n        return imageInfo;\n    }", "url": "https://raw.githubusercontent.com/ck003/face_recognition/master/src/main/java/me/kyriechen/face_recognition/utils/ImageUtil.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 62268, "method_name": "bufferedImage2ImageInfo", "class_name": "ImageUtil", "params": ["BufferedImage"], "throws": null, "modifiers": ["public", "static"], "return_type": "ImageInfo", "snippet": "    public static ImageInfo bufferedImage2ImageInfo(BufferedImage image) {\n        ImageInfo imageInfo = new ImageInfo();\n        int width = image.getWidth();\n        int height = image.getHeight();\n        // \u4f7f\u56fe\u7247\u5c45\u4e2d\n        width = width & (~3);\n        height = height & (~3);\n        imageInfo.width = width;\n        imageInfo.height = height;\n        //\u6839\u636e\u539f\u56fe\u7247\u4fe1\u606f\u65b0\u5efa\u4e00\u4e2a\u56fe\u7247\u7f13\u51b2\u533a\n        BufferedImage resultImage = new BufferedImage(width, height, image.getType());\n        //\u5f97\u5230\u539f\u56fe\u7684rgb\u50cf\u7d20\u77e9\u9635\n        int[] rgb = image.getRGB(0, 0, width, height, null, 0, width);\n        //\u5c06\u50cf\u7d20\u77e9\u9635 \u7ed8\u5236\u5230\u65b0\u7684\u56fe\u7247\u7f13\u51b2\u533a\u4e2d\n        resultImage.setRGB(0, 0, width, height, rgb, 0, width);\n        //\u8fdb\u884c\u6570\u636e\u683c\u5f0f\u5316\u4e3a\u53ef\u7528\u6570\u636e\n        BufferedImage dstImage = new BufferedImage(width, height, BufferedImage.TYPE_3BYTE_BGR);\n        if (resultImage.getType() != BufferedImage.TYPE_3BYTE_BGR) {\n            ColorSpace cs = ColorSpace.getInstance(ColorSpace.CS_LINEAR_RGB);\n            ColorConvertOp colorConvertOp = new ColorConvertOp(cs, dstImage.createGraphics().getRenderingHints());\n            colorConvertOp.filter(resultImage, dstImage);\n        } else {\n            dstImage = resultImage;\n        }\n\n        //\u83b7\u53d6rgb\u6570\u636e\n        imageInfo.rgbData = ((DataBufferByte) (dstImage.getRaster().getDataBuffer())).getData();\n        return imageInfo;\n    }", "url": "https://raw.githubusercontent.com/ck003/face_recognition/master/src/main/java/me/kyriechen/face_recognition/utils/ImageUtil.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 62269, "method_name": "onCreate", "class_name": "app", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onCreate() {\n        super.onCreate();\n        Utils.setAppContext(getApplicationContext());\n        sRetrofitServices = DaggerIRetrofitServices.create();\n\n    }", "url": "https://raw.githubusercontent.com/idanapp/IdanPlusPlus/master/app/src/main/java/com/example/idan/plusplus/app.java", "stars": "9", "class_props": {"extends": "Application", "implements": null, "modifiers": ["public"]}}, {"id": 62270, "method_name": "attachBaseContext", "class_name": "app", "params": ["Context"], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void attachBaseContext(Context base) {\n        localeManager = new LocaleManager(base);\n        localeManager.setNewLocale(base,\"iw\");\n        super.attachBaseContext(localeManager.setLocale(base));\n        Log.d(TAG, \"attachBaseContext\");\n       // ACRA.init(this);\n    }", "url": "https://raw.githubusercontent.com/idanapp/IdanPlusPlus/master/app/src/main/java/com/example/idan/plusplus/app.java", "stars": "9", "class_props": {"extends": "Application", "implements": null, "modifiers": ["public"]}}, {"id": 62271, "method_name": "onConfigurationChanged", "class_name": "app", "params": ["Configuration"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onConfigurationChanged(Configuration newConfig) {\n        super.onConfigurationChanged(newConfig);\n        localeManager.setLocale(this);\n        Log.d(TAG, \"onConfigurationChanged: \" + newConfig.locale.getLanguage());\n    }", "url": "https://raw.githubusercontent.com/idanapp/IdanPlusPlus/master/app/src/main/java/com/example/idan/plusplus/app.java", "stars": "9", "class_props": {"extends": "Application", "implements": null, "modifiers": ["public"]}}, {"id": 62272, "method_name": "getsRetrofitServices", "class_name": "app", "params": [], "throws": null, "modifiers": ["public", "static"], "return_type": "IRetrofitServices", "snippet": "    public static IRetrofitServices getsRetrofitServices() {\n        return sRetrofitServices;\n    }", "url": "https://raw.githubusercontent.com/idanapp/IdanPlusPlus/master/app/src/main/java/com/example/idan/plusplus/app.java", "stars": "9", "class_props": {"extends": "Application", "implements": null, "modifiers": ["public"]}}, {"id": 62273, "method_name": "getId", "class_name": "OrdemServico", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Long", "snippet": "\tpublic Long getId() {\n\t\treturn id;\n\t}", "url": "https://raw.githubusercontent.com/jeanpsilva/osworks/master/src/main/java/com/algaworks/osworks/domain/model/OrdemServico.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 62274, "method_name": "setId", "class_name": "OrdemServico", "params": ["Long"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void setId(Long id) {\n\t\tthis.id = id;\n\t}", "url": "https://raw.githubusercontent.com/jeanpsilva/osworks/master/src/main/java/com/algaworks/osworks/domain/model/OrdemServico.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 62275, "method_name": "getCliente", "class_name": "OrdemServico", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Cliente", "snippet": "\tpublic Cliente getCliente() {\n\t\treturn cliente;\n\t}", "url": "https://raw.githubusercontent.com/jeanpsilva/osworks/master/src/main/java/com/algaworks/osworks/domain/model/OrdemServico.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 62276, "method_name": "setCliente", "class_name": "OrdemServico", "params": ["Cliente"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void setCliente(Cliente cliente) {\n\t\tthis.cliente = cliente;\n\t}", "url": "https://raw.githubusercontent.com/jeanpsilva/osworks/master/src/main/java/com/algaworks/osworks/domain/model/OrdemServico.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 62277, "method_name": "getDescricao", "class_name": "OrdemServico", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "\tpublic String getDescricao() {\n\t\treturn descricao;\n\t}", "url": "https://raw.githubusercontent.com/jeanpsilva/osworks/master/src/main/java/com/algaworks/osworks/domain/model/OrdemServico.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 62278, "method_name": "setDescricao", "class_name": "OrdemServico", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void setDescricao(String descricao) {\n\t\tthis.descricao = descricao;\n\t}", "url": "https://raw.githubusercontent.com/jeanpsilva/osworks/master/src/main/java/com/algaworks/osworks/domain/model/OrdemServico.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 62279, "method_name": "getPreco", "class_name": "OrdemServico", "params": [], "throws": null, "modifiers": ["public"], "return_type": "BigDecimal", "snippet": "\tpublic BigDecimal getPreco() {\n\t\treturn preco;\n\t}", "url": "https://raw.githubusercontent.com/jeanpsilva/osworks/master/src/main/java/com/algaworks/osworks/domain/model/OrdemServico.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 62280, "method_name": "setPreco", "class_name": "OrdemServico", "params": ["BigDecimal"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void setPreco(BigDecimal preco) {\n\t\tthis.preco = preco;\n\t}", "url": "https://raw.githubusercontent.com/jeanpsilva/osworks/master/src/main/java/com/algaworks/osworks/domain/model/OrdemServico.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 62281, "method_name": "getStatus", "class_name": "OrdemServico", "params": [], "throws": null, "modifiers": ["public"], "return_type": "StatusOrdemServico", "snippet": "\tpublic StatusOrdemServico getStatus() {\n\t\treturn status;\n\t}", "url": "https://raw.githubusercontent.com/jeanpsilva/osworks/master/src/main/java/com/algaworks/osworks/domain/model/OrdemServico.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 62282, "method_name": "setStatus", "class_name": "OrdemServico", "params": ["StatusOrdemServico"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void setStatus(StatusOrdemServico status) {\n\t\tthis.status = status;\n\t}", "url": "https://raw.githubusercontent.com/jeanpsilva/osworks/master/src/main/java/com/algaworks/osworks/domain/model/OrdemServico.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 62283, "method_name": "getDataAbertura", "class_name": "OrdemServico", "params": [], "throws": null, "modifiers": ["public"], "return_type": "OffsetDateTime", "snippet": "\tpublic OffsetDateTime getDataAbertura() {\n\t\treturn dataAbertura;\n\t}", "url": "https://raw.githubusercontent.com/jeanpsilva/osworks/master/src/main/java/com/algaworks/osworks/domain/model/OrdemServico.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 62284, "method_name": "setDataAbertura", "class_name": "OrdemServico", "params": ["OffsetDateTime"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void setDataAbertura(OffsetDateTime dataAbertura) {\n\t\tthis.dataAbertura = dataAbertura;\n\t}", "url": "https://raw.githubusercontent.com/jeanpsilva/osworks/master/src/main/java/com/algaworks/osworks/domain/model/OrdemServico.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 62285, "method_name": "getDataFinalizacao", "class_name": "OrdemServico", "params": [], "throws": null, "modifiers": ["public"], "return_type": "OffsetDateTime", "snippet": "\tpublic OffsetDateTime getDataFinalizacao() {\n\t\treturn dataFinalizacao;\n\t}", "url": "https://raw.githubusercontent.com/jeanpsilva/osworks/master/src/main/java/com/algaworks/osworks/domain/model/OrdemServico.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 62286, "method_name": "setDataFinalizacao", "class_name": "OrdemServico", "params": ["OffsetDateTime"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void setDataFinalizacao(OffsetDateTime dataFinalizacao) {\n\t\tthis.dataFinalizacao = dataFinalizacao;\n\t}", "url": "https://raw.githubusercontent.com/jeanpsilva/osworks/master/src/main/java/com/algaworks/osworks/domain/model/OrdemServico.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 62287, "method_name": "getComentarios", "class_name": "OrdemServico", "params": [], "throws": null, "modifiers": ["public"], "return_type": "List<Comentario>", "snippet": "\tpublic List<Comentario> getComentarios() {\n\t\treturn comentarios;\n\t}", "url": "https://raw.githubusercontent.com/jeanpsilva/osworks/master/src/main/java/com/algaworks/osworks/domain/model/OrdemServico.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 62288, "method_name": "setComentarios", "class_name": "OrdemServico", "params": ["List<Comentario>"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void setComentarios(List<Comentario> comentarios) {\n\t\tthis.comentarios = comentarios;\n\t}", "url": "https://raw.githubusercontent.com/jeanpsilva/osworks/master/src/main/java/com/algaworks/osworks/domain/model/OrdemServico.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 62289, "method_name": "hashCode", "class_name": "OrdemServico", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "\tpublic int hashCode() {\n\t\tfinal int prime = 31;\n\t\tint result = 1;\n\t\tresult = prime * result + ((id == null) ? 0 : id.hashCode());\n\t\treturn result;\n\t}", "url": "https://raw.githubusercontent.com/jeanpsilva/osworks/master/src/main/java/com/algaworks/osworks/domain/model/OrdemServico.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 62290, "method_name": "equals", "class_name": "OrdemServico", "params": ["Object"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "\tpublic boolean equals(Object obj) {\n\t\tif (this == obj)\n\t\t\treturn true;\n\t\tif (obj == null)\n\t\t\treturn false;\n\t\tif (getClass() != obj.getClass())\n\t\t\treturn false;\n\t\tOrdemServico other = (OrdemServico) obj;\n\t\tif (id == null) {\n\t\t\tif (other.id != null)\n\t\t\t\treturn false;\n\t\t} else if (!id.equals(other.id))\n\t\t\treturn false;\n\t\treturn true;\n\t}", "url": "https://raw.githubusercontent.com/jeanpsilva/osworks/master/src/main/java/com/algaworks/osworks/domain/model/OrdemServico.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 62291, "method_name": "podeSerFinalizada", "class_name": "OrdemServico", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "\tpublic boolean podeSerFinalizada() {\n\t\treturn StatusOrdemServico.ABERTA.equals(getStatus());\n\t}", "url": "https://raw.githubusercontent.com/jeanpsilva/osworks/master/src/main/java/com/algaworks/osworks/domain/model/OrdemServico.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 62292, "method_name": "naoPodeSerFinalizada", "class_name": "OrdemServico", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "\tpublic boolean naoPodeSerFinalizada() {\n\t\treturn !podeSerFinalizada();\n\t}", "url": "https://raw.githubusercontent.com/jeanpsilva/osworks/master/src/main/java/com/algaworks/osworks/domain/model/OrdemServico.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 62293, "method_name": "finalizar", "class_name": "OrdemServico", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void finalizar() {\n\n\t\tif (naoPodeSerFinalizada()) {\n\t\t\tthrow new NegocioException(\"Ordem de servico nao pode ser finalizada\");\n\t\t}\n\n\t\tsetStatus(StatusOrdemServico.FINALIZADA);\n\t\tsetDataFinalizacao(OffsetDateTime.now());\n\t}", "url": "https://raw.githubusercontent.com/jeanpsilva/osworks/master/src/main/java/com/algaworks/osworks/domain/model/OrdemServico.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 62294, "method_name": "getExtras", "class_name": "AnnotatedCursor", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Bundle", "snippet": "    public Bundle getExtras() {\n        Bundle extras = new Bundle();\n        extras.putAll(super.getExtras());\n        extras.putAll(mExtras);\n        return extras;\n    }", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/google%20image%20loader%20api%20complete/com/google/android/feeds/AnnotatedCursor.java", "stars": "74", "class_props": {"extends": "CursorWrapper", "implements": null, "modifiers": []}}, {"id": 62295, "method_name": "main", "class_name": "Demo01Exception", "params": ["String"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void main(String[] args) {\n        /*\n            \u591a\u4e2a\u5f02\u5e38\u4f7f\u7528\u6355\u83b7\u53c8\u8be5\u5982\u4f55\u5904\u7406\u5462\uff1f\n            1. \u591a\u4e2a\u5f02\u5e38\u5206\u522b\u5904\u7406\u3002\n            2. \u591a\u4e2a\u5f02\u5e38\u4e00\u6b21\u6355\u83b7\uff0c\u591a\u6b21\u5904\u7406\u3002\n            3. \u591a\u4e2a\u5f02\u5e38\u4e00\u6b21\u6355\u83b7\u4e00\u6b21\u5904\u7406\u3002\n         */\n\n        //1. \u591a\u4e2a\u5f02\u5e38\u5206\u522b\u5904\u7406\u3002\n       /* try {\n            int[] arr = {1,2,3};\n            System.out.println(arr[3]);//ArrayIndexOutOfBoundsException: 3\n        }catch (ArrayIndexOutOfBoundsException e){\n            System.out.println(e);\n        }\n\n        try{\n            List<Integer> list = List.of(1, 2, 3);\n            System.out.println(list.get(3));//IndexOutOfBoundsException: Index 3 out-of-bounds for length 3\n        }catch (IndexOutOfBoundsException e){\n            System.out.println(e);\n        }*/\n\n        //2. \u591a\u4e2a\u5f02\u5e38\u4e00\u6b21\u6355\u83b7\uff0c\u591a\u6b21\u5904\u7406\u3002\n        /*try {\n            int[] arr = {1,2,3};\n            //System.out.println(arr[3]);//ArrayIndexOutOfBoundsException: 3\n            List<Integer> list = List.of(1, 2, 3);\n            System.out.println(list.get(3));//IndexOutOfBoundsException: Index 3 out-of-bounds for length 3\n        }catch (ArrayIndexOutOfBoundsException e){\n            System.out.println(e);\n        }catch (IndexOutOfBoundsException e){\n            System.out.println(e);\n        }*/\n\n        /*\n            \u4e00\u4e2atry\u591a\u4e2acatch\u6ce8\u610f\u4e8b\u9879:\n                catch\u91cc\u8fb9\u5b9a\u4e49\u7684\u5f02\u5e38\u53d8\u91cf,\u5982\u679c\u6709\u5b50\u7236\u7c7b\u5173\u7cfb,\u90a3\u4e48\u5b50\u7c7b\u7684\u5f02\u5e38\u53d8\u91cf\u5fc5\u987b\u5199\u5728\u4e0a\u8fb9,\u5426\u5219\u5c31\u4f1a\u62a5\u9519\n                ArrayIndexOutOfBoundsException extends IndexOutOfBoundsException\n         */\n        /*try {\n            int[] arr = {1,2,3};\n            //System.out.println(arr[3]);//ArrayIndexOutOfBoundsException: 3\n            List<Integer> list = List.of(1, 2, 3);\n            System.out.println(list.get(3));//IndexOutOfBoundsException: Index 3 out-of-bounds for length 3\n        }catch (IndexOutOfBoundsException e){\n            System.out.println(e);\n        }catch (ArrayIndexOutOfBoundsException e){\n            System.out.println(e);\n        }*/\n\n        //3. \u591a\u4e2a\u5f02\u5e38\u4e00\u6b21\u6355\u83b7\u4e00\u6b21\u5904\u7406\u3002\n        /*try {\n            int[] arr = {1,2,3};\n            //System.out.println(arr[3]);//ArrayIndexOutOfBoundsException: 3\n            List<Integer> list = List.of(1, 2, 3);\n            System.out.println(list.get(3));//IndexOutOfBoundsException: Index 3 out-of-bounds for length 3\n        }catch (Exception e){\n            System.out.println(e);\n        }*/\n\n        //\u8fd0\u884c\u65f6\u5f02\u5e38\u88ab\u629b\u51fa\u53ef\u4ee5\u4e0d\u5904\u7406\u3002\u5373\u4e0d\u6355\u83b7\u4e5f\u4e0d\u58f0\u660e\u629b\u51fa\u3002\n        //\u9ed8\u8ba4\u7ed9\u865a\u62df\u673a\u5904\u7406,\u7ec8\u6b62\u7a0b\u5e8f,\u4ec0\u4e48\u65f6\u5019\u4e0d\u629b\u51fa\u8fd0\u884c\u65f6\u5f02\u5e38\u4e86,\u5728\u6765\u7ee7\u7eed\u6267\u884c\u7a0b\u5e8f\n        int[] arr = {1,2,3};\n        System.out.println(arr[3]);//ArrayIndexOutOfBoundsException: 3\n        List<Integer> list = List.of(1, 2, 3);\n        System.out.println(list.get(3));//IndexOutOfBoundsException: Index 3 out-of-bounds for length 3\n\n        System.out.println(\"\u540e\u7eed\u4ee3\u7801!\");\n    }", "url": "https://raw.githubusercontent.com/liuminchao123/JavaWeb_Learning/master/02.%20java/Java/%E9%BB%91%E9%A9%AC%E6%95%99%E7%A8%8B/16.%E3%80%90%E5%BC%82%E5%B8%B8%E3%80%81%E7%BA%BF%E7%A8%8B%E3%80%91-%E7%AC%94%E8%AE%B0/code/05_ExceptionAndThread/src/com/itheima/demo03/Exception/Demo01Exception.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 62296, "method_name": "onAttachedToWindow", "class_name": "ShellSearchView", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void onAttachedToWindow ()\n\t{\n\t\tn_onAttachedToWindow ();\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc643f46942d9dd1fff9/ShellSearchView.java", "stars": "2", "class_props": {"extends": "android", "implements": ["mono", "android", "android", "android"], "modifiers": ["public"]}}, {"id": 62297, "method_name": "n_onAttachedToWindow", "class_name": "ShellSearchView", "params": [], "throws": null, "modifiers": ["private", "native"], "return_type": "void", "snippet": "\tprivate native void n_onAttachedToWindow ();\n\n\n\tpublic void onLayout (boolean p0, int p1, int p2, int p3, int p4)\n\t{\n\t\tn_onLayout (p0, p1, p2, p3, p4);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc643f46942d9dd1fff9/ShellSearchView.java", "stars": "2", "class_props": {"extends": "android", "implements": ["mono", "android", "android", "android"], "modifiers": ["public"]}}, {"id": 62298, "method_name": "onLayout", "class_name": "ShellSearchView", "params": ["boolean", "int", "int", "int", "int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void onLayout (boolean p0, int p1, int p2, int p3, int p4)\n\t{\n\t\tn_onLayout (p0, p1, p2, p3, p4);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc643f46942d9dd1fff9/ShellSearchView.java", "stars": "2", "class_props": {"extends": "android", "implements": ["mono", "android", "android", "android"], "modifiers": ["public"]}}, {"id": 62299, "method_name": "n_onLayout", "class_name": "ShellSearchView", "params": ["boolean", "int", "int", "int", "int"], "throws": null, "modifiers": ["private", "native"], "return_type": "void", "snippet": "\tprivate native void n_onLayout (boolean p0, int p1, int p2, int p3, int p4);\n\n\n\tpublic void onMeasure (int p0, int p1)\n\t{\n\t\tn_onMeasure (p0, p1);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc643f46942d9dd1fff9/ShellSearchView.java", "stars": "2", "class_props": {"extends": "android", "implements": ["mono", "android", "android", "android"], "modifiers": ["public"]}}, {"id": 62300, "method_name": "onMeasure", "class_name": "ShellSearchView", "params": ["int", "int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void onMeasure (int p0, int p1)\n\t{\n\t\tn_onMeasure (p0, p1);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc643f46942d9dd1fff9/ShellSearchView.java", "stars": "2", "class_props": {"extends": "android", "implements": ["mono", "android", "android", "android"], "modifiers": ["public"]}}, {"id": 62301, "method_name": "n_onMeasure", "class_name": "ShellSearchView", "params": ["int", "int"], "throws": null, "modifiers": ["private", "native"], "return_type": "void", "snippet": "\tprivate native void n_onMeasure (int p0, int p1);\n\n\n\tpublic boolean onEditorAction (android.widget.TextView p0, int p1, android.view.KeyEvent p2)\n\t{\n\t\treturn n_onEditorAction (p0, p1, p2);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc643f46942d9dd1fff9/ShellSearchView.java", "stars": "2", "class_props": {"extends": "android", "implements": ["mono", "android", "android", "android"], "modifiers": ["public"]}}, {"id": 62302, "method_name": "onEditorAction", "class_name": "ShellSearchView", "params": ["android", "int", "android"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "\tpublic boolean onEditorAction (android.widget.TextView p0, int p1, android.view.KeyEvent p2)\n\t{\n\t\treturn n_onEditorAction (p0, p1, p2);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc643f46942d9dd1fff9/ShellSearchView.java", "stars": "2", "class_props": {"extends": "android", "implements": ["mono", "android", "android", "android"], "modifiers": ["public"]}}, {"id": 62303, "method_name": "n_onEditorAction", "class_name": "ShellSearchView", "params": ["android", "int", "android"], "throws": null, "modifiers": ["private", "native"], "return_type": "boolean", "snippet": "\tprivate native boolean n_onEditorAction (android.widget.TextView p0, int p1, android.view.KeyEvent p2);\n\n\n\tpublic void afterTextChanged (android.text.Editable p0)\n\t{\n\t\tn_afterTextChanged (p0);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc643f46942d9dd1fff9/ShellSearchView.java", "stars": "2", "class_props": {"extends": "android", "implements": ["mono", "android", "android", "android"], "modifiers": ["public"]}}, {"id": 62304, "method_name": "afterTextChanged", "class_name": "ShellSearchView", "params": ["android"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void afterTextChanged (android.text.Editable p0)\n\t{\n\t\tn_afterTextChanged (p0);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc643f46942d9dd1fff9/ShellSearchView.java", "stars": "2", "class_props": {"extends": "android", "implements": ["mono", "android", "android", "android"], "modifiers": ["public"]}}, {"id": 62305, "method_name": "n_afterTextChanged", "class_name": "ShellSearchView", "params": ["android"], "throws": null, "modifiers": ["private", "native"], "return_type": "void", "snippet": "\tprivate native void n_afterTextChanged (android.text.Editable p0);\n\n\n\tpublic void beforeTextChanged (java.lang.CharSequence p0, int p1, int p2, int p3)\n\t{\n\t\tn_beforeTextChanged (p0, p1, p2, p3);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc643f46942d9dd1fff9/ShellSearchView.java", "stars": "2", "class_props": {"extends": "android", "implements": ["mono", "android", "android", "android"], "modifiers": ["public"]}}, {"id": 62306, "method_name": "beforeTextChanged", "class_name": "ShellSearchView", "params": ["java", "int", "int", "int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void beforeTextChanged (java.lang.CharSequence p0, int p1, int p2, int p3)\n\t{\n\t\tn_beforeTextChanged (p0, p1, p2, p3);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc643f46942d9dd1fff9/ShellSearchView.java", "stars": "2", "class_props": {"extends": "android", "implements": ["mono", "android", "android", "android"], "modifiers": ["public"]}}, {"id": 62307, "method_name": "n_beforeTextChanged", "class_name": "ShellSearchView", "params": ["java", "int", "int", "int"], "throws": null, "modifiers": ["private", "native"], "return_type": "void", "snippet": "\tprivate native void n_beforeTextChanged (java.lang.CharSequence p0, int p1, int p2, int p3);\n\n\n\tpublic void onTextChanged (java.lang.CharSequence p0, int p1, int p2, int p3)\n\t{\n\t\tn_onTextChanged (p0, p1, p2, p3);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc643f46942d9dd1fff9/ShellSearchView.java", "stars": "2", "class_props": {"extends": "android", "implements": ["mono", "android", "android", "android"], "modifiers": ["public"]}}, {"id": 62308, "method_name": "onTextChanged", "class_name": "ShellSearchView", "params": ["java", "int", "int", "int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void onTextChanged (java.lang.CharSequence p0, int p1, int p2, int p3)\n\t{\n\t\tn_onTextChanged (p0, p1, p2, p3);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc643f46942d9dd1fff9/ShellSearchView.java", "stars": "2", "class_props": {"extends": "android", "implements": ["mono", "android", "android", "android"], "modifiers": ["public"]}}, {"id": 62309, "method_name": "n_onTextChanged", "class_name": "ShellSearchView", "params": ["java", "int", "int", "int"], "throws": null, "modifiers": ["private", "native"], "return_type": "void", "snippet": "\tprivate native void n_onTextChanged (java.lang.CharSequence p0, int p1, int p2, int p3);\n\n\tprivate java.util.ArrayList refList;\n\tpublic void monodroidAddReference (java.lang.Object obj)\n\t{\n\t\tif (refList == null)\n\t\t\trefList = new java.util.ArrayList ();\n\t\trefList.add (obj);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc643f46942d9dd1fff9/ShellSearchView.java", "stars": "2", "class_props": {"extends": "android", "implements": ["mono", "android", "android", "android"], "modifiers": ["public"]}}, {"id": 62310, "method_name": "monodroidAddReference", "class_name": "ShellSearchView", "params": ["java"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void monodroidAddReference (java.lang.Object obj)\n\t{\n\t\tif (refList == null)\n\t\t\trefList = new java.util.ArrayList ();\n\t\trefList.add (obj);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc643f46942d9dd1fff9/ShellSearchView.java", "stars": "2", "class_props": {"extends": "android", "implements": ["mono", "android", "android", "android"], "modifiers": ["public"]}}, {"id": 62311, "method_name": "monodroidClearReferences", "class_name": "ShellSearchView", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void monodroidClearReferences ()\n\t{\n\t\tif (refList != null)\n\t\t\trefList.clear ();\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc643f46942d9dd1fff9/ShellSearchView.java", "stars": "2", "class_props": {"extends": "android", "implements": ["mono", "android", "android", "android"], "modifiers": ["public"]}}, {"id": 62312, "method_name": "main", "class_name": "Demo03Objects", "params": ["String"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void main(String[] args) {\n        String s1 = \"abc\";\n        //String s1 = null;\n        String s2 = \"abc\";\n        //boolean b = s1.equals(s2); // NullPointerException null\u662f\u4e0d\u80fd\u8c03\u7528\u65b9\u6cd5\u7684,\u4f1a\u629b\u51fa\u7a7a\u6307\u9488\u5f02\u5e38\n        //System.out.println(b);\n        /*\n            Objects\u7c7b\u7684equals\u65b9\u6cd5:\u5bf9\u4e24\u4e2a\u5bf9\u8c61\u8fdb\u884c\u6bd4\u8f83,\u9632\u6b62\u7a7a\u6307\u9488\u5f02\u5e38\n            public static boolean equals(Object a, Object b) {\n                return (a == b) || (a != null && a.equals(b));\n            }\n         */\n        boolean b2 = Objects.equals(s1, s2);\n        System.out.println(b2);\n\n    }", "url": "https://raw.githubusercontent.com/liuminchao123/JavaWeb_Learning/master/02.%20java/Java/%E9%BB%91%E9%A9%AC%E6%95%99%E7%A8%8B/12.%E3%80%90Object%E7%B1%BB%E3%80%81%E5%B8%B8%E7%94%A8API%E3%80%91-%E7%AC%94%E8%AE%B0/code/01_API/src/com/itheima/demo01/Object/Demo03Objects.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 62313, "method_name": "setup", "class_name": "WebConfigurerTest", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setup() {\n        servletContext = spy(new MockServletContext());\n        doReturn(mock(FilterRegistration.Dynamic.class))\n            .when(servletContext).addFilter(anyString(), any(Filter.class));\n        doReturn(mock(ServletRegistration.Dynamic.class))\n            .when(servletContext).addServlet(anyString(), any(Servlet.class));\n\n        env = new MockEnvironment();\n        props = new JHipsterProperties();\n\n        webConfigurer = new WebConfigurer(env, props);\n    }", "url": "https://raw.githubusercontent.com/gardle/gardle-web/master/src/test/java/com/gardle/config/WebConfigurerTest.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 62314, "method_name": "testStartUpProdServletContext", "class_name": "WebConfigurerTest", "params": [], "throws": ["ServletException"], "modifiers": ["public"], "return_type": "void", "snippet": "    public void testStartUpProdServletContext() throws ServletException {\n        env.setActiveProfiles(JHipsterConstants.SPRING_PROFILE_PRODUCTION);\n        webConfigurer.onStartup(servletContext);\n\n        verify(servletContext).addFilter(eq(\"cachingHttpHeadersFilter\"), any(CachingHttpHeadersFilter.class));\n    }", "url": "https://raw.githubusercontent.com/gardle/gardle-web/master/src/test/java/com/gardle/config/WebConfigurerTest.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 62315, "method_name": "testStartUpDevServletContext", "class_name": "WebConfigurerTest", "params": [], "throws": ["ServletException"], "modifiers": ["public"], "return_type": "void", "snippet": "    public void testStartUpDevServletContext() throws ServletException {\n        env.setActiveProfiles(JHipsterConstants.SPRING_PROFILE_DEVELOPMENT);\n        webConfigurer.onStartup(servletContext);\n\n        verify(servletContext, never()).addFilter(eq(\"cachingHttpHeadersFilter\"), any(CachingHttpHeadersFilter.class));\n    }", "url": "https://raw.githubusercontent.com/gardle/gardle-web/master/src/test/java/com/gardle/config/WebConfigurerTest.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 62316, "method_name": "testCustomizeServletContainer", "class_name": "WebConfigurerTest", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void testCustomizeServletContainer() {\n        env.setActiveProfiles(JHipsterConstants.SPRING_PROFILE_PRODUCTION);\n        UndertowServletWebServerFactory container = new UndertowServletWebServerFactory();\n        webConfigurer.customize(container);\n        assertThat(container.getMimeMappings().get(\"abs\")).isEqualTo(\"audio/x-mpeg\");\n        assertThat(container.getMimeMappings().get(\"html\")).isEqualTo(\"text/html;charset=utf-8\");\n        assertThat(container.getMimeMappings().get(\"json\")).isEqualTo(\"text/html;charset=utf-8\");\n        if (container.getDocumentRoot() != null) {\n            assertThat(container.getDocumentRoot()).isEqualTo(new File(\"target/classes/static/\"));\n        }\n    }", "url": "https://raw.githubusercontent.com/gardle/gardle-web/master/src/test/java/com/gardle/config/WebConfigurerTest.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 62317, "method_name": "testCorsFilterOnApiPath", "class_name": "WebConfigurerTest", "params": [], "throws": ["Exception"], "modifiers": ["public"], "return_type": "void", "snippet": "    public void testCorsFilterOnApiPath() throws Exception {\n        props.getCors().setAllowedOrigins(Collections.singletonList(\"*\"));\n        props.getCors().setAllowedMethods(Arrays.asList(\"GET\", \"POST\", \"PUT\", \"DELETE\"));\n        props.getCors().setAllowedHeaders(Collections.singletonList(\"*\"));\n        props.getCors().setMaxAge(1800L);\n        props.getCors().setAllowCredentials(true);\n\n        MockMvc mockMvc = MockMvcBuilders.standaloneSetup(new WebConfigurerTestController())\n            .addFilters(webConfigurer.corsFilter())\n            .build();\n\n        mockMvc.perform(\n            options(\"/api/v1/test-cors\")\n                .header(HttpHeaders.ORIGIN, \"other.domain.com\")\n                .header(HttpHeaders.ACCESS_CONTROL_REQUEST_METHOD, \"POST\"))\n            .andExpect(status().isOk())\n            .andExpect(header().string(HttpHeaders.ACCESS_CONTROL_ALLOW_ORIGIN, \"other.domain.com\"))\n            .andExpect(header().string(HttpHeaders.VARY, \"Origin\"))\n            .andExpect(header().string(HttpHeaders.ACCESS_CONTROL_ALLOW_METHODS, \"GET,POST,PUT,DELETE\"))\n            .andExpect(header().string(HttpHeaders.ACCESS_CONTROL_ALLOW_CREDENTIALS, \"true\"))\n            .andExpect(header().string(HttpHeaders.ACCESS_CONTROL_MAX_AGE, \"1800\"));\n\n        mockMvc.perform(\n            get(\"/api/v1/test-cors\")\n                .header(HttpHeaders.ORIGIN, \"other.domain.com\"))\n            .andExpect(status().isOk())\n            .andExpect(header().string(HttpHeaders.ACCESS_CONTROL_ALLOW_ORIGIN, \"other.domain.com\"));\n    }", "url": "https://raw.githubusercontent.com/gardle/gardle-web/master/src/test/java/com/gardle/config/WebConfigurerTest.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 62318, "method_name": "testCorsFilterOnOtherPath", "class_name": "WebConfigurerTest", "params": [], "throws": ["Exception"], "modifiers": ["public"], "return_type": "void", "snippet": "    public void testCorsFilterOnOtherPath() throws Exception {\n        props.getCors().setAllowedOrigins(Collections.singletonList(\"*\"));\n        props.getCors().setAllowedMethods(Arrays.asList(\"GET\", \"POST\", \"PUT\", \"DELETE\"));\n        props.getCors().setAllowedHeaders(Collections.singletonList(\"*\"));\n        props.getCors().setMaxAge(1800L);\n        props.getCors().setAllowCredentials(true);\n\n        MockMvc mockMvc = MockMvcBuilders.standaloneSetup(new WebConfigurerTestController())\n            .addFilters(webConfigurer.corsFilter())\n            .build();\n\n        mockMvc.perform(\n            get(\"/test/test-cors\")\n                .header(HttpHeaders.ORIGIN, \"other.domain.com\"))\n            .andExpect(status().isOk())\n            .andExpect(header().doesNotExist(HttpHeaders.ACCESS_CONTROL_ALLOW_ORIGIN));\n    }", "url": "https://raw.githubusercontent.com/gardle/gardle-web/master/src/test/java/com/gardle/config/WebConfigurerTest.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 62319, "method_name": "testCorsFilterDeactivated", "class_name": "WebConfigurerTest", "params": [], "throws": ["Exception"], "modifiers": ["public"], "return_type": "void", "snippet": "    public void testCorsFilterDeactivated() throws Exception {\n        props.getCors().setAllowedOrigins(null);\n\n        MockMvc mockMvc = MockMvcBuilders.standaloneSetup(new WebConfigurerTestController())\n            .addFilters(webConfigurer.corsFilter())\n            .build();\n\n        mockMvc.perform(\n            get(\"/api/v1/test-cors\")\n                .header(HttpHeaders.ORIGIN, \"other.domain.com\"))\n            .andExpect(status().isOk())\n            .andExpect(header().doesNotExist(HttpHeaders.ACCESS_CONTROL_ALLOW_ORIGIN));\n    }", "url": "https://raw.githubusercontent.com/gardle/gardle-web/master/src/test/java/com/gardle/config/WebConfigurerTest.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 62320, "method_name": "testCorsFilterDeactivated2", "class_name": "WebConfigurerTest", "params": [], "throws": ["Exception"], "modifiers": ["public"], "return_type": "void", "snippet": "    public void testCorsFilterDeactivated2() throws Exception {\n        props.getCors().setAllowedOrigins(new ArrayList<>());\n\n        MockMvc mockMvc = MockMvcBuilders.standaloneSetup(new WebConfigurerTestController())\n            .addFilters(webConfigurer.corsFilter())\n            .build();\n\n        mockMvc.perform(\n            get(\"/api/v1/test-cors\")\n                .header(HttpHeaders.ORIGIN, \"other.domain.com\"))\n            .andExpect(status().isOk())\n            .andExpect(header().doesNotExist(HttpHeaders.ACCESS_CONTROL_ALLOW_ORIGIN));\n    }", "url": "https://raw.githubusercontent.com/gardle/gardle-web/master/src/test/java/com/gardle/config/WebConfigurerTest.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 62321, "method_name": "deriveChangeAddress", "class_name": "ElectrumViewModel", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void deriveChangeAddress() {\n        AppExecutors.getInstance().networkIO().execute(()->{\n            if (TextUtils.isEmpty(xpub)) {\n                xpub = new ExpubInfo().invoke().expub;\n            }\n            List<String> changes = new ArrayList<>();\n            AbsDeriver btcDeriver = new Btc.Deriver();\n            for (int i = 0; i < DEFAULT_CHANGE_ADDRESS_NUM; i++) {\n                changes.add(btcDeriver.derive(xpub,1, i));\n            }\n            changeAddress.postValue(changes);\n        });\n    }", "url": "https://raw.githubusercontent.com/CoboVault/cobo-vault-cold/master/app/src/main/java/com/cobo/cold/viewmodel/ElectrumViewModel.java", "stars": "13", "class_props": {"extends": "AndroidViewModel", "implements": null, "modifiers": ["public"]}}, {"id": 62322, "method_name": "getChangeAddress", "class_name": "ElectrumViewModel", "params": [], "throws": null, "modifiers": ["public"], "return_type": "LiveData<List>", "snippet": "    public LiveData<List<String>> getChangeAddress() {\n        return changeAddress;\n    }", "url": "https://raw.githubusercontent.com/CoboVault/cobo-vault-cold/master/app/src/main/java/com/cobo/cold/viewmodel/ElectrumViewModel.java", "stars": "13", "class_props": {"extends": "AndroidViewModel", "implements": null, "modifiers": ["public"]}}, {"id": 62323, "method_name": "hasSdcard", "class_name": "ElectrumViewModel", "params": ["Context"], "throws": null, "modifiers": ["public", "static"], "return_type": "boolean", "snippet": "    public static boolean hasSdcard(Context context) {\n        Storage storage = Storage.createByEnvironment(context);\n        return storage != null && storage.getExternalDir() != null;\n    }", "url": "https://raw.githubusercontent.com/CoboVault/cobo-vault-cold/master/app/src/main/java/com/cobo/cold/viewmodel/ElectrumViewModel.java", "stars": "13", "class_props": {"extends": "AndroidViewModel", "implements": null, "modifiers": ["public"]}}, {"id": 62324, "method_name": "writeToSdcard", "class_name": "ElectrumViewModel", "params": ["Storage", "String", "String"], "throws": null, "modifiers": ["public", "static"], "return_type": "boolean", "snippet": "    public static boolean writeToSdcard(Storage storage, String content, String fileName) {\n        File file = new File(storage.getElectrumDir(), fileName);\n        return FileUtils.writeString(file, content);\n    }", "url": "https://raw.githubusercontent.com/CoboVault/cobo-vault-cold/master/app/src/main/java/com/cobo/cold/viewmodel/ElectrumViewModel.java", "stars": "13", "class_props": {"extends": "AndroidViewModel", "implements": null, "modifiers": ["public"]}}, {"id": 62325, "method_name": "showNoSdcardModal", "class_name": "ElectrumViewModel", "params": ["AppCompatActivity"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void showNoSdcardModal(AppCompatActivity activity) {\n        ModalDialog modalDialog = ModalDialog.newInstance();\n        CommonModalBinding binding = DataBindingUtil.inflate(\n                LayoutInflater.from(activity), R.layout.common_modal,\n                null, false);\n        binding.title.setText(R.string.hint);\n        binding.subTitle.setText(R.string.insert_sdcard_hint);\n        binding.close.setVisibility(View.GONE);\n        binding.confirm.setText(R.string.know);\n        binding.confirm.setOnClickListener(vv -> modalDialog.dismiss());\n        modalDialog.setBinding(binding);\n        modalDialog.show(activity.getSupportFragmentManager(), \"\");\n    }", "url": "https://raw.githubusercontent.com/CoboVault/cobo-vault-cold/master/app/src/main/java/com/cobo/cold/viewmodel/ElectrumViewModel.java", "stars": "13", "class_props": {"extends": "AndroidViewModel", "implements": null, "modifiers": ["public"]}}, {"id": 62326, "method_name": "exportSuccess", "class_name": "ElectrumViewModel", "params": ["AppCompatActivity", "Runnable"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void exportSuccess(AppCompatActivity activity, Runnable runnable) {\n        ExportToSdcardDialog dialog = new ExportToSdcardDialog();\n        dialog.show(activity.getSupportFragmentManager(), \"\");\n        new Handler().postDelayed(() -> {\n            dialog.dismiss();\n            if (runnable != null) {\n                runnable.run();\n            }\n        }, 1000);\n    }", "url": "https://raw.githubusercontent.com/CoboVault/cobo-vault-cold/master/app/src/main/java/com/cobo/cold/viewmodel/ElectrumViewModel.java", "stars": "13", "class_props": {"extends": "AndroidViewModel", "implements": null, "modifiers": ["public"]}}, {"id": 62327, "method_name": "adapt", "class_name": "ElectrumViewModel", "params": ["ElectrumTx"], "throws": ["JSONException"], "modifiers": ["public", "static"], "return_type": "JSONObject", "snippet": "    public static JSONObject adapt(ElectrumTx tx) throws JSONException {\n        JSONObject object = new JSONObject();\n        JSONArray inputs = new JSONArray();\n        JSONArray outputs = new JSONArray();\n        adaptInputs(tx, inputs);\n        adaptOutputs(tx, outputs);\n        object.put(\"inputs\", inputs);\n        object.put(\"outputs\", outputs);\n        object.put(\"locktime\", tx.getLockTime());\n        object.put(\"version\", tx.getVersion());\n        return object;\n    }", "url": "https://raw.githubusercontent.com/CoboVault/cobo-vault-cold/master/app/src/main/java/com/cobo/cold/viewmodel/ElectrumViewModel.java", "stars": "13", "class_props": {"extends": "AndroidViewModel", "implements": null, "modifiers": ["public"]}}, {"id": 62328, "method_name": "adaptInputs", "class_name": "ElectrumViewModel", "params": ["ElectrumTx", "JSONArray"], "throws": ["JSONException"], "modifiers": ["static", "private"], "return_type": "void", "snippet": "    private static void adaptInputs(ElectrumTx tx, JSONArray inputs) throws JSONException {\n        for (TransactionInput transactionInput : tx.getInputs()) {\n            JSONObject in = new JSONObject();\n            JSONObject utxo = new JSONObject();\n            in.put(\"hash\", transactionInput.preTxId);\n            in.put(\"index\", transactionInput.preTxIndex);\n            in.put(\"sequence\", transactionInput.sequence);\n            utxo.put(\"publicKey\", transactionInput.pubKey.pubkey);\n            utxo.put(\"value\", transactionInput.value.intValue());\n            in.put(\"utxo\", utxo);\n            in.put(\"hash\", transactionInput.preTxId);\n            in.put(\"ownerKeyPath\", transactionInput.pubKey.hdPath);\n            inputs.put(in);\n\n        }\n    }", "url": "https://raw.githubusercontent.com/CoboVault/cobo-vault-cold/master/app/src/main/java/com/cobo/cold/viewmodel/ElectrumViewModel.java", "stars": "13", "class_props": {"extends": "AndroidViewModel", "implements": null, "modifiers": ["public"]}}, {"id": 62329, "method_name": "adaptOutputs", "class_name": "ElectrumViewModel", "params": ["ElectrumTx", "JSONArray"], "throws": ["JSONException"], "modifiers": ["static", "private"], "return_type": "void", "snippet": "    private static void adaptOutputs(ElectrumTx tx, JSONArray outputs) throws JSONException {\n        for (TransactionOutput transactionOutput : tx.getOutputs()) {\n            JSONObject out = new JSONObject();\n            out.put(\"address\", transactionOutput.address);\n            out.put(\"value\", transactionOutput.value);\n            outputs.put(out);\n        }\n    }", "url": "https://raw.githubusercontent.com/CoboVault/cobo-vault-cold/master/app/src/main/java/com/cobo/cold/viewmodel/ElectrumViewModel.java", "stars": "13", "class_props": {"extends": "AndroidViewModel", "implements": null, "modifiers": ["public"]}}, {"id": 62330, "method_name": "getXpub", "class_name": "ElectrumViewModel", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getXpub() {\n        return xpub;\n    }", "url": "https://raw.githubusercontent.com/CoboVault/cobo-vault-cold/master/app/src/main/java/com/cobo/cold/viewmodel/ElectrumViewModel.java", "stars": "13", "class_props": {"extends": "AndroidViewModel", "implements": null, "modifiers": ["public"]}}, {"id": 62331, "method_name": "getMasterPublicKey", "class_name": "ElectrumViewModel", "params": [], "throws": null, "modifiers": ["public"], "return_type": "LiveData<String>", "snippet": "    public LiveData<String> getMasterPublicKey() {\n        AppExecutors.getInstance().diskIO().execute(() -> {\n            ExpubInfo expubInfo = new ExpubInfo().invoke();\n            String hdPath = expubInfo.getHdPath();\n            String expub = expubInfo.getExpub();\n            xpub = expub;\n            try {\n                Account account = Account.parseAccount(hdPath);\n                if (account.getParent().getParent().getValue() == 49 && expub.startsWith(\"xpub\")) {\n                    exPub.postValue(Util.convertXpubToYpub(expub));\n                } else if (expub.startsWith(\"ypub\")) {\n                    exPub.postValue(expub);\n                }\n            } catch (InvalidPathException e) {\n                e.printStackTrace();\n            }\n\n        });\n        return exPub;\n    }", "url": "https://raw.githubusercontent.com/CoboVault/cobo-vault-cold/master/app/src/main/java/com/cobo/cold/viewmodel/ElectrumViewModel.java", "stars": "13", "class_props": {"extends": "AndroidViewModel", "implements": null, "modifiers": ["public"]}}, {"id": 62332, "method_name": "isSignedTxn", "class_name": "ElectrumViewModel", "params": ["String"], "throws": null, "modifiers": ["private"], "return_type": "boolean", "snippet": "    private boolean isSignedTxn(String fileName) {\n        Matcher matcher = signedTxnPattern.matcher(fileName);\n        return matcher.matches();\n    }", "url": "https://raw.githubusercontent.com/CoboVault/cobo-vault-cold/master/app/src/main/java/com/cobo/cold/viewmodel/ElectrumViewModel.java", "stars": "13", "class_props": {"extends": "AndroidViewModel", "implements": null, "modifiers": ["public"]}}, {"id": 62333, "method_name": "loadUnsignTxn", "class_name": "ElectrumViewModel", "params": [], "throws": null, "modifiers": ["public"], "return_type": "LiveData<List>", "snippet": "    public LiveData<List<String>> loadUnsignTxn() {\n        MutableLiveData<List<String>> result = new MutableLiveData<>();\n        AppExecutors.getInstance().diskIO().execute(() -> {\n            List<String> fileList = new ArrayList<>();\n            if (storage != null) {\n                File[] files = storage.getElectrumDir().listFiles();\n                if (files != null) {\n                    for (File f : files) {\n                        if (f.getName().endsWith(\".txn\")\n                                && !isSignedTxn(f.getName())) {\n                            fileList.add(f.getName());\n                        }\n                    }\n                }\n            }\n            result.postValue(fileList);\n        });\n        return result;\n    }", "url": "https://raw.githubusercontent.com/CoboVault/cobo-vault-cold/master/app/src/main/java/com/cobo/cold/viewmodel/ElectrumViewModel.java", "stars": "13", "class_props": {"extends": "AndroidViewModel", "implements": null, "modifiers": ["public"]}}, {"id": 62334, "method_name": "parseTxnFile", "class_name": "ElectrumViewModel", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "LiveData<String>", "snippet": "    public LiveData<String> parseTxnFile(String file) {\n        MutableLiveData<String> txnHex = new MutableLiveData<>();\n        AppExecutors.getInstance().diskIO().execute(() -> {\n            String content = FileUtils.readString(new File(storage.getExternalDir(), file));\n            try {\n                JSONObject object = new JSONObject(content);\n                String hex = object.getString(\"hex\");\n                txnHex.postValue(hex);\n            } catch (JSONException e) {\n                e.printStackTrace();\n                txnHex.postValue(null);\n            }\n        });\n        return txnHex;\n    }", "url": "https://raw.githubusercontent.com/CoboVault/cobo-vault-cold/master/app/src/main/java/com/cobo/cold/viewmodel/ElectrumViewModel.java", "stars": "13", "class_props": {"extends": "AndroidViewModel", "implements": null, "modifiers": ["public"]}}, {"id": 62335, "method_name": "getHdPath", "class_name": "ExpubInfo", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "        public String getHdPath() {\n            return hdPath;\n        }", "url": "https://raw.githubusercontent.com/CoboVault/cobo-vault-cold/master/app/src/main/java/com/cobo/cold/viewmodel/ElectrumViewModel.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["private"]}}, {"id": 62336, "method_name": "getExpub", "class_name": "ExpubInfo", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "        public String getExpub() {\n            return expub;\n        }", "url": "https://raw.githubusercontent.com/CoboVault/cobo-vault-cold/master/app/src/main/java/com/cobo/cold/viewmodel/ElectrumViewModel.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["private"]}}, {"id": 62337, "method_name": "invoke", "class_name": "ExpubInfo", "params": [], "throws": null, "modifiers": ["public"], "return_type": "ExpubInfo", "snippet": "        public ExpubInfo invoke() {\n            CoinEntity btc = mRepo.loadCoinSync(Coins.coinIdFromCoinCode(\"BTC\"));\n            AccountEntity accountEntity = mRepo.loadAccountsForCoin(btc).get(0);\n            hdPath = accountEntity.getHdPath();\n            expub = accountEntity.getExPub();\n            return this;\n        }", "url": "https://raw.githubusercontent.com/CoboVault/cobo-vault-cold/master/app/src/main/java/com/cobo/cold/viewmodel/ElectrumViewModel.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["private"]}}, {"id": 62338, "method_name": "getLoggerLevel", "class_name": "FeignConfiguration", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Logger", "snippet": "    public Logger.Level getLoggerLevel() {\n        return Logger.Level.FULL;\n    }", "url": "https://raw.githubusercontent.com/geekidea/spring-cloud-plus/master/scp-framework/scp-framework-config/src/main/java/io/geekidea/cloud/framework/config/feign/FeignConfiguration.java", "stars": "22", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 62339, "method_name": "findAll", "class_name": "ColumnService", "params": [], "throws": null, "modifiers": ["public"], "return_type": "List<Column>", "snippet": "\tpublic List<Column> findAll() {\n\t\treturn columnDao.findAll();\n\t}", "url": "https://raw.githubusercontent.com/1127140426/tensquare/master/tensquare_article/src/main/java/com/tensquare/article/service/ColumnService.java", "stars": "34", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 62340, "method_name": "findSearch", "class_name": "ColumnService", "params": ["Map", "int", "int"], "throws": null, "modifiers": ["public"], "return_type": "Page<Column>", "snippet": "\tpublic Page<Column> findSearch(Map whereMap, int page, int size) {\n\t\tSpecification<Column> specification = createSpecification(whereMap);\n\t\tPageRequest pageRequest =  PageRequest.of(page-1, size);\n\t\treturn columnDao.findAll(specification, pageRequest);\n\t}", "url": "https://raw.githubusercontent.com/1127140426/tensquare/master/tensquare_article/src/main/java/com/tensquare/article/service/ColumnService.java", "stars": "34", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 62341, "method_name": "findSearch", "class_name": "ColumnService", "params": ["Map"], "throws": null, "modifiers": ["public"], "return_type": "List<Column>", "snippet": "\tpublic List<Column> findSearch(Map whereMap) {\n\t\tSpecification<Column> specification = createSpecification(whereMap);\n\t\treturn columnDao.findAll(specification);\n\t}", "url": "https://raw.githubusercontent.com/1127140426/tensquare/master/tensquare_article/src/main/java/com/tensquare/article/service/ColumnService.java", "stars": "34", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 62342, "method_name": "findById", "class_name": "ColumnService", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "Column", "snippet": "\tpublic Column findById(String id) {\n\t\treturn columnDao.findById(id).get();\n\t}", "url": "https://raw.githubusercontent.com/1127140426/tensquare/master/tensquare_article/src/main/java/com/tensquare/article/service/ColumnService.java", "stars": "34", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 62343, "method_name": "add", "class_name": "ColumnService", "params": ["Column"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void add(Column column) {\n\t\tcolumn.setId( idWorker.nextId()+\"\" );\n\t\tcolumnDao.save(column);\n\t}", "url": "https://raw.githubusercontent.com/1127140426/tensquare/master/tensquare_article/src/main/java/com/tensquare/article/service/ColumnService.java", "stars": "34", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 62344, "method_name": "update", "class_name": "ColumnService", "params": ["Column"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void update(Column column) {\n\t\tcolumnDao.save(column);\n\t}", "url": "https://raw.githubusercontent.com/1127140426/tensquare/master/tensquare_article/src/main/java/com/tensquare/article/service/ColumnService.java", "stars": "34", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 62345, "method_name": "deleteById", "class_name": "ColumnService", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void deleteById(String id) {\n\t\tcolumnDao.deleteById(id);\n\t}", "url": "https://raw.githubusercontent.com/1127140426/tensquare/master/tensquare_article/src/main/java/com/tensquare/article/service/ColumnService.java", "stars": "34", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 62346, "method_name": "createSpecification", "class_name": "ColumnService", "params": ["Map"], "throws": null, "modifiers": ["private"], "return_type": "Specification<Column>", "snippet": "\tprivate Specification<Column> createSpecification(Map searchMap) {\n\n\t\treturn new Specification<Column>() {\n\n\t\t\t@Override\n\t\t\tpublic Predicate toPredicate(Root<Column> root, CriteriaQuery<?> query, CriteriaBuilder cb) {\n\t\t\t\tList<Predicate> predicateList = new ArrayList<Predicate>();\n                // ID\n                if (searchMap.get(\"id\")!=null && !\"\".equals(searchMap.get(\"id\"))) {\n                \tpredicateList.add(cb.like(root.get(\"id\").as(String.class), \"%\"+(String)searchMap.get(\"id\")+\"%\"));\n                }\n                // \u4e13\u680f\u540d\u79f0\n                if (searchMap.get(\"name\")!=null && !\"\".equals(searchMap.get(\"name\"))) {\n                \tpredicateList.add(cb.like(root.get(\"name\").as(String.class), \"%\"+(String)searchMap.get(\"name\")+\"%\"));\n                }\n                // \u4e13\u680f\u7b80\u4ecb\n                if (searchMap.get(\"summary\")!=null && !\"\".equals(searchMap.get(\"summary\"))) {\n                \tpredicateList.add(cb.like(root.get(\"summary\").as(String.class), \"%\"+(String)searchMap.get(\"summary\")+\"%\"));\n                }\n                // \u7528\u6237ID\n                if (searchMap.get(\"userid\")!=null && !\"\".equals(searchMap.get(\"userid\"))) {\n                \tpredicateList.add(cb.like(root.get(\"userid\").as(String.class), \"%\"+(String)searchMap.get(\"userid\")+\"%\"));\n                }\n                // \u72b6\u6001\n                if (searchMap.get(\"state\")!=null && !\"\".equals(searchMap.get(\"state\"))) {\n                \tpredicateList.add(cb.like(root.get(\"state\").as(String.class), \"%\"+(String)searchMap.get(\"state\")+\"%\"));\n                }\n\t\t\t\t\n\t\t\t\treturn cb.and( predicateList.toArray(new Predicate[predicateList.size()]));\n\n\t\t\t}\n\t\t};\n\n\t}", "url": "https://raw.githubusercontent.com/1127140426/tensquare/master/tensquare_article/src/main/java/com/tensquare/article/service/ColumnService.java", "stars": "34", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 62347, "method_name": "onMeasure", "class_name": "SquareCardView", "params": ["int", "int"], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void onMeasure(int widthMeasureSpec, int heightMeasureSpec) {\n        super.onMeasure(SquareDelegate.measureWidth(widthMeasureSpec, heightMeasureSpec),\n                SquareDelegate.measureHeight(widthMeasureSpec, heightMeasureSpec));\n    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/widget/src/main/java/com/hjq/widget/square/SquareCardView.java", "stars": "1", "class_props": {"extends": "CardView", "implements": null, "modifiers": ["final", "public"]}}, {"id": 62348, "method_name": "onLayout", "class_name": "SwipeViewRenderer", "params": ["boolean", "int", "int", "int", "int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void onLayout (boolean p0, int p1, int p2, int p3, int p4)\n\t{\n\t\tn_onLayout (p0, p1, p2, p3, p4);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc643f46942d9dd1fff9/SwipeViewRenderer.java", "stars": "2", "class_props": {"extends": "crc643f46942d9dd1fff9", "implements": ["mono", "android"], "modifiers": ["public"]}}, {"id": 62349, "method_name": "n_onLayout", "class_name": "SwipeViewRenderer", "params": ["boolean", "int", "int", "int", "int"], "throws": null, "modifiers": ["private", "native"], "return_type": "void", "snippet": "\tprivate native void n_onLayout (boolean p0, int p1, int p2, int p3, int p4);\n\n\n\tpublic void onAttachedToWindow ()\n\t{\n\t\tn_onAttachedToWindow ();\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc643f46942d9dd1fff9/SwipeViewRenderer.java", "stars": "2", "class_props": {"extends": "crc643f46942d9dd1fff9", "implements": ["mono", "android"], "modifiers": ["public"]}}, {"id": 62350, "method_name": "onAttachedToWindow", "class_name": "SwipeViewRenderer", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void onAttachedToWindow ()\n\t{\n\t\tn_onAttachedToWindow ();\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc643f46942d9dd1fff9/SwipeViewRenderer.java", "stars": "2", "class_props": {"extends": "crc643f46942d9dd1fff9", "implements": ["mono", "android"], "modifiers": ["public"]}}, {"id": 62351, "method_name": "n_onAttachedToWindow", "class_name": "SwipeViewRenderer", "params": [], "throws": null, "modifiers": ["private", "native"], "return_type": "void", "snippet": "\tprivate native void n_onAttachedToWindow ();\n\n\n\tpublic boolean onTouchEvent (android.view.MotionEvent p0)\n\t{\n\t\treturn n_onTouchEvent (p0);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc643f46942d9dd1fff9/SwipeViewRenderer.java", "stars": "2", "class_props": {"extends": "crc643f46942d9dd1fff9", "implements": ["mono", "android"], "modifiers": ["public"]}}, {"id": 62352, "method_name": "onTouchEvent", "class_name": "SwipeViewRenderer", "params": ["android"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "\tpublic boolean onTouchEvent (android.view.MotionEvent p0)\n\t{\n\t\treturn n_onTouchEvent (p0);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc643f46942d9dd1fff9/SwipeViewRenderer.java", "stars": "2", "class_props": {"extends": "crc643f46942d9dd1fff9", "implements": ["mono", "android"], "modifiers": ["public"]}}, {"id": 62353, "method_name": "n_onTouchEvent", "class_name": "SwipeViewRenderer", "params": ["android"], "throws": null, "modifiers": ["private", "native"], "return_type": "boolean", "snippet": "\tprivate native boolean n_onTouchEvent (android.view.MotionEvent p0);\n\n\n\tpublic boolean onInterceptTouchEvent (android.view.MotionEvent p0)\n\t{\n\t\treturn n_onInterceptTouchEvent (p0);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc643f46942d9dd1fff9/SwipeViewRenderer.java", "stars": "2", "class_props": {"extends": "crc643f46942d9dd1fff9", "implements": ["mono", "android"], "modifiers": ["public"]}}, {"id": 62354, "method_name": "onInterceptTouchEvent", "class_name": "SwipeViewRenderer", "params": ["android"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "\tpublic boolean onInterceptTouchEvent (android.view.MotionEvent p0)\n\t{\n\t\treturn n_onInterceptTouchEvent (p0);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc643f46942d9dd1fff9/SwipeViewRenderer.java", "stars": "2", "class_props": {"extends": "crc643f46942d9dd1fff9", "implements": ["mono", "android"], "modifiers": ["public"]}}, {"id": 62355, "method_name": "n_onInterceptTouchEvent", "class_name": "SwipeViewRenderer", "params": ["android"], "throws": null, "modifiers": ["private", "native"], "return_type": "boolean", "snippet": "\tprivate native boolean n_onInterceptTouchEvent (android.view.MotionEvent p0);\n\n\n\tpublic boolean onDown (android.view.MotionEvent p0)\n\t{\n\t\treturn n_onDown (p0);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc643f46942d9dd1fff9/SwipeViewRenderer.java", "stars": "2", "class_props": {"extends": "crc643f46942d9dd1fff9", "implements": ["mono", "android"], "modifiers": ["public"]}}, {"id": 62356, "method_name": "onDown", "class_name": "SwipeViewRenderer", "params": ["android"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "\tpublic boolean onDown (android.view.MotionEvent p0)\n\t{\n\t\treturn n_onDown (p0);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc643f46942d9dd1fff9/SwipeViewRenderer.java", "stars": "2", "class_props": {"extends": "crc643f46942d9dd1fff9", "implements": ["mono", "android"], "modifiers": ["public"]}}, {"id": 62357, "method_name": "n_onDown", "class_name": "SwipeViewRenderer", "params": ["android"], "throws": null, "modifiers": ["private", "native"], "return_type": "boolean", "snippet": "\tprivate native boolean n_onDown (android.view.MotionEvent p0);\n\n\n\tpublic boolean onFling (android.view.MotionEvent p0, android.view.MotionEvent p1, float p2, float p3)\n\t{\n\t\treturn n_onFling (p0, p1, p2, p3);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc643f46942d9dd1fff9/SwipeViewRenderer.java", "stars": "2", "class_props": {"extends": "crc643f46942d9dd1fff9", "implements": ["mono", "android"], "modifiers": ["public"]}}, {"id": 62358, "method_name": "onFling", "class_name": "SwipeViewRenderer", "params": ["android", "android", "float", "float"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "\tpublic boolean onFling (android.view.MotionEvent p0, android.view.MotionEvent p1, float p2, float p3)\n\t{\n\t\treturn n_onFling (p0, p1, p2, p3);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc643f46942d9dd1fff9/SwipeViewRenderer.java", "stars": "2", "class_props": {"extends": "crc643f46942d9dd1fff9", "implements": ["mono", "android"], "modifiers": ["public"]}}, {"id": 62359, "method_name": "n_onFling", "class_name": "SwipeViewRenderer", "params": ["android", "android", "float", "float"], "throws": null, "modifiers": ["private", "native"], "return_type": "boolean", "snippet": "\tprivate native boolean n_onFling (android.view.MotionEvent p0, android.view.MotionEvent p1, float p2, float p3);\n\n\n\tpublic void onLongPress (android.view.MotionEvent p0)\n\t{\n\t\tn_onLongPress (p0);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc643f46942d9dd1fff9/SwipeViewRenderer.java", "stars": "2", "class_props": {"extends": "crc643f46942d9dd1fff9", "implements": ["mono", "android"], "modifiers": ["public"]}}, {"id": 62360, "method_name": "onLongPress", "class_name": "SwipeViewRenderer", "params": ["android"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void onLongPress (android.view.MotionEvent p0)\n\t{\n\t\tn_onLongPress (p0);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc643f46942d9dd1fff9/SwipeViewRenderer.java", "stars": "2", "class_props": {"extends": "crc643f46942d9dd1fff9", "implements": ["mono", "android"], "modifiers": ["public"]}}, {"id": 62361, "method_name": "n_onLongPress", "class_name": "SwipeViewRenderer", "params": ["android"], "throws": null, "modifiers": ["private", "native"], "return_type": "void", "snippet": "\tprivate native void n_onLongPress (android.view.MotionEvent p0);\n\n\n\tpublic boolean onScroll (android.view.MotionEvent p0, android.view.MotionEvent p1, float p2, float p3)\n\t{\n\t\treturn n_onScroll (p0, p1, p2, p3);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc643f46942d9dd1fff9/SwipeViewRenderer.java", "stars": "2", "class_props": {"extends": "crc643f46942d9dd1fff9", "implements": ["mono", "android"], "modifiers": ["public"]}}, {"id": 62362, "method_name": "onScroll", "class_name": "SwipeViewRenderer", "params": ["android", "android", "float", "float"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "\tpublic boolean onScroll (android.view.MotionEvent p0, android.view.MotionEvent p1, float p2, float p3)\n\t{\n\t\treturn n_onScroll (p0, p1, p2, p3);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc643f46942d9dd1fff9/SwipeViewRenderer.java", "stars": "2", "class_props": {"extends": "crc643f46942d9dd1fff9", "implements": ["mono", "android"], "modifiers": ["public"]}}, {"id": 62363, "method_name": "n_onScroll", "class_name": "SwipeViewRenderer", "params": ["android", "android", "float", "float"], "throws": null, "modifiers": ["private", "native"], "return_type": "boolean", "snippet": "\tprivate native boolean n_onScroll (android.view.MotionEvent p0, android.view.MotionEvent p1, float p2, float p3);\n\n\n\tpublic void onShowPress (android.view.MotionEvent p0)\n\t{\n\t\tn_onShowPress (p0);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc643f46942d9dd1fff9/SwipeViewRenderer.java", "stars": "2", "class_props": {"extends": "crc643f46942d9dd1fff9", "implements": ["mono", "android"], "modifiers": ["public"]}}, {"id": 62364, "method_name": "onShowPress", "class_name": "SwipeViewRenderer", "params": ["android"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void onShowPress (android.view.MotionEvent p0)\n\t{\n\t\tn_onShowPress (p0);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc643f46942d9dd1fff9/SwipeViewRenderer.java", "stars": "2", "class_props": {"extends": "crc643f46942d9dd1fff9", "implements": ["mono", "android"], "modifiers": ["public"]}}, {"id": 62365, "method_name": "n_onShowPress", "class_name": "SwipeViewRenderer", "params": ["android"], "throws": null, "modifiers": ["private", "native"], "return_type": "void", "snippet": "\tprivate native void n_onShowPress (android.view.MotionEvent p0);\n\n\n\tpublic boolean onSingleTapUp (android.view.MotionEvent p0)\n\t{\n\t\treturn n_onSingleTapUp (p0);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc643f46942d9dd1fff9/SwipeViewRenderer.java", "stars": "2", "class_props": {"extends": "crc643f46942d9dd1fff9", "implements": ["mono", "android"], "modifiers": ["public"]}}, {"id": 62366, "method_name": "onSingleTapUp", "class_name": "SwipeViewRenderer", "params": ["android"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "\tpublic boolean onSingleTapUp (android.view.MotionEvent p0)\n\t{\n\t\treturn n_onSingleTapUp (p0);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc643f46942d9dd1fff9/SwipeViewRenderer.java", "stars": "2", "class_props": {"extends": "crc643f46942d9dd1fff9", "implements": ["mono", "android"], "modifiers": ["public"]}}, {"id": 62367, "method_name": "n_onSingleTapUp", "class_name": "SwipeViewRenderer", "params": ["android"], "throws": null, "modifiers": ["private", "native"], "return_type": "boolean", "snippet": "\tprivate native boolean n_onSingleTapUp (android.view.MotionEvent p0);\n\n\tprivate java.util.ArrayList refList;\n\tpublic void monodroidAddReference (java.lang.Object obj)\n\t{\n\t\tif (refList == null)\n\t\t\trefList = new java.util.ArrayList ();\n\t\trefList.add (obj);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc643f46942d9dd1fff9/SwipeViewRenderer.java", "stars": "2", "class_props": {"extends": "crc643f46942d9dd1fff9", "implements": ["mono", "android"], "modifiers": ["public"]}}, {"id": 62368, "method_name": "monodroidAddReference", "class_name": "SwipeViewRenderer", "params": ["java"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void monodroidAddReference (java.lang.Object obj)\n\t{\n\t\tif (refList == null)\n\t\t\trefList = new java.util.ArrayList ();\n\t\trefList.add (obj);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc643f46942d9dd1fff9/SwipeViewRenderer.java", "stars": "2", "class_props": {"extends": "crc643f46942d9dd1fff9", "implements": ["mono", "android"], "modifiers": ["public"]}}, {"id": 62369, "method_name": "monodroidClearReferences", "class_name": "SwipeViewRenderer", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void monodroidClearReferences ()\n\t{\n\t\tif (refList != null)\n\t\t\trefList.clear ();\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc643f46942d9dd1fff9/SwipeViewRenderer.java", "stars": "2", "class_props": {"extends": "crc643f46942d9dd1fff9", "implements": ["mono", "android"], "modifiers": ["public"]}}, {"id": 62370, "method_name": "insertQuarter", "class_name": "SoldOutState", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void insertQuarter() {\n        System.out.println(\"The machine doesn't contain any gumballs\");\n    }", "url": "https://raw.githubusercontent.com/piyush6348/Design-Patterns/master/State%20Pattern/src/SoldOutState.java", "stars": "38", "class_props": {"extends": null, "implements": ["IState"], "modifiers": ["public"]}}, {"id": 62371, "method_name": "ejectQuarter", "class_name": "SoldOutState", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void ejectQuarter() {\n        System.out.println(\"The machine doesn't contain any gumballs\");\n    }", "url": "https://raw.githubusercontent.com/piyush6348/Design-Patterns/master/State%20Pattern/src/SoldOutState.java", "stars": "38", "class_props": {"extends": null, "implements": ["IState"], "modifiers": ["public"]}}, {"id": 62372, "method_name": "rotateCrank", "class_name": "SoldOutState", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void rotateCrank() {\n        System.out.println(\"The machine doesn't contain any gumballs\");\n    }", "url": "https://raw.githubusercontent.com/piyush6348/Design-Patterns/master/State%20Pattern/src/SoldOutState.java", "stars": "38", "class_props": {"extends": null, "implements": ["IState"], "modifiers": ["public"]}}, {"id": 62373, "method_name": "dispense", "class_name": "SoldOutState", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void dispense() {\n        System.out.println(\"The machine doesn't contain any gumballs\");\n    }", "url": "https://raw.githubusercontent.com/piyush6348/Design-Patterns/master/State%20Pattern/src/SoldOutState.java", "stars": "38", "class_props": {"extends": null, "implements": ["IState"], "modifiers": ["public"]}}, {"id": 62374, "method_name": "main", "class_name": "CarDemo", "params": ["String"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "\tpublic static void main(String[] args) {\n\t\tCar bmw = new Car();\n\t\t//bmw.color = \"white\";\n\t\tbmw.model = \"bmw 325\";\n\t\tbmw.price = 39000.99;\n\t\tbmw.name = \"X5\"; \n\t\tbmw.turnLeft();\n\t\n\t}", "url": "https://raw.githubusercontent.com/Suranchiyev/java-sdet-2020/master/src/day9/CarDemo.java", "stars": "21", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 62375, "method_name": "getFieldOrder", "class_name": "StdString64", "params": [], "throws": null, "modifiers": ["protected"], "return_type": "List<String>", "snippet": "    protected List<String> getFieldOrder() {\n        return Arrays.asList(\"isTiny\", \"size\", \"value\");\n    }", "url": "https://raw.githubusercontent.com/wmm1996528/unidbg_douyin10/master/src/main/java/com/github/unidbg/unix/struct/StdString64.java", "stars": "16", "class_props": {"extends": "StdString", "implements": null, "modifiers": ["public"]}}, {"id": 62376, "method_name": "getDataPointer", "class_name": "StdString64", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Pointer", "snippet": "    public Pointer getDataPointer() {\n        boolean isTiny = (this.isTiny & 1) == 0;\n        if (isTiny) {\n            return getPointer().share(1);\n        } else {\n            return value;\n        }\n    }", "url": "https://raw.githubusercontent.com/wmm1996528/unidbg_douyin10/master/src/main/java/com/github/unidbg/unix/struct/StdString64.java", "stars": "16", "class_props": {"extends": "StdString", "implements": null, "modifiers": ["public"]}}, {"id": 62377, "method_name": "getDataSize", "class_name": "StdString64", "params": [], "throws": null, "modifiers": ["public"], "return_type": "long", "snippet": "    public long getDataSize() {\n        boolean isTiny = (this.isTiny & 1) == 0;\n        if (isTiny) {\n            return (this.isTiny & 0xff) >> 1;\n        } else {\n            return size;\n        }\n    }", "url": "https://raw.githubusercontent.com/wmm1996528/unidbg_douyin10/master/src/main/java/com/github/unidbg/unix/struct/StdString64.java", "stars": "16", "class_props": {"extends": "StdString", "implements": null, "modifiers": ["public"]}}, {"id": 62378, "method_name": "create", "class_name": "SignPactIncident", "params": ["Empire", "Empire"], "throws": null, "modifiers": ["public", "static"], "return_type": "SignPactIncident", "snippet": "    public static SignPactIncident create(Empire e1, Empire e2) {\n        SignPactIncident inc = new SignPactIncident(e1, e2);\n        return inc;\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/incidents/SignPactIncident.java", "stars": "74", "class_props": {"extends": "DiplomaticIncident", "implements": null, "modifiers": ["public"]}}, {"id": 62379, "method_name": "title", "class_name": "SignPactIncident", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String title()         { return text(\"INC_SIGNED_PACT_TITLE\"); }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/incidents/SignPactIncident.java", "stars": "74", "class_props": {"extends": "DiplomaticIncident", "implements": null, "modifiers": ["public"]}}, {"id": 62380, "method_name": "description", "class_name": "SignPactIncident", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String description()   { return decode(text(\"INC_SIGNED_PACT_DESC\")); }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/incidents/SignPactIncident.java", "stars": "74", "class_props": {"extends": "DiplomaticIncident", "implements": null, "modifiers": ["public"]}}, {"id": 62381, "method_name": "key", "class_name": "SignPactIncident", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String key()           { return \"Sign Pact\"; }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/incidents/SignPactIncident.java", "stars": "74", "class_props": {"extends": "DiplomaticIncident", "implements": null, "modifiers": ["public"]}}, {"id": 62382, "method_name": "decode", "class_name": "SignPactIncident", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String decode(String s) {\n        String s1 = super.decode(s);\n        s1 = galaxy().empire(empMe).replaceTokens(s1, \"my\");\n        s1 = galaxy().empire(empYou).replaceTokens(s1, \"your\");\n        return s1;\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/incidents/SignPactIncident.java", "stars": "74", "class_props": {"extends": "DiplomaticIncident", "implements": null, "modifiers": ["public"]}}, {"id": 62383, "method_name": "main", "class_name": "Demo01Recurison", "params": ["String"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void main(String[] args) {\n        //a();\n        b(1);\n    }", "url": "https://raw.githubusercontent.com/liuminchao123/JavaWeb_Learning/master/02.%20java/Java/%E9%BB%91%E9%A9%AC%E6%95%99%E7%A8%8B/19.%E3%80%90File%E7%B1%BB%E3%80%81%E9%80%92%E5%BD%92%E3%80%91-%E7%AC%94%E8%AE%B0/code/08_FileAndRecursion/src/com/itheima/demo02/Recursion/Demo01Recurison.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 62384, "method_name": "b", "class_name": "Demo01Recurison", "params": ["int"], "throws": null, "modifiers": ["static", "private"], "return_type": "void", "snippet": "    private static void b(int i) {\n        System.out.println(i);\n        if(i==20000){\n            return; //\u7ed3\u675f\u65b9\u6cd5\n        }\n        b(++i);\n    }", "url": "https://raw.githubusercontent.com/liuminchao123/JavaWeb_Learning/master/02.%20java/Java/%E9%BB%91%E9%A9%AC%E6%95%99%E7%A8%8B/19.%E3%80%90File%E7%B1%BB%E3%80%81%E9%80%92%E5%BD%92%E3%80%91-%E7%AC%94%E8%AE%B0/code/08_FileAndRecursion/src/com/itheima/demo02/Recursion/Demo01Recurison.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 62385, "method_name": "a", "class_name": "Demo01Recurison", "params": [], "throws": null, "modifiers": ["static", "private"], "return_type": "void", "snippet": "    private static void a() {\n        System.out.println(\"a\u65b9\u6cd5!\");\n        a();\n    }", "url": "https://raw.githubusercontent.com/liuminchao123/JavaWeb_Learning/master/02.%20java/Java/%E9%BB%91%E9%A9%AC%E6%95%99%E7%A8%8B/19.%E3%80%90File%E7%B1%BB%E3%80%81%E9%80%92%E5%BD%92%E3%80%91-%E7%AC%94%E8%AE%B0/code/08_FileAndRecursion/src/com/itheima/demo02/Recursion/Demo01Recurison.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 62386, "method_name": "stopWatcher", "class_name": "LocalFlowWatcher", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void stopWatcher() {\n    // Just freeing stuff\n    if (this.isShutdown) {\n      return;\n    }\n\n    this.isShutdown = true;\n    this.runner.removeListener(this.watcherListener);\n    this.runner = null;\n\n    getLogger().info(\"Stopping watcher, and unblocking pipeline\");\n    super.unblockAllWatches();\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-exec-server/src/main/java/azkaban/execapp/event/LocalFlowWatcher.java", "stars": "18", "class_props": {"extends": "FlowWatcher", "implements": null, "modifiers": ["public"]}}, {"id": 62387, "method_name": "handleEvent", "class_name": "LocalFlowWatcherListener", "params": ["Event"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void handleEvent(final Event event) {\n      if (event.getType() == EventType.JOB_FINISHED) {\n        if (event.getRunner() instanceof FlowRunner) {\n          // The flow runner will finish a job without it running\n          final EventData eventData = event.getData();\n          if (eventData.getNestedId() != null) {\n            handleJobStatusChange(eventData.getNestedId(), eventData.getStatus());\n          }\n        } else if (event.getRunner() instanceof JobRunner) {\n          // A job runner is finished\n          final JobRunner runner = (JobRunner) event.getRunner();\n          final ExecutableNode node = runner.getNode();\n          getLogger().info(node + \" looks like \" + node.getStatus());\n          handleJobStatusChange(node.getNestedId(), node.getStatus());\n        }\n      } else if (event.getType() == EventType.FLOW_FINISHED) {\n        stopWatcher();\n      }\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-exec-server/src/main/java/azkaban/execapp/event/LocalFlowWatcher.java", "stars": "18", "class_props": {"extends": null, "implements": ["EventListener"], "modifiers": ["public"]}}, {"id": 62388, "method_name": "getTitle", "class_name": "Action", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getTitle() {\n        return title;\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/model/process/queue/Action.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 62389, "method_name": "getShortcut", "class_name": "Action", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getShortcut() {\n        return shortcut;\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/model/process/queue/Action.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 62390, "method_name": "getStyle", "class_name": "Action", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getStyle() {\n        return style;\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/model/process/queue/Action.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 62391, "method_name": "getStatusIds", "class_name": "Action", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Set<Integer>", "snippet": "    public Set<Integer> getStatusIds() {\n        return statusIds;\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/model/process/queue/Action.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 62392, "method_name": "getCommands", "class_name": "Action", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getCommands() {\n        return commands;\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/model/process/queue/Action.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 62393, "method_name": "main", "class_name": "Restaurant", "params": ["String"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "\tpublic static void main(String[] args) {\n\t\t// object and instance same words\n\t\tTable tableOne = new Table();\n\t\t\n\t\tSystem.out.println(tableOne);\n\t\tSystem.out.println(\"----------\");\n\t\t\n\t\t// instance variables have default values\n\t\t//tableOne.displayDetails();\n\t\t\n\t\ttableOne.id = 1;\n\t\ttableOne.color = \"black\";\n\t\ttableOne.type = \"4 people table\";\t\n\t\ttableOne.height = 50;\n\t\ttableOne.width = 200;\n\t\ttableOne.isReserved = false;\n\t\ttableOne.displayDetails();\n\t\t\n\t\tTable tableTwo = new Table();\n\t\tSystem.out.println(\"Display tableTwo:\");\n\t\t//tableTwo.displayDetails();\n\t\t\n\t\ttableTwo.id = 2;\n\t\ttableTwo.color = \"white\";\n\t\ttableTwo.type = \"6 people table\";\n\t\ttableTwo.height = 50;\n\t\ttableTwo.width = 300;\n\t\ttableTwo.isReserved = true;\n\t\ttableTwo.displayDetails();\n\t}", "url": "https://raw.githubusercontent.com/Suranchiyev/java-sdet-2020/master/src/day9/Restaurant.java", "stars": "21", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 62394, "method_name": "initElements", "class_name": "DarkOakTanbarkBlock", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void initElements() {\n\t\telements.blocks.add(() -> new CustomBlock());\n\t\telements.items\n\t\t\t\t.add(() -> new BlockItem(block, new Item.Properties().group(ItemGroup.BUILDING_BLOCKS)).setRegistryName(block.getRegistryName()));\n\t}", "url": "https://raw.githubusercontent.com/KarogathModdingStudios/Enhanced-Vanilla-1.15/master/src/main/java/com/karogath/enhancedvanilla/block/DarkOakTanbarkBlock.java", "stars": "2", "class_props": {"extends": "EnhancedVanillaElements", "implements": null, "modifiers": ["public"]}}, {"id": 62395, "method_name": "getDrops", "class_name": "CustomBlock", "params": ["BlockState", "LootContext"], "throws": null, "modifiers": ["public"], "return_type": "List<ItemStack>", "snippet": "\t\tpublic List<ItemStack> getDrops(BlockState state, LootContext.Builder builder) {\n\t\t\tList<ItemStack> dropsOriginal = super.getDrops(state, builder);\n\t\t\tif (!dropsOriginal.isEmpty())\n\t\t\t\treturn dropsOriginal;\n\t\t\treturn Collections.singletonList(new ItemStack(this, 1));\n\t\t}", "url": "https://raw.githubusercontent.com/KarogathModdingStudios/Enhanced-Vanilla-1.15/master/src/main/java/com/karogath/enhancedvanilla/block/DarkOakTanbarkBlock.java", "stars": "2", "class_props": {"extends": "FallingBlock", "implements": null, "modifiers": ["public", "static"]}}, {"id": 62396, "method_name": "setFlyBehaviour", "class_name": "Duck", "params": ["IFlyBehaviour"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setFlyBehaviour(IFlyBehaviour flyBehaviour) {\n        this.flyBehaviour = flyBehaviour;\n    }", "url": "https://raw.githubusercontent.com/piyush6348/Design-Patterns/master/Strategy%20Pattern/src/Duck.java", "stars": "38", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 62397, "method_name": "setQuackBehaviour", "class_name": "Duck", "params": ["IQuackBehaviour"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setQuackBehaviour(IQuackBehaviour quackBehaviour) {\n        this.quackBehaviour = quackBehaviour;\n    }", "url": "https://raw.githubusercontent.com/piyush6348/Design-Patterns/master/Strategy%20Pattern/src/Duck.java", "stars": "38", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 62398, "method_name": "performQuack", "class_name": "Duck", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void performQuack() {\n        this.quackBehaviour.quack();\n    }", "url": "https://raw.githubusercontent.com/piyush6348/Design-Patterns/master/Strategy%20Pattern/src/Duck.java", "stars": "38", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 62399, "method_name": "performFly", "class_name": "Duck", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void performFly() {\n        this.flyBehaviour.fly();\n    }", "url": "https://raw.githubusercontent.com/piyush6348/Design-Patterns/master/Strategy%20Pattern/src/Duck.java", "stars": "38", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 62400, "method_name": "swim", "class_name": "Duck", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void swim() {\n        // Every type of Duck can swim\n    }", "url": "https://raw.githubusercontent.com/piyush6348/Design-Patterns/master/Strategy%20Pattern/src/Duck.java", "stars": "38", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 62401, "method_name": "display", "class_name": "Duck", "params": [], "throws": null, "modifiers": ["public", "abstract"], "return_type": "void", "snippet": "    public abstract void display();\n}\n\n", "url": "https://raw.githubusercontent.com/piyush6348/Design-Patterns/master/Strategy%20Pattern/src/Duck.java", "stars": "38", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 62402, "method_name": "Initialize", "class_name": "ParticleSystem", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void Initialize() {\n\t\t\n\t\tparticles = new Particle[particleCount];\t\t\n\t\t\n\t\tfor(int  i = 0; i < particles.length; i++) {\n\t\t\tparticles[i] = new Particle(this, i);\n\t\t\tparticles[i].setVelocity(Random.range(minimumVelocity, maximumVelocity + 1));\n\t\t\tparticles[i].setScale(Random.range(minimumSize, maximumSize + 1));\n\t\t\tparticles[i].setPosition(x, y);\n\t\t\tif(this.type == ParticleSystem.TYPE_CIRCULAR) {\n\t\t\t\t\n\t\t\t\tparticles[i].setDirection(Random.range(0, 8));\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t}", "url": "https://raw.githubusercontent.com/jabo-bernardo/Kree-Java/master/src/dev/jabo/kree/components/ParticleSystem.java", "stars": "33", "class_props": {"extends": "Component", "implements": null, "modifiers": ["public"]}}, {"id": 62403, "method_name": "Update", "class_name": "ParticleSystem", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void Update() {\t\t\n\t\tparticleLeft = 0;\n\t\talive = true;\n\t\tfor (Particle particle : particles) {\n\t\t\tif(particle == null) continue;\t\t\t\n\t\t\tparticle.Update();\n\t\t\tparticleLeft++;\n\t\t}\n\t\tif(particleLeft == 0) {\n\t\t\talive = false;\n\t\t}\n\t}", "url": "https://raw.githubusercontent.com/jabo-bernardo/Kree-Java/master/src/dev/jabo/kree/components/ParticleSystem.java", "stars": "33", "class_props": {"extends": "Component", "implements": null, "modifiers": ["public"]}}, {"id": 62404, "method_name": "Render", "class_name": "ParticleSystem", "params": ["Graphics"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void Render(Graphics g) {\n\t\tfor (Particle particle : particles) {\n\t\t\tif(particle == null) continue;\n\t\t\tg.setColor(color);\n\t\t\tparticle.Render(g);\n\t\t}\n\t}", "url": "https://raw.githubusercontent.com/jabo-bernardo/Kree-Java/master/src/dev/jabo/kree/components/ParticleSystem.java", "stars": "33", "class_props": {"extends": "Component", "implements": null, "modifiers": ["public"]}}, {"id": 62405, "method_name": "isAlive", "class_name": "ParticleSystem", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "\tpublic boolean isAlive() {\n\t\treturn alive;\n\t}", "url": "https://raw.githubusercontent.com/jabo-bernardo/Kree-Java/master/src/dev/jabo/kree/components/ParticleSystem.java", "stars": "33", "class_props": {"extends": "Component", "implements": null, "modifiers": ["public"]}}, {"id": 62406, "method_name": "getId", "class_name": "ExposureDay", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "\tpublic int getId() {\n\t\treturn id;\n\t}", "url": "https://raw.githubusercontent.com/DP-3T/dp3t-sdk-android/master-alpha/dp3t-sdk/sdk/src/main/java/org/dpppt/android/sdk/internal/database/models/ExposureDay.java", "stars": "139", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 62407, "method_name": "setId", "class_name": "ExposureDay", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void setId(int id) {\n\t\tthis.id = id;\n\t}", "url": "https://raw.githubusercontent.com/DP-3T/dp3t-sdk-android/master-alpha/dp3t-sdk/sdk/src/main/java/org/dpppt/android/sdk/internal/database/models/ExposureDay.java", "stars": "139", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 62408, "method_name": "getExposedDate", "class_name": "ExposureDay", "params": [], "throws": null, "modifiers": ["public"], "return_type": "DayDate", "snippet": "\tpublic DayDate getExposedDate() {\n\t\treturn exposedDate;\n\t}", "url": "https://raw.githubusercontent.com/DP-3T/dp3t-sdk-android/master-alpha/dp3t-sdk/sdk/src/main/java/org/dpppt/android/sdk/internal/database/models/ExposureDay.java", "stars": "139", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 62409, "method_name": "setExposedDate", "class_name": "ExposureDay", "params": ["DayDate"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void setExposedDate(DayDate exposedDate) {\n\t\tthis.exposedDate = exposedDate;\n\t}", "url": "https://raw.githubusercontent.com/DP-3T/dp3t-sdk-android/master-alpha/dp3t-sdk/sdk/src/main/java/org/dpppt/android/sdk/internal/database/models/ExposureDay.java", "stars": "139", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 62410, "method_name": "getReportDate", "class_name": "ExposureDay", "params": [], "throws": null, "modifiers": ["public"], "return_type": "long", "snippet": "\tpublic long getReportDate() {\n\t\treturn reportDate;\n\t}", "url": "https://raw.githubusercontent.com/DP-3T/dp3t-sdk-android/master-alpha/dp3t-sdk/sdk/src/main/java/org/dpppt/android/sdk/internal/database/models/ExposureDay.java", "stars": "139", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 62411, "method_name": "setReportDate", "class_name": "ExposureDay", "params": ["long"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void setReportDate(long reportDate) {\n\t\tthis.reportDate = reportDate;\n\t}", "url": "https://raw.githubusercontent.com/DP-3T/dp3t-sdk-android/master-alpha/dp3t-sdk/sdk/src/main/java/org/dpppt/android/sdk/internal/database/models/ExposureDay.java", "stars": "139", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 62412, "method_name": "main", "class_name": "ThymeleafApplication", "params": ["String"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void main(String[] args) {\n        SpringApplication.run(ThymeleafApplication.class, args);\n    }", "url": "https://raw.githubusercontent.com/MichaelDYZ/springboot-thymeleaf/master/springboot-thymeleaf/src/main/java/com/thymeleaf/ThymeleafApplication.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 62413, "method_name": "getQueue", "class_name": "ProcessQueueCache", "params": ["int", "User"], "throws": null, "modifiers": ["public", "static"], "return_type": "Queue", "snippet": "    public static Queue getQueue(int id, User user) {\n        Queue result = holder.getInstance().queueMap.get(id);\n        // \u0444\u0438\u043b\u044c\u0442\u0440 \u043f\u043e \u0440\u0430\u0437\u0440\u0435\u0448\u0451\u043d\u043d\u044b\u043c \u043e\u0447\u0435\u0440\u0435\u0434\u044f\u043c \u043f\u0440\u043e\u0446\u0435\u0441\u0441\u043e\u0432\n        if (result != null && user != null && !user.getQueueIds().contains(result.getId())) {\n            result = null;\n        }\n        return result;\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/cache/ProcessQueueCache.java", "stars": "12", "class_props": {"extends": "Cache", "implements": null, "modifiers": ["public"]}}, {"id": 62414, "method_name": "getQueue", "class_name": "ProcessQueueCache", "params": ["int"], "throws": null, "modifiers": ["public", "static"], "return_type": "Queue", "snippet": "    public static Queue getQueue(int id) {\n        return holder.getInstance().queueMap.get(id);\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/cache/ProcessQueueCache.java", "stars": "12", "class_props": {"extends": "Cache", "implements": null, "modifiers": ["public"]}}, {"id": 62415, "method_name": "getQueueMap", "class_name": "ProcessQueueCache", "params": [], "throws": null, "modifiers": ["public", "static"], "return_type": "Map<Integer,Queue>", "snippet": "    public static Map<Integer, Queue> getQueueMap() {\n        return holder.getInstance().queueMap;\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/cache/ProcessQueueCache.java", "stars": "12", "class_props": {"extends": "Cache", "implements": null, "modifiers": ["public"]}}, {"id": 62416, "method_name": "getQueueList", "class_name": "ProcessQueueCache", "params": [], "throws": null, "modifiers": ["public", "static"], "return_type": "List<Queue>", "snippet": "    public static List<Queue> getQueueList() {\n        return holder.getInstance().queueList;\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/cache/ProcessQueueCache.java", "stars": "12", "class_props": {"extends": "Cache", "implements": null, "modifiers": ["public"]}}, {"id": 62417, "method_name": "getUserQueueList", "class_name": "ProcessQueueCache", "params": ["User"], "throws": null, "modifiers": ["public", "static"], "return_type": "List<Queue>", "snippet": "    public static List<Queue> getUserQueueList(User user) {\n        List<Queue> result = new ArrayList<Queue>();\n\n        for (Queue queue : holder.getInstance().queueList) {\n            if (user.getQueueIds().contains(queue.getId())) {\n                result.add(queue);\n            }\n        }\n\n        return result;\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/cache/ProcessQueueCache.java", "stars": "12", "class_props": {"extends": "Cache", "implements": null, "modifiers": ["public"]}}, {"id": 62418, "method_name": "flush", "class_name": "ProcessQueueCache", "params": ["Connection"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void flush(Connection con) {\n        holder.flush(con);\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/cache/ProcessQueueCache.java", "stars": "12", "class_props": {"extends": "Cache", "implements": null, "modifiers": ["public"]}}, {"id": 62419, "method_name": "newInstance", "class_name": "ProcessQueueCache", "params": [], "throws": null, "modifiers": ["protected"], "return_type": "ProcessQueueCache", "snippet": "    protected ProcessQueueCache newInstance() {\n        ProcessQueueCache result = new ProcessQueueCache();\n\n        Connection con = Setup.getSetup().getDBConnectionFromPool();\n        try {\n            result.queueMap = new HashMap<Integer, Queue>();\n            result.queueList = new ArrayList<Queue>();\n\n            QueueDAO queueDAO = new QueueDAO(con);\n            for (Queue queue : queueDAO.getQueueList()) {\n                // \u0432\u044b\u0431\u043e\u0440 \u044f\u0432\u043d\u043e \u0443\u043a\u0430\u0437\u0430\u043d\u043d\u044b\u0445 \u0432 \u043a\u043e\u043d\u0444\u0438\u0433\u0443\u0440\u0430\u0446\u0438\u0438 \u043e\u0447\u0435\u0440\u0435\u0434\u0438 \u0442\u0438\u043f\u043e\u0432 \u043f\u0440\u043e\u0446\u0435\u0441\u0441\u043e\u0432\n                queue.setProcessTypeIds(queueDAO.getQueueProcessTypeIds(queue.getId()));\n\n                if (log.isDebugEnabled()) {\n                    log.debug(\"Queue \" + queue.getId() + \" selected process types: \" + Utils.toString(queue.getProcessTypeIds()));\n                }\n\n                // \u0432\u044b\u0431\u043e\u0440 \u0434\u043e\u0447\u0435\u0440\u043d\u0438\u0445 \u0442\u0438\u043f\u043e\u0432 \u043f\u0440\u0438\u0432\u044f\u0437\u0430\u043d\u043d\u044b\u0445 \u043f\u0440\u043e\u0446\u0435\u0441\u0441\u043e\u0432\n                queue.setProcessTypeIds(ProcessTypeCache.getTypeTreeRoot().getSelectedChildIds(queue.getProcessTypeIds()));\n\n                if (log.isDebugEnabled()) {\n                    log.debug(\"Queue \" + queue.getId() + \" process types with childs: \" + Utils.toString(queue.getProcessTypeIds()));\n                }\n\n                queue.extractFiltersAndSorts();\n\n                result.queueMap.put(queue.getId(), queue);\n                result.queueList.add(queue);\n            }\n        } catch (Exception e) {\n            log.error(e.getMessage(), e);\n        } finally {\n            SQLUtils.closeConnection(con);\n        }\n\n        return result;\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/cache/ProcessQueueCache.java", "stars": "12", "class_props": {"extends": "Cache", "implements": null, "modifiers": ["public"]}}, {"id": 62420, "method_name": "test1", "class_name": "JdbcTemplateDemo2", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void test1() {\n        //2\u3001\u5b9a\u4e49sql\n        String sql = \"update student set sex = 9 where id = 2\";\n        //3\u3001\u6267\u884csql\n        int count = template.update(sql);\n        System.out.println(count);\n    }", "url": "https://raw.githubusercontent.com/chengcheng1021/javaStudy/master/src/jdbc/datasource/jdbctemplate/JdbcTemplateDemo2.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 62421, "method_name": "test2", "class_name": "JdbcTemplateDemo2", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void test2() {\n        //2\u3001\u5b9a\u4e49sql\n        String sql = \"insert into student value (?, ?, ?)\";\n        //3\u3001\u6267\u884csql\n        int count = template.update(sql,null, \"hahaha\" ,1);\n        System.out.println(count);\n    }", "url": "https://raw.githubusercontent.com/chengcheng1021/javaStudy/master/src/jdbc/datasource/jdbctemplate/JdbcTemplateDemo2.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 62422, "method_name": "test3", "class_name": "JdbcTemplateDemo2", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void test3() {\n        //2\u3001\u5b9a\u4e49sql\n        String sql = \"select * from student where id = ?\";\n        //3\u3001\u6267\u884csql\n        Map<String, Object> map = template.queryForMap(sql, 2);\n        System.out.println(map);\n    }", "url": "https://raw.githubusercontent.com/chengcheng1021/javaStudy/master/src/jdbc/datasource/jdbctemplate/JdbcTemplateDemo2.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 62423, "method_name": "test4", "class_name": "JdbcTemplateDemo2", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void test4() {\n        //2\u3001\u5b9a\u4e49sql\n        String sql = \"select * from student\";\n        //3\u3001\u6267\u884csql\n        List<Map<String, Object>> list = template.queryForList(sql);\n        System.out.println(list);\n    }", "url": "https://raw.githubusercontent.com/chengcheng1021/javaStudy/master/src/jdbc/datasource/jdbctemplate/JdbcTemplateDemo2.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 62424, "method_name": "test5", "class_name": "JdbcTemplateDemo2", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void test5() {\n        //2\u3001\u5b9a\u4e49sql\n        String sql = \"select * from emp\";\n        //3\u3001\u6267\u884csql\n        List<Emp> list = template.query(sql, new RowMapper<Emp>() {\n            @Override\n            public Emp mapRow(ResultSet rs, int i) throws SQLException {\n                Emp emp = new Emp();\n                int id = rs.getInt(\"id\");\n                String admin_login = rs.getString(\"admin_login\");\n                int last_login_time = rs.getInt(\"last_login_time\");\n                int status = rs.getInt(\"status\");\n                Date deleted_at = rs.getDate(\"deleted_at\");\n                String last_login_ip = rs.getString(\"last_login_ip\");\n\n                emp.setId(id);\n                emp.setAdmin_login(admin_login);\n                emp.setLast_login_time(last_login_time);\n                emp.setStatus(status);\n                emp.setDeleted_at(deleted_at);\n                emp.setLast_login_ip(last_login_ip);\n\n                return emp;\n            }\n        });\n\n        for (Emp emp : list){\n            System.out.println(emp);\n        }\n    }", "url": "https://raw.githubusercontent.com/chengcheng1021/javaStudy/master/src/jdbc/datasource/jdbctemplate/JdbcTemplateDemo2.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 62425, "method_name": "test5_2", "class_name": "JdbcTemplateDemo2", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void test5_2() {\n        //2\u3001\u5b9a\u4e49sql\n        String sql = \"select * from emp\";\n        //3\u3001\u6267\u884csql\n        List<Emp> list = template.query(sql, new BeanPropertyRowMapper<Emp>(Emp.class));\n        for (Emp emp : list){\n            System.out.println(emp);\n        }\n    }", "url": "https://raw.githubusercontent.com/chengcheng1021/javaStudy/master/src/jdbc/datasource/jdbctemplate/JdbcTemplateDemo2.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 62426, "method_name": "test6", "class_name": "JdbcTemplateDemo2", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void test6() {\n        //2\u3001\u5b9a\u4e49sql\n        String sql = \"select count(id) from emp\";\n        //3\u3001\u6267\u884csql\n        Long total = template.queryForObject(sql, Long.class);\n        System.out.println(total);\n    }", "url": "https://raw.githubusercontent.com/chengcheng1021/javaStudy/master/src/jdbc/datasource/jdbctemplate/JdbcTemplateDemo2.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 62427, "method_name": "contextLoads", "class_name": "MybatisApplicationTests", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "    void contextLoads() {\n\n    }", "url": "https://raw.githubusercontent.com/wanzicong/mybatis-study/master/src/test/java/com/mybatis/MybatisApplicationTests.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 62428, "method_name": "findAll", "class_name": "SpitController", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Result", "snippet": "    public Result findAll() {\n        return new Result(true, StatusCode.OK,\"\u67e5\u8be2\u6210\u529f\",spitService.findAll());\n    }", "url": "https://raw.githubusercontent.com/1127140426/tensquare/master/tensquare_spit/src/main/java/com/tensquare/spit/controller/SpitController.java", "stars": "34", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 62429, "method_name": "findById", "class_name": "SpitController", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "Result", "snippet": "    public Result findById(@PathVariable String spitId) {\n        return new Result(true,StatusCode.OK,\"\u67e5\u8be2\u6210\u529f\",spitService.findById(spitId));\n    }", "url": "https://raw.githubusercontent.com/1127140426/tensquare/master/tensquare_spit/src/main/java/com/tensquare/spit/controller/SpitController.java", "stars": "34", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 62430, "method_name": "save", "class_name": "SpitController", "params": ["Spit"], "throws": null, "modifiers": ["public"], "return_type": "Result", "snippet": "    public Result save(@RequestBody Spit spit) {\n        spitService.save(spit);\n        return new Result(true,StatusCode.OK,\"\u4fdd\u5b58\u6210\u529f\");\n    }", "url": "https://raw.githubusercontent.com/1127140426/tensquare/master/tensquare_spit/src/main/java/com/tensquare/spit/controller/SpitController.java", "stars": "34", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 62431, "method_name": "update", "class_name": "SpitController", "params": ["String", "Spit"], "throws": null, "modifiers": ["public"], "return_type": "Result", "snippet": "    public Result update(@PathVariable String spitId,@RequestBody Spit spit) {\n        spit.set_id(spitId);\n        spitService.update(spit);\n        return new Result(true,StatusCode.OK,\"\u66f4\u65b0\u6210\u529f\");\n    }", "url": "https://raw.githubusercontent.com/1127140426/tensquare/master/tensquare_spit/src/main/java/com/tensquare/spit/controller/SpitController.java", "stars": "34", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 62432, "method_name": "update", "class_name": "SpitController", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "Result", "snippet": "    public Result update(@PathVariable String spitId) {\n        spitService.deleteById(spitId);\n        return new Result(true,StatusCode.OK,\"\u5220\u9664\u6210\u529f\");\n    }", "url": "https://raw.githubusercontent.com/1127140426/tensquare/master/tensquare_spit/src/main/java/com/tensquare/spit/controller/SpitController.java", "stars": "34", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 62433, "method_name": "findByParentid", "class_name": "SpitController", "params": ["String", "int", "int"], "throws": null, "modifiers": ["public"], "return_type": "Result", "snippet": "    public Result findByParentid(@PathVariable String parentid,@PathVariable int page,@PathVariable int size) {\n        Page<Spit> pageData = spitService.findByParentid(parentid,page,size);\n        return new Result(true,StatusCode.OK,\"\u67e5\u8be2\u6210\u529f\",new PageResult<Spit>(pageData.getTotalElements(),pageData.getContent()));\n    }", "url": "https://raw.githubusercontent.com/1127140426/tensquare/master/tensquare_spit/src/main/java/com/tensquare/spit/controller/SpitController.java", "stars": "34", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 62434, "method_name": "thumbup", "class_name": "SpitController", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "Result", "snippet": "    public Result thumbup(@PathVariable String spitId) {\n        //\u5224\u65ad\u5f53\u524d\u7528\u6237\u662f\u5426\u5df2\u7ecf\u70b9\u8d5e\uff0c\u6682\u65f6\u628auserid\u5199\u6b7b\n        String userid = \"111\";\n        //\u5224\u65ad\u662f\u5426\u5df2\u7ecf\u70b9\u8d5e\n        if(redisTemplate.opsForValue().get(\"thumbup_\" + userid) != null) {\n            return new Result(false,StatusCode.REPERROR,\"\u4e0d\u80fd\u91cd\u590d\u70b9\u8d5e\");\n        }\n        spitService.thumbup(spitId);\n        redisTemplate.opsForValue().set(\"thumbup_\"+userid,1);\n        return new Result(true,StatusCode.OK,\"\u70b9\u8d5e\u6210\u529f\");\n    }", "url": "https://raw.githubusercontent.com/1127140426/tensquare/master/tensquare_spit/src/main/java/com/tensquare/spit/controller/SpitController.java", "stars": "34", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 62435, "method_name": "getProjectId", "class_name": "ProjectVersion", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "  public int getProjectId() {\n    return this.projectId;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-exec-server/src/main/java/com/webank/wedatasphere/schedulis/exec/execapp/ProjectVersion.java", "stars": "18", "class_props": {"extends": null, "implements": ["Comparable"], "modifiers": ["public"]}}, {"id": 62436, "method_name": "getVersion", "class_name": "ProjectVersion", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "  public int getVersion() {\n    return this.version;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-exec-server/src/main/java/com/webank/wedatasphere/schedulis/exec/execapp/ProjectVersion.java", "stars": "18", "class_props": {"extends": null, "implements": ["Comparable"], "modifiers": ["public"]}}, {"id": 62437, "method_name": "getInstalledDir", "class_name": "ProjectVersion", "params": [], "throws": null, "modifiers": ["public"], "return_type": "File", "snippet": "  public File getInstalledDir() {\n    return this.installedDir;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-exec-server/src/main/java/com/webank/wedatasphere/schedulis/exec/execapp/ProjectVersion.java", "stars": "18", "class_props": {"extends": null, "implements": ["Comparable"], "modifiers": ["public"]}}, {"id": 62438, "method_name": "setInstalledDir", "class_name": "ProjectVersion", "params": ["File"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void setInstalledDir(final File installedDir) {\n    this.installedDir = installedDir;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-exec-server/src/main/java/com/webank/wedatasphere/schedulis/exec/execapp/ProjectVersion.java", "stars": "18", "class_props": {"extends": null, "implements": ["Comparable"], "modifiers": ["public"]}}, {"id": 62439, "method_name": "compareTo", "class_name": "ProjectVersion", "params": ["ProjectVersion"], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "  public int compareTo(final ProjectVersion o) {\n    if (this.projectId == o.projectId) {\n      return this.version - o.version;\n    }\n\n    return this.projectId - o.projectId;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-exec-server/src/main/java/com/webank/wedatasphere/schedulis/exec/execapp/ProjectVersion.java", "stars": "18", "class_props": {"extends": null, "implements": ["Comparable"], "modifiers": ["public"]}}, {"id": 62440, "method_name": "toString", "class_name": "ProjectVersion", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "  public String toString() {\n    return \"ProjectVersion{\" + \"projectId=\" + this.projectId + \", version=\" + this.version\n        + \", installedDir=\"\n        + this.installedDir\n        + '}';\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-exec-server/src/main/java/com/webank/wedatasphere/schedulis/exec/execapp/ProjectVersion.java", "stars": "18", "class_props": {"extends": null, "implements": ["Comparable"], "modifiers": ["public"]}}, {"id": 62441, "method_name": "write", "class_name": "JodaTimeDeserializer", "params": ["JSONSerializer", "Object", "Object", "Type", "int"], "throws": ["IOException"], "modifiers": ["public"], "return_type": "void", "snippet": "    public void write(JSONSerializer serializer, Object object, Object fieldName, Type fieldType, int features) throws IOException {\n        SerializeWriter out = serializer.getWriter();\n        String resultStr = object.toString();\n        if (object == null) {\n            out.writeNull();\n            return;\n        }\n        if (fieldType == LocalDateTime.class) {\n            LocalDateTime localDateTime = (LocalDateTime) object;\n            resultStr = localDateTime.format(DateTimeFormatter.ofPattern(DateConstant.DATE_TIME_FORMATTER));\n        } else if (fieldType == LocalDate.class) {\n            LocalDate localDate = (LocalDate) object;\n            resultStr = localDate.format(DateTimeFormatter.ofPattern(DateConstant.DATE_FORMATTER));\n        } else if (fieldType == LocalTime.class) {\n            LocalTime localTime = (LocalTime) object;\n            resultStr = localTime.format(DateTimeFormatter.ofPattern(DateConstant.TIME_FORMATTER));\n        }\n        out.writeString(resultStr);\n    }", "url": "https://raw.githubusercontent.com/zeoio/fabric-toolkit/master/bcp-install-common/src/main/java/com/cgb/bcpinstall/common/fastJson/JodaTimeDeserializer.java", "stars": "7", "class_props": {"extends": null, "implements": ["ObjectSerializer"], "modifiers": ["public"]}}, {"id": 62442, "method_name": "invokeAll", "class_name": "HookInvoker", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void invokeAll() {\n        if (!baseDir.exists() || baseDir.isFile()) {\n            LOG.info(\"No hook invoked, because base dir not exists or is a file: \" + baseDir.getAbsolutePath());\n            return;\n        }\n\n        String[] subDirs = baseDir.list(new FilenameFilter() {\n            @Override\n            public boolean accept(File dir, String name) {\n                return new File(dir, name).isDirectory();\n            }\n        });\n\n        if (subDirs == null) {\n            throw DataXException.asDataXException(FrameworkErrorCode.HOOK_LOAD_ERROR, \"\u83b7\u53d6HOOK\u5b50\u76ee\u5f55\u8fd4\u56denull\");\n        }\n\n        for (String subDir : subDirs) {\n            doInvoke(new File(baseDir, subDir).getAbsolutePath());\n        }\n\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/engine/datax/datax-core/src/main/java/com/alibaba/datax/core/container/util/HookInvoker.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 62443, "method_name": "doInvoke", "class_name": "HookInvoker", "params": ["String"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void doInvoke(String path) {\n        ClassLoader oldClassLoader = Thread.currentThread().getContextClassLoader();\n        try {\n            JarLoader jarLoader = new JarLoader(new String[]{path});\n            Thread.currentThread().setContextClassLoader(jarLoader);\n            Iterator<Hook> hookIt = ServiceLoader.load(Hook.class).iterator();\n            if (!hookIt.hasNext()) {\n                LOG.warn(\"No hook defined under path: \" + path);\n            } else {\n                Hook hook = hookIt.next();\n                LOG.info(\"Invoke hook [{}], path: {}\", hook.getName(), path);\n                hook.invoke(conf, msg);\n            }\n        } catch (Exception e) {\n            LOG.error(\"Exception when invoke hook\", e);\n            throw DataXException.asDataXException(\n                    CommonErrorCode.HOOK_INTERNAL_ERROR, \"Exception when invoke hook\", e);\n        } finally {\n            Thread.currentThread().setContextClassLoader(oldClassLoader);\n        }\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/engine/datax/datax-core/src/main/java/com/alibaba/datax/core/container/util/HookInvoker.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 62444, "method_name": "main", "class_name": "HookInvoker", "params": ["String"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void main(String[] args) {\n        new HookInvoker(\"/Users/xiafei/workspace/datax3/target/datax/datax/hook\",\n                null, new HashMap<String, Number>()).invokeAll();\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/engine/datax/datax-core/src/main/java/com/alibaba/datax/core/container/util/HookInvoker.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 62445, "method_name": "get", "class_name": "Normal", "params": ["int"], "throws": null, "modifiers": ["public", "static"], "return_type": "int", "snippet": "  public static int get(int i0)\n  {\n    if (i0 < 0x30000)\n    {\n      int i1 = i0 >> 1;\n      int i2 = i1 >> 3;\n      int i3 = i2 >> 3;\n      int i4 = i3 >> 3;\n      return LOW[(i0 & 1) + LOW[(i1 & 7) + LOW[(i2 & 7) + LOW[(i3 & 7) + LOW[(i4 & 7) + LOW[i4 >> 3]]]]]];  \n    }\n    else\n    {\n      int lo = 0, hi = 1;\n      for (int m = 1; ; m = (hi + lo) >> 1)\n      {\n        if (HIGH[m] > i0) {hi = m - 1;}\n        else if (HIGH[2 + m] < i0) {lo = m + 1;}\n        else {return HIGH[4 + m];}\n        if (lo > hi) {return 0;}\n      }\n    }\n  }", "url": "https://raw.githubusercontent.com/GuntherRademacher/rr/master/src/main/java/de/bottlecaps/railroad/core/Normal.java", "stars": "10", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 62446, "method_name": "loadExpIntA", "class_name": "FastMathLiteralArrays", "params": [], "throws": null, "modifiers": ["static"], "return_type": "double", "snippet": "    static double[] loadExpIntA() {\n        return EXP_INT_A.clone();\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/apachemath/FastMathLiteralArrays.java", "stars": "74", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 62447, "method_name": "loadExpIntB", "class_name": "FastMathLiteralArrays", "params": [], "throws": null, "modifiers": ["static"], "return_type": "double", "snippet": "    static double[] loadExpIntB() {\n        return EXP_INT_B.clone();\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/apachemath/FastMathLiteralArrays.java", "stars": "74", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 62448, "method_name": "loadExpFracA", "class_name": "FastMathLiteralArrays", "params": [], "throws": null, "modifiers": ["static"], "return_type": "double", "snippet": "    static double[] loadExpFracA() {\n        return EXP_FRAC_A.clone();\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/apachemath/FastMathLiteralArrays.java", "stars": "74", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 62449, "method_name": "loadExpFracB", "class_name": "FastMathLiteralArrays", "params": [], "throws": null, "modifiers": ["static"], "return_type": "double", "snippet": "    static double[] loadExpFracB() {\n        return EXP_FRAC_B.clone();\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/apachemath/FastMathLiteralArrays.java", "stars": "74", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 62450, "method_name": "loadLnMant", "class_name": "FastMathLiteralArrays", "params": [], "throws": null, "modifiers": ["static"], "return_type": "double", "snippet": "    static double[][] loadLnMant() {\n        return LN_MANT.clone();\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/apachemath/FastMathLiteralArrays.java", "stars": "74", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 62451, "method_name": "from", "class_name": "ShipRelocationSprite", "params": [], "throws": null, "modifiers": ["public"], "return_type": "StarSystem", "snippet": "    public StarSystem from()                  { return from; }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/sprites/ShipRelocationSprite.java", "stars": "74", "class_props": {"extends": "MapSprite", "implements": null, "modifiers": ["public"]}}, {"id": 62452, "method_name": "init", "class_name": "ShipRelocationSprite", "params": ["StarSystem"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void init(StarSystem tr) {\n        source(tr);\n        from = tr;\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/sprites/ShipRelocationSprite.java", "stars": "74", "class_props": {"extends": "MapSprite", "implements": null, "modifiers": ["public"]}}, {"id": 62453, "method_name": "clear", "class_name": "ShipRelocationSprite", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void clear() {\n        pathSprite = null;\n        clickedDest = null;\n        hoveringDest = null;\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/sprites/ShipRelocationSprite.java", "stars": "74", "class_props": {"extends": "MapSprite", "implements": null, "modifiers": ["public"]}}, {"id": 62454, "method_name": "hasSelectedDestination", "class_name": "ShipRelocationSprite", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean hasSelectedDestination()   { return clickedDest != null; }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/sprites/ShipRelocationSprite.java", "stars": "74", "class_props": {"extends": "MapSprite", "implements": null, "modifiers": ["public"]}}, {"id": 62455, "method_name": "clickedDest", "class_name": "ShipRelocationSprite", "params": ["StarSystem"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void clickedDest(StarSystem sv)    { clickedDest = sv; }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/sprites/ShipRelocationSprite.java", "stars": "74", "class_props": {"extends": "MapSprite", "implements": null, "modifiers": ["public"]}}, {"id": 62456, "method_name": "hoveringDest", "class_name": "ShipRelocationSprite", "params": ["StarSystem"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void hoveringDest(StarSystem sv)   { hoveringDest = sv; }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/sprites/ShipRelocationSprite.java", "stars": "74", "class_props": {"extends": "MapSprite", "implements": null, "modifiers": ["public"]}}, {"id": 62457, "method_name": "rallySystem", "class_name": "ShipRelocationSprite", "params": [], "throws": null, "modifiers": ["public"], "return_type": "StarSystem", "snippet": "    public StarSystem rallySystem()           { return player().sv.rallySystem(from.id); }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/sprites/ShipRelocationSprite.java", "stars": "74", "class_props": {"extends": "MapSprite", "implements": null, "modifiers": ["public"]}}, {"id": 62458, "method_name": "homeSystemView", "class_name": "ShipRelocationSprite", "params": [], "throws": null, "modifiers": ["public"], "return_type": "StarSystem", "snippet": "    public StarSystem homeSystemView()        {  return (StarSystem) source(); }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/sprites/ShipRelocationSprite.java", "stars": "74", "class_props": {"extends": "MapSprite", "implements": null, "modifiers": ["public"]}}, {"id": 62459, "method_name": "pathSprite", "class_name": "ShipRelocationSprite", "params": [], "throws": null, "modifiers": ["private"], "return_type": "FlightPathSprite", "snippet": "    private FlightPathSprite pathSprite() {\n        if (pathSprite == null)\n            pathSprite =  pathSpriteTo(rallySystem());\n        return pathSprite;\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/sprites/ShipRelocationSprite.java", "stars": "74", "class_props": {"extends": "MapSprite", "implements": null, "modifiers": ["public"]}}, {"id": 62460, "method_name": "ship", "class_name": "ShipRelocationSprite", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Ship", "snippet": "    public Ship ship()              { return homeSystemView().colony().transport(); }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/sprites/ShipRelocationSprite.java", "stars": "74", "class_props": {"extends": "MapSprite", "implements": null, "modifiers": ["public"]}}, {"id": 62461, "method_name": "starSystem", "class_name": "ShipRelocationSprite", "params": [], "throws": null, "modifiers": ["public"], "return_type": "StarSystem", "snippet": "    public StarSystem starSystem()       {\n        if (hoveringDest != null)\n            return hoveringDest;\n        else if (clickedDest != null)\n            return clickedDest;\n        else if (rallySystem() != null)\n            return rallySystem();\n        else\n            return null;\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/sprites/ShipRelocationSprite.java", "stars": "74", "class_props": {"extends": "MapSprite", "implements": null, "modifiers": ["public"]}}, {"id": 62462, "method_name": "isSelectableAt", "class_name": "ShipRelocationSprite", "params": ["GalaxyMapPanel", "int", "int"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean isSelectableAt(GalaxyMapPanel map, int mapX, int mapY) {\n        return false;\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/sprites/ShipRelocationSprite.java", "stars": "74", "class_props": {"extends": "MapSprite", "implements": null, "modifiers": ["public"]}}, {"id": 62463, "method_name": "pathSpriteTo", "class_name": "ShipRelocationSprite", "params": ["StarSystem"], "throws": null, "modifiers": ["public"], "return_type": "FlightPathSprite", "snippet": "    public FlightPathSprite pathSpriteTo(StarSystem sys) {\n        return new FlightPathSprite(from, sys);\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/sprites/ShipRelocationSprite.java", "stars": "74", "class_props": {"extends": "MapSprite", "implements": null, "modifiers": ["public"]}}, {"id": 62464, "method_name": "draw", "class_name": "ShipRelocationSprite", "params": ["GalaxyMapPanel", "Graphics2D"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void draw(GalaxyMapPanel map, Graphics2D g2) {\n        if (map.scaleX() >  GalaxyMapPanel.MAX_RALLY_SCALE) \n            return;\n\n        StarSystem displayDest = starSystem();\n        if (displayDest != null) \n            pathSprite().drawPlanetPath(map, g2, displayDest);\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/sprites/ShipRelocationSprite.java", "stars": "74", "class_props": {"extends": "MapSprite", "implements": null, "modifiers": ["public"]}}, {"id": 62465, "method_name": "hasPermission", "class_name": "EntityPermissionEvaluator", "params": ["Authentication", "Object", "Object"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean hasPermission(Authentication authentication, Object targetDomainObject, Object permission) {\n        throw new UnsupportedOperationException(\"NYI\");\n    }", "url": "https://raw.githubusercontent.com/everest-engineering/lhotse/master/api/src/main/java/engineering/everest/lhotse/api/rest/security/EntityPermissionEvaluator.java", "stars": "9", "class_props": {"extends": null, "implements": ["PermissionEvaluator"], "modifiers": ["public"]}}, {"id": 62466, "method_name": "hasPermission", "class_name": "EntityPermissionEvaluator", "params": ["Authentication", "Serializable", "String", "Object"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean hasPermission(Authentication authentication, Serializable targetId, String targetType, Object permission) {\n        ReadService<? extends Identifiable> service = readServiceProvider.getService(targetType);\n        if (service == null) {\n            throw new RuntimeException(String.format(\"Cannot find ReadService for: %s\", targetType));\n        }\n\n        var identifiable = service.getById((UUID) targetId);\n        var user = authenticationContextProvider.getUser();\n\n        switch (((String) permission).toLowerCase(Locale.getDefault())) {\n            case \"read\":\n                return identifiable.canRead(user);\n            case \"create\":\n                return identifiable.canCreate(user);\n            case \"update\":\n                return identifiable.canUpdate(user);\n            case \"delete\":\n                return identifiable.canDelete(user);\n            default:\n                throw new IllegalArgumentException(String.format(\"Unknown permission: %s\", permission));\n        }\n    }", "url": "https://raw.githubusercontent.com/everest-engineering/lhotse/master/api/src/main/java/engineering/everest/lhotse/api/rest/security/EntityPermissionEvaluator.java", "stars": "9", "class_props": {"extends": null, "implements": ["PermissionEvaluator"], "modifiers": ["public"]}}, {"id": 62467, "method_name": "map", "class_name": "ChoiceCallType", "params": ["Class<U>", "Function<T,U>"], "throws": null, "modifiers": ["public"], "return_type": "ChoiceCallType<U>", "snippet": "    public <U> ChoiceCallType<U> map(Class<U> newType, Function<T, U> mapper) {\n        Map<U, Pair<Constraint<?>, Observation>> newValues = new HashMap<>();\n        for (Map.Entry<T, Pair<Constraint<?>, Observation>> entry : values.entrySet()) {\n            newValues.put(mapper.apply(entry.getKey()), entry.getValue());\n        }\n        return new ChoiceCallType<>(newType, getImpliedSteps(), newValues);\n    }", "url": "https://raw.githubusercontent.com/mjtb49/LattiCG/master/src/randomreverser/reversal/calltype/ChoiceCallType.java", "stars": "14", "class_props": {"extends": "CallType", "implements": null, "modifiers": ["public"]}}, {"id": 62468, "method_name": "addObservations", "class_name": "ChoiceCallType", "params": ["T", "List<Observation>"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void addObservations(T value, List<Observation> observations) {\n        observations.add(new ChoiceObservation<>(getType(), value));\n    }", "url": "https://raw.githubusercontent.com/mjtb49/LattiCG/master/src/randomreverser/reversal/calltype/ChoiceCallType.java", "stars": "14", "class_props": {"extends": "CallType", "implements": null, "modifiers": ["public"]}}, {"id": 62469, "method_name": "addConstraints", "class_name": "ChoiceCallType", "params": ["List<Constraint>"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void addConstraints(List<Constraint<?>> constraints) {\n        constraints.add(new ChoiceConstraint<>(getType(), values));\n    }", "url": "https://raw.githubusercontent.com/mjtb49/LattiCG/master/src/randomreverser/reversal/calltype/ChoiceCallType.java", "stars": "14", "class_props": {"extends": "CallType", "implements": null, "modifiers": ["public"]}}, {"id": 62470, "method_name": "readOperands", "class_name": "ChoiceCallType", "params": ["StringParser"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void readOperands(StringParser parser) {\n        setImpliedSteps(parser.consumeInteger().getFirst().longValue());\n        Pair<Class<T>, Map<T, Pair<Constraint<?>, Observation>>> pair = readChoice(parser);\n        setType(pair.getFirst());\n        values.putAll(pair.getSecond());\n    }", "url": "https://raw.githubusercontent.com/mjtb49/LattiCG/master/src/randomreverser/reversal/calltype/ChoiceCallType.java", "stars": "14", "class_props": {"extends": "CallType", "implements": null, "modifiers": ["public"]}}, {"id": 62471, "method_name": "readChoice", "class_name": "ChoiceCallType", "params": ["StringParser"], "throws": null, "modifiers": ["public", "static"], "return_type": "Pair<Class,Map>", "snippet": "    public static <T> Pair<Class<T>, Map<T, Pair<Constraint<?>, Observation>>> readChoice(StringParser parser) {\n        Token typeToken = parser.peekNotEof();\n        Class<T> choiceType = (Class<T>) parser.consumeClass();\n        if (!TypeSerializers.canSerialize(choiceType)) {\n            throw new ParseException(\"Cannot read values of type '\" + choiceType.getName() + \"'\", typeToken);\n        }\n        Map<T, Pair<Constraint<?>, Observation>> childConstraints = new HashMap<>();\n        parser.expect(\"{\");\n        while (parser.peek().filter(token -> !token.getText().equals(\"}\")).isPresent()) {\n            T key = TypeSerializers.read(parser, choiceType);\n            parser.expect(\":\");\n            Token constraintNameToken = parser.consume();\n            if (!ConstraintType.isConstraintType(constraintNameToken.getText())) {\n                throw new ParseException(\"'\" + constraintNameToken.getText() + \"' is not a constraint type\", constraintNameToken);\n            }\n            Constraint<?> constraint = ConstraintType.byName(constraintNameToken.getText()).createEmpty();\n            constraint.readOperands(parser);\n            Token observationNameToken = parser.consume();\n            if (!Observations.isObservation(observationNameToken.getText())) {\n                throw new ParseException(\"'\" + observationNameToken.getText() + \"' is not an observation type\", observationNameToken);\n            }\n            Observation observation;\n            try {\n                observation = Observations.createEmptyObservation(observationNameToken.getText(), constraint);\n            } catch (ClassCastException e) {\n                throw new ParseException(\"Observation type '\" + observationNameToken.getText() + \"' is not compatible with constraint type '\" + constraint.getType() + \"'\", observationNameToken);\n            }\n            observation.readOperands(parser);\n            parser.expect(\";\");\n            childConstraints.put(key, new Pair<>(constraint, observation));\n        }\n        parser.expect(\"}", "url": "https://raw.githubusercontent.com/mjtb49/LattiCG/master/src/randomreverser/reversal/calltype/ChoiceCallType.java", "stars": "14", "class_props": {"extends": "CallType", "implements": null, "modifiers": ["public"]}}, {"id": 62472, "method_name": "writeOperands", "class_name": "ChoiceCallType", "params": ["StringBuilder", "boolean"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void writeOperands(StringBuilder output, boolean verbose) {\n        output.append(getImpliedSteps()).append(\" \");\n        writeChoice(output, verbose, getType(), values);\n    }", "url": "https://raw.githubusercontent.com/mjtb49/LattiCG/master/src/randomreverser/reversal/calltype/ChoiceCallType.java", "stars": "14", "class_props": {"extends": "CallType", "implements": null, "modifiers": ["public"]}}, {"id": 62473, "method_name": "writeChoice", "class_name": "ChoiceCallType", "params": ["StringBuilder", "boolean", "Class<T>", "Map<T,Pair>"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static <T> void writeChoice(StringBuilder output, boolean verbose, Class<T> choiceType, Map<T, Pair<Constraint<?>, Observation>> childConstraints) {\n        output.append(choiceType.getName().replace('$', '#')).append(\" {\\n\");\n        for (Map.Entry<T, Pair<Constraint<?>, Observation>> entry : childConstraints.entrySet()) {\n            output.append(\"    \");\n            TypeSerializers.write(output, choiceType, entry.getKey());\n            output.append(\" : \");\n            output.append(entry.getValue().getFirst().getType().getName()).append(\" \");\n            entry.getValue().getFirst().writeOperands(output, verbose);\n            output.append(\" \");\n            output.append(Observations.getName(entry.getValue().getSecond())).append(\" \");\n            entry.getValue().getSecond().writeOperands(output, verbose);\n            output.append(\";\\n\");\n        }\n        output.append(\"  }\");\n    }", "url": "https://raw.githubusercontent.com/mjtb49/LattiCG/master/src/randomreverser/reversal/calltype/ChoiceCallType.java", "stars": "14", "class_props": {"extends": "CallType", "implements": null, "modifiers": ["public"]}}, {"id": 62474, "method_name": "getURLs", "class_name": "JarLoader", "params": ["String"], "throws": null, "modifiers": ["static", "private"], "return_type": "URL", "snippet": "    private static URL[] getURLs(String[] paths) {\n        Validate.isTrue(null != paths && 0 != paths.length,\n                \"jar\u5305\u8def\u5f84\u4e0d\u80fd\u4e3a\u7a7a.\");\n\n        List<String> dirs = new ArrayList<String>();\n        for (String path : paths) {\n            dirs.add(path);\n            JarLoader.collectDirs(path, dirs);\n        }\n\n        List<URL> urls = new ArrayList<URL>();\n        for (String path : dirs) {\n            urls.addAll(doGetURLs(path));\n        }\n        return urls.toArray(new URL[0]);\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/engine/datax/datax-core/src/main/java/com/alibaba/datax/core/util/container/JarLoader.java", "stars": "23", "class_props": {"extends": "URLClassLoader", "implements": null, "modifiers": ["public"]}}, {"id": 62475, "method_name": "collectDirs", "class_name": "JarLoader", "params": ["String", "List<String>"], "throws": null, "modifiers": ["static", "private"], "return_type": "void", "snippet": "    private static void collectDirs(String path, List<String> collector) {\n        if (null == path || StringUtils.isBlank(path)) {\n            return;\n        }\n\n        File current = new File(path);\n        if (!current.exists() || !current.isDirectory()) {\n            return;\n        }\n\n        if(null != current.listFiles()) {\n            for (File child : current.listFiles()) {\n                if (!child.isDirectory()) {\n                    continue;\n                }\n\n                collector.add(child.getAbsolutePath());\n                collectDirs(child.getAbsolutePath(), collector);\n            }\n        }\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/engine/datax/datax-core/src/main/java/com/alibaba/datax/core/util/container/JarLoader.java", "stars": "23", "class_props": {"extends": "URLClassLoader", "implements": null, "modifiers": ["public"]}}, {"id": 62476, "method_name": "doGetURLs", "class_name": "JarLoader", "params": ["String"], "throws": null, "modifiers": ["static", "private"], "return_type": "List<URL>", "snippet": "    private static List<URL> doGetURLs(final String path) {\n        Validate.isTrue(!StringUtils.isBlank(path), \"jar\u5305\u8def\u5f84\u4e0d\u80fd\u4e3a\u7a7a.\");\n\n        File jarPath = new File(path);\n\n        Validate.isTrue(jarPath.exists() && jarPath.isDirectory(),\n                \"jar\u5305\u8def\u5f84\u5fc5\u987b\u5b58\u5728\u4e14\u4e3a\u76ee\u5f55.\");\n\n\t\t/* set filter */\n        FileFilter jarFilter = new FileFilter() {\n            @Override\n            public boolean accept(File pathname) {\n                return pathname.getName().endsWith(\".jar\");\n            }\n        };\n\n\t\t/* iterate all jar */\n        File[] allJars = new File(path).listFiles(jarFilter);\n        List<URL> jarURLs = new ArrayList<URL>(allJars.length);\n\n        for (int i = 0; i < allJars.length; i++) {\n            try {\n                jarURLs.add(allJars[i].toURI().toURL());\n            } catch (Exception e) {\n                throw DataXException.asDataXException(\n                        FrameworkErrorCode.PLUGIN_INIT_ERROR,\n                        \"\u7cfb\u7edf\u52a0\u8f7djar\u5305\u51fa\u9519\", e);\n            }\n        }\n\n        return jarURLs;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/engine/datax/datax-core/src/main/java/com/alibaba/datax/core/util/container/JarLoader.java", "stars": "23", "class_props": {"extends": "URLClassLoader", "implements": null, "modifiers": ["public"]}}, {"id": 62477, "method_name": "loadClass", "class_name": "JarLoader", "params": ["String", "boolean"], "throws": ["ClassNotFoundException"], "modifiers": ["public"], "return_type": "Class<?>", "snippet": "    public Class<?> loadClass(String name, boolean resolve) throws ClassNotFoundException {\n        synchronized (getClassLoadingLock(name)){\n            //First, check if the class has already been loaded\n            Class<?> c = findLoadedClass(name);\n            if(c == null){\n                long t0 = System.nanoTime();\n                try {\n                    //invoke findClass in this class\n                    c = findClass(name);\n                }catch(ClassNotFoundException e){\n                    // ClassNotFoundException thrown if class not found\n                }\n                if(c == null){\n                    return super.loadClass(name, resolve);\n                }\n                sun.misc.PerfCounter.getFindClasses().addElapsedTimeFrom(t0);\n                sun.misc.PerfCounter.getFindClasses().increment();\n            }\n            if(resolve){\n                resolveClass(c);\n            }\n            return c;\n        }\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/engine/datax/datax-core/src/main/java/com/alibaba/datax/core/util/container/JarLoader.java", "stars": "23", "class_props": {"extends": "URLClassLoader", "implements": null, "modifiers": ["public"]}}, {"id": 62478, "method_name": "loadClass", "class_name": "JarLoader", "params": ["String", "byte"], "throws": null, "modifiers": ["public"], "return_type": "Class<?>", "snippet": "    public Class<?> loadClass(String name, byte[] bytes){\n        return this.defineClass(name, bytes, 0, bytes.length);\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/engine/datax/datax-core/src/main/java/com/alibaba/datax/core/util/container/JarLoader.java", "stars": "23", "class_props": {"extends": "URLClassLoader", "implements": null, "modifiers": ["public"]}}, {"id": 62479, "method_name": "redisTest", "class_name": "RedisController", "params": ["String"], "throws": ["IOException"], "modifiers": ["public"], "return_type": "Map<String,Object>", "snippet": "    public Map<String, Object> redisTest(String type) throws IOException {\n\n        return null;\n    }", "url": "https://raw.githubusercontent.com/chengxy-nds/delayqueue/master/src/main/java/com/chengxy/delayqueue/controller/RedisController.java", "stars": "7", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 62480, "method_name": "init", "class_name": "MapOverlayAllocateSystems", "params": ["HashMap<StarSystem,List>"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void init(HashMap<StarSystem,List<String>> newSystems) {\n        drawSprites = true;\n        systemsToAllocate = newSystems;\n        orderedSystems.clear();\n        systemIndex = 0;\n        continueButton.reset();\n        prevSystemButton.reset();\n        nextSystemButton.reset();\n        if (newSystems.isEmpty())\n            advanceMap();\n        else {\n            // create an alphabetized list of systems\n            orderedSystems.addAll(newSystems.keySet());\n            Collections.sort(orderedSystems, StarSystem.NAME);\n            mapSelectIndex(0);\n        }\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/main/overlay/MapOverlayAllocateSystems.java", "stars": "74", "class_props": {"extends": "MapOverlay", "implements": null, "modifiers": ["public"]}}, {"id": 62481, "method_name": "mapSelectIndex", "class_name": "MapOverlayAllocateSystems", "params": ["int"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void mapSelectIndex(int i) {\n        StarSystem nextSystem = orderedSystems.get(i);\n        parent.map().recenterMapOn(nextSystem);\n        parent.mapFocus(nextSystem);\n        parent.clickedSprite(nextSystem);\n        parent.showDisplayPanel();\n        parent.repaint();\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/main/overlay/MapOverlayAllocateSystems.java", "stars": "74", "class_props": {"extends": "MapOverlay", "implements": null, "modifiers": ["public"]}}, {"id": 62482, "method_name": "nextSystem", "class_name": "MapOverlayAllocateSystems", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void nextSystem() {\n        systemIndex++;\n        if (systemIndex >= orderedSystems.size())\n            systemIndex = 0;\n        mapSelectIndex(systemIndex);\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/main/overlay/MapOverlayAllocateSystems.java", "stars": "74", "class_props": {"extends": "MapOverlay", "implements": null, "modifiers": ["public"]}}, {"id": 62483, "method_name": "previousSystem", "class_name": "MapOverlayAllocateSystems", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void previousSystem() {\n        systemIndex--;\n        if (systemIndex < 0)\n            systemIndex = orderedSystems.size()-1;\n        mapSelectIndex(systemIndex);\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/main/overlay/MapOverlayAllocateSystems.java", "stars": "74", "class_props": {"extends": "MapOverlay", "implements": null, "modifiers": ["public"]}}, {"id": 62484, "method_name": "drawSprites", "class_name": "MapOverlayAllocateSystems", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean drawSprites()   { return drawSprites; }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/main/overlay/MapOverlayAllocateSystems.java", "stars": "74", "class_props": {"extends": "MapOverlay", "implements": null, "modifiers": ["public"]}}, {"id": 62485, "method_name": "masksMouseOver", "class_name": "MapOverlayAllocateSystems", "params": ["int", "int"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean masksMouseOver(int x, int y)   { return true; }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/main/overlay/MapOverlayAllocateSystems.java", "stars": "74", "class_props": {"extends": "MapOverlay", "implements": null, "modifiers": ["public"]}}, {"id": 62486, "method_name": "hoveringOverSprite", "class_name": "MapOverlayAllocateSystems", "params": ["Sprite"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean hoveringOverSprite(Sprite o) { return false; }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/main/overlay/MapOverlayAllocateSystems.java", "stars": "74", "class_props": {"extends": "MapOverlay", "implements": null, "modifiers": ["public"]}}, {"id": 62487, "method_name": "advanceMap", "class_name": "MapOverlayAllocateSystems", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void advanceMap() {\n        drawSprites = false;\n        if (!systemsToAllocate.isEmpty()) {\n            systemsToAllocate.clear();\n            orderedSystems.clear();\n        }\n        parent.hideDisplayPanel();\n        parent.resumeTurn();\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/main/overlay/MapOverlayAllocateSystems.java", "stars": "74", "class_props": {"extends": "MapOverlay", "implements": null, "modifiers": ["public"]}}, {"id": 62488, "method_name": "paintOverMap", "class_name": "MapOverlayAllocateSystems", "params": ["MainUI", "GalaxyMapPanel", "Graphics2D"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void paintOverMap(MainUI parent, GalaxyMapPanel ui, Graphics2D g) {\n        int s3 = BasePanel.s3;\n        int s7 = BasePanel.s7;\n        int s10 = BasePanel.s10;\n        int s15 = BasePanel.s15;\n        int s20 = BasePanel.s20;\n        int s25 = BasePanel.s25;\n        int s30 = BasePanel.s30;\n        int s35 = BasePanel.s35;\n\n        int x0 = scaled(530);\n        int y0 = scaled(215);\n        int w0 = scaled(420);\n        int h0 = scaled(235);\n        g.setColor(MainUI.paneShadeC2);\n        g.fillRect(x0, y0, w0, h0);\n\n        int x1 = x0 + s7;\n        int y1 = y0 + s7;\n        int w1 = w0 - s7 - s7;\n        int h1 = scaled(65);\n        g.setColor(MainUI.paneBackground);\n        g.fillRect(x1, y1, w1, h1);\n\n        int x2 = x1;\n        int y2 = y1+h1+s3;\n        int w2 = w1;\n        int h2 = scaled(112);\n        g.setColor(MainUI.paneBackground);\n        g.fillRect(x2, y2, w2, h2);\n\n        // draw year/turn info\n        String yearStr = displayYearOrTurn();\n        g.setFont(narrowFont(40));\n        int sw = g.getFontMetrics().stringWidth(yearStr);\n        int leftW = w1*4/9;\n        int x1a = x1+((leftW-sw)/2);\n        drawBorderedString(g, yearStr, 2, x1a, y1+h1-s20, SystemPanel.textShadowC, SystemPanel.orangeText);\n\n        // draw title\n        String titleStr = text(\"MAIN_ALLOCATE_TITLE\");\n        g.setFont(narrowFont(22));\n        int sw1 = g.getFontMetrics().stringWidth(titleStr);\n        int rightW = w1-leftW;\n        int x1b = x1+leftW+((rightW-sw1)/2);\n        drawShadowedString(g, titleStr, 3, x1b, y1+h1-s35, SystemPanel.textShadowC, SystemPanel.whiteText);\n\n        // draw notice number\n        String noticeStr = text(\"MAIN_ALLOCATE_NOTICE_NUMBER\", str(systemIndex+1), str(orderedSystems.size()));\n        g.setFont(narrowFont(16));\n        int x1c = x1b+scaled(20);\n        g.setColor(SystemPanel.blackText);\n        g.drawString(noticeStr, x1c, y1+h1-s15);\n\n        //draw arrow\n        int r1 = x1+w1;\n        int b1 = y2+h2;\n        x[0]=r1;    x[1]=x[0]-s30;x[2]=x[1]-s25;x[3]=x[2]+s20;x[4]=x1;  x[5]=x[4];  x[6]=x[3];x[7]=x[6]-s10;x[8]=x[7]+s25;\n        y[0]=b1-s20;y[1]=y[0]-s30;y[2]=y[1];    y[3]=b1-s30;  y[4]=y[3];y[5]=b1-s10;y[6]=y[5];y[7]=b1;      y[8]=b1;\n\n        if (arrowBack == null) {\n            float[] dist = {0.0f, 0.1f, 0.6f, 1.0f};\n            Point2D arrowL = new Point2D.Float(x1, 0);\n            Point2D arrowR = new Point2D.Float(r1, 0);\n            Color[] arrowColors = {SystemPanel.orangeClear, SystemPanel.orangeClear, SystemPanel.orangeText, SystemPanel.orangeText };\n            arrowBack = new LinearGradientPaint(arrowL, arrowR, dist, arrowColors);\n        }\n        g.setPaint(arrowBack);\n        g.fillPolygon(x,y,x.length);\n\n        //draw text in arrow\n        String actionStr = text(\"MAIN_ALLOCATE_CHANGE_SPENDING\");\n        g.setFont(narrowFont(14));\n        int sw2 = g.getFontMetrics().stringWidth(actionStr);\n        int x1d = x[6]-sw2;\n        int y1d = y[6]-scaled(5);\n        g.setColor(SystemPanel.blackText);\n        g.drawString(actionStr, x1d, y1d);\n\n        // draw reasons info\n        StarSystem sv = orderedSystems.get(systemIndex);\n        List<String> reasons = systemsToAllocate.get(sv);\n        int lineH = BasePanel.s18;\n        int x2a = x2+s10;\n        int y2a = y2+s20;\n\n        //g.setFont(narrowFont(16));\n        int textW = w2+x2-x2a-s10;\n        g.setFont(narrowFont(16));\n        for (String reason: reasons) {\n            List<String> lines = this.wrappedLines(g, reason, textW);\n            for (String line: lines) {\n                //scaledFont(g, line, textW, 16, 12);\n                g.drawString(line, x2a, y2a);\n                y2a += lineH;\n            }\n        }\n\n        // init and draw continue button sprite\n        parent.addNextTurnControl(continueButton);\n        continueButton.init(this, g);\n        continueButton.mapX(x0+w0-continueButton.width()-s10);\n        continueButton.mapY(y0+h0-continueButton.height()-s10);\n        if (orderedSystems.size() < 2)\n                continueButton.setSelectionBounds(x0,y0,w0,h0);\n        continueButton.draw(parent.map(), g);\n\n        if (orderedSystems.size() > 1) {\n                parent.addNextTurnControl(prevSystemButton);\n                prevSystemButton.init(this,g);\n                prevSystemButton.mapX(x0+s10);\n                prevSystemButton.mapY(y0+h0-prevSystemButton.height()-s10);\n                prevSystemButton.draw(parent.map(), g);\n\n                // draw notice number\n                String notice2Str = text(\"MAIN_ALLOCATE_BRIEF_NUMBER\", str(systemIndex+1), str(orderedSystems.size()));\n                g.setFont(narrowFont(16));\n                int sw4 = g.getFontMetrics().stringWidth(notice2Str);\n                int x4b = prevSystemButton.mapX()+prevSystemButton.width()+s10;\n                int y4b = prevSystemButton.mapY()+prevSystemButton.height()-s10;\n                g.setColor(SystemPanel.blackText);\n                g.drawString(notice2Str, x4b, y4b);\n\n                parent.addNextTurnControl(nextSystemButton);\n                nextSystemButton.init(this,g);\n                nextSystemButton.mapX(x4b+sw4+s10);\n                nextSystemButton.mapY(prevSystemButton.mapY());\n                nextSystemButton.draw(parent.map(), g);\n        }\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/main/overlay/MapOverlayAllocateSystems.java", "stars": "74", "class_props": {"extends": "MapOverlay", "implements": null, "modifiers": ["public"]}}, {"id": 62489, "method_name": "handleKeyPress", "class_name": "MapOverlayAllocateSystems", "params": ["KeyEvent"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean handleKeyPress(KeyEvent e) {\n        switch(e.getKeyCode()) {\n            case KeyEvent.VK_N:\n                //softClick();\n                nextSystem();\n                break;\n            case KeyEvent.VK_P:\n                //softClick();\n                previousSystem();\n                break;\n            case KeyEvent.VK_F:\n            case KeyEvent.VK_ENTER:\n            case KeyEvent.VK_ESCAPE:\n                //softClick();\n                advanceMap();\n                break;\n            default:\n                misClick();\n                break;\n        }\n        return true;\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/main/overlay/MapOverlayAllocateSystems.java", "stars": "74", "class_props": {"extends": "MapOverlay", "implements": null, "modifiers": ["public"]}}, {"id": 62490, "method_name": "mapX", "class_name": "PreviousSystemButtonSprite", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int mapX()         { return mapX; }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/main/overlay/MapOverlayAllocateSystems.java", "stars": "74", "class_props": {"extends": "MapSprite", "implements": null, "modifiers": []}}, {"id": 62491, "method_name": "mapY", "class_name": "PreviousSystemButtonSprite", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int mapY()         { return mapY; }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/main/overlay/MapOverlayAllocateSystems.java", "stars": "74", "class_props": {"extends": "MapSprite", "implements": null, "modifiers": []}}, {"id": 62492, "method_name": "mapX", "class_name": "PreviousSystemButtonSprite", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void mapX(int i)   { mapX = i; }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/main/overlay/MapOverlayAllocateSystems.java", "stars": "74", "class_props": {"extends": "MapSprite", "implements": null, "modifiers": []}}, {"id": 62493, "method_name": "mapY", "class_name": "PreviousSystemButtonSprite", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void mapY(int i)   { mapY = i; }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/main/overlay/MapOverlayAllocateSystems.java", "stars": "74", "class_props": {"extends": "MapSprite", "implements": null, "modifiers": []}}, {"id": 62494, "method_name": "width", "class_name": "PreviousSystemButtonSprite", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int width()        { return buttonW; }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/main/overlay/MapOverlayAllocateSystems.java", "stars": "74", "class_props": {"extends": "MapSprite", "implements": null, "modifiers": []}}, {"id": 62495, "method_name": "height", "class_name": "PreviousSystemButtonSprite", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int height()       { return buttonH; }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/main/overlay/MapOverlayAllocateSystems.java", "stars": "74", "class_props": {"extends": "MapSprite", "implements": null, "modifiers": []}}, {"id": 62496, "method_name": "label", "class_name": "PreviousSystemButtonSprite", "params": [], "throws": null, "modifiers": ["private"], "return_type": "String", "snippet": "    private String label()    { return text(\"MAIN_ALLOCATE_PREV_SYSTEM\"); }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/main/overlay/MapOverlayAllocateSystems.java", "stars": "74", "class_props": {"extends": "MapSprite", "implements": null, "modifiers": []}}, {"id": 62497, "method_name": "font", "class_name": "PreviousSystemButtonSprite", "params": [], "throws": null, "modifiers": ["private"], "return_type": "Font", "snippet": "    private Font font()       { return narrowFont(18); }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/main/overlay/MapOverlayAllocateSystems.java", "stars": "74", "class_props": {"extends": "MapSprite", "implements": null, "modifiers": []}}, {"id": 62498, "method_name": "reset", "class_name": "PreviousSystemButtonSprite", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void reset()       { background = null; }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/main/overlay/MapOverlayAllocateSystems.java", "stars": "74", "class_props": {"extends": "MapSprite", "implements": null, "modifiers": []}}, {"id": 62499, "method_name": "init", "class_name": "PreviousSystemButtonSprite", "params": ["MapOverlayAllocateSystems", "Graphics2D"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void init(MapOverlayAllocateSystems p, Graphics2D g)  {\n        parent = p;\n        buttonW = BasePanel.s20 + g.getFontMetrics(font()).stringWidth(label());\n        buttonH = BasePanel.s30;\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/main/overlay/MapOverlayAllocateSystems.java", "stars": "74", "class_props": {"extends": "MapSprite", "implements": null, "modifiers": []}}, {"id": 62500, "method_name": "isSelectableAt", "class_name": "PreviousSystemButtonSprite", "params": ["GalaxyMapPanel", "int", "int"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean isSelectableAt(GalaxyMapPanel map, int x, int y) {\n        hovering = x >= mapX\n                    && x <= mapX+buttonW\n                    && y >= mapY()\n                    && y <= mapY()+buttonH;\n\n        return hovering;\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/main/overlay/MapOverlayAllocateSystems.java", "stars": "74", "class_props": {"extends": "MapSprite", "implements": null, "modifiers": []}}, {"id": 62501, "method_name": "draw", "class_name": "PreviousSystemButtonSprite", "params": ["GalaxyMapPanel", "Graphics2D"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void draw(GalaxyMapPanel map, Graphics2D g) {\n        if (!parent.drawSprites())\n            return;\n        if (background == null) {\n            float[] dist = {0.0f, 0.5f, 1.0f};\n            Point2D start = new Point2D.Float(mapX, 0);\n            Point2D end = new Point2D.Float(mapX+buttonW, 0);\n            Color[] colors = {edgeC, midC, edgeC };\n            background = new LinearGradientPaint(start, end, dist, colors);\n        }\n        int s3 = BasePanel.s3;\n        int s5 = BasePanel.s5;\n        int s10 = BasePanel.s10;\n        g.setColor(SystemPanel.blackText);\n        g.fillRoundRect(mapX+s3, mapY+s3, buttonW,buttonH,s10,s10);\n        g.setPaint(background);\n        g.fillRoundRect(mapX, mapY, buttonW,buttonH,s5,s5);\n        Color c0 = hovering ? SystemPanel.yellowText : SystemPanel.whiteText;\n        g.setColor(c0);\n        Stroke prevStr =g.getStroke();\n        g.setStroke(BasePanel.stroke2);\n        g.drawRoundRect(mapX, mapY, buttonW,buttonH,s5,s5);\n        g.setStroke(prevStr);\n        g.setFont(font());\n\n        String str = label();\n        int sw = g.getFontMetrics().stringWidth(str);\n        int x2a = mapX+((buttonW-sw)/2);\n        drawBorderedString(g, str, x2a, mapY+buttonH-s10, SystemPanel.textShadowC, c0);\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/main/overlay/MapOverlayAllocateSystems.java", "stars": "74", "class_props": {"extends": "MapSprite", "implements": null, "modifiers": []}}, {"id": 62502, "method_name": "click", "class_name": "PreviousSystemButtonSprite", "params": ["GalaxyMapPanel", "int", "boolean", "boolean"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void click(GalaxyMapPanel map, int count, boolean rightClick, boolean click) {\n        //if (click)\n        //    softClick();\n        parent.previousSystem();\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/main/overlay/MapOverlayAllocateSystems.java", "stars": "74", "class_props": {"extends": "MapSprite", "implements": null, "modifiers": []}}, {"id": 62503, "method_name": "mapX", "class_name": "NextSystemButtonSprite", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int mapX()         { return mapX; }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/main/overlay/MapOverlayAllocateSystems.java", "stars": "74", "class_props": {"extends": "MapSprite", "implements": null, "modifiers": []}}, {"id": 62504, "method_name": "mapY", "class_name": "NextSystemButtonSprite", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int mapY()         { return mapY; }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/main/overlay/MapOverlayAllocateSystems.java", "stars": "74", "class_props": {"extends": "MapSprite", "implements": null, "modifiers": []}}, {"id": 62505, "method_name": "mapX", "class_name": "NextSystemButtonSprite", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void mapX(int i)   { mapX = i; }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/main/overlay/MapOverlayAllocateSystems.java", "stars": "74", "class_props": {"extends": "MapSprite", "implements": null, "modifiers": []}}, {"id": 62506, "method_name": "mapY", "class_name": "NextSystemButtonSprite", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void mapY(int i)   { mapY = i; }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/main/overlay/MapOverlayAllocateSystems.java", "stars": "74", "class_props": {"extends": "MapSprite", "implements": null, "modifiers": []}}, {"id": 62507, "method_name": "width", "class_name": "NextSystemButtonSprite", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int width()        { return buttonW; }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/main/overlay/MapOverlayAllocateSystems.java", "stars": "74", "class_props": {"extends": "MapSprite", "implements": null, "modifiers": []}}, {"id": 62508, "method_name": "height", "class_name": "NextSystemButtonSprite", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int height()       { return buttonH; }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/main/overlay/MapOverlayAllocateSystems.java", "stars": "74", "class_props": {"extends": "MapSprite", "implements": null, "modifiers": []}}, {"id": 62509, "method_name": "label", "class_name": "NextSystemButtonSprite", "params": [], "throws": null, "modifiers": ["private"], "return_type": "String", "snippet": "    private String label()    { return text(\"MAIN_ALLOCATE_NEXT_SYSTEM\"); }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/main/overlay/MapOverlayAllocateSystems.java", "stars": "74", "class_props": {"extends": "MapSprite", "implements": null, "modifiers": []}}, {"id": 62510, "method_name": "font", "class_name": "NextSystemButtonSprite", "params": [], "throws": null, "modifiers": ["private"], "return_type": "Font", "snippet": "    private Font font()       { return narrowFont(18); }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/main/overlay/MapOverlayAllocateSystems.java", "stars": "74", "class_props": {"extends": "MapSprite", "implements": null, "modifiers": []}}, {"id": 62511, "method_name": "reset", "class_name": "NextSystemButtonSprite", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void reset()       { background = null; }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/main/overlay/MapOverlayAllocateSystems.java", "stars": "74", "class_props": {"extends": "MapSprite", "implements": null, "modifiers": []}}, {"id": 62512, "method_name": "init", "class_name": "NextSystemButtonSprite", "params": ["MapOverlayAllocateSystems", "Graphics2D"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void init(MapOverlayAllocateSystems p, Graphics2D g)  {\n        parent = p;\n        buttonW = BasePanel.s20 + g.getFontMetrics(font()).stringWidth(label());\n        buttonH = BasePanel.s30;\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/main/overlay/MapOverlayAllocateSystems.java", "stars": "74", "class_props": {"extends": "MapSprite", "implements": null, "modifiers": []}}, {"id": 62513, "method_name": "isSelectableAt", "class_name": "NextSystemButtonSprite", "params": ["GalaxyMapPanel", "int", "int"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean isSelectableAt(GalaxyMapPanel map, int x, int y) {\n        hovering = x >= mapX\n                    && x <= mapX+buttonW\n                    && y >= mapY()\n                    && y <= mapY()+buttonH;\n\n        return hovering;\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/main/overlay/MapOverlayAllocateSystems.java", "stars": "74", "class_props": {"extends": "MapSprite", "implements": null, "modifiers": []}}, {"id": 62514, "method_name": "draw", "class_name": "NextSystemButtonSprite", "params": ["GalaxyMapPanel", "Graphics2D"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void draw(GalaxyMapPanel map, Graphics2D g) {\n        if (!parent.drawSprites())\n            return;\n        if (background == null) {\n            float[] dist = {0.0f, 0.5f, 1.0f};\n            Point2D start = new Point2D.Float(mapX, 0);\n            Point2D end = new Point2D.Float(mapX+buttonW, 0);\n            Color[] colors = {edgeC, midC, edgeC };\n            background = new LinearGradientPaint(start, end, dist, colors);\n        }\n        int s3 = BasePanel.s3;\n        int s5 = BasePanel.s5;\n        int s10 = BasePanel.s10;\n        g.setColor(SystemPanel.blackText);\n        g.fillRoundRect(mapX+s3, mapY+s3, buttonW,buttonH,s10,s10);\n        g.setPaint(background);\n        g.fillRoundRect(mapX, mapY, buttonW,buttonH,s5,s5);\n        Color c0 = hovering ? SystemPanel.yellowText : SystemPanel.whiteText;\n        g.setColor(c0);\n        Stroke prevStr =g.getStroke();\n        g.setStroke(BasePanel.stroke2);\n        g.drawRoundRect(mapX, mapY, buttonW,buttonH,s5,s5);\n        g.setStroke(prevStr);\n        g.setFont(font());\n\n        String str = label();\n        int sw = g.getFontMetrics().stringWidth(str);\n        int x2a = mapX+((buttonW-sw)/2);\n        drawBorderedString(g, str, x2a, mapY+buttonH-s10, SystemPanel.textShadowC, c0);\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/main/overlay/MapOverlayAllocateSystems.java", "stars": "74", "class_props": {"extends": "MapSprite", "implements": null, "modifiers": []}}, {"id": 62515, "method_name": "click", "class_name": "NextSystemButtonSprite", "params": ["GalaxyMapPanel", "int", "boolean", "boolean"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void click(GalaxyMapPanel map, int count, boolean rightClick, boolean click) {\n        //if (click)\n        //    softClick();\n        parent.nextSystem();\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/main/overlay/MapOverlayAllocateSystems.java", "stars": "74", "class_props": {"extends": "MapSprite", "implements": null, "modifiers": []}}, {"id": 62516, "method_name": "mapX", "class_name": "ContinueButtonSprite", "params": [], "throws": null, "modifiers": ["protected"], "return_type": "int", "snippet": "    protected int mapX()      { return mapX; }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/main/overlay/MapOverlayAllocateSystems.java", "stars": "74", "class_props": {"extends": "MapSprite", "implements": null, "modifiers": []}}, {"id": 62517, "method_name": "mapY", "class_name": "ContinueButtonSprite", "params": [], "throws": null, "modifiers": ["protected"], "return_type": "int", "snippet": "    protected int mapY()      { return mapY; }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/main/overlay/MapOverlayAllocateSystems.java", "stars": "74", "class_props": {"extends": "MapSprite", "implements": null, "modifiers": []}}, {"id": 62518, "method_name": "mapX", "class_name": "ContinueButtonSprite", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void mapX(int i)   { selectX = mapX = i; }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/main/overlay/MapOverlayAllocateSystems.java", "stars": "74", "class_props": {"extends": "MapSprite", "implements": null, "modifiers": []}}, {"id": 62519, "method_name": "mapY", "class_name": "ContinueButtonSprite", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void mapY(int i)   { selectY = mapY = i; }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/main/overlay/MapOverlayAllocateSystems.java", "stars": "74", "class_props": {"extends": "MapSprite", "implements": null, "modifiers": []}}, {"id": 62520, "method_name": "width", "class_name": "ContinueButtonSprite", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int width()        { return buttonW; }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/main/overlay/MapOverlayAllocateSystems.java", "stars": "74", "class_props": {"extends": "MapSprite", "implements": null, "modifiers": []}}, {"id": 62521, "method_name": "height", "class_name": "ContinueButtonSprite", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int height()       { return buttonH; }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/main/overlay/MapOverlayAllocateSystems.java", "stars": "74", "class_props": {"extends": "MapSprite", "implements": null, "modifiers": []}}, {"id": 62522, "method_name": "label", "class_name": "ContinueButtonSprite", "params": [], "throws": null, "modifiers": ["private"], "return_type": "String", "snippet": "    private String label()    { return text(\"MAIN_ALLOCATE_FINISHED\"); }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/main/overlay/MapOverlayAllocateSystems.java", "stars": "74", "class_props": {"extends": "MapSprite", "implements": null, "modifiers": []}}, {"id": 62523, "method_name": "font", "class_name": "ContinueButtonSprite", "params": [], "throws": null, "modifiers": ["private"], "return_type": "Font", "snippet": "    private Font font()       { return narrowFont(18); }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/main/overlay/MapOverlayAllocateSystems.java", "stars": "74", "class_props": {"extends": "MapSprite", "implements": null, "modifiers": []}}, {"id": 62524, "method_name": "reset", "class_name": "ContinueButtonSprite", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void reset()       { background = null; }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/main/overlay/MapOverlayAllocateSystems.java", "stars": "74", "class_props": {"extends": "MapSprite", "implements": null, "modifiers": []}}, {"id": 62525, "method_name": "init", "class_name": "ContinueButtonSprite", "params": ["MapOverlayAllocateSystems", "Graphics2D"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void init(MapOverlayAllocateSystems p, Graphics2D g)  {\n        parent = p;\n        buttonW = BasePanel.s60 + g.getFontMetrics(font()).stringWidth(label());\n        buttonH = BasePanel.s30;\n        selectW = buttonW;\n        selectH = buttonH;\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/main/overlay/MapOverlayAllocateSystems.java", "stars": "74", "class_props": {"extends": "MapSprite", "implements": null, "modifiers": []}}, {"id": 62526, "method_name": "setSelectionBounds", "class_name": "ContinueButtonSprite", "params": ["int", "int", "int", "int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setSelectionBounds(int x, int y, int w, int h) {\n        selectX = x;\n        selectY = y;\n        selectW = w;\n        selectH = h;\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/main/overlay/MapOverlayAllocateSystems.java", "stars": "74", "class_props": {"extends": "MapSprite", "implements": null, "modifiers": []}}, {"id": 62527, "method_name": "isSelectableAt", "class_name": "ContinueButtonSprite", "params": ["GalaxyMapPanel", "int", "int"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean isSelectableAt(GalaxyMapPanel map, int x, int y) {\n        hovering = x >= selectX\n                    && x <= selectX+selectW\n                    && y >= selectY\n                    && y <= selectY+selectH;\n        return hovering;\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/main/overlay/MapOverlayAllocateSystems.java", "stars": "74", "class_props": {"extends": "MapSprite", "implements": null, "modifiers": []}}, {"id": 62528, "method_name": "draw", "class_name": "ContinueButtonSprite", "params": ["GalaxyMapPanel", "Graphics2D"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void draw(GalaxyMapPanel map, Graphics2D g) {\n        if (!parent.drawSprites())\n            return;\n        if (background == null) {\n            float[] dist = {0.0f, 0.5f, 1.0f};\n            Point2D start = new Point2D.Float(mapX, 0);\n            Point2D end = new Point2D.Float(mapX+buttonW, 0);\n            Color[] colors = {edgeC, midC, edgeC };\n            background = new LinearGradientPaint(start, end, dist, colors);\n        }\n        int s3 = BasePanel.s3;\n        int s5 = BasePanel.s5;\n        int s10 = BasePanel.s10;\n        g.setColor(SystemPanel.blackText);\n        g.fillRoundRect(mapX+s3, mapY+s3, buttonW,buttonH,s10,s10);\n        g.setPaint(background);\n        g.fillRoundRect(mapX, mapY, buttonW,buttonH,s5,s5);\n        Color c0 = hovering ? SystemPanel.yellowText : SystemPanel.whiteText;\n        g.setColor(c0);\n        Stroke prevStr =g.getStroke();\n        g.setStroke(BasePanel.stroke2);\n        g.drawRoundRect(mapX, mapY, buttonW,buttonH,s5,s5);\n        g.setStroke(prevStr);\n        g.setFont(font());\n\n        String str = label();\n        int sw = g.getFontMetrics().stringWidth(str);\n        int x2a = mapX+((buttonW-sw)/2);\n        drawBorderedString(g, str, x2a, mapY+buttonH-s10, SystemPanel.textShadowC, c0);\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/main/overlay/MapOverlayAllocateSystems.java", "stars": "74", "class_props": {"extends": "MapSprite", "implements": null, "modifiers": []}}, {"id": 62529, "method_name": "click", "class_name": "ContinueButtonSprite", "params": ["GalaxyMapPanel", "int", "boolean", "boolean"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void click(GalaxyMapPanel map, int count, boolean rightClick, boolean click) {\n        //if (click)\n        //    softClick();\n        parent.advanceMap();\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/main/overlay/MapOverlayAllocateSystems.java", "stars": "74", "class_props": {"extends": "MapSprite", "implements": null, "modifiers": []}}, {"id": 62530, "method_name": "main", "class_name": "CustomMethods7", "params": ["String"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "\tpublic static void main(String[] args) {\n\t\tString str = \"Hello\";\n\t\texPrint(str);\n\n\t\tdouble numOne = 55.99;\n\n\t\tdouble numTwo = plus100(numOne);\n\n\t\tSystem.out.println(numTwo);\n\t}", "url": "https://raw.githubusercontent.com/Suranchiyev/java-sdet-2020/master/src/day7/CustomMethods7.java", "stars": "21", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 62531, "method_name": "exPrint", "class_name": "CustomMethods7", "params": ["String"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "\tpublic static void exPrint(String word) {\n\t\tSystem.out.println(word + \"!\");\n\t}", "url": "https://raw.githubusercontent.com/Suranchiyev/java-sdet-2020/master/src/day7/CustomMethods7.java", "stars": "21", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 62532, "method_name": "plus100", "class_name": "CustomMethods7", "params": ["double"], "throws": null, "modifiers": ["public", "static"], "return_type": "double", "snippet": "\tpublic static double plus100(double number){\n\t\tSystem.out.println(\"Hello world\");\n\t\treturn number + 100;\n\t}", "url": "https://raw.githubusercontent.com/Suranchiyev/java-sdet-2020/master/src/day7/CustomMethods7.java", "stars": "21", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 62533, "method_name": "onCreateViewHolder", "class_name": "contact_Adapter", "params": ["ViewGroup", "int"], "throws": null, "modifiers": ["public"], "return_type": "contact_Adapter", "snippet": "    public contact_Adapter.contactHolder onCreateViewHolder(@NonNull ViewGroup parent, int viewType) {\n        LayoutInflater myInflater = LayoutInflater.from(ctx);\n        View myView = myInflater.inflate(R.layout.contact_child,parent,false);\n        return new contactHolder(myView);\n    }", "url": "https://raw.githubusercontent.com/AkhilRautela/ledger_system/master/app/src/main/java/com/example/ledgersystem/contact_Adapter.java", "stars": "2", "class_props": {"extends": "RecyclerView", "implements": null, "modifiers": ["public"]}}, {"id": 62534, "method_name": "onBindViewHolder", "class_name": "contact_Adapter", "params": ["contactHolder", "int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onBindViewHolder(@NonNull contactHolder holder, int position) {\n        //todo we have to bind the holder later on let me do the fragment work done.\n        final listforadapter myListobj1 =data.get(position);\n        holder.t1_name.setText(myListobj1.getName());\n        holder.t2_number.setText(myListobj1.getPhone());\n        TextDrawable drawable = TextDrawable.builder().buildRound(myListobj1.getName().substring(0,1).toUpperCase(), Color.rgb(15,167,255));\n        holder.contactimg.setBackground(drawable);\n        holder.itemView.setOnClickListener(new View.OnClickListener() {\n            @Override\n            public void onClick(View v) {\n                requestDialog = new Dialog(ctx);\n                requestDialog.setContentView(R.layout.dialog_req);\n                final TextView c_name = (TextView)requestDialog.findViewById(R.id.dialog_name_d);\n                final TextView c_no = requestDialog.findViewById(R.id.dialog_number_d);\n                final CircleImageView c_img =  requestDialog.findViewById(R.id.dialog_img_d);\n                Button b=requestDialog.findViewById(R.id.requestt);\n                final EditText money=requestDialog.findViewById(R.id.amt);\n                final EditText remark=requestDialog.findViewById(R.id.remark);\n                b.setOnClickListener(new View.OnClickListener() {\n                    @Override\n                    public void onClick(View v) {\n                        DatabaseReference dr= FirebaseDatabase.getInstance().getReference(\"Users\");\n                        SharedPreferences sf=ctx.getSharedPreferences(\"Login data\",MODE_PRIVATE);\n                        String s=sf.getString(\"user\",\"unable to fetch\");\n                        dr.child(s).child(\"Transactions\").child(\"take money\").child(myListobj1.getName()).child(remark.getText().toString()).setValue(money.getText().toString());\n                        dr.child(myListobj1.getName()).child(\"Transactions\").child(\"give money\").child(s).child(remark.getText().toString()).setValue(money.getText().toString());\n                        requestDialog.dismiss();\n                    }\n                });\n                c_name.setText(myListobj1.getName());\n                c_no.setText(myListobj1.getPhone());\n                TextDrawable drawable = TextDrawable.builder().buildRound(myListobj1.getName().substring(0,1).toUpperCase(), Color.rgb(15,167,255));\n                c_img.setBackground(drawable);\n                requestDialog.show();\n            }\n        });\n    }", "url": "https://raw.githubusercontent.com/AkhilRautela/ledger_system/master/app/src/main/java/com/example/ledgersystem/contact_Adapter.java", "stars": "2", "class_props": {"extends": "RecyclerView", "implements": null, "modifiers": ["public"]}}, {"id": 62535, "method_name": "getItemCount", "class_name": "contact_Adapter", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getItemCount() {\n        return data.size();\n    }", "url": "https://raw.githubusercontent.com/AkhilRautela/ledger_system/master/app/src/main/java/com/example/ledgersystem/contact_Adapter.java", "stars": "2", "class_props": {"extends": "RecyclerView", "implements": null, "modifiers": ["public"]}}, {"id": 62536, "method_name": "onKeyPreIme", "class_name": "FormsEditText", "params": ["int", "android"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "\tpublic boolean onKeyPreIme (int p0, android.view.KeyEvent p1)\n\t{\n\t\treturn n_onKeyPreIme (p0, p1);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc643f46942d9dd1fff9/FormsEditText.java", "stars": "2", "class_props": {"extends": "crc643f46942d9dd1fff9", "implements": ["mono"], "modifiers": ["public"]}}, {"id": 62537, "method_name": "n_onKeyPreIme", "class_name": "FormsEditText", "params": ["int", "android"], "throws": null, "modifiers": ["private", "native"], "return_type": "boolean", "snippet": "\tprivate native boolean n_onKeyPreIme (int p0, android.view.KeyEvent p1);\n\n\n\tpublic void onSelectionChanged (int p0, int p1)\n\t{\n\t\tn_onSelectionChanged (p0, p1);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc643f46942d9dd1fff9/FormsEditText.java", "stars": "2", "class_props": {"extends": "crc643f46942d9dd1fff9", "implements": ["mono"], "modifiers": ["public"]}}, {"id": 62538, "method_name": "onSelectionChanged", "class_name": "FormsEditText", "params": ["int", "int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void onSelectionChanged (int p0, int p1)\n\t{\n\t\tn_onSelectionChanged (p0, p1);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc643f46942d9dd1fff9/FormsEditText.java", "stars": "2", "class_props": {"extends": "crc643f46942d9dd1fff9", "implements": ["mono"], "modifiers": ["public"]}}, {"id": 62539, "method_name": "n_onSelectionChanged", "class_name": "FormsEditText", "params": ["int", "int"], "throws": null, "modifiers": ["private", "native"], "return_type": "void", "snippet": "\tprivate native void n_onSelectionChanged (int p0, int p1);\n\n\tprivate java.util.ArrayList refList;\n\tpublic void monodroidAddReference (java.lang.Object obj)\n\t{\n\t\tif (refList == null)\n\t\t\trefList = new java.util.ArrayList ();\n\t\trefList.add (obj);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc643f46942d9dd1fff9/FormsEditText.java", "stars": "2", "class_props": {"extends": "crc643f46942d9dd1fff9", "implements": ["mono"], "modifiers": ["public"]}}, {"id": 62540, "method_name": "monodroidAddReference", "class_name": "FormsEditText", "params": ["java"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void monodroidAddReference (java.lang.Object obj)\n\t{\n\t\tif (refList == null)\n\t\t\trefList = new java.util.ArrayList ();\n\t\trefList.add (obj);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc643f46942d9dd1fff9/FormsEditText.java", "stars": "2", "class_props": {"extends": "crc643f46942d9dd1fff9", "implements": ["mono"], "modifiers": ["public"]}}, {"id": 62541, "method_name": "monodroidClearReferences", "class_name": "FormsEditText", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void monodroidClearReferences ()\n\t{\n\t\tif (refList != null)\n\t\t\trefList.clear ();\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc643f46942d9dd1fff9/FormsEditText.java", "stars": "2", "class_props": {"extends": "crc643f46942d9dd1fff9", "implements": ["mono"], "modifiers": ["public"]}}, {"id": 62542, "method_name": "main", "class_name": "Demo02WaitAndNotify", "params": ["String"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void main(String[] args) {\n        //\u521b\u5efa\u9501\u5bf9\u8c61,\u4fdd\u8bc1\u552f\u4e00\n        Object obj = new Object();\n        // \u521b\u5efa\u4e00\u4e2a\u987e\u5ba2\u7ebf\u7a0b(\u6d88\u8d39\u8005)\n        new Thread(){\n            @Override\n            public void run() {\n                //\u4e00\u76f4\u7b49\u7740\u4e70\u5305\u5b50\n                while(true){\n                    //\u4fdd\u8bc1\u7b49\u5f85\u548c\u5524\u9192\u7684\u7ebf\u7a0b\u53ea\u80fd\u6709\u4e00\u4e2a\u6267\u884c,\u9700\u8981\u4f7f\u7528\u540c\u6b65\u6280\u672f\n                    synchronized (obj){\n                        System.out.println(\"\u987e\u5ba21\u544a\u77e5\u8001\u677f\u8981\u7684\u5305\u5b50\u7684\u79cd\u7c7b\u548c\u6570\u91cf\");\n                        //\u8c03\u7528wait\u65b9\u6cd5,\u653e\u5f03cpu\u7684\u6267\u884c,\u8fdb\u5165\u5230WAITING\u72b6\u6001(\u65e0\u9650\u7b49\u5f85)\n                        try {\n                            obj.wait();\n                        } catch (InterruptedException e) {\n                            e.printStackTrace();\n                        }\n                        //\u5524\u9192\u4e4b\u540e\u6267\u884c\u7684\u4ee3\u7801\n                        System.out.println(\"\u5305\u5b50\u5df2\u7ecf\u505a\u597d\u4e86,\u987e\u5ba21\u5f00\u5403!\");\n                        System.out.println(\"---------------------------------------\");\n                    }\n                }\n            }\n        }.start();\n\n        // \u521b\u5efa\u4e00\u4e2a\u987e\u5ba2\u7ebf\u7a0b(\u6d88\u8d39\u8005)\n        new Thread(){\n            @Override\n            public void run() {\n                //\u4e00\u76f4\u7b49\u7740\u4e70\u5305\u5b50\n                while(true){\n                    //\u4fdd\u8bc1\u7b49\u5f85\u548c\u5524\u9192\u7684\u7ebf\u7a0b\u53ea\u80fd\u6709\u4e00\u4e2a\u6267\u884c,\u9700\u8981\u4f7f\u7528\u540c\u6b65\u6280\u672f\n                    synchronized (obj){\n                        System.out.println(\"\u987e\u5ba22\u544a\u77e5\u8001\u677f\u8981\u7684\u5305\u5b50\u7684\u79cd\u7c7b\u548c\u6570\u91cf\");\n                        //\u8c03\u7528wait\u65b9\u6cd5,\u653e\u5f03cpu\u7684\u6267\u884c,\u8fdb\u5165\u5230WAITING\u72b6\u6001(\u65e0\u9650\u7b49\u5f85)\n                        try {\n                            obj.wait();\n                        } catch (InterruptedException e) {\n                            e.printStackTrace();\n                        }\n                        //\u5524\u9192\u4e4b\u540e\u6267\u884c\u7684\u4ee3\u7801\n                        System.out.println(\"\u5305\u5b50\u5df2\u7ecf\u505a\u597d\u4e86,\u987e\u5ba22\u5f00\u5403!\");\n                        System.out.println(\"---------------------------------------\");\n                    }\n                }\n            }\n        }.start();\n\n        //\u521b\u5efa\u4e00\u4e2a\u8001\u677f\u7ebf\u7a0b(\u751f\u4ea7\u8005)\n        new Thread(){\n            @Override\n            public void run() {\n                //\u4e00\u76f4\u505a\u5305\u5b50\n                while (true){\n                    //\u82b1\u4e865\u79d2\u505a\u5305\u5b50\n                    try {\n                        Thread.sleep(5000);//\u82b15\u79d2\u949f\u505a\u5305\u5b50\n                    } catch (InterruptedException e) {\n                        e.printStackTrace();\n                    }\n\n                    //\u4fdd\u8bc1\u7b49\u5f85\u548c\u5524\u9192\u7684\u7ebf\u7a0b\u53ea\u80fd\u6709\u4e00\u4e2a\u6267\u884c,\u9700\u8981\u4f7f\u7528\u540c\u6b65\u6280\u672f\n                    synchronized (obj){\n                        System.out.println(\"\u8001\u677f5\u79d2\u949f\u4e4b\u540e\u505a\u597d\u5305\u5b50,\u544a\u77e5\u987e\u5ba2,\u53ef\u4ee5\u5403\u5305\u5b50\u4e86\");\n                        //\u505a\u597d\u5305\u5b50\u4e4b\u540e,\u8c03\u7528notify\u65b9\u6cd5,\u5524\u9192\u987e\u5ba2\u5403\u5305\u5b50\n                        //obj.notify();//\u5982\u679c\u6709\u591a\u4e2a\u7b49\u5f85\u7ebf\u7a0b,\u968f\u673a\u5524\u9192\u4e00\u4e2a\n                        obj.notifyAll();//\u5524\u9192\u6240\u6709\u7b49\u5f85\u7684\u7ebf\u7a0b\n                    }\n                }\n            }\n        }.start();\n    }", "url": "https://raw.githubusercontent.com/liuminchao123/JavaWeb_Learning/master/02.%20java/Java/%E9%BB%91%E9%A9%AC%E6%95%99%E7%A8%8B/17.%E3%80%90%E7%BA%BF%E7%A8%8B%E3%80%81%E5%90%8C%E6%AD%A5%E3%80%91-%E7%AC%94%E8%AE%B0/code/06_Thread/src/com/itheima/demo10/WaitAndNotify/Demo02WaitAndNotify.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 62543, "method_name": "init", "class_name": "UserMapperTest", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void init() {\n        userMapper = new UserMapper();\n        user = new User();\n        user.setLogin(DEFAULT_LOGIN);\n        user.setPassword(RandomStringUtils.random(60));\n        user.setActivated(true);\n        user.setEmail(\"johndoe@localhost\");\n        user.setFirstName(\"john\");\n        user.setLastName(\"doe\");\n        user.setImageUrl(\"image_url\");\n        user.setLangKey(\"en\");\n\n        userDto = new UserDTO(user);\n    }", "url": "https://raw.githubusercontent.com/Vondser/mmwms-antd/master/src/test/java/com/meimos/myapp/service/mapper/UserMapperTest.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 62544, "method_name": "usersToUserDTOsShouldMapOnlyNonNullUsers", "class_name": "UserMapperTest", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void usersToUserDTOsShouldMapOnlyNonNullUsers() {\n        List<User> users = new ArrayList<>();\n        users.add(user);\n        users.add(null);\n\n        List<UserDTO> userDTOS = userMapper.usersToUserDTOs(users);\n\n        assertThat(userDTOS).isNotEmpty();\n        assertThat(userDTOS).size().isEqualTo(1);\n    }", "url": "https://raw.githubusercontent.com/Vondser/mmwms-antd/master/src/test/java/com/meimos/myapp/service/mapper/UserMapperTest.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 62545, "method_name": "userDTOsToUsersShouldMapOnlyNonNullUsers", "class_name": "UserMapperTest", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void userDTOsToUsersShouldMapOnlyNonNullUsers() {\n        List<UserDTO> usersDto = new ArrayList<>();\n        usersDto.add(userDto);\n        usersDto.add(null);\n\n        List<User> users = userMapper.userDTOsToUsers(usersDto);\n\n        assertThat(users).isNotEmpty();\n        assertThat(users).size().isEqualTo(1);\n    }", "url": "https://raw.githubusercontent.com/Vondser/mmwms-antd/master/src/test/java/com/meimos/myapp/service/mapper/UserMapperTest.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 62546, "method_name": "userDTOsToUsersWithAuthoritiesStringShouldMapToUsersWithAuthoritiesDomain", "class_name": "UserMapperTest", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void userDTOsToUsersWithAuthoritiesStringShouldMapToUsersWithAuthoritiesDomain() {\n        Set<String> authoritiesAsString = new HashSet<>();\n        authoritiesAsString.add(\"ADMIN\");\n        userDto.setAuthorities(authoritiesAsString);\n\n        List<UserDTO> usersDto = new ArrayList<>();\n        usersDto.add(userDto);\n\n        List<User> users = userMapper.userDTOsToUsers(usersDto);\n\n        assertThat(users).isNotEmpty();\n        assertThat(users).size().isEqualTo(1);\n        assertThat(users.get(0).getAuthorities()).isNotNull();\n        assertThat(users.get(0).getAuthorities()).isNotEmpty();\n        assertThat(users.get(0).getAuthorities().iterator().next().getName()).isEqualTo(\"ADMIN\");\n    }", "url": "https://raw.githubusercontent.com/Vondser/mmwms-antd/master/src/test/java/com/meimos/myapp/service/mapper/UserMapperTest.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 62547, "method_name": "userDTOsToUsersMapWithNullAuthoritiesStringShouldReturnUserWithEmptyAuthorities", "class_name": "UserMapperTest", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void userDTOsToUsersMapWithNullAuthoritiesStringShouldReturnUserWithEmptyAuthorities() {\n        userDto.setAuthorities(null);\n\n        List<UserDTO> usersDto = new ArrayList<>();\n        usersDto.add(userDto);\n\n        List<User> users = userMapper.userDTOsToUsers(usersDto);\n\n        assertThat(users).isNotEmpty();\n        assertThat(users).size().isEqualTo(1);\n        assertThat(users.get(0).getAuthorities()).isNotNull();\n        assertThat(users.get(0).getAuthorities()).isEmpty();\n    }", "url": "https://raw.githubusercontent.com/Vondser/mmwms-antd/master/src/test/java/com/meimos/myapp/service/mapper/UserMapperTest.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 62548, "method_name": "userDTOToUserMapWithAuthoritiesStringShouldReturnUserWithAuthorities", "class_name": "UserMapperTest", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void userDTOToUserMapWithAuthoritiesStringShouldReturnUserWithAuthorities() {\n        Set<String> authoritiesAsString = new HashSet<>();\n        authoritiesAsString.add(\"ADMIN\");\n        userDto.setAuthorities(authoritiesAsString);\n\n        User user = userMapper.userDTOToUser(userDto);\n\n        assertThat(user).isNotNull();\n        assertThat(user.getAuthorities()).isNotNull();\n        assertThat(user.getAuthorities()).isNotEmpty();\n        assertThat(user.getAuthorities().iterator().next().getName()).isEqualTo(\"ADMIN\");\n    }", "url": "https://raw.githubusercontent.com/Vondser/mmwms-antd/master/src/test/java/com/meimos/myapp/service/mapper/UserMapperTest.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 62549, "method_name": "userDTOToUserMapWithNullAuthoritiesStringShouldReturnUserWithEmptyAuthorities", "class_name": "UserMapperTest", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void userDTOToUserMapWithNullAuthoritiesStringShouldReturnUserWithEmptyAuthorities() {\n        userDto.setAuthorities(null);\n\n        User user = userMapper.userDTOToUser(userDto);\n\n        assertThat(user).isNotNull();\n        assertThat(user.getAuthorities()).isNotNull();\n        assertThat(user.getAuthorities()).isEmpty();\n    }", "url": "https://raw.githubusercontent.com/Vondser/mmwms-antd/master/src/test/java/com/meimos/myapp/service/mapper/UserMapperTest.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 62550, "method_name": "userDTOToUserMapWithNullUserShouldReturnNull", "class_name": "UserMapperTest", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void userDTOToUserMapWithNullUserShouldReturnNull() {\n        assertThat(userMapper.userDTOToUser(null)).isNull();\n    }", "url": "https://raw.githubusercontent.com/Vondser/mmwms-antd/master/src/test/java/com/meimos/myapp/service/mapper/UserMapperTest.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 62551, "method_name": "testUserFromId", "class_name": "UserMapperTest", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void testUserFromId() {\n        assertThat(userMapper.userFromId(DEFAULT_ID).getId()).isEqualTo(DEFAULT_ID);\n        assertThat(userMapper.userFromId(null)).isNull();\n    }", "url": "https://raw.githubusercontent.com/Vondser/mmwms-antd/master/src/test/java/com/meimos/myapp/service/mapper/UserMapperTest.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 62552, "method_name": "callback", "class_name": "AdminBizTest", "params": [], "throws": ["Exception"], "modifiers": ["public"], "return_type": "void", "snippet": "    public void callback() throws Exception {\n        AdminBiz adminBiz = new AdminBizClient(addressUrl, accessToken);\n\n        HandleCallbackParam param = new HandleCallbackParam();\n        param.setLogId(1);\n        param.setExecuteResult(ReturnT.SUCCESS);\n\n        List<HandleCallbackParam> callbackParamList = Arrays.asList(param);\n\n        ReturnT<String> returnT = adminBiz.callback(callbackParamList);\n\n        Assert.assertTrue(returnT.getCode() == ReturnT.SUCCESS_CODE);\n    }", "url": "https://raw.githubusercontent.com/miaoo92/xxl-job-mongo/master/src/test/java/com/xxl/job/adminbiz/AdminBizTest.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 62553, "method_name": "registry", "class_name": "AdminBizTest", "params": [], "throws": ["Exception"], "modifiers": ["public"], "return_type": "void", "snippet": "    public void registry() throws Exception {\n        AdminBiz adminBiz = new AdminBizClient(addressUrl, accessToken);\n\n        RegistryParam registryParam = new RegistryParam(RegistryConfig.RegistType.EXECUTOR.name(), \"xxl-job-executor-example\", \"127.0.0.1:9999\");\n        ReturnT<String> returnT = adminBiz.registry(registryParam);\n\n        Assert.assertTrue(returnT.getCode() == ReturnT.SUCCESS_CODE);\n    }", "url": "https://raw.githubusercontent.com/miaoo92/xxl-job-mongo/master/src/test/java/com/xxl/job/adminbiz/AdminBizTest.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 62554, "method_name": "registryRemove", "class_name": "AdminBizTest", "params": [], "throws": ["Exception"], "modifiers": ["public"], "return_type": "void", "snippet": "    public void registryRemove() throws Exception {\n        AdminBiz adminBiz = new AdminBizClient(addressUrl, accessToken);\n\n        RegistryParam registryParam = new RegistryParam(RegistryConfig.RegistType.EXECUTOR.name(), \"xxl-job-executor-example\", \"127.0.0.1:9999\");\n        ReturnT<String> returnT = adminBiz.registryRemove(registryParam);\n\n        Assert.assertTrue(returnT.getCode() == ReturnT.SUCCESS_CODE);\n\n    }", "url": "https://raw.githubusercontent.com/miaoo92/xxl-job-mongo/master/src/test/java/com/xxl/job/adminbiz/AdminBizTest.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 62555, "method_name": "main", "class_name": "Demo02KeySet", "params": ["String"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void main(String[] args) {\n        //\u521b\u5efaMap\u96c6\u5408\u5bf9\u8c61\n        Map<String,Integer> map = new HashMap<>();\n        map.put(\"\u8d75\u4e3d\u9896\",168);\n        map.put(\"\u6768\u9896\",165);\n        map.put(\"\u6797\u5fd7\u73b2\",178);\n\n        //1.\u4f7f\u7528Map\u96c6\u5408\u4e2d\u7684\u65b9\u6cd5keySet(),\u628aMap\u96c6\u5408\u6240\u6709\u7684key\u53d6\u51fa\u6765,\u5b58\u50a8\u5230\u4e00\u4e2aSet\u96c6\u5408\u4e2d\n        Set<String> set = map.keySet();\n\n        //2.\u904d\u5386set\u96c6\u5408,\u83b7\u53d6Map\u96c6\u5408\u4e2d\u7684\u6bcf\u4e00\u4e2akey\n        //\u4f7f\u7528\u8fed\u4ee3\u5668\u904d\u5386Set\u96c6\u5408\n        Iterator<String> it = set.iterator();\n        while (it.hasNext()){\n            String key = it.next();\n            //3.\u901a\u8fc7Map\u96c6\u5408\u4e2d\u7684\u65b9\u6cd5get(key),\u901a\u8fc7key\u627e\u5230value\n            Integer value = map.get(key);\n            System.out.println(key+\"=\"+value);\n        }\n        System.out.println(\"-------------------\");\n        //\u4f7f\u7528\u589e\u5f3afor\u904d\u5386Set\u96c6\u5408\n        for(String key : set){\n            //3.\u901a\u8fc7Map\u96c6\u5408\u4e2d\u7684\u65b9\u6cd5get(key),\u901a\u8fc7key\u627e\u5230value\n            Integer value = map.get(key);\n            System.out.println(key+\"=\"+value);\n        }\n        System.out.println(\"-------------------\");\n        //\u4f7f\u7528\u589e\u5f3afor\u904d\u5386Set\u96c6\u5408\n        for(String key : map.keySet()){\n            //3.\u901a\u8fc7Map\u96c6\u5408\u4e2d\u7684\u65b9\u6cd5get(key),\u901a\u8fc7key\u627e\u5230value\n            Integer value = map.get(key);\n            System.out.println(key+\"=\"+value);\n        }\n    }", "url": "https://raw.githubusercontent.com/liuminchao123/JavaWeb_Learning/master/02.%20java/Java/%E9%BB%91%E9%A9%AC%E6%95%99%E7%A8%8B/15.%E3%80%90Map%E3%80%91-%E7%AC%94%E8%AE%B0/code/04_Map/src/com/itheima/demo01/Map/Demo02KeySet(1).java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 62556, "method_name": "onCreate", "class_name": "DetailMoreTypeActivity", "params": ["Bundle"], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        setContentView(R.layout.activity_detail_more_type);\n        ButterKnife.bind(this);\n\n        String source1 = \"http://9890.vod.myqcloud.com/9890_4e292f9a3dd011e6b4078980237cc3d3.f20.mp4\";\n        //String source1 = \"https://res.exexm.com/cw_145225549855002\";\n        String name = \"\u666e\u901a\";\n        SwitchVideoModel switchVideoModel = new SwitchVideoModel(name, source1);\n\n        String source2 = \"http://9890.vod.myqcloud.com/9890_4e292f9a3dd011e6b4078980237cc3d3.f30.mp4\";\n        String name2 = \"\u6e05\u6670\";\n        SwitchVideoModel switchVideoModel2 = new SwitchVideoModel(name2, source2);\n\n        List<SwitchVideoModel> list = new ArrayList<>();\n        list.add(switchVideoModel);\n        list.add(switchVideoModel2);\n\n        detailPlayer.setUp(list, true, \"\");\n\n        //\u589e\u52a0\u5c01\u9762\n        coverImageView = new ImageView(this);\n        coverImageView.setScaleType(ImageView.ScaleType.CENTER_CROP);\n        //coverImageView.setImageResource(R.mipmap.xxx1);\n        detailPlayer.setThumbImageView(coverImageView);\n\n        resolveNormalVideoUI();\n\n        //\u5916\u90e8\u8f85\u52a9\u7684\u65cb\u8f6c\uff0c\u5e2e\u52a9\u5168\u5c4f\n        orientationUtils = new OrientationUtils(this, detailPlayer);\n        //\u521d\u59cb\u5316\u4e0d\u6253\u5f00\u5916\u90e8\u7684\u65cb\u8f6c\n        orientationUtils.setEnable(false);\n\n        detailPlayer.setIsTouchWiget(true);\n        //detailPlayer.setIsTouchWigetFull(false);\n        //\u5173\u95ed\u81ea\u52a8\u65cb\u8f6c\n        detailPlayer.setRotateViewAuto(false);\n        detailPlayer.setLockLand(false);\n\n        //\u6253\u5f00  \u5b9e\u73b0\u7ad6\u5c4f\u5168\u5c4f\u52a8\u753b\n        detailPlayer.setShowFullAnimation(true);\n\n        detailPlayer.setNeedLockFull(true);\n        detailPlayer.setSeekRatio(1);\n        //detailPlayer.setOpenPreView(false);\n        detailPlayer.getFullscreenButton().setOnClickListener(new View.OnClickListener() {\n            @Override\n            public void onClick(View v) {\n                //\u5c4f\u853d\uff0c\u5b9e\u73b0\u7ad6\u5c4f\u5168\u5c4f\n                //orientationUtils.resolveByClick();\n\n                //\u7b2c\u4e00\u4e2atrue\u662f\u5426\u9700\u8981\u9690\u85cfactionbar\uff0c\u7b2c\u4e8c\u4e2atrue\u662f\u5426\u9700\u8981\u9690\u85cfstatusbar\n                detailPlayer.startWindowFullscreen(DetailMoreTypeActivity.this, true, true);\n            }\n        });\n\n        detailPlayer.setVideoAllCallBack(new GSYSampleCallBack() {\n            @Override\n            public void onPrepared(String url, Object... objects) {\n                super.onPrepared(url, objects);\n                //\u5f00\u59cb\u64ad\u653e\u4e86\u624d\u80fd\u65cb\u8f6c\u548c\u5168\u5c4f\n                //orientationUtils.setEnable(true);\n                orientationUtils.setEnable(false);\n                isPlay = true;\n            }\n\n            @Override\n            public void onAutoComplete(String url, Object... objects) {\n                super.onAutoComplete(url, objects);\n            }\n\n            @Override\n            public void onClickStartError(String url, Object... objects) {\n                super.onClickStartError(url, objects);\n            }\n\n            @Override\n            public void onQuitFullscreen(String url, Object... objects) {\n                super.onQuitFullscreen(url, objects);\n                //\u5c4f\u853d\uff0c\u5b9e\u73b0\u7ad6\u5c4f\u5168\u5c4f\n                //if (orientationUtils != null) {\n                    //orientationUtils.backToProtVideo();\n                //}\n            }\n        });\n\n        detailPlayer.setLockClickListener(new LockClickListener() {\n            @Override\n            public void onClick(View view, boolean lock) {\n                //\u5c4f\u853d\uff0c\u5b9e\u73b0\u7ad6\u5c4f\u5168\u5c4f\n                //if (orientationUtils != null) {\n                    //\u914d\u5408\u4e0b\u65b9\u7684onConfigurationChanged\n                    //orientationUtils.setEnable(!lock);\n                //}\n            }\n        });\n\n        loadFirstFrameCover(source1);\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/app/src/main/java/com/example/gsyvideoplayer/DetailMoreTypeActivity.java", "stars": "2", "class_props": {"extends": "AppCompatActivity", "implements": null, "modifiers": ["public"]}}, {"id": 62557, "method_name": "onBackPressed", "class_name": "DetailMoreTypeActivity", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onBackPressed() {\n\n        if (orientationUtils != null) {\n            orientationUtils.backToProtVideo();\n        }\n\n        if (GSYVideoManager.backFromWindowFull(this)) {\n            return;\n        }\n        super.onBackPressed();\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/app/src/main/java/com/example/gsyvideoplayer/DetailMoreTypeActivity.java", "stars": "2", "class_props": {"extends": "AppCompatActivity", "implements": null, "modifiers": ["public"]}}, {"id": 62558, "method_name": "onPause", "class_name": "DetailMoreTypeActivity", "params": [], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void onPause() {\n        getCurPlay().onVideoPause();\n        super.onPause();\n        isPause = true;\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/app/src/main/java/com/example/gsyvideoplayer/DetailMoreTypeActivity.java", "stars": "2", "class_props": {"extends": "AppCompatActivity", "implements": null, "modifiers": ["public"]}}, {"id": 62559, "method_name": "onResume", "class_name": "DetailMoreTypeActivity", "params": [], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void onResume() {\n        getCurPlay().onVideoResume();\n        super.onResume();\n        isPause = false;\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/app/src/main/java/com/example/gsyvideoplayer/DetailMoreTypeActivity.java", "stars": "2", "class_props": {"extends": "AppCompatActivity", "implements": null, "modifiers": ["public"]}}, {"id": 62560, "method_name": "onDestroy", "class_name": "DetailMoreTypeActivity", "params": [], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void onDestroy() {\n        super.onDestroy();\n        isRelease = true;\n        if (isPlay) {\n            getCurPlay().release();\n        }\n        //GSYPreViewManager.instance().releaseMediaPlayer();\n        if (orientationUtils != null)\n            orientationUtils.releaseListener();\n        if (mCoverMedia != null) {\n            mCoverMedia.release();\n            mCoverMedia = null;\n        }\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/app/src/main/java/com/example/gsyvideoplayer/DetailMoreTypeActivity.java", "stars": "2", "class_props": {"extends": "AppCompatActivity", "implements": null, "modifiers": ["public"]}}, {"id": 62561, "method_name": "onConfigurationChanged", "class_name": "DetailMoreTypeActivity", "params": ["Configuration"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onConfigurationChanged(Configuration newConfig) {\n        super.onConfigurationChanged(newConfig);\n        //\u5982\u679c\u65cb\u8f6c\u4e86\u5c31\u5168\u5c4f\n        if (isPlay && !isPause) {\n            detailPlayer.onConfigurationChanged(this, newConfig, orientationUtils, true, true);\n        }\n        //\u7ad6\u5c4f\u5168\u5c4f\n        orientationUtils.setEnable(false);\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/app/src/main/java/com/example/gsyvideoplayer/DetailMoreTypeActivity.java", "stars": "2", "class_props": {"extends": "AppCompatActivity", "implements": null, "modifiers": ["public"]}}, {"id": 62562, "method_name": "getCurPlay", "class_name": "DetailMoreTypeActivity", "params": [], "throws": null, "modifiers": ["private"], "return_type": "GSYVideoPlayer", "snippet": "    private GSYVideoPlayer getCurPlay() {\n        if (detailPlayer.getFullWindowPlayer() != null) {\n            return  detailPlayer.getFullWindowPlayer();\n        }\n        return detailPlayer;\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/app/src/main/java/com/example/gsyvideoplayer/DetailMoreTypeActivity.java", "stars": "2", "class_props": {"extends": "AppCompatActivity", "implements": null, "modifiers": ["public"]}}, {"id": 62563, "method_name": "resolveNormalVideoUI", "class_name": "DetailMoreTypeActivity", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void resolveNormalVideoUI() {\n        //\u589e\u52a0title\n        detailPlayer.getTitleTextView().setVisibility(View.GONE);\n        detailPlayer.getBackButton().setVisibility(View.GONE);\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/app/src/main/java/com/example/gsyvideoplayer/DetailMoreTypeActivity.java", "stars": "2", "class_props": {"extends": "AppCompatActivity", "implements": null, "modifiers": ["public"]}}, {"id": 62564, "method_name": "loadFirstFrameCover", "class_name": "DetailMoreTypeActivity", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void loadFirstFrameCover(String url) {\n\n        //\u539f\u59cb\u65b9\u6cd5\n        /*final MediaMetadataRetriever mediaMetadataRetriever = getMediaMetadataRetriever(url);\n        //\u83b7\u53d6\u5e27\u56fe\u7247\n        if (getMediaMetadataRetriever(url) != null) {\n            new Thread(new Runnable() {\n                @Override\n                public void run() {\n                    final Bitmap bitmap = mediaMetadataRetriever\n                            .getFrameAtTime(1000, MediaMetadataRetriever.OPTION_CLOSEST);\n                    runOnUiThread(new Runnable() {\n                        @Override\n                        public void run() {\n                            if (bitmap != null && !isRelease) {\n                                Debuger.printfLog(\"time \" + System.currentTimeMillis());\n                                //\u663e\u793a\n                                coverImageView.setImageBitmap(bitmap);\n                            }\n                        }\n                    });\n                }\n            }).start();\n        }*/\n\n        //\u53ef\u4ee5\u53c2\u8003Glide\uff0c\u5185\u90e8\u4e5f\u662f\u5c01\u88c5\u4e86MediaMetadataRetriever\n        Glide.with(this.getApplicationContext())\n                .setDefaultRequestOptions(\n                        new RequestOptions()\n                                .frame(1000000)\n                                .centerCrop()\n                                .error(R.mipmap.xxx2)\n                                .placeholder(R.mipmap.xxx1))\n                .load(url)\n                .into(coverImageView);\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/app/src/main/java/com/example/gsyvideoplayer/DetailMoreTypeActivity.java", "stars": "2", "class_props": {"extends": "AppCompatActivity", "implements": null, "modifiers": ["public"]}}, {"id": 62565, "method_name": "getMediaMetadataRetriever", "class_name": "DetailMoreTypeActivity", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "MediaMetadataRetriever", "snippet": "    public MediaMetadataRetriever getMediaMetadataRetriever(String url) {\n        if (mCoverMedia == null) {\n            mCoverMedia = new MediaMetadataRetriever();\n        }\n        mCoverMedia.setDataSource(url, new HashMap<String, String>());\n        return mCoverMedia;\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/app/src/main/java/com/example/gsyvideoplayer/DetailMoreTypeActivity.java", "stars": "2", "class_props": {"extends": "AppCompatActivity", "implements": null, "modifiers": ["public"]}}, {"id": 62566, "method_name": "monodroidAddReference", "class_name": "GroupableItemsViewRenderer_3", "params": ["java"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void monodroidAddReference (java.lang.Object obj)\n\t{\n\t\tif (refList == null)\n\t\t\trefList = new java.util.ArrayList ();\n\t\trefList.add (obj);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc643f46942d9dd1fff9/GroupableItemsViewRenderer_3.java", "stars": "2", "class_props": {"extends": "crc643f46942d9dd1fff9", "implements": ["mono"], "modifiers": ["public"]}}, {"id": 62567, "method_name": "monodroidClearReferences", "class_name": "GroupableItemsViewRenderer_3", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void monodroidClearReferences ()\n\t{\n\t\tif (refList != null)\n\t\t\trefList.clear ();\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc643f46942d9dd1fff9/GroupableItemsViewRenderer_3.java", "stars": "2", "class_props": {"extends": "crc643f46942d9dd1fff9", "implements": ["mono"], "modifiers": ["public"]}}, {"id": 62568, "method_name": "createObjectMapper", "class_name": "TestUtil", "params": [], "throws": null, "modifiers": ["static", "private"], "return_type": "ObjectMapper", "snippet": "    private static ObjectMapper createObjectMapper() {\n        ObjectMapper mapper = new ObjectMapper();\n        mapper.setSerializationInclusion(JsonInclude.Include.NON_EMPTY);\n        mapper.registerModule(new JavaTimeModule());\n        return mapper;\n    }", "url": "https://raw.githubusercontent.com/gardle/gardle-web/master/src/test/java/com/gardle/web/rest/TestUtil.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["final", "public"]}}, {"id": 62569, "method_name": "convertObjectToJsonBytes", "class_name": "TestUtil", "params": ["Object"], "throws": ["IOException"], "modifiers": ["public", "static"], "return_type": "byte", "snippet": "    public static byte[] convertObjectToJsonBytes(Object object) throws IOException {\n        return mapper.writeValueAsBytes(object);\n    }", "url": "https://raw.githubusercontent.com/gardle/gardle-web/master/src/test/java/com/gardle/web/rest/TestUtil.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["final", "public"]}}, {"id": 62570, "method_name": "createByteArray", "class_name": "TestUtil", "params": ["int", "String"], "throws": null, "modifiers": ["public", "static"], "return_type": "byte", "snippet": "    public static byte[] createByteArray(int size, String data) {\n        byte[] byteArray = new byte[size];\n        for (int i = 0; i < size; i++) {\n            byteArray[i] = Byte.parseByte(data, 2);\n        }\n        return byteArray;\n    }", "url": "https://raw.githubusercontent.com/gardle/gardle-web/master/src/test/java/com/gardle/web/rest/TestUtil.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["final", "public"]}}, {"id": 62571, "method_name": "sameInstant", "class_name": "TestUtil", "params": ["ZonedDateTime"], "throws": null, "modifiers": ["public", "static"], "return_type": "ZonedDateTimeMatcher", "snippet": "    public static ZonedDateTimeMatcher sameInstant(ZonedDateTime date) {\n        return new ZonedDateTimeMatcher(date);\n    }", "url": "https://raw.githubusercontent.com/gardle/gardle-web/master/src/test/java/com/gardle/web/rest/TestUtil.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["final", "public"]}}, {"id": 62572, "method_name": "equalsVerifier", "class_name": "TestUtil", "params": ["Class<T>"], "throws": ["Exception"], "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static <T> void equalsVerifier(Class<T> clazz) throws Exception {\n        T domainObject1 = clazz.getConstructor().newInstance();\n        assertThat(domainObject1.toString()).isNotNull();\n        assertThat(domainObject1).isEqualTo(domainObject1);\n        assertThat(domainObject1.hashCode()).isEqualTo(domainObject1.hashCode());\n        // Test with an instance of another class\n        Object testOtherObject = new Object();\n        assertThat(domainObject1).isNotEqualTo(testOtherObject);\n        assertThat(domainObject1).isNotEqualTo(null);\n        // Test with an instance of the same class\n        T domainObject2 = clazz.getConstructor().newInstance();\n        assertThat(domainObject1).isNotEqualTo(domainObject2);\n        // HashCodes are equals because the objects are not persisted yet\n        assertThat(domainObject1.hashCode()).isEqualTo(domainObject2.hashCode());\n    }", "url": "https://raw.githubusercontent.com/gardle/gardle-web/master/src/test/java/com/gardle/web/rest/TestUtil.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["final", "public"]}}, {"id": 62573, "method_name": "createFormattingConversionService", "class_name": "TestUtil", "params": [], "throws": null, "modifiers": ["public", "static"], "return_type": "FormattingConversionService", "snippet": "    public static FormattingConversionService createFormattingConversionService() {\n        DefaultFormattingConversionService dfcs = new DefaultFormattingConversionService();\n        DateTimeFormatterRegistrar registrar = new DateTimeFormatterRegistrar();\n        registrar.setUseIsoFormat(true);\n        registrar.registerFormatters(dfcs);\n        return dfcs;\n    }", "url": "https://raw.githubusercontent.com/gardle/gardle-web/master/src/test/java/com/gardle/web/rest/TestUtil.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["final", "public"]}}, {"id": 62574, "method_name": "findAll", "class_name": "TestUtil", "params": ["EntityManager", "Class<T>"], "throws": null, "modifiers": ["public", "static"], "return_type": "List<T>", "snippet": "    public static <T> List<T> findAll(EntityManager em, Class<T> clss) {\n        CriteriaBuilder cb = em.getCriteriaBuilder();\n        CriteriaQuery<T> cq = cb.createQuery(clss);\n        Root<T> rootEntry = cq.from(clss);\n        CriteriaQuery<T> all = cq.select(rootEntry);\n        TypedQuery<T> allQuery = em.createQuery(all);\n        return allQuery.getResultList();\n    }", "url": "https://raw.githubusercontent.com/gardle/gardle-web/master/src/test/java/com/gardle/web/rest/TestUtil.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["final", "public"]}}, {"id": 62575, "method_name": "matchesSafely", "class_name": "ZonedDateTimeMatcher", "params": ["String", "Description"], "throws": null, "modifiers": ["protected"], "return_type": "boolean", "snippet": "        protected boolean matchesSafely(String item, Description mismatchDescription) {\n            try {\n                if (!date.isEqual(ZonedDateTime.parse(item))) {\n                    mismatchDescription.appendText(\"was \").appendValue(item);\n                    return false;\n                }\n                return true;\n            } catch (DateTimeParseException e) {\n                mismatchDescription.appendText(\"was \").appendValue(item)\n                    .appendText(\", which could not be parsed as a ZonedDateTime\");\n                return false;\n            }\n\n        }", "url": "https://raw.githubusercontent.com/gardle/gardle-web/master/src/test/java/com/gardle/web/rest/TestUtil.java", "stars": "2", "class_props": {"extends": "TypeSafeDiagnosingMatcher", "implements": null, "modifiers": ["public", "static"]}}, {"id": 62576, "method_name": "describeTo", "class_name": "ZonedDateTimeMatcher", "params": ["Description"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "        public void describeTo(Description description) {\n            description.appendText(\"a String representing the same Instant as \").appendValue(date);\n        }", "url": "https://raw.githubusercontent.com/gardle/gardle-web/master/src/test/java/com/gardle/web/rest/TestUtil.java", "stars": "2", "class_props": {"extends": "TypeSafeDiagnosingMatcher", "implements": null, "modifiers": ["public", "static"]}}, {"id": 62577, "method_name": "main", "class_name": "Demo01SetThreadName", "params": ["String"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void main(String[] args) {\n        //\u5f00\u542f\u591a\u7ebf\u7a0b\n        MyThread mt = new MyThread();\n        mt.setName(\"\u5c0f\u5f3a\");\n        mt.start();\n\n        //\u5f00\u542f\u591a\u7ebf\u7a0b\n        new MyThread(\"\u65fa\u8d22\").start();\n    }", "url": "https://raw.githubusercontent.com/liuminchao123/JavaWeb_Learning/master/02.%20java/Java/%E9%BB%91%E9%A9%AC%E6%95%99%E7%A8%8B/17.%E3%80%90%E7%BA%BF%E7%A8%8B%E3%80%81%E5%90%8C%E6%AD%A5%E3%80%91-%E7%AC%94%E8%AE%B0/code/06_Thread/src/com/itheima/demo02/setName/Demo01SetThreadName.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 62578, "method_name": "invalidate", "class_name": "CheckBoxDesignerRenderer", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void invalidate ()\n\t{\n\t\tn_invalidate ();\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc643f46942d9dd1fff9/CheckBoxDesignerRenderer.java", "stars": "2", "class_props": {"extends": "android", "implements": ["mono", "android", "android"], "modifiers": ["public"]}}, {"id": 62579, "method_name": "n_invalidate", "class_name": "CheckBoxDesignerRenderer", "params": [], "throws": null, "modifiers": ["private", "native"], "return_type": "void", "snippet": "\tprivate native void n_invalidate ();\n\n\n\tpublic void onFocusChange (android.view.View p0, boolean p1)\n\t{\n\t\tn_onFocusChange (p0, p1);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc643f46942d9dd1fff9/CheckBoxDesignerRenderer.java", "stars": "2", "class_props": {"extends": "android", "implements": ["mono", "android", "android"], "modifiers": ["public"]}}, {"id": 62580, "method_name": "onFocusChange", "class_name": "CheckBoxDesignerRenderer", "params": ["android", "boolean"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void onFocusChange (android.view.View p0, boolean p1)\n\t{\n\t\tn_onFocusChange (p0, p1);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc643f46942d9dd1fff9/CheckBoxDesignerRenderer.java", "stars": "2", "class_props": {"extends": "android", "implements": ["mono", "android", "android"], "modifiers": ["public"]}}, {"id": 62581, "method_name": "n_onFocusChange", "class_name": "CheckBoxDesignerRenderer", "params": ["android", "boolean"], "throws": null, "modifiers": ["private", "native"], "return_type": "void", "snippet": "\tprivate native void n_onFocusChange (android.view.View p0, boolean p1);\n\n\n\tpublic void onCheckedChanged (android.widget.CompoundButton p0, boolean p1)\n\t{\n\t\tn_onCheckedChanged (p0, p1);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc643f46942d9dd1fff9/CheckBoxDesignerRenderer.java", "stars": "2", "class_props": {"extends": "android", "implements": ["mono", "android", "android"], "modifiers": ["public"]}}, {"id": 62582, "method_name": "onCheckedChanged", "class_name": "CheckBoxDesignerRenderer", "params": ["android", "boolean"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void onCheckedChanged (android.widget.CompoundButton p0, boolean p1)\n\t{\n\t\tn_onCheckedChanged (p0, p1);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc643f46942d9dd1fff9/CheckBoxDesignerRenderer.java", "stars": "2", "class_props": {"extends": "android", "implements": ["mono", "android", "android"], "modifiers": ["public"]}}, {"id": 62583, "method_name": "n_onCheckedChanged", "class_name": "CheckBoxDesignerRenderer", "params": ["android", "boolean"], "throws": null, "modifiers": ["private", "native"], "return_type": "void", "snippet": "\tprivate native void n_onCheckedChanged (android.widget.CompoundButton p0, boolean p1);\n\n\tprivate java.util.ArrayList refList;\n\tpublic void monodroidAddReference (java.lang.Object obj)\n\t{\n\t\tif (refList == null)\n\t\t\trefList = new java.util.ArrayList ();\n\t\trefList.add (obj);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc643f46942d9dd1fff9/CheckBoxDesignerRenderer.java", "stars": "2", "class_props": {"extends": "android", "implements": ["mono", "android", "android"], "modifiers": ["public"]}}, {"id": 62584, "method_name": "monodroidAddReference", "class_name": "CheckBoxDesignerRenderer", "params": ["java"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void monodroidAddReference (java.lang.Object obj)\n\t{\n\t\tif (refList == null)\n\t\t\trefList = new java.util.ArrayList ();\n\t\trefList.add (obj);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc643f46942d9dd1fff9/CheckBoxDesignerRenderer.java", "stars": "2", "class_props": {"extends": "android", "implements": ["mono", "android", "android"], "modifiers": ["public"]}}, {"id": 62585, "method_name": "monodroidClearReferences", "class_name": "CheckBoxDesignerRenderer", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void monodroidClearReferences ()\n\t{\n\t\tif (refList != null)\n\t\t\trefList.clear ();\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc643f46942d9dd1fff9/CheckBoxDesignerRenderer.java", "stars": "2", "class_props": {"extends": "android", "implements": ["mono", "android", "android"], "modifiers": ["public"]}}, {"id": 62586, "method_name": "getTypes", "class_name": "InetDeviceManagerMethod", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Set<DeviceManagerMethodType>", "snippet": "\tpublic Set<DeviceManagerMethodType> getTypes() {\n\t\treturn types;\n\t}", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/proto/model/inet/InetDeviceManagerMethod.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 62587, "method_name": "setTypes", "class_name": "InetDeviceManagerMethod", "params": ["Set<DeviceManagerMethodType>"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void setTypes(Set<DeviceManagerMethodType> types) {\n\t\tthis.types = types;\n\t}", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/proto/model/inet/InetDeviceManagerMethod.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 62588, "method_name": "getMethod", "class_name": "InetDeviceManagerMethod", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "\tpublic String getMethod() {\n\t\treturn method;\n\t}", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/proto/model/inet/InetDeviceManagerMethod.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 62589, "method_name": "setMethod", "class_name": "InetDeviceManagerMethod", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void setMethod(String method) {\n\t\tthis.method = method;\n\t}", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/proto/model/inet/InetDeviceManagerMethod.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 62590, "method_name": "getTitle", "class_name": "InetDeviceManagerMethod", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "\tpublic String getTitle() {\n\t\treturn title;\n\t}", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/proto/model/inet/InetDeviceManagerMethod.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 62591, "method_name": "setTitle", "class_name": "InetDeviceManagerMethod", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void setTitle(String title) {\n\t\tthis.title = title;\n\t}", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/proto/model/inet/InetDeviceManagerMethod.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 62592, "method_name": "getColor", "class_name": "Practice01ArgbEvaluatorView", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getColor() {\n        return color;\n    }", "url": "https://raw.githubusercontent.com/Geekholt/Practice-CustomView/master/app/src/main/java/com/geekholt/practiceui/view/lesson6/practice01/Practice01ArgbEvaluatorView.java", "stars": "2", "class_props": {"extends": "View", "implements": null, "modifiers": ["public"]}}, {"id": 62593, "method_name": "setColor", "class_name": "Practice01ArgbEvaluatorView", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setColor(int color) {\n        this.color = color;\n        invalidate();\n    }", "url": "https://raw.githubusercontent.com/Geekholt/Practice-CustomView/master/app/src/main/java/com/geekholt/practiceui/view/lesson6/practice01/Practice01ArgbEvaluatorView.java", "stars": "2", "class_props": {"extends": "View", "implements": null, "modifiers": ["public"]}}, {"id": 62594, "method_name": "onDraw", "class_name": "Practice01ArgbEvaluatorView", "params": ["Canvas"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onDraw(Canvas canvas) {\n        super.onDraw(canvas);\n\n        int width = getWidth();\n        int height = getHeight();\n\n        paint.setColor(color);\n        canvas.drawCircle(width / 2, height / 2, width / 6, paint);\n    }", "url": "https://raw.githubusercontent.com/Geekholt/Practice-CustomView/master/app/src/main/java/com/geekholt/practiceui/view/lesson6/practice01/Practice01ArgbEvaluatorView.java", "stars": "2", "class_props": {"extends": "View", "implements": null, "modifiers": ["public"]}}, {"id": 62595, "method_name": "validateUserName", "class_name": "OpeningWindowController", "params": ["String"], "throws": null, "modifiers": ["protected", "static"], "return_type": "boolean", "snippet": "    protected static boolean validateUserName(String userName) {\n        return (!userName.equals(\"\") && (!userName.contains(\",\") && !userName.contains(\":\")\n                && !userName.contains(\"<\") && !userName.contains(\">\") && !userName.contains(\"=\")\n                && !userName.contains(\"\\n\") && !userName.contains(\"\\r\") && !userName.contains(\"\\t\")\n                && !userName.contains(\" \"))) && userName.chars().allMatch(Character::isLetter);\n    }", "url": "https://raw.githubusercontent.com/AlirezaAZ/SimpleChatroom/master/src/Client/UserInterface/OpeningWindowController.java", "stars": "2", "class_props": {"extends": null, "implements": ["Initializable"], "modifiers": ["public"]}}, {"id": 62596, "method_name": "initialize", "class_name": "OpeningWindowController", "params": ["URL", "ResourceBundle"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void initialize(URL location, ResourceBundle resources) {\n        imageView.setImage(new Image(new File(Utils.rebuildPath(\"src\\\\Resources\\\\Icons\\\\main.png\")).toURI().toString()));\n\n        ImageView loginIcon = new ImageView();\n        loginIcon.setImage(new Image(new File(\n                Utils.rebuildPath(\"src\\\\Resources\\\\Icons\\\\login.png\")\n        ).toURI().toString()));\n        loginButton.setGraphic(loginIcon);\n    }", "url": "https://raw.githubusercontent.com/AlirezaAZ/SimpleChatroom/master/src/Client/UserInterface/OpeningWindowController.java", "stars": "2", "class_props": {"extends": null, "implements": ["Initializable"], "modifiers": ["public"]}}, {"id": 62597, "method_name": "clearServer", "class_name": "OpeningWindowController", "params": ["MouseEvent"], "throws": null, "modifiers": [], "return_type": "void", "snippet": "    void clearServer(MouseEvent event) {\n        serverAddress.clear();\n    }", "url": "https://raw.githubusercontent.com/AlirezaAZ/SimpleChatroom/master/src/Client/UserInterface/OpeningWindowController.java", "stars": "2", "class_props": {"extends": null, "implements": ["Initializable"], "modifiers": ["public"]}}, {"id": 62598, "method_name": "clearUserName", "class_name": "OpeningWindowController", "params": ["MouseEvent"], "throws": null, "modifiers": [], "return_type": "void", "snippet": "    void clearUserName(MouseEvent event) {\n        usernameTextField.clear();\n    }", "url": "https://raw.githubusercontent.com/AlirezaAZ/SimpleChatroom/master/src/Client/UserInterface/OpeningWindowController.java", "stars": "2", "class_props": {"extends": null, "implements": ["Initializable"], "modifiers": ["public"]}}, {"id": 62599, "method_name": "clearPort", "class_name": "OpeningWindowController", "params": ["MouseEvent"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void clearPort(MouseEvent mouseEvent) {\n        serverPort.clear();\n    }", "url": "https://raw.githubusercontent.com/AlirezaAZ/SimpleChatroom/master/src/Client/UserInterface/OpeningWindowController.java", "stars": "2", "class_props": {"extends": null, "implements": ["Initializable"], "modifiers": ["public"]}}, {"id": 62600, "method_name": "login", "class_name": "OpeningWindowController", "params": ["ActionEvent"], "throws": null, "modifiers": [], "return_type": "void", "snippet": "    void login(ActionEvent event) {\n        setIsConnecting();\n        Thread connectorThread = new Thread(new ClientConnector(this, event));\n        connectorThread.setDaemon(true);\n        connectorThread.start();\n    }", "url": "https://raw.githubusercontent.com/AlirezaAZ/SimpleChatroom/master/src/Client/UserInterface/OpeningWindowController.java", "stars": "2", "class_props": {"extends": null, "implements": ["Initializable"], "modifiers": ["public"]}}, {"id": 62601, "method_name": "setServerAddress", "class_name": "OpeningWindowController", "params": ["String", "String"], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void setServerAddress(String text, String... styles) {\n        serverAddress.setText(text);\n        if (Optional.ofNullable(styles).isPresent()) {\n            for (String style : styles)\n                serverAddress.setStyle(style);\n        }\n    }", "url": "https://raw.githubusercontent.com/AlirezaAZ/SimpleChatroom/master/src/Client/UserInterface/OpeningWindowController.java", "stars": "2", "class_props": {"extends": null, "implements": ["Initializable"], "modifiers": ["public"]}}, {"id": 62602, "method_name": "setServerPort", "class_name": "OpeningWindowController", "params": ["String", "String"], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void setServerPort(String text, String... styles) {\n        serverPort.setText(text);\n        if (Optional.ofNullable(styles).isPresent()) {\n            for (String style : styles)\n                serverPort.setStyle(style);\n        }\n    }", "url": "https://raw.githubusercontent.com/AlirezaAZ/SimpleChatroom/master/src/Client/UserInterface/OpeningWindowController.java", "stars": "2", "class_props": {"extends": null, "implements": ["Initializable"], "modifiers": ["public"]}}, {"id": 62603, "method_name": "setUsernameTextField", "class_name": "OpeningWindowController", "params": ["String", "String"], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void setUsernameTextField(String text, String... styles) {\n        usernameTextField.setText(text);\n        if (Optional.ofNullable(styles).isPresent()) {\n            for (String style : styles)\n                usernameTextField.setStyle(style);\n        }\n    }", "url": "https://raw.githubusercontent.com/AlirezaAZ/SimpleChatroom/master/src/Client/UserInterface/OpeningWindowController.java", "stars": "2", "class_props": {"extends": null, "implements": ["Initializable"], "modifiers": ["public"]}}, {"id": 62604, "method_name": "getServerAddress", "class_name": "OpeningWindowController", "params": [], "throws": null, "modifiers": ["protected"], "return_type": "String", "snippet": "    protected String getServerAddress() {\n        return serverAddress.getText();\n    }", "url": "https://raw.githubusercontent.com/AlirezaAZ/SimpleChatroom/master/src/Client/UserInterface/OpeningWindowController.java", "stars": "2", "class_props": {"extends": null, "implements": ["Initializable"], "modifiers": ["public"]}}, {"id": 62605, "method_name": "getServerPort", "class_name": "OpeningWindowController", "params": [], "throws": null, "modifiers": ["protected"], "return_type": "String", "snippet": "    protected String getServerPort() {\n        return serverPort.getText();\n    }", "url": "https://raw.githubusercontent.com/AlirezaAZ/SimpleChatroom/master/src/Client/UserInterface/OpeningWindowController.java", "stars": "2", "class_props": {"extends": null, "implements": ["Initializable"], "modifiers": ["public"]}}, {"id": 62606, "method_name": "getUserName", "class_name": "OpeningWindowController", "params": [], "throws": null, "modifiers": ["protected"], "return_type": "String", "snippet": "    protected String getUserName() {\n        return usernameTextField.getText();\n    }", "url": "https://raw.githubusercontent.com/AlirezaAZ/SimpleChatroom/master/src/Client/UserInterface/OpeningWindowController.java", "stars": "2", "class_props": {"extends": null, "implements": ["Initializable"], "modifiers": ["public"]}}, {"id": 62607, "method_name": "setConnected", "class_name": "OpeningWindowController", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setConnected() {\n        ImageView loginIcon = new ImageView();\n        loginIcon.setImage(new Image(new File(\n                Utils.rebuildPath(\"src\\\\Resources\\\\Icons\\\\login.png\")\n        ).toURI().toString()));\n        loginButton.setGraphic(loginIcon);\n        loginButton.setText(\"Connected\");\n    }", "url": "https://raw.githubusercontent.com/AlirezaAZ/SimpleChatroom/master/src/Client/UserInterface/OpeningWindowController.java", "stars": "2", "class_props": {"extends": null, "implements": ["Initializable"], "modifiers": ["public"]}}, {"id": 62608, "method_name": "setIsConnecting", "class_name": "OpeningWindowController", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void setIsConnecting() {\n        loginButton.setText(\"Connecting ...\");\n    }", "url": "https://raw.githubusercontent.com/AlirezaAZ/SimpleChatroom/master/src/Client/UserInterface/OpeningWindowController.java", "stars": "2", "class_props": {"extends": null, "implements": ["Initializable"], "modifiers": ["public"]}}, {"id": 62609, "method_name": "resetLoginButton", "class_name": "OpeningWindowController", "params": [], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void resetLoginButton() {\n        ImageView loginIcon = new ImageView();\n        loginIcon.setImage(new Image(new File(\n                Utils.rebuildPath(\"src\\\\Resources\\\\Icons\\\\login.png\")\n        ).toURI().toString()));\n        loginButton.setGraphic(loginIcon);\n        loginButton.setText(\"\");\n    }", "url": "https://raw.githubusercontent.com/AlirezaAZ/SimpleChatroom/master/src/Client/UserInterface/OpeningWindowController.java", "stars": "2", "class_props": {"extends": null, "implements": ["Initializable"], "modifiers": ["public"]}}, {"id": 62610, "method_name": "setIsOffline", "class_name": "OpeningWindowController", "params": [], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void setIsOffline() {\n        ImageView offline = new ImageView();\n        offline.setImage(new Image(new File(\n                Utils.rebuildPath(\"src\\\\Resources\\\\Icons\\\\try.png\")\n        ).toURI().toString()));\n        loginButton.setGraphic(offline);\n        loginButton.setText(\"\");\n    }", "url": "https://raw.githubusercontent.com/AlirezaAZ/SimpleChatroom/master/src/Client/UserInterface/OpeningWindowController.java", "stars": "2", "class_props": {"extends": null, "implements": ["Initializable"], "modifiers": ["public"]}}, {"id": 62611, "method_name": "callLogin", "class_name": "OpeningWindowController", "params": ["KeyEvent"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void callLogin(KeyEvent keyEvent) {\n        if (keyEvent.getCode().equals(KeyCode.ENTER))\n            login(new ActionEvent(basePane, keyEvent.getTarget()));\n    }", "url": "https://raw.githubusercontent.com/AlirezaAZ/SimpleChatroom/master/src/Client/UserInterface/OpeningWindowController.java", "stars": "2", "class_props": {"extends": null, "implements": ["Initializable"], "modifiers": ["public"]}}, {"id": 62612, "method_name": "onTouchEvent", "class_name": "Platform_DefaultRenderer", "params": ["android"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "\tpublic boolean onTouchEvent (android.view.MotionEvent p0)\n\t{\n\t\treturn n_onTouchEvent (p0);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc643f46942d9dd1fff9/Platform_DefaultRenderer.java", "stars": "2", "class_props": {"extends": "crc643f46942d9dd1fff9", "implements": ["mono"], "modifiers": ["public"]}}, {"id": 62613, "method_name": "n_onTouchEvent", "class_name": "Platform_DefaultRenderer", "params": ["android"], "throws": null, "modifiers": ["private", "native"], "return_type": "boolean", "snippet": "\tprivate native boolean n_onTouchEvent (android.view.MotionEvent p0);\n\n\n\tpublic boolean dispatchTouchEvent (android.view.MotionEvent p0)\n\t{\n\t\treturn n_dispatchTouchEvent (p0);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc643f46942d9dd1fff9/Platform_DefaultRenderer.java", "stars": "2", "class_props": {"extends": "crc643f46942d9dd1fff9", "implements": ["mono"], "modifiers": ["public"]}}, {"id": 62614, "method_name": "dispatchTouchEvent", "class_name": "Platform_DefaultRenderer", "params": ["android"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "\tpublic boolean dispatchTouchEvent (android.view.MotionEvent p0)\n\t{\n\t\treturn n_dispatchTouchEvent (p0);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc643f46942d9dd1fff9/Platform_DefaultRenderer.java", "stars": "2", "class_props": {"extends": "crc643f46942d9dd1fff9", "implements": ["mono"], "modifiers": ["public"]}}, {"id": 62615, "method_name": "n_dispatchTouchEvent", "class_name": "Platform_DefaultRenderer", "params": ["android"], "throws": null, "modifiers": ["private", "native"], "return_type": "boolean", "snippet": "\tprivate native boolean n_dispatchTouchEvent (android.view.MotionEvent p0);\n\n\n\tpublic void setOnTouchListener (android.view.View.OnTouchListener p0)\n\t{\n\t\tn_setOnTouchListener (p0);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc643f46942d9dd1fff9/Platform_DefaultRenderer.java", "stars": "2", "class_props": {"extends": "crc643f46942d9dd1fff9", "implements": ["mono"], "modifiers": ["public"]}}, {"id": 62616, "method_name": "setOnTouchListener", "class_name": "Platform_DefaultRenderer", "params": ["android"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void setOnTouchListener (android.view.View.OnTouchListener p0)\n\t{\n\t\tn_setOnTouchListener (p0);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc643f46942d9dd1fff9/Platform_DefaultRenderer.java", "stars": "2", "class_props": {"extends": "crc643f46942d9dd1fff9", "implements": ["mono"], "modifiers": ["public"]}}, {"id": 62617, "method_name": "n_setOnTouchListener", "class_name": "Platform_DefaultRenderer", "params": ["android"], "throws": null, "modifiers": ["private", "native"], "return_type": "void", "snippet": "\tprivate native void n_setOnTouchListener (android.view.View.OnTouchListener p0);\n\n\tprivate java.util.ArrayList refList;\n\tpublic void monodroidAddReference (java.lang.Object obj)\n\t{\n\t\tif (refList == null)\n\t\t\trefList = new java.util.ArrayList ();\n\t\trefList.add (obj);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc643f46942d9dd1fff9/Platform_DefaultRenderer.java", "stars": "2", "class_props": {"extends": "crc643f46942d9dd1fff9", "implements": ["mono"], "modifiers": ["public"]}}, {"id": 62618, "method_name": "monodroidAddReference", "class_name": "Platform_DefaultRenderer", "params": ["java"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void monodroidAddReference (java.lang.Object obj)\n\t{\n\t\tif (refList == null)\n\t\t\trefList = new java.util.ArrayList ();\n\t\trefList.add (obj);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc643f46942d9dd1fff9/Platform_DefaultRenderer.java", "stars": "2", "class_props": {"extends": "crc643f46942d9dd1fff9", "implements": ["mono"], "modifiers": ["public"]}}, {"id": 62619, "method_name": "monodroidClearReferences", "class_name": "Platform_DefaultRenderer", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void monodroidClearReferences ()\n\t{\n\t\tif (refList != null)\n\t\t\trefList.clear ();\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc643f46942d9dd1fff9/Platform_DefaultRenderer.java", "stars": "2", "class_props": {"extends": "crc643f46942d9dd1fff9", "implements": ["mono"], "modifiers": ["public"]}}, {"id": 62620, "method_name": "getUserId", "class_name": "WtssUser", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "  public String getUserId() {\n    return userId;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/com/webank/wedatasphere/schedulis/common/system/entity/WtssUser.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 62621, "method_name": "setUserId", "class_name": "WtssUser", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void setUserId(String userId) {\n    this.userId = userId;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/com/webank/wedatasphere/schedulis/common/system/entity/WtssUser.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 62622, "method_name": "getUsername", "class_name": "WtssUser", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "  public String getUsername() {\n    return username;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/com/webank/wedatasphere/schedulis/common/system/entity/WtssUser.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 62623, "method_name": "setUsername", "class_name": "WtssUser", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void setUsername(String username) {\n    this.username = username;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/com/webank/wedatasphere/schedulis/common/system/entity/WtssUser.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 62624, "method_name": "getPassword", "class_name": "WtssUser", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "  public String getPassword() {\n    return password;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/com/webank/wedatasphere/schedulis/common/system/entity/WtssUser.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 62625, "method_name": "setPassword", "class_name": "WtssUser", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void setPassword(String password) {\n    this.password = password;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/com/webank/wedatasphere/schedulis/common/system/entity/WtssUser.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 62626, "method_name": "getFullName", "class_name": "WtssUser", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "  public String getFullName() {\n    return fullName;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/com/webank/wedatasphere/schedulis/common/system/entity/WtssUser.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 62627, "method_name": "setFullName", "class_name": "WtssUser", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void setFullName(String fullName) {\n    this.fullName = fullName;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/com/webank/wedatasphere/schedulis/common/system/entity/WtssUser.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 62628, "method_name": "getDepartmentName", "class_name": "WtssUser", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "  public String getDepartmentName() {\n    return departmentName;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/com/webank/wedatasphere/schedulis/common/system/entity/WtssUser.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 62629, "method_name": "setDepartmentName", "class_name": "WtssUser", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void setDepartmentName(String departmentName) {\n    this.departmentName = departmentName;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/com/webank/wedatasphere/schedulis/common/system/entity/WtssUser.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 62630, "method_name": "getEmail", "class_name": "WtssUser", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "  public String getEmail() {\n    return email;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/com/webank/wedatasphere/schedulis/common/system/entity/WtssUser.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 62631, "method_name": "setEmail", "class_name": "WtssUser", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void setEmail(String email) {\n    this.email = email;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/com/webank/wedatasphere/schedulis/common/system/entity/WtssUser.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 62632, "method_name": "getProxyUsers", "class_name": "WtssUser", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "  public String getProxyUsers() {\n    return proxyUsers;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/com/webank/wedatasphere/schedulis/common/system/entity/WtssUser.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 62633, "method_name": "setProxyUsers", "class_name": "WtssUser", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void setProxyUsers(String proxyUsers) {\n    this.proxyUsers = proxyUsers;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/com/webank/wedatasphere/schedulis/common/system/entity/WtssUser.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 62634, "method_name": "getRoleId", "class_name": "WtssUser", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "  public int getRoleId() {\n    return roleId;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/com/webank/wedatasphere/schedulis/common/system/entity/WtssUser.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 62635, "method_name": "setRoleId", "class_name": "WtssUser", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void setRoleId(int roleId) {\n    this.roleId = roleId;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/com/webank/wedatasphere/schedulis/common/system/entity/WtssUser.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 62636, "method_name": "getUserType", "class_name": "WtssUser", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "  public int getUserType() {\n    return userType;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/com/webank/wedatasphere/schedulis/common/system/entity/WtssUser.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 62637, "method_name": "setUserType", "class_name": "WtssUser", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void setUserType(int userType) {\n    this.userType = userType;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/com/webank/wedatasphere/schedulis/common/system/entity/WtssUser.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 62638, "method_name": "getCreateTime", "class_name": "WtssUser", "params": [], "throws": null, "modifiers": ["public"], "return_type": "long", "snippet": "  public long getCreateTime() {\n    return createTime;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/com/webank/wedatasphere/schedulis/common/system/entity/WtssUser.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 62639, "method_name": "setCreateTime", "class_name": "WtssUser", "params": ["long"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void setCreateTime(long createTime) {\n    this.createTime = createTime;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/com/webank/wedatasphere/schedulis/common/system/entity/WtssUser.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 62640, "method_name": "getUpdateTime", "class_name": "WtssUser", "params": [], "throws": null, "modifiers": ["public"], "return_type": "long", "snippet": "  public long getUpdateTime() {\n    return updateTime;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/com/webank/wedatasphere/schedulis/common/system/entity/WtssUser.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 62641, "method_name": "setUpdateTime", "class_name": "WtssUser", "params": ["long"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void setUpdateTime(long updateTime) {\n    this.updateTime = updateTime;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/com/webank/wedatasphere/schedulis/common/system/entity/WtssUser.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 62642, "method_name": "getDepartmentId", "class_name": "WtssUser", "params": [], "throws": null, "modifiers": ["public"], "return_type": "long", "snippet": "  public long getDepartmentId() {\n    return departmentId;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/com/webank/wedatasphere/schedulis/common/system/entity/WtssUser.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 62643, "method_name": "setDepartmentId", "class_name": "WtssUser", "params": ["long"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void setDepartmentId(long departmentId) {\n    this.departmentId = departmentId;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/com/webank/wedatasphere/schedulis/common/system/entity/WtssUser.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 62644, "method_name": "getModifyInfo", "class_name": "WtssUser", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "  public String getModifyInfo() {\n    return modifyInfo;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/com/webank/wedatasphere/schedulis/common/system/entity/WtssUser.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 62645, "method_name": "setModifyInfo", "class_name": "WtssUser", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void setModifyInfo(String modifyInfo) {\n    this.modifyInfo = modifyInfo;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/com/webank/wedatasphere/schedulis/common/system/entity/WtssUser.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 62646, "method_name": "getModifyType", "class_name": "WtssUser", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "  public String getModifyType() {\n    return modifyType;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/com/webank/wedatasphere/schedulis/common/system/entity/WtssUser.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 62647, "method_name": "setModifyType", "class_name": "WtssUser", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void setModifyType(String modifyType) {\n    this.modifyType = modifyType;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/com/webank/wedatasphere/schedulis/common/system/entity/WtssUser.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 62648, "method_name": "getUserCategory", "class_name": "WtssUser", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "  public String getUserCategory() {\n    return userCategory;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/com/webank/wedatasphere/schedulis/common/system/entity/WtssUser.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 62649, "method_name": "setUserCategory", "class_name": "WtssUser", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void setUserCategory(String userCategory) {\n    this.userCategory = userCategory;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/com/webank/wedatasphere/schedulis/common/system/entity/WtssUser.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 62650, "method_name": "toString", "class_name": "WtssUser", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "  public String toString() {\n    return \"WtssUser{\" +\n        \"userId='\" + userId + '\\'' +\n        \", username='\" + username + '\\'' +\n        \", fullName='\" + fullName + '\\'' +\n        \", departmentI='\" + departmentId + '\\'' +\n        \", departmentName='\" + departmentName + '\\'' +\n        \", email='\" + email + '\\'' +\n        \", proxyUsers='\" + proxyUsers + '\\'' +\n        \", roleId=\" + roleId +\n        \", userType=\" + userType +\n        \", createTime=\" + createTime +\n        \", updateTime=\" + updateTime +\n        \", modifyType=\" + modifyType +\n        \", modifyInfo=\" + modifyInfo +\n        \", userCategory=\" + userCategory +\n        '}';\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/com/webank/wedatasphere/schedulis/common/system/entity/WtssUser.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 62651, "method_name": "getPageSql", "class_name": "SQLServerDialect", "params": ["String", "RequestContext", "long", "long"], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getPageSql(String sql, RequestContext context, long offset, long limit) {\n        context.addParameter(offset);\n        context.addParameter(limit);\n        return sql + \" OFFSET ? ROWS FETCH NEXT ? ROWS ONLY\";\n    }", "url": "https://raw.githubusercontent.com/javamxd/ssssssss/master/src/main/java/org/ssssssss/dialect/SQLServerDialect.java", "stars": "13", "class_props": {"extends": null, "implements": ["Dialect"], "modifiers": ["public"]}}, {"id": 62652, "method_name": "weightedAverage", "class_name": "MathHelper", "params": ["float", "float", "float", "float"], "throws": null, "modifiers": ["public", "static"], "return_type": "float", "snippet": "    public static float weightedAverage(float a, float aw, float b, float bw) {\n        return (a * aw + b * bw) / (aw + bw);\n    }", "url": "https://raw.githubusercontent.com/Prunoideae/PhasePotion/master/src/main/java/com/naive/phase/Auxiliary/Helper/MathHelper.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 62653, "method_name": "randInt", "class_name": "MathHelper", "params": [], "throws": null, "modifiers": ["public", "static"], "return_type": "int", "snippet": "    public static int randInt() {\n        return rnd.nextInt();\n    }", "url": "https://raw.githubusercontent.com/Prunoideae/PhasePotion/master/src/main/java/com/naive/phase/Auxiliary/Helper/MathHelper.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 62654, "method_name": "randInt", "class_name": "MathHelper", "params": ["int"], "throws": null, "modifiers": ["public", "static"], "return_type": "int", "snippet": "    public static int randInt(int upper) {\n        return rnd.nextInt(upper);\n    }", "url": "https://raw.githubusercontent.com/Prunoideae/PhasePotion/master/src/main/java/com/naive/phase/Auxiliary/Helper/MathHelper.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 62655, "method_name": "randFloat", "class_name": "MathHelper", "params": [], "throws": null, "modifiers": ["public", "static"], "return_type": "float", "snippet": "    public static float randFloat() {\n        return rnd.nextFloat();\n    }", "url": "https://raw.githubusercontent.com/Prunoideae/PhasePotion/master/src/main/java/com/naive/phase/Auxiliary/Helper/MathHelper.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 62656, "method_name": "randRangedFloat", "class_name": "MathHelper", "params": ["float", "float"], "throws": null, "modifiers": ["public", "static"], "return_type": "float", "snippet": "    public static float randRangedFloat(float lower, float upper) {\n        return rnd.nextFloat() * (upper - lower) + lower;\n    }", "url": "https://raw.githubusercontent.com/Prunoideae/PhasePotion/master/src/main/java/com/naive/phase/Auxiliary/Helper/MathHelper.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 62657, "method_name": "randRange", "class_name": "MathHelper", "params": ["float", "float"], "throws": null, "modifiers": ["public", "static"], "return_type": "Range", "snippet": "    public static Range randRange(float lower, float upper) {\n        float first = randRangedFloat(lower, upper);\n        float second = randRangedFloat(lower, upper);\n        return new Range(Math.min(first, second), Math.max(first, second));\n    }", "url": "https://raw.githubusercontent.com/Prunoideae/PhasePotion/master/src/main/java/com/naive/phase/Auxiliary/Helper/MathHelper.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 62658, "method_name": "randRange", "class_name": "MathHelper", "params": [], "throws": null, "modifiers": ["public", "static"], "return_type": "Range", "snippet": "    public static Range randRange() {\n        float first = randFloat();\n        float second = randFloat();\n        return new Range(Math.min(first, second), Math.max(first, second));\n    }", "url": "https://raw.githubusercontent.com/Prunoideae/PhasePotion/master/src/main/java/com/naive/phase/Auxiliary/Helper/MathHelper.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 62659, "method_name": "floor", "class_name": "MathHelper", "params": ["int", "int"], "throws": null, "modifiers": ["public", "static"], "return_type": "int", "snippet": "    public static int floor(int in, int mod) {\n        return in - in % mod;\n    }", "url": "https://raw.githubusercontent.com/Prunoideae/PhasePotion/master/src/main/java/com/naive/phase/Auxiliary/Helper/MathHelper.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 62660, "method_name": "distanceSq", "class_name": "MathHelper", "params": ["int", "int", "int", "int"], "throws": null, "modifiers": ["public", "static"], "return_type": "float", "snippet": "    public static float distanceSq(int x1, int y1, int x2, int y2) {\n        return (float) (Math.pow(y1 - y2, 2) + Math.pow(x1 - x2, 2));\n    }", "url": "https://raw.githubusercontent.com/Prunoideae/PhasePotion/master/src/main/java/com/naive/phase/Auxiliary/Helper/MathHelper.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 62661, "method_name": "distanceB2B", "class_name": "MathHelper", "params": ["BlockPos", "BlockPos"], "throws": null, "modifiers": ["public", "static"], "return_type": "double", "snippet": "    public static double distanceB2B(BlockPos pos1, BlockPos pos2) {\n        return pos1.getDistance(pos2.getX(), pos2.getY(), pos2.getZ());\n    }", "url": "https://raw.githubusercontent.com/Prunoideae/PhasePotion/master/src/main/java/com/naive/phase/Auxiliary/Helper/MathHelper.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 62662, "method_name": "withChance", "class_name": "MathHelper", "params": ["float"], "throws": null, "modifiers": ["public", "static"], "return_type": "boolean", "snippet": "    public static boolean withChance(float chance) {\n        return rnd.nextFloat() < chance;\n    }", "url": "https://raw.githubusercontent.com/Prunoideae/PhasePotion/master/src/main/java/com/naive/phase/Auxiliary/Helper/MathHelper.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 62663, "method_name": "denormalize", "class_name": "MathHelper", "params": ["float", "float", "float"], "throws": null, "modifiers": ["public", "static"], "return_type": "float", "snippet": "    public static float denormalize(float in, float upper, float lower) {\n        return (upper - lower) * in + lower;\n    }", "url": "https://raw.githubusercontent.com/Prunoideae/PhasePotion/master/src/main/java/com/naive/phase/Auxiliary/Helper/MathHelper.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 62664, "method_name": "getPage", "class_name": "PageConfig", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getPage() {\n        return page;\n    }", "url": "https://raw.githubusercontent.com/javamxd/ssssssss-spring-boot-starter/master/src/main/java/org/ssssssss/spring/boot/starter/PageConfig.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 62665, "method_name": "setPage", "class_name": "PageConfig", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setPage(String page) {\n        this.page = page;\n    }", "url": "https://raw.githubusercontent.com/javamxd/ssssssss-spring-boot-starter/master/src/main/java/org/ssssssss/spring/boot/starter/PageConfig.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 62666, "method_name": "getSize", "class_name": "PageConfig", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getSize() {\n        return size;\n    }", "url": "https://raw.githubusercontent.com/javamxd/ssssssss-spring-boot-starter/master/src/main/java/org/ssssssss/spring/boot/starter/PageConfig.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 62667, "method_name": "setSize", "class_name": "PageConfig", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setSize(String size) {\n        this.size = size;\n    }", "url": "https://raw.githubusercontent.com/javamxd/ssssssss-spring-boot-starter/master/src/main/java/org/ssssssss/spring/boot/starter/PageConfig.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 62668, "method_name": "getDefaultPage", "class_name": "PageConfig", "params": [], "throws": null, "modifiers": ["public"], "return_type": "long", "snippet": "    public long getDefaultPage() {\n        return defaultPage;\n    }", "url": "https://raw.githubusercontent.com/javamxd/ssssssss-spring-boot-starter/master/src/main/java/org/ssssssss/spring/boot/starter/PageConfig.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 62669, "method_name": "setDefaultPage", "class_name": "PageConfig", "params": ["long"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setDefaultPage(long defaultPage) {\n        this.defaultPage = defaultPage;\n    }", "url": "https://raw.githubusercontent.com/javamxd/ssssssss-spring-boot-starter/master/src/main/java/org/ssssssss/spring/boot/starter/PageConfig.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 62670, "method_name": "getDefaultSize", "class_name": "PageConfig", "params": [], "throws": null, "modifiers": ["public"], "return_type": "long", "snippet": "    public long getDefaultSize() {\n        return defaultSize;\n    }", "url": "https://raw.githubusercontent.com/javamxd/ssssssss-spring-boot-starter/master/src/main/java/org/ssssssss/spring/boot/starter/PageConfig.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 62671, "method_name": "setDefaultSize", "class_name": "PageConfig", "params": ["long"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setDefaultSize(long defaultSize) {\n        this.defaultSize = defaultSize;\n    }", "url": "https://raw.githubusercontent.com/javamxd/ssssssss-spring-boot-starter/master/src/main/java/org/ssssssss/spring/boot/starter/PageConfig.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 62672, "method_name": "getUrl", "class_name": "GSYModel", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getUrl() {\n        return url;\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/com/shuyu/gsyvideoplayer/model/GSYModel.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 62673, "method_name": "setUrl", "class_name": "GSYModel", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setUrl(String url) {\n        this.url = url;\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/com/shuyu/gsyvideoplayer/model/GSYModel.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 62674, "method_name": "getMapHeadData", "class_name": "GSYModel", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Map<String,String>", "snippet": "    public Map<String, String> getMapHeadData() {\n        return mapHeadData;\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/com/shuyu/gsyvideoplayer/model/GSYModel.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 62675, "method_name": "setMapHeadData", "class_name": "GSYModel", "params": ["Map<String,String>"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setMapHeadData(Map<String, String> mapHeadData) {\n        this.mapHeadData = mapHeadData;\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/com/shuyu/gsyvideoplayer/model/GSYModel.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 62676, "method_name": "isLooping", "class_name": "GSYModel", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean isLooping() {\n        return looping;\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/com/shuyu/gsyvideoplayer/model/GSYModel.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 62677, "method_name": "setLooping", "class_name": "GSYModel", "params": ["boolean"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setLooping(boolean looping) {\n        this.looping = looping;\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/com/shuyu/gsyvideoplayer/model/GSYModel.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 62678, "method_name": "getSpeed", "class_name": "GSYModel", "params": [], "throws": null, "modifiers": ["public"], "return_type": "float", "snippet": "    public float getSpeed() {\n        return speed;\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/com/shuyu/gsyvideoplayer/model/GSYModel.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 62679, "method_name": "setSpeed", "class_name": "GSYModel", "params": ["float"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setSpeed(float speed) {\n        this.speed = speed;\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/com/shuyu/gsyvideoplayer/model/GSYModel.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 62680, "method_name": "isCache", "class_name": "GSYModel", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean isCache() {\n        return isCache;\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/com/shuyu/gsyvideoplayer/model/GSYModel.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 62681, "method_name": "setCache", "class_name": "GSYModel", "params": ["boolean"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setCache(boolean cache) {\n        isCache = cache;\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/com/shuyu/gsyvideoplayer/model/GSYModel.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 62682, "method_name": "getCachePath", "class_name": "GSYModel", "params": [], "throws": null, "modifiers": ["public"], "return_type": "File", "snippet": "    public File getCachePath() {\n        return mCachePath;\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/com/shuyu/gsyvideoplayer/model/GSYModel.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 62683, "method_name": "setCachePath", "class_name": "GSYModel", "params": ["File"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setCachePath(File cachePath) {\n        this.mCachePath = cachePath;\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/com/shuyu/gsyvideoplayer/model/GSYModel.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 62684, "method_name": "getOverrideExtension", "class_name": "GSYModel", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getOverrideExtension() {\n        return overrideExtension;\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/com/shuyu/gsyvideoplayer/model/GSYModel.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 62685, "method_name": "setOverrideExtension", "class_name": "GSYModel", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setOverrideExtension(String overrideExtension) {\n        this.overrideExtension = overrideExtension;\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/com/shuyu/gsyvideoplayer/model/GSYModel.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 62686, "method_name": "destroyItem", "class_name": "LooperPagerAdapter", "params": ["ViewGroup", "int", "Object"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void destroyItem(@NonNull ViewGroup container,int position,@NonNull Object object) {\n        container.removeView((View) object);\n    }", "url": "https://raw.githubusercontent.com/TrillGates/TaobaoUnion/master/app/src/main/java/com/sunofbeaches/taobaounion/ui/adapter/LooperPagerAdapter.java", "stars": "9", "class_props": {"extends": "PagerAdapter", "implements": null, "modifiers": ["public"]}}, {"id": 62687, "method_name": "getDataSize", "class_name": "LooperPagerAdapter", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getDataSize() {\n        return mData.size();\n    }", "url": "https://raw.githubusercontent.com/TrillGates/TaobaoUnion/master/app/src/main/java/com/sunofbeaches/taobaounion/ui/adapter/LooperPagerAdapter.java", "stars": "9", "class_props": {"extends": "PagerAdapter", "implements": null, "modifiers": ["public"]}}, {"id": 62688, "method_name": "instantiateItem", "class_name": "LooperPagerAdapter", "params": ["ViewGroup", "int"], "throws": null, "modifiers": ["public"], "return_type": "Object", "snippet": "    public Object instantiateItem(@NonNull ViewGroup container,int position) {\n        //\u5904\u7406\u4e00\u4e0b\u8d8a\u754c\u95ee\u9898\n        int realPosition = position % mData.size();\n        //size = 5 == > 0,1,2,3,4\n        // 0  --> 0\n        //1 -- > 1\n        //2 -- > 2\n        //3 -- > 3\n        //4 -- > 4\n        //5 -- > 0\n        //6 -- > 1\n        HomePagerContent.DataBean dataBean = mData.get(realPosition);\n        int measuredHeight = container.getMeasuredHeight();\n        int measuredWidth = container.getMeasuredWidth();\n        //        LogUtils.d(this,\"measuredHeight -- > \" + measuredHeight);\n        //        LogUtils.d(this,\"measuredWidth  -- > \" + measuredWidth);\n        int ivSize = (measuredWidth > measuredHeight ? measuredWidth : measuredHeight) / 2;\n        String coverUrl = UrlUtils.getCoverPath(dataBean.getPict_url(),ivSize);\n        ImageView iv = new ImageView(container.getContext());\n        ViewGroup.LayoutParams layoutParams = new ViewGroup.LayoutParams(ViewGroup.LayoutParams.MATCH_PARENT,ViewGroup.LayoutParams.MATCH_PARENT);\n        iv.setLayoutParams(layoutParams);\n        iv.setScaleType(ImageView.ScaleType.CENTER_CROP);\n        Glide.with(container.getContext()).load(coverUrl).into(iv);\n        iv.setOnClickListener(new View.OnClickListener() {\n            @Override\n            public void onClick(View v) {\n                if(mItemClickListener != null) {\n                    HomePagerContent.DataBean item = mData.get(realPosition);\n                    mItemClickListener.onLooperItemClick(item);\n                }\n            }\n        });\n        container.addView(iv);\n        return iv;\n    }", "url": "https://raw.githubusercontent.com/TrillGates/TaobaoUnion/master/app/src/main/java/com/sunofbeaches/taobaounion/ui/adapter/LooperPagerAdapter.java", "stars": "9", "class_props": {"extends": "PagerAdapter", "implements": null, "modifiers": ["public"]}}, {"id": 62689, "method_name": "getCount", "class_name": "LooperPagerAdapter", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getCount() {\n        return Integer.MAX_VALUE;\n    }", "url": "https://raw.githubusercontent.com/TrillGates/TaobaoUnion/master/app/src/main/java/com/sunofbeaches/taobaounion/ui/adapter/LooperPagerAdapter.java", "stars": "9", "class_props": {"extends": "PagerAdapter", "implements": null, "modifiers": ["public"]}}, {"id": 62690, "method_name": "isViewFromObject", "class_name": "LooperPagerAdapter", "params": ["View", "Object"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean isViewFromObject(@NonNull View view,@NonNull Object object) {\n        return view == object;\n    }", "url": "https://raw.githubusercontent.com/TrillGates/TaobaoUnion/master/app/src/main/java/com/sunofbeaches/taobaounion/ui/adapter/LooperPagerAdapter.java", "stars": "9", "class_props": {"extends": "PagerAdapter", "implements": null, "modifiers": ["public"]}}, {"id": 62691, "method_name": "setData", "class_name": "LooperPagerAdapter", "params": ["List<HomePagerContent>"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setData(List<HomePagerContent.DataBean> contents) {\n        mData.clear();\n        mData.addAll(contents);\n        notifyDataSetChanged();\n    }", "url": "https://raw.githubusercontent.com/TrillGates/TaobaoUnion/master/app/src/main/java/com/sunofbeaches/taobaounion/ui/adapter/LooperPagerAdapter.java", "stars": "9", "class_props": {"extends": "PagerAdapter", "implements": null, "modifiers": ["public"]}}, {"id": 62692, "method_name": "setOnLooperPageItemClickListener", "class_name": "LooperPagerAdapter", "params": ["OnLooperPageItemClickListener"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setOnLooperPageItemClickListener(OnLooperPageItemClickListener listener) {\n        this.mItemClickListener = listener;\n    }", "url": "https://raw.githubusercontent.com/TrillGates/TaobaoUnion/master/app/src/main/java/com/sunofbeaches/taobaounion/ui/adapter/LooperPagerAdapter.java", "stars": "9", "class_props": {"extends": "PagerAdapter", "implements": null, "modifiers": ["public"]}}, {"id": 62693, "method_name": "onOrientationChanged", "class_name": "Listener", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void onOrientationChanged (int p0)\n\t{\n\t\tn_onOrientationChanged (p0);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Debug/90/android/src/crc64a0e0a82d0db9a07d/Listener.java", "stars": "2", "class_props": {"extends": "android", "implements": ["mono"], "modifiers": ["public"]}}, {"id": 62694, "method_name": "n_onOrientationChanged", "class_name": "Listener", "params": ["int"], "throws": null, "modifiers": ["private", "native"], "return_type": "void", "snippet": "\tprivate native void n_onOrientationChanged (int p0);\n\n\tprivate java.util.ArrayList refList;\n\tpublic void monodroidAddReference (java.lang.Object obj)\n\t{\n\t\tif (refList == null)\n\t\t\trefList = new java.util.ArrayList ();\n\t\trefList.add (obj);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Debug/90/android/src/crc64a0e0a82d0db9a07d/Listener.java", "stars": "2", "class_props": {"extends": "android", "implements": ["mono"], "modifiers": ["public"]}}, {"id": 62695, "method_name": "monodroidAddReference", "class_name": "Listener", "params": ["java"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void monodroidAddReference (java.lang.Object obj)\n\t{\n\t\tif (refList == null)\n\t\t\trefList = new java.util.ArrayList ();\n\t\trefList.add (obj);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Debug/90/android/src/crc64a0e0a82d0db9a07d/Listener.java", "stars": "2", "class_props": {"extends": "android", "implements": ["mono"], "modifiers": ["public"]}}, {"id": 62696, "method_name": "monodroidClearReferences", "class_name": "Listener", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void monodroidClearReferences ()\n\t{\n\t\tif (refList != null)\n\t\t\trefList.clear ();\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Debug/90/android/src/crc64a0e0a82d0db9a07d/Listener.java", "stars": "2", "class_props": {"extends": "android", "implements": ["mono"], "modifiers": ["public"]}}, {"id": 62697, "method_name": "onJump", "class_name": "MixinEntityLivingBase", "params": ["CallbackInfo"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void onJump(CallbackInfo callbackInfo) {\n        JumpEvent event = new JumpEvent(getLocation());\n        Mercury.INSTANCE.getEventManager().fireEvent(event);\n        if (event.isCancelled()) {\n            callbackInfo.cancel();\n        }\n    }", "url": "https://raw.githubusercontent.com/Crystallinqq/Mercury-Client/master/src/main/java/fail/mercury/client/api/mixin/MixinEntityLivingBase.java", "stars": "12", "class_props": {"extends": null, "implements": ["Util"], "modifiers": ["public"]}}, {"id": 62698, "method_name": "jumpMotionX", "class_name": "MixinEntityLivingBase", "params": ["Entity"], "throws": null, "modifiers": ["private"], "return_type": "double", "snippet": "    private double jumpMotionX(Entity player) {\n        return location.getX();\n    }", "url": "https://raw.githubusercontent.com/Crystallinqq/Mercury-Client/master/src/main/java/fail/mercury/client/api/mixin/MixinEntityLivingBase.java", "stars": "12", "class_props": {"extends": null, "implements": ["Util"], "modifiers": ["public"]}}, {"id": 62699, "method_name": "jumpMotionY", "class_name": "MixinEntityLivingBase", "params": ["Entity"], "throws": null, "modifiers": ["private"], "return_type": "double", "snippet": "    private double jumpMotionY(Entity player) {\n        return location.getY();\n    }", "url": "https://raw.githubusercontent.com/Crystallinqq/Mercury-Client/master/src/main/java/fail/mercury/client/api/mixin/MixinEntityLivingBase.java", "stars": "12", "class_props": {"extends": null, "implements": ["Util"], "modifiers": ["public"]}}, {"id": 62700, "method_name": "jumpMotionZ", "class_name": "MixinEntityLivingBase", "params": ["Entity"], "throws": null, "modifiers": ["private"], "return_type": "double", "snippet": "    private double jumpMotionZ(Entity player) {\n        return location.getZ();\n    }", "url": "https://raw.githubusercontent.com/Crystallinqq/Mercury-Client/master/src/main/java/fail/mercury/client/api/mixin/MixinEntityLivingBase.java", "stars": "12", "class_props": {"extends": null, "implements": ["Util"], "modifiers": ["public"]}}, {"id": 62701, "method_name": "getLocation", "class_name": "MixinEntityLivingBase", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Location", "snippet": "    public Location getLocation() {\n        if (location == null)\n            location = new Location(mc.player.motionX, mc.player.motionY, mc.player.motionZ);\n        location.setX(mc.player.motionX);\n        location.setY(mc.player.motionY);\n        location.setZ(mc.player.motionZ);\n        return location;\n    }", "url": "https://raw.githubusercontent.com/Crystallinqq/Mercury-Client/master/src/main/java/fail/mercury/client/api/mixin/MixinEntityLivingBase.java", "stars": "12", "class_props": {"extends": null, "implements": ["Util"], "modifiers": ["public"]}}, {"id": 62702, "method_name": "getQueueId", "class_name": "SavedFilter", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getQueueId() {\n        return queueId;\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/model/process/queue/config/SavedFilter.java", "stars": "12", "class_props": {"extends": "IdTitle", "implements": null, "modifiers": ["public"]}}, {"id": 62703, "method_name": "getUrl", "class_name": "SavedFilter", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getUrl() {\n        return url;\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/model/process/queue/config/SavedFilter.java", "stars": "12", "class_props": {"extends": "IdTitle", "implements": null, "modifiers": ["public"]}}, {"id": 62704, "method_name": "main", "class_name": "CourseFactoryTest", "params": ["String"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void main(String[] args) {\n        //\u76f8\u5f53\u4e8e\u5ba2\u6237\u7aef\uff0c\u6b64\u65f6\u65e0\u9700\u5173\u5fc3\u89c6\u9891\u3001\u7b14\u8bb0\u7b49\uff0c\u53ea\u9700\u8981\u5173\u5fc3\u4ece\u5bf9\u5e94\u5de5\u5382\u62ff\u5bf9\u5e94\u4ea7\u54c1\u5373\u53ef\n        //\u4ece\u540c\u4e00\u5de5\u5382\u62ff\u51fa\u6765\u7684\u4e1c\u897f\u5c5e\u4e8e\u540c\u4e00\u4ea7\u54c1\u65cf\n        JavaCourseFactory javaCourseFactory = new JavaCourseFactory();\n        Video javaVideo = javaCourseFactory.createVideo();\n        javaVideo.show();\n        Note javaNote = javaCourseFactory.createNote();\n        javaNote.show();\n    }", "url": "https://raw.githubusercontent.com/wangIQD/GoF23/master/GOF23/DesignPattern/src/com/wz/creational/abstractfactory/CourseFactoryTest.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 62705, "method_name": "produceUnstructuredWriter", "class_name": "TextCsvWriterManager", "params": ["String", "char", "Writer"], "throws": null, "modifiers": ["public", "static"], "return_type": "UnstructuredWriter", "snippet": "    public static UnstructuredWriter produceUnstructuredWriter(\n            String fileFormat, char fieldDelimiter, Writer writer) {\n        // warn: false means plain text(old way), true means strict csv format\n        if (Constant.FILE_FORMAT_TEXT.equals(fileFormat)) {\n            return new TextWriterImpl(writer, fieldDelimiter);\n        } else {\n            return new CsvWriterImpl(writer, fieldDelimiter);\n        }\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/engine/datax/datax-core/src/main/java/com/alibaba/datax/plugin/unstructuredstorage/writer/TextCsvWriterManager.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 62706, "method_name": "writeOneRecord", "class_name": "CsvWriterImpl", "params": ["List<String>"], "throws": ["IOException"], "modifiers": ["public"], "return_type": "void", "snippet": "    public void writeOneRecord(List<String> splitedRows) throws IOException {\n        if (splitedRows.isEmpty()) {\n            LOG.info(\"Found one record line which is empty.\");\n        }\n        this.csvWriter.writeRecord((String[]) splitedRows\n                .toArray(new String[0]));\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/engine/datax/datax-core/src/main/java/com/alibaba/datax/plugin/unstructuredstorage/writer/TextCsvWriterManager.java", "stars": "23", "class_props": {"extends": null, "implements": ["UnstructuredWriter"], "modifiers": []}}, {"id": 62707, "method_name": "flush", "class_name": "CsvWriterImpl", "params": [], "throws": ["IOException"], "modifiers": ["public"], "return_type": "void", "snippet": "    public void flush() throws IOException {\n        this.csvWriter.flush();\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/engine/datax/datax-core/src/main/java/com/alibaba/datax/plugin/unstructuredstorage/writer/TextCsvWriterManager.java", "stars": "23", "class_props": {"extends": null, "implements": ["UnstructuredWriter"], "modifiers": []}}, {"id": 62708, "method_name": "close", "class_name": "CsvWriterImpl", "params": [], "throws": ["IOException"], "modifiers": ["public"], "return_type": "void", "snippet": "    public void close() throws IOException {\n        this.csvWriter.close();\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/engine/datax/datax-core/src/main/java/com/alibaba/datax/plugin/unstructuredstorage/writer/TextCsvWriterManager.java", "stars": "23", "class_props": {"extends": null, "implements": ["UnstructuredWriter"], "modifiers": []}}, {"id": 62709, "method_name": "writeOneRecord", "class_name": "TextWriterImpl", "params": ["List<String>"], "throws": ["IOException"], "modifiers": ["public"], "return_type": "void", "snippet": "    public void writeOneRecord(List<String> splitedRows) throws IOException {\n        if (splitedRows.isEmpty()) {\n            LOG.info(\"Found one record line which is empty.\");\n        }\n        this.textWriter.write(String.format(\"%s%s\",\n                StringUtils.join(splitedRows, this.fieldDelimiter),\n                IOUtils.LINE_SEPARATOR));\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/engine/datax/datax-core/src/main/java/com/alibaba/datax/plugin/unstructuredstorage/writer/TextCsvWriterManager.java", "stars": "23", "class_props": {"extends": null, "implements": ["UnstructuredWriter"], "modifiers": []}}, {"id": 62710, "method_name": "flush", "class_name": "TextWriterImpl", "params": [], "throws": ["IOException"], "modifiers": ["public"], "return_type": "void", "snippet": "    public void flush() throws IOException {\n        this.textWriter.flush();\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/engine/datax/datax-core/src/main/java/com/alibaba/datax/plugin/unstructuredstorage/writer/TextCsvWriterManager.java", "stars": "23", "class_props": {"extends": null, "implements": ["UnstructuredWriter"], "modifiers": []}}, {"id": 62711, "method_name": "close", "class_name": "TextWriterImpl", "params": [], "throws": ["IOException"], "modifiers": ["public"], "return_type": "void", "snippet": "    public void close() throws IOException {\n        this.textWriter.close();\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/engine/datax/datax-core/src/main/java/com/alibaba/datax/plugin/unstructuredstorage/writer/TextCsvWriterManager.java", "stars": "23", "class_props": {"extends": null, "implements": ["UnstructuredWriter"], "modifiers": []}}, {"id": 62712, "method_name": "init", "class_name": "SampleCoverVideo", "params": ["Context"], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void init(Context context) {\n        super.init(context);\n        mCoverImage = (ImageView) findViewById(R.id.thumbImage);\n\n        if (mThumbImageViewLayout != null &&\n                (mCurrentState == -1 || mCurrentState == CURRENT_STATE_NORMAL || mCurrentState == CURRENT_STATE_ERROR)) {\n            mThumbImageViewLayout.setVisibility(VISIBLE);\n        }\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/app/src/main/java/com/example/gsyvideoplayer/video/SampleCoverVideo.java", "stars": "2", "class_props": {"extends": "StandardGSYVideoPlayer", "implements": null, "modifiers": ["public"]}}, {"id": 62713, "method_name": "getLayoutId", "class_name": "SampleCoverVideo", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getLayoutId() {\n        return R.layout.video_layout_cover;\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/app/src/main/java/com/example/gsyvideoplayer/video/SampleCoverVideo.java", "stars": "2", "class_props": {"extends": "StandardGSYVideoPlayer", "implements": null, "modifiers": ["public"]}}, {"id": 62714, "method_name": "loadCoverImage", "class_name": "SampleCoverVideo", "params": ["String", "int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void loadCoverImage(String url, int res) {\n        mCoverOriginUrl = url;\n        mDefaultRes = res;\n        Glide.with(getContext().getApplicationContext())\n                .setDefaultRequestOptions(\n                        new RequestOptions()\n                                .frame(1000000)\n                                .centerCrop()\n                                .error(res)\n                                .placeholder(res))\n                .load(url)\n                .into(mCoverImage);\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/app/src/main/java/com/example/gsyvideoplayer/video/SampleCoverVideo.java", "stars": "2", "class_props": {"extends": "StandardGSYVideoPlayer", "implements": null, "modifiers": ["public"]}}, {"id": 62715, "method_name": "startWindowFullscreen", "class_name": "SampleCoverVideo", "params": ["Context", "boolean", "boolean"], "throws": null, "modifiers": ["public"], "return_type": "GSYBaseVideoPlayer", "snippet": "    public GSYBaseVideoPlayer startWindowFullscreen(Context context, boolean actionBar, boolean statusBar) {\n        GSYBaseVideoPlayer gsyBaseVideoPlayer = super.startWindowFullscreen(context, actionBar, statusBar);\n        SampleCoverVideo sampleCoverVideo = (SampleCoverVideo) gsyBaseVideoPlayer;\n        sampleCoverVideo.loadCoverImage(mCoverOriginUrl, mDefaultRes);\n        return gsyBaseVideoPlayer;\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/app/src/main/java/com/example/gsyvideoplayer/video/SampleCoverVideo.java", "stars": "2", "class_props": {"extends": "StandardGSYVideoPlayer", "implements": null, "modifiers": ["public"]}}, {"id": 62716, "method_name": "showSmallVideo", "class_name": "SampleCoverVideo", "params": ["Point", "boolean", "boolean"], "throws": null, "modifiers": ["public"], "return_type": "GSYBaseVideoPlayer", "snippet": "    public GSYBaseVideoPlayer showSmallVideo(Point size, boolean actionBar, boolean statusBar) {\n        //\u4e0b\u9762\u8fd9\u91cc\u66ff\u6362\u6210\u4f60\u81ea\u5df1\u7684\u5f3a\u5236\u8f6c\u5316\n        SampleCoverVideo sampleCoverVideo = (SampleCoverVideo) super.showSmallVideo(size, actionBar, statusBar);\n        sampleCoverVideo.mStartButton.setVisibility(GONE);\n        sampleCoverVideo.mStartButton = null;\n        return sampleCoverVideo;\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/app/src/main/java/com/example/gsyvideoplayer/video/SampleCoverVideo.java", "stars": "2", "class_props": {"extends": "StandardGSYVideoPlayer", "implements": null, "modifiers": ["public"]}}, {"id": 62717, "method_name": "cloneParams", "class_name": "SampleCoverVideo", "params": ["GSYBaseVideoPlayer", "GSYBaseVideoPlayer"], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void cloneParams(GSYBaseVideoPlayer from, GSYBaseVideoPlayer to) {\n        super.cloneParams(from, to);\n        SampleCoverVideo sf = (SampleCoverVideo) from;\n        SampleCoverVideo st = (SampleCoverVideo) to;\n        st.mShowFullAnimation = sf.mShowFullAnimation;\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/app/src/main/java/com/example/gsyvideoplayer/video/SampleCoverVideo.java", "stars": "2", "class_props": {"extends": "StandardGSYVideoPlayer", "implements": null, "modifiers": ["public"]}}, {"id": 62718, "method_name": "clearFullscreenLayout", "class_name": "SampleCoverVideo", "params": [], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void clearFullscreenLayout() {\n        if (!mFullAnimEnd) {\n            return;\n        }\n        mIfCurrentIsFullscreen = false;\n        int delay = 0;\n        if (mOrientationUtils != null) {\n            delay = mOrientationUtils.backToProtVideo();\n            mOrientationUtils.setEnable(false);\n            if (mOrientationUtils != null) {\n                mOrientationUtils.releaseListener();\n                mOrientationUtils = null;\n            }\n        }\n\n        if (!mShowFullAnimation) {\n            delay = 0;\n        }\n\n        final ViewGroup vp = (CommonUtil.scanForActivity(getContext())).findViewById(Window.ID_ANDROID_CONTENT);\n        final View oldF = vp.findViewById(getFullId());\n        if (oldF != null) {\n            //\u6b64\u5904fix bug#265\uff0c\u63a8\u51fa\u5168\u5c4f\u7684\u65f6\u5019\uff0c\u865a\u62df\u6309\u952e\u95ee\u9898\n            SampleCoverVideo gsyVideoPlayer = (SampleCoverVideo) oldF;\n            gsyVideoPlayer.mIfCurrentIsFullscreen = false;\n        }\n\n        if (delay == 0) {\n            backToNormal();\n        } else {\n            postDelayed(new Runnable() {\n                @Override\n                public void run() {\n                    backToNormal();\n                }\n            }, delay);\n        }\n\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/app/src/main/java/com/example/gsyvideoplayer/video/SampleCoverVideo.java", "stars": "2", "class_props": {"extends": "StandardGSYVideoPlayer", "implements": null, "modifiers": ["public"]}}, {"id": 62719, "method_name": "onSurfaceUpdated", "class_name": "SampleCoverVideo", "params": ["Surface"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onSurfaceUpdated(Surface surface) {\n        super.onSurfaceUpdated(surface);\n        if (mThumbImageViewLayout != null && mThumbImageViewLayout.getVisibility() == VISIBLE) {\n            mThumbImageViewLayout.setVisibility(INVISIBLE);\n        }\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/app/src/main/java/com/example/gsyvideoplayer/video/SampleCoverVideo.java", "stars": "2", "class_props": {"extends": "StandardGSYVideoPlayer", "implements": null, "modifiers": ["public"]}}, {"id": 62720, "method_name": "setViewShowState", "class_name": "SampleCoverVideo", "params": ["View", "int"], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void setViewShowState(View view, int visibility) {\n        if (view == mThumbImageViewLayout && visibility != VISIBLE) {\n            return;\n        }\n        super.setViewShowState(view, visibility);\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/app/src/main/java/com/example/gsyvideoplayer/video/SampleCoverVideo.java", "stars": "2", "class_props": {"extends": "StandardGSYVideoPlayer", "implements": null, "modifiers": ["public"]}}, {"id": 62721, "method_name": "onSurfaceAvailable", "class_name": "SampleCoverVideo", "params": ["Surface"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onSurfaceAvailable(Surface surface) {\n        super.onSurfaceAvailable(surface);\n        if (GSYVideoType.getRenderType() != GSYVideoType.TEXTURE) {\n            if (mThumbImageViewLayout != null && mThumbImageViewLayout.getVisibility() == VISIBLE) {\n                mThumbImageViewLayout.setVisibility(INVISIBLE);\n            }\n        }\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/app/src/main/java/com/example/gsyvideoplayer/video/SampleCoverVideo.java", "stars": "2", "class_props": {"extends": "StandardGSYVideoPlayer", "implements": null, "modifiers": ["public"]}}, {"id": 62722, "method_name": "onClickUiToggle", "class_name": "SampleCoverVideo", "params": [], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void onClickUiToggle() {\n        if (mIfCurrentIsFullscreen && mLockCurScreen && mNeedLockFull) {\n            setViewShowState(mLockScreen, VISIBLE);\n            return;\n        }\n        byStartedClick = true;\n        super.onClickUiToggle();\n\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/app/src/main/java/com/example/gsyvideoplayer/video/SampleCoverVideo.java", "stars": "2", "class_props": {"extends": "StandardGSYVideoPlayer", "implements": null, "modifiers": ["public"]}}, {"id": 62723, "method_name": "changeUiToNormal", "class_name": "SampleCoverVideo", "params": [], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void changeUiToNormal() {\n        super.changeUiToNormal();\n        byStartedClick = false;\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/app/src/main/java/com/example/gsyvideoplayer/video/SampleCoverVideo.java", "stars": "2", "class_props": {"extends": "StandardGSYVideoPlayer", "implements": null, "modifiers": ["public"]}}, {"id": 62724, "method_name": "changeUiToPreparingShow", "class_name": "SampleCoverVideo", "params": [], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void changeUiToPreparingShow() {\n        super.changeUiToPreparingShow();\n        Debuger.printfLog(\"Sample changeUiToPreparingShow\");\n        setViewShowState(mBottomContainer, INVISIBLE);\n        setViewShowState(mStartButton, INVISIBLE);\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/app/src/main/java/com/example/gsyvideoplayer/video/SampleCoverVideo.java", "stars": "2", "class_props": {"extends": "StandardGSYVideoPlayer", "implements": null, "modifiers": ["public"]}}, {"id": 62725, "method_name": "changeUiToPlayingBufferingShow", "class_name": "SampleCoverVideo", "params": [], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void changeUiToPlayingBufferingShow() {\n        super.changeUiToPlayingBufferingShow();\n        Debuger.printfLog(\"Sample changeUiToPlayingBufferingShow\");\n        if (!byStartedClick) {\n            setViewShowState(mBottomContainer, INVISIBLE);\n            setViewShowState(mStartButton, INVISIBLE);\n        }\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/app/src/main/java/com/example/gsyvideoplayer/video/SampleCoverVideo.java", "stars": "2", "class_props": {"extends": "StandardGSYVideoPlayer", "implements": null, "modifiers": ["public"]}}, {"id": 62726, "method_name": "changeUiToPlayingShow", "class_name": "SampleCoverVideo", "params": [], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void changeUiToPlayingShow() {\n        super.changeUiToPlayingShow();\n        Debuger.printfLog(\"Sample changeUiToPlayingShow\");\n        if (!byStartedClick) {\n            setViewShowState(mBottomContainer, INVISIBLE);\n            setViewShowState(mStartButton, INVISIBLE);\n        }\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/app/src/main/java/com/example/gsyvideoplayer/video/SampleCoverVideo.java", "stars": "2", "class_props": {"extends": "StandardGSYVideoPlayer", "implements": null, "modifiers": ["public"]}}, {"id": 62727, "method_name": "startAfterPrepared", "class_name": "SampleCoverVideo", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void startAfterPrepared() {\n        super.startAfterPrepared();\n        Debuger.printfLog(\"Sample startAfterPrepared\");\n        setViewShowState(mBottomContainer, INVISIBLE);\n        setViewShowState(mStartButton, INVISIBLE);\n        setViewShowState(mBottomProgressBar, VISIBLE);\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/app/src/main/java/com/example/gsyvideoplayer/video/SampleCoverVideo.java", "stars": "2", "class_props": {"extends": "StandardGSYVideoPlayer", "implements": null, "modifiers": ["public"]}}, {"id": 62728, "method_name": "onStartTrackingTouch", "class_name": "SampleCoverVideo", "params": ["SeekBar"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onStartTrackingTouch(SeekBar seekBar) {\n        byStartedClick = true;\n        super.onStartTrackingTouch(seekBar);\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/app/src/main/java/com/example/gsyvideoplayer/video/SampleCoverVideo.java", "stars": "2", "class_props": {"extends": "StandardGSYVideoPlayer", "implements": null, "modifiers": ["public"]}}, {"id": 62729, "method_name": "createRegisterContext", "class_name": "AbstractARMEmulator", "params": ["Unicorn"], "throws": null, "modifiers": ["protected"], "return_type": "RegisterContext", "snippet": "    protected RegisterContext createRegisterContext(Unicorn unicorn) {\n        return new UnicornArm32RegisterContext(unicorn, this);\n    }", "url": "https://raw.githubusercontent.com/wmm1996528/unidbg_douyin10/master/src/main/java/com/github/unidbg/arm/AbstractARMEmulator.java", "stars": "16", "class_props": {"extends": "AbstractEmulator", "implements": ["ARMEmulator"], "modifiers": ["public", "abstract"]}}, {"id": 62730, "method_name": "getDlfcn", "class_name": "AbstractARMEmulator", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Dlfcn", "snippet": "    public Dlfcn getDlfcn() {\n        return dlfcn;\n    }", "url": "https://raw.githubusercontent.com/wmm1996528/unidbg_douyin10/master/src/main/java/com/github/unidbg/arm/AbstractARMEmulator.java", "stars": "16", "class_props": {"extends": "AbstractEmulator", "implements": ["ARMEmulator"], "modifiers": ["public", "abstract"]}}, {"id": 62731, "method_name": "setupTraps", "class_name": "AbstractARMEmulator", "params": [], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void setupTraps() {\n        try (Keystone keystone = new Keystone(KeystoneArchitecture.Arm, KeystoneMode.Arm)) {\n            unicorn.mem_map(LR, 0x10000, UnicornConst.UC_PROT_READ | UnicornConst.UC_PROT_EXEC);\n            KeystoneEncoded encoded = keystone.assemble(\"mov pc, #0\");\n            byte[] b0 = encoded.getMachineCode();\n            ByteBuffer buffer = ByteBuffer.allocate(0x10000);\n            // write \"mov pc, #0\" to all kernel trap addresses so they will throw exception\n            for (int i = 0; i < 0x10000; i += 4) {\n                buffer.put(b0);\n            }\n            unicorn.mem_write(LR, buffer.array());\n        }\n    }", "url": "https://raw.githubusercontent.com/wmm1996528/unidbg_douyin10/master/src/main/java/com/github/unidbg/arm/AbstractARMEmulator.java", "stars": "16", "class_props": {"extends": "AbstractEmulator", "implements": ["ARMEmulator"], "modifiers": ["public", "abstract"]}}, {"id": 62732, "method_name": "assemble", "class_name": "AbstractARMEmulator", "params": ["Iterable<String>"], "throws": null, "modifiers": ["final", "protected"], "return_type": "byte", "snippet": "    protected final byte[] assemble(Iterable<String> assembly) {\n        try (Keystone keystone = new Keystone(KeystoneArchitecture.Arm, KeystoneMode.Arm)) {\n            KeystoneEncoded encoded = keystone.assemble(assembly);\n            return encoded.getMachineCode();\n        }\n    }", "url": "https://raw.githubusercontent.com/wmm1996528/unidbg_douyin10/master/src/main/java/com/github/unidbg/arm/AbstractARMEmulator.java", "stars": "16", "class_props": {"extends": "AbstractEmulator", "implements": ["ARMEmulator"], "modifiers": ["public", "abstract"]}}, {"id": 62733, "method_name": "enableVFP", "class_name": "AbstractARMEmulator", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void enableVFP() {\n        int value = ((Number) unicorn.reg_read(ArmConst.UC_ARM_REG_C1_C0_2)).intValue();\n        value |= (0xf << 20);\n        unicorn.reg_write(ArmConst.UC_ARM_REG_C1_C0_2, value);\n        unicorn.reg_write(ArmConst.UC_ARM_REG_FPEXC, 0x40000000);\n    }", "url": "https://raw.githubusercontent.com/wmm1996528/unidbg_douyin10/master/src/main/java/com/github/unidbg/arm/AbstractARMEmulator.java", "stars": "16", "class_props": {"extends": "AbstractEmulator", "implements": ["ARMEmulator"], "modifiers": ["public", "abstract"]}}, {"id": 62734, "method_name": "createConsoleDebugger", "class_name": "AbstractARMEmulator", "params": [], "throws": null, "modifiers": ["protected"], "return_type": "Debugger", "snippet": "    protected Debugger createConsoleDebugger() {\n        return new SimpleARMDebugger(this);\n    }", "url": "https://raw.githubusercontent.com/wmm1996528/unidbg_douyin10/master/src/main/java/com/github/unidbg/arm/AbstractARMEmulator.java", "stars": "16", "class_props": {"extends": "AbstractEmulator", "implements": ["ARMEmulator"], "modifiers": ["public", "abstract"]}}, {"id": 62735, "method_name": "closeInternal", "class_name": "AbstractARMEmulator", "params": [], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void closeInternal() {\n        for (FileIO io : syscallHandler.fdMap.values()) {\n            io.close();\n        }\n\n        capstoneThumb.close();\n        capstoneArm.close();\n    }", "url": "https://raw.githubusercontent.com/wmm1996528/unidbg_douyin10/master/src/main/java/com/github/unidbg/arm/AbstractARMEmulator.java", "stars": "16", "class_props": {"extends": "AbstractEmulator", "implements": ["ARMEmulator"], "modifiers": ["public", "abstract"]}}, {"id": 62736, "method_name": "loadLibrary", "class_name": "AbstractARMEmulator", "params": ["File"], "throws": ["IOException"], "modifiers": ["public"], "return_type": "Module", "snippet": "    public Module loadLibrary(File libraryFile) throws IOException {\n        return memory.load(libraryFile);\n    }", "url": "https://raw.githubusercontent.com/wmm1996528/unidbg_douyin10/master/src/main/java/com/github/unidbg/arm/AbstractARMEmulator.java", "stars": "16", "class_props": {"extends": "AbstractEmulator", "implements": ["ARMEmulator"], "modifiers": ["public", "abstract"]}}, {"id": 62737, "method_name": "loadLibrary", "class_name": "AbstractARMEmulator", "params": ["File", "boolean"], "throws": ["IOException"], "modifiers": ["public"], "return_type": "Module", "snippet": "    public Module loadLibrary(File libraryFile, boolean forceCallInit) throws IOException {\n        return memory.load(libraryFile, forceCallInit);\n    }", "url": "https://raw.githubusercontent.com/wmm1996528/unidbg_douyin10/master/src/main/java/com/github/unidbg/arm/AbstractARMEmulator.java", "stars": "16", "class_props": {"extends": "AbstractEmulator", "implements": ["ARMEmulator"], "modifiers": ["public", "abstract"]}}, {"id": 62738, "method_name": "getMemory", "class_name": "AbstractARMEmulator", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Memory", "snippet": "    public Memory getMemory() {\n        return memory;\n    }", "url": "https://raw.githubusercontent.com/wmm1996528/unidbg_douyin10/master/src/main/java/com/github/unidbg/arm/AbstractARMEmulator.java", "stars": "16", "class_props": {"extends": "AbstractEmulator", "implements": ["ARMEmulator"], "modifiers": ["public", "abstract"]}}, {"id": 62739, "method_name": "getSyscallHandler", "class_name": "AbstractARMEmulator", "params": [], "throws": null, "modifiers": ["public"], "return_type": "SyscallHandler<T>", "snippet": "    public SyscallHandler<T> getSyscallHandler() {\n        return syscallHandler;\n    }", "url": "https://raw.githubusercontent.com/wmm1996528/unidbg_douyin10/master/src/main/java/com/github/unidbg/arm/AbstractARMEmulator.java", "stars": "16", "class_props": {"extends": "AbstractEmulator", "implements": ["ARMEmulator"], "modifiers": ["public", "abstract"]}}, {"id": 62740, "method_name": "showRegs", "class_name": "AbstractARMEmulator", "params": [], "throws": null, "modifiers": ["final", "public"], "return_type": "void", "snippet": "    public final void showRegs() {\n        this.showRegs((int[]) null);\n    }", "url": "https://raw.githubusercontent.com/wmm1996528/unidbg_douyin10/master/src/main/java/com/github/unidbg/arm/AbstractARMEmulator.java", "stars": "16", "class_props": {"extends": "AbstractEmulator", "implements": ["ARMEmulator"], "modifiers": ["public", "abstract"]}}, {"id": 62741, "method_name": "showRegs", "class_name": "AbstractARMEmulator", "params": ["int"], "throws": null, "modifiers": ["final", "public"], "return_type": "void", "snippet": "    public final void showRegs(int... regs) {\n        ARM.showRegs(this, regs);\n    }", "url": "https://raw.githubusercontent.com/wmm1996528/unidbg_douyin10/master/src/main/java/com/github/unidbg/arm/AbstractARMEmulator.java", "stars": "16", "class_props": {"extends": "AbstractEmulator", "implements": ["ARMEmulator"], "modifiers": ["public", "abstract"]}}, {"id": 62742, "method_name": "printAssemble", "class_name": "AbstractARMEmulator", "params": ["PrintStream", "long", "int"], "throws": null, "modifiers": ["public"], "return_type": "Capstone", "snippet": "    public Capstone.CsInsn[] printAssemble(PrintStream out, long address, int size) {\n        Capstone.CsInsn[] insns = disassemble(address, size, 0);\n        printAssemble(out, insns, address, ARM.isThumb(unicorn));\n        return insns;\n    }", "url": "https://raw.githubusercontent.com/wmm1996528/unidbg_douyin10/master/src/main/java/com/github/unidbg/arm/AbstractARMEmulator.java", "stars": "16", "class_props": {"extends": "AbstractEmulator", "implements": ["ARMEmulator"], "modifiers": ["public", "abstract"]}}, {"id": 62743, "method_name": "disassemble", "class_name": "AbstractARMEmulator", "params": ["long", "int", "long"], "throws": null, "modifiers": ["public"], "return_type": "Capstone", "snippet": "    public Capstone.CsInsn[] disassemble(long address, int size, long count) {\n        boolean thumb = ARM.isThumb(unicorn);\n        byte[] code = unicorn.mem_read(address, size);\n        return thumb ? capstoneThumb.disasm(code, address, count) : capstoneArm.disasm(code, address, count);\n    }", "url": "https://raw.githubusercontent.com/wmm1996528/unidbg_douyin10/master/src/main/java/com/github/unidbg/arm/AbstractARMEmulator.java", "stars": "16", "class_props": {"extends": "AbstractEmulator", "implements": ["ARMEmulator"], "modifiers": ["public", "abstract"]}}, {"id": 62744, "method_name": "disassemble", "class_name": "AbstractARMEmulator", "params": ["long", "byte", "boolean", "long"], "throws": null, "modifiers": ["public"], "return_type": "Capstone", "snippet": "    public Capstone.CsInsn[] disassemble(long address, byte[] code, boolean thumb, long count) {\n        return thumb ? capstoneThumb.disasm(code, address, count) : capstoneArm.disasm(code, address, count);\n    }", "url": "https://raw.githubusercontent.com/wmm1996528/unidbg_douyin10/master/src/main/java/com/github/unidbg/arm/AbstractARMEmulator.java", "stars": "16", "class_props": {"extends": "AbstractEmulator", "implements": ["ARMEmulator"], "modifiers": ["public", "abstract"]}}, {"id": 62745, "method_name": "printAssemble", "class_name": "AbstractARMEmulator", "params": ["PrintStream", "Capstone", "long", "boolean"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void printAssemble(PrintStream out, Capstone.CsInsn[] insns, long address, boolean thumb) {\n        StringBuilder sb = new StringBuilder();\n        for (Capstone.CsInsn ins : insns) {\n            sb.append(\"### Trace Instruction \");\n            sb.append(ARM.assembleDetail(this, ins, address, thumb));\n            sb.append('\\n');\n            address += ins.size;\n        }\n        out.print(sb.toString());\n    }", "url": "https://raw.githubusercontent.com/wmm1996528/unidbg_douyin10/master/src/main/java/com/github/unidbg/arm/AbstractARMEmulator.java", "stars": "16", "class_props": {"extends": "AbstractEmulator", "implements": ["ARMEmulator"], "modifiers": ["public", "abstract"]}}, {"id": 62746, "method_name": "eFunc", "class_name": "AbstractARMEmulator", "params": ["long", "Number"], "throws": null, "modifiers": ["public"], "return_type": "Number", "snippet": "    public Number[] eFunc(long begin, Number... arguments) {\n        long spBackup = memory.getStackPoint();\n        try {\n            unicorn.reg_write(ArmConst.UC_ARM_REG_LR, LR);\n            final Arguments args = ARM.initArgs(this, isPaddingArgument(), arguments);\n            return eFunc(begin, args, LR, true);\n        } finally {\n            memory.setStackPoint(spBackup);\n        }\n    }", "url": "https://raw.githubusercontent.com/wmm1996528/unidbg_douyin10/master/src/main/java/com/github/unidbg/arm/AbstractARMEmulator.java", "stars": "16", "class_props": {"extends": "AbstractEmulator", "implements": ["ARMEmulator"], "modifiers": ["public", "abstract"]}}, {"id": 62747, "method_name": "eInit", "class_name": "AbstractARMEmulator", "params": ["long", "Number"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void eInit(long begin, Number... arguments) {\n        long spBackup = memory.getStackPoint();\n        try {\n            unicorn.reg_write(ArmConst.UC_ARM_REG_LR, LR);\n            final Arguments args = ARM.initArgs(this, isPaddingArgument(), arguments);\n            eFunc(begin, args, LR, false);\n        } finally {\n            memory.setStackPoint(spBackup);\n        }\n    }", "url": "https://raw.githubusercontent.com/wmm1996528/unidbg_douyin10/master/src/main/java/com/github/unidbg/arm/AbstractARMEmulator.java", "stars": "16", "class_props": {"extends": "AbstractEmulator", "implements": ["ARMEmulator"], "modifiers": ["public", "abstract"]}}, {"id": 62748, "method_name": "eEntry", "class_name": "AbstractARMEmulator", "params": ["long", "long"], "throws": null, "modifiers": ["public"], "return_type": "Number", "snippet": "    public Number eEntry(long begin, long sp) {\n        long spBackup = memory.getStackPoint();\n        try {\n            memory.setStackPoint(sp);\n            unicorn.reg_write(ArmConst.UC_ARM_REG_LR, LR);\n            return emulate(begin, LR, timeout, true);\n        } finally {\n            memory.setStackPoint(spBackup);\n        }\n    }", "url": "https://raw.githubusercontent.com/wmm1996528/unidbg_douyin10/master/src/main/java/com/github/unidbg/arm/AbstractARMEmulator.java", "stars": "16", "class_props": {"extends": "AbstractEmulator", "implements": ["ARMEmulator"], "modifiers": ["public", "abstract"]}}, {"id": 62749, "method_name": "eBlock", "class_name": "AbstractARMEmulator", "params": ["long", "long"], "throws": null, "modifiers": ["public"], "return_type": "Unicorn", "snippet": "    public Unicorn eBlock(long begin, long until) {\n        long spBackup = memory.getStackPoint();\n        try {\n            unicorn.reg_write(ArmConst.UC_ARM_REG_LR, LR);\n            emulate(begin, until, traceInstruction ? 0 : timeout, true);\n            return unicorn;\n        } finally {\n            memory.setStackPoint(spBackup);\n        }\n    }", "url": "https://raw.githubusercontent.com/wmm1996528/unidbg_douyin10/master/src/main/java/com/github/unidbg/arm/AbstractARMEmulator.java", "stars": "16", "class_props": {"extends": "AbstractEmulator", "implements": ["ARMEmulator"], "modifiers": ["public", "abstract"]}}, {"id": 62750, "method_name": "getPointerSize", "class_name": "AbstractARMEmulator", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getPointerSize() {\n        return 4;\n    }", "url": "https://raw.githubusercontent.com/wmm1996528/unidbg_douyin10/master/src/main/java/com/github/unidbg/arm/AbstractARMEmulator.java", "stars": "16", "class_props": {"extends": "AbstractEmulator", "implements": ["ARMEmulator"], "modifiers": ["public", "abstract"]}}, {"id": 62751, "method_name": "getPageAlign", "class_name": "AbstractARMEmulator", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getPageAlign() {\n        return PAGE_ALIGN;\n    }", "url": "https://raw.githubusercontent.com/wmm1996528/unidbg_douyin10/master/src/main/java/com/github/unidbg/arm/AbstractARMEmulator.java", "stars": "16", "class_props": {"extends": "AbstractEmulator", "implements": ["ARMEmulator"], "modifiers": ["public", "abstract"]}}, {"id": 62752, "method_name": "getStackPointer", "class_name": "AbstractARMEmulator", "params": [], "throws": null, "modifiers": ["protected"], "return_type": "Pointer", "snippet": "    protected Pointer getStackPointer() {\n        return UnicornPointer.register(this, ArmConst.UC_ARM_REG_SP);\n    }", "url": "https://raw.githubusercontent.com/wmm1996528/unidbg_douyin10/master/src/main/java/com/github/unidbg/arm/AbstractARMEmulator.java", "stars": "16", "class_props": {"extends": "AbstractEmulator", "implements": ["ARMEmulator"], "modifiers": ["public", "abstract"]}}, {"id": 62753, "method_name": "onCreate", "class_name": "PullToRefreshListInViewPagerActivity", "params": ["Bundle"], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "\tprotected void onCreate(Bundle savedInstanceState) {\n\t\tsuper.onCreate(savedInstanceState);\n\t\tsetContentView(R.layout.activity_ptr_list_in_vp);\n\n\t\tmViewPager = (ViewPager) findViewById(R.id.vp_list);\n\t\tmViewPager.setAdapter(new ListViewPagerAdapter());\n\t}", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/pulltorefresh%20and%20dragndrop%20to%20gridview/LauncherActivity/src/com/handmark/pulltorefresh/samples/PullToRefreshListInViewPagerActivity.java", "stars": "74", "class_props": {"extends": "Activity", "implements": ["OnRefreshListener"], "modifiers": ["public"]}}, {"id": 62754, "method_name": "onRefresh", "class_name": "PullToRefreshListInViewPagerActivity", "params": ["PullToRefreshBase<ListView>"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void onRefresh(PullToRefreshBase<ListView> refreshView) {\n\t\tnew GetDataTask(refreshView).execute();\n\t}", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/pulltorefresh%20and%20dragndrop%20to%20gridview/LauncherActivity/src/com/handmark/pulltorefresh/samples/PullToRefreshListInViewPagerActivity.java", "stars": "74", "class_props": {"extends": "Activity", "implements": ["OnRefreshListener"], "modifiers": ["public"]}}, {"id": 62755, "method_name": "instantiateItem", "class_name": "ListViewPagerAdapter", "params": ["ViewGroup", "int"], "throws": null, "modifiers": ["public"], "return_type": "View", "snippet": "\t\tpublic View instantiateItem(ViewGroup container, int position) {\n\t\t\tContext context = container.getContext();\n\n\t\t\tPullToRefreshListView plv = (PullToRefreshListView) LayoutInflater.from(context).inflate(\n\t\t\t\t\tR.layout.layout_listview_in_viewpager, container, false);\n\n\t\t\tListAdapter adapter = new ArrayAdapter<String>(context, android.R.layout.simple_list_item_1,\n\t\t\t\t\tArrays.asList(STRINGS));\n\t\t\tplv.setAdapter(adapter);\n\n\t\t\tplv.setOnRefreshListener(PullToRefreshListInViewPagerActivity.this);\n\n\t\t\t// Now just add ListView to ViewPager and return it\n\t\t\tcontainer.addView(plv, LayoutParams.MATCH_PARENT, LayoutParams.MATCH_PARENT);\n\n\t\t\treturn plv;\n\t\t}", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/pulltorefresh%20and%20dragndrop%20to%20gridview/LauncherActivity/src/com/handmark/pulltorefresh/samples/PullToRefreshListInViewPagerActivity.java", "stars": "74", "class_props": {"extends": "PagerAdapter", "implements": null, "modifiers": ["private"]}}, {"id": 62756, "method_name": "destroyItem", "class_name": "ListViewPagerAdapter", "params": ["ViewGroup", "int", "Object"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\t\tpublic void destroyItem(ViewGroup container, int position, Object object) {\n\t\t\tcontainer.removeView((View) object);\n\t\t}", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/pulltorefresh%20and%20dragndrop%20to%20gridview/LauncherActivity/src/com/handmark/pulltorefresh/samples/PullToRefreshListInViewPagerActivity.java", "stars": "74", "class_props": {"extends": "PagerAdapter", "implements": null, "modifiers": ["private"]}}, {"id": 62757, "method_name": "isViewFromObject", "class_name": "ListViewPagerAdapter", "params": ["View", "Object"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "\t\tpublic boolean isViewFromObject(View view, Object object) {\n\t\t\treturn view == object;\n\t\t}", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/pulltorefresh%20and%20dragndrop%20to%20gridview/LauncherActivity/src/com/handmark/pulltorefresh/samples/PullToRefreshListInViewPagerActivity.java", "stars": "74", "class_props": {"extends": "PagerAdapter", "implements": null, "modifiers": ["private"]}}, {"id": 62758, "method_name": "getCount", "class_name": "ListViewPagerAdapter", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "\t\tpublic int getCount() {\n\t\t\treturn 3;\n\t\t}", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/pulltorefresh%20and%20dragndrop%20to%20gridview/LauncherActivity/src/com/handmark/pulltorefresh/samples/PullToRefreshListInViewPagerActivity.java", "stars": "74", "class_props": {"extends": "PagerAdapter", "implements": null, "modifiers": ["private"]}}, {"id": 62759, "method_name": "doInBackground", "class_name": "GetDataTask", "params": ["Void"], "throws": null, "modifiers": ["protected"], "return_type": "Void", "snippet": "\t\tprotected Void doInBackground(Void... params) {\n\t\t\t// Simulates a background job.\n\t\t\ttry {\n\t\t\t\tThread.sleep(4000);\n\t\t\t} catch (InterruptedException e) {\n\t\t\t}\n\t\t\treturn null;\n\t\t}", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/pulltorefresh%20and%20dragndrop%20to%20gridview/LauncherActivity/src/com/handmark/pulltorefresh/samples/PullToRefreshListInViewPagerActivity.java", "stars": "74", "class_props": {"extends": "AsyncTask", "implements": null, "modifiers": ["static", "private"]}}, {"id": 62760, "method_name": "onPostExecute", "class_name": "GetDataTask", "params": ["Void"], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "\t\tprotected void onPostExecute(Void result) {\n\t\t\tmRefreshedView.onRefreshComplete();\n\t\t\tsuper.onPostExecute(result);\n\t\t}", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/pulltorefresh%20and%20dragndrop%20to%20gridview/LauncherActivity/src/com/handmark/pulltorefresh/samples/PullToRefreshListInViewPagerActivity.java", "stars": "74", "class_props": {"extends": "AsyncTask", "implements": null, "modifiers": ["static", "private"]}}, {"id": 62761, "method_name": "toStop", "class_name": "JobExecutor", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void toStop() {\n        LOG.info(\"Stop task, info {}\", taskProcess);\n        try {\n            //first to destroy the process\n            taskProcess.destroy();\n            //second to clean it\n            status = ExecuteStatus.KILL;\n        } catch (Exception e) {\n            long taskId = TaskProcessUtils.getTaskId(taskProcess);\n            LOG.error(\"TASK_KILL_ERROR, kill task error, jobId: {} , taskId: {}, message: {}\",\n                    TaskProcessUtils.getJobId(taskProcess), taskId, e.getMessage(), e);\n            throw new RuntimeException(e);\n        }\n\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/core/src/main/java/com/webank/wedatasphere/exchangis/executor/JobExecutor.java", "stars": "23", "class_props": {"extends": "Thread", "implements": null, "modifiers": ["public"]}}, {"id": 62762, "method_name": "log", "class_name": "JobExecutor", "params": ["long", "long"], "throws": null, "modifiers": ["public"], "return_type": "LogResult", "snippet": "    public LogResult log(long startLine, long windSize){\n        return this.taskProcess.log(startLine, windSize);\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/core/src/main/java/com/webank/wedatasphere/exchangis/executor/JobExecutor.java", "stars": "23", "class_props": {"extends": "Thread", "implements": null, "modifiers": ["public"]}}, {"id": 62763, "method_name": "getResource", "class_name": "JobExecutor", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Resource", "snippet": "    public Resource getResource(){\n        return taskProcess.getResource();\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/core/src/main/java/com/webank/wedatasphere/exchangis/executor/JobExecutor.java", "stars": "23", "class_props": {"extends": "Thread", "implements": null, "modifiers": ["public"]}}, {"id": 62764, "method_name": "waitForAlloc", "class_name": "JobExecutor", "params": ["int", "TimeUnit"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean waitForAlloc(int interval, TimeUnit timeUnit){\n        alloc.lock();\n        try{\n            if(!TaskProcessUtils.isAllocate(taskProcess)){\n                if(notAlloc.await(interval, timeUnit)){\n                    //Do nothing\n                }\n            }\n        } catch (InterruptedException e) {\n            LOG.error(\"Interrupt when waiting for allocating resource for 'jobExecutor'\");\n            Thread.currentThread().interrupt();\n        } finally{\n            alloc.unlock();\n        }\n        return TaskProcessUtils.isAllocate(taskProcess);\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/core/src/main/java/com/webank/wedatasphere/exchangis/executor/JobExecutor.java", "stars": "23", "class_props": {"extends": "Thread", "implements": null, "modifiers": ["public"]}}, {"id": 62765, "method_name": "init", "class_name": "JobExecutor", "params": [], "throws": ["Exception"], "modifiers": ["public"], "return_type": "void", "snippet": "    public void init() throws Exception {\n        taskProcess.init();\n        init = true;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/core/src/main/java/com/webank/wedatasphere/exchangis/executor/JobExecutor.java", "stars": "23", "class_props": {"extends": "Thread", "implements": null, "modifiers": ["public"]}}, {"id": 62766, "method_name": "clean", "class_name": "JobExecutor", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void clean(){\n        if(null != taskProcess) {\n            taskProcess.clean();\n        }\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/core/src/main/java/com/webank/wedatasphere/exchangis/executor/JobExecutor.java", "stars": "23", "class_props": {"extends": "Thread", "implements": null, "modifiers": ["public"]}}, {"id": 62767, "method_name": "run", "class_name": "JobExecutor", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void run() {\n        status = ExecuteStatus.NONE;\n        String message = \"\";\n        long jobId = TaskProcessUtils.getJobId(taskProcess);\n        long taskId = TaskProcessUtils.getTaskId(taskProcess);\n        Exception ex = null;\n        try {\n            if(!init) {\n                taskProcess.init();\n            }\n            try {\n                Future<Integer> taskFuture = allocAndExec(taskProcess);\n                LOG.info(\"Task {} 's status change to RUNNING\", taskId);\n                status = ExecuteStatus.RUNNING;\n                int exitCode;\n                if(!taskFuture.isDone()) {\n                    //Get lock for executing\n                    exec.lock();\n                    LOG.info(\"Open daemon threads for taskId: [{}]\", taskId);\n                    openDaemons(taskProcess, jobId + \"_\" + taskId);\n                    try {\n                        exitCode = taskFuture.get();\n                    } catch (InterruptedException e) {\n                        LOG.error(\"Task [{}] process have been interrupted\", taskId);\n                        throw e;\n                    } finally {\n                        //Release lock for executing\n                        exec.unlock();\n                    }\n                }else{\n                    exitCode = taskFuture.get();\n                }\n                if(exitCode == JobContainer.TASK_CODE_SUCCESS){\n                    status = ExecuteStatus.SUCCESS;\n                }else if (exitCode == JobContainer.TASK_CODE_KILL){\n                    status = ExecuteStatus.KILL;\n                }else{\n                    status = ExecuteStatus.FAILD;\n                }\n            }catch(TaskResAllocException e){\n                try {\n                    LOG.info(\"Allocate task [{}] failed, message: [{}] try to destroy the process...\", taskId, e.getMessage());\n                    taskProcess.destroy();\n                }catch(Exception e0){\n                    //ignore\n                }\n            }\n        } catch (Exception e) {\n            if(status == ExecuteStatus.RUNNING) {\n                ex = e;\n                //this must to be failed\n                status = ExecuteStatus.FAILD;\n                message = e.getMessage();\n            }else{\n                LOG.error(\"Task allocate failed, [{}], message: [{}]\", taskId, e.getMessage());\n            }\n        } finally {\n            clean(taskProcess);\n            if(status != ExecuteStatus.NONE && status != ExecuteStatus.KILL){\n                if(null == ex | !(ex instanceof InterruptedException)) {\n                    try {\n                        //\u4efb\u52a1\u5b8c\u6210\u60c5\u51b5\n                        completeListener.handleComplete(taskProcess, status, message);\n                    } catch (Exception e) {\n                        LOG.error(\"TASK_ERROR, notify server task [{}] complete error.\", String.valueOf(taskId), e);\n                    }\n                    try {\n                        LOG.info(\"Start to close the daemon pool of task [{}]\", taskId);\n                        long record = System.currentTimeMillis();\n                        daemonPoolManager.shutdown();\n                        LOG.info(\"Finish closing the daemon pool of task [{}], spend time in millis: [{}]\",\n                                taskId, System.currentTimeMillis() - record);\n                    }catch(Exception e){\n                        //ignore error\n                        LOG.error(\"Cannot shutdown the task [{}] 's daemons thread completely.\", String.valueOf(taskId), e);\n                    }\n                }\n            }\n            TaskHandleListener listener = handleListenerMap.get(String.valueOf(Hook.TASK_END));\n            if(null != listener){\n                listener.handle(taskProcess, message);\n            }\n        }\n\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/core/src/main/java/com/webank/wedatasphere/exchangis/executor/JobExecutor.java", "stars": "23", "class_props": {"extends": "Thread", "implements": null, "modifiers": ["public"]}}, {"id": 62768, "method_name": "addHook", "class_name": "JobExecutor", "params": ["Hook", "TaskHandleListener"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void addHook(Hook hook, TaskHandleListener handleListener){\n        handleListenerMap.put(String.valueOf(hook), handleListener);\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/core/src/main/java/com/webank/wedatasphere/exchangis/executor/JobExecutor.java", "stars": "23", "class_props": {"extends": "Thread", "implements": null, "modifiers": ["public"]}}, {"id": 62769, "method_name": "getTaskState", "class_name": "JobExecutor", "params": [], "throws": null, "modifiers": ["public"], "return_type": "TaskState", "snippet": "    public TaskState getTaskState(){\n        return TaskProcessUtils.getTaskState(taskProcess);\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/core/src/main/java/com/webank/wedatasphere/exchangis/executor/JobExecutor.java", "stars": "23", "class_props": {"extends": "Thread", "implements": null, "modifiers": ["public"]}}, {"id": 62770, "method_name": "openDaemons", "class_name": "JobExecutor", "params": ["TaskProcess", "String"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void openDaemons(TaskProcess process, String namePrefix){\n       daemonPoolManager.addDaemon(\n               new LoggerDaemon(namePrefix , JobContainer.LOG_STDOUT_NAME,\n                       this.taskProcess, process.getInputStream())\n       );\n       daemonPoolManager.addDaemon(\n               new LoggerDaemon(namePrefix, JobContainer.LOG_STDERR_NAME,\n                       this.taskProcess, process.getErrorStream())\n       );\n       daemonPoolManager.addDaemon(\n               new ClockDaemon(namePrefix + \"-clock\", this.taskProcess, this.exec,\n                       this.timeout, this.handleListenerMap.get(String.valueOf(Hook.TASK_TIMEOUT)))\n       );\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/core/src/main/java/com/webank/wedatasphere/exchangis/executor/JobExecutor.java", "stars": "23", "class_props": {"extends": "Thread", "implements": null, "modifiers": ["public"]}}, {"id": 62771, "method_name": "getResourceManager", "class_name": "JobExecutor", "params": [], "throws": null, "modifiers": ["public"], "return_type": "ResourceManager", "snippet": "    public ResourceManager getResourceManager() {\n        return resourceManager;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/core/src/main/java/com/webank/wedatasphere/exchangis/executor/JobExecutor.java", "stars": "23", "class_props": {"extends": "Thread", "implements": null, "modifiers": ["public"]}}, {"id": 62772, "method_name": "setResourceManager", "class_name": "JobExecutor", "params": ["ResourceManager"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setResourceManager(ResourceManager resourceManager) {\n        this.resourceManager = resourceManager;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/core/src/main/java/com/webank/wedatasphere/exchangis/executor/JobExecutor.java", "stars": "23", "class_props": {"extends": "Thread", "implements": null, "modifiers": ["public"]}}, {"id": 62773, "method_name": "allocAndExec", "class_name": "JobExecutor", "params": ["TaskProcess"], "throws": ["TaskResAllocException"], "modifiers": ["private"], "return_type": "Future<Integer>", "snippet": "    private Future<Integer> allocAndExec(TaskProcess taskProcess) throws TaskResAllocException{\n        //Get lock for allocating\n        alloc.lock();\n        boolean exec = false;\n        boolean preAlloc = true;\n        try{\n            Resource resource = this.taskProcess.getResource();\n            //Pre allocate\n            if(null != resourceManager){\n                preAlloc = resourceManager.allocate(resource);\n            }\n            if(preAlloc) {\n                LOG.info(\"Pre-allocate task [{}] resource success, \" +\n                        \"resource:[\"+ Json.toJson(resource, null) + \"]\", TaskProcessUtils.getTaskId(taskProcess));\n                //execute and allocate actually\n                return taskProcess.executeAsync();\n            }else{\n                LOG.info(\"Pre-allocate task:[\" + TaskProcessUtils.getTaskId(taskProcess) + \"]  resource failed,\" +\n                        \" resource:[\" + Json.toJson(resource, null)+ \"]\");\n                throw new TaskResAllocException();\n            }\n        }finally{\n            notAlloc.signalAll();\n            alloc.unlock();\n        }\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/core/src/main/java/com/webank/wedatasphere/exchangis/executor/JobExecutor.java", "stars": "23", "class_props": {"extends": "Thread", "implements": null, "modifiers": ["public"]}}, {"id": 62774, "method_name": "clean", "class_name": "JobExecutor", "params": ["TaskProcess"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void clean(TaskProcess taskProcess){\n        long taskId = TaskProcessUtils.getTaskId(taskProcess);\n        LOG.info(\"Task [{}] finish, start to release the resource\", taskId);\n        try {\n            if(null != resourceManager){\n                resourceManager.collect(taskProcess.getResource());\n            }\n            taskProcess.clean();\n        }catch(Exception e){\n            LOG.error(\"IO_ERROR: release the resource of  task [{}] failed\", taskId, e);\n        }\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/core/src/main/java/com/webank/wedatasphere/exchangis/executor/JobExecutor.java", "stars": "23", "class_props": {"extends": "Thread", "implements": null, "modifiers": ["public"]}}, {"id": 62775, "method_name": "getJobId", "class_name": "JobExecutor", "params": [], "throws": null, "modifiers": ["public"], "return_type": "long", "snippet": "    public long getJobId() {\n        return jobId;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/core/src/main/java/com/webank/wedatasphere/exchangis/executor/JobExecutor.java", "stars": "23", "class_props": {"extends": "Thread", "implements": null, "modifiers": ["public"]}}, {"id": 62776, "method_name": "convert", "class_name": "StringToIntegerUtil", "params": ["String"], "throws": null, "modifiers": ["public", "static"], "return_type": "Integer", "snippet": "    public static Integer convert(String source) {\n        if (StringUtils.isBlank(source)) {\n            return null;\n        }\n        Integer i = Integer.parseInt(source);\n        return i;\n    }", "url": "https://raw.githubusercontent.com/geekidea/spring-cloud-plus/master/scp-framework/scp-framework-config/src/main/java/io/geekidea/cloud/framework/config/converter/StringToIntegerUtil.java", "stars": "22", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 62777, "method_name": "initElements", "class_name": "SettStairsBlock", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void initElements() {\n\t\telements.blocks.add(() -> new CustomBlock());\n\t\telements.items\n\t\t\t\t.add(() -> new BlockItem(block, new Item.Properties().group(ItemGroup.BUILDING_BLOCKS)).setRegistryName(block.getRegistryName()));\n\t}", "url": "https://raw.githubusercontent.com/KarogathModdingStudios/Enhanced-Vanilla-1.15/master/src/main/java/com/karogath/enhancedvanilla/block/SettStairsBlock.java", "stars": "2", "class_props": {"extends": "EnhancedVanillaElements", "implements": null, "modifiers": ["public"]}}, {"id": 62778, "method_name": "getDrops", "class_name": "CustomBlock", "params": ["BlockState", "LootContext"], "throws": null, "modifiers": ["public"], "return_type": "List<ItemStack>", "snippet": "\t\tpublic List<ItemStack> getDrops(BlockState state, LootContext.Builder builder) {\n\t\t\tList<ItemStack> dropsOriginal = super.getDrops(state, builder);\n\t\t\tif (!dropsOriginal.isEmpty())\n\t\t\t\treturn dropsOriginal;\n\t\t\treturn Collections.singletonList(new ItemStack(this, 0));\n\t\t}", "url": "https://raw.githubusercontent.com/KarogathModdingStudios/Enhanced-Vanilla-1.15/master/src/main/java/com/karogath/enhancedvanilla/block/SettStairsBlock.java", "stars": "2", "class_props": {"extends": "StairsBlock", "implements": null, "modifiers": ["public", "static"]}}, {"id": 62779, "method_name": "onCreateView", "class_name": "EditStaffPermissionsFragment", "params": ["LayoutInflater", "ViewGroup", "Bundle"], "throws": null, "modifiers": ["public"], "return_type": "View", "snippet": "    public View onCreateView(LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstanceState) {\n        super.onCreateView(inflater, container, savedInstanceState);\n\n        setRetainInstance(true);\n        View rootView = inflater.inflate(R.layout.fragment_edit_staff_permissions, container, false);\n        ButterKnife.bind(this,rootView);\n\n//        setContentView(R.layout.activity_edit_address);\n\n\n        Toolbar toolbar = rootView.findViewById(R.id.toolbar);\n        ((AppCompatActivity)getActivity()).setSupportActionBar(toolbar);\n        ((AppCompatActivity)getActivity()).getSupportActionBar().setDisplayHomeAsUpEnabled(true);\n\n\n        current_mode = getActivity().getIntent().getIntExtra(EDIT_MODE_INTENT_KEY,MODE_ADD);\n\n\n\n\n        if(current_mode ==MODE_UPDATE)\n        {\n\n            staffID = getActivity().getIntent().getIntExtra(STAFF_ID_INTENT_KEY,0);\n            getPermissions();\n        }\n\n\n        setActionBarTitle();\n\n        return rootView;\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/EditDataScreens/EditStaffPermissions/EditStaffPermissionsFragment.java", "stars": "10", "class_props": {"extends": "Fragment", "implements": null, "modifiers": ["public"]}}, {"id": 62780, "method_name": "setActionBarTitle", "class_name": "EditStaffPermissionsFragment", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void setActionBarTitle()\n    {\n        if(getActivity() instanceof AppCompatActivity)\n        {\n            ActionBar actionBar = ((AppCompatActivity)getActivity()).getSupportActionBar();\n\n            if(actionBar!=null)\n            {\n                if(current_mode == MODE_ADD)\n                {\n                    actionBar.setTitle(\"Add Staff Permissions\");\n                }\n                else if(current_mode==MODE_UPDATE)\n                {\n                    actionBar.setTitle(\"Edit Staff Permissions\");\n                }\n\n            }\n        }\n\n\n        if(current_mode==MODE_ADD)\n        {\n            updateDeliveryAddress.setText(\"Add\");\n        }\n        else if(current_mode==MODE_UPDATE)\n        {\n            updateDeliveryAddress.setText(\"Save\");\n        }\n\n\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/EditDataScreens/EditStaffPermissions/EditStaffPermissionsFragment.java", "stars": "10", "class_props": {"extends": "Fragment", "implements": null, "modifiers": ["public"]}}, {"id": 62781, "method_name": "getPermissions", "class_name": "EditStaffPermissionsFragment", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void getPermissions()\n    {\n\n        final ProgressDialog pd = new ProgressDialog(getActivity());\n        pd.setMessage(\"Please with ... Getting user details !\");\n        pd.show();\n\n\n        Call<StaffPermissions> call = staffService.getPermissionDetails(\n                PrefLogin.getAuthorizationHeaders(getActivity()),\n                staffID\n        );\n\n\n        call.enqueue(new Callback<StaffPermissions>() {\n            @Override\n            public void onResponse(Call<StaffPermissions> call, Response<StaffPermissions> response) {\n                if(!isVisible())\n                {\n                    return;\n                }\n\n                pd.dismiss();\n\n\n\n                if(response.code()==200)\n                {\n                    permissions = response.body();\n\n                    bindDataToViews();\n                }\n                else\n                {\n                    showToastMessage(\"Failed to get User Details : Code : \" + response.code());\n                }\n            }\n\n            @Override\n            public void onFailure(Call<StaffPermissions> call, Throwable t) {\n                if(!isVisible())\n                {\n                    return;\n                }\n\n                showToastMessage(\"Failed !\");\n            }\n        });\n\n\n\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/EditDataScreens/EditStaffPermissions/EditStaffPermissionsFragment.java", "stars": "10", "class_props": {"extends": "Fragment", "implements": null, "modifiers": ["public"]}}, {"id": 62782, "method_name": "getDataFromViews", "class_name": "EditStaffPermissionsFragment", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void getDataFromViews()\n    {\n        if(permissions ==null)\n        {\n            permissions = new StaffPermissions();\n        }\n\n\n        permissions.setDesignation(designation.getText().toString());\n        permissions.setPermitCreateUpdateItemCat(permitCreateUpdateItemCat.isChecked());\n        permissions.setPermitCreateUpdateItems(permitCreateUpdateItems.isChecked());\n        permissions.setPermitApproveShops(permitEnableShops.isChecked());\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/EditDataScreens/EditStaffPermissions/EditStaffPermissionsFragment.java", "stars": "10", "class_props": {"extends": "Fragment", "implements": null, "modifiers": ["public"]}}, {"id": 62783, "method_name": "bindDataToViews", "class_name": "EditStaffPermissionsFragment", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void bindDataToViews()\n    {\n        if(permissions!=null)\n        {\n            designation.setText(permissions.getDesignation());\n\n            permitCreateUpdateItemCat.setChecked(permissions.isPermitCreateUpdateItemCat());\n            permitCreateUpdateItems.setChecked(permissions.isPermitCreateUpdateItems());\n            permitEnableShops.setChecked(permissions.isPermitApproveShops());\n        }\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/EditDataScreens/EditStaffPermissions/EditStaffPermissionsFragment.java", "stars": "10", "class_props": {"extends": "Fragment", "implements": null, "modifiers": ["public"]}}, {"id": 62784, "method_name": "updateAddressClick", "class_name": "EditStaffPermissionsFragment", "params": ["View"], "throws": null, "modifiers": [], "return_type": "void", "snippet": "    void updateAddressClick(View view)\n    {\n\n        if(!validateData())\n        {\n            return;\n        }\n\n        if(current_mode == MODE_ADD)\n        {\n            addDeliveryAddress();\n        }\n        else if(current_mode == MODE_UPDATE)\n        {\n            updatePermissions();\n        }\n\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/EditDataScreens/EditStaffPermissions/EditStaffPermissionsFragment.java", "stars": "10", "class_props": {"extends": "Fragment", "implements": null, "modifiers": ["public"]}}, {"id": 62785, "method_name": "validateData", "class_name": "EditStaffPermissionsFragment", "params": [], "throws": null, "modifiers": ["private"], "return_type": "boolean", "snippet": "    private boolean validateData()\n    {\n        boolean isValid = true;\n\n\n\n        return isValid;\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/EditDataScreens/EditStaffPermissions/EditStaffPermissionsFragment.java", "stars": "10", "class_props": {"extends": "Fragment", "implements": null, "modifiers": ["public"]}}, {"id": 62786, "method_name": "addDeliveryAddress", "class_name": "EditStaffPermissionsFragment", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void addDeliveryAddress()\n    {\n        if(PrefLogin.getUser(getActivity())==null)\n        {\n            showToastMessage(\"Please login to use this feature !\");\n            return;\n        }\n\n        getDataFromViews();\n\n        progressBar.setVisibility(View.VISIBLE);\n        updateDeliveryAddress.setVisibility(View.INVISIBLE);\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/EditDataScreens/EditStaffPermissions/EditStaffPermissionsFragment.java", "stars": "10", "class_props": {"extends": "Fragment", "implements": null, "modifiers": ["public"]}}, {"id": 62787, "method_name": "updatePermissions", "class_name": "EditStaffPermissionsFragment", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void updatePermissions()\n    {\n        getDataFromViews();\n\n\n        permissions.setStaffUserID(staffID);\n\n\n        Call<ResponseBody> call = staffService.updateStaffPermissions(\n                PrefLogin.getAuthorizationHeaders(getActivity()),\n                permissions\n        );\n\n\n\n        progressBar.setVisibility(View.VISIBLE);\n        updateDeliveryAddress.setVisibility(View.INVISIBLE);\n\n\n        call.enqueue(new Callback<ResponseBody>() {\n            @Override\n            public void onResponse(Call<ResponseBody> call, Response<ResponseBody> response) {\n\n                if(!isVisible())\n                {\n                    return;\n                }\n\n\n                if(response.code()==200)\n                {\n                    showToastMessage(\"Update Successful !\");\n                }\n                else\n                {\n                    showToastMessage(\"failed Code : \" + response.code());\n                }\n\n\n\n                progressBar.setVisibility(View.INVISIBLE);\n                updateDeliveryAddress.setVisibility(View.VISIBLE);\n            }\n\n            @Override\n            public void onFailure(Call<ResponseBody> call, Throwable t) {\n\n\n                if(!isVisible())\n                {\n                    return;\n                }\n\n                showToastMessage(\"Network connection failed !\");\n\n\n\n                progressBar.setVisibility(View.INVISIBLE);\n                updateDeliveryAddress.setVisibility(View.VISIBLE);\n            }\n        });\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/EditDataScreens/EditStaffPermissions/EditStaffPermissionsFragment.java", "stars": "10", "class_props": {"extends": "Fragment", "implements": null, "modifiers": ["public"]}}, {"id": 62788, "method_name": "showToastMessage", "class_name": "EditStaffPermissionsFragment", "params": ["String"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void showToastMessage(String message)\n    {\n        Toast.makeText(getActivity(),message,Toast.LENGTH_SHORT).show();\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/EditDataScreens/EditStaffPermissions/EditStaffPermissionsFragment.java", "stars": "10", "class_props": {"extends": "Fragment", "implements": null, "modifiers": ["public"]}}, {"id": 62789, "method_name": "onMessage", "class_name": "AbstractPacket", "params": ["REQ", "MessageContext"], "throws": null, "modifiers": ["public"], "return_type": "REQ", "snippet": "    public REQ onMessage(REQ message, MessageContext ctx) {\n        if (ctx.side == Side.CLIENT) {\n            Minecraft.getMinecraft().addScheduledTask(() -> message.onClient(message, FMLClientHandler.instance().getClient().player));\n        } else {\n            FMLCommonHandler.instance().getMinecraftServerInstance().addScheduledTask(() -> message.onServer(message, ctx.getServerHandler().player));\n        }\n        return null;\n    }", "url": "https://raw.githubusercontent.com/Prunoideae/PhasePotion/master/src/main/java/com/naive/phase/Network/AbstractPacket.java", "stars": "2", "class_props": {"extends": null, "implements": ["IMessage", "IMessageHandler"], "modifiers": ["public", "abstract"]}}, {"id": 62790, "method_name": "onClient", "class_name": "AbstractPacket", "params": ["REQ", "EntityPlayer"], "throws": null, "modifiers": ["public", "abstract"], "return_type": "void", "snippet": "    public abstract void onClient(REQ message, EntityPlayer player);\n\n    public abstract void onServer(REQ message, EntityPlayer player);\n}\n\n", "url": "https://raw.githubusercontent.com/Prunoideae/PhasePotion/master/src/main/java/com/naive/phase/Network/AbstractPacket.java", "stars": "2", "class_props": {"extends": null, "implements": ["IMessage", "IMessageHandler"], "modifiers": ["public", "abstract"]}}, {"id": 62791, "method_name": "onServer", "class_name": "AbstractPacket", "params": ["REQ", "EntityPlayer"], "throws": null, "modifiers": ["public", "abstract"], "return_type": "void", "snippet": "    public abstract void onServer(REQ message, EntityPlayer player);\n}\n\n", "url": "https://raw.githubusercontent.com/Prunoideae/PhasePotion/master/src/main/java/com/naive/phase/Network/AbstractPacket.java", "stars": "2", "class_props": {"extends": null, "implements": ["IMessage", "IMessageHandler"], "modifiers": ["public", "abstract"]}}, {"id": 62792, "method_name": "create", "class_name": "ViewHolderMarketSmall", "params": ["ViewGroup", "Context", "Fragment"], "throws": null, "modifiers": ["public", "static"], "return_type": "ViewHolderMarketSmall", "snippet": "    public static ViewHolderMarketSmall create(ViewGroup parent, Context context, Fragment subscriber)\n    {\n\n        View view = LayoutInflater.from(parent.getContext())\n                .inflate(R.layout.list_item_market_type_small,parent,false);\n\n        return new ViewHolderMarketSmall(view,context,subscriber);\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/ViewHolders/ViewHolderMarket/ViewHolderMarketSmall.java", "stars": "10", "class_props": {"extends": "RecyclerView", "implements": null, "modifiers": ["public"]}}, {"id": 62793, "method_name": "setItem", "class_name": "ViewHolderMarketSmall", "params": ["Market"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setItem(Market item)\n    {\n\n        this.configurationGlobal = item;\n\n\n        marketName.setText(configurationGlobal.getServiceName());\n        marketCity.setText(configurationGlobal.getCity());\n\n\n        String imagePath = PrefServiceConfig.getServiceURL_SDS(context)\n                + \"/api/v1/ServiceConfiguration/Image/three_hundred_\" + configurationGlobal.getLogoImagePath() + \".jpg\";\n\n\n//                System.out.println(\"Service LOGO : \" + imagePath);\n\n        Drawable placeholder = VectorDrawableCompat\n                .create(context.getResources(),\n                        R.drawable.ic_nature_people_white_48px, context.getTheme());\n\n\n        Picasso.get()\n                .load(imagePath)\n                .placeholder(placeholder)\n                .into(marketPhoto);\n\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/ViewHolders/ViewHolderMarket/ViewHolderMarketSmall.java", "stars": "10", "class_props": {"extends": "RecyclerView", "implements": null, "modifiers": ["public"]}}, {"id": 62794, "method_name": "listItemClick", "class_name": "ViewHolderMarketSmall", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "    void listItemClick()\n    {\n\n\n        if(fragment instanceof ViewHolderMarket.ListItemClick)\n        {\n            ((ViewHolderMarket.ListItemClick) fragment).listItemClick(configurationGlobal,getLayoutPosition());\n        }\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/ViewHolders/ViewHolderMarket/ViewHolderMarketSmall.java", "stars": "10", "class_props": {"extends": "RecyclerView", "implements": null, "modifiers": ["public"]}}, {"id": 62795, "method_name": "selectMarket", "class_name": "ViewHolderMarketSmall", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "    void selectMarket()\n    {\n        Market configurationGlobal = this.configurationGlobal;\n\n\n//        selectMarket.setVisibility(View.INVISIBLE);\n        marketPhoto.setVisibility(View.INVISIBLE);\n        progressBarSelect.setVisibility(View.VISIBLE);\n\n\n        if(PrefLoginGlobal.getUser(context)==null)\n        {\n            // user not logged in so just fetch configuration\n            viewModel.fetchLocalConfiguration(configurationGlobal);\n        }\n        else\n        {\n            // user logged in so make an attempt to login to local service\n            viewModel.loginToLocalEndpoint(configurationGlobal);\n        }\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/ViewHolders/ViewHolderMarket/ViewHolderMarketSmall.java", "stars": "10", "class_props": {"extends": "RecyclerView", "implements": null, "modifiers": ["public"]}}, {"id": 62796, "method_name": "showToastMessage", "class_name": "ViewHolderMarketSmall", "params": ["String"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void showToastMessage(String message)\n    {\n        Toast.makeText(context,message,Toast.LENGTH_SHORT).show();\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/ViewHolders/ViewHolderMarket/ViewHolderMarketSmall.java", "stars": "10", "class_props": {"extends": "RecyclerView", "implements": null, "modifiers": ["public"]}}, {"id": 62797, "method_name": "sell_potatoes", "class_name": "Food", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "\tvoid sell_potatoes() {\n\t\tSystem.out.println(\"Trader has \" + num_potatoes + \" potatoes!\");\n\t\tSystem.out.println(\"They cost a total of $\" + potato_price_per_kg + \" per kg!\");\n\t}", "url": "https://raw.githubusercontent.com/suncloudsmoon/Random-Trading/master/Random%20Trading/src/Food_Trading.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 62798, "method_name": "potato_math", "class_name": "Food", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "\tpublic String potato_math() {\n\t\tdouble total_price = potato_price_per_kg * num_potatoes;\n\t\tString total_price_display =  \"The total price is $\" + total_price;\n\t\treturn total_price_display;\n\t}", "url": "https://raw.githubusercontent.com/suncloudsmoon/Random-Trading/master/Random%20Trading/src/Food_Trading.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 62799, "method_name": "potato_total_price", "class_name": "Food", "params": [], "throws": null, "modifiers": ["public"], "return_type": "double", "snippet": "\tpublic double potato_total_price() {\n\t\tdouble total_price = potato_price_per_kg * num_potatoes;\n\n\t\treturn total_price;\n\t}", "url": "https://raw.githubusercontent.com/suncloudsmoon/Random-Trading/master/Random%20Trading/src/Food_Trading.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 62800, "method_name": "onMenuItemClick", "class_name": "GenericMenuClickListener", "params": ["android"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "\tpublic boolean onMenuItemClick (android.view.MenuItem p0)\n\t{\n\t\treturn n_onMenuItemClick (p0);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc643f46942d9dd1fff9/GenericMenuClickListener.java", "stars": "2", "class_props": {"extends": "java", "implements": ["mono", "android"], "modifiers": ["public"]}}, {"id": 62801, "method_name": "n_onMenuItemClick", "class_name": "GenericMenuClickListener", "params": ["android"], "throws": null, "modifiers": ["private", "native"], "return_type": "boolean", "snippet": "\tprivate native boolean n_onMenuItemClick (android.view.MenuItem p0);\n\n\tprivate java.util.ArrayList refList;\n\tpublic void monodroidAddReference (java.lang.Object obj)\n\t{\n\t\tif (refList == null)\n\t\t\trefList = new java.util.ArrayList ();\n\t\trefList.add (obj);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc643f46942d9dd1fff9/GenericMenuClickListener.java", "stars": "2", "class_props": {"extends": "java", "implements": ["mono", "android"], "modifiers": ["public"]}}, {"id": 62802, "method_name": "monodroidAddReference", "class_name": "GenericMenuClickListener", "params": ["java"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void monodroidAddReference (java.lang.Object obj)\n\t{\n\t\tif (refList == null)\n\t\t\trefList = new java.util.ArrayList ();\n\t\trefList.add (obj);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc643f46942d9dd1fff9/GenericMenuClickListener.java", "stars": "2", "class_props": {"extends": "java", "implements": ["mono", "android"], "modifiers": ["public"]}}, {"id": 62803, "method_name": "monodroidClearReferences", "class_name": "GenericMenuClickListener", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void monodroidClearReferences ()\n\t{\n\t\tif (refList != null)\n\t\t\trefList.clear ();\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc643f46942d9dd1fff9/GenericMenuClickListener.java", "stars": "2", "class_props": {"extends": "java", "implements": ["mono", "android"], "modifiers": ["public"]}}, {"id": 62804, "method_name": "runNestTaskTestImpl", "class_name": "RepackageArchiveOptimizeSakerTest", "params": [], "throws": ["Throwable"], "modifiers": ["protected"], "return_type": "void", "snippet": "\tprotected void runNestTaskTestImpl() throws Throwable {\n\t\tCombinedTargetTaskResult res = runScriptTask(\"build\");\n\t\tSakerPath outpath = (SakerPath) res.getTargetTaskResult(\"secondpath\");\n\n\t\tMap<String, ByteArrayRegion> resourceBytes = new TreeMap<>();\n\t\ttry (InputStream is = ByteSource.toInputStream(files.openInput(outpath));\n\t\t\t\tZipInputStream zis = new ZipInputStream(is)) {\n\t\t\tfor (ZipEntry entry; (entry = zis.getNextEntry()) != null;) {\n\t\t\t\tresourceBytes.put(entry.getName(), StreamUtils.readStreamFully(zis));\n\t\t\t}\n\t\t}\n\n\t\ttry (ClassLoaderDataFinder jarfinder = new TestUtils.MemoryClassLoaderDataFinder(resourceBytes)) {\n\t\t\tMultiDataClassLoader cl = new MultiDataClassLoader(jarfinder);\n\t\t\tClass<?> c = Class.forName(\"test.Main\", false, cl);\n\t\t\t//this should succeed, as it was optimized\n\t\t\tc.getMethod(\"count\", int.class).invoke(null, 10000000);\n\t\t}\n\n\t\trunScriptTask(\"build\");\n\t\tassertEmpty(getMetric().getRunTaskIdResults());\n\t}", "url": "https://raw.githubusercontent.com/Sipkab/jvm-tail-recursion/master/test/src/testing/saker/sipka/jvm/tailrec/RepackageArchiveOptimizeSakerTest.java", "stars": "97", "class_props": {"extends": "NestRepositoryCachingEnvironmentTestCase", "implements": null, "modifiers": ["public"]}}, {"id": 62805, "method_name": "hasInt", "class_name": "OperandStack", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean hasInt() {\n        return itop > 0;\n    }", "url": "https://raw.githubusercontent.com/jroutine/jroutine/master/src/main/java/org/coral/jroutine/weave/OperandStack.java", "stars": "3", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 62806, "method_name": "popInt", "class_name": "OperandStack", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int popInt() {\n        if (itop == 0) {\n            throw new EmptyStackException(\"pop int\");\n        }\n\n        return istack[--itop];\n    }", "url": "https://raw.githubusercontent.com/jroutine/jroutine/master/src/main/java/org/coral/jroutine/weave/OperandStack.java", "stars": "3", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 62807, "method_name": "pushInt", "class_name": "OperandStack", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void pushInt(int i) {\n        if (itop == istack.length) {\n            int[] hlp = new int[istack.length * 2];\n            System.arraycopy(istack, 0, hlp, 0, istack.length);\n            istack = hlp;\n        }\n        istack[itop++] = i;\n    }", "url": "https://raw.githubusercontent.com/jroutine/jroutine/master/src/main/java/org/coral/jroutine/weave/OperandStack.java", "stars": "3", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 62808, "method_name": "hasFloat", "class_name": "OperandStack", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean hasFloat() {\n        return ftop > 0;\n    }", "url": "https://raw.githubusercontent.com/jroutine/jroutine/master/src/main/java/org/coral/jroutine/weave/OperandStack.java", "stars": "3", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 62809, "method_name": "popFloat", "class_name": "OperandStack", "params": [], "throws": null, "modifiers": ["public"], "return_type": "float", "snippet": "    public float popFloat() {\n        if (ftop == 0) {\n            throw new EmptyStackException(\"pop float\");\n        }\n        return fstack[--ftop];\n    }", "url": "https://raw.githubusercontent.com/jroutine/jroutine/master/src/main/java/org/coral/jroutine/weave/OperandStack.java", "stars": "3", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 62810, "method_name": "pushFloat", "class_name": "OperandStack", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void pushFloat(int f) {\n        if (ftop == fstack.length) {\n            float[] hlp = new float[fstack.length * 2];\n            System.arraycopy(fstack, 0, hlp, 0, fstack.length);\n            fstack = hlp;\n        }\n        fstack[ftop++] = f;\n    }", "url": "https://raw.githubusercontent.com/jroutine/jroutine/master/src/main/java/org/coral/jroutine/weave/OperandStack.java", "stars": "3", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 62811, "method_name": "hasDouble", "class_name": "OperandStack", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean hasDouble() {\n        return dtop > 0;\n    }", "url": "https://raw.githubusercontent.com/jroutine/jroutine/master/src/main/java/org/coral/jroutine/weave/OperandStack.java", "stars": "3", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 62812, "method_name": "popDouble", "class_name": "OperandStack", "params": [], "throws": null, "modifiers": ["public"], "return_type": "double", "snippet": "    public double popDouble() {\n        if (dtop == 0) {\n            throw new EmptyStackException(\"pop double\");\n        }\n        return dstack[--dtop];\n    }", "url": "https://raw.githubusercontent.com/jroutine/jroutine/master/src/main/java/org/coral/jroutine/weave/OperandStack.java", "stars": "3", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 62813, "method_name": "pushDouble", "class_name": "OperandStack", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void pushDouble(int d) {\n        if (dtop == dstack.length) {\n            double[] hlp = new double[dstack.length * 2];\n            System.arraycopy(dstack, 0, hlp, 0, dstack.length);\n            dstack = hlp;\n        }\n        dstack[dtop++] = d;\n    }", "url": "https://raw.githubusercontent.com/jroutine/jroutine/master/src/main/java/org/coral/jroutine/weave/OperandStack.java", "stars": "3", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 62814, "method_name": "hasLong", "class_name": "OperandStack", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean hasLong() {\n        return ltop > 0;\n    }", "url": "https://raw.githubusercontent.com/jroutine/jroutine/master/src/main/java/org/coral/jroutine/weave/OperandStack.java", "stars": "3", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 62815, "method_name": "popLong", "class_name": "OperandStack", "params": [], "throws": null, "modifiers": ["public"], "return_type": "long", "snippet": "    public long popLong() {\n        if (ltop == 0) {\n            throw new EmptyStackException(\"pop long\");\n        }\n        return lstack[--ltop];\n    }", "url": "https://raw.githubusercontent.com/jroutine/jroutine/master/src/main/java/org/coral/jroutine/weave/OperandStack.java", "stars": "3", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 62816, "method_name": "pushLong", "class_name": "OperandStack", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void pushLong(int l) {\n        if (ltop == lstack.length) {\n            long[] hlp = new long[lstack.length * 2];\n            System.arraycopy(lstack, 0, hlp, 0, lstack.length);\n            lstack = hlp;\n        }\n        lstack[ltop++] = l;\n    }", "url": "https://raw.githubusercontent.com/jroutine/jroutine/master/src/main/java/org/coral/jroutine/weave/OperandStack.java", "stars": "3", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 62817, "method_name": "hasObject", "class_name": "OperandStack", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean hasObject() {\n        return otop > 0;\n    }", "url": "https://raw.githubusercontent.com/jroutine/jroutine/master/src/main/java/org/coral/jroutine/weave/OperandStack.java", "stars": "3", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 62818, "method_name": "popObject", "class_name": "OperandStack", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Object", "snippet": "    public Object popObject() {\n        if (otop == 0) {\n            throw new EmptyStackException(\"pop object\");\n        }\n        Object o = ostack[--otop];\n        ostack[otop] = null;\n        return o;\n    }", "url": "https://raw.githubusercontent.com/jroutine/jroutine/master/src/main/java/org/coral/jroutine/weave/OperandStack.java", "stars": "3", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 62819, "method_name": "pushObject", "class_name": "OperandStack", "params": ["Object"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void pushObject(Object o) {\n        if (otop == ostack.length) {\n            Object[] hlp = new Object[ostack.length * 2];\n            System.arraycopy(ostack, 0, hlp, 0, ostack.length);\n            ostack = hlp;\n        }\n        ostack[otop++] = o;\n    }", "url": "https://raw.githubusercontent.com/jroutine/jroutine/master/src/main/java/org/coral/jroutine/weave/OperandStack.java", "stars": "3", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 62820, "method_name": "hasReference", "class_name": "OperandStack", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean hasReference() {\n        return rtop > 0;\n    }", "url": "https://raw.githubusercontent.com/jroutine/jroutine/master/src/main/java/org/coral/jroutine/weave/OperandStack.java", "stars": "3", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 62821, "method_name": "popReference", "class_name": "OperandStack", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Object", "snippet": "    public Object popReference() {\n        if (rtop == 0) {\n            throw new EmptyStackException(\"pop reference\");\n        }\n        Object r = rstack[--rtop];\n        rstack[rtop] = null;\n        return r;\n    }", "url": "https://raw.githubusercontent.com/jroutine/jroutine/master/src/main/java/org/coral/jroutine/weave/OperandStack.java", "stars": "3", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 62822, "method_name": "pushReference", "class_name": "OperandStack", "params": ["Object"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void pushReference(Object r) {\n        if (rtop == rstack.length) {\n            Object[] hlp = new Object[rstack.length * 2];\n            System.arraycopy(rstack, 0, hlp, 0, rstack.length);\n            rstack = hlp;\n        }\n        rstack[rtop++] = r;\n    }", "url": "https://raw.githubusercontent.com/jroutine/jroutine/master/src/main/java/org/coral/jroutine/weave/OperandStack.java", "stars": "3", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 62823, "method_name": "isEmpty", "class_name": "OperandStack", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean isEmpty() {\n        return itop == 0 && ltop == 0 && dtop == 0 && ftop == 0 && otop == 0 && rtop == 0;\n    }", "url": "https://raw.githubusercontent.com/jroutine/jroutine/master/src/main/java/org/coral/jroutine/weave/OperandStack.java", "stars": "3", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 62824, "method_name": "isSerializable", "class_name": "OperandStack", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean isSerializable() {\n        for (int i = 0; i < otop; i++) {\n            final Object o = ostack[i];\n            if (!(o instanceof Serializable)) {\n                return false;\n            }\n        }\n        for (int i = 0; i < rtop; i++) {\n            final Object r = rstack[i];\n            if (!(r instanceof Serializable)) {\n                return false;\n            }\n        }\n        return true;\n    }", "url": "https://raw.githubusercontent.com/jroutine/jroutine/master/src/main/java/org/coral/jroutine/weave/OperandStack.java", "stars": "3", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 62825, "method_name": "toString", "class_name": "OperandStack", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String toString() {\n        final StringBuilder sb = new StringBuilder();\n        sb.append(\"i[\").append(itop).append(\"]\\n\");\n        sb.append(\"f[\").append(ftop).append(\"]\\n\");\n        sb.append(\"d[\").append(dtop).append(\"]\\n\");\n        sb.append(\"l[\").append(ltop).append(\"]\\n\");\n        sb.append(\"o[\").append(otop).append(\"]\\n\");\n        for (int i = 0; i < otop; i++) {\n            sb.append(' ').append(i).append(\": \");\n            sb.append(ostack[i].getClass().getName());\n            sb.append(\"@\").append(ostack[i].hashCode()).append('\\n');\n        }\n        sb.append(\"r[\").append(rtop).append(\"]\\n\");\n        for (int i = 0; i < rtop; i++) {\n            sb.append(' ').append(i).append(\": \");\n            sb.append(rstack[i].getClass().getName());\n            sb.append(\"@\").append(rstack[i].hashCode()).append('\\n');\n        }\n\n        return sb.toString();\n    }", "url": "https://raw.githubusercontent.com/jroutine/jroutine/master/src/main/java/org/coral/jroutine/weave/OperandStack.java", "stars": "3", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 62826, "method_name": "writeObject", "class_name": "OperandStack", "params": ["ObjectOutputStream"], "throws": ["IOException"], "modifiers": ["private"], "return_type": "void", "snippet": "    private void writeObject(ObjectOutputStream s) throws IOException {\n        s.writeInt(itop);\n        for (int i = 0; i < itop; i++) {\n            s.writeInt(istack[i]);\n        }\n\n        s.writeInt(ftop);\n        for (int i = 0; i < ftop; i++) {\n            s.writeDouble(fstack[i]);\n        }\n\n        s.writeInt(dtop);\n        for (int i = 0; i < dtop; i++) {\n            s.writeDouble(dstack[i]);\n        }\n\n        s.writeInt(ltop);\n        for (int i = 0; i < ltop; i++) {\n            s.writeLong(lstack[i]);\n        }\n\n        s.writeInt(otop);\n        for (int i = 0; i < otop; i++) {\n            s.writeObject(ostack[i]);\n        }\n\n        s.writeInt(rtop);\n        for (int i = 0; i < rtop; i++) {\n            s.writeObject(rstack[i]);\n        }\n\n        s.writeObject(runnable);\n    }", "url": "https://raw.githubusercontent.com/jroutine/jroutine/master/src/main/java/org/coral/jroutine/weave/OperandStack.java", "stars": "3", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 62827, "method_name": "readObject", "class_name": "OperandStack", "params": ["ObjectInputStream"], "throws": ["IOException", "ClassNotFoundException"], "modifiers": ["private"], "return_type": "void", "snippet": "    private void readObject(ObjectInputStream s) throws IOException, ClassNotFoundException {\n        itop = s.readInt();\n        istack = new int[itop];\n        for (int i = 0; i < itop; i++) {\n            istack[i] = s.readInt();\n        }\n\n        ftop = s.readInt();\n        fstack = new float[ftop];\n        for (int i = 0; i < ftop; i++) {\n            fstack[i] = s.readFloat();\n        }\n\n        dtop = s.readInt();\n        dstack = new double[dtop];\n        for (int i = 0; i < dtop; i++) {\n            dstack[i] = s.readDouble();\n        }\n\n        ltop = s.readInt();\n        lstack = new long[ltop];\n        for (int i = 0; i < ltop; i++) {\n            lstack[i] = s.readLong();\n        }\n\n        otop = s.readInt();\n        ostack = new Object[otop];\n        for (int i = 0; i < otop; i++) {\n            ostack[i] = s.readObject();\n        }\n\n        rtop = s.readInt();\n        rstack = new Object[rtop];\n        for (int i = 0; i < rtop; i++) {\n            rstack[i] = s.readObject();\n        }\n\n        runnable = (Runnable) s.readObject();\n    }", "url": "https://raw.githubusercontent.com/jroutine/jroutine/master/src/main/java/org/coral/jroutine/weave/OperandStack.java", "stars": "3", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 62828, "method_name": "dispatch", "class_name": "ResetEvent", "params": ["Computer"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void dispatch(Computer computer) {\n        computer.getCPU().reset();\n        for (Device d : computer.getDevices()) {\n            d.reset();\n        }\n    }", "url": "https://raw.githubusercontent.com/kemusiro/jr100-emulator-v2/master/src/jp/asamomiji/emulator/ResetEvent.java", "stars": "4", "class_props": {"extends": "EmulatorEvent", "implements": null, "modifiers": ["public"]}}, {"id": 62829, "method_name": "setup", "class_name": "MailServiceIT", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setup() {\n        MockitoAnnotations.initMocks(this);\n        doNothing().when(javaMailSender).send(any(MimeMessage.class));\n        mailService = new MailService(jHipsterProperties, javaMailSender, messageSource, templateEngine);\n    }", "url": "https://raw.githubusercontent.com/gardle/gardle-web/master/src/test/java/com/gardle/service/MailServiceIT.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 62830, "method_name": "testSendEmail", "class_name": "MailServiceIT", "params": [], "throws": ["Exception"], "modifiers": ["public"], "return_type": "void", "snippet": "    public void testSendEmail() throws Exception {\n        mailService.sendEmail(\"john.doe@example.com\", \"testSubject\", \"testContent\", false, false);\n        verify(javaMailSender).send(messageCaptor.capture());\n        MimeMessage message = messageCaptor.getValue();\n        assertThat(message.getSubject()).isEqualTo(\"testSubject\");\n        assertThat(message.getAllRecipients()[0].toString()).isEqualTo(\"john.doe@example.com\");\n        assertThat(message.getFrom()[0].toString()).isEqualTo(jHipsterProperties.getMail().getFrom());\n        assertThat(message.getContent()).isInstanceOf(String.class);\n        assertThat(message.getContent().toString()).isEqualTo(\"testContent\");\n        assertThat(message.getDataHandler().getContentType()).isEqualTo(\"text/plain; charset=UTF-8\");\n    }", "url": "https://raw.githubusercontent.com/gardle/gardle-web/master/src/test/java/com/gardle/service/MailServiceIT.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 62831, "method_name": "testSendHtmlEmail", "class_name": "MailServiceIT", "params": [], "throws": ["Exception"], "modifiers": ["public"], "return_type": "void", "snippet": "    public void testSendHtmlEmail() throws Exception {\n        mailService.sendEmail(\"john.doe@example.com\", \"testSubject\", \"testContent\", false, true);\n        verify(javaMailSender).send(messageCaptor.capture());\n        MimeMessage message = messageCaptor.getValue();\n        assertThat(message.getSubject()).isEqualTo(\"testSubject\");\n        assertThat(message.getAllRecipients()[0].toString()).isEqualTo(\"john.doe@example.com\");\n        assertThat(message.getFrom()[0].toString()).isEqualTo(jHipsterProperties.getMail().getFrom());\n        assertThat(message.getContent()).isInstanceOf(String.class);\n        assertThat(message.getContent().toString()).isEqualTo(\"testContent\");\n        assertThat(message.getDataHandler().getContentType()).isEqualTo(\"text/html;charset=UTF-8\");\n    }", "url": "https://raw.githubusercontent.com/gardle/gardle-web/master/src/test/java/com/gardle/service/MailServiceIT.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 62832, "method_name": "testSendMultipartEmail", "class_name": "MailServiceIT", "params": [], "throws": ["Exception"], "modifiers": ["public"], "return_type": "void", "snippet": "    public void testSendMultipartEmail() throws Exception {\n        mailService.sendEmail(\"john.doe@example.com\", \"testSubject\", \"testContent\", true, false);\n        verify(javaMailSender).send(messageCaptor.capture());\n        MimeMessage message = messageCaptor.getValue();\n        MimeMultipart mp = (MimeMultipart) message.getContent();\n        MimeBodyPart part = (MimeBodyPart) ((MimeMultipart) mp.getBodyPart(0).getContent()).getBodyPart(0);\n        ByteArrayOutputStream aos = new ByteArrayOutputStream();\n        part.writeTo(aos);\n        assertThat(message.getSubject()).isEqualTo(\"testSubject\");\n        assertThat(message.getAllRecipients()[0].toString()).isEqualTo(\"john.doe@example.com\");\n        assertThat(message.getFrom()[0].toString()).isEqualTo(jHipsterProperties.getMail().getFrom());\n        assertThat(message.getContent()).isInstanceOf(Multipart.class);\n        assertThat(aos.toString()).isEqualTo(\"\\r\\ntestContent\");\n        assertThat(part.getDataHandler().getContentType()).isEqualTo(\"text/plain; charset=UTF-8\");\n    }", "url": "https://raw.githubusercontent.com/gardle/gardle-web/master/src/test/java/com/gardle/service/MailServiceIT.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 62833, "method_name": "testSendMultipartHtmlEmail", "class_name": "MailServiceIT", "params": [], "throws": ["Exception"], "modifiers": ["public"], "return_type": "void", "snippet": "    public void testSendMultipartHtmlEmail() throws Exception {\n        mailService.sendEmail(\"john.doe@example.com\", \"testSubject\", \"testContent\", true, true);\n        verify(javaMailSender).send(messageCaptor.capture());\n        MimeMessage message = messageCaptor.getValue();\n        MimeMultipart mp = (MimeMultipart) message.getContent();\n        MimeBodyPart part = (MimeBodyPart) ((MimeMultipart) mp.getBodyPart(0).getContent()).getBodyPart(0);\n        ByteArrayOutputStream aos = new ByteArrayOutputStream();\n        part.writeTo(aos);\n        assertThat(message.getSubject()).isEqualTo(\"testSubject\");\n        assertThat(message.getAllRecipients()[0].toString()).isEqualTo(\"john.doe@example.com\");\n        assertThat(message.getFrom()[0].toString()).isEqualTo(jHipsterProperties.getMail().getFrom());\n        assertThat(message.getContent()).isInstanceOf(Multipart.class);\n        assertThat(aos.toString()).isEqualTo(\"\\r\\ntestContent\");\n        assertThat(part.getDataHandler().getContentType()).isEqualTo(\"text/html;charset=UTF-8\");\n    }", "url": "https://raw.githubusercontent.com/gardle/gardle-web/master/src/test/java/com/gardle/service/MailServiceIT.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 62834, "method_name": "testSendEmailFromTemplate", "class_name": "MailServiceIT", "params": [], "throws": ["Exception"], "modifiers": ["public"], "return_type": "void", "snippet": "    public void testSendEmailFromTemplate() throws Exception {\n        User user = new User();\n        user.setLogin(\"john\");\n        user.setEmail(\"john.doe@example.com\");\n        user.setLangKey(\"en\");\n        mailService.sendEmailFromTemplate(user, \"mail/testEmail\", \"email.test.title\");\n        verify(javaMailSender).send(messageCaptor.capture());\n        MimeMessage message = messageCaptor.getValue();\n        assertThat(message.getSubject()).isEqualTo(\"test title\");\n        assertThat(message.getAllRecipients()[0].toString()).isEqualTo(user.getEmail());\n        assertThat(message.getFrom()[0].toString()).isEqualTo(jHipsterProperties.getMail().getFrom());\n        assertThat(message.getContent().toString()).isEqualToNormalizingNewlines(\"<html>test title, http://127.0.0.1:8080, john</html>\\n\");\n        assertThat(message.getDataHandler().getContentType()).isEqualTo(\"text/html;charset=UTF-8\");\n    }", "url": "https://raw.githubusercontent.com/gardle/gardle-web/master/src/test/java/com/gardle/service/MailServiceIT.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 62835, "method_name": "testSendActivationEmail", "class_name": "MailServiceIT", "params": [], "throws": ["Exception"], "modifiers": ["public"], "return_type": "void", "snippet": "    public void testSendActivationEmail() throws Exception {\n        User user = new User();\n        user.setLangKey(Constants.DEFAULT_LANGUAGE);\n        user.setLogin(\"john\");\n        user.setEmail(\"john.doe@example.com\");\n        mailService.sendActivationEmail(user);\n        verify(javaMailSender).send(messageCaptor.capture());\n        MimeMessage message = messageCaptor.getValue();\n        assertThat(message.getAllRecipients()[0].toString()).isEqualTo(user.getEmail());\n        assertThat(message.getFrom()[0].toString()).isEqualTo(jHipsterProperties.getMail().getFrom());\n        assertThat(message.getContent().toString()).isNotEmpty();\n        assertThat(message.getDataHandler().getContentType()).isEqualTo(\"text/html;charset=UTF-8\");\n    }", "url": "https://raw.githubusercontent.com/gardle/gardle-web/master/src/test/java/com/gardle/service/MailServiceIT.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 62836, "method_name": "testCreationEmail", "class_name": "MailServiceIT", "params": [], "throws": ["Exception"], "modifiers": ["public"], "return_type": "void", "snippet": "    public void testCreationEmail() throws Exception {\n        User user = new User();\n        user.setLangKey(Constants.DEFAULT_LANGUAGE);\n        user.setLogin(\"john\");\n        user.setEmail(\"john.doe@example.com\");\n        mailService.sendCreationEmail(user);\n        verify(javaMailSender).send(messageCaptor.capture());\n        MimeMessage message = messageCaptor.getValue();\n        assertThat(message.getAllRecipients()[0].toString()).isEqualTo(user.getEmail());\n        assertThat(message.getFrom()[0].toString()).isEqualTo(jHipsterProperties.getMail().getFrom());\n        assertThat(message.getContent().toString()).isNotEmpty();\n        assertThat(message.getDataHandler().getContentType()).isEqualTo(\"text/html;charset=UTF-8\");\n    }", "url": "https://raw.githubusercontent.com/gardle/gardle-web/master/src/test/java/com/gardle/service/MailServiceIT.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 62837, "method_name": "testSendPasswordResetMail", "class_name": "MailServiceIT", "params": [], "throws": ["Exception"], "modifiers": ["public"], "return_type": "void", "snippet": "    public void testSendPasswordResetMail() throws Exception {\n        User user = new User();\n        user.setLangKey(Constants.DEFAULT_LANGUAGE);\n        user.setLogin(\"john\");\n        user.setEmail(\"john.doe@example.com\");\n        mailService.sendPasswordResetMail(user);\n        verify(javaMailSender).send(messageCaptor.capture());\n        MimeMessage message = messageCaptor.getValue();\n        assertThat(message.getAllRecipients()[0].toString()).isEqualTo(user.getEmail());\n        assertThat(message.getFrom()[0].toString()).isEqualTo(jHipsterProperties.getMail().getFrom());\n        assertThat(message.getContent().toString()).isNotEmpty();\n        assertThat(message.getDataHandler().getContentType()).isEqualTo(\"text/html;charset=UTF-8\");\n    }", "url": "https://raw.githubusercontent.com/gardle/gardle-web/master/src/test/java/com/gardle/service/MailServiceIT.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 62838, "method_name": "testSendEmailWithException", "class_name": "MailServiceIT", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void testSendEmailWithException() {\n        doThrow(MailSendException.class).when(javaMailSender).send(any(MimeMessage.class));\n        mailService.sendEmail(\"john.doe@example.com\", \"testSubject\", \"testContent\", false, false);\n    }", "url": "https://raw.githubusercontent.com/gardle/gardle-web/master/src/test/java/com/gardle/service/MailServiceIT.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 62839, "method_name": "testSendLocalizedEmailForAllSupportedLanguages", "class_name": "MailServiceIT", "params": [], "throws": ["Exception"], "modifiers": ["public"], "return_type": "void", "snippet": "    public void testSendLocalizedEmailForAllSupportedLanguages() throws Exception {\n        User user = new User();\n        user.setLogin(\"john\");\n        user.setEmail(\"john.doe@example.com\");\n        for (String langKey : languages) {\n            user.setLangKey(langKey);\n            mailService.sendEmailFromTemplate(user, \"mail/testEmail\", \"email.test.title\");\n            verify(javaMailSender, atLeastOnce()).send(messageCaptor.capture());\n            MimeMessage message = messageCaptor.getValue();\n\n            String propertyFilePath = \"i18n/messages_\" + getJavaLocale(langKey) + \".properties\";\n            URL resource = this.getClass().getClassLoader().getResource(propertyFilePath);\n            File file = new File(new URI(Objects.requireNonNull(resource).getFile()).getPath());\n            Properties properties = new Properties();\n            properties.load(new InputStreamReader(new FileInputStream(file), StandardCharsets.UTF_8));\n\n            String emailTitle = (String) properties.get(\"email.test.title\");\n            assertThat(message.getSubject()).isEqualTo(emailTitle);\n            assertThat(message.getContent().toString()).isEqualToNormalizingNewlines(\"<html>\" + emailTitle + \", http://127.0.0.1:8080, john</html>\\n\");\n        }\n    }", "url": "https://raw.githubusercontent.com/gardle/gardle-web/master/src/test/java/com/gardle/service/MailServiceIT.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 62840, "method_name": "getJavaLocale", "class_name": "MailServiceIT", "params": ["String"], "throws": null, "modifiers": ["private"], "return_type": "String", "snippet": "    private String getJavaLocale(String langKey) {\n        String javaLangKey = langKey;\n        Matcher matcher2 = PATTERN_LOCALE_2.matcher(langKey);\n        if (matcher2.matches()) {\n            javaLangKey = matcher2.group(1) + \"_\" + matcher2.group(2).toUpperCase();\n        }\n        Matcher matcher3 = PATTERN_LOCALE_3.matcher(langKey);\n        if (matcher3.matches()) {\n            javaLangKey = matcher3.group(1) + \"_\" + matcher3.group(2) + \"_\" + matcher3.group(3).toUpperCase();\n        }\n        return javaLangKey;\n    }", "url": "https://raw.githubusercontent.com/gardle/gardle-web/master/src/test/java/com/gardle/service/MailServiceIT.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 62841, "method_name": "testGetDimension0", "class_name": "VectorTest", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void testGetDimension0() {\n        assertEquals(0, new Vector(0).getDimension());\n    }", "url": "https://raw.githubusercontent.com/mjtb49/LattiCG/master/test/randomreverser/math/component/VectorTest.java", "stars": "14", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 62842, "method_name": "testGetDimension3", "class_name": "VectorTest", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void testGetDimension3() {\n        assertEquals(3, new Vector(3).getDimension());\n    }", "url": "https://raw.githubusercontent.com/mjtb49/LattiCG/master/test/randomreverser/math/component/VectorTest.java", "stars": "14", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 62843, "method_name": "testGet", "class_name": "VectorTest", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void testGet() {\n        assertEquals(4, new Vector(1, 2, 3, 4, 5).get(3), 0);\n    }", "url": "https://raw.githubusercontent.com/mjtb49/LattiCG/master/test/randomreverser/math/component/VectorTest.java", "stars": "14", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 62844, "method_name": "testMagnitude", "class_name": "VectorTest", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void testMagnitude() {\n        assertEquals(5, new Vector(3, 4).magnitude(), 0.00000001);\n    }", "url": "https://raw.githubusercontent.com/mjtb49/LattiCG/master/test/randomreverser/math/component/VectorTest.java", "stars": "14", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 62845, "method_name": "testMagnitudeSq", "class_name": "VectorTest", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void testMagnitudeSq() {\n        assertEquals(55, new Vector(1, 2, 3, 4, 5).magnitudeSq(), 0);\n    }", "url": "https://raw.githubusercontent.com/mjtb49/LattiCG/master/test/randomreverser/math/component/VectorTest.java", "stars": "14", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 62846, "method_name": "testIsZeroTrue", "class_name": "VectorTest", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void testIsZeroTrue() {\n        assertTrue(new Vector(0, 0, 0, 0, 0).isZero());\n    }", "url": "https://raw.githubusercontent.com/mjtb49/LattiCG/master/test/randomreverser/math/component/VectorTest.java", "stars": "14", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 62847, "method_name": "testIsZeroFalse1", "class_name": "VectorTest", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void testIsZeroFalse1() {\n        assertFalse(new Vector(1, 2, 3, 4, 5).isZero());\n    }", "url": "https://raw.githubusercontent.com/mjtb49/LattiCG/master/test/randomreverser/math/component/VectorTest.java", "stars": "14", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 62848, "method_name": "testIsZeroFalse2", "class_name": "VectorTest", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void testIsZeroFalse2() {\n        assertFalse(new Vector(1, -1).isZero());\n    }", "url": "https://raw.githubusercontent.com/mjtb49/LattiCG/master/test/randomreverser/math/component/VectorTest.java", "stars": "14", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 62849, "method_name": "testAdd", "class_name": "VectorTest", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void testAdd() {\n        Vector a = new Vector(1, 2, 3, 4, 5);\n        Vector b = new Vector(5, 3, 6, -4, -1);\n        assertEquals(new Vector(6, 5, 9, 0, 4), a.add(b));\n        assertEquals(new Vector(1, 2, 3, 4, 5), a);\n    }", "url": "https://raw.githubusercontent.com/mjtb49/LattiCG/master/test/randomreverser/math/component/VectorTest.java", "stars": "14", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 62850, "method_name": "testAddFail", "class_name": "VectorTest", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void testAddFail() {\n        new Vector(1, 2).add(new Vector(3, 4, 5));\n    }", "url": "https://raw.githubusercontent.com/mjtb49/LattiCG/master/test/randomreverser/math/component/VectorTest.java", "stars": "14", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 62851, "method_name": "testSubtract", "class_name": "VectorTest", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void testSubtract() {\n        Vector a = new Vector(1, 2, 3, 4, 5);\n        Vector b = new Vector(-5, -3, -6, 4, 1);\n        assertEquals(new Vector(6, 5, 9, 0, 4), a.subtract(b));\n        assertEquals(new Vector(1, 2, 3, 4, 5), a);\n    }", "url": "https://raw.githubusercontent.com/mjtb49/LattiCG/master/test/randomreverser/math/component/VectorTest.java", "stars": "14", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 62852, "method_name": "testSubtractFail", "class_name": "VectorTest", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void testSubtractFail() {\n        new Vector(1, 2).subtract(new Vector(3, 4, 5));\n    }", "url": "https://raw.githubusercontent.com/mjtb49/LattiCG/master/test/randomreverser/math/component/VectorTest.java", "stars": "14", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 62853, "method_name": "testMultiplyScalar", "class_name": "VectorTest", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void testMultiplyScalar() {\n        Vector a = new Vector(1, 2, 3, 4, 5);\n        assertEquals(new Vector(2, 4, 6, 8, 10), a.multiply(2));\n        assertEquals(new Vector(1, 2, 3, 4, 5), a);\n    }", "url": "https://raw.githubusercontent.com/mjtb49/LattiCG/master/test/randomreverser/math/component/VectorTest.java", "stars": "14", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 62854, "method_name": "testMultiplyMatrix1", "class_name": "VectorTest", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void testMultiplyMatrix1() {\n        Vector a = new Vector(2, 3);\n        Matrix b = Matrix.fromString(\"{{5, 7}, {11, 13}}\");\n        assertEquals(new Vector(43, 53), a.multiply(b));\n        assertEquals(new Vector(2, 3), a);\n    }", "url": "https://raw.githubusercontent.com/mjtb49/LattiCG/master/test/randomreverser/math/component/VectorTest.java", "stars": "14", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 62855, "method_name": "testMultiplyMatrix2", "class_name": "VectorTest", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void testMultiplyMatrix2() {\n        Vector a = new Vector(2, 3, 5);\n        Matrix b = Matrix.fromString(\"{{7, 11}, {13, 17}, {19, 23}}\");\n        assertEquals(new Vector(148, 188), a.multiply(b));\n        assertEquals(new Vector(2, 3, 5), a);\n    }", "url": "https://raw.githubusercontent.com/mjtb49/LattiCG/master/test/randomreverser/math/component/VectorTest.java", "stars": "14", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 62856, "method_name": "testMultiplyMatrixFail", "class_name": "VectorTest", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void testMultiplyMatrixFail() {\n        Vector a = new Vector(2, 3, 5);\n        Matrix b = Matrix.fromString(\"{{7, 11, 13}, {17, 19, 23}}\");\n        a.multiply(b);\n    }", "url": "https://raw.githubusercontent.com/mjtb49/LattiCG/master/test/randomreverser/math/component/VectorTest.java", "stars": "14", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 62857, "method_name": "testDivide", "class_name": "VectorTest", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void testDivide() {\n        Vector a = new Vector(2, 4);\n        assertEquals(new Vector(1, 2), a.divide(2));\n        assertEquals(new Vector(2, 4), a);\n    }", "url": "https://raw.githubusercontent.com/mjtb49/LattiCG/master/test/randomreverser/math/component/VectorTest.java", "stars": "14", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 62858, "method_name": "testSwapNums", "class_name": "VectorTest", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void testSwapNums() {\n        Vector a = new Vector(1, 2, 3);\n        assertEquals(new Vector(1, 3, 2), a.swapNums(1, 2));\n        assertEquals(new Vector(1, 2, 3), a);\n    }", "url": "https://raw.githubusercontent.com/mjtb49/LattiCG/master/test/randomreverser/math/component/VectorTest.java", "stars": "14", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 62859, "method_name": "testAddEquals", "class_name": "VectorTest", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void testAddEquals() {\n        Vector a = new Vector(1, 2, 3, 4, 5);\n        Vector b = new Vector(5, 3, 6, -4, -1);\n        Vector result = a.addEquals(b);\n        assertSame(result, a);\n        assertEquals(new Vector(6, 5, 9, 0, 4), a);\n    }", "url": "https://raw.githubusercontent.com/mjtb49/LattiCG/master/test/randomreverser/math/component/VectorTest.java", "stars": "14", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 62860, "method_name": "testAddEqualsFail", "class_name": "VectorTest", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void testAddEqualsFail() {\n        new Vector(1, 2).addEquals(new Vector(3, 4, 5));\n    }", "url": "https://raw.githubusercontent.com/mjtb49/LattiCG/master/test/randomreverser/math/component/VectorTest.java", "stars": "14", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 62861, "method_name": "testSubtractEquals", "class_name": "VectorTest", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void testSubtractEquals() {\n        Vector a = new Vector(1, 2, 3, 4, 5);\n        Vector b = new Vector(-5, -3, -6, 4, 1);\n        Vector result = a.subtractEquals(b);\n        assertSame(result, a);\n        assertEquals(new Vector(6, 5, 9, 0, 4), a);\n    }", "url": "https://raw.githubusercontent.com/mjtb49/LattiCG/master/test/randomreverser/math/component/VectorTest.java", "stars": "14", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 62862, "method_name": "testSubtractEqualsFail", "class_name": "VectorTest", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void testSubtractEqualsFail() {\n        new Vector(1, 2).subtractEquals(new Vector(3, 4, 5));\n    }", "url": "https://raw.githubusercontent.com/mjtb49/LattiCG/master/test/randomreverser/math/component/VectorTest.java", "stars": "14", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 62863, "method_name": "testMultiplyEquals", "class_name": "VectorTest", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void testMultiplyEquals() {\n        Vector a = new Vector(1, 2, 3, 4, 5);\n        Vector result = a.multiplyEquals(2);\n        assertSame(result, a);\n        assertEquals(new Vector(2, 4, 6, 8, 10), a);\n    }", "url": "https://raw.githubusercontent.com/mjtb49/LattiCG/master/test/randomreverser/math/component/VectorTest.java", "stars": "14", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 62864, "method_name": "divideEquals", "class_name": "VectorTest", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void divideEquals() {\n        Vector a = new Vector(2, 4);\n        Vector result = a.divideEquals(2);\n        assertSame(result, a);\n        assertEquals(new Vector(1, 2), a);\n    }", "url": "https://raw.githubusercontent.com/mjtb49/LattiCG/master/test/randomreverser/math/component/VectorTest.java", "stars": "14", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 62865, "method_name": "testSwapNumsEquals", "class_name": "VectorTest", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void testSwapNumsEquals() {\n        Vector a = new Vector(1, 2, 3);\n        Vector result = a.swapNumsEquals(1, 2);\n        assertSame(result, a);\n        assertEquals(new Vector(1, 3, 2), a);\n    }", "url": "https://raw.githubusercontent.com/mjtb49/LattiCG/master/test/randomreverser/math/component/VectorTest.java", "stars": "14", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 62866, "method_name": "testDot", "class_name": "VectorTest", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void testDot() {\n        Vector a = new Vector(2, 3, 5);\n        Vector b = new Vector(7, 11, 13);\n        assertEquals(112, a.dot(b), 0);\n        assertEquals(112, b.dot(a), 0);\n    }", "url": "https://raw.githubusercontent.com/mjtb49/LattiCG/master/test/randomreverser/math/component/VectorTest.java", "stars": "14", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 62867, "method_name": "testDotFail", "class_name": "VectorTest", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void testDotFail() {\n        new Vector(1, 2).dot(new Vector(3, 4, 5));\n    }", "url": "https://raw.githubusercontent.com/mjtb49/LattiCG/master/test/randomreverser/math/component/VectorTest.java", "stars": "14", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 62868, "method_name": "testGramSchmidtCoefficient", "class_name": "VectorTest", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void testGramSchmidtCoefficient() {\n        Vector a = new Vector(7, 11, 13);\n        Vector b = new Vector(2, 3, 5);\n        assertEquals(56.0 / 19, a.gramSchmidtCoefficient(b), 0.00000001);\n    }", "url": "https://raw.githubusercontent.com/mjtb49/LattiCG/master/test/randomreverser/math/component/VectorTest.java", "stars": "14", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 62869, "method_name": "testGramSchmidtCoefficientFail", "class_name": "VectorTest", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void testGramSchmidtCoefficientFail() {\n        new Vector(1, 2).gramSchmidtCoefficient(new Vector(3, 4, 5));\n    }", "url": "https://raw.githubusercontent.com/mjtb49/LattiCG/master/test/randomreverser/math/component/VectorTest.java", "stars": "14", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 62870, "method_name": "testProjectOnto", "class_name": "VectorTest", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void testProjectOnto() {\n        Vector a = new Vector(7, 11, 13);\n        Vector b = new Vector(2, 3, 5);\n        assertTrue(new Vector(112.0 / 19, 168.0 / 19, 280.0 / 19).equals(a.projectOnto(b), 0.00000001));\n    }", "url": "https://raw.githubusercontent.com/mjtb49/LattiCG/master/test/randomreverser/math/component/VectorTest.java", "stars": "14", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 62871, "method_name": "testProjectOntoFail", "class_name": "VectorTest", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void testProjectOntoFail() {\n        new Vector(1, 2).projectOnto(new Vector(3, 4, 5));\n    }", "url": "https://raw.githubusercontent.com/mjtb49/LattiCG/master/test/randomreverser/math/component/VectorTest.java", "stars": "14", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 62872, "method_name": "testCopy", "class_name": "VectorTest", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void testCopy() {\n        Vector a = new Vector(1, 2, 3);\n        Vector b = a.copy();\n        assertNotSame(a, b);\n        assertEquals(a, b);\n    }", "url": "https://raw.githubusercontent.com/mjtb49/LattiCG/master/test/randomreverser/math/component/VectorTest.java", "stars": "14", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 62873, "method_name": "getJobConf", "class_name": "AbstractHadoopJob", "params": [], "throws": null, "modifiers": ["public"], "return_type": "JobConf", "snippet": "  public JobConf getJobConf() {\n    return jobconf;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-jobtype/src/main/java/com/webank/wedatasphere/schedulis/jobtype/javautils/AbstractHadoopJob.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 62874, "method_name": "getConf", "class_name": "AbstractHadoopJob", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Configuration", "snippet": "  public Configuration getConf() {\n    return conf;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-jobtype/src/main/java/com/webank/wedatasphere/schedulis/jobtype/javautils/AbstractHadoopJob.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 62875, "method_name": "getJobName", "class_name": "AbstractHadoopJob", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "  public String getJobName() {\n    return this.jobName;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-jobtype/src/main/java/com/webank/wedatasphere/schedulis/jobtype/javautils/AbstractHadoopJob.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 62876, "method_name": "run", "class_name": "AbstractHadoopJob", "params": [], "throws": ["Exception"], "modifiers": ["public"], "return_type": "void", "snippet": "  public void run() throws Exception {\n    JobConf conf = getJobConf();\n\n    if (System.getenv(HADOOP_TOKEN_FILE_LOCATION) != null) {\n      conf.set(MAPREDUCE_JOB_CREDENTIALS_BINARY,\n          System.getenv(HADOOP_TOKEN_FILE_LOCATION));\n    }\n\n    jobClient = new JobClient(conf);\n    runningJob = jobClient.submitJob(conf);\n    logger.info(\"See \" + runningJob.getTrackingURL() + \" for details.\");\n    jobClient.monitorAndPrintJob(conf, runningJob);\n\n    if (!runningJob.isSuccessful()) {\n      throw new Exception(\"Hadoop job:\" + getJobName() + \" failed!\");\n    }\n\n    // dump all counters\n    Counters counters = runningJob.getCounters();\n    for (String groupName : counters.getGroupNames()) {\n      Counters.Group group = counters.getGroup(groupName);\n      logger.info(\"Group: \" + group.getDisplayName());\n      for (Counter counter : group)\n        logger.info(counter.getDisplayName() + \":\\t\" + counter.getValue());\n    }\n    updateMapReduceJobState(conf);\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-jobtype/src/main/java/com/webank/wedatasphere/schedulis/jobtype/javautils/AbstractHadoopJob.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 62877, "method_name": "createJobConf", "class_name": "AbstractHadoopJob", "params": ["Class<Mapper>"], "throws": ["IOException", "URISyntaxException"], "modifiers": ["public"], "return_type": "JobConf", "snippet": "  public JobConf createJobConf(Class<? extends Mapper> mapperClass)\n      throws IOException, URISyntaxException {\n    JobConf conf = createJobConf(mapperClass, null);\n    conf.setNumReduceTasks(0);\n    return conf;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-jobtype/src/main/java/com/webank/wedatasphere/schedulis/jobtype/javautils/AbstractHadoopJob.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 62878, "method_name": "createJobConf", "class_name": "AbstractHadoopJob", "params": ["Class<Mapper>", "Class<Reducer>", "Class<Reducer>"], "throws": ["IOException", "URISyntaxException"], "modifiers": ["public"], "return_type": "JobConf", "snippet": "  public JobConf createJobConf(Class<? extends Mapper> mapperClass,\n      Class<? extends Reducer> reducerClass,\n      Class<? extends Reducer> combinerClass) throws IOException,\n      URISyntaxException {\n    JobConf conf = createJobConf(mapperClass, reducerClass);\n    conf.setCombinerClass(combinerClass);\n    return conf;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-jobtype/src/main/java/com/webank/wedatasphere/schedulis/jobtype/javautils/AbstractHadoopJob.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 62879, "method_name": "createJobConf", "class_name": "AbstractHadoopJob", "params": ["Class<Mapper>", "Class<Reducer>"], "throws": ["IOException", "URISyntaxException"], "modifiers": ["public"], "return_type": "JobConf", "snippet": "  public JobConf createJobConf(Class<? extends Mapper> mapperClass,\n      Class<? extends Reducer> reducerClass) throws IOException,\n      URISyntaxException {\n    JobConf conf = new JobConf();\n    // set custom class loader with custom find resource strategy.\n\n    conf.setJobName(getJobName());\n    conf.setMapperClass(mapperClass);\n    if (reducerClass != null) {\n      conf.setReducerClass(reducerClass);\n    }\n\n    if (props.getBoolean(\"is.local\", false)) {\n      conf.set(\"mapred.job.tracker\", \"local\");\n      conf.set(\"fs.default.name\", \"file:///\");\n      conf.set(\"mapred.local.dir\", \"/tmp/map-red\");\n\n      logger.info(\"Running locally, no hadoop jar set.\");\n    } else {\n      HadoopUtils.setClassLoaderAndJar(conf, getClass());\n      logger.info(\"Setting hadoop jar file for class:\" + getClass()\n          + \"  to \" + conf.getJar());\n      logger.info(\"*************************************************************************\");\n      logger.info(\"          Running on Real Hadoop Cluster(\"\n          + conf.get(\"mapred.job.tracker\") + \")           \");\n      logger.info(\"*************************************************************************\");\n    }\n\n    // set JVM options if present\n    if (props.containsKey(\"mapred.child.java.opts\")) {\n      conf.set(\"mapred.child.java.opts\",\n          props.getString(\"mapred.child.java.opts\"));\n      logger.info(\"mapred.child.java.opts set to \"\n          + props.getString(\"mapred.child.java.opts\"));\n    }\n\n    // set input and output paths if they are present\n    if (props.containsKey(\"input.paths\")) {\n      List<String> inputPaths = props.getStringList(\"input.paths\");\n      if (inputPaths.size() == 0)\n        throw new IllegalArgumentException(\n            \"Must specify at least one value for property 'input.paths'\");\n      for (String path : inputPaths) {\n        HadoopUtils.addAllSubPaths(conf, new Path(path));\n      }\n    }\n\n    if (props.containsKey(\"output.path\")) {\n      String location = props.get(\"output.path\");\n      FileOutputFormat.setOutputPath(conf, new Path(location));\n\n      // For testing purpose only remove output file if exists\n      if (props.getBoolean(\"force.output.overwrite\", false)) {\n        FileSystem fs =\n            FileOutputFormat.getOutputPath(conf).getFileSystem(conf);\n        fs.delete(FileOutputFormat.getOutputPath(conf), true);\n      }\n    }\n\n    // Adds External jars to hadoop classpath\n    String externalJarList = props.getString(\"hadoop.external.jarFiles\", null);\n    if (externalJarList != null) {\n      FileSystem fs = FileSystem.get(conf);\n      String[] jarFiles = externalJarList.split(\",\");\n      for (String jarFile : jarFiles) {\n        logger.info(\"Adding extenral jar File:\" + jarFile);\n        DistributedCache.addFileToClassPath(new Path(jarFile), conf, fs);\n      }\n    }\n\n    // Adds distributed cache files\n    String cacheFileList = props.getString(\"hadoop.cache.files\", null);\n    if (cacheFileList != null) {\n      String[] cacheFiles = cacheFileList.split(\",\");\n      for (String cacheFile : cacheFiles) {\n        logger.info(\"Adding Distributed Cache File:\" + cacheFile);\n        DistributedCache.addCacheFile(new URI(cacheFile), conf);\n      }\n    }\n\n    // Adds distributed cache files\n    String archiveFileList = props.getString(\"hadoop.cache.archives\", null);\n    if (archiveFileList != null) {\n      String[] archiveFiles = archiveFileList.split(\",\");\n      for (String archiveFile : archiveFiles) {\n        logger.info(\"Adding Distributed Cache Archive File:\" + archiveFile);\n        DistributedCache.addCacheArchive(new URI(archiveFile), conf);\n      }\n    }\n\n    String hadoopCacheJarDir =\n        props.getString(\"hdfs.default.classpath.dir\", null);\n    if (hadoopCacheJarDir != null) {\n      FileSystem fs = FileSystem.get(conf);\n      if (fs != null) {\n        FileStatus[] status = fs.listStatus(new Path(hadoopCacheJarDir));\n\n        if (status != null) {\n          for (int i = 0; i < status.length; ++i) {\n            if (!status[i].isDir()) {\n              Path path =\n                  new Path(hadoopCacheJarDir, status[i].getPath().getName());\n              logger.info(\"Adding Jar to Distributed Cache Archive File:\"\n                  + path);\n\n              DistributedCache.addFileToClassPath(path, conf, fs);\n            }\n          }\n        } else {\n          logger.info(\"hdfs.default.classpath.dir \" + hadoopCacheJarDir\n              + \" is empty.\");\n        }\n      } else {\n        logger.info(\"hdfs.default.classpath.dir \" + hadoopCacheJarDir\n            + \" filesystem doesn't exist\");\n      }\n    }\n\n    for (String key : getProps().getKeySet()) {\n      String lowerCase = key.toLowerCase();\n      if (lowerCase.startsWith(HADOOP_PREFIX)) {\n        String newKey = key.substring(HADOOP_PREFIX.length());\n        conf.set(newKey, getProps().get(key));\n      }\n    }\n\n    HadoopUtils.setPropsInJob(conf, getProps());\n\n    // put in tokens\n    if (System.getenv(HADOOP_TOKEN_FILE_LOCATION) != null) {\n      conf.set(MAPREDUCE_JOB_CREDENTIALS_BINARY,\n          System.getenv(HADOOP_TOKEN_FILE_LOCATION));\n    }\n\n    return conf;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-jobtype/src/main/java/com/webank/wedatasphere/schedulis/jobtype/javautils/AbstractHadoopJob.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 62880, "method_name": "getProps", "class_name": "AbstractHadoopJob", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Props", "snippet": "  public Props getProps() {\n    return this.props;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-jobtype/src/main/java/com/webank/wedatasphere/schedulis/jobtype/javautils/AbstractHadoopJob.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 62881, "method_name": "cancel", "class_name": "AbstractHadoopJob", "params": [], "throws": ["Exception"], "modifiers": ["public"], "return_type": "void", "snippet": "  public void cancel() throws Exception {\n    if (runningJob != null) {\n      runningJob.killJob();\n    }\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-jobtype/src/main/java/com/webank/wedatasphere/schedulis/jobtype/javautils/AbstractHadoopJob.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 62882, "method_name": "updateMapReduceJobState", "class_name": "AbstractHadoopJob", "params": ["JobConf"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "  private void updateMapReduceJobState(JobConf jobConf) {\n    if (runningJob == null || visualizer == false) {\n      return;\n    }\n\n    try {\n      JobID jobId = runningJob.getID();\n      TaskReport[] mapTaskReport = jobClient.getMapTaskReports(jobId);\n      TaskReport[] reduceTaskReport = jobClient.getReduceTaskReports(jobId);\n      mapReduceJobState =\n          new MapReduceJobState(runningJob, mapTaskReport, reduceTaskReport);\n      writeMapReduceJobState(jobConf);\n    } catch (IOException e) {\n      logger.error(\"Cannot update MapReduceJobState\");\n    }\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-jobtype/src/main/java/com/webank/wedatasphere/schedulis/jobtype/javautils/AbstractHadoopJob.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 62883, "method_name": "statsToJson", "class_name": "AbstractHadoopJob", "params": ["JobConf"], "throws": null, "modifiers": ["private"], "return_type": "Object", "snippet": "  private Object statsToJson(JobConf jobConf) {\n    List<Object> jsonObj = new ArrayList<Object>();\n    Map<String, Object> jobJsonObj = new HashMap<String, Object>();\n    Properties conf = StatsUtils.getJobConf(jobConf);\n    jobJsonObj.put(\"state\", mapReduceJobState.toJson());\n    jobJsonObj.put(\"conf\", StatsUtils.propertiesToJson(conf));\n    jsonObj.add(jobJsonObj);\n    return jsonObj;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-jobtype/src/main/java/com/webank/wedatasphere/schedulis/jobtype/javautils/AbstractHadoopJob.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 62884, "method_name": "writeMapReduceJobState", "class_name": "AbstractHadoopJob", "params": ["JobConf"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "  private void writeMapReduceJobState(JobConf jobConf) {\n    File mrStateFile = null;\n    try {\n      mrStateFile = new File(jobStatsFileName);\n      JSONUtils.toJSON(statsToJson(jobConf), mrStateFile);\n    } catch (Exception e) {\n      logger.error(\"Cannot write JSON file.\");\n    }\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-jobtype/src/main/java/com/webank/wedatasphere/schedulis/jobtype/javautils/AbstractHadoopJob.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 62885, "method_name": "getProgress", "class_name": "AbstractHadoopJob", "params": [], "throws": ["IOException"], "modifiers": ["public"], "return_type": "double", "snippet": "  public double getProgress() throws IOException {\n    if (runningJob == null) {\n      return 0.0;\n    }\n    return (double) (runningJob.mapProgress() + runningJob.reduceProgress()) / 2.0d;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-jobtype/src/main/java/com/webank/wedatasphere/schedulis/jobtype/javautils/AbstractHadoopJob.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 62886, "method_name": "getCounters", "class_name": "AbstractHadoopJob", "params": [], "throws": ["IOException"], "modifiers": ["public"], "return_type": "Counters", "snippet": "  public Counters getCounters() throws IOException {\n    return runningJob.getCounters();\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-jobtype/src/main/java/com/webank/wedatasphere/schedulis/jobtype/javautils/AbstractHadoopJob.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 62887, "method_name": "parse", "class_name": "PropertyParser", "params": ["String", "Properties"], "throws": null, "modifiers": ["public", "static"], "return_type": "String", "snippet": "  public static String parse(String string, Properties variables) {\n    VariableTokenHandler handler = new VariableTokenHandler(variables);\n    GenericTokenParser parser = new GenericTokenParser(\"${\", \"}\", handler);\n    return parser.parse(string);\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/parsing/PropertyParser.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 62888, "method_name": "getPropertyValue", "class_name": "VariableTokenHandler", "params": ["String", "String"], "throws": null, "modifiers": ["private"], "return_type": "String", "snippet": "    private String getPropertyValue(String key, String defaultValue) {\n      return (variables == null) ? defaultValue : variables.getProperty(key, defaultValue);\n    }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/parsing/PropertyParser.java", "stars": "15", "class_props": {"extends": null, "implements": ["TokenHandler"], "modifiers": ["static", "private"]}}, {"id": 62889, "method_name": "handleToken", "class_name": "VariableTokenHandler", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String handleToken(String content) {\n      if (variables != null) {\n        String key = content;\n        if (enableDefaultValue) {\n          final int separatorIndex = content.indexOf(defaultValueSeparator);\n          String defaultValue = null;\n          if (separatorIndex >= 0) {\n            key = content.substring(0, separatorIndex);\n            defaultValue = content.substring(separatorIndex + defaultValueSeparator.length());\n          }\n          if (defaultValue != null) {\n            return variables.getProperty(key, defaultValue);\n          }\n        }\n        if (variables.containsKey(key)) {\n          return variables.getProperty(key);\n        }\n      }\n      return \"${\" + content + \"}\";\n    }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/parsing/PropertyParser.java", "stars": "15", "class_props": {"extends": null, "implements": ["TokenHandler"], "modifiers": ["static", "private"]}}, {"id": 62890, "method_name": "uploadFile", "class_name": "QiniuServiceTest", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "    void uploadFile() {\n        File file = new File(\"F:\\\\idea\\\\rent-house\\\\tmp\\\\test.jpg\");\n        Assert.isTrue(file.exists(), \"\u6587\u4ef6\u4e0d\u5b58\u5728\");\n\n        try {\n            Response response = qiniuService.uploadFile(file);\n            Assert.isTrue(response.isOK(), \"\u6587\u4ef6\u4e0a\u4f20\u5931\u8d25\");\n        } catch (QiniuException e) {\n            e.printStackTrace();\n            Assert.isTrue(false, \"\u6587\u4ef6\u4e0a\u4f20\u5931\u8d25\");\n        }\n    }", "url": "https://raw.githubusercontent.com/harry-xqb/rent-house/master/src/test/java/com/harry/renthouse/service/house/QiniuServiceTest.java", "stars": "3", "class_props": {"extends": "RentHouseApplicationTests", "implements": null, "modifiers": []}}, {"id": 62891, "method_name": "testUploadFile", "class_name": "QiniuServiceTest", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "    void testUploadFile() {\n        try {\n            Response resp = qiniuService.deleteFile(\"Fox8sEemX6ibXvjNGoX4grYSiHJ4\");\n            Assert.isTrue(resp.isOK(), \"\u6587\u4ef6\u5220\u9664\u5931\u8d25\");\n        } catch (QiniuException e) {\n            e.printStackTrace();\n        }\n    }", "url": "https://raw.githubusercontent.com/harry-xqb/rent-house/master/src/test/java/com/harry/renthouse/service/house/QiniuServiceTest.java", "stars": "3", "class_props": {"extends": "RentHouseApplicationTests", "implements": null, "modifiers": []}}, {"id": 62892, "method_name": "deleteFile", "class_name": "QiniuServiceTest", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "    void deleteFile() {\n    }", "url": "https://raw.githubusercontent.com/harry-xqb/rent-house/master/src/test/java/com/harry/renthouse/service/house/QiniuServiceTest.java", "stars": "3", "class_props": {"extends": "RentHouseApplicationTests", "implements": null, "modifiers": []}}, {"id": 62893, "method_name": "close", "class_name": "FileManager", "params": [], "throws": ["IOException"], "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void close() throws IOException {\n\t\twriter.close();\n\t}", "url": "https://raw.githubusercontent.com/Luke-Grammer/IMDB-Database-Application/master/src/file/FileManager.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 62894, "method_name": "writeToFile", "class_name": "FileManager", "params": ["String"], "throws": ["IOException"], "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void writeToFile(String string) throws IOException {\n\t\twriter.write(string);\n\t}", "url": "https://raw.githubusercontent.com/Luke-Grammer/IMDB-Database-Application/master/src/file/FileManager.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 62895, "method_name": "main", "class_name": "ArraySort", "params": ["String"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "\tpublic static void main(String[] args) {\n\t\tint[] ns = { 28, 12, 89, 73, 65, 18, 96, 50, 8, 36 };\n\t\t// \u6392\u5e8f\u524d:\n\t\tSystem.out.println(Arrays.toString(ns));\n\t\t// TODO:\n\t\tfor (int i = 0; i < ns.length - 1; i++) {\n            for (int j = 0; j < ns.length - i - 1; j++) {\n                if (ns[j] < ns[j+1]) {\n                    // \u4ea4\u6362ns[j]\u548cns[j+1]:\n                    int tmp = ns[j];\n                    ns[j] = ns[j+1];\n                    ns[j+1] = tmp;\n                }\n            }\n        }\n\t\t// \u6392\u5e8f\u540e:\n\t\tSystem.out.println(Arrays.toString(ns));\n\t\tif (Arrays.toString(ns).equals(\"[96, 89, 73, 65, 50, 36, 28, 18, 12, 8]\")) {\n\t\t\tSystem.out.println(\"\u6d4b\u8bd5\u6210\u529f\");\n\t\t} else {\n\t\t\tSystem.out.println(\"\u6d4b\u8bd5\u5931\u8d25\");\n\t\t}\n\t}", "url": "https://raw.githubusercontent.com/IzzyPrime/JavaWorkspace/master/JavaPractice/part1/src/com/array/javapractice/ArraySort.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 62896, "method_name": "getUsername", "class_name": "ExecSysUser", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getUsername() {\n        return username;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/common/src/main/java/com/webank/wedatasphere/exchangis/executor/domain/ExecSysUser.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 62897, "method_name": "setUsername", "class_name": "ExecSysUser", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setUsername(String username) {\n        this.username = username;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/common/src/main/java/com/webank/wedatasphere/exchangis/executor/domain/ExecSysUser.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 62898, "method_name": "getUid", "class_name": "ExecSysUser", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Integer", "snippet": "    public Integer getUid() {\n        return uid;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/common/src/main/java/com/webank/wedatasphere/exchangis/executor/domain/ExecSysUser.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 62899, "method_name": "setUid", "class_name": "ExecSysUser", "params": ["Integer"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setUid(Integer uid) {\n        this.uid = uid;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/common/src/main/java/com/webank/wedatasphere/exchangis/executor/domain/ExecSysUser.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 62900, "method_name": "getGid", "class_name": "ExecSysUser", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Integer", "snippet": "    public Integer getGid() {\n        return gid;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/common/src/main/java/com/webank/wedatasphere/exchangis/executor/domain/ExecSysUser.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 62901, "method_name": "setGid", "class_name": "ExecSysUser", "params": ["Integer"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setGid(Integer gid) {\n        this.gid = gid;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/common/src/main/java/com/webank/wedatasphere/exchangis/executor/domain/ExecSysUser.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 62902, "method_name": "setUp", "class_name": "InvalidNamedConstructorArgsTest", "params": [], "throws": ["Exception"], "modifiers": ["static"], "return_type": "void", "snippet": "  static void setUp() throws Exception {\n    // create an SqlSessionFactory\n    try (Reader reader = Resources.getResourceAsReader(\n        \"org/apache/ibatis/submitted/named_constructor_args/mybatis-config.xml\")) {\n      sqlSessionFactory = new SqlSessionFactoryBuilder().build(reader);\n    }\n\n    // populate in-memory database\n    BaseDataTest.runScript(sqlSessionFactory.getConfiguration().getEnvironment().getDataSource(),\n            \"org/apache/ibatis/submitted/named_constructor_args/CreateDB.sql\");\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/named_constructor_args/InvalidNamedConstructorArgsTest.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 62903, "method_name": "noMatchingConstructorArgName", "class_name": "InvalidNamedConstructorArgsTest", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "  void noMatchingConstructorArgName() {\n    Configuration configuration = sqlSessionFactory.getConfiguration();\n    when(() -> configuration.addMapper(NoMatchingConstructorMapper.class));\n\n    then(caughtException()).isInstanceOf(BuilderException.class)\n      .hasMessageContaining(\n          \"'org.apache.ibatis.submitted.named_constructor_args.InvalidNamedConstructorArgsTest$NoMatchingConstructorMapper.select-void'\")\n      .hasMessageContaining(\"'org.apache.ibatis.submitted.named_constructor_args.User'\")\n      .hasMessageContaining(\"[noSuchConstructorArg]\");\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/named_constructor_args/InvalidNamedConstructorArgsTest.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 62904, "method_name": "wrongJavaType", "class_name": "InvalidNamedConstructorArgsTest", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "  void wrongJavaType() {\n    Configuration configuration = sqlSessionFactory.getConfiguration();\n    when(() -> configuration.addMapper(ConstructorWithWrongJavaType.class));\n    then(caughtException()).isInstanceOf(BuilderException.class)\n      .hasMessageContaining(\n          \"'org.apache.ibatis.submitted.named_constructor_args.InvalidNamedConstructorArgsTest$ConstructorWithWrongJavaType.select-void'\")\n      .hasMessageContaining(\"'org.apache.ibatis.submitted.named_constructor_args.User'\")\n      .hasMessageContaining(\"[id]\");\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/named_constructor_args/InvalidNamedConstructorArgsTest.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 62905, "method_name": "missingRequiredJavaType", "class_name": "InvalidNamedConstructorArgsTest", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "  void missingRequiredJavaType() {\n    Configuration configuration = sqlSessionFactory.getConfiguration();\n    when(() -> configuration.addMapper(ConstructorMissingRequiresJavaType.class));\n    then(caughtException()).isInstanceOf(BuilderException.class)\n      .hasMessageContaining(\n            \"'org.apache.ibatis.submitted.named_constructor_args.InvalidNamedConstructorArgsTest$ConstructorMissingRequiresJavaType.select-void'\")\n      .hasMessageContaining(\"'org.apache.ibatis.submitted.named_constructor_args.User'\")\n      .hasMessageContaining(\"[id]\");\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/named_constructor_args/InvalidNamedConstructorArgsTest.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 62906, "method_name": "getId", "class_name": "BookAuthor", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Long", "snippet": "    public Long getId() {\n        return id;\n    }", "url": "https://raw.githubusercontent.com/201206030/novel-plus/master/novel-common/src/main/java/com/java2nb/novel/entity/BookAuthor.java", "stars": "137", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 62907, "method_name": "setId", "class_name": "BookAuthor", "params": ["Long"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setId(Long id) {\n        this.id = id;\n    }", "url": "https://raw.githubusercontent.com/201206030/novel-plus/master/novel-common/src/main/java/com/java2nb/novel/entity/BookAuthor.java", "stars": "137", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 62908, "method_name": "getInviteCode", "class_name": "BookAuthor", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getInviteCode() {\n        return inviteCode;\n    }", "url": "https://raw.githubusercontent.com/201206030/novel-plus/master/novel-common/src/main/java/com/java2nb/novel/entity/BookAuthor.java", "stars": "137", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 62909, "method_name": "setInviteCode", "class_name": "BookAuthor", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setInviteCode(String inviteCode) {\n        this.inviteCode = inviteCode == null ? null : inviteCode.trim();\n    }", "url": "https://raw.githubusercontent.com/201206030/novel-plus/master/novel-common/src/main/java/com/java2nb/novel/entity/BookAuthor.java", "stars": "137", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 62910, "method_name": "getPenName", "class_name": "BookAuthor", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getPenName() {\n        return penName;\n    }", "url": "https://raw.githubusercontent.com/201206030/novel-plus/master/novel-common/src/main/java/com/java2nb/novel/entity/BookAuthor.java", "stars": "137", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 62911, "method_name": "setPenName", "class_name": "BookAuthor", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setPenName(String penName) {\n        this.penName = penName == null ? null : penName.trim();\n    }", "url": "https://raw.githubusercontent.com/201206030/novel-plus/master/novel-common/src/main/java/com/java2nb/novel/entity/BookAuthor.java", "stars": "137", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 62912, "method_name": "getTelPhone", "class_name": "BookAuthor", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getTelPhone() {\n        return telPhone;\n    }", "url": "https://raw.githubusercontent.com/201206030/novel-plus/master/novel-common/src/main/java/com/java2nb/novel/entity/BookAuthor.java", "stars": "137", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 62913, "method_name": "setTelPhone", "class_name": "BookAuthor", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setTelPhone(String telPhone) {\n        this.telPhone = telPhone == null ? null : telPhone.trim();\n    }", "url": "https://raw.githubusercontent.com/201206030/novel-plus/master/novel-common/src/main/java/com/java2nb/novel/entity/BookAuthor.java", "stars": "137", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 62914, "method_name": "getChatAccount", "class_name": "BookAuthor", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getChatAccount() {\n        return chatAccount;\n    }", "url": "https://raw.githubusercontent.com/201206030/novel-plus/master/novel-common/src/main/java/com/java2nb/novel/entity/BookAuthor.java", "stars": "137", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 62915, "method_name": "setChatAccount", "class_name": "BookAuthor", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setChatAccount(String chatAccount) {\n        this.chatAccount = chatAccount == null ? null : chatAccount.trim();\n    }", "url": "https://raw.githubusercontent.com/201206030/novel-plus/master/novel-common/src/main/java/com/java2nb/novel/entity/BookAuthor.java", "stars": "137", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 62916, "method_name": "getEmail", "class_name": "BookAuthor", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getEmail() {\n        return email;\n    }", "url": "https://raw.githubusercontent.com/201206030/novel-plus/master/novel-common/src/main/java/com/java2nb/novel/entity/BookAuthor.java", "stars": "137", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 62917, "method_name": "setEmail", "class_name": "BookAuthor", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setEmail(String email) {\n        this.email = email == null ? null : email.trim();\n    }", "url": "https://raw.githubusercontent.com/201206030/novel-plus/master/novel-common/src/main/java/com/java2nb/novel/entity/BookAuthor.java", "stars": "137", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 62918, "method_name": "getWorkDirection", "class_name": "BookAuthor", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Byte", "snippet": "    public Byte getWorkDirection() {\n        return workDirection;\n    }", "url": "https://raw.githubusercontent.com/201206030/novel-plus/master/novel-common/src/main/java/com/java2nb/novel/entity/BookAuthor.java", "stars": "137", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 62919, "method_name": "setWorkDirection", "class_name": "BookAuthor", "params": ["Byte"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setWorkDirection(Byte workDirection) {\n        this.workDirection = workDirection;\n    }", "url": "https://raw.githubusercontent.com/201206030/novel-plus/master/novel-common/src/main/java/com/java2nb/novel/entity/BookAuthor.java", "stars": "137", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 62920, "method_name": "getStatus", "class_name": "BookAuthor", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Byte", "snippet": "    public Byte getStatus() {\n        return status;\n    }", "url": "https://raw.githubusercontent.com/201206030/novel-plus/master/novel-common/src/main/java/com/java2nb/novel/entity/BookAuthor.java", "stars": "137", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 62921, "method_name": "setStatus", "class_name": "BookAuthor", "params": ["Byte"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setStatus(Byte status) {\n        this.status = status;\n    }", "url": "https://raw.githubusercontent.com/201206030/novel-plus/master/novel-common/src/main/java/com/java2nb/novel/entity/BookAuthor.java", "stars": "137", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 62922, "method_name": "getCreateTime", "class_name": "BookAuthor", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Date", "snippet": "    public Date getCreateTime() {\n        return createTime;\n    }", "url": "https://raw.githubusercontent.com/201206030/novel-plus/master/novel-common/src/main/java/com/java2nb/novel/entity/BookAuthor.java", "stars": "137", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 62923, "method_name": "setCreateTime", "class_name": "BookAuthor", "params": ["Date"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setCreateTime(Date createTime) {\n        this.createTime = createTime;\n    }", "url": "https://raw.githubusercontent.com/201206030/novel-plus/master/novel-common/src/main/java/com/java2nb/novel/entity/BookAuthor.java", "stars": "137", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 62924, "method_name": "getCreateUserId", "class_name": "BookAuthor", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Long", "snippet": "    public Long getCreateUserId() {\n        return createUserId;\n    }", "url": "https://raw.githubusercontent.com/201206030/novel-plus/master/novel-common/src/main/java/com/java2nb/novel/entity/BookAuthor.java", "stars": "137", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 62925, "method_name": "setCreateUserId", "class_name": "BookAuthor", "params": ["Long"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setCreateUserId(Long createUserId) {\n        this.createUserId = createUserId;\n    }", "url": "https://raw.githubusercontent.com/201206030/novel-plus/master/novel-common/src/main/java/com/java2nb/novel/entity/BookAuthor.java", "stars": "137", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 62926, "method_name": "getUpdateTime", "class_name": "BookAuthor", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Date", "snippet": "    public Date getUpdateTime() {\n        return updateTime;\n    }", "url": "https://raw.githubusercontent.com/201206030/novel-plus/master/novel-common/src/main/java/com/java2nb/novel/entity/BookAuthor.java", "stars": "137", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 62927, "method_name": "setUpdateTime", "class_name": "BookAuthor", "params": ["Date"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setUpdateTime(Date updateTime) {\n        this.updateTime = updateTime;\n    }", "url": "https://raw.githubusercontent.com/201206030/novel-plus/master/novel-common/src/main/java/com/java2nb/novel/entity/BookAuthor.java", "stars": "137", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 62928, "method_name": "getUpdateUserId", "class_name": "BookAuthor", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Long", "snippet": "    public Long getUpdateUserId() {\n        return updateUserId;\n    }", "url": "https://raw.githubusercontent.com/201206030/novel-plus/master/novel-common/src/main/java/com/java2nb/novel/entity/BookAuthor.java", "stars": "137", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 62929, "method_name": "setUpdateUserId", "class_name": "BookAuthor", "params": ["Long"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setUpdateUserId(Long updateUserId) {\n        this.updateUserId = updateUserId;\n    }", "url": "https://raw.githubusercontent.com/201206030/novel-plus/master/novel-common/src/main/java/com/java2nb/novel/entity/BookAuthor.java", "stars": "137", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 62930, "method_name": "createFlowLoader", "class_name": "FlowLoaderFactory", "params": ["File"], "throws": ["ProjectManagerException"], "modifiers": ["public"], "return_type": "FlowLoader", "snippet": "  public FlowLoader createFlowLoader(final File projectDir) throws ProjectManagerException {\n    if (checkForValidProjectYamlFile(projectDir)) {\n      return new DirectoryYamlFlowLoader(this.props);\n    } else {\n      return new DirectoryFlowLoader(this.props);\n    }\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/project/FlowLoaderFactory.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 62931, "method_name": "checkForValidProjectYamlFile", "class_name": "FlowLoaderFactory", "params": ["File"], "throws": ["ProjectManagerException"], "modifiers": ["private"], "return_type": "boolean", "snippet": "  private boolean checkForValidProjectYamlFile(final File projectDir) throws\n      ProjectManagerException {\n    final File[] projectFileList = projectDir.listFiles(new SuffixFilter(Constants\n        .PROJECT_FILE_SUFFIX));\n\n    if (projectFileList == null) {\n      throw new ProjectManagerException(\"Error reading project directory. Input is not a \"\n          + \"directory or IO error happens.\");\n    }\n\n    if (ArrayUtils.isNotEmpty(projectFileList)) {\n      if (projectFileList.length > 1) {\n        throw new ProjectManagerException(\"Duplicate project YAML files found in the project \"\n            + \"directory. Only one is allowed.\");\n      }\n\n      final Map<String, Object> azkabanProject;\n      try (FileInputStream fis = new FileInputStream(projectFileList[0])) {\n        azkabanProject = (Map<String, Object>) new Yaml().load(fis);\n      } catch (final IOException e) {\n        throw new ProjectManagerException(\"Error reading project YAML file.\", e);\n      }\n\n      if (azkabanProject == null || !azkabanProject\n          .containsKey(Constants.ConfigurationKeys.AZKABAN_FLOW_VERSION)) {\n        throw new ProjectManagerException(\"azkaban-flow-version is not specified in the project \"\n            + \"YAML file.\");\n      }\n\n      if (azkabanProject.get(Constants.ConfigurationKeys.AZKABAN_FLOW_VERSION).equals\n          (Constants.AZKABAN_FLOW_VERSION_2_0)) {\n        return true;\n      } else {\n        throw new ProjectManagerException(\"Invalid azkaban-flow-version in the project YAML file.\");\n      }\n    } else {\n      for (final File file : projectDir.listFiles(new DirFilter())) {\n        if (checkForValidProjectYamlFile(file)) {\n          return true;\n        }\n      }\n      return false;\n    }\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/project/FlowLoaderFactory.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 62932, "method_name": "getApplications", "class_name": "ApplicationsList", "params": [], "throws": null, "modifiers": ["public"], "return_type": "List<ApplicationInfo>", "snippet": "\tpublic List<ApplicationInfo> getApplications() {\n\t\treturn applications;\n\t}", "url": "https://raw.githubusercontent.com/DP-3T/dp3t-sdk-android/master-alpha/dp3t-sdk/sdk/src/main/java/org/dpppt/android/sdk/internal/backend/models/ApplicationsList.java", "stars": "139", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 62933, "method_name": "setDefaultEnumTypeHandler", "class_name": "TypeHandlerRegistry", "params": ["Class<TypeHandler>"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void setDefaultEnumTypeHandler(Class<? extends TypeHandler> typeHandler) {\n    this.defaultEnumTypeHandler = typeHandler;\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/type/TypeHandlerRegistry.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["final", "public"]}}, {"id": 62934, "method_name": "hasTypeHandler", "class_name": "TypeHandlerRegistry", "params": ["Class<?>"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "  public boolean hasTypeHandler(Class<?> javaType) {\n    return hasTypeHandler(javaType, null);\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/type/TypeHandlerRegistry.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["final", "public"]}}, {"id": 62935, "method_name": "hasTypeHandler", "class_name": "TypeHandlerRegistry", "params": ["TypeReference<?>"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "  public boolean hasTypeHandler(TypeReference<?> javaTypeReference) {\n    return hasTypeHandler(javaTypeReference, null);\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/type/TypeHandlerRegistry.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["final", "public"]}}, {"id": 62936, "method_name": "hasTypeHandler", "class_name": "TypeHandlerRegistry", "params": ["Class<?>", "JdbcType"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "  public boolean hasTypeHandler(Class<?> javaType, JdbcType jdbcType) {\n    return javaType != null && getTypeHandler((Type) javaType, jdbcType) != null;\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/type/TypeHandlerRegistry.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["final", "public"]}}, {"id": 62937, "method_name": "hasTypeHandler", "class_name": "TypeHandlerRegistry", "params": ["TypeReference<?>", "JdbcType"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "  public boolean hasTypeHandler(TypeReference<?> javaTypeReference, JdbcType jdbcType) {\n    return javaTypeReference != null && getTypeHandler(javaTypeReference, jdbcType) != null;\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/type/TypeHandlerRegistry.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["final", "public"]}}, {"id": 62938, "method_name": "getMappingTypeHandler", "class_name": "TypeHandlerRegistry", "params": ["Class<TypeHandler>"], "throws": null, "modifiers": ["public"], "return_type": "TypeHandler<?>", "snippet": "  public TypeHandler<?> getMappingTypeHandler(Class<? extends TypeHandler<?>> handlerType) {\n    return allTypeHandlersMap.get(handlerType);\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/type/TypeHandlerRegistry.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["final", "public"]}}, {"id": 62939, "method_name": "getTypeHandler", "class_name": "TypeHandlerRegistry", "params": ["Class<T>"], "throws": null, "modifiers": ["public"], "return_type": "TypeHandler<T>", "snippet": "  public <T> TypeHandler<T> getTypeHandler(Class<T> type) {\n    return getTypeHandler((Type) type, null);\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/type/TypeHandlerRegistry.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["final", "public"]}}, {"id": 62940, "method_name": "getTypeHandler", "class_name": "TypeHandlerRegistry", "params": ["TypeReference<T>"], "throws": null, "modifiers": ["public"], "return_type": "TypeHandler<T>", "snippet": "  public <T> TypeHandler<T> getTypeHandler(TypeReference<T> javaTypeReference) {\n    return getTypeHandler(javaTypeReference, null);\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/type/TypeHandlerRegistry.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["final", "public"]}}, {"id": 62941, "method_name": "getTypeHandler", "class_name": "TypeHandlerRegistry", "params": ["JdbcType"], "throws": null, "modifiers": ["public"], "return_type": "TypeHandler<?>", "snippet": "  public TypeHandler<?> getTypeHandler(JdbcType jdbcType) {\n    return jdbcTypeHandlerMap.get(jdbcType);\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/type/TypeHandlerRegistry.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["final", "public"]}}, {"id": 62942, "method_name": "getTypeHandler", "class_name": "TypeHandlerRegistry", "params": ["Class<T>", "JdbcType"], "throws": null, "modifiers": ["public"], "return_type": "TypeHandler<T>", "snippet": "  public <T> TypeHandler<T> getTypeHandler(Class<T> type, JdbcType jdbcType) {\n    return getTypeHandler((Type) type, jdbcType);\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/type/TypeHandlerRegistry.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["final", "public"]}}, {"id": 62943, "method_name": "getTypeHandler", "class_name": "TypeHandlerRegistry", "params": ["TypeReference<T>", "JdbcType"], "throws": null, "modifiers": ["public"], "return_type": "TypeHandler<T>", "snippet": "  public <T> TypeHandler<T> getTypeHandler(TypeReference<T> javaTypeReference, JdbcType jdbcType) {\n    return getTypeHandler(javaTypeReference.getRawType(), jdbcType);\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/type/TypeHandlerRegistry.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["final", "public"]}}, {"id": 62944, "method_name": "getTypeHandler", "class_name": "TypeHandlerRegistry", "params": ["Type", "JdbcType"], "throws": null, "modifiers": ["private"], "return_type": "TypeHandler<T>", "snippet": "  private <T> TypeHandler<T> getTypeHandler(Type type, JdbcType jdbcType) {\n    if (ParamMap.class.equals(type)) {\n      return null;\n    }\n    Map<JdbcType, TypeHandler<?>> jdbcHandlerMap = getJdbcHandlerMap(type);\n    TypeHandler<?> handler = null;\n    if (jdbcHandlerMap != null) {\n      handler = jdbcHandlerMap.get(jdbcType);\n      if (handler == null) {\n        handler = jdbcHandlerMap.get(null);\n      }\n      if (handler == null) {\n        // #591\n        handler = pickSoleHandler(jdbcHandlerMap);\n      }\n    }\n    // type drives generics here\n    return (TypeHandler<T>) handler;\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/type/TypeHandlerRegistry.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["final", "public"]}}, {"id": 62945, "method_name": "getJdbcHandlerMap", "class_name": "TypeHandlerRegistry", "params": ["Type"], "throws": null, "modifiers": ["private"], "return_type": "Map<JdbcType,TypeHandler>", "snippet": "  private Map<JdbcType, TypeHandler<?>> getJdbcHandlerMap(Type type) {\n    Map<JdbcType, TypeHandler<?>> jdbcHandlerMap = typeHandlerMap.get(type);\n    if (NULL_TYPE_HANDLER_MAP.equals(jdbcHandlerMap)) {\n      return null;\n    }\n    if (jdbcHandlerMap == null && type instanceof Class) {\n      Class<?> clazz = (Class<?>) type;\n      if (Enum.class.isAssignableFrom(clazz)) {\n        Class<?> enumClass = clazz.isAnonymousClass() ? clazz.getSuperclass() : clazz;\n        jdbcHandlerMap = getJdbcHandlerMapForEnumInterfaces(enumClass, enumClass);\n        if (jdbcHandlerMap == null) {\n          register(enumClass, getInstance(enumClass, defaultEnumTypeHandler));\n          return typeHandlerMap.get(enumClass);\n        }\n      } else {\n        jdbcHandlerMap = getJdbcHandlerMapForSuperclass(clazz);\n      }\n    }\n    typeHandlerMap.put(type, jdbcHandlerMap == null ? NULL_TYPE_HANDLER_MAP : jdbcHandlerMap);\n    return jdbcHandlerMap;\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/type/TypeHandlerRegistry.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["final", "public"]}}, {"id": 62946, "method_name": "getJdbcHandlerMapForEnumInterfaces", "class_name": "TypeHandlerRegistry", "params": ["Class<?>", "Class<?>"], "throws": null, "modifiers": ["private"], "return_type": "Map<JdbcType,TypeHandler>", "snippet": "  private Map<JdbcType, TypeHandler<?>> getJdbcHandlerMapForEnumInterfaces(Class<?> clazz, Class<?> enumClazz) {\n    for (Class<?> iface : clazz.getInterfaces()) {\n      Map<JdbcType, TypeHandler<?>> jdbcHandlerMap = typeHandlerMap.get(iface);\n      if (jdbcHandlerMap == null) {\n        jdbcHandlerMap = getJdbcHandlerMapForEnumInterfaces(iface, enumClazz);\n      }\n      if (jdbcHandlerMap != null) {\n        // Found a type handler regsiterd to a super interface\n        HashMap<JdbcType, TypeHandler<?>> newMap = new HashMap<>();\n        for (Entry<JdbcType, TypeHandler<?>> entry : jdbcHandlerMap.entrySet()) {\n          // Create a type handler instance with enum type as a constructor arg\n          newMap.put(entry.getKey(), getInstance(enumClazz, entry.getValue().getClass()));\n        }\n        return newMap;\n      }\n    }\n    return null;\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/type/TypeHandlerRegistry.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["final", "public"]}}, {"id": 62947, "method_name": "getJdbcHandlerMapForSuperclass", "class_name": "TypeHandlerRegistry", "params": ["Class<?>"], "throws": null, "modifiers": ["private"], "return_type": "Map<JdbcType,TypeHandler>", "snippet": "  private Map<JdbcType, TypeHandler<?>> getJdbcHandlerMapForSuperclass(Class<?> clazz) {\n    Class<?> superclass =  clazz.getSuperclass();\n    if (superclass == null || Object.class.equals(superclass)) {\n      return null;\n    }\n    Map<JdbcType, TypeHandler<?>> jdbcHandlerMap = typeHandlerMap.get(superclass);\n    if (jdbcHandlerMap != null) {\n      return jdbcHandlerMap;\n    } else {\n      return getJdbcHandlerMapForSuperclass(superclass);\n    }\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/type/TypeHandlerRegistry.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["final", "public"]}}, {"id": 62948, "method_name": "pickSoleHandler", "class_name": "TypeHandlerRegistry", "params": ["Map<JdbcType,TypeHandler>"], "throws": null, "modifiers": ["private"], "return_type": "TypeHandler<?>", "snippet": "  private TypeHandler<?> pickSoleHandler(Map<JdbcType, TypeHandler<?>> jdbcHandlerMap) {\n    TypeHandler<?> soleHandler = null;\n    for (TypeHandler<?> handler : jdbcHandlerMap.values()) {\n      if (soleHandler == null) {\n        soleHandler = handler;\n      } else if (!handler.getClass().equals(soleHandler.getClass())) {\n        // More than one type handlers registered.\n        return null;\n      }\n    }\n    return soleHandler;\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/type/TypeHandlerRegistry.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["final", "public"]}}, {"id": 62949, "method_name": "getUnknownTypeHandler", "class_name": "TypeHandlerRegistry", "params": [], "throws": null, "modifiers": ["public"], "return_type": "TypeHandler<Object>", "snippet": "  public TypeHandler<Object> getUnknownTypeHandler() {\n    return unknownTypeHandler;\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/type/TypeHandlerRegistry.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["final", "public"]}}, {"id": 62950, "method_name": "register", "class_name": "TypeHandlerRegistry", "params": ["JdbcType", "TypeHandler<?>"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void register(JdbcType jdbcType, TypeHandler<?> handler) {\n    jdbcTypeHandlerMap.put(jdbcType, handler);\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/type/TypeHandlerRegistry.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["final", "public"]}}, {"id": 62951, "method_name": "register", "class_name": "TypeHandlerRegistry", "params": ["TypeHandler<T>"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public <T> void register(TypeHandler<T> typeHandler) {\n    boolean mappedTypeFound = false;\n    MappedTypes mappedTypes = typeHandler.getClass().getAnnotation(MappedTypes.class);\n    if (mappedTypes != null) {\n      for (Class<?> handledType : mappedTypes.value()) {\n        register(handledType, typeHandler);\n        mappedTypeFound = true;\n      }\n    }\n    // @since 3.1.0 - try to auto-discover the mapped type\n    if (!mappedTypeFound && typeHandler instanceof TypeReference) {\n      try {\n        TypeReference<T> typeReference = (TypeReference<T>) typeHandler;\n        register(typeReference.getRawType(), typeHandler);\n        mappedTypeFound = true;\n      } catch (Throwable t) {\n        // maybe users define the TypeReference with a different type and are not assignable, so just ignore it\n      }\n    }\n    if (!mappedTypeFound) {\n      register((Class<T>) null, typeHandler);\n    }\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/type/TypeHandlerRegistry.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["final", "public"]}}, {"id": 62952, "method_name": "register", "class_name": "TypeHandlerRegistry", "params": ["Class<T>", "TypeHandler<T>"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public <T> void register(Class<T> javaType, TypeHandler<? extends T> typeHandler) {\n    register((Type) javaType, typeHandler);\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/type/TypeHandlerRegistry.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["final", "public"]}}, {"id": 62953, "method_name": "register", "class_name": "TypeHandlerRegistry", "params": ["Type", "TypeHandler<T>"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "  private <T> void register(Type javaType, TypeHandler<? extends T> typeHandler) {\n    MappedJdbcTypes mappedJdbcTypes = typeHandler.getClass().getAnnotation(MappedJdbcTypes.class);\n    if (mappedJdbcTypes != null) {\n      for (JdbcType handledJdbcType : mappedJdbcTypes.value()) {\n        register(javaType, handledJdbcType, typeHandler);\n      }\n      if (mappedJdbcTypes.includeNullJdbcType()) {\n        register(javaType, null, typeHandler);\n      }\n    } else {\n      register(javaType, null, typeHandler);\n    }\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/type/TypeHandlerRegistry.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["final", "public"]}}, {"id": 62954, "method_name": "register", "class_name": "TypeHandlerRegistry", "params": ["TypeReference<T>", "TypeHandler<T>"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public <T> void register(TypeReference<T> javaTypeReference, TypeHandler<? extends T> handler) {\n    register(javaTypeReference.getRawType(), handler);\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/type/TypeHandlerRegistry.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["final", "public"]}}, {"id": 62955, "method_name": "register", "class_name": "TypeHandlerRegistry", "params": ["Class<T>", "JdbcType", "TypeHandler<T>"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public <T> void register(Class<T> type, JdbcType jdbcType, TypeHandler<? extends T> handler) {\n    register((Type) type, jdbcType, handler);\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/type/TypeHandlerRegistry.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["final", "public"]}}, {"id": 62956, "method_name": "register", "class_name": "TypeHandlerRegistry", "params": ["Type", "JdbcType", "TypeHandler<?>"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "  private void register(Type javaType, JdbcType jdbcType, TypeHandler<?> handler) {\n    if (javaType != null) {\n      Map<JdbcType, TypeHandler<?>> map = typeHandlerMap.get(javaType);\n      if (map == null || map == NULL_TYPE_HANDLER_MAP) {\n        map = new HashMap<>();\n      }\n      map.put(jdbcType, handler);\n      typeHandlerMap.put(javaType, map);\n    }\n    allTypeHandlersMap.put(handler.getClass(), handler);\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/type/TypeHandlerRegistry.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["final", "public"]}}, {"id": 62957, "method_name": "register", "class_name": "TypeHandlerRegistry", "params": ["Class<?>"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void register(Class<?> typeHandlerClass) {\n    boolean mappedTypeFound = false;\n    MappedTypes mappedTypes = typeHandlerClass.getAnnotation(MappedTypes.class);\n    if (mappedTypes != null) {\n      for (Class<?> javaTypeClass : mappedTypes.value()) {\n        register(javaTypeClass, typeHandlerClass);\n        mappedTypeFound = true;\n      }\n    }\n    if (!mappedTypeFound) {\n      register(getInstance(null, typeHandlerClass));\n    }\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/type/TypeHandlerRegistry.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["final", "public"]}}, {"id": 62958, "method_name": "register", "class_name": "TypeHandlerRegistry", "params": ["String", "String"], "throws": ["ClassNotFoundException"], "modifiers": ["public"], "return_type": "void", "snippet": "  public void register(String javaTypeClassName, String typeHandlerClassName) throws ClassNotFoundException {\n    register(Resources.classForName(javaTypeClassName), Resources.classForName(typeHandlerClassName));\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/type/TypeHandlerRegistry.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["final", "public"]}}, {"id": 62959, "method_name": "register", "class_name": "TypeHandlerRegistry", "params": ["Class<?>", "Class<?>"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void register(Class<?> javaTypeClass, Class<?> typeHandlerClass) {\n    register(javaTypeClass, getInstance(javaTypeClass, typeHandlerClass));\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/type/TypeHandlerRegistry.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["final", "public"]}}, {"id": 62960, "method_name": "register", "class_name": "TypeHandlerRegistry", "params": ["Class<?>", "JdbcType", "Class<?>"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void register(Class<?> javaTypeClass, JdbcType jdbcType, Class<?> typeHandlerClass) {\n    register(javaTypeClass, jdbcType, getInstance(javaTypeClass, typeHandlerClass));\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/type/TypeHandlerRegistry.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["final", "public"]}}, {"id": 62961, "method_name": "getInstance", "class_name": "TypeHandlerRegistry", "params": ["Class<?>", "Class<?>"], "throws": null, "modifiers": ["public"], "return_type": "TypeHandler<T>", "snippet": "  public <T> TypeHandler<T> getInstance(Class<?> javaTypeClass, Class<?> typeHandlerClass) {\n    if (javaTypeClass != null) {\n      try {\n        Constructor<?> c = typeHandlerClass.getConstructor(Class.class);\n        return (TypeHandler<T>) c.newInstance(javaTypeClass);\n      } catch (NoSuchMethodException ignored) {\n        // ignored\n      } catch (Exception e) {\n        throw new TypeException(\"Failed invoking constructor for handler \" + typeHandlerClass, e);\n      }\n    }\n    try {\n      Constructor<?> c = typeHandlerClass.getConstructor();\n      return (TypeHandler<T>) c.newInstance();\n    } catch (Exception e) {\n      throw new TypeException(\"Unable to find a usable constructor for \" + typeHandlerClass, e);\n    }\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/type/TypeHandlerRegistry.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["final", "public"]}}, {"id": 62962, "method_name": "register", "class_name": "TypeHandlerRegistry", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void register(String packageName) {\n    ResolverUtil<Class<?>> resolverUtil = new ResolverUtil<>();\n    resolverUtil.find(new ResolverUtil.IsA(TypeHandler.class), packageName);\n    Set<Class<? extends Class<?>>> handlerSet = resolverUtil.getClasses();\n    for (Class<?> type : handlerSet) {\n      //Ignore inner classes and interfaces (including package-info.java) and abstract classes\n      if (!type.isAnonymousClass() && !type.isInterface() && !Modifier.isAbstract(type.getModifiers())) {\n        register(type);\n      }\n    }\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/type/TypeHandlerRegistry.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["final", "public"]}}, {"id": 62963, "method_name": "getTypeHandlers", "class_name": "TypeHandlerRegistry", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Collection<TypeHandler>", "snippet": "  public Collection<TypeHandler<?>> getTypeHandlers() {\n    return Collections.unmodifiableCollection(allTypeHandlersMap.values());\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/type/TypeHandlerRegistry.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["final", "public"]}}, {"id": 62964, "method_name": "init", "class_name": "SystemMassRallyPanel", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void init() {\n        initModel(0);\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/fleets/SystemMassRallyPanel.java", "stars": "74", "class_props": {"extends": "SystemPanel", "implements": null, "modifiers": ["public"]}}, {"id": 62965, "method_name": "startRallies", "class_name": "SystemMassRallyPanel", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void startRallies() {\n        if (!canStartRallies())\n            return;\n\n        player().startRallies(topParent.filteredSystems, topParent.targetSystem);\n        topParent.clearMapSelections();\n        topParent.showQueryPanel();\n        topParent.repaint();\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/fleets/SystemMassRallyPanel.java", "stars": "74", "class_props": {"extends": "SystemPanel", "implements": null, "modifiers": ["public"]}}, {"id": 62966, "method_name": "canStartRallies", "class_name": "SystemMassRallyPanel", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean canStartRallies() {\n        StarSystem target = topParent.hoverSystem;\n        if (target == null)\n            target = topParent.targetSystem;\n\n        return !topParent.filteredSystems.isEmpty()\n            && (target != null)\n            && player().canRallyFleetsTo(id(target));\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/fleets/SystemMassRallyPanel.java", "stars": "74", "class_props": {"extends": "SystemPanel", "implements": null, "modifiers": ["public"]}}, {"id": 62967, "method_name": "backgroundColor", "class_name": "SystemMassRallyPanel", "params": [], "throws": null, "modifiers": ["protected"], "return_type": "Color", "snippet": "    protected Color backgroundColor()   { return FleetUI.backLoC; }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/fleets/SystemMassRallyPanel.java", "stars": "74", "class_props": {"extends": "SystemPanel", "implements": null, "modifiers": ["public"]}}, {"id": 62968, "method_name": "systemViewToDisplay", "class_name": "SystemMassRallyPanel", "params": [], "throws": null, "modifiers": ["public"], "return_type": "StarSystem", "snippet": "    public StarSystem systemViewToDisplay() {\n        if (topParent.hoverSystem != null)\n            return topParent.hoverSystem;\n        else\n            return topParent.targetSystem;\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/fleets/SystemMassRallyPanel.java", "stars": "74", "class_props": {"extends": "SystemPanel", "implements": null, "modifiers": ["public"]}}, {"id": 62969, "method_name": "topPane", "class_name": "SystemMassRallyPanel", "params": [], "throws": null, "modifiers": ["protected"], "return_type": "BasePanel", "snippet": "    protected BasePanel topPane() { return new SystemRallyHeaderPane(); }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/fleets/SystemMassRallyPanel.java", "stars": "74", "class_props": {"extends": "SystemPanel", "implements": null, "modifiers": ["public"]}}, {"id": 62970, "method_name": "detailPane", "class_name": "SystemMassRallyPanel", "params": [], "throws": null, "modifiers": ["protected"], "return_type": "BasePanel", "snippet": "    protected BasePanel detailPane() { return new SystemViewInfoPane(this); }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/fleets/SystemMassRallyPanel.java", "stars": "74", "class_props": {"extends": "SystemPanel", "implements": null, "modifiers": ["public"]}}, {"id": 62971, "method_name": "bottomPane", "class_name": "SystemMassRallyPanel", "params": [], "throws": null, "modifiers": ["protected"], "return_type": "BasePanel", "snippet": "    protected BasePanel bottomPane() { return new SystemRallyFooterPane(); }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/fleets/SystemMassRallyPanel.java", "stars": "74", "class_props": {"extends": "SystemPanel", "implements": null, "modifiers": ["public"]}}, {"id": 62972, "method_name": "initModel", "class_name": "SystemRallyHeaderPane", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "        private void initModel() {\n            setPreferredSize(new Dimension(getWidth(), scaled(120)));\n            setBackground(FleetUI.backHiC);\n        }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/fleets/SystemMassRallyPanel.java", "stars": "74", "class_props": {"extends": "BasePanel", "implements": null, "modifiers": []}}, {"id": 62973, "method_name": "paintComponent", "class_name": "SystemRallyHeaderPane", "params": ["Graphics"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "        public void paintComponent(Graphics g0) {\n            super.paintComponent(g0);\n            Graphics2D g = (Graphics2D) g0;\n            int w = getWidth();\n            int h = getHeight();\n            g.setColor(FleetUI.backHiC);\n            g.fillRect(0,0,w,h);\n\n            if (arrow == null) {\n                xPts = new int[7];\n                yPts = new int[7];\n                xPts[0] = w/2-s30;\n                xPts[1] = w/2-s30;\n                xPts[2] = w/2-s60;\n                xPts[3] = w/2;\n                xPts[4] = w/2+s60;\n                xPts[5] = w/2+s30;\n                xPts[6] = w/2+s30;\n                yPts[0] = 0;\n                yPts[1] = h-s50;\n                yPts[2] = h-s50;\n                yPts[3] = h;\n                yPts[4] = h-s50;\n                yPts[5] = h-s50;\n                yPts[6] = 0;\n                arrow = new Polygon(xPts,yPts,xPts.length);\n            }\n            g.setColor(FleetUI.backLoC);\n            g.fill(arrow);\n\n            int y0 = s20;\n            g.setColor(SystemPanel.blackText);\n            String desc = text(\"FLEETS_START_RALLIES_DESC\");\n            List<String> descLines = scaledNarrowWrappedLines(g, desc, w-s20, 4, 18, 16);\n            for (String line: descLines) {\n                g.drawString(line, s10, y0);\n                y0 += s18;\n            }\n        }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/fleets/SystemMassRallyPanel.java", "stars": "74", "class_props": {"extends": "BasePanel", "implements": null, "modifiers": []}}, {"id": 62974, "method_name": "initModel", "class_name": "SystemRallyFooterPane", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "        private void initModel() {\n            setPreferredSize(new Dimension(getWidth(), s70));\n            setBackground(FleetUI.backHiC);\n            addMouseListener(this);\n            addMouseMotionListener(this);\n        }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/fleets/SystemMassRallyPanel.java", "stars": "74", "class_props": {"extends": "BasePanel", "implements": ["MouseListener", "MouseMotionListener"], "modifiers": []}}, {"id": 62975, "method_name": "textureName", "class_name": "SystemRallyFooterPane", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "        public String textureName()         { return  TEXTURE_BROWN; }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/fleets/SystemMassRallyPanel.java", "stars": "74", "class_props": {"extends": "BasePanel", "implements": ["MouseListener", "MouseMotionListener"], "modifiers": []}}, {"id": 62976, "method_name": "textureClip", "class_name": "SystemRallyFooterPane", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Shape", "snippet": "        public Shape textureClip()          { return textureClip; }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/fleets/SystemMassRallyPanel.java", "stars": "74", "class_props": {"extends": "BasePanel", "implements": ["MouseListener", "MouseMotionListener"], "modifiers": []}}, {"id": 62977, "method_name": "paintComponent", "class_name": "SystemRallyFooterPane", "params": ["Graphics"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "        public void paintComponent(Graphics g0) {\n            super.paintComponent(g0);\n            Graphics2D g = (Graphics2D) g0;\n            int w = getWidth();\n            int h = getHeight();\n\n            clearButtons();\n\n            g.setColor(FleetUI.backHiC);\n            g.fillRect(0,0,w,h);\n\n            if (canStartRallies())\n                topParent.drawGreenButton(g,text(\"FLEETS_START_RALLIES\"), startBox, hoverBox, h-s65);\n            else\n                topParent.drawGrayButton(g,text(\"FLEETS_START_RALLIES\"), null, hoverBox, h-s65);\n\n            topParent.drawBrownButton(g, text(\"FLEETS_CANCEL\"), cancelBox, hoverBox, h-s32);\n            textureClip = new Rectangle2D.Float(s3, h-s65, topParent.SIDE_PANE_W-s18, s60);\n        }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/fleets/SystemMassRallyPanel.java", "stars": "74", "class_props": {"extends": "BasePanel", "implements": ["MouseListener", "MouseMotionListener"], "modifiers": []}}, {"id": 62978, "method_name": "clearButtons", "class_name": "SystemRallyFooterPane", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "        private void clearButtons() {\n            cancelBox.setBounds(0,0,0,0);\n            startBox.setBounds(0,0,0,0);\n        }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/fleets/SystemMassRallyPanel.java", "stars": "74", "class_props": {"extends": "BasePanel", "implements": ["MouseListener", "MouseMotionListener"], "modifiers": []}}, {"id": 62979, "method_name": "mouseDragged", "class_name": "SystemRallyFooterPane", "params": ["MouseEvent"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "        public void mouseDragged(MouseEvent arg0) { }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/fleets/SystemMassRallyPanel.java", "stars": "74", "class_props": {"extends": "BasePanel", "implements": ["MouseListener", "MouseMotionListener"], "modifiers": []}}, {"id": 62980, "method_name": "mouseMoved", "class_name": "SystemRallyFooterPane", "params": ["MouseEvent"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "        public void mouseMoved(MouseEvent e) {\n            int x = e.getX();\n            int y = e.getY();\n\n            Rectangle prevHover = hoverBox;\n            hoverBox = null;\n            if (cancelBox.contains(x,y))\n                hoverBox = cancelBox;\n            else if (startBox.contains(x,y))\n                hoverBox = startBox;\n\n            if (hoverBox != prevHover)\n                repaint();\n        }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/fleets/SystemMassRallyPanel.java", "stars": "74", "class_props": {"extends": "BasePanel", "implements": ["MouseListener", "MouseMotionListener"], "modifiers": []}}, {"id": 62981, "method_name": "mouseClicked", "class_name": "SystemRallyFooterPane", "params": ["MouseEvent"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "        public void mouseClicked(MouseEvent e) { }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/fleets/SystemMassRallyPanel.java", "stars": "74", "class_props": {"extends": "BasePanel", "implements": ["MouseListener", "MouseMotionListener"], "modifiers": []}}, {"id": 62982, "method_name": "mouseEntered", "class_name": "SystemRallyFooterPane", "params": ["MouseEvent"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "        public void mouseEntered(MouseEvent e) { }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/fleets/SystemMassRallyPanel.java", "stars": "74", "class_props": {"extends": "BasePanel", "implements": ["MouseListener", "MouseMotionListener"], "modifiers": []}}, {"id": 62983, "method_name": "mouseExited", "class_name": "SystemRallyFooterPane", "params": ["MouseEvent"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "        public void mouseExited(MouseEvent e) {\n            if (hoverBox != null) {\n                hoverBox = null;\n                repaint();\n            }\n        }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/fleets/SystemMassRallyPanel.java", "stars": "74", "class_props": {"extends": "BasePanel", "implements": ["MouseListener", "MouseMotionListener"], "modifiers": []}}, {"id": 62984, "method_name": "mousePressed", "class_name": "SystemRallyFooterPane", "params": ["MouseEvent"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "        public void mousePressed(MouseEvent e) { }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/fleets/SystemMassRallyPanel.java", "stars": "74", "class_props": {"extends": "BasePanel", "implements": ["MouseListener", "MouseMotionListener"], "modifiers": []}}, {"id": 62985, "method_name": "mouseReleased", "class_name": "SystemRallyFooterPane", "params": ["MouseEvent"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "        public void mouseReleased(MouseEvent e) {\n            if (e.getButton() > 3)\n                return;\n            int x = e.getX();\n            int y = e.getY();\n\n            if (cancelBox.contains(x,y)) {\n                topParent.clearMapSelections();\n                topParent.showQueryPanel();\n            }\n            else if (startBox.contains(x,y)) \n                startRallies();\n        }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/fleets/SystemMassRallyPanel.java", "stars": "74", "class_props": {"extends": "BasePanel", "implements": ["MouseListener", "MouseMotionListener"], "modifiers": []}}, {"id": 62986, "method_name": "getIssPosition", "class_name": "IssApiControllers", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void getIssPosition() {\n        String url = \"http://api.open-notify.org/iss-now.json\";\n        RestTemplate restTemplate = new RestTemplate();\n        HttpEntity httpEntityISS = new HttpEntity(iss);\n        ResponseEntity<ISS> exchange = restTemplate.exchange(url, HttpMethod.GET, httpEntityISS, ISS.class);\n        this.iss = exchange.getBody();\n        issData.setLat(iss.getIssPosition().getLatitude());\n        issData.setLon(iss.getIssPosition().getLongitude());\n    }", "url": "https://raw.githubusercontent.com/wojciechgalach/PositionInternationalSpaceStation/master/src/main/java/pl/com/nur/internationalspacestation/internationalspacestation/controller/IssApiControllers.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 62987, "method_name": "contextLoads", "class_name": "SampleJerseyApplicationTests", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "\tvoid contextLoads() {\n\t\tResponseEntity<String> entity = this.restTemplate.getForEntity(\"/hello\", String.class);\n\t\tassertThat(entity.getStatusCode()).isEqualTo(HttpStatus.OK);\n\t}", "url": "https://raw.githubusercontent.com/spring-projects/spring-boot/master/spring-boot-tests/spring-boot-smoke-tests/spring-boot-smoke-test-jersey/src/test/java/smoketest/jersey/SampleJerseyApplicationTests.java", "stars": "47572", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 62988, "method_name": "reverse", "class_name": "SampleJerseyApplicationTests", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "\tvoid reverse() {\n\t\tResponseEntity<String> entity = this.restTemplate.getForEntity(\"/reverse?input=olleh\", String.class);\n\t\tassertThat(entity.getStatusCode()).isEqualTo(HttpStatus.OK);\n\t\tassertThat(entity.getBody()).isEqualTo(\"hello\");\n\t}", "url": "https://raw.githubusercontent.com/spring-projects/spring-boot/master/spring-boot-tests/spring-boot-smoke-tests/spring-boot-smoke-test-jersey/src/test/java/smoketest/jersey/SampleJerseyApplicationTests.java", "stars": "47572", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 62989, "method_name": "validation", "class_name": "SampleJerseyApplicationTests", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "\tvoid validation() {\n\t\tResponseEntity<String> entity = this.restTemplate.getForEntity(\"/reverse\", String.class);\n\t\tassertThat(entity.getStatusCode()).isEqualTo(HttpStatus.BAD_REQUEST);\n\t}", "url": "https://raw.githubusercontent.com/spring-projects/spring-boot/master/spring-boot-tests/spring-boot-smoke-tests/spring-boot-smoke-test-jersey/src/test/java/smoketest/jersey/SampleJerseyApplicationTests.java", "stars": "47572", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 62990, "method_name": "actuatorStatus", "class_name": "SampleJerseyApplicationTests", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "\tvoid actuatorStatus() {\n\t\tResponseEntity<String> entity = this.restTemplate.getForEntity(\"/actuator/health\", String.class);\n\t\tassertThat(entity.getStatusCode()).isEqualTo(HttpStatus.OK);\n\t\tassertThat(entity.getBody()).isEqualTo(\"{\\\"status\\\":\\\"UP\\\"}\");\n\t}", "url": "https://raw.githubusercontent.com/spring-projects/spring-boot/master/spring-boot-tests/spring-boot-smoke-tests/spring-boot-smoke-test-jersey/src/test/java/smoketest/jersey/SampleJerseyApplicationTests.java", "stars": "47572", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 62991, "method_name": "load", "class_name": "ModuleManager", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void load() {\n        super.load();\n        register(new Commands(), new KeyBinds(), new Sprint(), new Speed(), new Velocity(), new KillAura(), new Flight(), new Timer()\n                , new NoRotate(), new NoFall(), new VisualRange(), new Criticals(), new DiscordRPC()\n                , new AutoFish(), new ChatSuffix(), new Phase(), new Freecam(), new Crasher(), new AntiCrash()\n                , new AutoReply(), new FurryChat(), new FastBow(), new FastPlace(), new AutoTotem()\n                , new AutoWeb(), new Surround(), new AntiHunger(), new GodMode(), new AntiChainPop(), new NoPush(), new Step()\n                , new TotemDetector(), new CaptchaSolver(), new Jesus(), new EntityESP(), new Handshake(), new AntiVoid(), new FullBright()\n                , new PacketCancel(), new SpeedMine(), new BanWave()\n                , new HitEffects(), new HUD(), new Translator(), new ScreenMove());\n        getRegistry().values().forEach(Module::init);\n        this.loadCheats();\n    }", "url": "https://raw.githubusercontent.com/Crystallinqq/Mercury-Client/master/src/main/java/fail/mercury/client/api/module/ModuleManager.java", "stars": "12", "class_props": {"extends": "HashMapManager", "implements": ["Util"], "modifiers": ["public"]}}, {"id": 62992, "method_name": "getToggles", "class_name": "ModuleManager", "params": [], "throws": null, "modifiers": ["public"], "return_type": "List<Module>", "snippet": "    public List<Module> getToggles() {\n        List<Module> toggleableModules = new ArrayList<>();\n        for(Module module : getValues()) {\n            if(module instanceof Module && !module.isPersistent())\n                toggleableModules.add(module);\n        }\n        return toggleableModules;\n    }", "url": "https://raw.githubusercontent.com/Crystallinqq/Mercury-Client/master/src/main/java/fail/mercury/client/api/module/ModuleManager.java", "stars": "12", "class_props": {"extends": "HashMapManager", "implements": ["Util"], "modifiers": ["public"]}}, {"id": 62993, "method_name": "unload", "class_name": "ModuleManager", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void unload() {\n        this.saveCheats();\n    }", "url": "https://raw.githubusercontent.com/Crystallinqq/Mercury-Client/master/src/main/java/fail/mercury/client/api/module/ModuleManager.java", "stars": "12", "class_props": {"extends": "HashMapManager", "implements": ["Util"], "modifiers": ["public"]}}, {"id": 62994, "method_name": "getAlias", "class_name": "ModuleManager", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "Module", "snippet": "    public Module getAlias(final String name) {\n        for (final Module f : this.getRegistry().values()) {\n            if (f.getLabel().equalsIgnoreCase(name)) {\n                return f;\n            }\n            String[] alias;\n            for (int length = (alias = f.getAlias()).length, i = 0; i < length; ++i) {\n                final String s = alias[i];\n                if (s.equalsIgnoreCase(name)) {\n                    return f;\n                }\n            }\n        }\n        return null;\n    }", "url": "https://raw.githubusercontent.com/Crystallinqq/Mercury-Client/master/src/main/java/fail/mercury/client/api/module/ModuleManager.java", "stars": "12", "class_props": {"extends": "HashMapManager", "implements": ["Util"], "modifiers": ["public"]}}, {"id": 62995, "method_name": "getModsInCategory", "class_name": "ModuleManager", "params": ["Category"], "throws": null, "modifiers": ["public"], "return_type": "ArrayList<Module>", "snippet": "    public ArrayList<Module> getModsInCategory(final Category category) {\n        final ArrayList<Module> mods = new ArrayList<>();\n        for (final Module m : this.getRegistry().values()) {\n            if (m.getCategory().equals(category)) {\n                mods.add(m);\n            }\n        }\n        return mods;\n    }", "url": "https://raw.githubusercontent.com/Crystallinqq/Mercury-Client/master/src/main/java/fail/mercury/client/api/module/ModuleManager.java", "stars": "12", "class_props": {"extends": "HashMapManager", "implements": ["Util"], "modifiers": ["public"]}}, {"id": 62996, "method_name": "register", "class_name": "ModuleManager", "params": ["Module"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void register(Module... modules) {\n        for (Module cheat : modules) {\n            if (cheat.getLabel() != null)\n            include(cheat.getLabel().toLowerCase(), cheat);\n        }\n    }", "url": "https://raw.githubusercontent.com/Crystallinqq/Mercury-Client/master/src/main/java/fail/mercury/client/api/module/ModuleManager.java", "stars": "12", "class_props": {"extends": "HashMapManager", "implements": ["Util"], "modifiers": ["public"]}}, {"id": 62997, "method_name": "find", "class_name": "ModuleManager", "params": ["Class<Module>"], "throws": null, "modifiers": ["public"], "return_type": "Module", "snippet": "    public Module find(Class<? extends Module> clazz) {\n        return getValues().stream().filter(m -> m.getClass() == clazz).findFirst().orElse(null);\n    }", "url": "https://raw.githubusercontent.com/Crystallinqq/Mercury-Client/master/src/main/java/fail/mercury/client/api/module/ModuleManager.java", "stars": "12", "class_props": {"extends": "HashMapManager", "implements": ["Util"], "modifiers": ["public"]}}, {"id": 62998, "method_name": "find", "class_name": "ModuleManager", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "Module", "snippet": "    public Module find(String find) {\n        Module m = pull(find.replaceAll(\" \", \"\"));\n        if (pull(find.replaceAll(\" \", \"\")) != null)\n            m = pull(find.replaceAll(\" \", \"\"));\n        if (getAlias(find) != null)\n            m = getAlias(find);\n        return m;\n    }", "url": "https://raw.githubusercontent.com/Crystallinqq/Mercury-Client/master/src/main/java/fail/mercury/client/api/module/ModuleManager.java", "stars": "12", "class_props": {"extends": "HashMapManager", "implements": ["Util"], "modifiers": ["public"]}}, {"id": 62999, "method_name": "saveCheats", "class_name": "ModuleManager", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void saveCheats() {\n        if (getRegistry().values().isEmpty()) {\n            directory.delete();\n        }\n        File[] files = directory.listFiles();\n        if (!directory.exists()) {\n            directory.mkdir();\n        } else if (files != null) {\n            for (File file : files) {\n                file.delete();\n            }\n        }\n        getRegistry().values().forEach(module -> {\n            File file = new File(directory, module.getLabel() + \".json\");\n            JsonObject node = new JsonObject();\n            module.save(node);\n            if (node.entrySet().isEmpty()) {\n                return;\n            }\n            try {\n                file.createNewFile();\n            } catch (IOException e) {\n                return;\n            }\n            try (Writer writer = new FileWriter(file)) {\n                writer.write(new GsonBuilder().setPrettyPrinting().create().toJson(node));\n            } catch (IOException e) {\n                file.delete();\n            }\n        });\n        files = directory.listFiles();\n        if (files == null || files.length == 0) {\n            directory.delete();\n        }\n    }", "url": "https://raw.githubusercontent.com/Crystallinqq/Mercury-Client/master/src/main/java/fail/mercury/client/api/module/ModuleManager.java", "stars": "12", "class_props": {"extends": "HashMapManager", "implements": ["Util"], "modifiers": ["public"]}}, {"id": 63000, "method_name": "loadCheats", "class_name": "ModuleManager", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void loadCheats() {\n        getRegistry().values().forEach(module -> {\n            if (module.isPersistent())\n                module.setEnabled(true);\n            final File file = new File(directory, module.getLabel() + \".json\");\n            if (!file.exists()) {\n                return;\n            }\n            try (Reader reader = new FileReader(file)) {\n                JsonElement node = new JsonParser().parse(reader);\n                if (!node.isJsonObject()) {\n                    return;\n                }\n                module.load(node.getAsJsonObject());\n            } catch (IOException e) {\n            }\n        });\n    }", "url": "https://raw.githubusercontent.com/Crystallinqq/Mercury-Client/master/src/main/java/fail/mercury/client/api/module/ModuleManager.java", "stars": "12", "class_props": {"extends": "HashMapManager", "implements": ["Util"], "modifiers": ["public"]}}, {"id": 63001, "method_name": "getCartID", "class_name": "Cart", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getCartID() {\n        return cartID;\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/Model/ModelCartOrder/Cart.java", "stars": "10", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 63002, "method_name": "setCartID", "class_name": "Cart", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setCartID(int cartID) {\n        this.cartID = cartID;\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/Model/ModelCartOrder/Cart.java", "stars": "10", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 63003, "method_name": "getEndUserID", "class_name": "Cart", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getEndUserID() {\n        return endUserID;\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/Model/ModelCartOrder/Cart.java", "stars": "10", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 63004, "method_name": "setEndUserID", "class_name": "Cart", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setEndUserID(int endUserID) {\n        this.endUserID = endUserID;\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/Model/ModelCartOrder/Cart.java", "stars": "10", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 63005, "method_name": "getShopID", "class_name": "Cart", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getShopID() {\n        return shopID;\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/Model/ModelCartOrder/Cart.java", "stars": "10", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 63006, "method_name": "setShopID", "class_name": "Cart", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setShopID(int shopID) {\n        this.shopID = shopID;\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/Model/ModelCartOrder/Cart.java", "stars": "10", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 63007, "method_name": "isDebugEnabled", "class_name": "Log4j2LoggerImpl", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "  public boolean isDebugEnabled() {\n    return log.isDebugEnabled();\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/logging/log4j2/Log4j2LoggerImpl.java", "stars": "15", "class_props": {"extends": null, "implements": ["Log"], "modifiers": ["public"]}}, {"id": 63008, "method_name": "isTraceEnabled", "class_name": "Log4j2LoggerImpl", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "  public boolean isTraceEnabled() {\n    return log.isTraceEnabled();\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/logging/log4j2/Log4j2LoggerImpl.java", "stars": "15", "class_props": {"extends": null, "implements": ["Log"], "modifiers": ["public"]}}, {"id": 63009, "method_name": "error", "class_name": "Log4j2LoggerImpl", "params": ["String", "Throwable"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void error(String s, Throwable e) {\n    log.error(MARKER, s, e);\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/logging/log4j2/Log4j2LoggerImpl.java", "stars": "15", "class_props": {"extends": null, "implements": ["Log"], "modifiers": ["public"]}}, {"id": 63010, "method_name": "error", "class_name": "Log4j2LoggerImpl", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void error(String s) {\n    log.error(MARKER, s);\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/logging/log4j2/Log4j2LoggerImpl.java", "stars": "15", "class_props": {"extends": null, "implements": ["Log"], "modifiers": ["public"]}}, {"id": 63011, "method_name": "debug", "class_name": "Log4j2LoggerImpl", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void debug(String s) {\n    log.debug(MARKER, s);\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/logging/log4j2/Log4j2LoggerImpl.java", "stars": "15", "class_props": {"extends": null, "implements": ["Log"], "modifiers": ["public"]}}, {"id": 63012, "method_name": "trace", "class_name": "Log4j2LoggerImpl", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void trace(String s) {\n    log.trace(MARKER, s);\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/logging/log4j2/Log4j2LoggerImpl.java", "stars": "15", "class_props": {"extends": null, "implements": ["Log"], "modifiers": ["public"]}}, {"id": 63013, "method_name": "warn", "class_name": "Log4j2LoggerImpl", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void warn(String s) {\n    log.warn(MARKER, s);\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/logging/log4j2/Log4j2LoggerImpl.java", "stars": "15", "class_props": {"extends": null, "implements": ["Log"], "modifiers": ["public"]}}, {"id": 63014, "method_name": "getEndUserID", "class_name": "FavouriteShop", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Integer", "snippet": "    public Integer getEndUserID() {\n        return endUserID;\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/Model/ModelReviewShop/FavouriteShop.java", "stars": "10", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 63015, "method_name": "setEndUserID", "class_name": "FavouriteShop", "params": ["Integer"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setEndUserID(Integer endUserID) {\n        this.endUserID = endUserID;\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/Model/ModelReviewShop/FavouriteShop.java", "stars": "10", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 63016, "method_name": "getShopID", "class_name": "FavouriteShop", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Integer", "snippet": "    public Integer getShopID() {\n        return shopID;\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/Model/ModelReviewShop/FavouriteShop.java", "stars": "10", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 63017, "method_name": "setShopID", "class_name": "FavouriteShop", "params": ["Integer"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setShopID(Integer shopID) {\n        this.shopID = shopID;\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/Model/ModelReviewShop/FavouriteShop.java", "stars": "10", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 63018, "method_name": "monodroidAddReference", "class_name": "ActivityIndicatorRenderer", "params": ["java"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void monodroidAddReference (java.lang.Object obj)\n\t{\n\t\tif (refList == null)\n\t\t\trefList = new java.util.ArrayList ();\n\t\trefList.add (obj);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc643f46942d9dd1fff9/ActivityIndicatorRenderer.java", "stars": "2", "class_props": {"extends": "crc643f46942d9dd1fff9", "implements": ["mono"], "modifiers": ["public"]}}, {"id": 63019, "method_name": "monodroidClearReferences", "class_name": "ActivityIndicatorRenderer", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void monodroidClearReferences ()\n\t{\n\t\tif (refList != null)\n\t\t\trefList.clear ();\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc643f46942d9dd1fff9/ActivityIndicatorRenderer.java", "stars": "2", "class_props": {"extends": "crc643f46942d9dd1fff9", "implements": ["mono"], "modifiers": ["public"]}}, {"id": 63020, "method_name": "initElements", "class_name": "GlowstoneOreBlock", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void initElements() {\n\t\telements.blocks.add(() -> new CustomBlock());\n\t\telements.items\n\t\t\t\t.add(() -> new BlockItem(block, new Item.Properties().group(ItemGroup.BUILDING_BLOCKS)).setRegistryName(block.getRegistryName()));\n\t}", "url": "https://raw.githubusercontent.com/KarogathModdingStudios/Enhanced-Vanilla-1.15/master/src/main/java/com/karogath/enhancedvanilla/block/GlowstoneOreBlock.java", "stars": "2", "class_props": {"extends": "EnhancedVanillaElements", "implements": null, "modifiers": ["public"]}}, {"id": 63021, "method_name": "init", "class_name": "GlowstoneOreBlock", "params": ["FMLCommonSetupEvent"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void init(FMLCommonSetupEvent event) {\n\t\tfor (Biome biome : ForgeRegistries.BIOMES.getValues()) {\n\t\t\tboolean biomeCriteria = false;\n\t\t\tif (ForgeRegistries.BIOMES.getKey(biome).equals(new ResourceLocation(\"nether\")))\n\t\t\t\tbiomeCriteria = true;\n\t\t\tif (!biomeCriteria)\n\t\t\t\tcontinue;\n\t\t\tbiome.addFeature(GenerationStage.Decoration.UNDERGROUND_ORES, new OreFeature(OreFeatureConfig::deserialize) {\n\t\t\t\t@Override\n\t\t\t\tpublic boolean place(IWorld world, ChunkGenerator generator, Random rand, BlockPos pos, OreFeatureConfig config) {\n\t\t\t\t\tDimensionType dimensionType = world.getDimension().getType();\n\t\t\t\t\tboolean dimensionCriteria = false;\n\t\t\t\t\tif (dimensionType == DimensionType.THE_NETHER)\n\t\t\t\t\t\tdimensionCriteria = true;\n\t\t\t\t\tif (!dimensionCriteria)\n\t\t\t\t\t\treturn false;\n\t\t\t\t\treturn super.place(world, generator, rand, pos, config);\n\t\t\t\t}\n\t\t\t}.withConfiguration(new OreFeatureConfig(OreFeatureConfig.FillerBlockType.create(\"glowstoneore\", \"glowstoneore\", blockAt -> {\n\t\t\t\tboolean blockCriteria = false;\n\t\t\t\tif (blockAt.getBlock() == Blocks.GLOWSTONE.getDefaultState().getBlock())\n\t\t\t\t\tblockCriteria = true;\n\t\t\t\tif (blockAt.getBlock() == Blocks.NETHERRACK.getDefaultState().getBlock())\n\t\t\t\t\tblockCriteria = true;\n\t\t\t\treturn blockCriteria;\n\t\t\t}), block.getDefaultState(), 16)).withPlacement(Placement.COUNT_RANGE.configure(new CountRangeConfig(10, 0, 0, 256))));\n\t\t}\n\t}", "url": "https://raw.githubusercontent.com/KarogathModdingStudios/Enhanced-Vanilla-1.15/master/src/main/java/com/karogath/enhancedvanilla/block/GlowstoneOreBlock.java", "stars": "2", "class_props": {"extends": "EnhancedVanillaElements", "implements": null, "modifiers": ["public"]}}, {"id": 63022, "method_name": "getPickBlock", "class_name": "CustomBlock", "params": ["BlockState", "RayTraceResult", "IBlockReader", "BlockPos", "PlayerEntity"], "throws": null, "modifiers": ["public"], "return_type": "ItemStack", "snippet": "\t\tpublic ItemStack getPickBlock(BlockState state, RayTraceResult target, IBlockReader world, BlockPos pos, PlayerEntity player) {\n\t\t\treturn new ItemStack(GlowstoneOreBlock.block, (int) (1));\n\t\t}", "url": "https://raw.githubusercontent.com/KarogathModdingStudios/Enhanced-Vanilla-1.15/master/src/main/java/com/karogath/enhancedvanilla/block/GlowstoneOreBlock.java", "stars": "2", "class_props": {"extends": "Block", "implements": null, "modifiers": ["public", "static"]}}, {"id": 63023, "method_name": "getDrops", "class_name": "CustomBlock", "params": ["BlockState", "LootContext"], "throws": null, "modifiers": ["public"], "return_type": "List<ItemStack>", "snippet": "\t\tpublic List<ItemStack> getDrops(BlockState state, LootContext.Builder builder) {\n\t\t\tList<ItemStack> dropsOriginal = super.getDrops(state, builder);\n\t\t\tif (!dropsOriginal.isEmpty())\n\t\t\t\treturn dropsOriginal;\n\t\t\treturn Collections.singletonList(new ItemStack(GlowstoneShardItem.block, (int) (3)));\n\t\t}", "url": "https://raw.githubusercontent.com/KarogathModdingStudios/Enhanced-Vanilla-1.15/master/src/main/java/com/karogath/enhancedvanilla/block/GlowstoneOreBlock.java", "stars": "2", "class_props": {"extends": "Block", "implements": null, "modifiers": ["public", "static"]}}, {"id": 63024, "method_name": "main", "class_name": "EscapedChars", "params": ["String"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "\tpublic static void main(String args[]) {\n\t\tSystem.out.println(\"Source Code.\\nCompiler.\\nJVM.\");\n\n\t\tSystem.out.println(\"Source Code.\\tCompiler.\\tJVM.\");\n\t}", "url": "https://raw.githubusercontent.com/Suranchiyev/java-sdet-2020/master/src/day2/EscapedChars.java", "stars": "21", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 63025, "method_name": "getArg0", "class_name": "UpdateUserCard", "params": [], "throws": null, "modifiers": ["public"], "return_type": "UserCard", "snippet": "    public UserCard getArg0() {\n        return arg0;\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/ws/cerbercrypt/usercard/UpdateUserCard.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 63026, "method_name": "setArg0", "class_name": "UpdateUserCard", "params": ["UserCard"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setArg0(UserCard value) {\n        this.arg0 = value;\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/ws/cerbercrypt/usercard/UpdateUserCard.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 63027, "method_name": "testPackRoleFile", "class_name": "InstallTest", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void testPackRoleFile() {\n        OSEnum osType;\n        if (OSinfo.isWindows()) {\n            osType = OSEnum.WINDOWS;\n        } else if (OSinfo.isMacOS() || OSinfo.isMacOSX()) {\n            osType = OSEnum.MAC;\n        } else {\n            osType = OSEnum.LINUX;\n        }\n\n        List<RoleEnum> roleList = new ArrayList<>();\n        roleList.add(RoleEnum.PEER);\n        /*String packFilePath = installBiz.packInstallFiles(\"172.100.10.4\", roleList, osType);\n        System.out.println(\"\u5b89\u88c5\u5305\u8def\u5f84: \" + packFilePath);*/\n    }", "url": "https://raw.githubusercontent.com/zeoio/fabric-toolkit/master/bcp-install-main/src/test/java/InstallTest.java", "stars": "7", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 63028, "method_name": "testDownloadFile", "class_name": "InstallTest", "params": [], "throws": ["Exception"], "modifiers": ["public"], "return_type": "void", "snippet": "    public void testDownloadFile() throws Exception {\n        MvcResult mvcResult = mockMvc.perform(MockMvcRequestBuilders.get(\"/v1/install/getPackage/MAC\")).andReturn();\n        System.out.println(mvcResult.getResponse().getContentAsString());\n    }", "url": "https://raw.githubusercontent.com/zeoio/fabric-toolkit/master/bcp-install-main/src/test/java/InstallTest.java", "stars": "7", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 63029, "method_name": "testSendUpdateCmd", "class_name": "InstallTest", "params": [], "throws": ["Exception"], "modifiers": ["public"], "return_type": "void", "snippet": "    public void testSendUpdateCmd() throws Exception {\n        String filePath = \"/resources/generateInstallPackage/masterPackage/initconfig.propertise\";\n        File file = new File(filePath);\n        System.out.println(file.getParent());\n        System.out.println(new File(file.getParent()).getName());\n\n        UpdateCmd cmd = new UpdateCmd();\n        /*cmd.setRole(RoleEnum.WEB);*/\n\n        MockMultipartFile firstFile = new MockMultipartFile(\"file\", \"filename.txt\", null, \"some xml\".getBytes());\n        MockMultipartFile jsonFile = new MockMultipartFile(\"content\", \"\", \"application/json\", JSONObject.toJSONString(cmd).getBytes());\n\n        MvcResult mvcResult = mockMvc.perform(MockMvcRequestBuilders.multipart(\"/v1/install/update\").file(firstFile).file(jsonFile)).andReturn();\n        System.out.println(mvcResult.getResponse().getContentAsString());\n    }", "url": "https://raw.githubusercontent.com/zeoio/fabric-toolkit/master/bcp-install-main/src/test/java/InstallTest.java", "stars": "7", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 63030, "method_name": "testDb", "class_name": "InstallTest", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void testDb() {\n        NodeDO nodeDO = new NodeDO();\n        nodeDO.setOrgMspId(\"Org1MSP\");\n        nodeDO.setHostName(\"order.example.com\");\n        nodeDO.setRole(RoleEnum.ORDER);\n        nodeDO.setIp(\"127.0.0.1\");\n        nodeDO.setPort(7070);\n        nodeDO.setStatus(InstallStatusEnum.SUCCESS);\n        try {\n            checkPointDb.addNodeRecord(nodeDO);\n\n            List<NodeDO> found = checkPointDb.find(nodeDO);\n            System.out.println(found.size());\n        } catch (SQLException e) {\n            e.printStackTrace();\n        }\n    }", "url": "https://raw.githubusercontent.com/zeoio/fabric-toolkit/master/bcp-install-main/src/test/java/InstallTest.java", "stars": "7", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 63031, "method_name": "saveShop", "class_name": "PrefShopAdminHome", "params": ["Shop", "Context"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void saveShop(Shop shop, Context context)\n    {\n        context = MyApplication.getAppContext();\n\n        if(context == null)\n        {\n            return;\n        }\n\n        //Creating a shared preference\n\n        SharedPreferences sharedPref = context.getSharedPreferences(context.getString(R.string.preference_file_name), MODE_PRIVATE);\n        SharedPreferences.Editor prefsEditor = sharedPref.edit();\n\n        Gson gson = UtilityFunctions.provideGson();\n        String json = gson.toJson(shop);\n        prefsEditor.putString(\"shop_profile_for_shop_admin\", json);\n\n        prefsEditor.apply();\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/Preferences/PrefShopAdminHome.java", "stars": "10", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 63032, "method_name": "getShop", "class_name": "PrefShopAdminHome", "params": ["Context"], "throws": null, "modifiers": ["public", "static"], "return_type": "Shop", "snippet": "    public static Shop getShop(Context context)\n    {\n        context = MyApplication.getAppContext();\n\n\n        SharedPreferences sharedPref = context.getSharedPreferences(context.getString(R.string.preference_file_name), MODE_PRIVATE);\n\n        Gson gson = UtilityFunctions.provideGson();\n        String json = sharedPref.getString(\"shop_profile_for_shop_admin\", null);\n\n        return gson.fromJson(json, Shop.class);\n\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/Preferences/PrefShopAdminHome.java", "stars": "10", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 63033, "method_name": "onCreateViewHolder", "class_name": "ProjectsListsAdapter", "params": ["ViewGroup", "int"], "throws": null, "modifiers": ["public"], "return_type": "ProjectsListsAdapter", "snippet": "    public ProjectsListsAdapter.ViewHolder onCreateViewHolder(ViewGroup parent, int viewType) {\n        View view = activity.getLayoutInflater().inflate(R.layout.market_recycler_view_item_projects, parent, false);\n        return new ViewHolder(view);\n    }", "url": "https://raw.githubusercontent.com/justneon33/Sketchcode/master/app/src/main/java/com/sketch/code/two/adapter/recyclerview/ProjectsListsAdapter.java", "stars": "4", "class_props": {"extends": "RecyclerView", "implements": null, "modifiers": ["public"]}}, {"id": 63034, "method_name": "onBindViewHolder", "class_name": "ProjectsListsAdapter", "params": ["ProjectsListsAdapter", "int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onBindViewHolder(ProjectsListsAdapter.ViewHolder holder, int position) {\n        holder.title.setText(data.get(position).getProjectsName());\n        holder.subtitle.setText(data.get(position).getProjectsDesc());\n        new ThreadLoader(() -> {\n            holder.recyclerView.setLayoutManager(new LinearLayoutManager(activity, LinearLayoutManager.HORIZONTAL, false));\n            holder.adapter = new ProjectsAdapter(data.get(position).getProjects(), activity);\n        }, () -> {\n            holder.recyclerView.setAdapter(holder.adapter);\n        });\n        holder.itemView.setOnClickListener(v -> {\n            Intent intent = new Intent(activity, ProjectsViewActivity.class);\n            intent.putExtra(\"projects\", new Gson().toJson(data.get(position).getProjects()));\n            intent.putExtra(\"title\", data.get(position).getProjectsName());\n            activity.startActivity(intent);\n        });\n    }", "url": "https://raw.githubusercontent.com/justneon33/Sketchcode/master/app/src/main/java/com/sketch/code/two/adapter/recyclerview/ProjectsListsAdapter.java", "stars": "4", "class_props": {"extends": "RecyclerView", "implements": null, "modifiers": ["public"]}}, {"id": 63035, "method_name": "getItemCount", "class_name": "ProjectsListsAdapter", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getItemCount() {\n        return data.size();\n    }", "url": "https://raw.githubusercontent.com/justneon33/Sketchcode/master/app/src/main/java/com/sketch/code/two/adapter/recyclerview/ProjectsListsAdapter.java", "stars": "4", "class_props": {"extends": "RecyclerView", "implements": null, "modifiers": ["public"]}}, {"id": 63036, "method_name": "statusMessage", "class_name": "RandomEventSupernova", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String statusMessage()               { return text(\"SYSTEMS_STATUS_SUPERNOVA\",str(turnsNeeded-turnCount), str((int)Math.ceil(researchRemaining))); }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/events/RandomEventSupernova.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Serializable", "RandomEvent", "ColonyResearchProject"], "modifiers": ["public"]}}, {"id": 63037, "method_name": "systemKey", "class_name": "RandomEventSupernova", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String systemKey()                   { return \"MAIN_PLANET_EVENT_SUPERNOVA\"; }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/events/RandomEventSupernova.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Serializable", "RandomEvent", "ColonyResearchProject"], "modifiers": ["public"]}}, {"id": 63038, "method_name": "goodEvent", "class_name": "RandomEventSupernova", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean goodEvent()    \t\t{ return false; }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/events/RandomEventSupernova.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Serializable", "RandomEvent", "ColonyResearchProject"], "modifiers": ["public"]}}, {"id": 63039, "method_name": "repeatable", "class_name": "RandomEventSupernova", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean repeatable()    \t\t{ return false; }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/events/RandomEventSupernova.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Serializable", "RandomEvent", "ColonyResearchProject"], "modifiers": ["public"]}}, {"id": 63040, "method_name": "notificationText", "class_name": "RandomEventSupernova", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String notificationText()    {\n        String s1 = text(\"EVENT_SUPERNOVA\");\n        s1 = s1.replace(\"[system]\", galaxy().empire(empId).sv.name(sysId));\n        s1 = s1.replace(\"[years]\", str((int)Math.ceil(1+turnsNeeded-turnCount)));\n        s1 = galaxy().empire(empId).replaceTokens(s1, \"target\");\n        return s1;\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/events/RandomEventSupernova.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Serializable", "RandomEvent", "ColonyResearchProject"], "modifiers": ["public"]}}, {"id": 63041, "method_name": "projectKey", "class_name": "RandomEventSupernova", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String projectKey()          { return text(\"MAIN_COLONY_SPENDING_SUPERNOVA\"); }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/events/RandomEventSupernova.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Serializable", "RandomEvent", "ColonyResearchProject"], "modifiers": ["public"]}}, {"id": 63042, "method_name": "remainingResearchBC", "class_name": "RandomEventSupernova", "params": [], "throws": null, "modifiers": ["public"], "return_type": "float", "snippet": "    public float remainingResearchBC()   { return researchRemaining; }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/events/RandomEventSupernova.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Serializable", "RandomEvent", "ColonyResearchProject"], "modifiers": ["public"]}}, {"id": 63043, "method_name": "addResearchBC", "class_name": "RandomEventSupernova", "params": ["float"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void addResearchBC(float amt) {\n        researchRemaining -= amt;\n        if (researchRemaining <= 0)\n            solveSupernova();\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/events/RandomEventSupernova.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Serializable", "RandomEvent", "ColonyResearchProject"], "modifiers": ["public"]}}, {"id": 63044, "method_name": "trigger", "class_name": "RandomEventSupernova", "params": ["Empire"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void trigger(Empire emp) {\n        // find a random colony that has at least 30 population that does not already have a research project, not a homeworld\n        // allowing these combinations would complicate a lot of code in other places, so not allowed by fiat\n        List<StarSystem> systems = new ArrayList<>();\n        for (StarSystem sys : emp.allColonizedSystems()) {\n            Colony col = sys.colony();\n            if ((col.population() >= 30) && !col.research().hasProject() && !col.isCapital())\n                systems.add(sys);\n        }\n        if (systems.isEmpty())\n            return;\n\n        turnCount = 0;\n        turnsNeeded = roll(5,15);\n\n        StarSystem targetSystem = random(systems);\n        empId = emp.id;\n        sysId = targetSystem.id;\n\n        targetSystem.eventKey(systemKey());\n        researchNeeded = turnsNeeded * targetSystem.colony().totalProductionIncome();\n        researchRemaining = researchNeeded;\n        if (player().knowsOf(empId))\n            GNNNotification.notifyRandomEvent(notificationText(), \"GNN_Event_Supernova\");\n\n        affectColony();\n        galaxy().events().addActiveEvent(this);\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/events/RandomEventSupernova.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Serializable", "RandomEvent", "ColonyResearchProject"], "modifiers": ["public"]}}, {"id": 63045, "method_name": "nextTurn", "class_name": "RandomEventSupernova", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void nextTurn() {\n        affectColony();\n        turnCount++;\n\n        if ((turnCount % 5 == 0) && (player().id == empId))\n            GNNNotification.notifyRandomEvent(continuingText(), \"GNN_Event_Supernova\");\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/events/RandomEventSupernova.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Serializable", "RandomEvent", "ColonyResearchProject"], "modifiers": ["public"]}}, {"id": 63046, "method_name": "affectColony", "class_name": "RandomEventSupernova", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void affectColony() {\n        StarSystem sys = galaxy().system(sysId);\n        // reduce population by 5-10%\n        Colony targetColony = sys.colony();\n        \n        // research ends if colony is destroyed\n        if (targetColony != null)\n            targetColony.research().project(this);\n        \n        if (turnCount == turnsNeeded)\n            goSupernova();\n        \n        // if colony changed hands instead\n        // transfer project to  new empire\n        Empire sysEmp = sys.empire();\n        int sysEmpId = id(sysEmp);\n        if (sysEmpId != empId) {\n            empId = sysEmpId;\n            researchRemaining = researchNeeded;\n            if (sysEmp == player())\n                GNNNotification.notifyRandomEvent(notificationText(), \"GNN_Event_Supernova\");\n        }\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/events/RandomEventSupernova.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Serializable", "RandomEvent", "ColonyResearchProject"], "modifiers": ["public"]}}, {"id": 63047, "method_name": "continuingText", "class_name": "RandomEventSupernova", "params": [], "throws": null, "modifiers": ["private"], "return_type": "String", "snippet": "    private String continuingText() {\n        String s1 = text(\"EVENT_SUPERNOVA_2\");\n        s1 = s1.replace(\"[system]\", player().sv.name(sysId));\n        s1 = s1.replace(\"[amt]\", str((int)Math.ceil(researchRemaining)));\n        s1 = s1.replace(\"[years]\", str((int)Math.ceil(1+turnsNeeded-turnCount)));\n        s1 = galaxy().empire(empId).replaceTokens(s1, \"target\");\n        return s1;\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/events/RandomEventSupernova.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Serializable", "RandomEvent", "ColonyResearchProject"], "modifiers": ["public"]}}, {"id": 63048, "method_name": "goodEndText", "class_name": "RandomEventSupernova", "params": [], "throws": null, "modifiers": ["private"], "return_type": "String", "snippet": "    private String goodEndText() {\n        String s1 = text(\"EVENT_SUPERNOVA_3\");\n        s1 = s1.replace(\"[system]\", player().sv.name(sysId));\n        s1 = galaxy().empire(empId).replaceTokens(s1, \"target\");\n        return s1;\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/events/RandomEventSupernova.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Serializable", "RandomEvent", "ColonyResearchProject"], "modifiers": ["public"]}}, {"id": 63049, "method_name": "badEndText", "class_name": "RandomEventSupernova", "params": [], "throws": null, "modifiers": ["private"], "return_type": "String", "snippet": "    private String badEndText() {\n        String s1 = text(\"EVENT_SUPERNOVA_4\");\n        s1 = s1.replace(\"[system]\", player().sv.name(sysId));\n        s1 = galaxy().empire(empId).replaceTokens(s1, \"target\");\n        return s1;\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/events/RandomEventSupernova.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Serializable", "RandomEvent", "ColonyResearchProject"], "modifiers": ["public"]}}, {"id": 63050, "method_name": "solveSupernova", "class_name": "RandomEventSupernova", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void solveSupernova() {\n        StarSystem targetSystem = galaxy().system(sysId);\n        galaxy().events().removeActiveEvent(this);\n        targetSystem.clearEvent();\n        Colony col = targetSystem.colony();\n        \n        session().removePendingNotification(\"GNN_Event_Supernova\");\n        // possible colony is destroyed before supernova\n        if (col != null) {\n            col.research().endProject();\n            if (player().knowsOf(empId))\n                GNNNotification.notifyRandomEvent(goodEndText(), \"GNN_Event_Supernova\");\n        }\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/events/RandomEventSupernova.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Serializable", "RandomEvent", "ColonyResearchProject"], "modifiers": ["public"]}}, {"id": 63051, "method_name": "goSupernova", "class_name": "RandomEventSupernova", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void goSupernova() {\n        StarSystem targetSystem = galaxy().system(sysId);\n        galaxy().events().removeActiveEvent(this);\n        targetSystem.clearEvent();\n        targetSystem.planet().baseSize(roll(11,20)); // reset size first... irradiate will reset pop\n        targetSystem.planet().irradiateEnvironment();\n        targetSystem.addEvent(new SystemRandomEvent(\"SYSEVENT_SUPERNOVA\"));\n\n        Colony col = targetSystem.colony();\n\n        // possible colony is destroyed before supernova\n        if (col != null) {\n            col.research().endProject();\n            if (player().knowsOf(empId))\n                GNNNotification.notifyRandomEvent(badEndText(), \"GNN_Event_Supernova\");\n        }\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/events/RandomEventSupernova.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Serializable", "RandomEvent", "ColonyResearchProject"], "modifiers": ["public"]}}, {"id": 63052, "method_name": "timeStamp2Date", "class_name": "DateUtils", "params": ["String", "String"], "throws": null, "modifiers": ["public", "static"], "return_type": "String", "snippet": "    public static String timeStamp2Date(String timestampString, String formats) {\n        if (TextUtils.isEmpty(formats))\n            formats = \"yyyy-MM-dd HH:mm:ss\";\n        Long timestamp = Long.parseLong(timestampString) * 1000;\n        String date = new SimpleDateFormat(formats, Locale.CHINA).format(new Date(timestamp));\n        return date;\n    }", "url": "https://raw.githubusercontent.com/Florizt/RxMVVM/master/rxmvvmlib/src/main/java/com/rx/rxmvvmlib/util/DateUtils.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 63053, "method_name": "date2TimeStamp", "class_name": "DateUtils", "params": ["String", "String"], "throws": null, "modifiers": ["public", "static"], "return_type": "long", "snippet": "    public static long date2TimeStamp(String dateStr, String format) {\n        try {\n            SimpleDateFormat sdf = new SimpleDateFormat(format);\n            return sdf.parse(dateStr).getTime() / 1000;\n        } catch (Exception e) {\n            e.printStackTrace();\n        }\n        return 0;\n    }", "url": "https://raw.githubusercontent.com/Florizt/RxMVVM/master/rxmvvmlib/src/main/java/com/rx/rxmvvmlib/util/DateUtils.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 63054, "method_name": "error", "class_name": "BaseExceptionHandler", "params": ["Exception"], "throws": null, "modifiers": ["public"], "return_type": "Result", "snippet": "    public Result error(Exception e){\n        e.printStackTrace();        \n        return new Result(false, StatusCode.ERROR, \"\u6267\u884c\u51fa\u9519\");\n    }", "url": "https://raw.githubusercontent.com/1127140426/tensquare/master/tensquare_user/src/main/java/com/tensquare/user/controller/BaseExceptionHandler.java", "stars": "34", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 63055, "method_name": "setUp", "class_name": "PermissionsTest", "params": [], "throws": ["Exception"], "modifiers": ["static"], "return_type": "void", "snippet": "  static void setUp() throws Exception {\n    // create a SqlSessionFactory\n    try (Reader reader = Resources.getResourceAsReader(\"org/apache/ibatis/submitted/permissions/mybatis-config.xml\")) {\n      sqlSessionFactory = new SqlSessionFactoryBuilder().build(reader);\n    }\n\n    // populate in-memory database\n    BaseDataTest.runScript(sqlSessionFactory.getConfiguration().getEnvironment().getDataSource(),\n            \"org/apache/ibatis/submitted/permissions/CreateDB.sql\");\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/permissions/PermissionsTest.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 63056, "method_name": "checkNestedResultMapLoop", "class_name": "PermissionsTest", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "  void checkNestedResultMapLoop() {\n    try (SqlSession sqlSession = sqlSessionFactory.openSession()) {\n      final PermissionsMapper mapper = sqlSession.getMapper(PermissionsMapper.class);\n\n      final List<Resource> resources = mapper.getResources();\n      Assertions.assertEquals(2, resources.size());\n\n      final Resource firstResource = resources.get(0);\n      final List<Principal> principalPermissions = firstResource.getPrincipals();\n      Assertions.assertEquals(1, principalPermissions.size());\n\n      final Principal firstPrincipal = principalPermissions.get(0);\n      final List<Permission> permissions = firstPrincipal.getPermissions();\n      Assertions.assertEquals(2, permissions.size());\n\n      final Permission firstPermission = firstPrincipal.getPermissions().get(0);\n      Assertions.assertSame(firstResource, firstPermission.getResource());\n      final Permission secondPermission = firstPrincipal.getPermissions().get(1);\n      Assertions.assertSame(firstResource, secondPermission.getResource());\n    }\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/permissions/PermissionsTest.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 63057, "method_name": "checkNestedSelectLoop", "class_name": "PermissionsTest", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "  void checkNestedSelectLoop() {\n    try (SqlSession sqlSession = sqlSessionFactory.openSession()) {\n      final PermissionsMapper mapper = sqlSession.getMapper(PermissionsMapper.class);\n\n      final List<Resource> resources = mapper.getResource(\"read\");\n      Assertions.assertEquals(1, resources.size());\n\n      final Resource firstResource = resources.get(0);\n      final List<Principal> principalPermissions = firstResource.getPrincipals();\n      Assertions.assertEquals(1, principalPermissions.size());\n\n      final Principal firstPrincipal = principalPermissions.get(0);\n      final List<Permission> permissions = firstPrincipal.getPermissions();\n      Assertions.assertEquals(4, permissions.size());\n\n      boolean readFound = false;\n      for (Permission permission : permissions) {\n        if (\"read\".equals(permission.getPermission())) {\n          Assertions.assertSame(firstResource, permission.getResource());\n          readFound = true;\n        }\n      }\n\n      if (!readFound) {\n        Assertions.fail();\n      }\n    }\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/permissions/PermissionsTest.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 63058, "method_name": "getLayoutId", "class_name": "Request2Activity", "params": [], "throws": null, "modifiers": ["protected"], "return_type": "int", "snippet": "    protected int getLayoutId() {\n        return R.layout.request2;\n    }", "url": "https://raw.githubusercontent.com/guozaizai/myHttpSdkDemo/master/app/src/main/java/myapp/com/xm/myapplication/View/Request2Activity.java", "stars": "9", "class_props": {"extends": "BaseActivity", "implements": null, "modifiers": ["public"]}}, {"id": 63059, "method_name": "initData", "class_name": "Request2Activity", "params": ["Bundle"], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void initData(Bundle savedInstanceState) {\n        tvName = findViewById(R.id.tv_name);\n        btnRequest=findViewById(R.id.btn_request);\n        btnRequestHead = findViewById(R.id.btn_request_head);\n        btnRequest.setOnClickListener(v -> {\n            Api.getInstance().clearHeadMap();\n            Api.getApi().api(new PwdLoginRequest(\"13712345678\", \"123456\"))\n                    .compose(new ComTransformer<>())\n                    .subscribe(request(data -> getData((LoginResult) data)));\n        });\n        btnRequestHead.setOnClickListener(v -> {\n            Api.getInstance().clearApiService();\n            Map<String, String> map = new HashMap<>();\n            map.put(\"token\", \"123456\");\n            Api.getInstance().setHeadMap(map);\n            Api.getApi().api(new PwdLoginRequest(\"13712345678\", \"123456\"))\n                    .compose(new ComTransformer<>())\n                    .subscribe(request(data -> getData((LoginResult) data)));\n        });\n    }", "url": "https://raw.githubusercontent.com/guozaizai/myHttpSdkDemo/master/app/src/main/java/myapp/com/xm/myapplication/View/Request2Activity.java", "stars": "9", "class_props": {"extends": "BaseActivity", "implements": null, "modifiers": ["public"]}}, {"id": 63060, "method_name": "showTitle", "class_name": "Request2Activity", "params": [], "throws": null, "modifiers": ["protected"], "return_type": "String", "snippet": "    protected String showTitle() {\n        return \"\u76f4\u63a5\u7f51\u7edc\u8bf7\u6c42\";\n    }", "url": "https://raw.githubusercontent.com/guozaizai/myHttpSdkDemo/master/app/src/main/java/myapp/com/xm/myapplication/View/Request2Activity.java", "stars": "9", "class_props": {"extends": "BaseActivity", "implements": null, "modifiers": ["public"]}}, {"id": 63061, "method_name": "getData", "class_name": "Request2Activity", "params": ["LoginResult"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void getData(LoginResult loginResult) {\n        tvName.setText(loginResult.toString());\n    }", "url": "https://raw.githubusercontent.com/guozaizai/myHttpSdkDemo/master/app/src/main/java/myapp/com/xm/myapplication/View/Request2Activity.java", "stars": "9", "class_props": {"extends": "BaseActivity", "implements": null, "modifiers": ["public"]}}, {"id": 63062, "method_name": "toString", "class_name": "AICDiplomat", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String toString()   { return concat(\"Diplomat: \", empire.raceName()); }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/ai/community/AICDiplomat.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Diplomat"], "modifiers": ["public"]}}, {"id": 63063, "method_name": "diplomats", "class_name": "AICDiplomat", "params": ["int"], "throws": null, "modifiers": ["private"], "return_type": "boolean", "snippet": "    private boolean diplomats(int empId) {\n        return empire.viewForEmpire(empId).diplomats();\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/ai/community/AICDiplomat.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Diplomat"], "modifiers": ["public"]}}, {"id": 63064, "method_name": "canOfferAid", "class_name": "AICDiplomat", "params": ["Empire"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean canOfferAid(Empire e) { \n        if (!diplomats(id(e)) || empire.atWarWith(id(e)) || !empire.inEconomicRange(id(e)))\n            return false;\n                \n        // do we have money to give?\n        if (!offerAidAmounts().isEmpty())\n            return true;\n        \n        // if not, do we have techs to give?\n        return !offerableTechnologies(e).isEmpty();\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/ai/community/AICDiplomat.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Diplomat"], "modifiers": ["public"]}}, {"id": 63065, "method_name": "canOfferMoney", "class_name": "AICDiplomat", "params": ["Empire"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean canOfferMoney(Empire e) { \n        if (!diplomats(id(e)) || empire.atWarWith(id(e)) || !empire.inEconomicRange(id(e)))\n            return false;\n        return !offerAidAmounts().isEmpty();\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/ai/community/AICDiplomat.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Diplomat"], "modifiers": ["public"]}}, {"id": 63066, "method_name": "canOfferTechnology", "class_name": "AICDiplomat", "params": ["Empire"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean canOfferTechnology(Empire e)  { \n        if (!diplomats(id(e)) || empire.atWarWith(id(e)) || !empire.inEconomicRange(id(e)))\n            return false;\n                \n        return !offerableTechnologies(e).isEmpty();\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/ai/community/AICDiplomat.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Diplomat"], "modifiers": ["public"]}}, {"id": 63067, "method_name": "offerableTechnologies", "class_name": "AICDiplomat", "params": ["Empire"], "throws": null, "modifiers": ["public"], "return_type": "List<Tech>", "snippet": "    public List<Tech> offerableTechnologies(Empire e) {\n        List<String> allMyTechIds = empire.tech().allKnownTechs();\n        List<String> hisTechIds = e.tech().allKnownTechs();\n        allMyTechIds.removeAll(hisTechIds);\n         \n        List<Tech> allTechs = new ArrayList<>();\n        for (String id: allMyTechIds)\n            allTechs.add(tech(id));\n        allTechs.removeAll(e.tech().tradedTechs());\n        \n        int maxTechs = 5;\n        // sort unknown techs by our research value \n        Tech.comparatorCiv = empire;\n        Collections.sort(allTechs, Tech.RESEARCH_VALUE);\n        if (allTechs.size() <= maxTechs)\n            return allTechs;\n        List<Tech> techs = new ArrayList<>(maxTechs);\n        for (int i=0; i<maxTechs;i++)\n            techs.add(allTechs.get(i));\n        return techs;\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/ai/community/AICDiplomat.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Diplomat"], "modifiers": ["public"]}}, {"id": 63068, "method_name": "offerAidAmounts", "class_name": "AICDiplomat", "params": [], "throws": null, "modifiers": ["public"], "return_type": "List<Integer>", "snippet": "    public List<Integer> offerAidAmounts() {\n        float reserve = empire.totalReserve();\n        List<Integer> amts = new ArrayList<>();\n        if (reserve > 25000) {\n            amts.add(10000);amts.add(5000); amts.add(1000); amts.add(500);\n        }\n        else if (reserve > 10000) {\n            amts.add(5000); amts.add(1000); amts.add(500); amts.add(100);\n        }\n        else if (reserve > 2500) {\n            amts.add(1000);amts.add(500); amts.add(100); amts.add(50);\n        }\n        else if (reserve > 1000) {\n            amts.add(500); amts.add(100); amts.add(50);\n        }\n        else if (reserve > 250) {\n            amts.add(100); amts.add(50);\n        }\n        else if (reserve > 100) {\n            amts.add(50);\n        }\n        return amts;\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/ai/community/AICDiplomat.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Diplomat"], "modifiers": ["public"]}}, {"id": 63069, "method_name": "receiveFinancialAid", "class_name": "AICDiplomat", "params": ["Empire", "int"], "throws": null, "modifiers": ["public"], "return_type": "DiplomaticReply", "snippet": "    public DiplomaticReply receiveFinancialAid(Empire donor, int amt) {\n        if (amt > 0) {\n            empire.addToTreasury(amt);\n            donor.addToTreasury(0-amt);\n        }\n        EmpireView view = donor.viewForEmpire(empire);\n        DiplomaticIncident inc = FinancialAidIncident.create(empire, donor, amt);\n        return view.accept(DialogueManager.ACCEPT_FINANCIAL_AID, inc);\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/ai/community/AICDiplomat.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Diplomat"], "modifiers": ["public"]}}, {"id": 63070, "method_name": "receiveTechnologyAid", "class_name": "AICDiplomat", "params": ["Empire", "String"], "throws": null, "modifiers": ["public"], "return_type": "DiplomaticReply", "snippet": "    public DiplomaticReply receiveTechnologyAid(Empire donor, String techId) {\n        empire.tech().acquireTechThroughTrade(techId, donor.id);\n\n        EmpireView view = donor.viewForEmpire(empire);\n        DiplomaticIncident inc = TechnologyAidIncident.create(empire, donor, techId);\n        return view.accept(DialogueManager.ACCEPT_TECHNOLOGY_AID, inc);\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/ai/community/AICDiplomat.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Diplomat"], "modifiers": ["public"]}}, {"id": 63071, "method_name": "canExchangeTechnology", "class_name": "AICDiplomat", "params": ["Empire"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean canExchangeTechnology(Empire e)         { return diplomats(id(e)) && !empire.atWarWith(id(e)) && empire.inEconomicRange(id(e)) && !empire.viewForEmpire(id(e)).spies().unknownTechs().isEmpty(); }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/ai/community/AICDiplomat.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Diplomat"], "modifiers": ["public"]}}, {"id": 63072, "method_name": "receiveRequestTech", "class_name": "AICDiplomat", "params": ["Empire", "Tech"], "throws": null, "modifiers": ["public"], "return_type": "DiplomaticReply", "snippet": "    public DiplomaticReply receiveRequestTech(Empire diplomat, Tech tech) {\n        if (empire.isPlayer()) {\n            EmpireView v = diplomat.viewForEmpire(empire);\n            // 1st, create the reply for the AI asking the player for the tech\n            DiplomaticReply reply = v.otherView().accept(DialogueManager.OFFER_TECH_EXCHANGE);\n            // decode the [tech] field in the reply text\n            reply.decode(\"[tech]\", tech.name());\n            // 2nd, create the counter-offer menu that the player would present to the AI\n            DiplomacyTechOfferMenu menu = DiplomacyTechOfferMenu.create(empire, diplomat, reply, tech);\n            // if counter offers available, display the request in modal\n            if (menu.hasCounterOffers())\n                DiplomaticMessage.replyModal(menu);\n            return null;\n        }\n\n        EmpireView v = empire.viewForEmpire(diplomat);\n        v.embassy().noteRequest();\n        if (v.embassy().alreadyOfferedTech())\n            v.embassy().noteRequest();\n\n        if (v.embassy().tooManyRequests())\n            return v.refuse(DialogueManager.DECLINE_ANNOYED);\n\n        v.embassy().resetTechTimer();\n\n        List<Tech> counterTechs = empire.diplomatAI().techsRequestedForCounter(diplomat, tech);\n        if (counterTechs.isEmpty())\n            return v.refuse(DialogueManager.DECLINE_TECH_TRADE);\n\n        // accept and present a menu of counter-offer techs\n        return v.otherView().accept(DialogueManager.DIPLOMACY_TECH_CTR_MENU);\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/ai/community/AICDiplomat.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Diplomat"], "modifiers": ["public"]}}, {"id": 63073, "method_name": "receiveCounterOfferTech", "class_name": "AICDiplomat", "params": ["Empire", "Tech", "Tech"], "throws": null, "modifiers": ["public"], "return_type": "DiplomaticReply", "snippet": "    public DiplomaticReply receiveCounterOfferTech(Empire diplomat, Tech offeredTech, Tech requestedTech) {\n        EmpireView view = empire.viewForEmpire(diplomat);\n        DiplomaticIncident inc = view.embassy().exchangeTechnology(offeredTech, requestedTech);\n        return view.otherView().accept(DialogueManager.ACCEPT_TECH_EXCHANGE, inc);\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/ai/community/AICDiplomat.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Diplomat"], "modifiers": ["public"]}}, {"id": 63074, "method_name": "techsAvailableForRequest", "class_name": "AICDiplomat", "params": ["Empire"], "throws": null, "modifiers": ["public"], "return_type": "List<Tech>", "snippet": "    public List<Tech> techsAvailableForRequest(Empire diplomat) {\n        EmpireView view = empire.viewForEmpire(diplomat);\n        List<Tech> allUnknownTechs = view.spies().unknownTechs();\n\n        List<Tech> allTechs = new ArrayList<>();\n        for (int i=0; i<allUnknownTechs.size();i++) {\n            Tech tech = allUnknownTechs.get(i);\n            if (!diplomat.diplomatAI().techsRequestedForCounter(empire, tech).isEmpty())\n                allTechs.add(allUnknownTechs.get(i));\n        }        \n\n        int maxTechs = 5;\n        // sort unknown techs by our research value \n        Tech.comparatorCiv = empire;\n        Collections.sort(allTechs, Tech.RESEARCH_VALUE);\n        if (allTechs.size() <= maxTechs)\n            return allTechs;\n        List<Tech> techs = new ArrayList<>(maxTechs);\n        for (int i=0; i<maxTechs;i++) \n            techs.add(allTechs.get(i));\n        return techs;\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/ai/community/AICDiplomat.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Diplomat"], "modifiers": ["public"]}}, {"id": 63075, "method_name": "techsRequestedForCounter", "class_name": "AICDiplomat", "params": ["Empire", "Tech"], "throws": null, "modifiers": ["public"], "return_type": "List<Tech>", "snippet": "    public List<Tech> techsRequestedForCounter(Empire requestor, Tech tech) {\n        EmpireView view = empire.viewForEmpire(requestor);\n\n        // what is this times the value of the request tech?dec\n        float maxTechValue = techDealValue(view) * tech.tradeValue(empire);\n\n        // what are all of the unknown techs that we could ask for\n        List<Tech> allTechs = view.spies().unknownTechs();\n\n        // include only those techs which have a research value >= the trade value\n        // of the requestedTech we would be trading away\n        List<Tech> worthyTechs = new ArrayList<>(allTechs.size());\n        for (Tech t: allTechs) {\n            if (t.baseValue(empire) >= maxTechValue)\n                worthyTechs.add(t);\n        }\n\n        // sort techs by the diplomat's research priority (hi to low)\n        Tech.comparatorCiv = empire;\n        Collections.sort(worthyTechs, Tech.RESEARCH_VALUE);\n\n        // limit return to top 5 techs\n        int maxTechs = 5;\n        if (worthyTechs.size() <= maxTechs)\n            return worthyTechs;\n        List<Tech> topFiveTechs = new ArrayList<>(maxTechs);\n        for (int i=0; i<maxTechs;i++)\n            topFiveTechs.add(worthyTechs.get(i));\n        return topFiveTechs;\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/ai/community/AICDiplomat.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Diplomat"], "modifiers": ["public"]}}, {"id": 63076, "method_name": "decidedToExchangeTech", "class_name": "AICDiplomat", "params": ["EmpireView"], "throws": null, "modifiers": ["private"], "return_type": "boolean", "snippet": "    private boolean decidedToExchangeTech(EmpireView v) {\n        if (!willingToOfferTechExchange(v))\n            return false;\n\n        List<Tech> availableTechs = v.spies().unknownTechs();\n        if (availableTechs.isEmpty())\n            return false;\n\n        // iterate over each of available techs, starting with the most desired\n        // until one is found that we can make counter-offers for... use that one\n        while (!availableTechs.isEmpty()) {\n            Tech wantedTech = empire.ai().scientist().mostDesirableTech(availableTechs);\n            availableTechs.remove(wantedTech);\n            if (empire.ai().scientist().researchValue(wantedTech) > 0) {\n                List<Tech> counterTechs = v.empire().diplomatAI().techsRequestedForCounter(empire, wantedTech);\n                List<Tech> previouslyOffered = v.embassy().alreadyOfferedTechs(wantedTech);\n                // simplified logic so that if we have ever asked for wantedTech before, don't ask again\n                if (previouslyOffered == null) {\n                     v.embassy().logTechExchangeRequest(wantedTech, counterTechs);\n                    // there are counters available.. send request\n                    DiplomaticReply reply = v.empire().diplomatAI().receiveRequestTech(empire, wantedTech);\n                    if ((reply != null) && reply.accepted()) {\n                        // techs the AI is willing to consider in exchange for wantedTech\n                        // find the tech with the lowest trade value\n                        counterTechs.add(wantedTech);\n                        Collections.sort(counterTechs, Tech.TRADE_PRIORITY);\n                        Tech cheapestCounter = counterTechs.get(0);\n                        // if the lowest trade value tech is not the requested tech, then make the deal\n                        if (cheapestCounter != wantedTech)\n                            v.empire().diplomatAI().receiveCounterOfferTech(empire, cheapestCounter, wantedTech);\n                    }\n                    return true;\n                }\n            }\n        }\n        return false;\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/ai/community/AICDiplomat.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Diplomat"], "modifiers": ["public"]}}, {"id": 63077, "method_name": "willingToOfferTechExchange", "class_name": "AICDiplomat", "params": ["EmpireView"], "throws": null, "modifiers": ["private"], "return_type": "boolean", "snippet": "    private boolean willingToOfferTechExchange(EmpireView v) {\n        if (!canExchangeTechnology(v.empire()))\n            return false;\n\n        float adjustedRelations = v.embassy().relations();\n        adjustedRelations += empire.leader().acceptTradeMod();\n        adjustedRelations += v.embassy().alliedWithEnemy() ? -100 : 0;\n        return adjustedRelations > 20;\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/ai/community/AICDiplomat.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Diplomat"], "modifiers": ["public"]}}, {"id": 63078, "method_name": "mostDesirableTech", "class_name": "AICDiplomat", "params": ["EmpireView"], "throws": null, "modifiers": ["public"], "return_type": "Tech", "snippet": "    public Tech mostDesirableTech(EmpireView v) {\n        return empire.ai().scientist().mostDesirableTech(v.spies().unknownTechs());\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/ai/community/AICDiplomat.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Diplomat"], "modifiers": ["public"]}}, {"id": 63079, "method_name": "techDealValue", "class_name": "AICDiplomat", "params": ["EmpireView"], "throws": null, "modifiers": ["private"], "return_type": "float", "snippet": "    private float techDealValue(EmpireView v) {\n        if (v.embassy().alliance())\n            return 1.0f;\n        else if (v.embassy().pact())\n            return 0.9f;\n        else\n            return 0.8f;\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/ai/community/AICDiplomat.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Diplomat"], "modifiers": ["public"]}}, {"id": 63080, "method_name": "canOfferDiplomaticTreaties", "class_name": "AICDiplomat", "params": ["Empire"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean canOfferDiplomaticTreaties(Empire e) {\n        if (!empire.inEconomicRange(id(e)))\n            return false;\n        EmpireView view = empire.viewForEmpire(id(e));\n        if (view.embassy().finalWar() || view.embassy().unity())\n            return false;\n        return true;\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/ai/community/AICDiplomat.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Diplomat"], "modifiers": ["public"]}}, {"id": 63081, "method_name": "canOfferTradeTreaty", "class_name": "AICDiplomat", "params": ["Empire"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean canOfferTradeTreaty(Empire e) {\n        if (!empire.inEconomicRange(id(e)))\n            return false;\n        EmpireView view = empire.viewForEmpire(id(e));\n        // Automatic exclusion for AI empires:\n        //    1) Have trade established but it is not yet profitable\n        // or 2) Not at full trade && and can't increase current trade level by +50%\n        if (empire.isAIControlled()) {\n            if ((view.trade().level() > 0)\n            && (view.trade().profit() <= 0))\n                return false;\n            if (!view.trade().atFullLevel()\n            || (view.trade().level() * 1.5) > view.trade().maxLevel())\n                return false;\n        }\n\n        // no trade if no diplomats or at war\n        if (!diplomats(id(e)) || empire.atWarWith(id(e)) )\n            return false;\n        // no trade offer if can't increase from current lvl\n        if (view.nominalTradeLevels().isEmpty())\n            return false;\n\n        return true;\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/ai/community/AICDiplomat.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Diplomat"], "modifiers": ["public"]}}, {"id": 63082, "method_name": "receiveOfferTrade", "class_name": "AICDiplomat", "params": ["Empire", "int"], "throws": null, "modifiers": ["public"], "return_type": "DiplomaticReply", "snippet": "    public DiplomaticReply receiveOfferTrade(Empire requestor, int level) {\n        // if the AI is asking the player, create an OfferTrade notification\n        log(empire.name(), \" receiving offer trade from: \", requestor.name(), \"  for:\", str(level), \" BC\");\n        if (empire.isPlayer()) {\n            DiplomaticNotification.create(requestor.viewForEmpire(empire), DialogueManager.OFFER_TRADE);\n            return null;\n        }\n        EmpireView v = empire.viewForEmpire(requestor);\n        if (requestor.isPlayer()) {\n            if (random(100) < empire.leader().diplomacyAnnoyanceMod(v)) {\n                v.embassy().withdrawAmbassador();\n                return v.refuse(DialogueManager.DECLINE_ANNOYED);\n            }\n        }\n\n        v.embassy().noteRequest();\n        if (!v.embassy().readyForTrade(level))\n            return v.refuse(DialogueManager.DECLINE_OFFER);\n\n        v.embassy().resetTradeTimer(level);\n        int bonus = requestor.race().diplomacyBonus();\n        if ((baseChanceForTrade(v)+bonus) < 0) {\n            v.otherView().embassy().tradeRefused();\n            return refuseOfferTrade(requestor, level);\n        }\n\n        v.otherView().embassy().tradeAccepted();\n        DiplomaticIncident inc = v.embassy().establishTradeTreaty(level);\n        return v.otherView().accept(DialogueManager.ACCEPT_TRADE, inc);\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/ai/community/AICDiplomat.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Diplomat"], "modifiers": ["public"]}}, {"id": 63083, "method_name": "acceptOfferTrade", "class_name": "AICDiplomat", "params": ["Empire", "int"], "throws": null, "modifiers": ["public"], "return_type": "DiplomaticReply", "snippet": "    public DiplomaticReply acceptOfferTrade(Empire e, int level) {\n        EmpireView v = empire.viewForEmpire(e);\n        DiplomaticIncident inc = v.embassy().establishTradeTreaty(level);\n        return v.accept(DialogueManager.ANNOUNCE_TRADE, inc);\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/ai/community/AICDiplomat.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Diplomat"], "modifiers": ["public"]}}, {"id": 63084, "method_name": "refuseOfferTrade", "class_name": "AICDiplomat", "params": ["Empire", "int"], "throws": null, "modifiers": ["public"], "return_type": "DiplomaticReply", "snippet": "    public DiplomaticReply refuseOfferTrade(Empire requestor, int level) {\n        EmpireView v = empire.viewForEmpire(requestor);\n        v.embassy().resetTradeTimer(level);\n        return DiplomaticReply.answer(false, declineReasonText(v));\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/ai/community/AICDiplomat.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Diplomat"], "modifiers": ["public"]}}, {"id": 63085, "method_name": "willingToOfferTrade", "class_name": "AICDiplomat", "params": ["EmpireView", "int"], "throws": null, "modifiers": ["private"], "return_type": "boolean", "snippet": "    private boolean willingToOfferTrade(EmpireView v, int level) {\n        if (!canOfferTradeTreaty(v.empire()))\n            return false;\n        if (v.embassy().alliedWithEnemy()) \n            return false;\n        \n        // if asking player, check that we don't spam him\n        if (v.empire().isPlayer()) {\n             if (!v.otherView().embassy().readyForTrade(level))\n                return false;\n        }\n\n        float currentTrade = v.trade().level();\n        float maxTrade = v.trade().maxLevel();\n        if (maxTrade < (currentTrade * 1.1))\n            return false;\n\n        log(v.toString(), \": willing to offer trade. Max:\", str(maxTrade), \"    current:\", str(currentTrade));\n        return baseChanceForTrade(v) > 0;\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/ai/community/AICDiplomat.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Diplomat"], "modifiers": ["public"]}}, {"id": 63086, "method_name": "baseChanceForTrade", "class_name": "AICDiplomat", "params": ["EmpireView"], "throws": null, "modifiers": ["private"], "return_type": "float", "snippet": "    private float baseChanceForTrade(EmpireView v) {\n        // -50 relations is minimum allowed to accept trade\n        float adjustedRelations = v.embassy().relations()+50;\n        float leaderMod = empire.leader().acceptTradeMod();\n        float raceBonusMod = v.empire().race().tradePctBonus();\n        float allianceMod = v.embassy().alliedWithEnemy() ? -50 : 0;\n        return adjustedRelations+leaderMod+raceBonusMod+allianceMod;\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/ai/community/AICDiplomat.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Diplomat"], "modifiers": ["public"]}}, {"id": 63087, "method_name": "declineReasonText", "class_name": "AICDiplomat", "params": ["EmpireView"], "throws": null, "modifiers": ["private"], "return_type": "String", "snippet": "    private String declineReasonText(EmpireView v) {\n        DialogueManager dlg = DialogueManager.current();\n        DiplomaticIncident inc = worstWarnableIncident(v.embassy().allIncidents());\n\n        // no reason or insignificant, so give generic error\n        if ((inc == null) || (inc.currentSeverity() > -5))\n            return v.decode(dlg.randomMessage(DialogueManager.DECLINE_OFFER, v.owner()));\n\n        if (inc instanceof OathBreakerIncident)\n            return v.decode(inc.decode(dlg.randomMessage(DialogueManager.DECLINE_OATHBREAKER, v.owner())));\n\n        if (inc instanceof MilitaryBuildupIncident)\n            return v.decode(inc.decode(dlg.randomMessage(DialogueManager.DECLINE_BUILDUP, v.owner())));\n\n        if (inc instanceof EncroachmentIncident)\n            return v.decode(inc.decode(dlg.randomMessage(DialogueManager.DECLINE_ENCROACH, v.owner())));\n\n        if (inc instanceof SkirmishIncident)\n            return v.decode(inc.decode(dlg.randomMessage(DialogueManager.DECLINE_SKIRMISH, v.owner())));\n\n        if (inc instanceof ColonyAttackedIncident)\n            return v.decode(inc.decode(dlg.randomMessage(DialogueManager.DECLINE_ATTACK, v.owner())));\n\n        if ((inc instanceof ColonyCapturedIncident)\n        || (inc instanceof ColonyDestroyedIncident)\n        || (inc instanceof ColonyInvadedIncident))\n            return v.decode(inc.decode(dlg.randomMessage(DialogueManager.DECLINE_INVASION, v.owner())));\n\n        if (inc instanceof EspionageTechIncident)\n            return v.decode(inc.decode(dlg.randomMessage(DialogueManager.DECLINE_ESPIONAGE, v.owner())));\n\n        if ((inc instanceof SabotageBasesIncident)\n        || (inc instanceof SabotageFactoriesIncident))\n            return v.decode(inc.decode(dlg.randomMessage(DialogueManager.DECLINE_SABOTAGE, v.owner())));\n\n        // unknown reason, return generic error\n        return v.decode(dlg.randomMessage(DialogueManager.DECLINE_OFFER, v.owner()));\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/ai/community/AICDiplomat.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Diplomat"], "modifiers": ["public"]}}, {"id": 63088, "method_name": "canOfferPeaceTreaty", "class_name": "AICDiplomat", "params": ["Empire"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean canOfferPeaceTreaty(Empire e)           { return diplomats(id(e)) && empire.atWarWith(id(e)); }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/ai/community/AICDiplomat.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Diplomat"], "modifiers": ["public"]}}, {"id": 63089, "method_name": "receiveOfferPeace", "class_name": "AICDiplomat", "params": ["Empire"], "throws": null, "modifiers": ["public"], "return_type": "DiplomaticReply", "snippet": "    public DiplomaticReply receiveOfferPeace(Empire requestor) {\n        log(empire.name(), \" receiving offer of Peace from: \", requestor.name());\n        if (empire.isPlayer()) {\n            DiplomaticNotification.create(requestor.viewForEmpire(empire), DialogueManager.OFFER_PEACE);\n            return null;\n        }\n\n        int bonus = requestor.race().diplomacyBonus();\n        EmpireView v = empire.viewForEmpire(requestor);\n        if ((bonus+random(100)) < empire.leader().diplomacyAnnoyanceMod(v)) {\n            v.embassy().withdrawAmbassador();\n            return v.refuse(DialogueManager.DECLINE_ANNOYED);\n        }\n\n        v.embassy().noteRequest();\n\n        if (!v.embassy().readyForPeace())\n            return v.refuse(DialogueManager.DECLINE_OFFER);\n\n        v.embassy().resetPeaceTimer();\n        \n        float autoAccept = bonus/200.0f;  //30% chance for humans\n        if ((random() > autoAccept) && !warWeary(v))\n            return refuseOfferPeace(requestor);\n\n        DiplomaticIncident inc = v.embassy().signPeace();\n        return v.otherView().accept(DialogueManager.ACCEPT_PEACE, inc);\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/ai/community/AICDiplomat.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Diplomat"], "modifiers": ["public"]}}, {"id": 63090, "method_name": "acceptOfferPeace", "class_name": "AICDiplomat", "params": ["Empire"], "throws": null, "modifiers": ["public"], "return_type": "DiplomaticReply", "snippet": "    public DiplomaticReply acceptOfferPeace(Empire requestor) {\n        EmpireView v = empire.viewForEmpire(requestor);\n        DiplomaticIncident inc = v.embassy().signPeace();\n        return v.accept(DialogueManager.ANNOUNCE_PEACE, inc);\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/ai/community/AICDiplomat.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Diplomat"], "modifiers": ["public"]}}, {"id": 63091, "method_name": "refuseOfferPeace", "class_name": "AICDiplomat", "params": ["Empire"], "throws": null, "modifiers": ["public"], "return_type": "DiplomaticReply", "snippet": "    public DiplomaticReply refuseOfferPeace(Empire requestor) {\n        EmpireView v = empire.viewForEmpire(requestor);\n        v.embassy().resetPeaceTimer();\n        return DiplomaticReply.answer(false, declineReasonText(v));\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/ai/community/AICDiplomat.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Diplomat"], "modifiers": ["public"]}}, {"id": 63092, "method_name": "willingToOfferPeace", "class_name": "AICDiplomat", "params": ["EmpireView"], "throws": null, "modifiers": ["private"], "return_type": "boolean", "snippet": "    private boolean willingToOfferPeace(EmpireView v) {\n        if (!v.embassy().war())\n            return false;\n        if (!v.embassy().onWarFooting() && !canOfferPeaceTreaty(v.empire()))\n            return false;\n        if (v.embassy().contactAge() < 1)\n            return false;\n        if (!v.otherView().embassy().readyForPeace())\n            return false;\n\n        return warWeary(v);\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/ai/community/AICDiplomat.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Diplomat"], "modifiers": ["public"]}}, {"id": 63093, "method_name": "canOfferPact", "class_name": "AICDiplomat", "params": ["Empire"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean canOfferPact(Empire e)         { return diplomats(id(e)) && empire.hasTradeWith(e) && !empire.atWarWith(id(e)) && !empire.pactWith(id(e)) && !empire.alliedWith(id(e)); }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/ai/community/AICDiplomat.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Diplomat"], "modifiers": ["public"]}}, {"id": 63094, "method_name": "receiveOfferPact", "class_name": "AICDiplomat", "params": ["Empire"], "throws": null, "modifiers": ["public"], "return_type": "DiplomaticReply", "snippet": "    public DiplomaticReply receiveOfferPact(Empire requestor) {\n        log(empire.name(), \" receiving offer of Pact from: \", requestor.name());\n        EmpireView v = empire.viewForEmpire(requestor);\n        if (empire.isPlayer()) {\n            DiplomaticNotification.create(requestor.viewForEmpire(empire), DialogueManager.OFFER_PACT);\n            return null;\n        }\n\n        if (requestor.isPlayer()) {\n            if (random(100) < empire.leader().diplomacyAnnoyanceMod(v)) {\n                v.embassy().withdrawAmbassador();\n                return v.refuse(DialogueManager.DECLINE_ANNOYED);\n            }\n        }\n\n        v.embassy().noteRequest();\n\n        if (!v.embassy().readyForPact())\n            return v.refuse(DialogueManager.DECLINE_OFFER);\n\n        v.embassy().resetPactTimer();\n        \n        int erraticLeaderPenalty = requestor.leader().isErratic() ? -40 : 0;\n \n        float adjustedRelations = v.embassy().otherRelations();\n        adjustedRelations += empire.leader().acceptPactMod();\n        adjustedRelations += requestor.race().diplomacyBonus();\n        adjustedRelations += erraticLeaderPenalty;\n        if (adjustedRelations < 20)\n            return refuseOfferPact(requestor);\n\n        DiplomaticIncident inc = v.embassy().signPact();\n        return v.otherView().accept(DialogueManager.ACCEPT_PACT, inc);\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/ai/community/AICDiplomat.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Diplomat"], "modifiers": ["public"]}}, {"id": 63095, "method_name": "acceptOfferPact", "class_name": "AICDiplomat", "params": ["Empire"], "throws": null, "modifiers": ["public"], "return_type": "DiplomaticReply", "snippet": "    public DiplomaticReply acceptOfferPact(Empire requestor) {\n        EmpireView v = empire.viewForEmpire(requestor);\n        DiplomaticIncident inc = v.embassy().signPact();\n        return v.accept(DialogueManager.ANNOUNCE_PACT, inc);\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/ai/community/AICDiplomat.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Diplomat"], "modifiers": ["public"]}}, {"id": 63096, "method_name": "refuseOfferPact", "class_name": "AICDiplomat", "params": ["Empire"], "throws": null, "modifiers": ["public"], "return_type": "DiplomaticReply", "snippet": "    public DiplomaticReply refuseOfferPact(Empire requestor) {\n        EmpireView v = empire.viewForEmpire(requestor);\n        v.embassy().resetPactTimer();\n        return DiplomaticReply.answer(false, declineReasonText(v));\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/ai/community/AICDiplomat.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Diplomat"], "modifiers": ["public"]}}, {"id": 63097, "method_name": "willingToOfferPact", "class_name": "AICDiplomat", "params": ["EmpireView"], "throws": null, "modifiers": ["private"], "return_type": "boolean", "snippet": "    private boolean willingToOfferPact(EmpireView v) {\n        // if asking player, check that we don't spam him\n        if (v.empire().isPlayer()) {\n            if (!v.otherView().embassy().readyForPact())\n                return false;\n        }\n        if (!canOfferPact(v.empire()))\n            return false;\n        // how do we feel about them\n        float adjustedRelations = v.embassy().otherRelations();\n        adjustedRelations += empire.leader().acceptPactMod();\n        adjustedRelations += v.embassy().alliedWithEnemy() ? -50 : 0;\n        return adjustedRelations > 20;\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/ai/community/AICDiplomat.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Diplomat"], "modifiers": ["public"]}}, {"id": 63098, "method_name": "canOfferAlliance", "class_name": "AICDiplomat", "params": ["Empire"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean canOfferAlliance(Empire e)              { return diplomats(id(e)) && empire.hasTradeWith(e) && !empire.atWarWith(id(e)) && !empire.alliedWith(id(e)); }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/ai/community/AICDiplomat.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Diplomat"], "modifiers": ["public"]}}, {"id": 63099, "method_name": "receiveOfferAlliance", "class_name": "AICDiplomat", "params": ["Empire"], "throws": null, "modifiers": ["public"], "return_type": "DiplomaticReply", "snippet": "    public DiplomaticReply receiveOfferAlliance(Empire requestor) {\n        log(empire.name(), \" receiving offer of Alliance from: \", requestor.name());\n        if (empire.isPlayer()) {\n            DiplomaticNotification.create(requestor.viewForEmpire(empire), DialogueManager.OFFER_ALLIANCE);\n            return null;\n        }\n\n        EmpireView v = empire.viewForEmpire(requestor);\n        if (requestor.isPlayer()) {\n            if (random(100) < empire.leader().diplomacyAnnoyanceMod(v)) {\n                v.embassy().withdrawAmbassador();\n                return v.refuse(DialogueManager.DECLINE_ANNOYED);\n            }\n        }\n\n        v.embassy().noteRequest();\n\n        List<Empire> myEnemies = v.owner().enemies();\n        List<Empire> hisAllies = v.empire().allies();\n        for (Empire enemy: myEnemies) {\n            if (hisAllies.contains(enemy))\n                return v.refuse(DialogueManager.DECLINE_ENEMY_ALLY, enemy);\n        }\n        \n        // be more willing if the requestor is someone we can use the alliance\n        // to help us fight a war\n        int joinWarBonus = 0;\n        for (Empire enemy: myEnemies) {\n            if (!requestor.atWarWith(enemy.id) && requestor.inEconomicRange(enemy.id))\n                joinWarBonus = 30;\n        }\n        int erraticLeaderPenalty = requestor.leader().isErratic() ? -40 : 0;\n \n        // if we don't like the requestor well enough, refuse now\n        float adjustedRelations = v.embassy().otherRelations();\n        adjustedRelations += empire.leader().acceptAllianceMod();\n        adjustedRelations += requestor.race().diplomacyBonus();\n        adjustedRelations += joinWarBonus;\n        adjustedRelations += erraticLeaderPenalty;\n        if (adjustedRelations < 60)\n            return refuseOfferAlliance(requestor);\n        \n        return signAlliance(requestor);\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/ai/community/AICDiplomat.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Diplomat"], "modifiers": ["public"]}}, {"id": 63100, "method_name": "signAlliance", "class_name": "AICDiplomat", "params": ["Empire"], "throws": null, "modifiers": ["public"], "return_type": "DiplomaticReply", "snippet": "    public DiplomaticReply signAlliance(Empire requestor) {\n        EmpireView v = empire.viewForEmpire(requestor);\n        DiplomaticIncident inc = v.embassy().signAlliance();\n        return v.otherView().accept(DialogueManager.ACCEPT_ALLIANCE, inc);\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/ai/community/AICDiplomat.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Diplomat"], "modifiers": ["public"]}}, {"id": 63101, "method_name": "acceptOfferAlliance", "class_name": "AICDiplomat", "params": ["Empire"], "throws": null, "modifiers": ["public"], "return_type": "DiplomaticReply", "snippet": "    public DiplomaticReply acceptOfferAlliance(Empire requestor) {\n        EmpireView v = empire.viewForEmpire(requestor);\n        DiplomaticIncident inc = v.embassy().signAlliance();\n        return v.accept(DialogueManager.ANNOUNCE_ALLIANCE, inc);\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/ai/community/AICDiplomat.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Diplomat"], "modifiers": ["public"]}}, {"id": 63102, "method_name": "refuseOfferAlliance", "class_name": "AICDiplomat", "params": ["Empire"], "throws": null, "modifiers": ["public"], "return_type": "DiplomaticReply", "snippet": "    public DiplomaticReply refuseOfferAlliance(Empire requestor) {\n        EmpireView v = empire.viewForEmpire(requestor);\n        v.embassy().resetAllianceTimer();\n        return DiplomaticReply.answer(false, declineReasonText(v));\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/ai/community/AICDiplomat.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Diplomat"], "modifiers": ["public"]}}, {"id": 63103, "method_name": "willingToOfferAlliance", "class_name": "AICDiplomat", "params": ["Empire"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean willingToOfferAlliance(Empire e) {\n        EmpireView v = empire.viewForEmpire(e);\n        // if we are asking the player, respect the alliance-countdown\n        // timer to avoid spamming player with requests\n        if (e.isPlayer()) {\n            //return true;\n            if (!v.otherView().embassy().readyForAlliance())\n                return false;\n        }    \n        // is asking for an alliance even allowed per game rules\n        if (!canOfferAlliance(e))\n            return false;       \n        if (v.embassy().alliedWithEnemy())\n            return false;\n        // do we like the other to want to join an alliance\n        float adjustedRelations = v.embassy().otherRelations();\n        adjustedRelations += empire.leader().acceptAllianceMod();\n        return adjustedRelations > 60;\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/ai/community/AICDiplomat.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Diplomat"], "modifiers": ["public"]}}, {"id": 63104, "method_name": "willingToOfferJointWar", "class_name": "AICDiplomat", "params": ["Empire", "Empire"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean willingToOfferJointWar(Empire friend, Empire target) {\n        if (!empire.atWarWith(target.id))\n            return false;\n        if (friend.atWarWith(target.id))\n            return false;\n        if (!friend.inEconomicRange(target.id))\n            return false;\n        if (empire.alliedWith(friend.id))\n            return true;\n        return false;\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/ai/community/AICDiplomat.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Diplomat"], "modifiers": ["public"]}}, {"id": 63105, "method_name": "receiveOfferJointWar", "class_name": "AICDiplomat", "params": ["Empire", "Empire"], "throws": null, "modifiers": ["public"], "return_type": "DiplomaticReply", "snippet": "    public DiplomaticReply receiveOfferJointWar(Empire requestor, Empire target) {\n        log(empire.name(), \" receiving offer of Joint War from: \", requestor.name());\n        if (empire.isPlayer()) {\n            DiplomaticNotification.create(requestor.viewForEmpire(empire), DialogueManager.OFFER_JOINT_WAR, target);\n            return null;\n        }\n\n        if (empire.atWarWith(target.id))\n            return DiplomaticReply.answer(false, \"Already at war with that empire\");\n\n        EmpireView v = empire.viewForEmpire(requestor);\n\n        // never willing to declare war on an ally unless we are ruthless\n        if (empire.alliedWith(target.id) && !empire.leader().isRuthless())\n            return v.refuse(DialogueManager.DECLINE_NO_WAR_ON_ALLY, target);\n        \n        // never willing to declare war on an NAP partner if we are honorable\n        if (empire.pactWith(target.id) && empire.leader().isHonorable())\n            return v.refuse(DialogueManager.DECLINE_OFFER, target);\n        \n        // if a peacy treaty is in effect with the target, then refuse\n        if (empire.viewForEmpire(target.id).embassy().atPeace()) {\n            return v.refuse(DialogueManager.DECLINE_PEACE_TREATY, target);\n        }\n\n         // will always declare war if allied with the requestor and he is already at war with the target\n        if (requestor.alliedWith(id(empire)) && requestor.atWarWith(target.id))\n            return agreeToJointWar(requestor, target);\n\n        int maxBribe = galaxy().numberTurns()*50;\n        float bribeValue = bribeAmountToJointWar(target);\n        \n        if (empire.alliedWith(target.id))\n            bribeValue *= 2;\n        else if (empire.pactWith(target.id))\n            bribeValue *= 1.5;\n        if (empire.leader().isPacifist())\n            bribeValue *= 2;\n        \n        List<Tech> allTechs = v.spies().unknownTechs();   \n        if (allTechs.isEmpty())\n            return v.refuse(DialogueManager.DECLINE_OFFER, target);\n\n        Tech.comparatorCiv = empire;\n        Collections.sort(allTechs, Tech.WAR_TRADE_VALUE);\n        \n        List<String> requestedTechs = new ArrayList<>();\n        for (Tech tech : allTechs) {\n            if ((bribeValue > 0) && (requestedTechs.size() < 3)) {\n                requestedTechs.add(tech.id());\n                bribeValue -= tech.researchCost();\n            }\n        }\n        if (requestedTechs.isEmpty())\n            requestedTechs.add(allTechs.get(0).id());\n        \n        if (bribeValue > maxBribe)\n            return v.refuse(DialogueManager.DECLINE_OFFER, target);\n        return v.counter(DialogueManager.COUNTER_JOINT_WAR, target, requestedTechs, bribeValue);\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/ai/community/AICDiplomat.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Diplomat"], "modifiers": ["public"]}}, {"id": 63106, "method_name": "receiveCounterJointWar", "class_name": "AICDiplomat", "params": ["Empire", "DiplomaticCounterReply"], "throws": null, "modifiers": ["public"], "return_type": "DiplomaticReply", "snippet": "    public DiplomaticReply receiveCounterJointWar(Empire requestor, DiplomaticCounterReply counter) {\n        for (String techId: counter.techs()) \n            empire.tech().acquireTechThroughTrade(techId, requestor.id);\n        \n        if (counter.bribeAmt() > 0) {\n            empire.addToTreasury(counter.bribeAmt());\n            requestor.addToTreasury(0-counter.bribeAmt());\n        }\n        return agreeToJointWar(requestor, counter.target());\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/ai/community/AICDiplomat.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Diplomat"], "modifiers": ["public"]}}, {"id": 63107, "method_name": "agreeToJointWar", "class_name": "AICDiplomat", "params": ["Empire", "Empire"], "throws": null, "modifiers": ["private"], "return_type": "DiplomaticReply", "snippet": "    private DiplomaticReply agreeToJointWar(Empire requestor, Empire target) {\n        int targetId = target.id;\n        if (!requestor.atWarWith(targetId))\n            requestor.viewForEmpire(targetId).embassy().declareWar();\n \n        DiplomaticIncident inc =  empire.viewForEmpire(targetId).embassy().declareJointWar();\n        return empire.viewForEmpire(requestor).accept(DialogueManager.ACCEPT_JOINT_WAR, inc);   \n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/ai/community/AICDiplomat.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Diplomat"], "modifiers": ["public"]}}, {"id": 63108, "method_name": "bribeAmountToJointWar", "class_name": "AICDiplomat", "params": ["Empire"], "throws": null, "modifiers": ["private"], "return_type": "float", "snippet": "    private float bribeAmountToJointWar(Empire target) {\n        EmpireView v = empire.viewForEmpire(target);\n        float myFleets = empire.totalArmedFleetSize();\n        float tgtFleets = empire.totalFleetSize(target);\n        float myTech = empire.tech().avgTechLevel();\n        float tgtTech = v.spies().tech().avgTechLevel();\n        float fleetShortcoming = (tgtFleets*tgtTech)-(myFleets*myTech);\n        return max(0, fleetShortcoming);\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/ai/community/AICDiplomat.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Diplomat"], "modifiers": ["public"]}}, {"id": 63109, "method_name": "acceptOfferJointWar", "class_name": "AICDiplomat", "params": ["Empire", "Empire"], "throws": null, "modifiers": ["public"], "return_type": "DiplomaticReply", "snippet": "    public DiplomaticReply acceptOfferJointWar(Empire requestor, Empire target) {\n        int targetId = target.id;\n        if (!requestor.atWarWith(targetId))\n            requestor.viewForEmpire(targetId).embassy().declareWar();\n \n        DiplomaticIncident inc = empire.viewForEmpire(targetId).embassy().declareJointWar();\n        return empire.viewForEmpire(requestor).accept(DialogueManager.ACCEPT_JOINT_WAR, inc);   \n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/ai/community/AICDiplomat.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Diplomat"], "modifiers": ["public"]}}, {"id": 63110, "method_name": "refuseOfferJointWar", "class_name": "AICDiplomat", "params": ["Empire"], "throws": null, "modifiers": ["public"], "return_type": "DiplomaticReply", "snippet": "    public DiplomaticReply refuseOfferJointWar(Empire requestor) {\n        EmpireView v = empire.viewForEmpire(requestor);\n        v.embassy().resetJointWarTimer();\n        \n        if (empire.alliedWith(requestor.id)) \n            return requestor.diplomatAI().receiveBreakAlliance(empire);            \n        return DiplomaticReply.answer(false, declineReasonText(v));\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/ai/community/AICDiplomat.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Diplomat"], "modifiers": ["public"]}}, {"id": 63111, "method_name": "canCloseEmbassy", "class_name": "AICDiplomat", "params": ["Empire"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean canCloseEmbassy(Empire e)               { return empire.aggressiveWith(id(e)); }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/ai/community/AICDiplomat.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Diplomat"], "modifiers": ["public"]}}, {"id": 63112, "method_name": "canDemandTribute", "class_name": "AICDiplomat", "params": ["Empire"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean canDemandTribute(Empire e)              { return true; }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/ai/community/AICDiplomat.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Diplomat"], "modifiers": ["public"]}}, {"id": 63113, "method_name": "canBreakTrade", "class_name": "AICDiplomat", "params": ["Empire"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean canBreakTrade(Empire e)                 { return empire.tradingWith(e); }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/ai/community/AICDiplomat.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Diplomat"], "modifiers": ["public"]}}, {"id": 63114, "method_name": "canBreakPact", "class_name": "AICDiplomat", "params": ["Empire"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean canBreakPact(Empire e)                  { return empire.pactWith(id(e)); }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/ai/community/AICDiplomat.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Diplomat"], "modifiers": ["public"]}}, {"id": 63115, "method_name": "canBreakAlliance", "class_name": "AICDiplomat", "params": ["Empire"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean canBreakAlliance(Empire e)              { return empire.alliedWith(id(e)); }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/ai/community/AICDiplomat.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Diplomat"], "modifiers": ["public"]}}, {"id": 63116, "method_name": "canDeclareWar", "class_name": "AICDiplomat", "params": ["Empire"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean canDeclareWar(Empire e)                 { return empire.inEconomicRange(id(e)) && !empire.atWarWith(id(e)) && !empire.alliedWith(id(e)); }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/ai/community/AICDiplomat.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Diplomat"], "modifiers": ["public"]}}, {"id": 63117, "method_name": "receiveDemandTribute", "class_name": "AICDiplomat", "params": ["Empire"], "throws": null, "modifiers": ["public"], "return_type": "DiplomaticReply", "snippet": "    public DiplomaticReply receiveDemandTribute(Empire e) {\n        EmpireView v = empire.viewForEmpire(id(e));\n        v.embassy().noteRequest();\n        if (random() > chanceToGiveTribute(v))\n            return DiplomaticReply.answer(false, declineReasonText(v));\n\n        DiplomaticIncident inc = v.otherView().embassy().demandTribute();\n        return v.accept(DialogueManager.ACCEPT_JOINT_WAR, inc);\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/ai/community/AICDiplomat.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Diplomat"], "modifiers": ["public"]}}, {"id": 63118, "method_name": "chanceToGiveTribute", "class_name": "AICDiplomat", "params": ["EmpireView"], "throws": null, "modifiers": ["private"], "return_type": "float", "snippet": "    private float chanceToGiveTribute(EmpireView v) {\n        return 0.50f;\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/ai/community/AICDiplomat.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Diplomat"], "modifiers": ["public"]}}, {"id": 63119, "method_name": "receiveBreakPact", "class_name": "AICDiplomat", "params": ["Empire"], "throws": null, "modifiers": ["public"], "return_type": "DiplomaticReply", "snippet": "    public DiplomaticReply receiveBreakPact(Empire e) {\n        EmpireView v = empire.viewForEmpire(e);\n        v.embassy().noteRequest();\n        DiplomaticIncident inc = v.otherView().embassy().breakPact();\n        v.embassy().withdrawAmbassador();\n        return v.otherView().accept(DialogueManager.RESPOND_BREAK_PACT, inc);\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/ai/community/AICDiplomat.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Diplomat"], "modifiers": ["public"]}}, {"id": 63120, "method_name": "receiveBreakAlliance", "class_name": "AICDiplomat", "params": ["Empire"], "throws": null, "modifiers": ["public"], "return_type": "DiplomaticReply", "snippet": "    public DiplomaticReply receiveBreakAlliance(Empire e) {\n        EmpireView v = empire.viewForEmpire(e);\n        v.embassy().noteRequest();\n        DiplomaticIncident inc = v.otherView().embassy().breakAlliance();\n        v.embassy().withdrawAmbassador();\n        return v.otherView().accept(DialogueManager.RESPOND_BREAK_ALLIANCE, inc);\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/ai/community/AICDiplomat.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Diplomat"], "modifiers": ["public"]}}, {"id": 63121, "method_name": "receiveBreakTrade", "class_name": "AICDiplomat", "params": ["Empire"], "throws": null, "modifiers": ["public"], "return_type": "DiplomaticReply", "snippet": "    public DiplomaticReply receiveBreakTrade(Empire e) {\n        EmpireView v = empire.viewForEmpire(e);\n        v.embassy().noteRequest();\n        DiplomaticIncident inc = v.otherView().embassy().breakTrade();\n        v.embassy().withdrawAmbassador();\n        return v.otherView().accept(DialogueManager.RESPOND_BREAK_TRADE, inc);\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/ai/community/AICDiplomat.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Diplomat"], "modifiers": ["public"]}}, {"id": 63122, "method_name": "receiveDeclareWar", "class_name": "AICDiplomat", "params": ["Empire"], "throws": null, "modifiers": ["public"], "return_type": "DiplomaticReply", "snippet": "    public DiplomaticReply receiveDeclareWar(Empire e) {\n        EmpireView v = empire.viewForEmpire(e);\n\n        v.embassy().noteRequest();\n        DiplomaticIncident inc = v.otherView().embassy().declareWar();\n        return v.otherView().accept(DialogueManager.RESPOND_DECLARE_WAR, inc);\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/ai/community/AICDiplomat.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Diplomat"], "modifiers": ["public"]}}, {"id": 63123, "method_name": "decidedToBreakAlliance", "class_name": "AICDiplomat", "params": ["EmpireView"], "throws": null, "modifiers": ["private"], "return_type": "boolean", "snippet": "    private boolean decidedToBreakAlliance(EmpireView view) {\n        if (!wantToBreakAlliance(view))\n            return false;\n\n        view.embassy().breakAlliance();\n        if (view.empire().isPlayer())\n            DiplomaticNotification.create(view, DialogueManager.BREAK_ALLIANCE);\n        return true;\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/ai/community/AICDiplomat.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Diplomat"], "modifiers": ["public"]}}, {"id": 63124, "method_name": "wantToBreakAlliance", "class_name": "AICDiplomat", "params": ["EmpireView"], "throws": null, "modifiers": ["private"], "return_type": "boolean", "snippet": "    private boolean wantToBreakAlliance(EmpireView v) {\n        if (!v.embassy().alliance())\n            return false;\n\n        if (wantToDeclareWarOfOpportunity(v)) \n            return true;\n        \n        float adjustedRelations = v.embassy().otherRelations();\n        adjustedRelations += empire.leader().preserveTreatyMod();\n        return adjustedRelations < 20;\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/ai/community/AICDiplomat.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Diplomat"], "modifiers": ["public"]}}, {"id": 63125, "method_name": "decidedToBreakPact", "class_name": "AICDiplomat", "params": ["EmpireView"], "throws": null, "modifiers": ["private"], "return_type": "boolean", "snippet": "    private boolean decidedToBreakPact(EmpireView view) {\n        if (!wantToBreakPact(view))\n            return false;\n\n        view.embassy().breakPact();\n        if (view.empire().isPlayer())\n            DiplomaticNotification.create(view, DialogueManager.BREAK_PACT);\n        return true;\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/ai/community/AICDiplomat.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Diplomat"], "modifiers": ["public"]}}, {"id": 63126, "method_name": "wantToBreakPact", "class_name": "AICDiplomat", "params": ["EmpireView"], "throws": null, "modifiers": ["private"], "return_type": "boolean", "snippet": "    private boolean wantToBreakPact(EmpireView v) {\n        if (!v.embassy().pact())\n            return false;\n\n        float adjustedRelations = v.embassy().otherRelations();\n        adjustedRelations += empire.leader().preserveTreatyMod();\n        return adjustedRelations < -20;\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/ai/community/AICDiplomat.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Diplomat"], "modifiers": ["public"]}}, {"id": 63127, "method_name": "decidedToBreakTrade", "class_name": "AICDiplomat", "params": ["EmpireView"], "throws": null, "modifiers": ["private"], "return_type": "boolean", "snippet": "    private boolean decidedToBreakTrade(EmpireView view) {\n        if (!wantToBreakTrade(view))\n            return false;\n\n        view.embassy().breakTrade();\n        if (view.empire().isPlayer())\n            DiplomaticNotification.create(view, DialogueManager.BREAK_TRADE);\n        return true;\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/ai/community/AICDiplomat.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Diplomat"], "modifiers": ["public"]}}, {"id": 63128, "method_name": "wantToBreakTrade", "class_name": "AICDiplomat", "params": ["EmpireView"], "throws": null, "modifiers": ["private"], "return_type": "boolean", "snippet": "    private boolean wantToBreakTrade(EmpireView v) {\n        if (!v.trade().active())\n            return false;\n        \n        float treatyMod = empire.leader().preserveTreatyMod();\n        return baseChanceForTrade(v) + treatyMod < -40;\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/ai/community/AICDiplomat.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Diplomat"], "modifiers": ["public"]}}, {"id": 63129, "method_name": "makeDiplomaticOffers", "class_name": "AICDiplomat", "params": ["EmpireView"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void makeDiplomaticOffers(EmpireView v) {\n        if (v.embassy().contactAge() < 2)\n            return;\n        if (v.embassy().unity() || v.embassy().finalWar())\n            return;\n\n        if (v.embassy().diplomatGone() || v.otherView().embassy().diplomatGone())\n            return;\n\n        // check diplomat offers from worst to best\n        if (decidedToDeclareWar(v))\n            return;\n        if (decidedToBreakAlliance(v))\n            return;\n        if (decidedToBreakPact(v))\n            return;\n        if (decidedToBreakTrade(v))\n            return;\n        if (decidedToIssueWarning(v))\n            return;\n\n        if (willingToOfferPeace(v)) {\n            if (v.embassy().anyWar())\n                v.empire().diplomatAI().receiveOfferPeace(empire);\n            else\n                v.embassy().endWarPreparations();\n            return;\n        }\n\n        if (v.embassy().anyWar() || v.embassy().unity())\n            return;\n        \n        if (decidedToIssuePraise(v))\n            return;\n        if (decidedToExchangeTech(v))\n            return;\n\n        if (willingToOfferTrade(v, v.trade().maxLevel())) {\n            v.empire().diplomatAI().receiveOfferTrade(v.owner(), v.trade().maxLevel());\n            return;\n        }\n        if (willingToOfferPact(v)) {\n            v.empire().diplomatAI().receiveOfferPact(empire);\n            return;\n        }\n        if (willingToOfferAlliance(v.empire())) {\n            v.empire().diplomatAI().receiveOfferAlliance(v.owner());\n            return;\n        }\n        for (Empire target: empire.contactedEmpires()) {\n            if (willingToOfferJointWar(v.empire(), target)) {\n                v.empire().diplomatAI().receiveOfferJointWar(v.owner(), target); \n                return;\n            }\n        }\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/ai/community/AICDiplomat.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Diplomat"], "modifiers": ["public"]}}, {"id": 63130, "method_name": "decidedToIssuePraise", "class_name": "AICDiplomat", "params": ["EmpireView"], "throws": null, "modifiers": ["private"], "return_type": "boolean", "snippet": "    private boolean decidedToIssuePraise(EmpireView view) {\n        if (!view.inEconomicRange())\n            return false;\n\n        log(view+\": checkIssuePraise\");\n        DiplomaticIncident maxIncident = null;\n        for (DiplomaticIncident ev: view.embassy().newIncidents()) {\n            if (ev.triggersPraise() && ev.moreSevere(maxIncident))\n                maxIncident = ev;\n        }\n\n        if (maxIncident == null)\n            return false;\n\n        log(\"cum.sev: \", str(cumulativeSeverity), \"   maxInc:\", maxIncident.praiseMessageId(), \"  maxSev:\", str(maxIncident.currentSeverity()));\n\n        // don't issue warning unless new incidents are more than 5\n        if (maxIncident.currentSeverity() < view.embassy().minimumPraiseLevel())\n            return false;\n\n        maxIncident.notifyOfPraise();\n        view.embassy().praiseSent();\n        if (view.empire().isPlayer())\n            DiplomaticNotification.create(view, maxIncident, maxIncident.praiseMessageId());\n\n        return true;\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/ai/community/AICDiplomat.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Diplomat"], "modifiers": ["public"]}}, {"id": 63131, "method_name": "warningThreshold", "class_name": "AICDiplomat", "params": ["EmpireView"], "throws": null, "modifiers": ["private"], "return_type": "int", "snippet": "    private int warningThreshold(EmpireView view) {\n        DiplomaticEmbassy emb = view.embassy();\n        int warnLevel = emb.minimumWarnLevel();\n        if (emb.alliance())\n            return warnLevel / 4;\n        else if (emb.pact())\n            return warnLevel /2;\n        else\n            return warnLevel;\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/ai/community/AICDiplomat.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Diplomat"], "modifiers": ["public"]}}, {"id": 63132, "method_name": "decidedToIssueWarning", "class_name": "AICDiplomat", "params": ["EmpireView"], "throws": null, "modifiers": ["private"], "return_type": "boolean", "snippet": "    private boolean decidedToIssueWarning(EmpireView view) {\n        if (!view.inEconomicRange())\n            return false;\n        // no warnings if at war\n        DiplomaticEmbassy emb = view.embassy();\n        if (emb.anyWar() || emb.unity())\n            return false;\n        float threshold = 0 - warningThreshold(view);\n        log(view+\": checkIssueWarning. Threshold: \"+ threshold);\n        DiplomaticIncident maxIncident = null;\n        cumulativeSeverity = 0;\n        for (DiplomaticIncident ev: emb.newIncidents()) {\n            log(view.toString(), \"new incident:\", ev.toString());\n            float sev = ev.currentSeverity();\n            cumulativeSeverity += sev;\n            if (ev.triggersWarning() && ev.moreSevere(maxIncident))\n                maxIncident = ev;\n        }\n        \n        if (maxIncident == null)\n            return false;\n        \n        if (maxIncident.currentSeverity() > threshold)\n            return false;\n\n        log(\"cumulative severity: \"+cumulativeSeverity);\n        view.embassy().warningSent();\n        \n        // if we are warning player, send a notification\n        if (view.empire().isPlayer()) {\n            // we will only give one expansion warning\n            if (maxIncident instanceof ExpansionIncident) {\n                if (view.embassy().gaveExpansionWarning())\n                    return true;\n                view.embassy().giveExpansionWarning();\n            }\n            DiplomaticNotification.create(view, maxIncident, maxIncident.warningMessageId());\n        }\n        return true;\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/ai/community/AICDiplomat.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Diplomat"], "modifiers": ["public"]}}, {"id": 63133, "method_name": "decidedToDeclareWar", "class_name": "AICDiplomat", "params": ["EmpireView"], "throws": null, "modifiers": ["private"], "return_type": "boolean", "snippet": "    private boolean decidedToDeclareWar(EmpireView view) {\n        if (empire.isPlayerControlled())\n            return false;\n        if (view.embassy().unity() || view.embassy().anyWar())\n            return false;\n        if (!view.inEconomicRange())\n            return false;\n        \n        // look at new incidents. If any trigger war, pick\n        // the one with the greatest severity\n        DiplomaticIncident warIncident = null;\n        float worstNewSeverity = 0;\n        \n        // check for a war incident if we are not at peace, or the start\n        // date of our peace treaty precedes the current time\n        if (!view.embassy().atPeace()\n        || (view.embassy().treatyDate() < galaxy().currentTime())) {\n            for (DiplomaticIncident ev: view.embassy().newIncidents()) {\n                if (ev.triggersWar()) {\n                    float sev = ev.currentSeverity();\n                    if (ev.triggersWarning() && (sev < worstNewSeverity) && !ev.declareWarId().isEmpty())\n                        warIncident = ev;\n                }\n            }\n            if (warIncident != null) {\n                beginIncidentWar(view, warIncident);\n                return true;\n            }\n        }\n        \n        // 2% chance of war if erratic leader (these guys are crazy)\n        if (empire.leader().isErratic() && (random() <= ERRATIC_WAR_PCT)) {\n            beginErraticWar(view);\n            return true;\n        }\n        // automatic war of hate if relations less < -90\n        // and not currently in a timed peace treaty\n        if (wantToDeclareWarOfHate(view)){\n            beginHateWar(view);\n            return true;\n        }\n        \n        // must break alliance before declaring war\n        if (!view.embassy().alliance() && wantToDeclareWarOfOpportunity(view)) {\n            beginOpportunityWar(view);\n            return true;          \n        }\n\n        return false;\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/ai/community/AICDiplomat.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Diplomat"], "modifiers": ["public"]}}, {"id": 63134, "method_name": "wantToDeclareWarOfHate", "class_name": "AICDiplomat", "params": ["EmpireView"], "throws": null, "modifiers": ["private"], "return_type": "boolean", "snippet": "    private boolean wantToDeclareWarOfHate(EmpireView v) {\n        if (v.embassy().atPeace())\n            return false;\n        \n        // from -70 to -90\n        float warThreshold = v.empire().leader().hateWarThreshold();\n        \n        // allied with an enemy? not good\n        if (v.embassy().alliedWithEnemy())\n            warThreshold += 30;\n        \n        // higher contempt = more likely to increase war\n        // positive contempt raises the threshold = more likely for war\n        // if relative power is 3, then contempt mod is 30 or -30\n        float contemptMod = 10 * v.scaleOfContempt();\n        warThreshold += contemptMod;\n        \n        // relations is how they feel about us\n        // otherrelations is how we feel about them\n        return (v.embassy().otherRelations() <= warThreshold);\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/ai/community/AICDiplomat.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Diplomat"], "modifiers": ["public"]}}, {"id": 63135, "method_name": "wantToDeclareWarOfOpportunity", "class_name": "AICDiplomat", "params": ["EmpireView"], "throws": null, "modifiers": ["private"], "return_type": "boolean", "snippet": "    private boolean wantToDeclareWarOfOpportunity(EmpireView v) {\n        if (v.embassy().atPeace())\n            return false;\n        if (v.owner().leader().isPacifist())\n            return false;\n        if (v.owner().leader().isHonorable()\n        && (v.embassy().pact() ||v.embassy().alliance()))\n            return false;\n        \n        // don't declare if we have no spy data or data is too old\n        int reportAge = v.spies().reportAge();\n        if ((reportAge < 0) || (reportAge > 10))\n            return false;\n        \n        // base power is an minimum power level that is added to both empires to\n        // keep their power ratios from wildly fluctuating early in the game when\n        // everyone has small fleets, so that wars aren't triggered because I have \n        // 4 fighters and you have 1.\n        int basePower = 500;\n        \n        float otherPower = basePower+v.owner().militaryPowerLevel(v.empire());\n        float myPower = basePower+v.owner().militaryPowerLevel();\n        \n        \n        float baseThreshold = v.owner().atWar() ? 20.0f : 10.0f;\n        float treatyMod = v.embassy().pact() || v.embassy().alliance() ? 1.5f : 1.0f;\n        float warThreshold = baseThreshold *  treatyMod * v.owner().leader().exploitWeakerEmpiresRatio();\n        \n        return (myPower/otherPower) > warThreshold;\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/ai/community/AICDiplomat.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Diplomat"], "modifiers": ["public"]}}, {"id": 63136, "method_name": "worstWarnableIncident", "class_name": "AICDiplomat", "params": ["Collection<DiplomaticIncident>"], "throws": null, "modifiers": ["private"], "return_type": "DiplomaticIncident", "snippet": "    private DiplomaticIncident worstWarnableIncident(Collection<DiplomaticIncident> incidents) {\n        DiplomaticIncident worstIncident = null;\n        float worstNewSeverity = 0;\n        for (DiplomaticIncident ev: incidents) {\n            float sev = ev.currentSeverity();\n            if (ev.triggersWarning() && (sev < worstNewSeverity))\n                worstIncident = ev;\n        }\n        return worstIncident;\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/ai/community/AICDiplomat.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Diplomat"], "modifiers": ["public"]}}, {"id": 63137, "method_name": "beginIncidentWar", "class_name": "AICDiplomat", "params": ["EmpireView", "DiplomaticIncident"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void beginIncidentWar(EmpireView view, DiplomaticIncident inc) {\n        log(view.toString(), \" - Declaring war based on incident: \", inc.toString(), \" id:\", inc.declareWarId());\n        view.embassy().beginWarPreparations(inc.declareWarId(), inc);\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/ai/community/AICDiplomat.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Diplomat"], "modifiers": ["public"]}}, {"id": 63138, "method_name": "beginOpportunityWar", "class_name": "AICDiplomat", "params": ["EmpireView"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void beginOpportunityWar(EmpireView view) {\n        log(view+\" - Declaring war based on opportunity\");\n        view.embassy().beginWarPreparations(DialogueManager.DECLARE_OPPORTUNITY_WAR, null);\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/ai/community/AICDiplomat.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Diplomat"], "modifiers": ["public"]}}, {"id": 63139, "method_name": "beginHateWar", "class_name": "AICDiplomat", "params": ["EmpireView"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void beginHateWar(EmpireView view) {\n        log(view+\" - Declaring war based on hate\");\n        view.embassy().beginWarPreparations(DialogueManager.DECLARE_HATE_WAR, null);\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/ai/community/AICDiplomat.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Diplomat"], "modifiers": ["public"]}}, {"id": 63140, "method_name": "beginErraticWar", "class_name": "AICDiplomat", "params": ["EmpireView"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void beginErraticWar(EmpireView view) {\n        log(view+\" - Declaring war based on erratic\");\n        view.embassy().beginWarPreparations(DialogueManager.DECLARE_ERRATIC_WAR, null);\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/ai/community/AICDiplomat.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Diplomat"], "modifiers": ["public"]}}, {"id": 63141, "method_name": "councilVoteFor", "class_name": "AICDiplomat", "params": ["Empire", "Empire"], "throws": null, "modifiers": ["public"], "return_type": "Empire", "snippet": "    public Empire councilVoteFor(Empire civ1, Empire civ2) {\n        EmpireView cv1 = empire.viewForEmpire(civ1);\n        EmpireView cv2 = empire.viewForEmpire(civ2);\n\n        // to test diplomatic win for player\n        //if (civ1.isPlayer()) return castVoteFor(civ1, approv1);\n        //if (civ2.isPlayer()) return castVoteFor(civ2, approv2);\n\n        // always vote for yourself\n        if (civ1 == empire)   return castVoteFor(civ1);\n        if (civ2 == empire)   return castVoteFor(civ2);\n        \n        float pct;\n\n        // if allied with one, vote for that ally\n        if (cv1.embassy().alliance() && !cv2.embassy().alliance())\n            return castVoteFor(civ1);\n        if (cv2.embassy().alliance() && !cv1.embassy().alliance())\n            return castVoteFor(civ2);\n\n        // if at war with one, vote for other if pact/ally, else abstain\n        if (cv1.embassy().anyWar() && !cv2.embassy().anyWar())\n            return conditionallyCastVoteFor(cv2);\n        if (cv2.embassy().anyWar() && !cv1.embassy().anyWar())\n            return conditionallyCastVoteFor(cv1);\n\n        // decide to vote for/against civ1\n        pct = cv1.embassy().relations() + civ1.race().councilBonus() + civ1.orionCouncilBonus() + previousVoteBonus(civ1);\n        if (random() <= Math.abs(pct)) {\n            if (pct > 0)\n                return conditionallyCastVoteFor(cv1);\n            else\n                return conditionallyCastVoteFor(cv2);\n        }\n\n        // decide to vote for/against civ2\n        pct = cv2.embassy().relations() + civ2.race().councilBonus() + civ2.orionCouncilBonus() + previousVoteBonus(civ2);\n        if (random() <= Math.abs(pct)) {\n            if (pct > 0)\n                return conditionallyCastVoteFor(cv2);\n            else\n                return conditionallyCastVoteFor(cv1);\n        }\n\n        // return undecided\n        return castVoteFor(null);\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/ai/community/AICDiplomat.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Diplomat"], "modifiers": ["public"]}}, {"id": 63142, "method_name": "acceptCouncilRuling", "class_name": "AICDiplomat", "params": ["GalacticCouncil"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void acceptCouncilRuling(GalacticCouncil c) {\n        // player will be prompted by UI\n        if (empire.isPlayer())\n            return;\n        \n        // if elected, always accept. Only players are sadomasochists about this\n        if (c.leader() == empire)\n            c.acceptRuling(empire);\n        else if (giveLoyaltyTo(c.leader()))\n            c.acceptRuling(empire);\n        else\n            c.defyRuling(empire);\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/ai/community/AICDiplomat.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Diplomat"], "modifiers": ["public"]}}, {"id": 63143, "method_name": "giveLoyaltyTo", "class_name": "AICDiplomat", "params": ["Empire"], "throws": null, "modifiers": ["private"], "return_type": "boolean", "snippet": "    private boolean giveLoyaltyTo(Empire c) {\n        if (empire.lastCouncilVoteEmpId() == c.id)\n            return true;\n\n        if (c.orionCouncilBonus() > 0)\n            return true;\n        \n        EmpireView cv1 = empire.viewForEmpire(c);\n        if (cv1.embassy().alliance())\n            return true;\n        if (empire.leader().isPacifist())\n            return true;\n        if (cv1.embassy().pact() && empire.leader().isHonorable())\n            return true;\n        \n        if (cv1.embassy().anyWar()) {\n            if (empire.leader().isXenophobic())\n                return false;\n            else if (empire.leader().isAggressive())\n                return random() < 0.5f;\n            else\n                return random() < 0.75f;\n        }\n        \n        if (empire.leader().isXenophobic())\n            return random() < 0.50f;\n        else if (empire.leader().isErratic())\n            return random() < 0.75f;\n\n        return random() < 0.90f;\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/ai/community/AICDiplomat.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Diplomat"], "modifiers": ["public"]}}, {"id": 63144, "method_name": "previousVoteBonus", "class_name": "AICDiplomat", "params": ["Empire"], "throws": null, "modifiers": ["private"], "return_type": "float", "snippet": "    private float previousVoteBonus(Empire c) {\n        return c.id == empire.lastCouncilVoteEmpId() ? 0.6f : 0;\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/ai/community/AICDiplomat.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Diplomat"], "modifiers": ["public"]}}, {"id": 63145, "method_name": "conditionallyCastVoteFor", "class_name": "AICDiplomat", "params": ["EmpireView"], "throws": null, "modifiers": ["private"], "return_type": "Empire", "snippet": "    private Empire conditionallyCastVoteFor(EmpireView ev) {\n        if (ev.embassy().noTreaty() && galaxy().council().nextVoteWouldElect(ev.empire()))\n            return castVoteFor(null);\n        else\n            return castVoteFor(ev.empire());\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/ai/community/AICDiplomat.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Diplomat"], "modifiers": ["public"]}}, {"id": 63146, "method_name": "castVoteFor", "class_name": "AICDiplomat", "params": ["Empire"], "throws": null, "modifiers": ["private"], "return_type": "Empire", "snippet": "    private Empire castVoteFor(Empire c) {\n        if (c == null)\n            empire.lastCouncilVoteEmpId(Empire.ABSTAIN_ID);\n        else\n            empire.lastCouncilVoteEmpId(c.id);\n        return c;\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/ai/community/AICDiplomat.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Diplomat"], "modifiers": ["public"]}}, {"id": 63147, "method_name": "noticeIncident", "class_name": "AICDiplomat", "params": ["DiplomaticIncident", "Empire"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void noticeIncident(DiplomaticIncident inc, Empire emp) {\n        EmpireView view = empire.viewForEmpire(emp);\n        // incidents don't matter once final war is declared\n        if (view.embassy().finalWar())\n            return;\n        \n        view.embassy().addIncident(inc);\n\n        if (inc.triggersWar())\n            beginIncidentWar(view, inc);\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/ai/community/AICDiplomat.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Diplomat"], "modifiers": ["public"]}}, {"id": 63148, "method_name": "noticeSkirmishIncident", "class_name": "AICDiplomat", "params": ["ShipCombatResults"], "throws": null, "modifiers": ["public"], "return_type": "DiplomaticIncident", "snippet": "    public DiplomaticIncident noticeSkirmishIncident(ShipCombatResults res) {\n        DiplomaticIncident inc = null;\n        for (Empire emp: res.empires()) {\n            if  (!empire.alliedWith(emp.id)) {\n                float winModifier = victoryModifier(res);\n                float skirmishSeverity = skirmishSeverity(res);\n                float severity = min(-1.0f, winModifier*skirmishSeverity);\n                EmpireView view = empire.viewForEmpire(emp.id);\n                inc = new SkirmishIncident(view, res, severity);\n                view.embassy().addIncident(inc);\n            }\n        }\n        return inc;\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/ai/community/AICDiplomat.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Diplomat"], "modifiers": ["public"]}}, {"id": 63149, "method_name": "noticeExpansionIncidents", "class_name": "AICDiplomat", "params": ["EmpireView", "List<DiplomaticIncident>"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void noticeExpansionIncidents(EmpireView view, List<DiplomaticIncident> events) {\n        int numberSystems = view.empire().numSystemsForCiv(view.empire());\n        if (numberSystems < 6)\n            return;\n\n        Galaxy gal = Galaxy.current();\n        int allSystems = gal.numColonizedSystems();\n        int numCivs = gal.numActiveEmpires();\n\n        int maxSystemsWithoutPenalty = max(5, (allSystems /numCivs)+1);\n\n        if (numberSystems > maxSystemsWithoutPenalty)\n            events.add(ExpansionIncident.create(view,numberSystems, maxSystemsWithoutPenalty));\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/ai/community/AICDiplomat.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Diplomat"], "modifiers": ["public"]}}, {"id": 63150, "method_name": "noticeTrespassingIncidents", "class_name": "AICDiplomat", "params": ["EmpireView", "List<DiplomaticIncident>"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void noticeTrespassingIncidents(EmpireView view, List<DiplomaticIncident> events) {\n        if (view.empire().alliedWith(empire.id))\n            return;\n        for (StarSystem sys: empire.allColonizedSystems()) {\n            List<ShipFleet> fleets = sys.orbitingFleets();\n            for (ShipFleet fl: fleets) {\n                if (fl.empire() == view.empire())\n                    events.add(new TrespassingIncident(view,sys,fl));\n            }\n        }\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/ai/community/AICDiplomat.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Diplomat"], "modifiers": ["public"]}}, {"id": 63151, "method_name": "noticeNoRelationIncident", "class_name": "AICDiplomat", "params": ["EmpireView", "List<DiplomaticIncident>"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void noticeNoRelationIncident(EmpireView view, List<DiplomaticIncident> events) {\n\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/ai/community/AICDiplomat.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Diplomat"], "modifiers": ["public"]}}, {"id": 63152, "method_name": "noticeAtWarWithAllyIncidents", "class_name": "AICDiplomat", "params": ["EmpireView", "List<DiplomaticIncident>"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void noticeAtWarWithAllyIncidents(EmpireView view, List<DiplomaticIncident> events) {\n        if (!view.embassy().finalWar()) {\n            for (Empire ally: empire.allies()) {\n                if (ally.atWarWith(view.empId())) \n                    events.add(new AtWarWithAllyIncident(view, ally));\n            }\n        }\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/ai/community/AICDiplomat.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Diplomat"], "modifiers": ["public"]}}, {"id": 63153, "method_name": "noticeAlliedWithEnemyIncidents", "class_name": "AICDiplomat", "params": ["EmpireView", "List<DiplomaticIncident>"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void noticeAlliedWithEnemyIncidents(EmpireView view, List<DiplomaticIncident> events) {\n        if (!view.embassy().finalWar()) {\n            for (Empire ally: view.empire().allies()) {\n                if (empire.atWarWith(ally.id)) \n                    events.add(new AlliedWithEnemyIncident(view, ally));\n            }\n        }\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/ai/community/AICDiplomat.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Diplomat"], "modifiers": ["public"]}}, {"id": 63154, "method_name": "noticeBuildupIncidents", "class_name": "AICDiplomat", "params": ["EmpireView", "List<DiplomaticIncident>"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void noticeBuildupIncidents(EmpireView view, List<DiplomaticIncident> events) {\n        float shipRange = view.owner().shipRange();\n\n        float multiplier = -0.05f;\n        if (view.owner().atWarWith(view.empId()))\n            multiplier *= 2;\n        else if (view.owner().pactWith(view.empId()))\n            multiplier /= 8;\n        else if (view.owner().alliedWith(view.empId()))\n            multiplier /= 64;\n\n        if (view.owner().leader().isXenophobic())\n            multiplier *= 2;\n\n        for (StarSystem sys: view.owner().allColonizedSystems()) {\n            float systemSeverity = 0;\n            for (ShipFleet fl: view.owner().fleetsForEmpire(view.empire())) {\n                if (fl.isActive() && (sys.distanceTo(fl) <= shipRange)) {\n                    float fleetThreat = fl.visibleFirepower(view.owner().id, sys.colony().defense().missileShieldLevel());\n                    systemSeverity += (multiplier*fleetThreat);\n                }\n            }\n            if (systemSeverity > 0)\n                events.add(new MilitaryBuildupIncident(view,sys, systemSeverity));\n        }\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/ai/community/AICDiplomat.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Diplomat"], "modifiers": ["public"]}}, {"id": 63155, "method_name": "victoryModifier", "class_name": "AICDiplomat", "params": ["ShipCombatResults"], "throws": null, "modifiers": ["private"], "return_type": "float", "snippet": "    private float victoryModifier(ShipCombatResults res) {\n        // how much do we magnify lost ships when we lose\n        // how much do we minimize lost ships when we lose\n\n        //  do we hate everyone else?\n        float multiplier = 1.0f;\n        if (empire.leader().isXenophobic())\n            multiplier *= 2;\n\n        // did we win? if aggressive stacks still active, then no\n        boolean won = true;\n        for (CombatStack st: res.activeStacks()) {\n            if (st.empire.aggressiveWith(empire.id))\n                won = false;\n        }\n        // if we won, then losses don't seem as bad\n        if (won)\n                    multiplier /= 2;\n\n        // was this attack at our colonies?\n        if (res.defender() == empire)\n            multiplier *= 2;\n\n        return multiplier;\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/ai/community/AICDiplomat.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Diplomat"], "modifiers": ["public"]}}, {"id": 63156, "method_name": "skirmishSeverity", "class_name": "AICDiplomat", "params": ["ShipCombatResults"], "throws": null, "modifiers": ["private"], "return_type": "float", "snippet": "    private float skirmishSeverity(ShipCombatResults res) {\n        float lostBC = 0;\n        // how many ships & bases were lost, relative to empire production\n        for (ShipDesign d: res.shipsDestroyed().keySet()) {\n            if (d.empire() == empire) {\n                int num = res.shipsDestroyed().get(d);\n                lostBC += (num * d.cost());\n            }\n        }\n        if (res.defender() == empire) {\n            lostBC += (res.basesDestroyed() * empire.tech().newMissileBaseCost());\n            lostBC += (res.factoriesDestroyed() * empire.tech().maxFactoryCost());\n        }\n        float totalIndustry = empire.totalPlanetaryProduction();\n\n        // -1 severity for each 1% of total production lost\n        return -1.0f*lostBC*100/totalIndustry;\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/ai/community/AICDiplomat.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Diplomat"], "modifiers": ["public"]}}, {"id": 63157, "method_name": "warWeary", "class_name": "AICDiplomat", "params": ["EmpireView"], "throws": null, "modifiers": ["private"], "return_type": "boolean", "snippet": "   private boolean warWeary(EmpireView v) {\n        if (v.embassy().finalWar())\n            return false;\n        \n        Empire emp = v.owner();\n        TreatyWar treaty = (TreatyWar) v.embassy().treaty();\n        if (treaty.colonyChange(emp) < warColonyLossLimit(v))\n            return true;\n        if (treaty.populationChange(emp) < warPopulationLossLimit(v))\n            return true;       \n        if (treaty.productionChange(emp) < warProductionLossLimit(v))\n            return true;  \n        if (treaty.fleetSizeChange(emp) < warFleetSizeLossLimit(v))\n            return true;  \n        return false;        \n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/ai/community/AICDiplomat.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Diplomat"], "modifiers": ["public"]}}, {"id": 63158, "method_name": "warColonyLossLimit", "class_name": "AICDiplomat", "params": ["EmpireView"], "throws": null, "modifiers": ["private"], "return_type": "float", "snippet": "    private float warColonyLossLimit(EmpireView v) {\n        switch(v.owner().leader().objective) {\n            case MILITARIST:    return 0.6f;\n            case ECOLOGIST:     return 0.8f;\n            case DIPLOMAT:      return 0.6f;\n            case INDUSTRIALIST: return 0.6f;\n            case EXPANSIONIST:  return 0.8f;\n            case TECHNOLOGIST:  return 0.6f;\n            default:            return 0.6f;\n        }        \n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/ai/community/AICDiplomat.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Diplomat"], "modifiers": ["public"]}}, {"id": 63159, "method_name": "warPopulationLossLimit", "class_name": "AICDiplomat", "params": ["EmpireView"], "throws": null, "modifiers": ["private"], "return_type": "float", "snippet": "    private float warPopulationLossLimit(EmpireView v) {\n        switch(v.owner().leader().personality) {\n            case PACIFIST:   return 0.8f;\n            case HONORABLE:  return 0.6f;\n            case XENOPHOBIC: return 0.6f;\n            case RUTHLESS:   return 0.4f;\n            case AGGRESSIVE: return 0.6f;\n            case ERRATIC:    return 0.6f;\n            default:         return 0.6f;\n        }        \n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/ai/community/AICDiplomat.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Diplomat"], "modifiers": ["public"]}}, {"id": 63160, "method_name": "warProductionLossLimit", "class_name": "AICDiplomat", "params": ["EmpireView"], "throws": null, "modifiers": ["private"], "return_type": "float", "snippet": "    private float warProductionLossLimit(EmpireView v) {\n        switch(v.owner().leader().objective) {\n            case MILITARIST:    return 0.6f;\n            case ECOLOGIST:     return 0.4f;\n            case DIPLOMAT:      return 0.6f;\n            case INDUSTRIALIST: return 0.8f;\n            case EXPANSIONIST:  return 0.8f;\n            case TECHNOLOGIST:  return 0.6f;\n            default:            return 0.6f;\n        }        \n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/ai/community/AICDiplomat.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Diplomat"], "modifiers": ["public"]}}, {"id": 63161, "method_name": "warFleetSizeLossLimit", "class_name": "AICDiplomat", "params": ["EmpireView"], "throws": null, "modifiers": ["private"], "return_type": "float", "snippet": "    private float warFleetSizeLossLimit(EmpireView v) {\n        switch(v.owner().leader().objective) {\n            case MILITARIST:    return 0.4f;\n            case ECOLOGIST:     return 0.2f;\n            case DIPLOMAT:      return 0.2f;\n            case INDUSTRIALIST: return 0.2f;\n            case EXPANSIONIST:  return 0.2f;\n            case TECHNOLOGIST:  return 0.2f;\n            default:            return 0.2f;\n        }        \n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/ai/community/AICDiplomat.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Diplomat"], "modifiers": ["public"]}}, {"id": 63162, "method_name": "onCommand", "class_name": "AddPermissionCommand", "params": ["CommandSender", "Command", "String", "String"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean onCommand(CommandSender sender, Command command, String label, String[] args) {\n        if (args.length != 2) {\n            sender.sendMessage(ChatColor.RED + \"Please specify a player & a permission!\");\n            return true;\n        }\n\n        String playerName = args[0];\n        String permission = args[1];\n\n        // Get an OfflinePlayer object for the player\n        OfflinePlayer player = this.plugin.getServer().getOfflinePlayer(playerName);\n\n        // Player not known?\n        if (player == null) {\n            sender.sendMessage(ChatColor.RED + playerName +  \" has never joined the server!\");\n            return true;\n        }\n\n        // Create a node to add to the player.\n        Node node = Node.builder(permission).build();\n\n        // Load, modify & save the user in LuckPerms.\n        this.luckPerms.getUserManager().modifyUser(player.getUniqueId(), (User user) -> {\n            // Try to add the node to the user.\n            DataMutateResult result = user.data().add(node);\n\n            // Check to see the result of adding the node.\n            if (result.wasSuccessful()) {\n                sender.sendMessage(ChatColor.RED + user.getUsername() + \" now has permission \" + permission + \"!\");\n            } else {\n                sender.sendMessage(ChatColor.RED + user.getUsername() + \" already has that permission!\");\n            }\n        });\n\n        return true;\n    }", "url": "https://raw.githubusercontent.com/LuckPerms/api-cookbook/master/src/main/java/me/lucko/lpcookbook/commands/AddPermissionCommand.java", "stars": "1", "class_props": {"extends": null, "implements": ["CommandExecutor"], "modifiers": ["public"]}}, {"id": 63163, "method_name": "isOlderThan18", "class_name": "UserDTO", "params": [], "throws": null, "modifiers": ["private"], "return_type": "boolean", "snippet": "    private boolean isOlderThan18() {\n        return birthDate == null || birthDate.isBefore(LocalDate.now().minusYears(18));\n    }", "url": "https://raw.githubusercontent.com/gardle/gardle-web/master/src/main/java/com/gardle/service/dto/UserDTO.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 63164, "method_name": "open", "class_name": "SerialPortProxyImpl", "params": ["ParcelFileDescriptor", "int"], "throws": ["IOException"], "modifiers": ["public"], "return_type": "void", "snippet": "    public void open(ParcelFileDescriptor pfd, int speed) throws IOException {\n        mProxy.open(pfd, speed);\n    }", "url": "https://raw.githubusercontent.com/CoboVault/cobo-vault-cold/master/encryption-core/src/main/java/com/cobo/cold/encryptioncore/serial/SerialPortProxyImpl.java", "stars": "13", "class_props": {"extends": null, "implements": ["SerialPortProxy"], "modifiers": []}}, {"id": 63165, "method_name": "close", "class_name": "SerialPortProxyImpl", "params": [], "throws": ["IOException"], "modifiers": ["public"], "return_type": "void", "snippet": "    public void close() throws IOException {\n        mProxy.close();\n    }", "url": "https://raw.githubusercontent.com/CoboVault/cobo-vault-cold/master/encryption-core/src/main/java/com/cobo/cold/encryptioncore/serial/SerialPortProxyImpl.java", "stars": "13", "class_props": {"extends": null, "implements": ["SerialPortProxy"], "modifiers": []}}, {"id": 63166, "method_name": "read", "class_name": "SerialPortProxyImpl", "params": ["ByteBuffer", "int"], "throws": ["IOException"], "modifiers": ["public"], "return_type": "int", "snippet": "    public int read(ByteBuffer buffer, int offset) throws IOException {\n        return mProxy.read(buffer, offset);\n    }", "url": "https://raw.githubusercontent.com/CoboVault/cobo-vault-cold/master/encryption-core/src/main/java/com/cobo/cold/encryptioncore/serial/SerialPortProxyImpl.java", "stars": "13", "class_props": {"extends": null, "implements": ["SerialPortProxy"], "modifiers": []}}, {"id": 63167, "method_name": "write", "class_name": "SerialPortProxyImpl", "params": ["ByteBuffer", "int"], "throws": ["IOException"], "modifiers": ["public"], "return_type": "void", "snippet": "    public void write(ByteBuffer buffer, int length) throws IOException {\n        mProxy.write(buffer, length);\n    }", "url": "https://raw.githubusercontent.com/CoboVault/cobo-vault-cold/master/encryption-core/src/main/java/com/cobo/cold/encryptioncore/serial/SerialPortProxyImpl.java", "stars": "13", "class_props": {"extends": null, "implements": ["SerialPortProxy"], "modifiers": []}}, {"id": 63168, "method_name": "sendBreak", "class_name": "SerialPortProxyImpl", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void sendBreak() {\n        mProxy.sendBreak();\n    }", "url": "https://raw.githubusercontent.com/CoboVault/cobo-vault-cold/master/encryption-core/src/main/java/com/cobo/cold/encryptioncore/serial/SerialPortProxyImpl.java", "stars": "13", "class_props": {"extends": null, "implements": ["SerialPortProxy"], "modifiers": []}}, {"id": 63169, "method_name": "create", "class_name": "FactorComparator", "params": ["String", "int", "Comparator<T>"], "throws": null, "modifiers": ["public", "static"], "return_type": "FactorComparator<T>", "snippet": "  public static <T> FactorComparator<T> create(final String factorName, final int weight,\n      final Comparator<T> comparator) {\n\n    if (null == factorName || factorName.length() == 0 || weight < 0 || null == comparator) {\n      logger.error(\n          \"failed to create instance of FactorComparator, at least one of the input paramters are invalid\");\n      return null;\n    }\n\n    return new FactorComparator<>(factorName, weight, comparator);\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/selector/FactorComparator.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["final", "public"]}}, {"id": 63170, "method_name": "getFactorName", "class_name": "FactorComparator", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "  public String getFactorName() {\n    return this.factorName;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/selector/FactorComparator.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["final", "public"]}}, {"id": 63171, "method_name": "getWeight", "class_name": "FactorComparator", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "  public int getWeight() {\n    return this.weight;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/selector/FactorComparator.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["final", "public"]}}, {"id": 63172, "method_name": "updateWeight", "class_name": "FactorComparator", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void updateWeight(final int value) {\n    this.weight = value;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/selector/FactorComparator.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["final", "public"]}}, {"id": 63173, "method_name": "compare", "class_name": "FactorComparator", "params": ["T", "T"], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "  public int compare(final T object1, final T object2) {\n    return this.comparator.compare(object1, object2);\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/selector/FactorComparator.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["final", "public"]}}, {"id": 63174, "method_name": "setup", "class_name": "UserControllerIT", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setup() {\n        UserController userController = new UserController(userService, userRepository, mailService, leasingService);\n\n        this.restUserMockMvc = MockMvcBuilders.standaloneSetup(userController)\n            .setCustomArgumentResolvers(pageableArgumentResolver)\n            .setControllerAdvice(exceptionTranslator)\n            .setMessageConverters(jacksonMessageConverter)\n            .build();\n    }", "url": "https://raw.githubusercontent.com/gardle/gardle-web/master/src/test/java/com/gardle/web/rest/UserControllerIT.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 63175, "method_name": "createEntity", "class_name": "UserControllerIT", "params": ["EntityManager"], "throws": null, "modifiers": ["public", "static"], "return_type": "User", "snippet": "    public static User createEntity(EntityManager em) {\n        User user = new User();\n        user.setLogin(DEFAULT_LOGIN + RandomStringUtils.randomAlphabetic(5));\n        user.setPassword(RandomStringUtils.random(60));\n        user.setActivated(true);\n        user.setEmail(RandomStringUtils.randomAlphabetic(5) + DEFAULT_EMAIL);\n        user.setFirstName(DEFAULT_FIRSTNAME);\n        user.setLastName(DEFAULT_LASTNAME);\n        user.setTel(DEFAULT_TEL);\n        user.setBirthDate(DEFAULT_BIRTHDATE);\n        user.setLangKey(DEFAULT_LANGKEY);\n        user.setBankAccountIBAN(DEFAULT_IBAN);\n        return user;\n    }", "url": "https://raw.githubusercontent.com/gardle/gardle-web/master/src/test/java/com/gardle/web/rest/UserControllerIT.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 63176, "method_name": "initTest", "class_name": "UserControllerIT", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void initTest() {\n        user = createEntity(em);\n        user.setLogin(DEFAULT_LOGIN);\n        user.setEmail(DEFAULT_EMAIL);\n    }", "url": "https://raw.githubusercontent.com/gardle/gardle-web/master/src/test/java/com/gardle/web/rest/UserControllerIT.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 63177, "method_name": "createUser", "class_name": "UserControllerIT", "params": [], "throws": ["Exception"], "modifiers": ["public"], "return_type": "void", "snippet": "    public void createUser() throws Exception {\n        int databaseSizeBeforeCreate = userRepository.findAll().size();\n\n        // Create the User\n        ManagedUserVM managedUserVM = new ManagedUserVM();\n        managedUserVM.setLogin(DEFAULT_LOGIN);\n        managedUserVM.setPassword(DEFAULT_PASSWORD);\n        managedUserVM.setFirstName(DEFAULT_FIRSTNAME);\n        managedUserVM.setLastName(DEFAULT_LASTNAME);\n        managedUserVM.setBirthDate(DEFAULT_BIRTHDATE);\n        managedUserVM.setTel(DEFAULT_TEL);\n        managedUserVM.setEmail(DEFAULT_EMAIL);\n        managedUserVM.setActivated(true);\n        managedUserVM.setLangKey(DEFAULT_LANGKEY);\n        managedUserVM.setAuthorities(Collections.singleton(AuthoritiesConstants.USER));\n        managedUserVM.setBankAccountIBAN(DEFAULT_IBAN);\n\n        restUserMockMvc.perform(post(\"/api/v1/users\")\n            .contentType(TestUtil.APPLICATION_JSON_UTF8)\n            .content(TestUtil.convertObjectToJsonBytes(managedUserVM)))\n            .andExpect(status().isCreated());\n\n        // Validate the User in the database\n        List<User> userList = userRepository.findAll();\n        assertThat(userList).hasSize(databaseSizeBeforeCreate + 1);\n        User testUser = userList.get(userList.size() - 1);\n        assertThat(testUser.getLogin()).isEqualTo(DEFAULT_LOGIN);\n        assertThat(testUser.getFirstName()).isEqualTo(DEFAULT_FIRSTNAME);\n        assertThat(testUser.getLastName()).isEqualTo(DEFAULT_LASTNAME);\n        assertThat(testUser.getEmail()).isEqualTo(DEFAULT_EMAIL);\n        assertThat(testUser.getLangKey()).isEqualTo(DEFAULT_LANGKEY);\n        assertThat(testUser.getTel()).isEqualTo(DEFAULT_TEL);\n        assertThat(testUser.getBirthDate()).isEqualTo(DEFAULT_BIRTHDATE);\n        assertThat(testUser.getBankAccountIBAN()).isEqualTo(DEFAULT_IBAN);\n    }", "url": "https://raw.githubusercontent.com/gardle/gardle-web/master/src/test/java/com/gardle/web/rest/UserControllerIT.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 63178, "method_name": "createUserWithExistingId", "class_name": "UserControllerIT", "params": [], "throws": ["Exception"], "modifiers": ["public"], "return_type": "void", "snippet": "    public void createUserWithExistingId() throws Exception {\n        int databaseSizeBeforeCreate = userRepository.findAll().size();\n\n        ManagedUserVM managedUserVM = new ManagedUserVM();\n        managedUserVM.setId(1L);\n        managedUserVM.setLogin(DEFAULT_LOGIN);\n        managedUserVM.setPassword(DEFAULT_PASSWORD);\n        managedUserVM.setFirstName(DEFAULT_FIRSTNAME);\n        managedUserVM.setLastName(DEFAULT_LASTNAME);\n        managedUserVM.setEmail(DEFAULT_EMAIL);\n        managedUserVM.setActivated(true);\n        managedUserVM.setLangKey(DEFAULT_LANGKEY);\n        managedUserVM.setAuthorities(Collections.singleton(AuthoritiesConstants.USER));\n        managedUserVM.setBankAccountIBAN(DEFAULT_IBAN);\n        // An entity with an existing ID cannot be created, so this API call must fail\n        restUserMockMvc.perform(post(\"/api/v1/users\")\n            .contentType(TestUtil.APPLICATION_JSON_UTF8)\n            .content(TestUtil.convertObjectToJsonBytes(managedUserVM)))\n            .andExpect(status().isBadRequest());\n\n        // Validate the User in the database\n        List<User> userList = userRepository.findAll();\n        assertThat(userList).hasSize(databaseSizeBeforeCreate);\n    }", "url": "https://raw.githubusercontent.com/gardle/gardle-web/master/src/test/java/com/gardle/web/rest/UserControllerIT.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 63179, "method_name": "createUserWithExistingLogin", "class_name": "UserControllerIT", "params": [], "throws": ["Exception"], "modifiers": ["public"], "return_type": "void", "snippet": "    public void createUserWithExistingLogin() throws Exception {\n        // Initialize the database\n        userRepository.saveAndFlush(user);\n        int databaseSizeBeforeCreate = userRepository.findAll().size();\n\n        ManagedUserVM managedUserVM = new ManagedUserVM();\n        managedUserVM.setLogin(DEFAULT_LOGIN);// this login should already be used\n        managedUserVM.setPassword(DEFAULT_PASSWORD);\n        managedUserVM.setFirstName(DEFAULT_FIRSTNAME);\n        managedUserVM.setLastName(DEFAULT_LASTNAME);\n        managedUserVM.setEmail(\"anothermail@localhost\");\n        managedUserVM.setActivated(true);\n        managedUserVM.setLangKey(DEFAULT_LANGKEY);\n        managedUserVM.setAuthorities(Collections.singleton(AuthoritiesConstants.USER));\n        managedUserVM.setBankAccountIBAN(DEFAULT_IBAN);\n        // Create the User\n        restUserMockMvc.perform(post(\"/api/v1/users\")\n            .contentType(TestUtil.APPLICATION_JSON_UTF8)\n            .content(TestUtil.convertObjectToJsonBytes(managedUserVM)))\n            .andExpect(status().isConflict());\n\n        // Validate the User in the database\n        List<User> userList = userRepository.findAll();\n        assertThat(userList).hasSize(databaseSizeBeforeCreate);\n    }", "url": "https://raw.githubusercontent.com/gardle/gardle-web/master/src/test/java/com/gardle/web/rest/UserControllerIT.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 63180, "method_name": "createUserWithInvalidAge", "class_name": "UserControllerIT", "params": [], "throws": ["Exception"], "modifiers": ["public"], "return_type": "void", "snippet": "    public void createUserWithInvalidAge() throws Exception {\n        int databaseSizeBeforeCreate = userRepository.findAll().size();\n\n        ManagedUserVM managedUserVM = new ManagedUserVM();\n        managedUserVM.setLogin(DEFAULT_LOGIN);// this login should already be used\n        managedUserVM.setPassword(DEFAULT_PASSWORD);\n        managedUserVM.setFirstName(DEFAULT_FIRSTNAME);\n        managedUserVM.setLastName(DEFAULT_LASTNAME);\n        managedUserVM.setEmail(DEFAULT_EMAIL);\n        managedUserVM.setTel(DEFAULT_TEL);\n        managedUserVM.setBirthDate(LocalDate.now().minusYears(10));\n        managedUserVM.setActivated(true);\n        managedUserVM.setLangKey(DEFAULT_LANGKEY);\n        managedUserVM.setBankAccountIBAN(DEFAULT_IBAN);\n        managedUserVM.setAuthorities(Collections.singleton(AuthoritiesConstants.USER));\n\n        // Create the User\n        restUserMockMvc.perform(post(\"/api/v1/users\")\n            .contentType(TestUtil.APPLICATION_JSON_UTF8)\n            .content(TestUtil.convertObjectToJsonBytes(managedUserVM)))\n            .andExpect(status().isBadRequest());\n\n        // Validate the User in the database\n        List<User> userList = userRepository.findAll();\n        assertThat(userList).hasSize(databaseSizeBeforeCreate);\n    }", "url": "https://raw.githubusercontent.com/gardle/gardle-web/master/src/test/java/com/gardle/web/rest/UserControllerIT.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 63181, "method_name": "createUserWithInvalidTelephoneNumber", "class_name": "UserControllerIT", "params": [], "throws": ["Exception"], "modifiers": ["public"], "return_type": "void", "snippet": "    public void createUserWithInvalidTelephoneNumber() throws Exception {\n        int databaseSizeBeforeCreate = userRepository.findAll().size();\n\n        ManagedUserVM managedUserVM = new ManagedUserVM();\n        managedUserVM.setLogin(DEFAULT_LOGIN);// this login should already be used\n        managedUserVM.setPassword(DEFAULT_PASSWORD);\n        managedUserVM.setFirstName(DEFAULT_FIRSTNAME);\n        managedUserVM.setLastName(DEFAULT_LASTNAME);\n        managedUserVM.setEmail(DEFAULT_EMAIL);\n        managedUserVM.setTel(\"+43abc6363636363\");\n        managedUserVM.setBirthDate(DEFAULT_BIRTHDATE);\n        managedUserVM.setActivated(true);\n        managedUserVM.setLangKey(DEFAULT_LANGKEY);\n        managedUserVM.setBankAccountIBAN(DEFAULT_IBAN);\n        managedUserVM.setAuthorities(Collections.singleton(AuthoritiesConstants.USER));\n\n        // Create the User\n        restUserMockMvc.perform(post(\"/api/v1/users\")\n            .contentType(TestUtil.APPLICATION_JSON_UTF8)\n            .content(TestUtil.convertObjectToJsonBytes(managedUserVM)))\n            .andExpect(status().isBadRequest());\n\n        // Validate the User in the database\n        List<User> userList = userRepository.findAll();\n        assertThat(userList).hasSize(databaseSizeBeforeCreate);\n    }", "url": "https://raw.githubusercontent.com/gardle/gardle-web/master/src/test/java/com/gardle/web/rest/UserControllerIT.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 63182, "method_name": "createUserWithExistingEmail", "class_name": "UserControllerIT", "params": [], "throws": ["Exception"], "modifiers": ["public"], "return_type": "void", "snippet": "    public void createUserWithExistingEmail() throws Exception {\n        // Initialize the database\n        userRepository.saveAndFlush(user);\n        int databaseSizeBeforeCreate = userRepository.findAll().size();\n\n        ManagedUserVM managedUserVM = new ManagedUserVM();\n        managedUserVM.setLogin(\"anotherlogin\");\n        managedUserVM.setPassword(DEFAULT_PASSWORD);\n        managedUserVM.setFirstName(DEFAULT_FIRSTNAME);\n        managedUserVM.setLastName(DEFAULT_LASTNAME);\n        managedUserVM.setEmail(DEFAULT_EMAIL);// this email should already be used\n        managedUserVM.setActivated(true);\n        managedUserVM.setLangKey(DEFAULT_LANGKEY);\n        managedUserVM.setBankAccountIBAN(DEFAULT_IBAN);\n        managedUserVM.setAuthorities(Collections.singleton(AuthoritiesConstants.USER));\n\n        // Create the User\n        restUserMockMvc.perform(post(\"/api/v1/users\")\n            .contentType(TestUtil.APPLICATION_JSON_UTF8)\n            .content(TestUtil.convertObjectToJsonBytes(managedUserVM)))\n            .andExpect(status().isConflict());\n\n        // Validate the User in the database\n        List<User> userList = userRepository.findAll();\n        assertThat(userList).hasSize(databaseSizeBeforeCreate);\n    }", "url": "https://raw.githubusercontent.com/gardle/gardle-web/master/src/test/java/com/gardle/web/rest/UserControllerIT.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 63183, "method_name": "createUserWithPreviouslyDeletedUsername", "class_name": "UserControllerIT", "params": [], "throws": ["Exception"], "modifiers": ["public"], "return_type": "void", "snippet": "    public void createUserWithPreviouslyDeletedUsername() throws Exception {\n        // Initialize the database\n        userRepository.saveAndFlush(user);\n\n        // Delete the user\n        restUserMockMvc.perform(delete(\"/api/v1/users/{login}\", user.getLogin())\n            .accept(TestUtil.APPLICATION_JSON_UTF8))\n            .andDo(MockMvcResultHandlers.print())\n            .andExpect(status().isNoContent());\n\n        ManagedUserVM managedUserVM = new ManagedUserVM();\n        managedUserVM.setLogin(DEFAULT_LOGIN); // The login that is re-used\n        managedUserVM.setPassword(DEFAULT_PASSWORD);\n        managedUserVM.setFirstName(DEFAULT_FIRSTNAME);\n        managedUserVM.setLastName(DEFAULT_LASTNAME);\n        managedUserVM.setEmail(\"another@email.com\");\n        managedUserVM.setActivated(true);\n        managedUserVM.setLangKey(DEFAULT_LANGKEY);\n        managedUserVM.setAuthorities(Collections.singleton(AuthoritiesConstants.USER));\n        managedUserVM.setBankAccountIBAN(DEFAULT_IBAN);\n\n        // Create the User\n        restUserMockMvc.perform(post(\"/api/v1/users\")\n            .contentType(TestUtil.APPLICATION_JSON_UTF8)\n            .content(TestUtil.convertObjectToJsonBytes(managedUserVM)))\n            .andExpect(status().isCreated());\n    }", "url": "https://raw.githubusercontent.com/gardle/gardle-web/master/src/test/java/com/gardle/web/rest/UserControllerIT.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 63184, "method_name": "createUserWithPreviouslyDeletedEmail", "class_name": "UserControllerIT", "params": [], "throws": ["Exception"], "modifiers": ["public"], "return_type": "void", "snippet": "    public void createUserWithPreviouslyDeletedEmail() throws Exception {\n        // Initialize the database\n        userRepository.saveAndFlush(user);\n\n        // Delete the user\n        restUserMockMvc.perform(delete(\"/api/v1/users/{login}\", user.getLogin())\n            .accept(TestUtil.APPLICATION_JSON_UTF8))\n            .andDo(MockMvcResultHandlers.print())\n            .andExpect(status().isNoContent());\n\n        ManagedUserVM managedUserVM = new ManagedUserVM();\n        managedUserVM.setLogin(\"another_login\");\n        managedUserVM.setPassword(DEFAULT_PASSWORD);\n        managedUserVM.setFirstName(DEFAULT_FIRSTNAME);\n        managedUserVM.setLastName(DEFAULT_LASTNAME);\n        managedUserVM.setEmail(DEFAULT_EMAIL); // The email that is re-used\n        managedUserVM.setActivated(true);\n        managedUserVM.setLangKey(DEFAULT_LANGKEY);\n        managedUserVM.setAuthorities(Collections.singleton(AuthoritiesConstants.USER));\n        managedUserVM.setBankAccountIBAN(DEFAULT_IBAN);\n\n        // Create the User\n        restUserMockMvc.perform(post(\"/api/v1/users\")\n            .contentType(TestUtil.APPLICATION_JSON_UTF8)\n            .content(TestUtil.convertObjectToJsonBytes(managedUserVM)))\n            .andExpect(status().isCreated());\n    }", "url": "https://raw.githubusercontent.com/gardle/gardle-web/master/src/test/java/com/gardle/web/rest/UserControllerIT.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 63185, "method_name": "getAllUsers", "class_name": "UserControllerIT", "params": [], "throws": ["Exception"], "modifiers": ["public"], "return_type": "void", "snippet": "    public void getAllUsers() throws Exception {\n        // Initialize the database\n        userRepository.saveAndFlush(user);\n\n        // Get all the users\n        restUserMockMvc.perform(get(\"/api/v1/users?sort=id,desc\")\n            .accept(MediaType.APPLICATION_JSON))\n            .andExpect(status().isOk())\n            .andExpect(content().contentType(MediaType.APPLICATION_JSON_UTF8_VALUE))\n            .andExpect(jsonPath(\"$.[*].login\").value(hasItem(DEFAULT_LOGIN)))\n            .andExpect(jsonPath(\"$.[*].firstName\").value(hasItem(DEFAULT_FIRSTNAME)))\n            .andExpect(jsonPath(\"$.[*].lastName\").value(hasItem(DEFAULT_LASTNAME)))\n            .andExpect(jsonPath(\"$.[*].email\").value(hasItem(DEFAULT_EMAIL)))\n            .andExpect(jsonPath(\"$.[*].langKey\").value(hasItem(DEFAULT_LANGKEY)));\n    }", "url": "https://raw.githubusercontent.com/gardle/gardle-web/master/src/test/java/com/gardle/web/rest/UserControllerIT.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 63186, "method_name": "getUser", "class_name": "UserControllerIT", "params": [], "throws": ["Exception"], "modifiers": ["public"], "return_type": "void", "snippet": "    public void getUser() throws Exception {\n        // Initialize the database\n        userRepository.saveAndFlush(user);\n\n        // Get the user\n        restUserMockMvc.perform(get(\"/api/v1/users/{login}\", user.getLogin()))\n            .andExpect(status().isOk())\n            .andExpect(content().contentType(MediaType.APPLICATION_JSON_UTF8_VALUE))\n            .andExpect(jsonPath(\"$.login\").value(user.getLogin()))\n            .andExpect(jsonPath(\"$.firstName\").value(DEFAULT_FIRSTNAME))\n            .andExpect(jsonPath(\"$.lastName\").value(DEFAULT_LASTNAME))\n            .andExpect(jsonPath(\"$.email\").value(DEFAULT_EMAIL))\n            .andExpect(jsonPath(\"$.langKey\").value(DEFAULT_LANGKEY));\n    }", "url": "https://raw.githubusercontent.com/gardle/gardle-web/master/src/test/java/com/gardle/web/rest/UserControllerIT.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 63187, "method_name": "getNonExistingUser", "class_name": "UserControllerIT", "params": [], "throws": ["Exception"], "modifiers": ["public"], "return_type": "void", "snippet": "    public void getNonExistingUser() throws Exception {\n        restUserMockMvc.perform(get(\"/api/v1/users/unknown\"))\n            .andExpect(status().isNotFound());\n    }", "url": "https://raw.githubusercontent.com/gardle/gardle-web/master/src/test/java/com/gardle/web/rest/UserControllerIT.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 63188, "method_name": "updateUser", "class_name": "UserControllerIT", "params": [], "throws": ["Exception"], "modifiers": ["public"], "return_type": "void", "snippet": "    public void updateUser() throws Exception {\n        // Initialize the database\n        userRepository.saveAndFlush(user);\n        int databaseSizeBeforeUpdate = userRepository.findAll().size();\n\n        // Update the user\n        User updatedUser = userRepository.findById(user.getId()).get();\n\n        ManagedUserVM managedUserVM = new ManagedUserVM();\n        managedUserVM.setId(updatedUser.getId());\n        managedUserVM.setLogin(updatedUser.getLogin());\n        managedUserVM.setPassword(UPDATED_PASSWORD);\n        managedUserVM.setFirstName(UPDATED_FIRSTNAME);\n        managedUserVM.setLastName(UPDATED_LASTNAME);\n        managedUserVM.setEmail(UPDATED_EMAIL);\n        managedUserVM.setActivated(updatedUser\n            .isActivated());\n        managedUserVM.setLangKey(UPDATED_LANGKEY);\n        managedUserVM.setCreatedBy(updatedUser.getCreatedBy());\n        managedUserVM.setCreatedDate(updatedUser.getCreatedDate());\n        managedUserVM.setLastModifiedBy(updatedUser.getLastModifiedBy());\n        managedUserVM.setLastModifiedDate(updatedUser.getLastModifiedDate());\n        managedUserVM.setAuthorities(Collections.singleton(AuthoritiesConstants.USER));\n        managedUserVM.setBankAccountIBAN(DEFAULT_IBAN);\n        restUserMockMvc.perform(put(\"/api/v1/users\")\n            .contentType(TestUtil.APPLICATION_JSON_UTF8)\n            .content(TestUtil.convertObjectToJsonBytes(managedUserVM)))\n            .andExpect(status().isOk());\n\n        // Validate the User in the database\n        List<User> userList = userRepository.findAll();\n        assertThat(userList).hasSize(databaseSizeBeforeUpdate);\n        User testUser = userList.get(userList.size() - 1);\n        assertThat(testUser.getFirstName()).isEqualTo(UPDATED_FIRSTNAME);\n        assertThat(testUser.getLastName()).isEqualTo(UPDATED_LASTNAME);\n        assertThat(testUser.getEmail()).isEqualTo(UPDATED_EMAIL);\n        assertThat(testUser.getLangKey()).isEqualTo(UPDATED_LANGKEY);\n    }", "url": "https://raw.githubusercontent.com/gardle/gardle-web/master/src/test/java/com/gardle/web/rest/UserControllerIT.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 63189, "method_name": "updateUserLogin", "class_name": "UserControllerIT", "params": [], "throws": ["Exception"], "modifiers": ["public"], "return_type": "void", "snippet": "    public void updateUserLogin() throws Exception {\n        // Initialize the database\n        userRepository.saveAndFlush(user);\n        int databaseSizeBeforeUpdate = userRepository.findAll().size();\n\n        // Update the user\n        User updatedUser = userRepository.findById(user.getId()).get();\n\n        ManagedUserVM managedUserVM = new ManagedUserVM();\n        managedUserVM.setId(updatedUser.getId());\n        managedUserVM.setLogin(UPDATED_LOGIN);\n        managedUserVM.setPassword(UPDATED_PASSWORD);\n        managedUserVM.setFirstName(UPDATED_FIRSTNAME);\n        managedUserVM.setLastName(UPDATED_LASTNAME);\n        managedUserVM.setEmail(UPDATED_EMAIL);\n        managedUserVM.setActivated(updatedUser.isActivated());\n        managedUserVM.setLangKey(UPDATED_LANGKEY);\n        managedUserVM.setCreatedBy(updatedUser.getCreatedBy());\n        managedUserVM.setCreatedDate(updatedUser.getCreatedDate());\n        managedUserVM.setLastModifiedBy(updatedUser.getLastModifiedBy());\n        managedUserVM.setLastModifiedDate(updatedUser.getLastModifiedDate());\n        managedUserVM.setAuthorities(Collections.singleton(AuthoritiesConstants.USER));\n        managedUserVM.setBankAccountIBAN(DEFAULT_IBAN);\n\n        restUserMockMvc.perform(put(\"/api/v1/users\")\n            .contentType(TestUtil.APPLICATION_JSON_UTF8)\n            .content(TestUtil.convertObjectToJsonBytes(managedUserVM)))\n            .andExpect(status().isOk());\n\n        // Validate the User in the database\n        List<User> userList = userRepository.findAll();\n        assertThat(userList).hasSize(databaseSizeBeforeUpdate);\n        User testUser = userList.get(userList.size() - 1);\n        assertThat(testUser.getLogin()).isEqualTo(UPDATED_LOGIN);\n        assertThat(testUser.getFirstName()).isEqualTo(UPDATED_FIRSTNAME);\n        assertThat(testUser.getLastName()).isEqualTo(UPDATED_LASTNAME);\n        assertThat(testUser.getEmail()).isEqualTo(UPDATED_EMAIL);\n        assertThat(testUser.getLangKey()).isEqualTo(UPDATED_LANGKEY);\n    }", "url": "https://raw.githubusercontent.com/gardle/gardle-web/master/src/test/java/com/gardle/web/rest/UserControllerIT.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 63190, "method_name": "updateUserExistingEmail", "class_name": "UserControllerIT", "params": [], "throws": ["Exception"], "modifiers": ["public"], "return_type": "void", "snippet": "    public void updateUserExistingEmail() throws Exception {\n        // Initialize the database with 2 users\n        userRepository.saveAndFlush(user);\n\n        User anotherUser = new User();\n        anotherUser.setLogin(\"jhipster\");\n        anotherUser.setPassword(RandomStringUtils.random(60));\n        anotherUser.setActivated(true);\n        anotherUser.setEmail(\"jhipster@localhost\");\n        anotherUser.setFirstName(\"java\");\n        anotherUser.setLastName(\"hipster\");\n        anotherUser.setLangKey(\"en\");\n        anotherUser.setBankAccountIBAN(DEFAULT_IBAN);\n        userRepository.saveAndFlush(anotherUser);\n\n        // Update the user\n        User updatedUser = userRepository.findById(user.getId()).get();\n\n        ManagedUserVM managedUserVM = new ManagedUserVM();\n        managedUserVM.setId(updatedUser.getId());\n        managedUserVM.setLogin(updatedUser.getLogin());\n        managedUserVM.setPassword(updatedUser.getPassword());\n        managedUserVM.setFirstName(updatedUser.getFirstName());\n        managedUserVM.setLastName(updatedUser.getLastName());\n        managedUserVM.setEmail(\"jhipster@localhost\");// this email should already be used by anotherUser\n        managedUserVM.setActivated(updatedUser.isActivated());\n        managedUserVM.setLangKey(updatedUser.getLangKey());\n        managedUserVM.setCreatedBy(updatedUser.getCreatedBy());\n        managedUserVM.setCreatedDate(updatedUser.getCreatedDate());\n        managedUserVM.setLastModifiedBy(updatedUser.getLastModifiedBy());\n        managedUserVM.setLastModifiedDate(updatedUser.getLastModifiedDate());\n        managedUserVM.setAuthorities(Collections.singleton(AuthoritiesConstants.USER));\n        managedUserVM.setBankAccountIBAN(DEFAULT_IBAN);\n\n        restUserMockMvc.perform(put(\"/api/v1/users\")\n            .contentType(TestUtil.APPLICATION_JSON_UTF8)\n            .content(TestUtil.convertObjectToJsonBytes(managedUserVM)))\n            .andExpect(status().isConflict());\n    }", "url": "https://raw.githubusercontent.com/gardle/gardle-web/master/src/test/java/com/gardle/web/rest/UserControllerIT.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 63191, "method_name": "updateUserExistingLogin", "class_name": "UserControllerIT", "params": [], "throws": ["Exception"], "modifiers": ["public"], "return_type": "void", "snippet": "    public void updateUserExistingLogin() throws Exception {\n        // Initialize the database\n        userRepository.saveAndFlush(user);\n\n        User anotherUser = new User();\n        anotherUser.setLogin(\"jhipster\");\n        anotherUser.setPassword(RandomStringUtils.random(60));\n        anotherUser.setActivated(true);\n        anotherUser.setEmail(\"jhipster@localhost\");\n        anotherUser.setFirstName(\"java\");\n        anotherUser.setLastName(\"hipster\");\n        anotherUser.setLangKey(\"en\");\n        anotherUser.setBankAccountIBAN(DEFAULT_IBAN);\n        userRepository.saveAndFlush(anotherUser);\n\n        // Update the user\n        User updatedUser = userRepository.findById(user.getId()).get();\n\n        ManagedUserVM managedUserVM = new ManagedUserVM();\n        managedUserVM.setId(updatedUser.getId());\n        managedUserVM.setLogin(\"jhipster\");// this login should already be used by anotherUser\n        managedUserVM.setPassword(updatedUser.getPassword());\n        managedUserVM.setFirstName(updatedUser.getFirstName());\n        managedUserVM.setLastName(updatedUser.getLastName());\n        managedUserVM.setEmail(updatedUser.getEmail());\n        managedUserVM.setActivated(updatedUser.isActivated());\n        managedUserVM.setLangKey(updatedUser.getLangKey());\n        managedUserVM.setCreatedBy(updatedUser.getCreatedBy());\n        managedUserVM.setCreatedDate(updatedUser.getCreatedDate());\n        managedUserVM.setLastModifiedBy(updatedUser.getLastModifiedBy());\n        managedUserVM.setLastModifiedDate(updatedUser.getLastModifiedDate());\n        managedUserVM.setAuthorities(Collections.singleton(AuthoritiesConstants.USER));\n        managedUserVM.setBankAccountIBAN(DEFAULT_IBAN);\n\n        restUserMockMvc.perform(put(\"/api/v1/users\")\n            .contentType(TestUtil.APPLICATION_JSON_UTF8)\n            .content(TestUtil.convertObjectToJsonBytes(managedUserVM)))\n            .andExpect(status().isConflict());\n    }", "url": "https://raw.githubusercontent.com/gardle/gardle-web/master/src/test/java/com/gardle/web/rest/UserControllerIT.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 63192, "method_name": "deleteUser", "class_name": "UserControllerIT", "params": [], "throws": ["Exception"], "modifiers": ["public"], "return_type": "void", "snippet": "    public void deleteUser() throws Exception {\n        // Initialize the database\n        userRepository.saveAndFlush(user);\n        int databaseSizeBeforeDelete = userRepository.findAll().size();\n\n        // Delete the user\n        restUserMockMvc.perform(delete(\"/api/v1/users/{login}\", user.getLogin())\n            .accept(TestUtil.APPLICATION_JSON_UTF8))\n            .andExpect(status().isNoContent());\n\n        // Validate the database is empty\n        List<User> userList = userRepository.findAll();\n        assertThat(userList).hasSize(databaseSizeBeforeDelete - 1);\n    }", "url": "https://raw.githubusercontent.com/gardle/gardle-web/master/src/test/java/com/gardle/web/rest/UserControllerIT.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 63193, "method_name": "testUserEquals", "class_name": "UserControllerIT", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void testUserEquals() {\n        User user1 = new User();\n        user1.setId(1L);\n        User user2 = new User();\n        user2.setId(user1.getId());\n        assertThat(user1).isEqualTo(user2);\n        user2.setId(2L);\n        assertThat(user1).isNotEqualTo(user2);\n        user1.setId(null);\n        assertThat(user1).isNotEqualTo(user2);\n    }", "url": "https://raw.githubusercontent.com/gardle/gardle-web/master/src/test/java/com/gardle/web/rest/UserControllerIT.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 63194, "method_name": "testUserDTOtoUser", "class_name": "UserControllerIT", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void testUserDTOtoUser() {\n        UserDTO userDTO = new UserDTO();\n        userDTO.setId(DEFAULT_ID);\n        userDTO.setLogin(DEFAULT_LOGIN);\n        userDTO.setFirstName(DEFAULT_FIRSTNAME);\n        userDTO.setLastName(DEFAULT_LASTNAME);\n        userDTO.setEmail(DEFAULT_EMAIL);\n        userDTO.setActivated(true);\n        userDTO.setLangKey(DEFAULT_LANGKEY);\n        userDTO.setCreatedBy(DEFAULT_LOGIN);\n        userDTO.setLastModifiedBy(DEFAULT_LOGIN);\n        userDTO.setAuthorities(Collections.singleton(AuthoritiesConstants.USER));\n\n        User user = userMapper.userDTOToUser(userDTO);\n        assertThat(user.getId()).isEqualTo(DEFAULT_ID);\n        assertThat(user.getLogin()).isEqualTo(DEFAULT_LOGIN);\n        assertThat(user.getFirstName()).isEqualTo(DEFAULT_FIRSTNAME);\n        assertThat(user.getLastName()).isEqualTo(DEFAULT_LASTNAME);\n        assertThat(user.getEmail()).isEqualTo(DEFAULT_EMAIL);\n        assertThat(user.isActivated()).isEqualTo(true);\n        assertThat(user.getLangKey()).isEqualTo(DEFAULT_LANGKEY);\n        assertThat(user.getCreatedBy()).isNull();\n        assertThat(user.getCreatedDate()).isNotNull();\n        assertThat(user.getLastModifiedBy()).isNull();\n        assertThat(user.getLastModifiedDate()).isNotNull();\n        assertThat(user.getAuthorities()).extracting(\"name\").containsExactly(AuthoritiesConstants.USER);\n    }", "url": "https://raw.githubusercontent.com/gardle/gardle-web/master/src/test/java/com/gardle/web/rest/UserControllerIT.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 63195, "method_name": "testUserToUserDTO", "class_name": "UserControllerIT", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void testUserToUserDTO() {\n        user.setId(DEFAULT_ID);\n        user.setCreatedBy(DEFAULT_LOGIN);\n        user.setCreatedDate(Instant.now());\n        user.setLastModifiedBy(DEFAULT_LOGIN);\n        user.setLastModifiedDate(Instant.now());\n        Set<Authority> authorities = new HashSet<>();\n        Authority authority = new Authority();\n        authority.setName(AuthoritiesConstants.USER);\n        authorities.add(authority);\n        user.setAuthorities(authorities);\n\n        UserDTO userDTO = userMapper.userToUserDTO(user);\n\n        assertThat(userDTO.getId()).isEqualTo(DEFAULT_ID);\n        assertThat(userDTO.getLogin()).isEqualTo(DEFAULT_LOGIN);\n        assertThat(userDTO.getFirstName()).isEqualTo(DEFAULT_FIRSTNAME);\n        assertThat(userDTO.getLastName()).isEqualTo(DEFAULT_LASTNAME);\n        assertThat(userDTO.getEmail()).isEqualTo(DEFAULT_EMAIL);\n        assertThat(userDTO.isActivated()).isEqualTo(true);\n        assertThat(userDTO.getLangKey()).isEqualTo(DEFAULT_LANGKEY);\n        assertThat(userDTO.getCreatedBy()).isEqualTo(DEFAULT_LOGIN);\n        assertThat(userDTO.getCreatedDate()).isEqualTo(user.getCreatedDate());\n        assertThat(userDTO.getLastModifiedBy()).isEqualTo(DEFAULT_LOGIN);\n        assertThat(userDTO.getLastModifiedDate()).isEqualTo(user.getLastModifiedDate());\n        assertThat(userDTO.getAuthorities()).containsExactly(AuthoritiesConstants.USER);\n        assertThat(userDTO.toString()).isNotNull();\n    }", "url": "https://raw.githubusercontent.com/gardle/gardle-web/master/src/test/java/com/gardle/web/rest/UserControllerIT.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 63196, "method_name": "testAuthorityEquals", "class_name": "UserControllerIT", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void testAuthorityEquals() {\n        Authority authorityA = new Authority();\n        assertThat(authorityA).isEqualTo(authorityA);\n        assertThat(authorityA).isNotEqualTo(null);\n        assertThat(authorityA).isNotEqualTo(new Object());\n        assertThat(authorityA.hashCode()).isEqualTo(0);\n        assertThat(authorityA.toString()).isNotNull();\n\n        Authority authorityB = new Authority();\n        assertThat(authorityA).isEqualTo(authorityB);\n\n        authorityB.setName(AuthoritiesConstants.ADMIN);\n        assertThat(authorityA).isNotEqualTo(authorityB);\n\n        authorityA.setName(AuthoritiesConstants.USER);\n        assertThat(authorityA).isNotEqualTo(authorityB);\n\n        authorityB.setName(AuthoritiesConstants.USER);\n        assertThat(authorityA).isEqualTo(authorityB);\n        assertThat(authorityA.hashCode()).isEqualTo(authorityB.hashCode());\n    }", "url": "https://raw.githubusercontent.com/gardle/gardle-web/master/src/test/java/com/gardle/web/rest/UserControllerIT.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 63197, "method_name": "getLeasingsForUser", "class_name": "UserControllerIT", "params": [], "throws": ["Exception"], "modifiers": ["public"], "return_type": "void", "snippet": "    public void getLeasingsForUser() throws Exception {\n        User user2 = createEntity(null);\n        user2.setLogin(\"user2\");\n        user2.setEmail(\"user2@gardle.ga\");\n\n        userRepository.save(user);\n        userRepository.save(user2);\n\n        GardenField gardenField = createGardenField();\n\n        Leasing leasing1 = new Leasing();\n        leasing1.setUser(user);\n        leasing1.setGardenField(gardenField);\n        leasing1.setFrom(Instant.now().plus(10, ChronoUnit.DAYS));\n        leasing1.setTo(Instant.now().plus(20, ChronoUnit.DAYS));\n        leasing1.setStatus(LeasingStatus.RESERVED);\n        leasing1.setPaymentSessionId(DEFAULT_PAYMENT_SESSION_ID);\n        leasingRepository.save(leasing1);\n\n        Leasing leasing2 = new Leasing();\n        leasing2.setUser(user2);\n        leasing2.setGardenField(gardenField);\n        leasing2.setFrom(Instant.now().plus(21, ChronoUnit.DAYS));\n        leasing2.setTo(Instant.now().plus(30, ChronoUnit.DAYS));\n        leasing2.setStatus(LeasingStatus.RESERVED);\n        leasing2.setPaymentSessionId(DEFAULT_PAYMENT_SESSION_ID);\n        leasingRepository.save(leasing2);\n\n        Leasing leasing3 = new Leasing();\n        leasing3.setUser(user);\n        leasing3.setGardenField(gardenField);\n        leasing3.setFrom(Instant.now().plus(31, ChronoUnit.DAYS));\n        leasing3.setTo(Instant.now().plus(40, ChronoUnit.DAYS));\n        leasing3.setStatus(LeasingStatus.RESERVED);\n        leasing3.setPaymentSessionId(DEFAULT_PAYMENT_SESSION_ID);\n        leasingRepository.save(leasing3);\n\n        assertThat(leasingRepository.findAll()).hasSize(3);\n\n        restUserMockMvc.perform(get(\"/api/v1/users/{userId}/leasings\", user.getId()))\n            .andDo(MockMvcResultHandlers.print())\n            .andExpect(status().isOk())\n            .andExpect(content().contentType(MediaType.APPLICATION_JSON_UTF8_VALUE))\n            .andExpect(jsonPath(\"$.content.length()\").value(is(2)))\n            .andExpect(jsonPath(\"$.content.[0].id\").value(is(leasing1.getId().intValue())))\n            .andExpect(jsonPath(\"$.content.[1].id\").value(is(leasing3.getId().intValue())));\n    }", "url": "https://raw.githubusercontent.com/gardle/gardle-web/master/src/test/java/com/gardle/web/rest/UserControllerIT.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 63198, "method_name": "getLeasingsForUserWithStatusFilter", "class_name": "UserControllerIT", "params": [], "throws": ["Exception"], "modifiers": ["public"], "return_type": "void", "snippet": "    public void getLeasingsForUserWithStatusFilter() throws Exception {\n        User user2 = createEntity(null);\n        user2.setLogin(\"user2\");\n        user2.setEmail(\"user2@gardle.ga\");\n\n        userRepository.save(user);\n\n        GardenField gardenField = createGardenField();\n\n        Leasing leasing1 = new Leasing();\n        leasing1.setUser(user);\n        leasing1.setGardenField(gardenField);\n        leasing1.setFrom(Instant.now().plus(10, ChronoUnit.DAYS));\n        leasing1.setTo(Instant.now().plus(20, ChronoUnit.DAYS));\n        leasing1.setStatus(LeasingStatus.OPEN);\n        leasing1.setPaymentSessionId(DEFAULT_PAYMENT_SESSION_ID);\n        leasingRepository.save(leasing1);\n\n        Leasing leasing2 = new Leasing();\n        leasing2.setUser(user);\n        leasing2.setGardenField(gardenField);\n        leasing2.setFrom(Instant.now().plus(21, ChronoUnit.DAYS));\n        leasing2.setTo(Instant.now().plus(30, ChronoUnit.DAYS));\n        leasing2.setStatus(LeasingStatus.RESERVED);\n        leasing2.setPaymentSessionId(DEFAULT_PAYMENT_SESSION_ID);\n        leasingRepository.save(leasing2);\n\n        Leasing leasing3 = new Leasing();\n        leasing3.setUser(user);\n        leasing3.setGardenField(gardenField);\n        leasing3.setFrom(Instant.now().plus(31, ChronoUnit.DAYS));\n        leasing3.setTo(Instant.now().plus(40, ChronoUnit.DAYS));\n        leasing3.setStatus(LeasingStatus.CANCELLED);\n        leasing3.setPaymentSessionId(DEFAULT_PAYMENT_SESSION_ID);\n        leasingRepository.save(leasing3);\n\n        assertThat(leasingRepository.findAll()).hasSize(3);\n\n        restUserMockMvc.perform(get(\"/api/v1/users/{userId}/leasings?leasingStatus=\" + LeasingStatus.OPEN.toString()\n            + \"&leasingStatus=\" + LeasingStatus.CANCELLED, user.getId()))\n            .andDo(MockMvcResultHandlers.print())\n            .andExpect(status().isOk())\n            .andExpect(content().contentType(MediaType.APPLICATION_JSON_UTF8_VALUE))\n            .andExpect(jsonPath(\"$.content.length()\").value(is(2)))\n            .andExpect(jsonPath(\"$.content.[0].id\").value(is(leasing1.getId().intValue())))\n            .andExpect(jsonPath(\"$.content.[1].id\").value(is(leasing3.getId().intValue())));\n    }", "url": "https://raw.githubusercontent.com/gardle/gardle-web/master/src/test/java/com/gardle/web/rest/UserControllerIT.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 63199, "method_name": "getLeasingsForUserWithStatusAndToFilter", "class_name": "UserControllerIT", "params": [], "throws": ["Exception"], "modifiers": ["public"], "return_type": "void", "snippet": "    public void getLeasingsForUserWithStatusAndToFilter() throws Exception {\n        userRepository.save(user);\n\n        GardenField gardenField = createGardenField();\n\n        Leasing leasing1 = new Leasing();\n        leasing1.setUser(user);\n        leasing1.setGardenField(gardenField);\n        leasing1.setFrom(Instant.now().plus(10, ChronoUnit.DAYS));\n        leasing1.setTo(Instant.now().plus(20, ChronoUnit.DAYS));\n        leasing1.setStatus(LeasingStatus.OPEN);\n        leasing1.setPaymentSessionId(DEFAULT_PAYMENT_SESSION_ID);\n        leasingRepository.save(leasing1);\n\n        Leasing leasing2 = new Leasing();\n        leasing2.setUser(user);\n        leasing2.setGardenField(gardenField);\n        leasing2.setFrom(Instant.now().plus(21, ChronoUnit.DAYS));\n        leasing2.setTo(Instant.now().plus(30, ChronoUnit.DAYS));\n        leasing2.setStatus(LeasingStatus.OPEN);\n        leasing2.setPaymentSessionId(DEFAULT_PAYMENT_SESSION_ID);\n        leasingRepository.save(leasing2);\n\n        Leasing leasing3 = new Leasing();\n        leasing3.setUser(user);\n        leasing3.setGardenField(gardenField);\n        leasing3.setFrom(Instant.now().plus(31, ChronoUnit.DAYS));\n        leasing3.setTo(Instant.now().plus(40, ChronoUnit.DAYS));\n        leasing3.setStatus(LeasingStatus.OPEN);\n        leasing3.setPaymentSessionId(DEFAULT_PAYMENT_SESSION_ID);\n        leasingRepository.save(leasing3);\n\n        assertThat(leasingRepository.findAll()).hasSize(3);\n\n        restUserMockMvc.perform(get(\"/api/v1/users/{userId}/leasings?leasingStatus=\" + LeasingStatus.OPEN.toString()\n            + \"&to=\" + leasing2.getTo().plus(1, ChronoUnit.SECONDS), user.getId()))\n            .andDo(MockMvcResultHandlers.print())\n            .andExpect(status().isOk())\n            .andExpect(content().contentType(MediaType.APPLICATION_JSON_UTF8_VALUE))\n            .andExpect(jsonPath(\"$.content.length()\").value(is(2)))\n            .andExpect(jsonPath(\"$.content.[0].id\").value(is(leasing1.getId().intValue())))\n            .andExpect(jsonPath(\"$.content.[1].id\").value(is(leasing2.getId().intValue())));\n    }", "url": "https://raw.githubusercontent.com/gardle/gardle-web/master/src/test/java/com/gardle/web/rest/UserControllerIT.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 63200, "method_name": "getLeasingsForUserWithStateFilter", "class_name": "UserControllerIT", "params": [], "throws": ["Exception"], "modifiers": ["public"], "return_type": "void", "snippet": "    public void getLeasingsForUserWithStateFilter() throws Exception {\n        User user2 = createEntity(null);\n        user2.setLogin(\"user2\");\n        user2.setEmail(\"user2@gardle.ga\");\n\n        userRepository.save(user);\n\n        GardenField gardenField = createGardenField();\n\n        Leasing leasing1 = new Leasing();\n        leasing1.setUser(user);\n        leasing1.setGardenField(gardenField);\n        leasing1.setFrom(Instant.now().plus(10, ChronoUnit.DAYS));\n        leasing1.setTo(Instant.now().plus(20, ChronoUnit.DAYS));\n        leasing1.setStatus(LeasingStatus.OPEN);\n        leasing1.setPaymentSessionId(DEFAULT_PAYMENT_SESSION_ID);\n        leasingRepository.save(leasing1);\n\n        Leasing leasing2 = new Leasing();\n        leasing2.setUser(user);\n        leasing2.setGardenField(gardenField);\n        leasing2.setFrom(Instant.now().plus(21, ChronoUnit.DAYS));\n        leasing2.setTo(Instant.now().plus(30, ChronoUnit.DAYS));\n        leasing2.setStatus(LeasingStatus.OPEN);\n        leasing2.setPaymentSessionId(DEFAULT_PAYMENT_SESSION_ID);\n        leasingRepository.save(leasing2);\n\n        Leasing leasing3 = new Leasing();\n        leasing3.setUser(user);\n        leasing3.setGardenField(gardenField);\n        leasing3.setFrom(Instant.now().minus(50, ChronoUnit.DAYS));\n        leasing3.setTo(Instant.now().minus(10, ChronoUnit.DAYS));\n        leasing3.setStatus(LeasingStatus.OPEN);\n        leasing3.setPaymentSessionId(DEFAULT_PAYMENT_SESSION_ID);\n        leasingRepository.save(leasing3);\n\n        assertThat(leasingRepository.findAll()).hasSize(3);\n\n        restUserMockMvc.perform(get(\"/api/v1/users/{userId}/leasings?state=\" + LeasingState.FUTURE.toString(), user.getId()))\n            .andDo(MockMvcResultHandlers.print())\n            .andExpect(status().isOk())\n            .andExpect(content().contentType(MediaType.APPLICATION_JSON_UTF8_VALUE))\n            .andExpect(jsonPath(\"$.content.length()\").value(is(2)))\n            .andExpect(jsonPath(\"$.content.[0].id\").value(is(leasing1.getId().intValue())))\n            .andExpect(jsonPath(\"$.content.[1].id\").value(is(leasing2.getId().intValue())));\n    }", "url": "https://raw.githubusercontent.com/gardle/gardle-web/master/src/test/java/com/gardle/web/rest/UserControllerIT.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 63201, "method_name": "createGardenField", "class_name": "UserControllerIT", "params": [], "throws": null, "modifiers": ["public"], "return_type": "GardenField", "snippet": "    public GardenField createGardenField() {\n        GardenField gardenField = new GardenField();\n        gardenField.setName(\"testGarden\");\n        gardenField.setSizeInM2(10.0);\n        gardenField.setPricePerM2(3.0);\n        gardenField.setLatitude(1.0);\n        gardenField.setLongitude(2.0);\n        gardenField.setCity(\"testCity\");\n        gardenField.setOwner(user);\n        return gardenFieldRepository.save(gardenField);\n    }", "url": "https://raw.githubusercontent.com/gardle/gardle-web/master/src/test/java/com/gardle/web/rest/UserControllerIT.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 63202, "method_name": "updateStripeAccountVerification", "class_name": "UserControllerIT", "params": [], "throws": ["Exception"], "modifiers": ["public"], "return_type": "void", "snippet": "    public void updateStripeAccountVerification() throws Exception {\n        String stripeVerificationKey = RandomUtil.generateStripeVerificationKey();\n        user.setStripeVerificationKey(stripeVerificationKey);\n        userRepository.saveAndFlush(user);\n\n        UpdateStripeAccountVerifiedUserDTO updateStripeAccountVerifiedUserDTO = new UpdateStripeAccountVerifiedUserDTO(true, stripeVerificationKey);\n\n        restUserMockMvc.perform(put(\"/api/v1/users/stripeVerification\")\n            .contentType(TestUtil.APPLICATION_JSON_UTF8)\n            .content(TestUtil.convertObjectToJsonBytes(updateStripeAccountVerifiedUserDTO)))\n            .andDo(MockMvcResultHandlers.print())\n            .andExpect(status().isOk())\n            .andExpect(content().contentType(MediaType.APPLICATION_JSON_UTF8_VALUE))\n            .andExpect(jsonPath(\"$.id\").value(is(Math.toIntExact(user.getId()))))\n            .andExpect(jsonPath(\"$.stripeAccountVerified\")\n                .value(is(updateStripeAccountVerifiedUserDTO.getVerified())));\n    }", "url": "https://raw.githubusercontent.com/gardle/gardle-web/master/src/test/java/com/gardle/web/rest/UserControllerIT.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 63203, "method_name": "updateStripeAccountVerificationUnauthorized", "class_name": "UserControllerIT", "params": [], "throws": ["Exception"], "modifiers": ["public"], "return_type": "void", "snippet": "    public void updateStripeAccountVerificationUnauthorized() throws Exception {\n        String stripeVerificationKey = RandomUtil.generateStripeVerificationKey();\n        user.setStripeVerificationKey(stripeVerificationKey);\n        userRepository.saveAndFlush(user);\n\n        UpdateStripeAccountVerifiedUserDTO updateStripeAccountVerifiedUserDTO = new UpdateStripeAccountVerifiedUserDTO(true, stripeVerificationKey);\n\n        restUserMockMvc.perform(put(\"/api/v1/users/stripeVerification\")\n            .contentType(TestUtil.APPLICATION_JSON_UTF8)\n            .content(TestUtil.convertObjectToJsonBytes(updateStripeAccountVerifiedUserDTO)))\n            .andDo(MockMvcResultHandlers.print())\n            .andExpect(status().isUnauthorized());\n    }", "url": "https://raw.githubusercontent.com/gardle/gardle-web/master/src/test/java/com/gardle/web/rest/UserControllerIT.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 63204, "method_name": "updateStripeAccountVerificationForbidden", "class_name": "UserControllerIT", "params": [], "throws": ["Exception"], "modifiers": ["public"], "return_type": "void", "snippet": "    public void updateStripeAccountVerificationForbidden() throws Exception {\n        String stripeVerificationKey = RandomUtil.generateStripeVerificationKey();\n        user.setStripeVerificationKey(stripeVerificationKey);\n        userRepository.saveAndFlush(user);\n\n        UpdateStripeAccountVerifiedUserDTO updateStripeAccountVerifiedUserDTO = new UpdateStripeAccountVerifiedUserDTO(true, \"someString\");\n\n        restUserMockMvc.perform(put(\"/api/v1/users/stripeVerification\")\n            .contentType(TestUtil.APPLICATION_JSON_UTF8)\n            .content(TestUtil.convertObjectToJsonBytes(updateStripeAccountVerifiedUserDTO)))\n            .andDo(MockMvcResultHandlers.print())\n            .andExpect(status().isForbidden());\n    }", "url": "https://raw.githubusercontent.com/gardle/gardle-web/master/src/test/java/com/gardle/web/rest/UserControllerIT.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 63205, "method_name": "serialize", "class_name": "PackerImplTest", "params": [], "throws": ["Exception"], "modifiers": ["public"], "return_type": "void", "snippet": "    public void serialize() throws Exception {\n        // 02 00 00 0B 00 01 00 02 01 03 00 04 00 01 00 03 0E\n        assertArrayEquals(new byte[]{\n                0x02, 0x00, 0x00, 0x0B, 0x00, 0x01, 0x00, 0x02, 0x01, 0x03, 0x00, 0x04, 0x00, 0x01, 0x00, 0x03, 0x0E\n        }, new PackerImpl(null).serialize(new Packet.Builder(0x0103).build()));\n\n        assertArrayEquals(new byte[]{\n                0x02, 0x00, 0x000, 0x10, 0x00, 0x01, 0x00, 0x02, 0x02, 0x08, 0x00, 0x04, 0x00, 0x01, 0x00, 0x02, 0x0F, 0x00, 0x01, 0x01, 0x03, 0x10\n        }, new PackerImpl(null).serialize(new Packet.Builder(0x0208).addBytePayload(0x020F, 0x01).build()));\n    }", "url": "https://raw.githubusercontent.com/CoboVault/cobo-vault-cold/master/encryption-core/src/test/java/com/cobo/cold/encryptioncore/job/PackerImplTest.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 63206, "method_name": "serializeBody", "class_name": "PackerImplTest", "params": [], "throws": ["IOException"], "modifiers": ["public"], "return_type": "void", "snippet": "    public void serializeBody() throws IOException {\n        assertArrayEquals(new byte[]{\n                0x00, 0x01, 0x00, 0x02, 0x01, 0x03, 0x00, 0x04, 0x00, 0x01, 0x00\n        }, new PackerImpl(null).serializeBody(new Packet.Builder(0x0103).build()));\n\n        // 02 00 00 10 00 01 00 02 02 08 00 04 00 01 00 02 0F 00 01 01 03 10\n        assertArrayEquals(new byte[]{\n                0x00, 0x01, 0x00, 0x02, 0x02, 0x08, 0x00, 0x04, 0x00, 0x01, 0x01, 0x02, 0x0F, 0x00, 0x01, 0x01\n        }, new PackerImpl(mCipher).serializeBody(new Packet.Builder(0x0208).addBytePayload(0x020F, 0x01).build()));\n    }", "url": "https://raw.githubusercontent.com/CoboVault/cobo-vault-cold/master/encryption-core/src/test/java/com/cobo/cold/encryptioncore/job/PackerImplTest.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 63207, "method_name": "serializePayloads", "class_name": "PackerImplTest", "params": [], "throws": ["IOException"], "modifiers": ["public"], "return_type": "void", "snippet": "    public void serializePayloads() throws IOException {\n        final SparseArrayCompat<Payload> payloads = new SparseArrayCompat<>();\n        payloads.put(0x01, new Payload(new byte[]{0x02, 0x03}));\n\n        assertArrayEquals(new byte[]{\n                0x00, 0x01, 0x00, 0x02, 0x02, 0x03\n        }, new PackerImpl(null).serializePayloads(payloads));\n    }", "url": "https://raw.githubusercontent.com/CoboVault/cobo-vault-cold/master/encryption-core/src/test/java/com/cobo/cold/encryptioncore/job/PackerImplTest.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 63208, "method_name": "serializePayloads2", "class_name": "PackerImplTest", "params": [], "throws": ["IOException"], "modifiers": ["public"], "return_type": "void", "snippet": "    public void serializePayloads2() throws IOException {\n        final SparseArrayCompat<Payload> payloads = new SparseArrayCompat<>();\n        payloads.put(0x01, new Payload(new byte[]{0x02, 0x03}));\n        payloads.put(0x02, null);\n\n        assertArrayEquals(new byte[]{\n                0x00, 0x01, 0x00, 0x02, 0x02, 0x03\n        }, new PackerImpl(null).serializePayloads(payloads));\n    }", "url": "https://raw.githubusercontent.com/CoboVault/cobo-vault-cold/master/encryption-core/src/test/java/com/cobo/cold/encryptioncore/job/PackerImplTest.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 63209, "method_name": "serializeTLV", "class_name": "PackerImplTest", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void serializeTLV() {\n        assertArrayEquals(new byte[]{\n                0x00, 0x00, 0x00, 0x01, 0x00\n        }, new PackerImpl(null).serializeTLV(0x00, new byte[]{0x00}));\n    }", "url": "https://raw.githubusercontent.com/CoboVault/cobo-vault-cold/master/encryption-core/src/test/java/com/cobo/cold/encryptioncore/job/PackerImplTest.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 63210, "method_name": "serializeTLV2", "class_name": "PackerImplTest", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void serializeTLV2() {\n        assertArrayEquals(new byte[]{\n                0x00, 0x00, 0x00, 0x00\n        }, new PackerImpl(null).serializeTLV(0x00, new byte[0]));\n    }", "url": "https://raw.githubusercontent.com/CoboVault/cobo-vault-cold/master/encryption-core/src/test/java/com/cobo/cold/encryptioncore/job/PackerImplTest.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 63211, "method_name": "calculateLRC", "class_name": "PackerImplTest", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void calculateLRC() {\n        assertEquals(63, new PackerImpl(null).calculateLRC(new byte[]{\n                (byte) 0xFF, (byte) 0xEE, (byte) 0xCC, 0x00, (byte) 0xFF,\n                0x11, 0x0C\n        }));\n\n        assertEquals(0x18, new PackerImpl(null).calculateLRC(new byte[]{\n                0x02, 0x00, 0x00, 0x12, 0x00, 0x01, 0x00, 0x02, 0x08, 0x01, 0x08,\n                0x01, 0x00, 0x08, 0x01, 0x23, 0x45, 0x67, (byte) 0x89, (byte) 0xAB,\n                (byte) 0xCD, (byte) 0xEF, 0x03\n        }));\n\n        assertEquals(0x00, new PackerImpl(null).calculateLRC(new byte[0]));\n    }", "url": "https://raw.githubusercontent.com/CoboVault/cobo-vault-cold/master/encryption-core/src/test/java/com/cobo/cold/encryptioncore/job/PackerImplTest.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 63212, "method_name": "deserialize", "class_name": "PackerImplTest", "params": [], "throws": ["Exception"], "modifiers": ["public"], "return_type": "void", "snippet": "    public void deserialize() throws Exception {\n        final Packet packet = new PackerImpl(null).deserialize(new byte[]{\n                0x02, 0x00, 0x00, 0x0c, 0x00, 0x01, 0x00, 0x02, 0x06, 0x01,\n                0x00, 0x02, 0x00, 0x02, 0x00, 0x00, 0x03, 0x09\n        });\n\n        assertEquals(0x0601, packet.getId());\n        assertEquals(2, packet.getPayloads().size());\n        assertNotNull(packet.getPayload(0x0001));\n        assertNotNull(packet.getPayload(0x0002));\n        assertEquals(0x0601, packet.getPayload(0x0001).toInt());\n        assertEquals(0x0000, packet.getPayload(0x0002).toInt());\n        assertNull(packet.getPayload(0x0004));\n    }", "url": "https://raw.githubusercontent.com/CoboVault/cobo-vault-cold/master/encryption-core/src/test/java/com/cobo/cold/encryptioncore/job/PackerImplTest.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 63213, "method_name": "deserializeBody", "class_name": "PackerImplTest", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void deserializeBody() {\n        final Packet packet = new PackerImpl(null).deserializeBody(new byte[]{\n                0x00, 0x01, 0x00, 0x02, 0x01, 0x3, 0x00, 0x02, 0x00, 0x02, 0x00, 0x00\n        }).build();\n\n        assertEquals(0x0103, packet.getId());\n        assertEquals(2, packet.getPayloads().size());\n        assertNotNull(packet.getPayload(0x01));\n        assertNotNull(packet.getPayload(0x02));\n        assertEquals(0x0103, packet.getPayload(0x0001).toInt());\n        assertEquals(0x0000, packet.getPayload(0x0002).toInt());\n        assertNull(packet.getPayload(0x03));\n    }", "url": "https://raw.githubusercontent.com/CoboVault/cobo-vault-cold/master/encryption-core/src/test/java/com/cobo/cold/encryptioncore/job/PackerImplTest.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 63214, "method_name": "deserializeBody2", "class_name": "PackerImplTest", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void deserializeBody2() {\n        new PackerImpl(null).deserializeBody(new byte[]{\n                0x00, 0x02, 0x00, 0x02, 0x00, 0x00\n        });\n    }", "url": "https://raw.githubusercontent.com/CoboVault/cobo-vault-cold/master/encryption-core/src/test/java/com/cobo/cold/encryptioncore/job/PackerImplTest.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 63215, "method_name": "deserializePayloads", "class_name": "PackerImplTest", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void deserializePayloads() {\n        final SparseArrayCompat<Payload> payloads = new PackerImpl(null).deserializePayloads(new byte[]{\n                0x00, 0x01, 0x00, 0x01, 0x0F\n        });\n\n        assertNotNull(payloads);\n        assertEquals(1, payloads.size());\n        assertNotNull(payloads.get(0x01));\n        assertEquals(payloads.get(0x01), new Payload(new byte[]{0x0F}));\n    }", "url": "https://raw.githubusercontent.com/CoboVault/cobo-vault-cold/master/encryption-core/src/test/java/com/cobo/cold/encryptioncore/job/PackerImplTest.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 63216, "method_name": "deserializePayloads2", "class_name": "PackerImplTest", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void deserializePayloads2() {\n        new PackerImpl(null).deserializePayloads(new byte[]{\n                0x00, 0x01, 0x00, 0x01, 0x0F, 0x00\n        });\n    }", "url": "https://raw.githubusercontent.com/CoboVault/cobo-vault-cold/master/encryption-core/src/test/java/com/cobo/cold/encryptioncore/job/PackerImplTest.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 63217, "method_name": "checkSerializedData", "class_name": "PackerImplTest", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void checkSerializedData() {\n        new PackerImpl(null).checkSerializedData(new byte[0]); // illegal size\n    }", "url": "https://raw.githubusercontent.com/CoboVault/cobo-vault-cold/master/encryption-core/src/test/java/com/cobo/cold/encryptioncore/job/PackerImplTest.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 63218, "method_name": "checkSerializedData2", "class_name": "PackerImplTest", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void checkSerializedData2() {\n        new PackerImpl(null).checkSerializedData(new byte[]{0x01/*illegal STX*/, 0x00, 0x00, 0x00, 0x03, 0x01});\n    }", "url": "https://raw.githubusercontent.com/CoboVault/cobo-vault-cold/master/encryption-core/src/test/java/com/cobo/cold/encryptioncore/job/PackerImplTest.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 63219, "method_name": "checkSerializedData3", "class_name": "PackerImplTest", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void checkSerializedData3() {\n        new PackerImpl(null).checkSerializedData(new byte[]{0x02, 0x02/*illegal encryption status*/, 0x00, 0x00, 0x03, 0x01});\n    }", "url": "https://raw.githubusercontent.com/CoboVault/cobo-vault-cold/master/encryption-core/src/test/java/com/cobo/cold/encryptioncore/job/PackerImplTest.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 63220, "method_name": "checkSerializedData4", "class_name": "PackerImplTest", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void checkSerializedData4() {\n        new PackerImpl(null).checkSerializedData(new byte[]{0x02, 0x00, 0x00, 0x00, 0x04/*illegal ETX*/, 0x01});\n    }", "url": "https://raw.githubusercontent.com/CoboVault/cobo-vault-cold/master/encryption-core/src/test/java/com/cobo/cold/encryptioncore/job/PackerImplTest.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 63221, "method_name": "checkSerializedData5", "class_name": "PackerImplTest", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void checkSerializedData5() {\n        new PackerImpl(null).checkSerializedData(new byte[]{0x02, 0x00, 0x00, 0x00, 0x03, (byte) 0xFF/*illegal LRC*/});\n    }", "url": "https://raw.githubusercontent.com/CoboVault/cobo-vault-cold/master/encryption-core/src/test/java/com/cobo/cold/encryptioncore/job/PackerImplTest.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 63222, "method_name": "checkSerializedData6", "class_name": "PackerImplTest", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void checkSerializedData6() {\n        new PackerImpl(null).checkSerializedData(new byte[]{0x02, 0x00, 0x00, 0x00, 0x03, 0x01});\n    }", "url": "https://raw.githubusercontent.com/CoboVault/cobo-vault-cold/master/encryption-core/src/test/java/com/cobo/cold/encryptioncore/job/PackerImplTest.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 63223, "method_name": "notifyDataSetChanged", "class_name": "CommonNavigator", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void notifyDataSetChanged() {\n        if (mAdapter != null) {\n            mAdapter.notifyDataSetChanged();\n        }\n    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/view/magicindicator/buildins/commonnavigator/CommonNavigator.java", "stars": "1", "class_props": {"extends": "FrameLayout", "implements": ["IPagerNavigator", "NavigatorHelper"], "modifiers": ["public"]}}, {"id": 63224, "method_name": "isAdjustMode", "class_name": "CommonNavigator", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean isAdjustMode() {\n        return mAdjustMode;\n    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/view/magicindicator/buildins/commonnavigator/CommonNavigator.java", "stars": "1", "class_props": {"extends": "FrameLayout", "implements": ["IPagerNavigator", "NavigatorHelper"], "modifiers": ["public"]}}, {"id": 63225, "method_name": "setAdjustMode", "class_name": "CommonNavigator", "params": ["boolean"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setAdjustMode(boolean is) {\n        mAdjustMode = is;\n    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/view/magicindicator/buildins/commonnavigator/CommonNavigator.java", "stars": "1", "class_props": {"extends": "FrameLayout", "implements": ["IPagerNavigator", "NavigatorHelper"], "modifiers": ["public"]}}, {"id": 63226, "method_name": "getAdapter", "class_name": "CommonNavigator", "params": [], "throws": null, "modifiers": ["public"], "return_type": "CommonNavigatorAdapter", "snippet": "    public CommonNavigatorAdapter getAdapter() {\n        return mAdapter;\n    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/view/magicindicator/buildins/commonnavigator/CommonNavigator.java", "stars": "1", "class_props": {"extends": "FrameLayout", "implements": ["IPagerNavigator", "NavigatorHelper"], "modifiers": ["public"]}}, {"id": 63227, "method_name": "setAdapter", "class_name": "CommonNavigator", "params": ["CommonNavigatorAdapter"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setAdapter(CommonNavigatorAdapter adapter) {\n        if (mAdapter == adapter) {\n            return;\n        }\n        if (mAdapter != null) {\n            mAdapter.unregisterDataSetObserver(mObserver);\n        }\n        mAdapter = adapter;\n        if (mAdapter != null) {\n            mAdapter.registerDataSetObserver(mObserver);\n            mNavigatorHelper.setTotalCount(mAdapter.getCount());\n            if (mTitleContainer != null) {  // adapter\u6539\u53d8\u65f6\uff0c\u5e94\u8be5\u91cd\u65b0init\uff0c\u4f46\u662f\u7b2c\u4e00\u6b21\u8bbe\u7f6eadapter\u4e0d\u7528\uff0conAttachToMagicIndicator\u4e2d\u6709init\n                mAdapter.notifyDataSetChanged();\n            }\n        } else {\n            mNavigatorHelper.setTotalCount(0);\n            init();\n        }\n    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/view/magicindicator/buildins/commonnavigator/CommonNavigator.java", "stars": "1", "class_props": {"extends": "FrameLayout", "implements": ["IPagerNavigator", "NavigatorHelper"], "modifiers": ["public"]}}, {"id": 63228, "method_name": "init", "class_name": "CommonNavigator", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void init() {\n        removeAllViews();\n\n        View root;\n        if (mAdjustMode) {\n            root = LayoutInflater.from(getContext()).inflate(R.layout.pager_navigator_layout_no_scroll, this);\n        } else {\n            root = LayoutInflater.from(getContext()).inflate(R.layout.pager_navigator_layout, this);\n        }\n\n        mScrollView = (HorizontalScrollView) root.findViewById(R.id.scroll_view);   // mAdjustMode\u4e3atrue\u65f6\uff0cmScrollView\u4e3anull\n\n        mTitleContainer = (LinearLayout) root.findViewById(R.id.title_container);\n        mTitleContainer.setPadding(mLeftPadding, 0, mRightPadding, 0);\n\n        mIndicatorContainer = (LinearLayout) root.findViewById(R.id.indicator_container);\n        if (mIndicatorOnTop) {\n            mIndicatorContainer.getParent().bringChildToFront(mIndicatorContainer);\n        }\n\n        initTitlesAndIndicator();\n    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/view/magicindicator/buildins/commonnavigator/CommonNavigator.java", "stars": "1", "class_props": {"extends": "FrameLayout", "implements": ["IPagerNavigator", "NavigatorHelper"], "modifiers": ["public"]}}, {"id": 63229, "method_name": "initTitlesAndIndicator", "class_name": "CommonNavigator", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void initTitlesAndIndicator() {\n        for (int i = 0, j = mNavigatorHelper.getTotalCount(); i < j; i++) {\n            IPagerTitleView v = mAdapter.getTitleView(getContext(), i);\n            if (v instanceof View) {\n                View view = (View) v;\n                LinearLayout.LayoutParams lp;\n                if (mAdjustMode) {\n                    lp = new LinearLayout.LayoutParams(ViewGroup.LayoutParams.WRAP_CONTENT, ViewGroup.LayoutParams.MATCH_PARENT,1);\n                    lp.weight = mAdapter.getTitleWeight(getContext(), i);\n                } else {\n                    lp = new LinearLayout.LayoutParams(LayoutParams.WRAP_CONTENT, LayoutParams.MATCH_PARENT);\n                }\n                mTitleContainer.addView(view, lp);\n            }\n        }\n        if (mAdapter != null) {\n            mIndicator = mAdapter.getIndicator(getContext());\n            if (mIndicator instanceof View) {\n                LayoutParams lp = new LayoutParams(ViewGroup.LayoutParams.MATCH_PARENT, ViewGroup.LayoutParams.MATCH_PARENT);\n                mIndicatorContainer.addView((View) mIndicator, lp);\n            }\n        }\n    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/view/magicindicator/buildins/commonnavigator/CommonNavigator.java", "stars": "1", "class_props": {"extends": "FrameLayout", "implements": ["IPagerNavigator", "NavigatorHelper"], "modifiers": ["public"]}}, {"id": 63230, "method_name": "onLayout", "class_name": "CommonNavigator", "params": ["boolean", "int", "int", "int", "int"], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void onLayout(boolean changed, int left, int top, int right, int bottom) {\n        super.onLayout(changed, left, top, right, bottom);\n        if (mAdapter != null) {\n            preparePositionData();\n            if (mIndicator != null) {\n                mIndicator.onPositionDataProvide(mPositionDataList);\n            }\n            if (mReselectWhenLayout && mNavigatorHelper.getScrollState() == ScrollState.SCROLL_STATE_IDLE) {\n                onPageSelected(mNavigatorHelper.getCurrentIndex());\n                onPageScrolled(mNavigatorHelper.getCurrentIndex(), 0.0f, 0);\n            }\n        }\n    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/view/magicindicator/buildins/commonnavigator/CommonNavigator.java", "stars": "1", "class_props": {"extends": "FrameLayout", "implements": ["IPagerNavigator", "NavigatorHelper"], "modifiers": ["public"]}}, {"id": 63231, "method_name": "preparePositionData", "class_name": "CommonNavigator", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void preparePositionData() {\n        mPositionDataList.clear();\n        for (int i = 0, j = mNavigatorHelper.getTotalCount(); i < j; i++) {\n            PositionData data = new PositionData();\n            View v = mTitleContainer.getChildAt(i);\n            if (v != null) {\n                data.mLeft = v.getLeft();\n                data.mTop = v.getTop();\n                data.mRight = v.getRight();\n                data.mBottom = v.getBottom();\n                if (v instanceof IMeasurablePagerTitleView) {\n                    IMeasurablePagerTitleView view = (IMeasurablePagerTitleView) v;\n                    data.mContentLeft = view.getContentLeft();\n                    data.mContentTop = view.getContentTop();\n                    data.mContentRight = view.getContentRight();\n                    data.mContentBottom = view.getContentBottom();\n                } else {\n                    data.mContentLeft = data.mLeft;\n                    data.mContentTop = data.mTop;\n                    data.mContentRight = data.mRight;\n                    data.mContentBottom = data.mBottom;\n                }\n            }\n            mPositionDataList.add(data);\n        }\n    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/view/magicindicator/buildins/commonnavigator/CommonNavigator.java", "stars": "1", "class_props": {"extends": "FrameLayout", "implements": ["IPagerNavigator", "NavigatorHelper"], "modifiers": ["public"]}}, {"id": 63232, "method_name": "onPageScrolled", "class_name": "CommonNavigator", "params": ["int", "float", "int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onPageScrolled(int position, float positionOffset, int positionOffsetPixels) {\n        if (mAdapter != null) {\n\n            mNavigatorHelper.onPageScrolled(position, positionOffset, positionOffsetPixels);\n            if (mIndicator != null) {\n                mIndicator.onPageScrolled(position, positionOffset, positionOffsetPixels);\n            }\n\n            // \u624b\u6307\u8ddf\u968f\u6eda\u52a8\n            if (mScrollView != null && mPositionDataList.size() > 0 && position >= 0 && position < mPositionDataList.size()) {\n                if (mFollowTouch) {\n                    int currentPosition = Math.min(mPositionDataList.size() - 1, position);\n                    int nextPosition = Math.min(mPositionDataList.size() - 1, position + 1);\n                    PositionData current = mPositionDataList.get(currentPosition);\n                    PositionData next = mPositionDataList.get(nextPosition);\n                    float scrollTo = current.horizontalCenter() - mScrollView.getWidth() * mScrollPivotX;\n                    float nextScrollTo = next.horizontalCenter() - mScrollView.getWidth() * mScrollPivotX;\n                    mScrollView.scrollTo((int) (scrollTo + (nextScrollTo - scrollTo) * positionOffset), 0);\n                } else if (!mEnablePivotScroll) {\n                    // TODO \u5b9e\u73b0\u5f85\u9009\u4e2d\u9879\u5b8c\u5168\u663e\u793a\u51fa\u6765\n                }\n            }\n        }\n    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/view/magicindicator/buildins/commonnavigator/CommonNavigator.java", "stars": "1", "class_props": {"extends": "FrameLayout", "implements": ["IPagerNavigator", "NavigatorHelper"], "modifiers": ["public"]}}, {"id": 63233, "method_name": "getScrollPivotX", "class_name": "CommonNavigator", "params": [], "throws": null, "modifiers": ["public"], "return_type": "float", "snippet": "    public float getScrollPivotX() {\n        return mScrollPivotX;\n    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/view/magicindicator/buildins/commonnavigator/CommonNavigator.java", "stars": "1", "class_props": {"extends": "FrameLayout", "implements": ["IPagerNavigator", "NavigatorHelper"], "modifiers": ["public"]}}, {"id": 63234, "method_name": "setScrollPivotX", "class_name": "CommonNavigator", "params": ["float"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setScrollPivotX(float scrollPivotX) {\n        mScrollPivotX = scrollPivotX;\n    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/view/magicindicator/buildins/commonnavigator/CommonNavigator.java", "stars": "1", "class_props": {"extends": "FrameLayout", "implements": ["IPagerNavigator", "NavigatorHelper"], "modifiers": ["public"]}}, {"id": 63235, "method_name": "onPageSelected", "class_name": "CommonNavigator", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onPageSelected(int position) {\n        if (mAdapter != null) {\n            mNavigatorHelper.onPageSelected(position);\n            if (mIndicator != null) {\n                mIndicator.onPageSelected(position);\n            }\n        }\n    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/view/magicindicator/buildins/commonnavigator/CommonNavigator.java", "stars": "1", "class_props": {"extends": "FrameLayout", "implements": ["IPagerNavigator", "NavigatorHelper"], "modifiers": ["public"]}}, {"id": 63236, "method_name": "onPageScrollStateChanged", "class_name": "CommonNavigator", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onPageScrollStateChanged(int state) {\n        if (mAdapter != null) {\n            mNavigatorHelper.onPageScrollStateChanged(state);\n            if (mIndicator != null) {\n                mIndicator.onPageScrollStateChanged(state);\n            }\n        }\n    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/view/magicindicator/buildins/commonnavigator/CommonNavigator.java", "stars": "1", "class_props": {"extends": "FrameLayout", "implements": ["IPagerNavigator", "NavigatorHelper"], "modifiers": ["public"]}}, {"id": 63237, "method_name": "onAttachToMagicIndicator", "class_name": "CommonNavigator", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onAttachToMagicIndicator() {\n        init(); // \u5c06\u521d\u59cb\u5316\u5ef6\u8fdf\u5230\u8fd9\u91cc\n    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/view/magicindicator/buildins/commonnavigator/CommonNavigator.java", "stars": "1", "class_props": {"extends": "FrameLayout", "implements": ["IPagerNavigator", "NavigatorHelper"], "modifiers": ["public"]}}, {"id": 63238, "method_name": "onDetachFromMagicIndicator", "class_name": "CommonNavigator", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onDetachFromMagicIndicator() {\n    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/view/magicindicator/buildins/commonnavigator/CommonNavigator.java", "stars": "1", "class_props": {"extends": "FrameLayout", "implements": ["IPagerNavigator", "NavigatorHelper"], "modifiers": ["public"]}}, {"id": 63239, "method_name": "getPagerIndicator", "class_name": "CommonNavigator", "params": [], "throws": null, "modifiers": ["public"], "return_type": "IPagerIndicator", "snippet": "    public IPagerIndicator getPagerIndicator() {\n        return mIndicator;\n    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/view/magicindicator/buildins/commonnavigator/CommonNavigator.java", "stars": "1", "class_props": {"extends": "FrameLayout", "implements": ["IPagerNavigator", "NavigatorHelper"], "modifiers": ["public"]}}, {"id": 63240, "method_name": "isEnablePivotScroll", "class_name": "CommonNavigator", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean isEnablePivotScroll() {\n        return mEnablePivotScroll;\n    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/view/magicindicator/buildins/commonnavigator/CommonNavigator.java", "stars": "1", "class_props": {"extends": "FrameLayout", "implements": ["IPagerNavigator", "NavigatorHelper"], "modifiers": ["public"]}}, {"id": 63241, "method_name": "setEnablePivotScroll", "class_name": "CommonNavigator", "params": ["boolean"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setEnablePivotScroll(boolean is) {\n        mEnablePivotScroll = is;\n    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/view/magicindicator/buildins/commonnavigator/CommonNavigator.java", "stars": "1", "class_props": {"extends": "FrameLayout", "implements": ["IPagerNavigator", "NavigatorHelper"], "modifiers": ["public"]}}, {"id": 63242, "method_name": "onEnter", "class_name": "CommonNavigator", "params": ["int", "int", "float", "boolean"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onEnter(int index, int totalCount, float enterPercent, boolean leftToRight) {\n        if (mTitleContainer == null) {\n            return;\n        }\n        View v = mTitleContainer.getChildAt(index);\n        if (v instanceof IPagerTitleView) {\n            ((IPagerTitleView) v).onEnter(index, totalCount, enterPercent, leftToRight);\n        }\n    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/view/magicindicator/buildins/commonnavigator/CommonNavigator.java", "stars": "1", "class_props": {"extends": "FrameLayout", "implements": ["IPagerNavigator", "NavigatorHelper"], "modifiers": ["public"]}}, {"id": 63243, "method_name": "onLeave", "class_name": "CommonNavigator", "params": ["int", "int", "float", "boolean"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onLeave(int index, int totalCount, float leavePercent, boolean leftToRight) {\n        if (mTitleContainer == null) {\n            return;\n        }\n        View v = mTitleContainer.getChildAt(index);\n        if (v instanceof IPagerTitleView) {\n            ((IPagerTitleView) v).onLeave(index, totalCount, leavePercent, leftToRight);\n        }\n    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/view/magicindicator/buildins/commonnavigator/CommonNavigator.java", "stars": "1", "class_props": {"extends": "FrameLayout", "implements": ["IPagerNavigator", "NavigatorHelper"], "modifiers": ["public"]}}, {"id": 63244, "method_name": "isSmoothScroll", "class_name": "CommonNavigator", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean isSmoothScroll() {\n        return mSmoothScroll;\n    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/view/magicindicator/buildins/commonnavigator/CommonNavigator.java", "stars": "1", "class_props": {"extends": "FrameLayout", "implements": ["IPagerNavigator", "NavigatorHelper"], "modifiers": ["public"]}}, {"id": 63245, "method_name": "setSmoothScroll", "class_name": "CommonNavigator", "params": ["boolean"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setSmoothScroll(boolean smoothScroll) {\n        mSmoothScroll = smoothScroll;\n    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/view/magicindicator/buildins/commonnavigator/CommonNavigator.java", "stars": "1", "class_props": {"extends": "FrameLayout", "implements": ["IPagerNavigator", "NavigatorHelper"], "modifiers": ["public"]}}, {"id": 63246, "method_name": "isFollowTouch", "class_name": "CommonNavigator", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean isFollowTouch() {\n        return mFollowTouch;\n    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/view/magicindicator/buildins/commonnavigator/CommonNavigator.java", "stars": "1", "class_props": {"extends": "FrameLayout", "implements": ["IPagerNavigator", "NavigatorHelper"], "modifiers": ["public"]}}, {"id": 63247, "method_name": "setFollowTouch", "class_name": "CommonNavigator", "params": ["boolean"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setFollowTouch(boolean followTouch) {\n        mFollowTouch = followTouch;\n    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/view/magicindicator/buildins/commonnavigator/CommonNavigator.java", "stars": "1", "class_props": {"extends": "FrameLayout", "implements": ["IPagerNavigator", "NavigatorHelper"], "modifiers": ["public"]}}, {"id": 63248, "method_name": "isSkimOver", "class_name": "CommonNavigator", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean isSkimOver() {\n        return mSkimOver;\n    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/view/magicindicator/buildins/commonnavigator/CommonNavigator.java", "stars": "1", "class_props": {"extends": "FrameLayout", "implements": ["IPagerNavigator", "NavigatorHelper"], "modifiers": ["public"]}}, {"id": 63249, "method_name": "setSkimOver", "class_name": "CommonNavigator", "params": ["boolean"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setSkimOver(boolean skimOver) {\n        mSkimOver = skimOver;\n        mNavigatorHelper.setSkimOver(skimOver);\n    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/view/magicindicator/buildins/commonnavigator/CommonNavigator.java", "stars": "1", "class_props": {"extends": "FrameLayout", "implements": ["IPagerNavigator", "NavigatorHelper"], "modifiers": ["public"]}}, {"id": 63250, "method_name": "onSelected", "class_name": "CommonNavigator", "params": ["int", "int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onSelected(int index, int totalCount) {\n        if (mTitleContainer == null) {\n            return;\n        }\n        View v = mTitleContainer.getChildAt(index);\n        if (v instanceof IPagerTitleView) {\n            ((IPagerTitleView) v).onSelected(index, totalCount);\n        }\n        if (!mAdjustMode && !mFollowTouch && mScrollView != null && mPositionDataList.size() > 0) {\n            int currentIndex = Math.min(mPositionDataList.size() - 1, index);\n            PositionData current = mPositionDataList.get(currentIndex);\n            if (mEnablePivotScroll) {\n                float scrollTo = current.horizontalCenter() - mScrollView.getWidth() * mScrollPivotX;\n                if (mSmoothScroll) {\n                    mScrollView.smoothScrollTo((int) (scrollTo), 0);\n                } else {\n                    mScrollView.scrollTo((int) (scrollTo), 0);\n                }\n            } else {\n                // \u5982\u679c\u5f53\u524d\u9879\u88ab\u90e8\u5206\u906e\u6321\uff0c\u5219\u6eda\u52a8\u663e\u793a\u5b8c\u5168\n                if (mScrollView.getScrollX() > current.mLeft) {\n                    if (mSmoothScroll) {\n                        mScrollView.smoothScrollTo(current.mLeft, 0);\n                    } else {\n                        mScrollView.scrollTo(current.mLeft, 0);\n                    }\n                } else if (mScrollView.getScrollX() + getWidth() < current.mRight) {\n                    if (mSmoothScroll) {\n                        mScrollView.smoothScrollTo(current.mRight - getWidth(), 0);\n                    } else {\n                        mScrollView.scrollTo(current.mRight - getWidth(), 0);\n                    }\n                }\n            }\n        }\n    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/view/magicindicator/buildins/commonnavigator/CommonNavigator.java", "stars": "1", "class_props": {"extends": "FrameLayout", "implements": ["IPagerNavigator", "NavigatorHelper"], "modifiers": ["public"]}}, {"id": 63251, "method_name": "onDeselected", "class_name": "CommonNavigator", "params": ["int", "int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onDeselected(int index, int totalCount) {\n        if (mTitleContainer == null) {\n            return;\n        }\n        View v = mTitleContainer.getChildAt(index);\n        if (v instanceof IPagerTitleView) {\n            ((IPagerTitleView) v).onDeselected(index, totalCount);\n        }\n    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/view/magicindicator/buildins/commonnavigator/CommonNavigator.java", "stars": "1", "class_props": {"extends": "FrameLayout", "implements": ["IPagerNavigator", "NavigatorHelper"], "modifiers": ["public"]}}, {"id": 63252, "method_name": "getPagerTitleView", "class_name": "CommonNavigator", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "IPagerTitleView", "snippet": "    public IPagerTitleView getPagerTitleView(int index) {\n        if (mTitleContainer == null) {\n            return null;\n        }\n        return (IPagerTitleView) mTitleContainer.getChildAt(index);\n    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/view/magicindicator/buildins/commonnavigator/CommonNavigator.java", "stars": "1", "class_props": {"extends": "FrameLayout", "implements": ["IPagerNavigator", "NavigatorHelper"], "modifiers": ["public"]}}, {"id": 63253, "method_name": "getTitleContainer", "class_name": "CommonNavigator", "params": [], "throws": null, "modifiers": ["public"], "return_type": "LinearLayout", "snippet": "    public LinearLayout getTitleContainer() {\n        return mTitleContainer;\n    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/view/magicindicator/buildins/commonnavigator/CommonNavigator.java", "stars": "1", "class_props": {"extends": "FrameLayout", "implements": ["IPagerNavigator", "NavigatorHelper"], "modifiers": ["public"]}}, {"id": 63254, "method_name": "getRightPadding", "class_name": "CommonNavigator", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getRightPadding() {\n        return mRightPadding;\n    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/view/magicindicator/buildins/commonnavigator/CommonNavigator.java", "stars": "1", "class_props": {"extends": "FrameLayout", "implements": ["IPagerNavigator", "NavigatorHelper"], "modifiers": ["public"]}}, {"id": 63255, "method_name": "setRightPadding", "class_name": "CommonNavigator", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setRightPadding(int rightPadding) {\n        mRightPadding = rightPadding;\n    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/view/magicindicator/buildins/commonnavigator/CommonNavigator.java", "stars": "1", "class_props": {"extends": "FrameLayout", "implements": ["IPagerNavigator", "NavigatorHelper"], "modifiers": ["public"]}}, {"id": 63256, "method_name": "getLeftPadding", "class_name": "CommonNavigator", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getLeftPadding() {\n        return mLeftPadding;\n    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/view/magicindicator/buildins/commonnavigator/CommonNavigator.java", "stars": "1", "class_props": {"extends": "FrameLayout", "implements": ["IPagerNavigator", "NavigatorHelper"], "modifiers": ["public"]}}, {"id": 63257, "method_name": "setLeftPadding", "class_name": "CommonNavigator", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setLeftPadding(int leftPadding) {\n        mLeftPadding = leftPadding;\n    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/view/magicindicator/buildins/commonnavigator/CommonNavigator.java", "stars": "1", "class_props": {"extends": "FrameLayout", "implements": ["IPagerNavigator", "NavigatorHelper"], "modifiers": ["public"]}}, {"id": 63258, "method_name": "isIndicatorOnTop", "class_name": "CommonNavigator", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean isIndicatorOnTop() {\n        return mIndicatorOnTop;\n    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/view/magicindicator/buildins/commonnavigator/CommonNavigator.java", "stars": "1", "class_props": {"extends": "FrameLayout", "implements": ["IPagerNavigator", "NavigatorHelper"], "modifiers": ["public"]}}, {"id": 63259, "method_name": "setIndicatorOnTop", "class_name": "CommonNavigator", "params": ["boolean"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setIndicatorOnTop(boolean indicatorOnTop) {\n        mIndicatorOnTop = indicatorOnTop;\n    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/view/magicindicator/buildins/commonnavigator/CommonNavigator.java", "stars": "1", "class_props": {"extends": "FrameLayout", "implements": ["IPagerNavigator", "NavigatorHelper"], "modifiers": ["public"]}}, {"id": 63260, "method_name": "isReselectWhenLayout", "class_name": "CommonNavigator", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean isReselectWhenLayout() {\n        return mReselectWhenLayout;\n    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/view/magicindicator/buildins/commonnavigator/CommonNavigator.java", "stars": "1", "class_props": {"extends": "FrameLayout", "implements": ["IPagerNavigator", "NavigatorHelper"], "modifiers": ["public"]}}, {"id": 63261, "method_name": "setReselectWhenLayout", "class_name": "CommonNavigator", "params": ["boolean"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setReselectWhenLayout(boolean reselectWhenLayout) {\n        mReselectWhenLayout = reselectWhenLayout;\n    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/view/magicindicator/buildins/commonnavigator/CommonNavigator.java", "stars": "1", "class_props": {"extends": "FrameLayout", "implements": ["IPagerNavigator", "NavigatorHelper"], "modifiers": ["public"]}}, {"id": 63262, "method_name": "execute", "class_name": "SearchCmd", "params": ["LibraryData"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void execute(LibraryData data) {\n        Objects.requireNonNull(data, LegalityCheck.LIBRARY_DATA_NULL_MESSAGE);\n\n        List<BookEntry> books = data.getBookData();\n        List<BookEntry> booksFound = Utils.searchBooksByTitle(books, searchWord);\n\n        if (booksFound.size() == 0) {\n            System.out.println(\"No hits found for search term: \" + this.searchWord);\n        }\n        else {\n            for (BookEntry book : booksFound) {\n                System.out.println(book.getTitle());\n            }\n        }\n    }", "url": "https://raw.githubusercontent.com/LJacksonPan/Y1-OOP-CW3/master/src/SearchCmd.java", "stars": "6", "class_props": {"extends": "LibraryCommand", "implements": null, "modifiers": ["public"]}}, {"id": 63263, "method_name": "parseArguments", "class_name": "SearchCmd", "params": ["String"], "throws": null, "modifiers": ["protected"], "return_type": "boolean", "snippet": "    protected boolean parseArguments(String argumentInput) {\n        Objects.requireNonNull(argumentInput, LegalityCheck.INPUT_ARGUMENT_NULL_MESSAGE);\n\n        if (argumentInput.matches(ALL_ALPHA_REGEX) && !argumentInput.isBlank()) {\n            this.searchWord = argumentInput;\n            return true;\n        }\n        else {\n            return false;\n        }\n    }", "url": "https://raw.githubusercontent.com/LJacksonPan/Y1-OOP-CW3/master/src/SearchCmd.java", "stars": "6", "class_props": {"extends": "LibraryCommand", "implements": null, "modifiers": ["public"]}}, {"id": 63264, "method_name": "diplomat", "class_name": "OfferPeaceMessage", "params": ["Empire"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void diplomat(Empire e)  {\n        super.diplomat(e);\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/diplomacy/OfferPeaceMessage.java", "stars": "74", "class_props": {"extends": "TurnNotificationMessage", "implements": null, "modifiers": ["public"]}}, {"id": 63265, "method_name": "numReplies", "class_name": "OfferPeaceMessage", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int numReplies()       \t\t{ return 2; }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/diplomacy/OfferPeaceMessage.java", "stars": "74", "class_props": {"extends": "TurnNotificationMessage", "implements": null, "modifiers": ["public"]}}, {"id": 63266, "method_name": "enabled", "class_name": "OfferPeaceMessage", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean enabled(int i)       { return true; }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/diplomacy/OfferPeaceMessage.java", "stars": "74", "class_props": {"extends": "TurnNotificationMessage", "implements": null, "modifiers": ["public"]}}, {"id": 63267, "method_name": "reply", "class_name": "OfferPeaceMessage", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String reply(int i)          { \n        switch (i) {\n            case 0 : return text(\"DIPLOMACY_ACCEPT_END_WAR\");\n            case 1 : return text(\"DIPLOMACY_DECLINE_OFFER\");\n        }\n        return \"\"; \n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/diplomacy/OfferPeaceMessage.java", "stars": "74", "class_props": {"extends": "TurnNotificationMessage", "implements": null, "modifiers": ["public"]}}, {"id": 63268, "method_name": "select", "class_name": "OfferPeaceMessage", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void select(int i) {\n        log(\"OfferPeaceMessage - selected: \", str(i));\n        switch(i) {\n        case 0: \n            DiplomaticReply reply = player().diplomatAI().acceptOfferPeace(diplomat());\n            reply.resumeTurn(true);\n            DiplomaticMessage.reply(DiplomacyRequestReply.create(diplomat(), reply));\t\n            break;\n        case 1: \n        default:\n            escape(); break;\n        }\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/diplomacy/OfferPeaceMessage.java", "stars": "74", "class_props": {"extends": "TurnNotificationMessage", "implements": null, "modifiers": ["public"]}}, {"id": 63269, "method_name": "escape", "class_name": "OfferPeaceMessage", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void escape() {\n        player().diplomatAI().refuseOfferPeace(diplomat());\n        session().resumeNextTurnProcessing();\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/diplomacy/OfferPeaceMessage.java", "stars": "74", "class_props": {"extends": "TurnNotificationMessage", "implements": null, "modifiers": ["public"]}}, {"id": 63270, "method_name": "decode", "class_name": "OfferPeaceMessage", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String decode(String encodedMessage) { \n        String s1 = super.decode(encodedMessage); \n        return s1;\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/diplomacy/OfferPeaceMessage.java", "stars": "74", "class_props": {"extends": "TurnNotificationMessage", "implements": null, "modifiers": ["public"]}}, {"id": 63271, "method_name": "initBoard", "class_name": "GameState", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "\tprivate void initBoard() {\n\t\tboard = new Cell[dimensions][dimensions]; //initialize board object\n\t\tmines = calcMineCount(dimensions, difficulty); //calculate number of mines to deploy\n\t\tint minesLeft = mines;\n\t\tint cells = (int) Math.pow(dimensions, 2);\n\t\t\n\t\t//create board and place mines!\n\t\tfor (int y = 0; y < board.length; y++) {\n\t\t\tfor (int x = 0; x < board[y].length; x++) {\n\t\t\t\tboard[x][y] = new Cell(x, y); //init cell\n\t\t\t\t//place mine?\n\t\t\t\tif (minesLeft > 0 && ((double)minesLeft / (double)cells) > Math.random()) {\n\t\t\t\t\tboard[x][y].setMine(true);\n\t\t\t\t\tminesLeft--;\n\t\t\t\t}\n\t\t\t\t//board[x][y].setRevealed(true); //TEMP\n\t\t\t\tcells--;\n\t\t\t}\n\t\t}\n\t\t\n\t\t//setup number of neighboring mines for each cell!\n\t\t//iterate over cells\n\t\tfor (int y = 0; y < board.length; y++) {\n\t\t\tfor (int x = 0; x < board[y].length; x++) {\n\t\t\t\t//if cell is not a mine, continue with next cell\n\t\t\t\tif (!board[x][y].isMine()) continue;\n\t\t\t\t\n\t\t\t\t//iterate over neighboring cells\n\t\t\t\tfor (int y1 = Math.max(y-1, 0); y1 <= Math.min(y+1, board.length-1); y1++) {\n\t\t\t\t\tfor (int x1 = Math.max(x-1, 0); x1 <= Math.min(x+1, board[y].length-1); x1++) {\n\t\t\t\t\t\t//if not a mine, increase number of cell by 1\n\t\t\t\t\t\tif (!board[x1][y1].isMine()) {\n\t\t\t\t\t\t\tboard[x1][y1].setNumber(board[x1][y1].getNumber() + 1);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\t\t}\n\t}", "url": "https://raw.githubusercontent.com/bkis/JMines/master/src/idh/java/jmines/model/GameState.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 63272, "method_name": "calcMineCount", "class_name": "GameState", "params": ["int", "int"], "throws": null, "modifiers": ["private"], "return_type": "int", "snippet": "\tprivate int calcMineCount(int dimensions, int difficulty) {\n\t\treturn dimensions * difficulty / (10 / 3);\n\t}", "url": "https://raw.githubusercontent.com/bkis/JMines/master/src/idh/java/jmines/model/GameState.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 63273, "method_name": "getBoard", "class_name": "GameState", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Cell", "snippet": "\tpublic Cell[][] getBoard() {\n\t\treturn board;\n\t}", "url": "https://raw.githubusercontent.com/bkis/JMines/master/src/idh/java/jmines/model/GameState.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 63274, "method_name": "setBoard", "class_name": "GameState", "params": ["Cell"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void setBoard(Cell[][] board) {\n\t\tthis.board = board;\n\t}", "url": "https://raw.githubusercontent.com/bkis/JMines/master/src/idh/java/jmines/model/GameState.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 63275, "method_name": "getDimensions", "class_name": "GameState", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "\tpublic int getDimensions() {\n\t\treturn dimensions;\n\t}", "url": "https://raw.githubusercontent.com/bkis/JMines/master/src/idh/java/jmines/model/GameState.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 63276, "method_name": "setDimensions", "class_name": "GameState", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void setDimensions(int dimensions) {\n\t\tthis.dimensions = dimensions;\n\t}", "url": "https://raw.githubusercontent.com/bkis/JMines/master/src/idh/java/jmines/model/GameState.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 63277, "method_name": "getDifficulty", "class_name": "GameState", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "\tpublic int getDifficulty() {\n\t\treturn difficulty;\n\t}", "url": "https://raw.githubusercontent.com/bkis/JMines/master/src/idh/java/jmines/model/GameState.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 63278, "method_name": "setDifficulty", "class_name": "GameState", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void setDifficulty(int difficulty) {\n\t\tthis.difficulty = difficulty;\n\t}", "url": "https://raw.githubusercontent.com/bkis/JMines/master/src/idh/java/jmines/model/GameState.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 63279, "method_name": "getMines", "class_name": "GameState", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "\tpublic int getMines() {\n\t\treturn mines;\n\t}", "url": "https://raw.githubusercontent.com/bkis/JMines/master/src/idh/java/jmines/model/GameState.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 63280, "method_name": "setMines", "class_name": "GameState", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void setMines(int mines) {\n\t\tthis.mines = mines;\n\t}", "url": "https://raw.githubusercontent.com/bkis/JMines/master/src/idh/java/jmines/model/GameState.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 63281, "method_name": "getMarked", "class_name": "GameState", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "\tpublic int getMarked() {\n\t\treturn marked;\n\t}", "url": "https://raw.githubusercontent.com/bkis/JMines/master/src/idh/java/jmines/model/GameState.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 63282, "method_name": "setMarked", "class_name": "GameState", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void setMarked(int marked) {\n\t\tthis.marked = marked;\n\t}", "url": "https://raw.githubusercontent.com/bkis/JMines/master/src/idh/java/jmines/model/GameState.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 63283, "method_name": "isWon", "class_name": "GameState", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "\tpublic boolean isWon() {\n\t\treturn won;\n\t}", "url": "https://raw.githubusercontent.com/bkis/JMines/master/src/idh/java/jmines/model/GameState.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 63284, "method_name": "setWon", "class_name": "GameState", "params": ["boolean"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void setWon(boolean won) {\n\t\tthis.won = won;\n\t\tif (won) revealAll();\n\t}", "url": "https://raw.githubusercontent.com/bkis/JMines/master/src/idh/java/jmines/model/GameState.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 63285, "method_name": "revealAll", "class_name": "GameState", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "\tprivate void revealAll() {\n\t\tfor (int i = 0; i < board.length; i++) {\n\t\t\tfor (int j = 0; j < board[i].length; j++) {\n\t\t\t\tboard[i][j].setRevealed(true);\n\t\t\t}\n\t\t}\n\t}", "url": "https://raw.githubusercontent.com/bkis/JMines/master/src/idh/java/jmines/model/GameState.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 63286, "method_name": "isLost", "class_name": "GameState", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "\tpublic boolean isLost() {\n\t\treturn lost;\n\t}", "url": "https://raw.githubusercontent.com/bkis/JMines/master/src/idh/java/jmines/model/GameState.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 63287, "method_name": "setLost", "class_name": "GameState", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void setLost() {\n\t\tthis.lost = true;\n\t\trevealAll();\n\t}", "url": "https://raw.githubusercontent.com/bkis/JMines/master/src/idh/java/jmines/model/GameState.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 63288, "method_name": "toString", "class_name": "GameState", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "\tpublic String toString() {\n\t\treturn \"JMine GameState [dim:\" + dimensions + \", diff:\" + difficulty + \"]\";\n\t}", "url": "https://raw.githubusercontent.com/bkis/JMines/master/src/idh/java/jmines/model/GameState.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 63289, "method_name": "main", "class_name": "Server", "params": ["String"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void main(final String... arg) {\n        //noinspection OverlyBroadCatchBlock\n        try {\n            // Use system look & feel\n            UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());\n        } catch (final Exception e) {\n            e.printStackTrace();\n        }\n\n        showInitialFrame();\n    }", "url": "https://raw.githubusercontent.com/javmarina/Nintendo-Switch-Remote-Control/master/gui/server/src/main/java/com/javmarina/server/Server.java", "stars": "17", "class_props": {"extends": null, "implements": null, "modifiers": ["final", "public"]}}, {"id": 63290, "method_name": "showInitialFrame", "class_name": "Server", "params": [], "throws": null, "modifiers": ["static", "private"], "return_type": "void", "snippet": "    private static void showInitialFrame() {\n        final Preferences prefs = Preferences.userNodeForPackage(Server.class);\n\n        // construct components\n        final JPanel jPanel = new JPanel();\n        final JButton jButton = new JButton(\"Open server\");\n        final JTextField jPort = new JTextField(15);\n        final JTextField jBaudrate = new JTextField(5);\n        final JLabel jPortLabel = new JLabel(\"Port\", SwingConstants.RIGHT);\n        final JLabel jBaudrateLabel = new JLabel(\"Baud rate\", SwingConstants.RIGHT);\n\n        // adjust size and set layout\n        jPanel.setPreferredSize(new Dimension(200, 200));\n        jPanel.setLayout(null);\n\n        jPort.setText(prefs.get(KEY_SERVER_PORT, String.valueOf(UdpUtils.DEFAULT_PORT)));\n        jBaudrate.setText(prefs.get(KEY_BAUDRATE, String.valueOf(DEFAULT_BAUDRATE)));\n\n        final SerialPort[] ports = SerialPort.getCommPorts();\n        final JComboBox<SerialPort> jComboBox = new JComboBox<>(ports);\n\n        // add components\n        jPanel.add(jButton);\n        jPanel.add(jPort);\n        jPanel.add(jPortLabel);\n        jPanel.add(jBaudrate);\n        jPanel.add(jBaudrateLabel);\n        jPanel.add(jComboBox);\n\n        // set component bounds (only needed by Absolute Positioning)\n        jPortLabel.setBounds (10, 10, 80, 30);\n        jPort.setBounds (110, 10, 80, 30);\n        jBaudrateLabel.setBounds(10, 60, 80, 30);\n        jBaudrate.setBounds(110, 60, 80, 30);\n        jComboBox.setBounds(50, 110, 100, 30);\n        jButton.setBounds (50, 160, 100, 30);\n\n        final JFrame frame = new JFrame(\"Server configuration\");\n        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);\n        frame.getContentPane().add(jPanel);\n        frame.pack();\n        frame.setLocationRelativeTo(null); // Centered in screen\n        frame.setResizable(false);\n        frame.setVisible(true);\n\n        jButton.addActionListener(actionEvent -> {\n            final String port = jPort.getText();\n            if (port.isEmpty()) {\n                JOptionPane.showMessageDialog(frame, \"Port cannot be empty\");\n                return;\n            }\n            if (GeneralUtils.isStringInteger(port)) {\n                final int portNumber = Integer.parseInt(port);\n                if (portNumber <= 1023 || portNumber > 65535) {\n                    JOptionPane.showMessageDialog(frame, \"Port must be in the range 1024-65535\");\n                    return;\n                }\n            } else {\n                JOptionPane.showMessageDialog(frame, \"Port must be numeric\");\n                return;\n            }\n            final String baudrate = jBaudrate.getText();\n            if (baudrate.isEmpty()) {\n                JOptionPane.showMessageDialog(frame, \"Baud rate cannot be empty\");\n                return;\n            }\n            if (GeneralUtils.isStringInteger(baudrate)) {\n                final int baud = Integer.parseInt(baudrate);\n                if (baud < 9600 || baud > 1000000) {\n                    JOptionPane.showMessageDialog(frame, \"Baud rate must be in the range 9600-1000000\");\n                    return;\n                }\n            } else {\n                JOptionPane.showMessageDialog(frame, \"Baud rate must be numeric\");\n                return;\n            }\n            if (jComboBox.getSelectedIndex() == -1) {\n                JOptionPane.showMessageDialog(frame, \"You must select a serial port\");\n                return;\n            }\n            // Save preferences\n            prefs.put(KEY_SERVER_PORT, port);\n            prefs.put(KEY_BAUDRATE, baudrate);\n\n            final SerialPort serialPort = (SerialPort) jComboBox.getSelectedItem();\n            assert serialPort != null;\n            frame.setVisible(false);\n            showConnectionFrame(\n                    new SerialAdapter(serialPort, Integer.parseInt(baudrate)),\n                    Integer.parseInt(port)\n            );\n        });\n    }", "url": "https://raw.githubusercontent.com/javmarina/Nintendo-Switch-Remote-Control/master/gui/server/src/main/java/com/javmarina/server/Server.java", "stars": "17", "class_props": {"extends": null, "implements": null, "modifiers": ["final", "public"]}}, {"id": 63291, "method_name": "showConnectionFrame", "class_name": "Server", "params": ["SerialAdapter", "int"], "throws": null, "modifiers": ["static", "private"], "return_type": "void", "snippet": "    private static void showConnectionFrame(final SerialAdapter serialAdapter, final int serverPort) {\n        final ConnectionFrame frame = new ConnectionFrame(\"Server\");\n        frame.setLocationRelativeTo(null); // Centered in screen\n        frame.setResizable(false);\n        frame.setVisible(true);\n\n        try {\n            frame.setSerialInfo(\"Trying to sync\");\n            serialAdapter.sync(true);\n            frame.setSerialInfo(\"Synced!\");\n            System.out.println(\"Synced!\");\n        } catch (final IOException e) {\n            JOptionPane.showMessageDialog(frame, e.getMessage());\n            serialAdapter.closePort();\n            frame.setVisible(false);\n            showInitialFrame();\n            return;\n        }\n\n        JOptionPane.showMessageDialog(frame, serialAdapter.testSpeed(100));\n\n        new Thread(new Runnable() {\n\n            DatagramSocket socket;\n            InetAddress address;\n            int clientPort;\n\n            @Override\n            public void run() {\n                // Wait for client command\n                try {\n                    // While we could use UdpUtils methods, we need to discover the client's IP\n                    // address and port\n                    socket = new DatagramSocket(serverPort);\n                    final byte[] buf = new byte[1];\n                    final DatagramPacket packet = new DatagramPacket(buf, buf.length);\n                    socket.receive(packet);\n\n                    assert buf[0] == UdpUtils.START;\n\n                    address = packet.getAddress();\n                    clientPort = packet.getPort();\n\n                    UdpUtils.sendSingleByte(socket, address, clientPort, UdpUtils.START_ACK);\n\n                    sendThread = new SendThread(socket, address, clientPort);\n                    sendThread.start();\n\n                    final Thread input = new ReceiveThread(socket, address, clientPort, frame, serialAdapter);\n                    input.start();\n\n                    Thread.currentThread().interrupt();\n                } catch (@SuppressWarnings(\"OverlyBroadCatchBlock\") final IOException e) {\n                    JOptionPane.showMessageDialog(frame, e.getMessage());\n                    serialAdapter.closePort();\n                    frame.setVisible(false);\n                    showInitialFrame();\n                }\n            }\n        }).start();\n    }", "url": "https://raw.githubusercontent.com/javmarina/Nintendo-Switch-Remote-Control/master/gui/server/src/main/java/com/javmarina/server/Server.java", "stars": "17", "class_props": {"extends": null, "implements": null, "modifiers": ["final", "public"]}}, {"id": 63292, "method_name": "setSerialInfo", "class_name": "ConnectionFrame", "params": ["String"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "        private void setSerialInfo(final String text) {\n            jSerialLabel.setText(text);\n        }", "url": "https://raw.githubusercontent.com/javmarina/Nintendo-Switch-Remote-Control/master/gui/server/src/main/java/com/javmarina/server/Server.java", "stars": "17", "class_props": {"extends": "JFrame", "implements": null, "modifiers": ["static", "private"]}}, {"id": 63293, "method_name": "setConnectionInfo", "class_name": "ConnectionFrame", "params": ["String"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "        private void setConnectionInfo(final String text) {\n            jConnectionLabel.setText(text);\n        }", "url": "https://raw.githubusercontent.com/javmarina/Nintendo-Switch-Remote-Control/master/gui/server/src/main/java/com/javmarina/server/Server.java", "stars": "17", "class_props": {"extends": "JFrame", "implements": null, "modifiers": ["static", "private"]}}, {"id": 63294, "method_name": "updateControllerUi", "class_name": "ConnectionFrame", "params": ["byte"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "        private void updateControllerUi(final byte[] packet) {\n            controllerPanel.updateUi(packet);\n        }", "url": "https://raw.githubusercontent.com/javmarina/Nintendo-Switch-Remote-Control/master/gui/server/src/main/java/com/javmarina/server/Server.java", "stars": "17", "class_props": {"extends": "JFrame", "implements": null, "modifiers": ["static", "private"]}}, {"id": 63295, "method_name": "start", "class_name": "ReceiveThread", "params": [], "throws": null, "modifiers": ["synchronized", "public"], "return_type": "void", "snippet": "        public synchronized void start() {\n            super.start();\n            running = true;\n        }", "url": "https://raw.githubusercontent.com/javmarina/Nintendo-Switch-Remote-Control/master/gui/server/src/main/java/com/javmarina/server/Server.java", "stars": "17", "class_props": {"extends": "Thread", "implements": null, "modifiers": ["static", "private"]}}, {"id": 63296, "method_name": "run", "class_name": "ReceiveThread", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "        public void run() {\n            final byte[] received = new byte[8];\n            while (running) {\n                try {\n                    // Fill received buffer with contents from client\n                    UdpUtils.receivePacket(socket, received);\n                    final String message = GeneralUtils.byteArrayToString(received);\n                    System.out.println(\"From client: \" + message);\n                    connectionFrame.setConnectionInfo(\"<html>From client: \" + message + \"<br>UDP CRC fails: \" + crcFailCount + \"</html>\");\n                    if (received[7] == UdpUtils.EXIT) {\n                        running = false;\n                        sendThread.interrupt();\n                        GeneralUtils.sleep(400); // Let the threads interrupt correctly\n                        UdpUtils.sendSingleByte(socket, address, clientPort, UdpUtils.EXIT_ACK);\n                        System.out.println(\"Sending exit_ack\");\n                        break;\n                    }\n                    if (received[7] == UdpUtils.PING) {\n                        final byte save = received[7];\n                        received[7] = UdpUtils.PING_REPLY;\n                        UdpUtils.sendPacket(socket, address, clientPort, received);\n                        System.out.println(\"Sending ping_reply\");\n                        received[7] = save; // Leave it as before\n                    }\n                    if (received[7] == UdpUtils.NO_ACTION || received[7] == UdpUtils.PING) {\n                        // Update UI\n                        connectionFrame.updateControllerUi(received);\n                        // Send to MCU\n                        if (!connectionFrame.connectionLostButton.getModel().isPressed()) {\n                            received[7] = Controller.VENDORSPEC;\n                            final boolean result = serialAdapter.sendPacket(received);\n                            connectionFrame.setSerialInfo(result ? \"Synced!\" : \"Packet error\");\n                        }\n                    }\n                } catch (final UdpUtils.InvalidCrcException e) {\n                    System.out.println(\"CRC is not valid\");\n                    crcFailCount++;\n                } catch (final IOException e) {\n                    System.out.println(\"Error while reading input from client\");\n                }\n            }\n            System.out.println(\"Closing socket server!!\");\n            socket.close();\n            serialAdapter.closePort();\n            connectionFrame.setVisible(false);\n            showInitialFrame();\n        }", "url": "https://raw.githubusercontent.com/javmarina/Nintendo-Switch-Remote-Control/master/gui/server/src/main/java/com/javmarina/server/Server.java", "stars": "17", "class_props": {"extends": "Thread", "implements": null, "modifiers": ["static", "private"]}}, {"id": 63297, "method_name": "run", "class_name": "SendThread", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "        public void run() {\n            running = true;\n            int i = 0;\n            final ByteBuffer buffer = ByteBuffer.allocate(8);\n            while (running) {\n                try {\n                    UdpUtils.sendPacket(socket, address, clientPort, buffer.putInt(0, i).array());\n                    System.out.println(\"Sending frame \" + i);\n                    i++;\n                    GeneralUtils.sleep(1000/FPS);\n                } catch (final IOException e) {\n                    System.out.println(\"Error while sending frames\");\n                }\n            }\n        }", "url": "https://raw.githubusercontent.com/javmarina/Nintendo-Switch-Remote-Control/master/gui/server/src/main/java/com/javmarina/server/Server.java", "stars": "17", "class_props": {"extends": "Thread", "implements": null, "modifiers": ["static", "private"]}}, {"id": 63298, "method_name": "interrupt", "class_name": "SendThread", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "        public void interrupt() {\n            super.interrupt();\n            running = false;\n        }", "url": "https://raw.githubusercontent.com/javmarina/Nintendo-Switch-Remote-Control/master/gui/server/src/main/java/com/javmarina/server/Server.java", "stars": "17", "class_props": {"extends": "Thread", "implements": null, "modifiers": ["static", "private"]}}, {"id": 63299, "method_name": "recupererParDemandeurSurLes15DerniersJours", "class_name": "DistributionMasquePersistanceJdbc", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "List<DistributionMasque>", "snippet": "    public List<DistributionMasque> recupererParDemandeurSurLes15DerniersJours(String demandeur) {\n        LocalDateTime dateDistribution = LocalDateTime.now(clock).minusDays(15);\n        return distributionMasqueDatabaseRepository.findByDemandeurAndDateDistributionIsGreaterThanEqual(demandeur, dateDistribution)\n                .stream()\n                .map(distributionMasqueDatabaseMapper::toDistributionMasque)\n                .collect(toList());\n    }", "url": "https://raw.githubusercontent.com/LAB-MI/remise-masques-covid-19/master/src/main/java/fr/gouv/interieur/dmgp/remettant/infrastructure/database/DistributionMasquePersistanceJdbc.java", "stars": "5", "class_props": {"extends": null, "implements": ["DistributionMasquePersistance"], "modifiers": ["public"]}}, {"id": 63300, "method_name": "persister", "class_name": "DistributionMasquePersistanceJdbc", "params": ["List<DistributionMasque>"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void persister(List<DistributionMasque> distributionMasques) {\n        distributionMasques.stream()\n                .map(distributionMasqueDatabaseMapper::toDistributionMasqueDatabase)\n                .forEach(d -> {\n                    distributionMasqueDatabaseRepository.save(d);\n                    produireLog(d);\n                });\n    }", "url": "https://raw.githubusercontent.com/LAB-MI/remise-masques-covid-19/master/src/main/java/fr/gouv/interieur/dmgp/remettant/infrastructure/database/DistributionMasquePersistanceJdbc.java", "stars": "5", "class_props": {"extends": null, "implements": ["DistributionMasquePersistance"], "modifiers": ["public"]}}, {"id": 63301, "method_name": "produireLog", "class_name": "DistributionMasquePersistanceJdbc", "params": ["DistributionMasqueDatabase"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void produireLog(DistributionMasqueDatabase distributionMasqueDatabase) {\n        try {\n            LOGGER.info(objectMapper.writeValueAsString(distributionMasqueDatabase));\n        } catch (JsonProcessingException e) {\n            LOGGER.error(\"Erreur lors de la production de log de distribution de masque\", e);\n        }\n    }", "url": "https://raw.githubusercontent.com/LAB-MI/remise-masques-covid-19/master/src/main/java/fr/gouv/interieur/dmgp/remettant/infrastructure/database/DistributionMasquePersistanceJdbc.java", "stars": "5", "class_props": {"extends": null, "implements": ["DistributionMasquePersistance"], "modifiers": ["public"]}}, {"id": 63302, "method_name": "testInitializing", "class_name": "CacheBuilderTest", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "  void testInitializing() {\n    InitializingCache cache = unwrap(new CacheBuilder(\"test\").implementation(InitializingCache.class).build());\n\n    Assertions.assertThat(cache.initialized).isTrue();\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/mapping/CacheBuilderTest.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 63303, "method_name": "testInitializingFailure", "class_name": "CacheBuilderTest", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "  void testInitializingFailure() {\n    when(() -> new CacheBuilder(\"test\").implementation(InitializingFailureCache.class).build());\n    then(caughtException()).isInstanceOf(CacheException.class)\n      .hasMessage(\"Failed cache initialization for 'test' on 'org.apache.ibatis.mapping.CacheBuilderTest$InitializingFailureCache'\");\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/mapping/CacheBuilderTest.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 63304, "method_name": "unwrap", "class_name": "CacheBuilderTest", "params": ["Cache"], "throws": null, "modifiers": ["private"], "return_type": "T", "snippet": "  private <T> T unwrap(Cache cache) {\n    Field field;\n    try {\n      field = cache.getClass().getDeclaredField(\"delegate\");\n    } catch (NoSuchFieldException e) {\n      throw new IllegalStateException(e);\n    }\n    try {\n      field.setAccessible(true);\n      return (T) field.get(cache);\n    } catch (IllegalAccessException e) {\n      throw new IllegalStateException(e);\n    } finally {\n      field.setAccessible(false);\n    }\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/mapping/CacheBuilderTest.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 63305, "method_name": "initialize", "class_name": "InitializingCache", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void initialize() {\n      this.initialized = true;\n    }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/mapping/CacheBuilderTest.java", "stars": "15", "class_props": {"extends": "PerpetualCache", "implements": ["InitializingObject"], "modifiers": ["static", "private"]}}, {"id": 63306, "method_name": "initialize", "class_name": "InitializingFailureCache", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void initialize() {\n      throw new IllegalStateException(\"error\");\n    }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/mapping/CacheBuilderTest.java", "stars": "15", "class_props": {"extends": "PerpetualCache", "implements": ["InitializingObject"], "modifiers": ["static", "private"]}}, {"id": 63307, "method_name": "getJavaVM", "class_name": "DalvikVM64", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Pointer", "snippet": "    public Pointer getJavaVM() {\n        return _JavaVM;\n    }", "url": "https://raw.githubusercontent.com/wmm1996528/unidbg_douyin10/master/src/main/java/com/github/unidbg/linux/android/dvm/DalvikVM64.java", "stars": "16", "class_props": {"extends": "BaseVM", "implements": ["VM"], "modifiers": ["public"]}}, {"id": 63308, "method_name": "getJNIEnv", "class_name": "DalvikVM64", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Pointer", "snippet": "    public Pointer getJNIEnv() {\n        return _JNIEnv;\n    }", "url": "https://raw.githubusercontent.com/wmm1996528/unidbg_douyin10/master/src/main/java/com/github/unidbg/linux/android/dvm/DalvikVM64.java", "stars": "16", "class_props": {"extends": "BaseVM", "implements": ["VM"], "modifiers": ["public"]}}, {"id": 63309, "method_name": "findLibrary", "class_name": "DalvikVM64", "params": ["ApkFile", "String"], "throws": ["IOException"], "modifiers": [], "return_type": "byte", "snippet": "    byte[] findLibrary(ApkFile apkFile, String soName) throws IOException {\n        byte[] soData = apkFile.getFileData(\"lib/arm64-v8a/\" + soName);\n        if (soData != null) {\n            log.debug(\"resolve arm64-v8a library: \" + soName);\n            return soData;\n        } else {\n            return null;\n        }\n    }", "url": "https://raw.githubusercontent.com/wmm1996528/unidbg_douyin10/master/src/main/java/com/github/unidbg/linux/android/dvm/DalvikVM64.java", "stars": "16", "class_props": {"extends": "BaseVM", "implements": ["VM"], "modifiers": ["public"]}}, {"id": 63310, "method_name": "main", "class_name": "Zifuchuan", "params": ["String"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "\tpublic static void main(String[] args)\n\t{\n\t\tString greeting = \"hello\";   /*\u53d6\u5b50\u4e32*/\n\t\tString s = greeting.substring(0, 3);\n\t\tSystem.out.println(s);\n\t\tString expletive = \"Expensive\";    /*\u5b57\u7b26\u4e32\u62fc\u63a5*/\n\t\tString PG13 = \"delete\";\n\t\tString message = expletive + PG13;\n\t\tSystem.out.println(message);\n\t\tgreeting = greeting.substring(0, 3) + \"p!\";    /*\u4fee\u6539\u5b57\u7b26\u4e32*/\n\t\tSystem.out.println(greeting);\n\t\tSystem.out.println(s.equals(message));    /*\u68c0\u6d4b\u5b57\u7b26\u4e32\u662f\u5426\u76f8\u7b49*/ \n\t\tint n = greeting.length();    /*\u5b57\u7b26\u4e32\u957f\u5ea6\uff08\u4ee3\u7801\u5355\u5143\u6570\u91cf\uff09*/\n\t\tSystem.out.println(n);\n\t\tchar first = greeting.charAt(0);    /*\u8c03\u7528s.charAt(n)\u8fd4\u56de\u4f4d\u7f6en\u7684\u4ee3\u7801\u5355\u5143*/\n\t\tchar last = greeting.charAt(4);\n\t\tSystem.out.println(first);\n\t\tSystem.out.println(last);\n\t}", "url": "https://raw.githubusercontent.com/hasaki-w-c/JAVA--/master/ray/Zifuchuan.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 63311, "method_name": "getId", "class_name": "UrlParam", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "  public String getId() {\n    return id;\n  }", "url": "https://raw.githubusercontent.com/wechaturl/wechat_url_api_java_sdk/master/src/main/java/www/wechaturl/us/fangfeng/sdk/vo/UrlParam.java", "stars": "2", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 63312, "method_name": "setId", "class_name": "UrlParam", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void setId(String id) {\n    this.id = id;\n  }", "url": "https://raw.githubusercontent.com/wechaturl/wechat_url_api_java_sdk/master/src/main/java/www/wechaturl/us/fangfeng/sdk/vo/UrlParam.java", "stars": "2", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 63313, "method_name": "getAppid", "class_name": "UrlParam", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "  public String getAppid() {\n    return String.valueOf(appid);\n  }", "url": "https://raw.githubusercontent.com/wechaturl/wechat_url_api_java_sdk/master/src/main/java/www/wechaturl/us/fangfeng/sdk/vo/UrlParam.java", "stars": "2", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 63314, "method_name": "setAppid", "class_name": "UrlParam", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "UrlParam", "snippet": "  public UrlParam setAppid(int appid) {\n    this.appid = appid;\n    return this;\n  }", "url": "https://raw.githubusercontent.com/wechaturl/wechat_url_api_java_sdk/master/src/main/java/www/wechaturl/us/fangfeng/sdk/vo/UrlParam.java", "stars": "2", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 63315, "method_name": "getAppkey", "class_name": "UrlParam", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "  public String getAppkey() {\n    return appkey;\n  }", "url": "https://raw.githubusercontent.com/wechaturl/wechat_url_api_java_sdk/master/src/main/java/www/wechaturl/us/fangfeng/sdk/vo/UrlParam.java", "stars": "2", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 63316, "method_name": "setAppkey", "class_name": "UrlParam", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "UrlParam", "snippet": "  public UrlParam setAppkey(String appkey) {\n    this.appkey = appkey;\n    return this;\n  }", "url": "https://raw.githubusercontent.com/wechaturl/wechat_url_api_java_sdk/master/src/main/java/www/wechaturl/us/fangfeng/sdk/vo/UrlParam.java", "stars": "2", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 63317, "method_name": "getUrl", "class_name": "UrlParam", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "  public String getUrl() {\n    return url;\n  }", "url": "https://raw.githubusercontent.com/wechaturl/wechat_url_api_java_sdk/master/src/main/java/www/wechaturl/us/fangfeng/sdk/vo/UrlParam.java", "stars": "2", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 63318, "method_name": "setUrl", "class_name": "UrlParam", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "UrlParam", "snippet": "  public UrlParam setUrl(String url) {\n    this.url = url;\n    return this;\n  }", "url": "https://raw.githubusercontent.com/wechaturl/wechat_url_api_java_sdk/master/src/main/java/www/wechaturl/us/fangfeng/sdk/vo/UrlParam.java", "stars": "2", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 63319, "method_name": "getRequestUri", "class_name": "UrlParam", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "  public String getRequestUri() {\n    return requestUri;\n  }", "url": "https://raw.githubusercontent.com/wechaturl/wechat_url_api_java_sdk/master/src/main/java/www/wechaturl/us/fangfeng/sdk/vo/UrlParam.java", "stars": "2", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 63320, "method_name": "setRequestUri", "class_name": "UrlParam", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "UrlParam", "snippet": "  public UrlParam setRequestUri(String requestUri) {\n    this.requestUri = requestUri;\n    return this;\n  }", "url": "https://raw.githubusercontent.com/wechaturl/wechat_url_api_java_sdk/master/src/main/java/www/wechaturl/us/fangfeng/sdk/vo/UrlParam.java", "stars": "2", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 63321, "method_name": "getDomain", "class_name": "UrlParam", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "  public String getDomain() {\n    return domain;\n  }", "url": "https://raw.githubusercontent.com/wechaturl/wechat_url_api_java_sdk/master/src/main/java/www/wechaturl/us/fangfeng/sdk/vo/UrlParam.java", "stars": "2", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 63322, "method_name": "setDomain", "class_name": "UrlParam", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "UrlParam", "snippet": "  public UrlParam setDomain(String domain) {\n    this.domain = domain;\n    return this;\n  }", "url": "https://raw.githubusercontent.com/wechaturl/wechat_url_api_java_sdk/master/src/main/java/www/wechaturl/us/fangfeng/sdk/vo/UrlParam.java", "stars": "2", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 63323, "method_name": "getType", "class_name": "UrlParam", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "  public String getType() {\n    return type;\n  }", "url": "https://raw.githubusercontent.com/wechaturl/wechat_url_api_java_sdk/master/src/main/java/www/wechaturl/us/fangfeng/sdk/vo/UrlParam.java", "stars": "2", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 63324, "method_name": "setType", "class_name": "UrlParam", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "UrlParam", "snippet": "  public UrlParam setType(String type) {\n    this.type = type;\n    return this;\n  }", "url": "https://raw.githubusercontent.com/wechaturl/wechat_url_api_java_sdk/master/src/main/java/www/wechaturl/us/fangfeng/sdk/vo/UrlParam.java", "stars": "2", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 63325, "method_name": "getStatus", "class_name": "UrlParam", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "  public String getStatus() {\n    return status == -1 ? \"\" : String.valueOf(this.status);\n  }", "url": "https://raw.githubusercontent.com/wechaturl/wechat_url_api_java_sdk/master/src/main/java/www/wechaturl/us/fangfeng/sdk/vo/UrlParam.java", "stars": "2", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 63326, "method_name": "setStatus", "class_name": "UrlParam", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "UrlParam", "snippet": "  public UrlParam setStatus(int status) {\n    this.status = status;\n    return this;\n  }", "url": "https://raw.githubusercontent.com/wechaturl/wechat_url_api_java_sdk/master/src/main/java/www/wechaturl/us/fangfeng/sdk/vo/UrlParam.java", "stars": "2", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 63327, "method_name": "getFrequency", "class_name": "UrlParam", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "  public String getFrequency() {\n    return frequency == 0 ? \"\" : String.valueOf(frequency);\n  }", "url": "https://raw.githubusercontent.com/wechaturl/wechat_url_api_java_sdk/master/src/main/java/www/wechaturl/us/fangfeng/sdk/vo/UrlParam.java", "stars": "2", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 63328, "method_name": "setFrequency", "class_name": "UrlParam", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "UrlParam", "snippet": "  public UrlParam setFrequency(int frequency) {\n    this.frequency = frequency;\n    return this;\n  }", "url": "https://raw.githubusercontent.com/wechaturl/wechat_url_api_java_sdk/master/src/main/java/www/wechaturl/us/fangfeng/sdk/vo/UrlParam.java", "stars": "2", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 63329, "method_name": "getLayerType", "class_name": "UrlParam", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "  public String getLayerType() {\n    return layerType;\n  }", "url": "https://raw.githubusercontent.com/wechaturl/wechat_url_api_java_sdk/master/src/main/java/www/wechaturl/us/fangfeng/sdk/vo/UrlParam.java", "stars": "2", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 63330, "method_name": "setLayerType", "class_name": "UrlParam", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "UrlParam", "snippet": "  public UrlParam setLayerType(String layerType) {\n    this.layerType = layerType;\n    return this;\n  }", "url": "https://raw.githubusercontent.com/wechaturl/wechat_url_api_java_sdk/master/src/main/java/www/wechaturl/us/fangfeng/sdk/vo/UrlParam.java", "stars": "2", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 63331, "method_name": "getIsMonitor", "class_name": "UrlParam", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "  public String getIsMonitor() {\n    return isMonitor == -1 ? \"\" : String.valueOf(isMonitor);\n  }", "url": "https://raw.githubusercontent.com/wechaturl/wechat_url_api_java_sdk/master/src/main/java/www/wechaturl/us/fangfeng/sdk/vo/UrlParam.java", "stars": "2", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 63332, "method_name": "setIsMonitor", "class_name": "UrlParam", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "UrlParam", "snippet": "  public UrlParam setIsMonitor(int isMonitor) {\n    this.isMonitor = isMonitor;\n    return this;\n  }", "url": "https://raw.githubusercontent.com/wechaturl/wechat_url_api_java_sdk/master/src/main/java/www/wechaturl/us/fangfeng/sdk/vo/UrlParam.java", "stars": "2", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 63333, "method_name": "getCheckType", "class_name": "UrlParam", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "  public String getCheckType() {\n    return checkType;\n  }", "url": "https://raw.githubusercontent.com/wechaturl/wechat_url_api_java_sdk/master/src/main/java/www/wechaturl/us/fangfeng/sdk/vo/UrlParam.java", "stars": "2", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 63334, "method_name": "setCheckType", "class_name": "UrlParam", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "UrlParam", "snippet": "  public UrlParam setCheckType(String checkType) {\n    this.checkType = checkType;\n    return this;\n  }", "url": "https://raw.githubusercontent.com/wechaturl/wechat_url_api_java_sdk/master/src/main/java/www/wechaturl/us/fangfeng/sdk/vo/UrlParam.java", "stars": "2", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 63335, "method_name": "getEntryType", "class_name": "UrlParam", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "  public String getEntryType() {\n    return entryType;\n  }", "url": "https://raw.githubusercontent.com/wechaturl/wechat_url_api_java_sdk/master/src/main/java/www/wechaturl/us/fangfeng/sdk/vo/UrlParam.java", "stars": "2", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 63336, "method_name": "setEntryType", "class_name": "UrlParam", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "UrlParam", "snippet": "  public UrlParam setEntryType(String entryType) {\n    this.entryType = entryType;\n    return this;\n  }", "url": "https://raw.githubusercontent.com/wechaturl/wechat_url_api_java_sdk/master/src/main/java/www/wechaturl/us/fangfeng/sdk/vo/UrlParam.java", "stars": "2", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 63337, "method_name": "getVisitType", "class_name": "UrlParam", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "  public String getVisitType() {\n    return visitType;\n  }", "url": "https://raw.githubusercontent.com/wechaturl/wechat_url_api_java_sdk/master/src/main/java/www/wechaturl/us/fangfeng/sdk/vo/UrlParam.java", "stars": "2", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 63338, "method_name": "setVisitType", "class_name": "UrlParam", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "UrlParam", "snippet": "  public UrlParam setVisitType(String visitType) {\n    this.visitType = visitType;\n    return this;\n  }", "url": "https://raw.githubusercontent.com/wechaturl/wechat_url_api_java_sdk/master/src/main/java/www/wechaturl/us/fangfeng/sdk/vo/UrlParam.java", "stars": "2", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 63339, "method_name": "getIp", "class_name": "UrlParam", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "  public String getIp() {\n    return ip;\n  }", "url": "https://raw.githubusercontent.com/wechaturl/wechat_url_api_java_sdk/master/src/main/java/www/wechaturl/us/fangfeng/sdk/vo/UrlParam.java", "stars": "2", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 63340, "method_name": "setIp", "class_name": "UrlParam", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "UrlParam", "snippet": "  public UrlParam setIp(String ip) {\n    this.ip = ip;\n    return this;\n  }", "url": "https://raw.githubusercontent.com/wechaturl/wechat_url_api_java_sdk/master/src/main/java/www/wechaturl/us/fangfeng/sdk/vo/UrlParam.java", "stars": "2", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 63341, "method_name": "getNewLandDomainUrl", "class_name": "UrlParam", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "  public String getNewLandDomainUrl() {\n    return newLandDomainUrl;\n  }", "url": "https://raw.githubusercontent.com/wechaturl/wechat_url_api_java_sdk/master/src/main/java/www/wechaturl/us/fangfeng/sdk/vo/UrlParam.java", "stars": "2", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 63342, "method_name": "setNewLandDomainUrl", "class_name": "UrlParam", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "UrlParam", "snippet": "  public UrlParam setNewLandDomainUrl(String newLandDomainUrl) {\n    this.newLandDomainUrl = newLandDomainUrl;\n    return this;\n  }", "url": "https://raw.githubusercontent.com/wechaturl/wechat_url_api_java_sdk/master/src/main/java/www/wechaturl/us/fangfeng/sdk/vo/UrlParam.java", "stars": "2", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 63343, "method_name": "getGroupId", "class_name": "UrlParam", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "  public String getGroupId() {\n    return groupId == -1 ? \"\" : String.valueOf(groupId);\n  }", "url": "https://raw.githubusercontent.com/wechaturl/wechat_url_api_java_sdk/master/src/main/java/www/wechaturl/us/fangfeng/sdk/vo/UrlParam.java", "stars": "2", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 63344, "method_name": "setGroupId", "class_name": "UrlParam", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "UrlParam", "snippet": "  public UrlParam setGroupId(int groupId) {\n    this.groupId = groupId;\n    return this;\n  }", "url": "https://raw.githubusercontent.com/wechaturl/wechat_url_api_java_sdk/master/src/main/java/www/wechaturl/us/fangfeng/sdk/vo/UrlParam.java", "stars": "2", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 63345, "method_name": "getTitle", "class_name": "UrlParam", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "  public String getTitle() {\n    return title;\n  }", "url": "https://raw.githubusercontent.com/wechaturl/wechat_url_api_java_sdk/master/src/main/java/www/wechaturl/us/fangfeng/sdk/vo/UrlParam.java", "stars": "2", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 63346, "method_name": "setTitle", "class_name": "UrlParam", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "UrlParam", "snippet": "  public UrlParam setTitle(String title) {\n    this.title = title;\n    return this;\n  }", "url": "https://raw.githubusercontent.com/wechaturl/wechat_url_api_java_sdk/master/src/main/java/www/wechaturl/us/fangfeng/sdk/vo/UrlParam.java", "stars": "2", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 63347, "method_name": "getKeywords", "class_name": "UrlParam", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "  public String getKeywords() {\n    return keywords;\n  }", "url": "https://raw.githubusercontent.com/wechaturl/wechat_url_api_java_sdk/master/src/main/java/www/wechaturl/us/fangfeng/sdk/vo/UrlParam.java", "stars": "2", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 63348, "method_name": "setKeywords", "class_name": "UrlParam", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "UrlParam", "snippet": "  public UrlParam setKeywords(String keywords) {\n    this.keywords = keywords;\n    return this;\n  }", "url": "https://raw.githubusercontent.com/wechaturl/wechat_url_api_java_sdk/master/src/main/java/www/wechaturl/us/fangfeng/sdk/vo/UrlParam.java", "stars": "2", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 63349, "method_name": "getDescription", "class_name": "UrlParam", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "  public String getDescription() {\n    return description;\n  }", "url": "https://raw.githubusercontent.com/wechaturl/wechat_url_api_java_sdk/master/src/main/java/www/wechaturl/us/fangfeng/sdk/vo/UrlParam.java", "stars": "2", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 63350, "method_name": "setDescription", "class_name": "UrlParam", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "UrlParam", "snippet": "  public UrlParam setDescription(String description) {\n    this.description = description;\n    return this;\n  }", "url": "https://raw.githubusercontent.com/wechaturl/wechat_url_api_java_sdk/master/src/main/java/www/wechaturl/us/fangfeng/sdk/vo/UrlParam.java", "stars": "2", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 63351, "method_name": "getPage", "class_name": "UrlParam", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "  public String getPage() {\n    return page == 0 ? \"\" : String.valueOf(page);\n  }", "url": "https://raw.githubusercontent.com/wechaturl/wechat_url_api_java_sdk/master/src/main/java/www/wechaturl/us/fangfeng/sdk/vo/UrlParam.java", "stars": "2", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 63352, "method_name": "setPage", "class_name": "UrlParam", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "UrlParam", "snippet": "  public UrlParam setPage(int page) {\n    this.page = page;\n    return this;\n  }", "url": "https://raw.githubusercontent.com/wechaturl/wechat_url_api_java_sdk/master/src/main/java/www/wechaturl/us/fangfeng/sdk/vo/UrlParam.java", "stars": "2", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 63353, "method_name": "getRows", "class_name": "UrlParam", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "  public String getRows() {\n    return rows == 0 ? \"\" : String.valueOf(rows);\n  }", "url": "https://raw.githubusercontent.com/wechaturl/wechat_url_api_java_sdk/master/src/main/java/www/wechaturl/us/fangfeng/sdk/vo/UrlParam.java", "stars": "2", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 63354, "method_name": "setRows", "class_name": "UrlParam", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "UrlParam", "snippet": "  public UrlParam setRows(int rows) {\n    this.rows = rows;\n    return this;\n  }", "url": "https://raw.githubusercontent.com/wechaturl/wechat_url_api_java_sdk/master/src/main/java/www/wechaturl/us/fangfeng/sdk/vo/UrlParam.java", "stars": "2", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 63355, "method_name": "equals", "class_name": "UrlParam", "params": ["Object"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "  public boolean equals(Object o) {\n    if (this == o) return true;\n    if (!(o instanceof UrlParam)) return false;\n    UrlParam urlParam = (UrlParam) o;\n    return getAppid() == urlParam.getAppid() &&\n            getFrequency() == urlParam.getFrequency() &&\n            getIsMonitor() == urlParam.getIsMonitor() &&\n            getGroupId() == urlParam.getGroupId() &&\n            getPage() == urlParam.getPage() &&\n            getRows() == urlParam.getRows() &&\n            Objects.equals(getAppkey(), urlParam.getAppkey()) &&\n            Objects.equals(getUrl(), urlParam.getUrl()) &&\n            Objects.equals(getRequestUri(), urlParam.getRequestUri()) &&\n            Objects.equals(getDomain(), urlParam.getDomain()) &&\n            Objects.equals(getType(), urlParam.getType()) &&\n            Objects.equals(getCheckType(), urlParam.getCheckType()) &&\n            Objects.equals(getVisitType(), urlParam.getVisitType()) &&\n            Objects.equals(getLayerType(), urlParam.getLayerType()) &&\n            Objects.equals(getNewLandDomainUrl(), urlParam.getNewLandDomainUrl()) &&\n            Objects.equals(getTitle(), urlParam.getTitle()) &&\n            Objects.equals(getKeywords(), urlParam.getKeywords()) &&\n            Objects.equals(getDescription(), urlParam.getDescription());\n  }", "url": "https://raw.githubusercontent.com/wechaturl/wechat_url_api_java_sdk/master/src/main/java/www/wechaturl/us/fangfeng/sdk/vo/UrlParam.java", "stars": "2", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 63356, "method_name": "hashCode", "class_name": "UrlParam", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "  public int hashCode() {\n    return Objects.hash(getAppid(), getAppkey(), getUrl(), getRequestUri(), getDomain(), getType(), getCheckType(), getFrequency(), getIsMonitor(), getVisitType(), getLayerType(), getNewLandDomainUrl(), getGroupId(), getTitle(), getKeywords(), getDescription(), getPage(), getRows());\n  }", "url": "https://raw.githubusercontent.com/wechaturl/wechat_url_api_java_sdk/master/src/main/java/www/wechaturl/us/fangfeng/sdk/vo/UrlParam.java", "stars": "2", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 63357, "method_name": "onAttachedToWindow", "class_name": "Practice02HsvEvaluatorLayout", "params": [], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void onAttachedToWindow() {\n        super.onAttachedToWindow();\n\n        view = (Practice02HsvEvaluatorView) findViewById(R.id.objectAnimatorView);\n        animateBt = (Button) findViewById(R.id.animateBt);\n\n        animateBt.setOnClickListener(new OnClickListener() {\n            @Override\n            public void onClick(View v) {\n                ObjectAnimator animator = ObjectAnimator.ofInt(view, \"color\", 0xffff0000, 0xff00ff00);\n                animator.setEvaluator(new HsvEvaluator()); // \u4f7f\u7528\u81ea\u5b9a\u4e49\u7684 HsvEvaluator\n                animator.setInterpolator(new LinearInterpolator());\n                animator.setDuration(2000);\n                animator.start();\n            }\n        });\n    }", "url": "https://raw.githubusercontent.com/Geekholt/Practice-CustomView/master/app/src/main/java/com/geekholt/practiceui/view/lesson6/practice02/Practice02HsvEvaluatorLayout.java", "stars": "2", "class_props": {"extends": "RelativeLayout", "implements": null, "modifiers": ["public"]}}, {"id": 63358, "method_name": "evaluate", "class_name": "HsvEvaluator", "params": ["float", "Integer", "Integer"], "throws": null, "modifiers": ["public"], "return_type": "Integer", "snippet": "        public Integer evaluate(float fraction, Integer startValue, Integer endValue) {\n            // \u628a ARGB \u8f6c\u6362\u6210 HSV\n            Color.colorToHSV(startValue, startHsv);\n            Color.colorToHSV(endValue, endHsv);\n\n            // \u8ba1\u7b97\u5f53\u524d\u52a8\u753b\u5b8c\u6210\u5ea6\uff08fraction\uff09\u6240\u5bf9\u5e94\u7684\u989c\u8272\u503c\n            if (endHsv[0] - startHsv[0] > 180) {\n                endHsv[0] -= 360;\n            } else if (endHsv[0] - startHsv[0] < -180) {\n                endHsv[0] += 360;\n            }\n            outHsv[0] = startHsv[0] + (endHsv[0] - startHsv[0]) * fraction;\n            if (outHsv[0] > 360) {\n                outHsv[0] -= 360;\n            } else if (outHsv[0] < 0) {\n                outHsv[0] += 360;\n            }\n            outHsv[1] = startHsv[1] + (endHsv[1] - startHsv[1]) * fraction;\n            outHsv[2] = startHsv[2] + (endHsv[2] - startHsv[2]) * fraction;\n\n            // \u8ba1\u7b97\u5f53\u524d\u52a8\u753b\u5b8c\u6210\u5ea6\uff08fraction\uff09\u6240\u5bf9\u5e94\u7684\u900f\u660e\u5ea6\n            int alpha = startValue >> 24 + (int) ((endValue >> 24 - startValue >> 24) * fraction);\n\n            // \u628a HSV \u8f6c\u6362\u56de ARGB \u8fd4\u56de\n            return Color.HSVToColor(alpha, outHsv);\n        }", "url": "https://raw.githubusercontent.com/Geekholt/Practice-CustomView/master/app/src/main/java/com/geekholt/practiceui/view/lesson6/practice02/Practice02HsvEvaluatorLayout.java", "stars": "2", "class_props": {"extends": null, "implements": ["TypeEvaluator"], "modifiers": ["private"]}}, {"id": 63359, "method_name": "test", "class_name": "day16ajio", "params": [], "throws": ["InterruptedException"], "modifiers": ["public"], "return_type": "void", "snippet": "public void test() throws InterruptedException\n{\n\t//www.ajio.com/shop/sale\n\tSystem.setProperty(\"webdriver.chrome.driver\", \"./drivers/chromedriver_win32/chromedriver.exe\");\n\tChromeOptions option=new ChromeOptions(); \n\toption.addArguments(\"--disable-notifications\"); \n\tChromeDriver driver =new ChromeDriver(option);\n\tdriver.get(\"https://www.ajio.com/shop/sale\");\n\t\n\tdriver.manage().window().maximize();\n\tdriver.manage().timeouts().implicitlyWait(30, TimeUnit.SECONDS);\n\tWebDriverWait wait=new WebDriverWait(driver,30);\n\t\n\t\n\t\n\t//2) Enter Bags in the Search field and Select Bags in Women Handbags\n\tdriver.findElementByXPath(\"//input[@name='searchVal']\").sendKeys(\"Bags\");\n\tThread.sleep(1000);\n\tdriver.findElementByXPath(\"//span[text()='Bags in ']/following-sibling::span[text()='Women Handbags']\").click();\n\t\n\t//3) Click on five grid and Select SORT BY as \"What's New\"\n\tdriver.findElementByClassName(\"five-grid\").click();\n\tSelect sort=new Select(driver.findElementByTagName(\"Select\"));\n\tsort.selectByVisibleText(\"What's New\");\n\t\n\t//4) Enter Price Range Min as 2000 and Max as 5000\n\twait.until(ExpectedConditions.elementToBeClickable(driver.findElementByXPath(\"//span[@class='facet-left-pane-label' and text()='price']\")));\n\tThread.sleep(1000);\n\tdriver.findElementByXPath(\"//span[@class='facet-left-pane-label' and text()='price']\").click();\n\tdriver.findElementById(\"minPrice\").sendKeys(\"2000\");\n\tdriver.findElementById(\"maxPrice\").sendKeys(\"5000\");\n\tdriver.findElementByXPath(\"//div[@class='facet-min-price-filter']//button[@type='submit']\").click();\n\twait.until(ExpectedConditions.visibilityOf(driver.findElementByXPath(\"//span[@class='pull-left' and text()='Rs.2000 - Rs.5000']\")));\n\t\n\tif (driver.findElementByXPath(\"//span[@class='pull-left' and text()='Rs.2000 - Rs.5000']\").isDisplayed())\n\t{\n\t\tSystem.out.println(\"The price filter is applied successfully\");\n\t}\n\t\n\t//5) Click on the product \"Puma Ferrari LS Shoulder Bag\"\n\twait.until(ExpectedConditions.elementToBeClickable(driver.findElementByXPath(\"//div[text()='Puma']/following-sibling::div[text()='Ferrari LS Shoulder Bag']\")));\n\tThread.sleep(1000);\n\tdriver.findElementByXPath(\"//div[text()='Puma']/following-sibling::div[text()='Ferrari LS Shoulder Bag']\").click();\n\t\n\tSet<String> windowHandles = driver.getWindowHandles();\n\tList<String> winList=new ArrayList<String>(windowHandles);\n\tdriver.switchTo().window(winList.get(winList.size()-1));\n\t\n\t//6) Verify the Coupon code for the price above 2690 is applicable for your product, if applicable the get the Coupon Code and Calculate the discount price for the coupon\n\tint sp = Integer.parseInt(driver.findElementByClassName(\"prod-sp\").getText().replaceAll(\"\\\\D\", \"\"));\n\tString couponCode = null;\n\tint actualDiscount = 0;\n\tif(sp>2690)\n\t{\n\t    String[] split = driver.findElementByClassName(\"promo-title\").getText().split(\"\\\\s+\"); //to split based on multiple space\n\t    couponCode=split[split.length-1];\n\t\tSystem.out.println(\"The applicable coupon code is \"+couponCode);\n\t\tint discountPrice=Integer.parseInt(driver.findElementByXPath(\"//div[@class='promo-discounted-price']//span\").getText().replaceAll(\"\\\\D\", \"\"));\n\t\t\n\t    actualDiscount=sp-discountPrice;\n\t\tSystem.out.println(\"The actual discounted amount is \"+ actualDiscount);\n\t\t\n\t}\n\t//7) Check the availability of the product for pincode 560043, print the expected delivery date if it is available\n\tdriver.findElementByXPath(\"//div[@id='edd']//span[contains(text(),'Enter pin-code')]\").click();\n\tdriver.findElementByName(\"pincode\").sendKeys(\"635001\");\n\tdriver.findElementByClassName(\"edd-pincode-modal-submit-btn\").click();\n\t\n\tif(driver.findElementByClassName(\"edd-message-success-details\").isDisplayed())\n\t{\n\t\tSystem.out.println(\"Ajio delivers to given pincode\");\n\t}\n\telse\n\t{\n\t\tSystem.out.println(\"Ajio doesn't deliver to this pincode\");\n\t}\n\t//8) Click on Other Informations under Product Details and Print the Customer Care address, phone and email\n\tdriver.findElementByClassName(\"other-info-toggle\").click();\n\tString text = driver.findElementByXPath(\"(//span[text()='Customer Care Address']//following::span[@class='other-info'])[1]\").getText();\n    System.out.println(\"The Customer Care Address,phone and email is \" +text);\n    \n\t\n\t//9) Click on ADD TO BAG and then GO TO BAG\n    driver.findElementByXPath(\"//span[text()='ADD TO BAG']\").click();\n    Thread.sleep(2000);\n    wait.until(ExpectedConditions.elementToBeClickable(driver.findElementByXPath(\"//div[@class='ic-cart ']\")));\n    driver.findElementByXPath(\"//div[@class='ic-cart ']\").click();\n    \n\t//10) Check the Order Total before apply coupon\n    String OrderTotal = driver.findElementByXPath(\"//section[@id='orderTotal']//span[@class='price-value bold-font']\").getText();\n    int OrderTotalint =Integer.parseInt(OrderTotal.substring(0,OrderTotal.length()-3).replaceAll(\"\\\\D\", \"\"));  \n    \n\t//11) Enter Coupon Code and Click Apply\n    driver.findElementById(\"couponCodeInput\").sendKeys(couponCode);\n    driver.findElementByXPath(\"//button[text()='Apply']\").click();\n    \n\t//12) Verify the Coupon Savings amount(round off if it in decimal) under Order Summary and the matches the amount calculated in Product details\n    Float savingsAmount =Float.parseFloat(driver.findElementByXPath(\"//span[text()='Coupon savings']/following-sibling::span\").getText().replaceAll(\"[^0-9.]\", \"\").substring(1));\n    int roundedOffSavingAmt = Math.round(savingsAmount);\n    System.out.println(\"The roundedOff savings amount is \"+roundedOffSavingAmt);\n    \n    if(actualDiscount==roundedOffSavingAmt)\n    {\n    \tSystem.out.println(\"The savings Amount is verified\");\n    }\n    else\n    {\n    \tSystem.out.println(\"The savings amount doesn't match\");\n    }\n\t//13) Click on Delete and Delete the item from Bag\n    driver.findElementByClassName(\"delete-btn\").click();\n    driver.findElementByXPath(\"//div[text()='DELETE']\").click();\n    if(driver.findElementByClassName(\"empty-msg\").isDisplayed())\n    {\n    \tSystem.out.println(\"The product is deleted successfully\");\n    }\n    \n\t//14) Close all the browsers\n    driver.quit();\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\n}", "url": "https://raw.githubusercontent.com/SudhaM-SeleniumCoding/Learnings/master/day16ajio.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 63360, "method_name": "getRotations", "class_name": "AngleUtil", "params": ["Entity"], "throws": null, "modifiers": ["public", "static"], "return_type": "float", "snippet": "    public static float[] getRotations(Entity ent) {\n        double x = ent.posX;\n        double z = ent.posZ;\n        double y = ent.getEntityBoundingBox().maxY - 4.0;\n        return getRotationFromPosition(x, z, y);\n    }", "url": "https://raw.githubusercontent.com/Crystallinqq/Mercury-Client/master/src/main/java/fail/mercury/client/api/util/AngleUtil.java", "stars": "12", "class_props": {"extends": null, "implements": ["Util"], "modifiers": ["public"]}}, {"id": 63361, "method_name": "getRotationFromPosition", "class_name": "AngleUtil", "params": ["double", "double", "double"], "throws": null, "modifiers": ["public", "static"], "return_type": "float", "snippet": "    public static float[] getRotationFromPosition(double x, double z, double y) {\n        double xDiff = x - Minecraft.getMinecraft().player.posX;\n        double zDiff = z - Minecraft.getMinecraft().player.posZ;\n        double yDiff = y - Minecraft.getMinecraft().player.posY;\n        double hypotenuse = Math.hypot(xDiff, zDiff);\n        float yaw = (float)(Math.atan2(zDiff, xDiff) * 180.0 / Math.PI) - 90.0f;\n        float pitch = (float)(-Math.atan2(yDiff, hypotenuse) * 180.0 / Math.PI);\n        return new float[]{yaw, pitch};\n    }", "url": "https://raw.githubusercontent.com/Crystallinqq/Mercury-Client/master/src/main/java/fail/mercury/client/api/util/AngleUtil.java", "stars": "12", "class_props": {"extends": null, "implements": ["Util"], "modifiers": ["public"]}}, {"id": 63362, "method_name": "getRotationFromPosition", "class_name": "AngleUtil", "params": ["BlockPos"], "throws": null, "modifiers": ["public", "static"], "return_type": "float", "snippet": "    public static float[] getRotationFromPosition(BlockPos pos) {\n        double xDiff = pos.getX() - Minecraft.getMinecraft().player.posX;\n        double zDiff = pos.getZ() - Minecraft.getMinecraft().player.posZ;\n        double yDiff = pos.getY() - Minecraft.getMinecraft().player.posY;\n        double hypotenuse = Math.hypot(xDiff, zDiff);\n        float yaw = (float)(Math.atan2(zDiff, xDiff) * 180.0 / Math.PI) - 90.0f;\n        float pitch = (float)(-Math.atan2(yDiff, hypotenuse) * 180.0 / Math.PI);\n        return new float[]{yaw, pitch};\n    }", "url": "https://raw.githubusercontent.com/Crystallinqq/Mercury-Client/master/src/main/java/fail/mercury/client/api/util/AngleUtil.java", "stars": "12", "class_props": {"extends": null, "implements": ["Util"], "modifiers": ["public"]}}, {"id": 63363, "method_name": "resolveBestHitVec", "class_name": "AngleUtil", "params": ["Entity", "int", "boolean"], "throws": null, "modifiers": ["public", "static"], "return_type": "Vec3d", "snippet": "    public static Vec3d resolveBestHitVec(Entity entity, int precision, boolean evadeBlocks) {\n\n        try {\n            Vec3d headVec = mc.player.getPositionEyes(1.0f);\n            Vec3d bestHitVec = new Vec3d(Double.MAX_VALUE, Double.MAX_VALUE, Double.MAX_VALUE);\n            Vec3d interpolated = MathUtil.interpolateEntity(entity, mc.getRenderPartialTicks());\n\n            int offset = precision / 3;\n\n            float height = entity.getEyeHeight() / precision;\n            float width = (entity.width * 0.5f) / offset;\n\n            for (int offsetY = 0; offsetY <= precision; offsetY++) {\n                for (int offsetX = -offset; offsetX <= offset; offsetX++) {\n                    for (int offsetZ = -offset; offsetZ <= offset; offsetZ++) {\n                        Vec3d possibleVec = new Vec3d(interpolated.x + width * offsetX, interpolated.y + height * offsetY,\n                                interpolated.z + width * offsetZ);\n\n                        if (evadeBlocks) {\n                            RayTraceResult result = mc.player.getEntityWorld().rayTraceBlocks(headVec,\n                                    possibleVec);\n\n                            if(result != null) {\n                                continue;\n                            }\n\n                        }\n                        if (headVec.distanceTo(possibleVec) < headVec.distanceTo(bestHitVec)) {\n                            bestHitVec = possibleVec;\n                        }\n                    }\n                }\n            }\n\n            if (bestHitVec.x == Double.MAX_VALUE) {\n                bestHitVec = null;\n            }\n\n            return bestHitVec;\n        } catch (Throwable t) {\n            t.printStackTrace();\n            return entity.getPositionVector();\n        }\n    }", "url": "https://raw.githubusercontent.com/Crystallinqq/Mercury-Client/master/src/main/java/fail/mercury/client/api/util/AngleUtil.java", "stars": "12", "class_props": {"extends": null, "implements": ["Util"], "modifiers": ["public"]}}, {"id": 63364, "method_name": "rayTrace", "class_name": "AngleUtil", "params": ["float", "float", "double"], "throws": null, "modifiers": ["public", "static"], "return_type": "Entity", "snippet": "    public static Entity rayTrace(float yaw, float pitch, double range) {\n        Entity entity = mc.getRenderViewEntity();\n\n        if (entity != null && mc.world != null) {\n            mc.pointedEntity = null;\n            double d0 = range;\n            float partialTicks = 1.0F;\n            mc.objectMouseOver = entity.rayTrace(d0, partialTicks);\n            double d1 = d0;\n            Vec3d vec3d = entity.getPositionEyes(partialTicks);\n\n            Vec3d vec31 = mc.player.getVectorForRotation(pitch, yaw);\n            Vec3d vec32 = vec3d.addVector(vec31.x * d0, vec31.y * d0, vec31.z * d0);\n            Entity pointedEntity = null;\n            Vec3d vec33 = null;\n            float f = 1.0F;\n            List list = mc.world.getEntitiesInAABBexcluding(entity,\n                    entity.getEntityBoundingBox().expand(vec31.x * d0, vec31.y * d0, vec31.z * d0)\n                            .expand( f, f, f),\n                    Predicates.and(EntitySelectors.NOT_SPECTATING, p_apply_1_ -> p_apply_1_ != null && p_apply_1_.canBeCollidedWith()));\n            double d2 = d1;\n\n            for (int i = 0; i < list.size(); ++i) {\n                Entity entity1 = (Entity) list.get(i);\n                float f1 = entity1.getCollisionBorderSize();\n                AxisAlignedBB axisalignedbb = entity1.getEntityBoundingBox().expand( f1,  f1, f1);\n                RayTraceResult raytraceresult = axisalignedbb.calculateIntercept(vec3d, vec32);\n\n                if (axisalignedbb.intersects(vec3d, vec32)) {\n                    if (d2 >= 0.0D) {\n                        pointedEntity = entity1;\n                        vec33 = raytraceresult == null ? vec3d : raytraceresult.hitVec;\n                        d2 = 0.0D;\n                    }\n                } else if (raytraceresult != null) {\n                    double d3 = vec3d.distanceTo(raytraceresult.hitVec);\n                    if (d3 < d2 || d2 == 0.0D) {\n                        if (entity1.getLowestRidingEntity() == entity.getLowestRidingEntity() && !entity1.canRiderInteract()) {\n                            if (d2 == 0.0D) {\n                                pointedEntity = entity1;\n                                vec3d = raytraceresult.hitVec;\n                            }\n                        } else {\n                            pointedEntity = entity1;\n                            vec3d = raytraceresult.hitVec;\n                            d2 = d3;\n                        }\n                    }\n                }\n            }\n\n            if (pointedEntity != null && (d2 < d1 || mc.objectMouseOver == null)) {\n                mc.objectMouseOver = new RayTraceResult(pointedEntity, vec33);\n\n                if (pointedEntity instanceof EntityLivingBase || pointedEntity instanceof EntityItemFrame) {\n                    return pointedEntity;\n                }\n            }\n        }\n        return null;\n    }", "url": "https://raw.githubusercontent.com/Crystallinqq/Mercury-Client/master/src/main/java/fail/mercury/client/api/util/AngleUtil.java", "stars": "12", "class_props": {"extends": null, "implements": ["Util"], "modifiers": ["public"]}}, {"id": 63365, "method_name": "getAngleDifference", "class_name": "AngleUtil", "params": ["float", "float"], "throws": null, "modifiers": ["public", "static"], "return_type": "float", "snippet": "    public static float getAngleDifference(float direction, float rotationYaw) {\n        float phi = Math.abs(rotationYaw - direction) % 360.0f;\n        return (phi > 180.0f) ? (360.0f - phi) : phi;\n    }", "url": "https://raw.githubusercontent.com/Crystallinqq/Mercury-Client/master/src/main/java/fail/mercury/client/api/util/AngleUtil.java", "stars": "12", "class_props": {"extends": null, "implements": ["Util"], "modifiers": ["public"]}}, {"id": 63366, "method_name": "isEntityInFov", "class_name": "AngleUtil", "params": ["EntityLivingBase", "double"], "throws": null, "modifiers": ["public", "static"], "return_type": "boolean", "snippet": "    public static boolean isEntityInFov(EntityLivingBase entity, double angle) {\n        return getAngleDifference(mc.player.rotationYaw, AngleUtil.getRotations(entity)[0]) < angle;\n    }", "url": "https://raw.githubusercontent.com/Crystallinqq/Mercury-Client/master/src/main/java/fail/mercury/client/api/util/AngleUtil.java", "stars": "12", "class_props": {"extends": null, "implements": ["Util"], "modifiers": ["public"]}}, {"id": 63367, "method_name": "archives", "class_name": "ContentArchivesController", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String archives() {\n\n        return BASE_DIR + \"archives\";\n    }", "url": "https://raw.githubusercontent.com/rubywooJ/beyond/master/src/main/java/cn/tsxygfy/beyond/controller/ContentArchivesController.java", "stars": "1", "class_props": {"extends": "ContentBaseController", "implements": null, "modifiers": ["public"]}}, {"id": 63368, "method_name": "showOne", "class_name": "ContentArchivesController", "params": ["String", "Model", "HttpServletResponse"], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String showOne(@PathVariable String title, Model model, HttpServletResponse response) {\n        ArticleTagsVO vo = articleService.findArticleWithTagsByTitle(title);\n        // TODO \u4e0b\u4e2a\u7248\u672c\u4f18\u5316\u5904\u7406404\u903b\u8f91\n        if (vo == null) {\n            response.setStatus(HttpStatus.NOT_FOUND.value());\n            return BASE_DIR + \"404\";\n        }\n        model.addAttribute(\"post\", vo);\n        return BASE_DIR + \"post\";\n    }", "url": "https://raw.githubusercontent.com/rubywooJ/beyond/master/src/main/java/cn/tsxygfy/beyond/controller/ContentArchivesController.java", "stars": "1", "class_props": {"extends": "ContentBaseController", "implements": null, "modifiers": ["public"]}}, {"id": 63369, "method_name": "Update", "class_name": "Animator", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void Update() {\n\t\tif(activeAnimation != null) \n\t\t\tactiveAnimation.Update();\n\t}", "url": "https://raw.githubusercontent.com/jabo-bernardo/Kree-Java/master/src/dev/jabo/kree/components/Animator.java", "stars": "33", "class_props": {"extends": "Component", "implements": null, "modifiers": ["public"]}}, {"id": 63370, "method_name": "Render", "class_name": "Animator", "params": ["Graphics"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void Render(Graphics g) {\n\t\tif(activeAnimation != null) {\n\t\t\tg.drawImage(activeAnimation.getCurrentFrame(), gameObject.getTransform().getPosition().getX(), gameObject.getTransform().getPosition().getY(), gameObject.getTransform().getScale().getX(), gameObject.getTransform().getScale().getY(), null);\n\t\t}\n\t}", "url": "https://raw.githubusercontent.com/jabo-bernardo/Kree-Java/master/src/dev/jabo/kree/components/Animator.java", "stars": "33", "class_props": {"extends": "Component", "implements": null, "modifiers": ["public"]}}, {"id": 63371, "method_name": "setActiveAnimation", "class_name": "Animator", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void setActiveAnimation(String name) {\n\t\tfor(Animation anim : allAnimation) {\n\t\t\tif(anim.getAnimationName() == name) {\n\t\t\t\tactiveAnimation = anim;\n\t\t\t}\n\t\t}\n\t}", "url": "https://raw.githubusercontent.com/jabo-bernardo/Kree-Java/master/src/dev/jabo/kree/components/Animator.java", "stars": "33", "class_props": {"extends": "Component", "implements": null, "modifiers": ["public"]}}, {"id": 63372, "method_name": "getId", "class_name": "\ubc30\ub2ec\uc2dc\uc791\ub428", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Long", "snippet": "    public Long getId() {\n        return id;\n    }", "url": "https://raw.githubusercontent.com/msa-ez/example-food-delivery/master/store/src/main/java/fooddelivery/%EB%B0%B0%EB%8B%AC%EC%8B%9C%EC%9E%91%EB%90%A8.java", "stars": "13", "class_props": {"extends": "AbstractEvent", "implements": null, "modifiers": ["public"]}}, {"id": 63373, "method_name": "setId", "class_name": "\ubc30\ub2ec\uc2dc\uc791\ub428", "params": ["Long"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setId(Long id) {\n        this.id = id;\n    }", "url": "https://raw.githubusercontent.com/msa-ez/example-food-delivery/master/store/src/main/java/fooddelivery/%EB%B0%B0%EB%8B%AC%EC%8B%9C%EC%9E%91%EB%90%A8.java", "stars": "13", "class_props": {"extends": "AbstractEvent", "implements": null, "modifiers": ["public"]}}, {"id": 63374, "method_name": "get\uc694\ub9ac\uc885\ub958", "class_name": "\ubc30\ub2ec\uc2dc\uc791\ub428", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String get\uc694\ub9ac\uc885\ub958() {\n        return \uc694\ub9ac\uc885\ub958;\n    }", "url": "https://raw.githubusercontent.com/msa-ez/example-food-delivery/master/store/src/main/java/fooddelivery/%EB%B0%B0%EB%8B%AC%EC%8B%9C%EC%9E%91%EB%90%A8.java", "stars": "13", "class_props": {"extends": "AbstractEvent", "implements": null, "modifiers": ["public"]}}, {"id": 63375, "method_name": "set\uc694\ub9ac\uc885\ub958", "class_name": "\ubc30\ub2ec\uc2dc\uc791\ub428", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void set\uc694\ub9ac\uc885\ub958(String \uc694\ub9ac\uc885\ub958) {\n        this.\uc694\ub9ac\uc885\ub958 = \uc694\ub9ac\uc885\ub958;\n    }", "url": "https://raw.githubusercontent.com/msa-ez/example-food-delivery/master/store/src/main/java/fooddelivery/%EB%B0%B0%EB%8B%AC%EC%8B%9C%EC%9E%91%EB%90%A8.java", "stars": "13", "class_props": {"extends": "AbstractEvent", "implements": null, "modifiers": ["public"]}}, {"id": 63376, "method_name": "get\ubc30\ub2ec\uc9c0\uc8fc\uc18c", "class_name": "\ubc30\ub2ec\uc2dc\uc791\ub428", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String get\ubc30\ub2ec\uc9c0\uc8fc\uc18c() {\n        return \ubc30\ub2ec\uc9c0\uc8fc\uc18c;\n    }", "url": "https://raw.githubusercontent.com/msa-ez/example-food-delivery/master/store/src/main/java/fooddelivery/%EB%B0%B0%EB%8B%AC%EC%8B%9C%EC%9E%91%EB%90%A8.java", "stars": "13", "class_props": {"extends": "AbstractEvent", "implements": null, "modifiers": ["public"]}}, {"id": 63377, "method_name": "set\ubc30\ub2ec\uc9c0\uc8fc\uc18c", "class_name": "\ubc30\ub2ec\uc2dc\uc791\ub428", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void set\ubc30\ub2ec\uc9c0\uc8fc\uc18c(String \ubc30\ub2ec\uc9c0\uc8fc\uc18c) {\n        this.\ubc30\ub2ec\uc9c0\uc8fc\uc18c = \ubc30\ub2ec\uc9c0\uc8fc\uc18c;\n    }", "url": "https://raw.githubusercontent.com/msa-ez/example-food-delivery/master/store/src/main/java/fooddelivery/%EB%B0%B0%EB%8B%AC%EC%8B%9C%EC%9E%91%EB%90%A8.java", "stars": "13", "class_props": {"extends": "AbstractEvent", "implements": null, "modifiers": ["public"]}}, {"id": 63378, "method_name": "getOrderId", "class_name": "\ubc30\ub2ec\uc2dc\uc791\ub428", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getOrderId() {\n        return orderId;\n    }", "url": "https://raw.githubusercontent.com/msa-ez/example-food-delivery/master/store/src/main/java/fooddelivery/%EB%B0%B0%EB%8B%AC%EC%8B%9C%EC%9E%91%EB%90%A8.java", "stars": "13", "class_props": {"extends": "AbstractEvent", "implements": null, "modifiers": ["public"]}}, {"id": 63379, "method_name": "setOrderId", "class_name": "\ubc30\ub2ec\uc2dc\uc791\ub428", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setOrderId(String orderId) {\n        this.orderId = orderId;\n    }", "url": "https://raw.githubusercontent.com/msa-ez/example-food-delivery/master/store/src/main/java/fooddelivery/%EB%B0%B0%EB%8B%AC%EC%8B%9C%EC%9E%91%EB%90%A8.java", "stars": "13", "class_props": {"extends": "AbstractEvent", "implements": null, "modifiers": ["public"]}}, {"id": 63380, "method_name": "initElements", "class_name": "SandRippleBlock", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void initElements() {\n\t\telements.blocks.add(() -> new CustomBlock());\n\t\telements.items\n\t\t\t\t.add(() -> new BlockItem(block, new Item.Properties().group(ItemGroup.BUILDING_BLOCKS)).setRegistryName(block.getRegistryName()));\n\t}", "url": "https://raw.githubusercontent.com/KarogathModdingStudios/Enhanced-Vanilla-1.15/master/src/main/java/com/karogath/enhancedvanilla/block/SandRippleBlock.java", "stars": "2", "class_props": {"extends": "EnhancedVanillaElements", "implements": null, "modifiers": ["public"]}}, {"id": 63381, "method_name": "init", "class_name": "SandRippleBlock", "params": ["FMLCommonSetupEvent"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void init(FMLCommonSetupEvent event) {\n\t\tfor (Biome biome : ForgeRegistries.BIOMES.getValues()) {\n\t\t\tboolean biomeCriteria = false;\n\t\t\tif (ForgeRegistries.BIOMES.getKey(biome).equals(new ResourceLocation(\"desert\")))\n\t\t\t\tbiomeCriteria = true;\n\t\t\tif (ForgeRegistries.BIOMES.getKey(biome).equals(new ResourceLocation(\"desert_hills\")))\n\t\t\t\tbiomeCriteria = true;\n\t\t\tif (ForgeRegistries.BIOMES.getKey(biome).equals(new ResourceLocation(\"desert_lakes\")))\n\t\t\t\tbiomeCriteria = true;\n\t\t\tif (!biomeCriteria)\n\t\t\t\tcontinue;\n\t\t\tbiome.addFeature(GenerationStage.Decoration.UNDERGROUND_ORES, new OreFeature(OreFeatureConfig::deserialize) {\n\t\t\t\t@Override\n\t\t\t\tpublic boolean place(IWorld world, ChunkGenerator generator, Random rand, BlockPos pos, OreFeatureConfig config) {\n\t\t\t\t\tDimensionType dimensionType = world.getDimension().getType();\n\t\t\t\t\tboolean dimensionCriteria = false;\n\t\t\t\t\tif (dimensionType == DimensionType.OVERWORLD)\n\t\t\t\t\t\tdimensionCriteria = true;\n\t\t\t\t\tif (!dimensionCriteria)\n\t\t\t\t\t\treturn false;\n\t\t\t\t\treturn super.place(world, generator, rand, pos, config);\n\t\t\t\t}\n\t\t\t}.withConfiguration(new OreFeatureConfig(OreFeatureConfig.FillerBlockType.create(\"sandripple\", \"sandripple\", blockAt -> {\n\t\t\t\tboolean blockCriteria = false;\n\t\t\t\tif (blockAt.getBlock() == Blocks.SAND.getDefaultState().getBlock())\n\t\t\t\t\tblockCriteria = true;\n\t\t\t\treturn blockCriteria;\n\t\t\t}), block.getDefaultState(), 32)).withPlacement(Placement.COUNT_RANGE.configure(new CountRangeConfig(32, 0, 0, 256))));\n\t\t}\n\t}", "url": "https://raw.githubusercontent.com/KarogathModdingStudios/Enhanced-Vanilla-1.15/master/src/main/java/com/karogath/enhancedvanilla/block/SandRippleBlock.java", "stars": "2", "class_props": {"extends": "EnhancedVanillaElements", "implements": null, "modifiers": ["public"]}}, {"id": 63382, "method_name": "getDrops", "class_name": "CustomBlock", "params": ["BlockState", "LootContext"], "throws": null, "modifiers": ["public"], "return_type": "List<ItemStack>", "snippet": "\t\tpublic List<ItemStack> getDrops(BlockState state, LootContext.Builder builder) {\n\t\t\tList<ItemStack> dropsOriginal = super.getDrops(state, builder);\n\t\t\tif (!dropsOriginal.isEmpty())\n\t\t\t\treturn dropsOriginal;\n\t\t\treturn Collections.singletonList(new ItemStack(this, 1));\n\t\t}", "url": "https://raw.githubusercontent.com/KarogathModdingStudios/Enhanced-Vanilla-1.15/master/src/main/java/com/karogath/enhancedvanilla/block/SandRippleBlock.java", "stars": "2", "class_props": {"extends": "FallingBlock", "implements": null, "modifiers": ["public", "static"]}}, {"id": 63383, "method_name": "initDatabase", "class_name": "BlobTest", "params": [], "throws": ["Exception"], "modifiers": ["static"], "return_type": "void", "snippet": "    static void initDatabase() throws Exception {\n        try (Reader reader = Resources.getResourceAsReader(\"org/apache/ibatis/submitted/blobtest/MapperConfig.xml\")) {\n            sqlSessionFactory = new SqlSessionFactoryBuilder().build(reader);\n        }\n\n        BaseDataTest.runScript(sqlSessionFactory.getConfiguration().getEnvironment().getDataSource(),\n                \"org/apache/ibatis/submitted/blobtest/CreateDB.sql\");\n    }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/blobtest/BlobTest.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 63384, "method_name": "testInsertBlobThenSelectAll", "class_name": "BlobTest", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "    void testInsertBlobThenSelectAll() {\n        try (SqlSession sqlSession = sqlSessionFactory.openSession()) {\n            BlobMapper blobMapper = sqlSession.getMapper(BlobMapper.class);\n\n            byte[] myblob = new byte[] {1, 2, 3, 4, 5};\n            BlobRecord blobRecord = new BlobRecord(1, myblob);\n            int rows = blobMapper.insert(blobRecord);\n            assertEquals(1, rows);\n\n            // NPE here due to unresolved type handler\n            List<BlobRecord> results = blobMapper.selectAll();\n\n            assertEquals(1, results.size());\n            BlobRecord result = results.get(0);\n            assertEquals (blobRecord.getId(), result.getId());\n            assertTrue (blobsAreEqual(blobRecord.getBlob(), result.getBlob()));\n        }\n    }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/blobtest/BlobTest.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 63385, "method_name": "testInsertBlobObjectsThenSelectAll", "class_name": "BlobTest", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "    void testInsertBlobObjectsThenSelectAll() {\n        try (SqlSession sqlSession = sqlSessionFactory.openSession()) {\n            BlobMapper blobMapper = sqlSession.getMapper(BlobMapper.class);\n\n            Byte[] myblob = new Byte[] {1, 2, 3, 4, 5};\n            BlobRecord blobRecord = new BlobRecord(1, myblob);\n            int rows = blobMapper.insert(blobRecord);\n            assertEquals(1, rows);\n\n            // NPE here due to unresolved type handler\n            List<BlobRecord> results = blobMapper.selectAllWithBlobObjects();\n\n            assertEquals(1, results.size());\n            BlobRecord result = results.get(0);\n            assertEquals (blobRecord.getId(), result.getId());\n            assertTrue (blobsAreEqual(blobRecord.getBlob(), result.getBlob()));\n        }\n    }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/blobtest/BlobTest.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 63386, "method_name": "blobsAreEqual", "class_name": "BlobTest", "params": ["byte", "byte"], "throws": null, "modifiers": ["static"], "return_type": "boolean", "snippet": "    static boolean blobsAreEqual(byte[] blob1, byte[] blob2) {\n        if (blob1 == null) {\n            return blob2 == null;\n        }\n\n        if (blob2 == null) {\n            return blob1 == null;\n        }\n\n        boolean rc = blob1.length == blob2.length;\n\n        if (rc) {\n            for (int i = 0; i < blob1.length; i++) {\n                if (blob1[i] != blob2[i]) {\n                    rc = false;\n                    break;\n                }\n            }\n        }\n\n        return rc;\n    }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/blobtest/BlobTest.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 63387, "method_name": "getTorrentOptions", "class_name": "TorrentService", "params": [], "throws": null, "modifiers": ["private"], "return_type": "TorrentOptions", "snippet": "    private TorrentOptions getTorrentOptions() {\n        return new TorrentOptions.Builder()\n                .saveLocation(PrefUtils.get(this, Prefs.STORAGE_LOCATION, ButterApplication.getStreamDir()))\n                .removeFilesAfterStop(true)\n                .maxConnections(PrefUtils.get(this, Prefs.LIBTORRENT_CONNECTION_LIMIT, 200))\n                .maxDownloadSpeed(PrefUtils.get(this, Prefs.LIBTORRENT_DOWNLOAD_LIMIT, 0))\n                .maxUploadSpeed(PrefUtils.get(this, Prefs.LIBTORRENT_UPLOAD_LIMIT, 0))\n                .build();\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/torrent/TorrentService.java", "stars": "4", "class_props": {"extends": "Service", "implements": ["TorrentServerListener"], "modifiers": ["public"]}}, {"id": 63388, "method_name": "onCreate", "class_name": "TorrentService", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onCreate() {\n        super.onCreate();\n        sThis = this;\n        Foreground.get().addListener(mForegroundListener);\n        mTorrentStreamServer = TorrentStreamServer.getInstance();\n        mTorrentStreamServer.setServerHost(NetworkUtils.getWifiIPAddress());\n        mTorrentStreamServer.setServerPort(Constants.SERVER_PORT);\n        mTorrentStreamServer.setTorrentOptions(getTorrentOptions());\n        mTorrentStreamServer.startTorrentStream();\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/torrent/TorrentService.java", "stars": "4", "class_props": {"extends": "Service", "implements": ["TorrentServerListener"], "modifiers": ["public"]}}, {"id": 63389, "method_name": "onDestroy", "class_name": "TorrentService", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onDestroy() {\n        super.onDestroy();\n        Timber.d(\"onDestroy\");\n        if (mWakeLock != null && mWakeLock.isHeld())\n            mWakeLock.release();\n        mTorrentStreamServer.stopTorrentStream();\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/torrent/TorrentService.java", "stars": "4", "class_props": {"extends": "Service", "implements": ["TorrentServerListener"], "modifiers": ["public"]}}, {"id": 63390, "method_name": "onStartCommand", "class_name": "TorrentService", "params": ["Intent", "int", "int"], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int onStartCommand(Intent intent, int flags, int startId) {\n        Timber.d(\"onStartCommand\");\n        return START_STICKY;\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/torrent/TorrentService.java", "stars": "4", "class_props": {"extends": "Service", "implements": ["TorrentServerListener"], "modifiers": ["public"]}}, {"id": 63391, "method_name": "onBind", "class_name": "TorrentService", "params": ["Intent"], "throws": null, "modifiers": ["public"], "return_type": "IBinder", "snippet": "    public IBinder onBind(Intent intent) {\n        Timber.d(\"onBind\");\n\n        if (mInForeground) {\n            stopForeground();\n        }\n\n        return mBinder;\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/torrent/TorrentService.java", "stars": "4", "class_props": {"extends": "Service", "implements": ["TorrentServerListener"], "modifiers": ["public"]}}, {"id": 63392, "method_name": "onRebind", "class_name": "TorrentService", "params": ["Intent"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onRebind(Intent intent) {\n        super.onRebind(intent);\n        Timber.d(\"onRebind\");\n\n        if (mInForeground) {\n            stopForeground();\n        }\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/torrent/TorrentService.java", "stars": "4", "class_props": {"extends": "Service", "implements": ["TorrentServerListener"], "modifiers": ["public"]}}, {"id": 63393, "method_name": "setCurrentActivity", "class_name": "TorrentService", "params": ["TorrentActivity"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setCurrentActivity(TorrentActivity activity) {\n        mCurrentActivityClass = activity.getClass();\n\n        if (mInForeground) {\n            stopForeground();\n            startForeground();\n        }\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/torrent/TorrentService.java", "stars": "4", "class_props": {"extends": "Service", "implements": ["TorrentServerListener"], "modifiers": ["public"]}}, {"id": 63394, "method_name": "startForeground", "class_name": "TorrentService", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void startForeground() {\n        if (Foreground.get().isForeground()) return;\n        if (mCurrentActivityClass == null) return;\n\n        Intent notificationIntent = new Intent(this, mCurrentActivityClass);\n        notificationIntent.setFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP | Intent.FLAG_ACTIVITY_SINGLE_TOP);\n        PendingIntent pendingIntent = PendingIntent.getActivity(this, 0, notificationIntent, 0);\n\n        Intent stopIntent = new Intent(this, TorrentBroadcastReceiver.class);\n        stopIntent.setAction(TorrentBroadcastReceiver.STOP);\n        PendingIntent pendingStopIntent = PendingIntent.getBroadcast(this, TorrentBroadcastReceiver.REQUEST_CODE, stopIntent, PendingIntent.FLAG_UPDATE_CURRENT);\n\n        NotificationCompat.Action stopAction = new NotificationCompat.Action.Builder(R.drawable.abc_ic_clear_material, getString(R.string.stop), pendingStopIntent).build();\n\n        NotificationCompat.Builder builder = new NotificationCompat.Builder(this, getPackageName())\n                .setSmallIcon(R.drawable.ic_video_white_24dp)\n                .setContentTitle(getString(R.string.app_name) + \" - \" + getString(R.string.running))\n                .setContentText(getString(R.string.tap_to_resume))\n                .setOngoing(true)\n                .setOnlyAlertOnce(true)\n                .setPriority(NotificationCompat.PRIORITY_HIGH)\n                .setContentIntent(pendingIntent)\n                .addAction(stopAction)\n                .setAutoCancel(true)\n                .setCategory(NotificationCompat.CATEGORY_SERVICE)\n                .setDefaults(Notification.DEFAULT_SOUND);\n\n        if (mStreamStatus != null && mIsReady) {\n            String downloadSpeed;\n            DecimalFormat df = new DecimalFormat(\"#############0.00\");\n            if (mStreamStatus.downloadSpeed / 1024 < 1000) {\n                downloadSpeed = df.format(mStreamStatus.downloadSpeed / 1024) + \" KB/s\";\n            } else {\n                downloadSpeed = df.format(mStreamStatus.downloadSpeed / (1024 * 1024)) + \" MB/s\";\n            }\n            String progress = df.format(mStreamStatus.progress);\n            builder.setContentText(progress + \"%, \u2193\" + downloadSpeed);\n        }\n\n        NotificationManager manager = (NotificationManager) getSystemService(Context.NOTIFICATION_SERVICE);\n\n        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.O) {\n            NotificationChannel chan = new NotificationChannel(getPackageName(), \"Torrent Download Progress\", NotificationManager.IMPORTANCE_HIGH);\n            chan.setLightColor(Color.BLUE);\n            chan.setLockscreenVisibility(Notification.VISIBILITY_PRIVATE);\n            manager.createNotificationChannel(chan);\n        }\n\n        Notification notification = builder.build();\n        manager.notify(NOTIFICATION_ID, notification);\n\n        startForeground(NOTIFICATION_ID, notification);\n\n        if (mUpdateTimer == null) {\n            mUpdateTimer = new Timer();\n            mUpdateTimer.scheduleAtFixedRate(new UpdateTask(), 5000, 5000);\n        }\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/torrent/TorrentService.java", "stars": "4", "class_props": {"extends": "Service", "implements": ["TorrentServerListener"], "modifiers": ["public"]}}, {"id": 63395, "method_name": "stopForeground", "class_name": "TorrentService", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void stopForeground() {\n        stopForeground(true);\n        if (mUpdateTimer != null) {\n            mUpdateTimer.cancel();\n            mUpdateTimer.purge();\n            mUpdateTimer = null;\n        }\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/torrent/TorrentService.java", "stars": "4", "class_props": {"extends": "Service", "implements": ["TorrentServerListener"], "modifiers": ["public"]}}, {"id": 63396, "method_name": "streamTorrent", "class_name": "TorrentService", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void streamTorrent(@NonNull final String torrentUrl) {\n        Timber.d(\"streamTorrent\");\n        mStopped = false;\n\n        if (mTorrentStreamServer.isStreaming()) return;\n\n        Timber.d(\"Starting streaming\");\n\n        PowerManager powerManager = (PowerManager) getSystemService(Context.POWER_SERVICE);\n        if (mWakeLock != null && mWakeLock.isHeld()) {\n            mWakeLock.release();\n            mWakeLock = null;\n        }\n        String WAKE_LOCK = \"PCT:TorrentService_WakeLock\";\n        mWakeLock = powerManager.newWakeLock(PowerManager.PARTIAL_WAKE_LOCK, WAKE_LOCK);\n        mWakeLock.acquire();\n\n        mTorrentStreamServer.setTorrentOptions(getTorrentOptions());\n\n        mIsReady = false;\n        mTorrentStreamServer.addListener(this);\n        try {\n            mTorrentStreamServer.startStream(torrentUrl);\n        } catch (IOException | TorrentStreamNotInitializedException e) {\n            Timber.e(\"Error occurred\", e);\n        }\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/torrent/TorrentService.java", "stars": "4", "class_props": {"extends": "Service", "implements": ["TorrentServerListener"], "modifiers": ["public"]}}, {"id": 63397, "method_name": "stopStreaming", "class_name": "TorrentService", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void stopStreaming() {\n        mStopped = true;\n        mTorrentStreamServer.removeListener(this);\n\n        if (mWakeLock != null && mWakeLock.isHeld())\n            mWakeLock.release();\n\n        if (!mTorrentStreamServer.isStreaming())\n            return;\n\n        stopForeground();\n\n        mTorrentStreamServer.stopStream();\n        mIsReady = false;\n\n        Timber.d(\"Stopped torrent and removed files if possible\");\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/torrent/TorrentService.java", "stars": "4", "class_props": {"extends": "Service", "implements": ["TorrentServerListener"], "modifiers": ["public"]}}, {"id": 63398, "method_name": "stopService", "class_name": "TorrentService", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void stopService() {\n        if (sThis.isStreaming()) {\n            sThis.stopStreaming();\n        } else {\n            sThis.stopForeground();\n        }\n\n        if (sThis.mContext != null) {\n            ((Activity) sThis.mContext).finish();\n        }\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/torrent/TorrentService.java", "stars": "4", "class_props": {"extends": "Service", "implements": ["TorrentServerListener"], "modifiers": ["public"]}}, {"id": 63399, "method_name": "isStreaming", "class_name": "TorrentService", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean isStreaming() {\n        return mTorrentStreamServer.isStreaming();\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/torrent/TorrentService.java", "stars": "4", "class_props": {"extends": "Service", "implements": ["TorrentServerListener"], "modifiers": ["public"]}}, {"id": 63400, "method_name": "isReady", "class_name": "TorrentService", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean isReady() {\n        return mIsReady;\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/torrent/TorrentService.java", "stars": "4", "class_props": {"extends": "Service", "implements": ["TorrentServerListener"], "modifiers": ["public"]}}, {"id": 63401, "method_name": "checkStopped", "class_name": "TorrentService", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean checkStopped() {\n        if (mStopped) {\n            mStopped = false;\n            return true;\n        }\n        return false;\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/torrent/TorrentService.java", "stars": "4", "class_props": {"extends": "Service", "implements": ["TorrentServerListener"], "modifiers": ["public"]}}, {"id": 63402, "method_name": "addListener", "class_name": "TorrentService", "params": ["TorrentServerListener"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void addListener(@NonNull TorrentServerListener listener) {\n        mListener.add(listener);\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/torrent/TorrentService.java", "stars": "4", "class_props": {"extends": "Service", "implements": ["TorrentServerListener"], "modifiers": ["public"]}}, {"id": 63403, "method_name": "removeListener", "class_name": "TorrentService", "params": ["TorrentServerListener"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void removeListener(@NonNull TorrentServerListener listener) {\n        mListener.remove(listener);\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/torrent/TorrentService.java", "stars": "4", "class_props": {"extends": "Service", "implements": ["TorrentServerListener"], "modifiers": ["public"]}}, {"id": 63404, "method_name": "bindHere", "class_name": "TorrentService", "params": ["Context", "ServiceConnection"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void bindHere(Context context, ServiceConnection serviceConnection) {\n        Intent torrentServiceIntent = new Intent(context, TorrentService.class);\n        context.bindService(torrentServiceIntent, serviceConnection, Context.BIND_AUTO_CREATE);\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/torrent/TorrentService.java", "stars": "4", "class_props": {"extends": "Service", "implements": ["TorrentServerListener"], "modifiers": ["public"]}}, {"id": 63405, "method_name": "start", "class_name": "TorrentService", "params": ["Context"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void start(Context context) {\n        Intent torrentServiceIntent = new Intent(context, TorrentService.class);\n        context.startService(torrentServiceIntent);\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/torrent/TorrentService.java", "stars": "4", "class_props": {"extends": "Service", "implements": ["TorrentServerListener"], "modifiers": ["public"]}}, {"id": 63406, "method_name": "stop", "class_name": "TorrentService", "params": [], "throws": null, "modifiers": ["static"], "return_type": "void", "snippet": "    static void stop() {\n        if (sThis.isStreaming()) {\n            sThis.stopStreaming();\n        } else {\n            sThis.stopForeground();\n        }\n\n        if (sThis.mContext != null) {\n            ((Activity) sThis.mContext).finish();\n        }\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/torrent/TorrentService.java", "stars": "4", "class_props": {"extends": "Service", "implements": ["TorrentServerListener"], "modifiers": ["public"]}}, {"id": 63407, "method_name": "setStreamLoadingActivityContext", "class_name": "TorrentService", "params": ["Context"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setStreamLoadingActivityContext(Context context) {\n        mContext = context;\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/torrent/TorrentService.java", "stars": "4", "class_props": {"extends": "Service", "implements": ["TorrentServerListener"], "modifiers": ["public"]}}, {"id": 63408, "method_name": "getCurrentTorrent", "class_name": "TorrentService", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Torrent", "snippet": "    public Torrent getCurrentTorrent() {\n        return mCurrentTorrent;\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/torrent/TorrentService.java", "stars": "4", "class_props": {"extends": "Service", "implements": ["TorrentServerListener"], "modifiers": ["public"]}}, {"id": 63409, "method_name": "getCurrentTorrentUrl", "class_name": "TorrentService", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getCurrentTorrentUrl() {\n        return mTorrentStreamServer.getCurrentTorrentUrl();\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/torrent/TorrentService.java", "stars": "4", "class_props": {"extends": "Service", "implements": ["TorrentServerListener"], "modifiers": ["public"]}}, {"id": 63410, "method_name": "getCurrentStreamUrl", "class_name": "TorrentService", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getCurrentStreamUrl() {\n        return mCurrentStreamUrl;\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/torrent/TorrentService.java", "stars": "4", "class_props": {"extends": "Service", "implements": ["TorrentServerListener"], "modifiers": ["public"]}}, {"id": 63411, "method_name": "onStreamPrepared", "class_name": "TorrentService", "params": ["Torrent"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onStreamPrepared(Torrent torrent) {\n        mCurrentTorrent = torrent;\n\n        for (TorrentServerListener listener : mListener) {\n            listener.onStreamPrepared(torrent);\n        }\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/torrent/TorrentService.java", "stars": "4", "class_props": {"extends": "Service", "implements": ["TorrentServerListener"], "modifiers": ["public"]}}, {"id": 63412, "method_name": "onStreamStarted", "class_name": "TorrentService", "params": ["Torrent"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onStreamStarted(Torrent torrent) {\n        for (TorrentServerListener listener : mListener) {\n            listener.onStreamStarted(torrent);\n        }\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/torrent/TorrentService.java", "stars": "4", "class_props": {"extends": "Service", "implements": ["TorrentServerListener"], "modifiers": ["public"]}}, {"id": 63413, "method_name": "onStreamError", "class_name": "TorrentService", "params": ["Torrent", "Exception"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onStreamError(Torrent torrent, Exception e) {\n        for (TorrentServerListener listener : mListener) {\n            listener.onStreamError(torrent, e);\n        }\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/torrent/TorrentService.java", "stars": "4", "class_props": {"extends": "Service", "implements": ["TorrentServerListener"], "modifiers": ["public"]}}, {"id": 63414, "method_name": "onStreamReady", "class_name": "TorrentService", "params": ["Torrent"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onStreamReady(Torrent torrent) {\n        mCurrentTorrent = torrent;\n\n        for (TorrentServerListener listener : mListener) {\n            listener.onStreamReady(torrent);\n        }\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/torrent/TorrentService.java", "stars": "4", "class_props": {"extends": "Service", "implements": ["TorrentServerListener"], "modifiers": ["public"]}}, {"id": 63415, "method_name": "onStreamProgress", "class_name": "TorrentService", "params": ["Torrent", "StreamStatus"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onStreamProgress(Torrent torrent, StreamStatus streamStatus) {\n        for (TorrentServerListener listener : mListener) {\n            if (null != listener) {\n                listener.onStreamProgress(torrent, streamStatus);\n            }\n        }\n\n        if (mInForeground) {\n            mStreamStatus = streamStatus;\n        }\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/torrent/TorrentService.java", "stars": "4", "class_props": {"extends": "Service", "implements": ["TorrentServerListener"], "modifiers": ["public"]}}, {"id": 63416, "method_name": "onStreamStopped", "class_name": "TorrentService", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onStreamStopped() {\n        for (TorrentServerListener listener : mListener) {\n            if (listener != null) {\n                listener.onStreamStopped();\n            }\n        }\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/torrent/TorrentService.java", "stars": "4", "class_props": {"extends": "Service", "implements": ["TorrentServerListener"], "modifiers": ["public"]}}, {"id": 63417, "method_name": "onServerReady", "class_name": "TorrentService", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onServerReady(String url) {\n        mIsReady = true;\n        mCurrentStreamUrl = url;\n\n        for (TorrentServerListener listener : mListener) {\n            if (listener != null) {\n                listener.onServerReady(url);\n            }\n        }\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/torrent/TorrentService.java", "stars": "4", "class_props": {"extends": "Service", "implements": ["TorrentServerListener"], "modifiers": ["public"]}}, {"id": 63418, "method_name": "getService", "class_name": "ServiceBinder", "params": [], "throws": null, "modifiers": ["public"], "return_type": "TorrentService", "snippet": "        public TorrentService getService() {\n            return TorrentService.this;\n        }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/torrent/TorrentService.java", "stars": "4", "class_props": {"extends": "Binder", "implements": null, "modifiers": ["public"]}}, {"id": 63419, "method_name": "run", "class_name": "UpdateTask", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "        public void run() {\n            if (mInForeground) {\n                startForeground();\n            } else {\n                stopForeground();\n            }\n        }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/torrent/TorrentService.java", "stars": "4", "class_props": {"extends": "TimerTask", "implements": null, "modifiers": ["private"]}}, {"id": 63420, "method_name": "getProperty", "class_name": "ParameterMapping", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "  public String getProperty() {\n    return property;\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/mapping/ParameterMapping.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 63421, "method_name": "getMode", "class_name": "ParameterMapping", "params": [], "throws": null, "modifiers": ["public"], "return_type": "ParameterMode", "snippet": "  public ParameterMode getMode() {\n    return mode;\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/mapping/ParameterMapping.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 63422, "method_name": "getJavaType", "class_name": "ParameterMapping", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Class<?>", "snippet": "  public Class<?> getJavaType() {\n    return javaType;\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/mapping/ParameterMapping.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 63423, "method_name": "getJdbcType", "class_name": "ParameterMapping", "params": [], "throws": null, "modifiers": ["public"], "return_type": "JdbcType", "snippet": "  public JdbcType getJdbcType() {\n    return jdbcType;\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/mapping/ParameterMapping.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 63424, "method_name": "getNumericScale", "class_name": "ParameterMapping", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Integer", "snippet": "  public Integer getNumericScale() {\n    return numericScale;\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/mapping/ParameterMapping.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 63425, "method_name": "getTypeHandler", "class_name": "ParameterMapping", "params": [], "throws": null, "modifiers": ["public"], "return_type": "TypeHandler<?>", "snippet": "  public TypeHandler<?> getTypeHandler() {\n    return typeHandler;\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/mapping/ParameterMapping.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 63426, "method_name": "getResultMapId", "class_name": "ParameterMapping", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "  public String getResultMapId() {\n    return resultMapId;\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/mapping/ParameterMapping.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 63427, "method_name": "getJdbcTypeName", "class_name": "ParameterMapping", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "  public String getJdbcTypeName() {\n    return jdbcTypeName;\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/mapping/ParameterMapping.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 63428, "method_name": "getExpression", "class_name": "ParameterMapping", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "  public String getExpression() {\n    return expression;\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/mapping/ParameterMapping.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 63429, "method_name": "toString", "class_name": "ParameterMapping", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "  public String toString() {\n    final StringBuilder sb = new StringBuilder(\"ParameterMapping{\");\n    //sb.append(\"configuration=\").append(configuration); // configuration doesn't have a useful .toString()\n    sb.append(\"property='\").append(property).append('\\'');\n    sb.append(\", mode=\").append(mode);\n    sb.append(\", javaType=\").append(javaType);\n    sb.append(\", jdbcType=\").append(jdbcType);\n    sb.append(\", numericScale=\").append(numericScale);\n    //sb.append(\", typeHandler=\").append(typeHandler); // typeHandler also doesn't have a useful .toString()\n    sb.append(\", resultMapId='\").append(resultMapId).append('\\'');\n    sb.append(\", jdbcTypeName='\").append(jdbcTypeName).append('\\'');\n    sb.append(\", expression='\").append(expression).append('\\'');\n    sb.append('}');\n    return sb.toString();\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/mapping/ParameterMapping.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 63430, "method_name": "mode", "class_name": "Builder", "params": ["ParameterMode"], "throws": null, "modifiers": ["public"], "return_type": "Builder", "snippet": "    public Builder mode(ParameterMode mode) {\n      parameterMapping.mode = mode;\n      return this;\n    }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/mapping/ParameterMapping.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "static"]}}, {"id": 63431, "method_name": "javaType", "class_name": "Builder", "params": ["Class<?>"], "throws": null, "modifiers": ["public"], "return_type": "Builder", "snippet": "    public Builder javaType(Class<?> javaType) {\n      parameterMapping.javaType = javaType;\n      return this;\n    }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/mapping/ParameterMapping.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "static"]}}, {"id": 63432, "method_name": "jdbcType", "class_name": "Builder", "params": ["JdbcType"], "throws": null, "modifiers": ["public"], "return_type": "Builder", "snippet": "    public Builder jdbcType(JdbcType jdbcType) {\n      parameterMapping.jdbcType = jdbcType;\n      return this;\n    }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/mapping/ParameterMapping.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "static"]}}, {"id": 63433, "method_name": "numericScale", "class_name": "Builder", "params": ["Integer"], "throws": null, "modifiers": ["public"], "return_type": "Builder", "snippet": "    public Builder numericScale(Integer numericScale) {\n      parameterMapping.numericScale = numericScale;\n      return this;\n    }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/mapping/ParameterMapping.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "static"]}}, {"id": 63434, "method_name": "resultMapId", "class_name": "Builder", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "Builder", "snippet": "    public Builder resultMapId(String resultMapId) {\n      parameterMapping.resultMapId = resultMapId;\n      return this;\n    }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/mapping/ParameterMapping.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "static"]}}, {"id": 63435, "method_name": "typeHandler", "class_name": "Builder", "params": ["TypeHandler<?>"], "throws": null, "modifiers": ["public"], "return_type": "Builder", "snippet": "    public Builder typeHandler(TypeHandler<?> typeHandler) {\n      parameterMapping.typeHandler = typeHandler;\n      return this;\n    }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/mapping/ParameterMapping.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "static"]}}, {"id": 63436, "method_name": "jdbcTypeName", "class_name": "Builder", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "Builder", "snippet": "    public Builder jdbcTypeName(String jdbcTypeName) {\n      parameterMapping.jdbcTypeName = jdbcTypeName;\n      return this;\n    }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/mapping/ParameterMapping.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "static"]}}, {"id": 63437, "method_name": "expression", "class_name": "Builder", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "Builder", "snippet": "    public Builder expression(String expression) {\n      parameterMapping.expression = expression;\n      return this;\n    }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/mapping/ParameterMapping.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "static"]}}, {"id": 63438, "method_name": "build", "class_name": "Builder", "params": [], "throws": null, "modifiers": ["public"], "return_type": "ParameterMapping", "snippet": "    public ParameterMapping build() {\n      resolveTypeHandler();\n      validate();\n      return parameterMapping;\n    }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/mapping/ParameterMapping.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "static"]}}, {"id": 63439, "method_name": "validate", "class_name": "Builder", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void validate() {\n      if (ResultSet.class.equals(parameterMapping.javaType)) {\n        if (parameterMapping.resultMapId == null) {\n          throw new IllegalStateException(\"Missing resultmap in property '\"\n              + parameterMapping.property + \"'.  \"\n              + \"Parameters of type java.sql.ResultSet require a resultmap.\");\n        }\n      } else {\n        if (parameterMapping.typeHandler == null) {\n          throw new IllegalStateException(\"Type handler was null on parameter mapping for property '\"\n            + parameterMapping.property + \"'. It was either not specified and/or could not be found for the javaType (\"\n            + parameterMapping.javaType.getName() + \") : jdbcType (\" + parameterMapping.jdbcType + \") combination.\");\n        }\n      }\n    }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/mapping/ParameterMapping.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "static"]}}, {"id": 63440, "method_name": "resolveTypeHandler", "class_name": "Builder", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void resolveTypeHandler() {\n      if (parameterMapping.typeHandler == null && parameterMapping.javaType != null) {\n        Configuration configuration = parameterMapping.configuration;\n        TypeHandlerRegistry typeHandlerRegistry = configuration.getTypeHandlerRegistry();\n        parameterMapping.typeHandler = typeHandlerRegistry.getTypeHandler(parameterMapping.javaType, parameterMapping.jdbcType);\n      }\n    }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/mapping/ParameterMapping.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "static"]}}, {"id": 63441, "method_name": "loadFileFromClasspath", "class_name": "ClasspathHelper", "params": ["String"], "throws": null, "modifiers": ["static"], "return_type": "String", "snippet": "    static String loadFileFromClasspath(String location) {\n\n        InputStream inputStream = ClasspathHelper.class.getResourceAsStream(location);\n\n        if (inputStream == null) {\n            inputStream = ClasspathHelper.class.getClassLoader().getResourceAsStream(location);\n        }\n\n        if (inputStream == null) {\n            inputStream = ClassLoader.getSystemResourceAsStream(location);\n        }\n\n        if (inputStream != null) {\n            try {\n                return IOUtils.toString(inputStream, Charset.defaultCharset());\n            } catch (IOException e) {\n                throw new RuntimeException(\"Could not read \" + location + \" from the classpath\", e);\n            }\n        }\n\n        throw new RuntimeException(\"Could not find \" + location + \" on the classpath\");\n    }", "url": "https://raw.githubusercontent.com/hvalls/vertx-asyncapi-contract/master/src/main/java/com/hvalls/vertx/asyncapi/ClasspathHelper.java", "stars": "9", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 63442, "method_name": "visit", "class_name": "AnnotationVisitor", "params": ["String", "Object"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void visit(final String name, final Object value) {\n    if (av != null) {\n      av.visit(name, value);\n    }\n  }", "url": "https://raw.githubusercontent.com/Sipkab/jvm-tail-recursion/master/src/sipka/jvm/tailrec/thirdparty/org/objectweb/asm/AnnotationVisitor.java", "stars": "97", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 63443, "method_name": "visitEnum", "class_name": "AnnotationVisitor", "params": ["String", "String", "String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void visitEnum(final String name, final String descriptor, final String value) {\n    if (av != null) {\n      av.visitEnum(name, descriptor, value);\n    }\n  }", "url": "https://raw.githubusercontent.com/Sipkab/jvm-tail-recursion/master/src/sipka/jvm/tailrec/thirdparty/org/objectweb/asm/AnnotationVisitor.java", "stars": "97", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 63444, "method_name": "visitAnnotation", "class_name": "AnnotationVisitor", "params": ["String", "String"], "throws": null, "modifiers": ["public"], "return_type": "AnnotationVisitor", "snippet": "  public AnnotationVisitor visitAnnotation(final String name, final String descriptor) {\n    if (av != null) {\n      return av.visitAnnotation(name, descriptor);\n    }\n    return null;\n  }", "url": "https://raw.githubusercontent.com/Sipkab/jvm-tail-recursion/master/src/sipka/jvm/tailrec/thirdparty/org/objectweb/asm/AnnotationVisitor.java", "stars": "97", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 63445, "method_name": "visitArray", "class_name": "AnnotationVisitor", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "AnnotationVisitor", "snippet": "  public AnnotationVisitor visitArray(final String name) {\n    if (av != null) {\n      return av.visitArray(name);\n    }\n    return null;\n  }", "url": "https://raw.githubusercontent.com/Sipkab/jvm-tail-recursion/master/src/sipka/jvm/tailrec/thirdparty/org/objectweb/asm/AnnotationVisitor.java", "stars": "97", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 63446, "method_name": "visitEnd", "class_name": "AnnotationVisitor", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void visitEnd() {\n    if (av != null) {\n      av.visitEnd();\n    }\n  }", "url": "https://raw.githubusercontent.com/Sipkab/jvm-tail-recursion/master/src/sipka/jvm/tailrec/thirdparty/org/objectweb/asm/AnnotationVisitor.java", "stars": "97", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 63447, "method_name": "main", "class_name": "JDBCDemo9", "params": ["String"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void main(String[] args) {\n        //1\u3001\u952e\u76d8\u5f55\u5165\n        Scanner sc = new Scanner(System.in);\n        System.out.println(\"\u8bf7\u8f93\u5165\u7528\u6237\u540d\uff1a\");\n        String username = sc.nextLine();\n        System.out.println(\"\u8bf7\u8f93\u5165\u5bc6\u7801\uff1a\");\n        String password = sc.nextLine();\n        //2\u3001\u8c03\u7528\u65b9\u6cd5\n        boolean flag = new JDBCDemo9().login2(username, password);\n        if(flag){\n            System.out.println(\"\u767b\u5f55\u6210\u529f\uff01\");\n        } else {\n            System.out.println(\"\u7528\u6237\u540d\u6216\u5bc6\u7801\u9519\u8bef\uff01\");\n        }\n    }", "url": "https://raw.githubusercontent.com/chengcheng1021/javaStudy/master/src/jdbc/Demo/JDBCDemo9.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 63448, "method_name": "login", "class_name": "JDBCDemo9", "params": ["String", "String"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean login(String username, String password){\n\n        Connection conn = null;\n        Statement stmt = null;\n        ResultSet rs = null;\n\n        try {\n            //1\u3001\u83b7\u53d6\u8fde\u63a5\n            conn = JDBCUtils.getConnection();\n            //2\u3001\u5b9a\u4e49sql\n            String sql = \"select * from user where username = '\" + username + \"' and password = '\" + password + \"'\";\n            //\u83b7\u53d6\u6267\u884csql\u7684\u5bf9\u8c61\n            stmt = conn.createStatement();\n            //4\u3001\u6267\u884c\u67e5\u8be2\n            rs = stmt.executeQuery(sql);\n            //5\u3001\u5224\u65ad\n//            if(rs.next()){\n//                return true;\n//            } else {\n//                return false;\n//            }\n            System.out.println(sql);\n\n            return rs.next();//\u5982\u679c\u6709\u4e0b\u4e00\u884c\uff0c\u5219\u8fd4\u56detrue\n\n        } catch (SQLException throwables) {\n            throwables.printStackTrace();\n        }finally {\n            JDBCUtils.close(rs, stmt, conn);\n        }\n\n        return false;\n    }", "url": "https://raw.githubusercontent.com/chengcheng1021/javaStudy/master/src/jdbc/Demo/JDBCDemo9.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 63449, "method_name": "login2", "class_name": "JDBCDemo9", "params": ["String", "String"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean login2(String username, String password){\n\n        Connection conn = null;\n        PreparedStatement pstmt = null;\n        ResultSet rs = null;\n\n        try {\n            //1\u3001\u83b7\u53d6\u8fde\u63a5\n            conn = JDBCUtils.getConnection();\n            //2\u3001\u5b9a\u4e49sql\n            String sql = \"select * from user where username = ? and password = ?\";\n            //\u83b7\u53d6\u6267\u884csql\u7684\u5bf9\u8c61\n            pstmt = conn.prepareStatement(sql);\n            //\u7ed9\uff1f\u8d4b\u503c\n            pstmt.setString(1, username);\n            pstmt.setString(2, password);\n            //4\u3001\u6267\u884c\u67e5\u8be2\n            rs = pstmt.executeQuery();\n            //5\u3001\u5224\u65ad\n//            if(rs.next()){\n//                return true;\n//            } else {\n//                return false;\n//            }\n            System.out.println(sql);\n\n            return rs.next();//\u5982\u679c\u6709\u4e0b\u4e00\u884c\uff0c\u5219\u8fd4\u56detrue\n\n        } catch (SQLException throwables) {\n            throwables.printStackTrace();\n        }finally {\n            JDBCUtils.close(rs, pstmt, conn);\n        }\n\n        return false;\n    }", "url": "https://raw.githubusercontent.com/chengcheng1021/javaStudy/master/src/jdbc/Demo/JDBCDemo9.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 63450, "method_name": "convert", "class_name": "ProcessIdClassicConverter", "params": ["ILoggingEvent"], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "  public String convert(ILoggingEvent iLoggingEvent) {\n    return SystemInfoUtils.getPid();\n  }", "url": "https://raw.githubusercontent.com/everknwon/netty-monitor/master/src/main/java/io/netty/monitor/ansi/logback/ProcessIdClassicConverter.java", "stars": "3", "class_props": {"extends": "ClassicConverter", "implements": null, "modifiers": ["public"]}}, {"id": 63451, "method_name": "testParseFileContentReturnTypeIsArrayList", "class_name": "LibraryFileLoaderBasicTest", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void testParseFileContentReturnTypeIsArrayList() {\n        List<BookEntry> bookData = testFileLoader.parseFileContent();\n        assertNotNull(\"Resulting book collection is not expected to be null.\", bookData);\n        assertTrue(\"Returned type for book collection is expected to be an ArrayList.\", bookData instanceof ArrayList);\n    }", "url": "https://raw.githubusercontent.com/LJacksonPan/Y1-OOP-CW3/master/tests/LibraryFileLoaderBasicTest.java", "stars": "6", "class_props": {"extends": "LibraryFileLoaderTest", "implements": null, "modifiers": ["public"]}}, {"id": 63452, "method_name": "testParseFileContentResult", "class_name": "LibraryFileLoaderBasicTest", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void testParseFileContentResult() {\n        List<Object[]> expectedValues = new ArrayList<>();\n        expectedValues.add(BOOK_SAMPLE1_VALUES);\n        expectedValues.add(BOOK_SAMPLE2_VALUES);\n\n        checkBookCollectionResult(testBookData, expectedValues);\n    }", "url": "https://raw.githubusercontent.com/LJacksonPan/Y1-OOP-CW3/master/tests/LibraryFileLoaderBasicTest.java", "stars": "6", "class_props": {"extends": "LibraryFileLoaderTest", "implements": null, "modifiers": ["public"]}}, {"id": 63453, "method_name": "testParseFileContentNoContentLoadedConsoleOutput", "class_name": "LibraryFileLoaderBasicTest", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void testParseFileContentNoContentLoadedConsoleOutput() {\n        testFileLoader = new LibraryFileLoader();\n        String expected = \"ERROR: No content loaded before parsing.\";\n\n        StdStreamIntercept intercept = new StdStreamIntercept();\n\n        intercept.stdCaptureStart();\n        try {\n            try {\n                testFileLoader.parseFileContent();\n            } catch (Exception e) {\n                System.err.println(\"ERROR: executing parseFileContent for console output check:\" + e);\n            }\n            // ignore leading and trailing white spaces\n            assertEquals(\"Console output not as expected in parseFileContent.\", expected.replaceAll(\"\\r\", \"\").trim(),\n                    intercept.getCapturedStdErr().replaceAll(\"\\r\", \"\").trim());\n        } finally {\n            intercept.stdCaptureStop();\n        }\n    }", "url": "https://raw.githubusercontent.com/LJacksonPan/Y1-OOP-CW3/master/tests/LibraryFileLoaderBasicTest.java", "stars": "6", "class_props": {"extends": "LibraryFileLoaderTest", "implements": null, "modifiers": ["public"]}}, {"id": 63454, "method_name": "init", "class_name": "TechCombatTransporter", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void init() {\n        super.init();\n        techType = Tech.COMBAT_TRANSPORTER;\n\n        switch(typeSeq) {\n            case 0: pct = .50f; break;\n            case 1: pct = .75f; break;\n        }\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/tech/TechCombatTransporter.java", "stars": "74", "class_props": {"extends": "Tech", "implements": null, "modifiers": ["final", "public"]}}, {"id": 63455, "method_name": "baseValue", "class_name": "TechCombatTransporter", "params": ["Empire"], "throws": null, "modifiers": ["public"], "return_type": "float", "snippet": "    public float baseValue(Empire c) { return c.ai().scientist().baseValue(this); }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/tech/TechCombatTransporter.java", "stars": "74", "class_props": {"extends": "Tech", "implements": null, "modifiers": ["final", "public"]}}, {"id": 63456, "method_name": "warModeFactor", "class_name": "TechCombatTransporter", "params": [], "throws": null, "modifiers": ["public"], "return_type": "float", "snippet": "    public float warModeFactor()        { return 3; }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/tech/TechCombatTransporter.java", "stars": "74", "class_props": {"extends": "Tech", "implements": null, "modifiers": ["final", "public"]}}, {"id": 63457, "method_name": "isObsolete", "class_name": "TechCombatTransporter", "params": ["Empire"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean isObsolete(Empire c)  { return pct < c.combatTransportPct(); }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/tech/TechCombatTransporter.java", "stars": "74", "class_props": {"extends": "Tech", "implements": null, "modifiers": ["final", "public"]}}, {"id": 63458, "method_name": "provideBenefits", "class_name": "TechCombatTransporter", "params": ["Empire"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void provideBenefits(Empire c) {\n        super.provideBenefits(c);\n        c.combatTransportPct(max(c.combatTransportPct(), pct));\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/tech/TechCombatTransporter.java", "stars": "74", "class_props": {"extends": "Tech", "implements": null, "modifiers": ["final", "public"]}}, {"id": 63459, "method_name": "main", "class_name": "Demo01GetThreadName", "params": ["String"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void main(String[] args) {\n        //\u521b\u5efaThread\u7c7b\u7684\u5b50\u7c7b\u5bf9\u8c61\n        MyThread mt = new MyThread();\n        //\u8c03\u7528start\u65b9\u6cd5,\u5f00\u542f\u65b0\u7ebf\u7a0b,\u6267\u884crun\u65b9\u6cd5\n        mt.start();\n\n        new MyThread().start();\n        new MyThread().start();\n\n        //\u94fe\u5f0f\u7f16\u7a0b\n        System.out.println(Thread.currentThread().getName());\n    }", "url": "https://raw.githubusercontent.com/liuminchao123/JavaWeb_Learning/master/02.%20java/Java/%E9%BB%91%E9%A9%AC%E6%95%99%E7%A8%8B/17.%E3%80%90%E7%BA%BF%E7%A8%8B%E3%80%81%E5%90%8C%E6%AD%A5%E3%80%91-%E7%AC%94%E8%AE%B0/code/06_Thread/src/com/itheima/demo01/getName/Demo01GetThreadName.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 63460, "method_name": "connect", "class_name": "LocalDarwinUdpSocket", "params": ["Pointer", "int"], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int connect(Pointer addr, int addrlen) {\n        String path = addr.getString(2);\n        log.debug(\"connect path=\" + path);\n\n        return connect(path);\n    }", "url": "https://raw.githubusercontent.com/wmm1996528/unidbg_douyin10/master/src/main/java/com/github/unidbg/ios/file/LocalDarwinUdpSocket.java", "stars": "16", "class_props": {"extends": "LocalUdpSocket", "implements": null, "modifiers": ["public"]}}, {"id": 63461, "method_name": "connect", "class_name": "LocalDarwinUdpSocket", "params": ["String"], "throws": null, "modifiers": ["protected"], "return_type": "int", "snippet": "    protected int connect(String path) {\n        if (\"/var/run/syslog\".equals(path)) {\n            handler = new UdpHandler() {\n                @Override\n                public void handle(byte[] request) {\n                    System.err.print(\"syslog: \" + new String(request, StandardCharsets.UTF_8));\n                }\n            };\n            return 0;\n        }\n\n        emulator.getMemory().setErrno(UnixEmulator.EPERM);\n        return -1;\n    }", "url": "https://raw.githubusercontent.com/wmm1996528/unidbg_douyin10/master/src/main/java/com/github/unidbg/ios/file/LocalDarwinUdpSocket.java", "stars": "16", "class_props": {"extends": "LocalUdpSocket", "implements": null, "modifiers": ["public"]}}, {"id": 63462, "method_name": "stringify", "class_name": "StrUtil", "params": ["long"], "throws": null, "modifiers": ["public", "static"], "return_type": "String", "snippet": "    public static String stringify(long byteNumber) {\n        if (byteNumber / TB_IN_BYTES > 0) {\n            return df.format((double) byteNumber / (double) TB_IN_BYTES) + \"TB\";\n        } else if (byteNumber / GB_IN_BYTES > 0) {\n            return df.format((double) byteNumber / (double) GB_IN_BYTES) + \"GB\";\n        } else if (byteNumber / MB_IN_BYTES > 0) {\n            return df.format((double) byteNumber / (double) MB_IN_BYTES) + \"MB\";\n        } else if (byteNumber / KB_IN_BYTES > 0) {\n            return df.format((double) byteNumber / (double) KB_IN_BYTES) + \"KB\";\n        } else {\n            return String.valueOf(byteNumber) + \"B\";\n        }\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/engine/datax/datax-core/src/main/java/com/alibaba/datax/common/util/StrUtil.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 63463, "method_name": "replaceVariable", "class_name": "StrUtil", "params": ["String"], "throws": null, "modifiers": ["public", "static"], "return_type": "String", "snippet": "    public static String replaceVariable(final String param) {\n        Map<String, String> mapping = new HashMap<String, String>();\n\n        Matcher matcher = VARIABLE_PATTERN.matcher(param);\n        while (matcher.find()) {\n            String variable = matcher.group(2);\n            String value = System.getProperty(variable);\n            if (StringUtils.isBlank(value)) {\n                value = matcher.group();\n            }\n            mapping.put(matcher.group(), value);\n        }\n\n        String retString = param;\n        for (final String key : mapping.keySet()) {\n            retString = retString.replace(key, mapping.get(key));\n        }\n\n        return retString;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/engine/datax/datax-core/src/main/java/com/alibaba/datax/common/util/StrUtil.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 63464, "method_name": "compressMiddle", "class_name": "StrUtil", "params": ["String", "int", "int"], "throws": null, "modifiers": ["public", "static"], "return_type": "String", "snippet": "    public static String compressMiddle(String s, int headLength, int tailLength) {\n        Validate.notNull(s, \"Input string must not be null\");\n        Validate.isTrue(headLength > 0, \"Head length must be larger than 0\");\n        Validate.isTrue(tailLength > 0, \"Tail length must be larger than 0\");\n\n        if (headLength + tailLength >= s.length()) {\n            return s;\n        }\n        return s.substring(0, headLength) + \"...\" + s.substring(s.length() - tailLength);\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/engine/datax/datax-core/src/main/java/com/alibaba/datax/common/util/StrUtil.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 63465, "method_name": "compile", "class_name": "VoidStatement", "params": ["GScriptCompiler"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void compile(GScriptCompiler c) {\n\t}", "url": "https://raw.githubusercontent.com/geertvos/gs-lang/master/src/main/java/net/geertvos/gvm/ast/VoidStatement.java", "stars": "17", "class_props": {"extends": "Statement", "implements": null, "modifiers": ["public"]}}, {"id": 63466, "method_name": "getBindingView", "class_name": "BaseHandlers", "params": [], "throws": null, "modifiers": ["public"], "return_type": "T", "snippet": "    public T getBindingView() {\n        return tWeakReference.get();\n    }", "url": "https://raw.githubusercontent.com/FanChael/MVVM/master/librarys/lib_common/src/main/java/com/hl/base_module/handler/BaseHandlers.java", "stars": "14", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 63467, "method_name": "getBindedView", "class_name": "BaseHandlers", "params": [], "throws": null, "modifiers": ["public"], "return_type": "C", "snippet": "    public C getBindedView() {\n        return cWeakReference.get();\n    }", "url": "https://raw.githubusercontent.com/FanChael/MVVM/master/librarys/lib_common/src/main/java/com/hl/base_module/handler/BaseHandlers.java", "stars": "14", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 63468, "method_name": "getContext", "class_name": "BaseHandlers", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Context", "snippet": "    public Context getContext(){\n        Object object = cWeakReference.get();\n        if (object instanceof Fragment) {\n            return ((Fragment) object).requireContext();\n        } else if (object instanceof AppCompatActivity) {\n            return (AppCompatActivity) object;\n        } else {\n            try {\n                throw new Exception(\"\u6ca1\u6709\u6307\u5b9a\u7ec4\u4ef6\uff0c\u65e0\u6cd5\u83b7\u53d6\u4e0a\u4e0b\u6587\uff01\");\n            } catch (Exception e) {\n                LogUtil.outLogger(BaseHandlers.class, e.getMessage());\n            }\n            return null;\n        }\n    }", "url": "https://raw.githubusercontent.com/FanChael/MVVM/master/librarys/lib_common/src/main/java/com/hl/base_module/handler/BaseHandlers.java", "stars": "14", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 63469, "method_name": "main", "class_name": "DemoBaozi", "params": ["String"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void main(String[] args) {\n        Baozi baozi = new Baozi();\n\n        new BaoziPu(baozi).start();\n\n        new Chihuo(baozi).start();\n    }", "url": "https://raw.githubusercontent.com/chengcheng1021/javaStudy/master/src/java2/Baozi/DemoBaozi.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 63470, "method_name": "spritePanel", "class_name": "SystemPanel", "params": [], "throws": null, "modifiers": ["protected"], "return_type": "SpriteDisplayPanel", "snippet": "    protected SpriteDisplayPanel spritePanel()   { return parentSpritePanel; }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/main/SystemPanel.java", "stars": "74", "class_props": {"extends": "BasePanel", "implements": ["SystemViewer", "MapSpriteViewer"], "modifiers": ["public", "abstract"]}}, {"id": 63471, "method_name": "showDefaultDetail", "class_name": "SystemPanel", "params": [], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void showDefaultDetail() { }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/main/SystemPanel.java", "stars": "74", "class_props": {"extends": "BasePanel", "implements": ["SystemViewer", "MapSpriteViewer"], "modifiers": ["public", "abstract"]}}, {"id": 63472, "method_name": "showStarDetail", "class_name": "SystemPanel", "params": [], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void showStarDetail()    { }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/main/SystemPanel.java", "stars": "74", "class_props": {"extends": "BasePanel", "implements": ["SystemViewer", "MapSpriteViewer"], "modifiers": ["public", "abstract"]}}, {"id": 63473, "method_name": "showPlanetDetail", "class_name": "SystemPanel", "params": [], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void showPlanetDetail()    { }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/main/SystemPanel.java", "stars": "74", "class_props": {"extends": "BasePanel", "implements": ["SystemViewer", "MapSpriteViewer"], "modifiers": ["public", "abstract"]}}, {"id": 63474, "method_name": "systemViewToDisplay", "class_name": "SystemPanel", "params": [], "throws": null, "modifiers": ["public"], "return_type": "StarSystem", "snippet": "    public StarSystem systemViewToDisplay() {\n        return spritePanel().systemViewToDisplay();\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/main/SystemPanel.java", "stars": "74", "class_props": {"extends": "BasePanel", "implements": ["SystemViewer", "MapSpriteViewer"], "modifiers": ["public", "abstract"]}}, {"id": 63475, "method_name": "buttonBorder", "class_name": "SystemPanel", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Border", "snippet": "    public Border buttonBorder() {\n        if (buttonBorder == null)\n            buttonBorder = new ThickBevelBorder(4,1, buttonC1, buttonC2, buttonC1, buttonC1, buttonC3, buttonC4, buttonC3, buttonC4);\n        return buttonBorder;\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/main/SystemPanel.java", "stars": "74", "class_props": {"extends": "BasePanel", "implements": ["SystemViewer", "MapSpriteViewer"], "modifiers": ["public", "abstract"]}}, {"id": 63476, "method_name": "topPaneBorderUncolonized", "class_name": "SystemPanel", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Border", "snippet": "    public Border topPaneBorderUncolonized() {\n        if (topPaneBorderUncolonized == null)\n            createPaneBorders();\n        return topPaneBorderUncolonized;\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/main/SystemPanel.java", "stars": "74", "class_props": {"extends": "BasePanel", "implements": ["SystemViewer", "MapSpriteViewer"], "modifiers": ["public", "abstract"]}}, {"id": 63477, "method_name": "topPaneBorderNeutral", "class_name": "SystemPanel", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Border", "snippet": "    public Border topPaneBorderNeutral() {\n        if (topPaneBorderNeutral == null)\n            createPaneBorders();\n        return topPaneBorderNeutral;\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/main/SystemPanel.java", "stars": "74", "class_props": {"extends": "BasePanel", "implements": ["SystemViewer", "MapSpriteViewer"], "modifiers": ["public", "abstract"]}}, {"id": 63478, "method_name": "topPaneBorderHostile", "class_name": "SystemPanel", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Border", "snippet": "    public Border topPaneBorderHostile() {\n        if (topPaneBorderHostile == null)\n            createPaneBorders();\n        return topPaneBorderHostile;\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/main/SystemPanel.java", "stars": "74", "class_props": {"extends": "BasePanel", "implements": ["SystemViewer", "MapSpriteViewer"], "modifiers": ["public", "abstract"]}}, {"id": 63479, "method_name": "topPaneBorderFriendly", "class_name": "SystemPanel", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Border", "snippet": "    public Border topPaneBorderFriendly() {\n        if (topPaneBorderFriendly == null)\n            createPaneBorders();\n        return topPaneBorderFriendly;\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/main/SystemPanel.java", "stars": "74", "class_props": {"extends": "BasePanel", "implements": ["SystemViewer", "MapSpriteViewer"], "modifiers": ["public", "abstract"]}}, {"id": 63480, "method_name": "topPaneBorderEmpire", "class_name": "SystemPanel", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Border", "snippet": "    public Border topPaneBorderEmpire() {\n        if (topPaneBorderEmpire == null)\n            createPaneBorders();\n        return topPaneBorderEmpire;\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/main/SystemPanel.java", "stars": "74", "class_props": {"extends": "BasePanel", "implements": ["SystemViewer", "MapSpriteViewer"], "modifiers": ["public", "abstract"]}}, {"id": 63481, "method_name": "thinBorder", "class_name": "SystemPanel", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Border", "snippet": "    public Border thinBorder() {\n        if (thinBorder == null)\n            createPaneBorders();\n        return thinBorder;\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/main/SystemPanel.java", "stars": "74", "class_props": {"extends": "BasePanel", "implements": ["SystemViewer", "MapSpriteViewer"], "modifiers": ["public", "abstract"]}}, {"id": 63482, "method_name": "createPaneBorders", "class_name": "SystemPanel", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void createPaneBorders() {\n        Border line0 = newLineBorder(dataBorders,2);\n        Border line1 = newLineBorder(newColor(32,32,32),3);\n        Border lineYellow = newLineBorder(newColor(224,224,0),3);\n        Border lineRed = newLineBorder(newColor(192,0,0),3);\n        Border lineGreen = newLineBorder(newColor(0,192,0),3);\n        Border lineBlue = newLineBorder(newColor(0,0,192),3);\n        Border lineGray = newLineBorder(newColor(224,224,224),3);\n\n        Border compound0 = BorderFactory.createCompoundBorder(line0, line1);\n        topPaneBorderUncolonized = BorderFactory.createCompoundBorder(compound0, lineGray);\n        topPaneBorderNeutral = BorderFactory.createCompoundBorder(compound0, lineYellow);\n        topPaneBorderHostile = BorderFactory.createCompoundBorder(compound0, lineRed);\n        topPaneBorderFriendly = BorderFactory.createCompoundBorder(compound0, lineGreen);\n        topPaneBorderEmpire = BorderFactory.createCompoundBorder(compound0, lineBlue);\n\n        thinBorder = newLineBorder(dataBorders,2);\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/main/SystemPanel.java", "stars": "74", "class_props": {"extends": "BasePanel", "implements": ["SystemViewer", "MapSpriteViewer"], "modifiers": ["public", "abstract"]}}, {"id": 63483, "method_name": "backgroundColor", "class_name": "SystemPanel", "params": [], "throws": null, "modifiers": ["protected"], "return_type": "Color", "snippet": "    protected Color backgroundColor()   { return MainUI.shadeBorderC(); }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/main/SystemPanel.java", "stars": "74", "class_props": {"extends": "BasePanel", "implements": ["SystemViewer", "MapSpriteViewer"], "modifiers": ["public", "abstract"]}}, {"id": 63484, "method_name": "initModel", "class_name": "SystemPanel", "params": [], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void initModel() {\n        initModel(s5);\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/main/SystemPanel.java", "stars": "74", "class_props": {"extends": "BasePanel", "implements": ["SystemViewer", "MapSpriteViewer"], "modifiers": ["public", "abstract"]}}, {"id": 63485, "method_name": "initModel", "class_name": "SystemPanel", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void initModel(int gap) {\n        setBackground(backgroundColor());\n\n        overviewPane = topPane();\n        detailPane = detailPane();\n        bottomPane = bottomPane();\n\n        setLayout(new BorderLayout(0,gap));\n        if (overviewPane != null) \n            add(overviewPane, BorderLayout.NORTH);\n        \n        add(detailPane, BorderLayout.CENTER);\n        if (bottomPane != null) \n            add(bottomPane, BorderLayout.SOUTH); \n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/main/SystemPanel.java", "stars": "74", "class_props": {"extends": "BasePanel", "implements": ["SystemViewer", "MapSpriteViewer"], "modifiers": ["public", "abstract"]}}, {"id": 63486, "method_name": "topPane", "class_name": "SystemPanel", "params": [], "throws": null, "modifiers": ["protected", "abstract"], "return_type": "BasePanel", "snippet": "    protected abstract BasePanel topPane();\n    protected abstract BasePanel detailPane();\n    protected BasePanel bottomPane()  { return null; }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/main/SystemPanel.java", "stars": "74", "class_props": {"extends": "BasePanel", "implements": ["SystemViewer", "MapSpriteViewer"], "modifiers": ["public", "abstract"]}}, {"id": 63487, "method_name": "detailPane", "class_name": "SystemPanel", "params": [], "throws": null, "modifiers": ["protected", "abstract"], "return_type": "BasePanel", "snippet": "    protected abstract BasePanel detailPane();\n    protected BasePanel bottomPane()  { return null; }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/main/SystemPanel.java", "stars": "74", "class_props": {"extends": "BasePanel", "implements": ["SystemViewer", "MapSpriteViewer"], "modifiers": ["public", "abstract"]}}, {"id": 63488, "method_name": "bottomPane", "class_name": "SystemPanel", "params": [], "throws": null, "modifiers": ["protected"], "return_type": "BasePanel", "snippet": "    protected BasePanel bottomPane()  { return null; }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/main/SystemPanel.java", "stars": "74", "class_props": {"extends": "BasePanel", "implements": ["SystemViewer", "MapSpriteViewer"], "modifiers": ["public", "abstract"]}}, {"id": 63489, "method_name": "recenterMap", "class_name": "SystemPanel", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void recenterMap() {\n        spritePanel().parent.map().recenterMapOn(systemViewToDisplay());\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/main/SystemPanel.java", "stars": "74", "class_props": {"extends": "BasePanel", "implements": ["SystemViewer", "MapSpriteViewer"], "modifiers": ["public", "abstract"]}}, {"id": 63490, "method_name": "scrollToNextSystem", "class_name": "SystemPanel", "params": ["boolean"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void scrollToNextSystem(boolean forward) {\n       StarSystem sys = systemViewToDisplay();\n        if (sys == null)\n            return;\n        Empire emp = player().sv.empire(sys.id);\n        if (emp == null)\n            return;\n        List<StarSystem> systems = emp.orderedColonies();\n        \n        int index = systems.indexOf(sys);\n        if (forward) \n            index = (index == (systems.size()-1)) ? 0 : index + 1;\n        else \n            index = (index == 0) ? systems.size()-1 : index -1;\n\n        IMapHandler topPanel = spritePanel().parent;;\n        topPanel.clickedSprite(systems.get(index));\n        topPanel.map().recenterMapOn(systems.get(index));\n        topPanel.repaint();\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/main/SystemPanel.java", "stars": "74", "class_props": {"extends": "BasePanel", "implements": ["SystemViewer", "MapSpriteViewer"], "modifiers": ["public", "abstract"]}}, {"id": 63491, "method_name": "drawPlanetInfo", "class_name": "SystemPanel", "params": ["Graphics2D", "StarSystem", "boolean", "boolean", "int", "int", "int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void drawPlanetInfo(Graphics2D g, StarSystem sys, boolean showSpyData, boolean showPopulation, int startY, int w, int h) {\n        int y = startY;\n\n        int lines = showSpyData ? 5 : 4;\n        int lineH = h/lines;\n\n        // ensure we are always at least font 16, readjust lineH to compensate\n        int estFontSize = min(20, max(16, unscaled(lineH)));\n        lineH = scaled(estFontSize);\n\n        Font f = narrowFont(estFontSize);\n        y = h-lineH-s3;\n\n        if (showSpyData) {\n            drawSystemReportAge(g, sys, f,  y, w, lineH);\n            y -= lineH;\n        }\n\n        if (showPopulation)\n            drawSystemPopulation(g, sys, f, y, w, lineH);\n        else\n            drawSystemSize(g, sys, f, y, w, lineH);\n        y -= lineH;\n\n        if (drawResearchProject(g, sys, f, y, w, lineH))\n            y -= lineH;\n\n        if (drawSystemResources(g, sys, f, y, w, lineH))\n            y -= lineH;\n\n        if (drawSystemEnvironment(g, sys, f, y, w, lineH))\n            y -= lineH;\n\n        drawSystemPlanetType(g, sys, f, y, w, lineH);\n        y -= lineH;\n\n        if (player().sv.isColonized(sys.id))\n            drawSystemTreatyStatus(g, sys, f, y, w, lineH);\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/main/SystemPanel.java", "stars": "74", "class_props": {"extends": "BasePanel", "implements": ["SystemViewer", "MapSpriteViewer"], "modifiers": ["public", "abstract"]}}, {"id": 63492, "method_name": "drawSystemTreatyStatus", "class_name": "SystemPanel", "params": ["Graphics2D", "StarSystem", "Font", "int", "int", "int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void drawSystemTreatyStatus(Graphics2D g, StarSystem sys, Font textF, int y, int w, int h) {\n        int id = sys.id;\n        Empire pl = player();\n        int empId = pl.sv.empId(id);\n        if (empId == pl.id)\n            return;\n\n        g.setFont(textF);\n\n        if (pl.alliedWith(empId)) {\n            g.setColor(SystemPanel.greenText);\n            String str4 = text(\"MAIN_FLEET_ALLY\");\n            int sw4 = g.getFontMetrics().stringWidth(str4);\n            g.drawString(str4, w-sw4-s10, y+h);\n        } else if (pl.atWarWith(empId)) {\n            g.setColor(SystemPanel.redText);\n            String str4 = text(\"MAIN_FLEET_ENEMY\");\n            int sw4 = g.getFontMetrics().stringWidth(str4);\n            g.drawString(str4, w-sw4-s10, y+h);\n        }\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/main/SystemPanel.java", "stars": "74", "class_props": {"extends": "BasePanel", "implements": ["SystemViewer", "MapSpriteViewer"], "modifiers": ["public", "abstract"]}}, {"id": 63493, "method_name": "drawSystemName", "class_name": "SystemPanel", "params": ["Graphics2D", "StarSystem", "int", "int", "int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void drawSystemName(Graphics2D g2, StarSystem sys, int y, int w, int h) {\n        g2.setFont(narrowFont(unscaled(h)));\n        int h0 = g2.getFontMetrics().getHeight();\n        drawBorderedString(g2, player().sv.name(sys.id), 2, s15, h0-s10, Color.black, Color.white);\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/main/SystemPanel.java", "stars": "74", "class_props": {"extends": "BasePanel", "implements": ["SystemViewer", "MapSpriteViewer"], "modifiers": ["public", "abstract"]}}, {"id": 63494, "method_name": "drawSystemPlanetType", "class_name": "SystemPanel", "params": ["Graphics2D", "StarSystem", "Font", "int", "int", "int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void drawSystemPlanetType(Graphics2D g2, StarSystem sys, Font textF, int y, int w, int h) {\n        Planet planet = sys.planet();\n        int rightMargin = s10;\n\n        g2.setFont(textF);\n        if (player().canColonize(planet))\n            g2.setColor(greenText);\n        else if (player().isLearningToColonize(planet))\n            g2.setColor(yellowText);\n        else if (player().canLearnToColonize(planet))\n            g2.setColor(orangeText);\n        else\n            g2.setColor(redText);\n\n        if (planet.type().isAsteroids())\n            return;\n\n        String typeStr = text(planet.type().key());\n        int sw = g2.getFontMetrics().stringWidth(typeStr);\n\n        int x0 = w-rightMargin-sw;\n        g2.drawString(typeStr, x0, y+h);\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/main/SystemPanel.java", "stars": "74", "class_props": {"extends": "BasePanel", "implements": ["SystemViewer", "MapSpriteViewer"], "modifiers": ["public", "abstract"]}}, {"id": 63495, "method_name": "drawSystemEnvironment", "class_name": "SystemPanel", "params": ["Graphics2D", "StarSystem", "Font", "int", "int", "int"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean drawSystemEnvironment(Graphics2D g2, StarSystem sys, Font textF, int y, int w, int h) {\n        int rightMargin = s10;\n        Empire pl = player();\n\n        g2.setFont(textF);\n        String envStr = \"\";\n        if (pl.isEnvironmentHostile(sys)) {\n            g2.setColor(redText);\n            envStr = text(\"PLANET_HOSTILE\");\n        }\n        else if (pl.isEnvironmentFertile(sys)) {\n            g2.setColor(greenText);\n            envStr = text(\"PLANET_FERTILE\");\n        }\n        else if (pl.isEnvironmentGaia(sys)) {\n            g2.setColor(greenText);\n            envStr = text(\"PLANET_GAIA\");\n        }\n\n        if (!envStr.isEmpty()) {\n            int sw = g2.getFontMetrics().stringWidth(envStr);\n            int x0 = w-rightMargin-sw;\n            g2.drawString(envStr, x0, y+h);\n            return true;\n        }\n        return false;\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/main/SystemPanel.java", "stars": "74", "class_props": {"extends": "BasePanel", "implements": ["SystemViewer", "MapSpriteViewer"], "modifiers": ["public", "abstract"]}}, {"id": 63496, "method_name": "drawResearchProject", "class_name": "SystemPanel", "params": ["Graphics2D", "StarSystem", "Font", "int", "int", "int"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean drawResearchProject(Graphics2D g2, StarSystem sys, Font textF, int y, int w, int h) {\n        int rightMargin = s10;\n\n        if (sys.hasEvent()) {\n            g2.setFont(textF);\n            String projStr = text(sys.eventKey());\n            g2.setColor(redText);\n            int sw = g2.getFontMetrics().stringWidth(projStr);\n            int x0 = w-rightMargin-sw;\n            g2.drawString(projStr, x0, y+h);\n            return true;\n        }\n        return false;\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/main/SystemPanel.java", "stars": "74", "class_props": {"extends": "BasePanel", "implements": ["SystemViewer", "MapSpriteViewer"], "modifiers": ["public", "abstract"]}}, {"id": 63497, "method_name": "drawSystemResources", "class_name": "SystemPanel", "params": ["Graphics2D", "StarSystem", "Font", "int", "int", "int"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean drawSystemResources(Graphics2D g2, StarSystem sys, Font textF, int y, int w, int h) {\n        int rightMargin = s10;\n        Empire pl = player();\n\n        g2.setFont(textF);\n        String resourceStr = \"\";\n        g2.setColor(blueText);\n        if (pl.sv.isArtifact(sys.id)) {\n            g2.setColor(orangeText);\n            resourceStr = text(\"PLANET_ARTIFACTS\");\n        }\n        else if (pl.sv.isUltraPoor(sys.id))\n            resourceStr = text(\"PLANET_ULTRA_POOR\");\n        else if (pl.sv.isPoor(sys.id))\n            resourceStr = text(\"PLANET_POOR\");\n        else if (pl.sv.isUltraRich(sys.id))\n            resourceStr = text(\"PLANET_ULTRA_RICH\");\n        else if (pl.sv.isRich(sys.id))\n            resourceStr = text(\"PLANET_RICH\");\n\n        if (!resourceStr.isEmpty()) {\n            int sw = g2.getFontMetrics().stringWidth(resourceStr);\n            int x0 = w-rightMargin-sw;\n            g2.drawString(resourceStr, x0, y+h);\n            return true;\n        }\n        return false;\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/main/SystemPanel.java", "stars": "74", "class_props": {"extends": "BasePanel", "implements": ["SystemViewer", "MapSpriteViewer"], "modifiers": ["public", "abstract"]}}, {"id": 63498, "method_name": "drawSystemPopulation", "class_name": "SystemPanel", "params": ["Graphics2D", "StarSystem", "Font", "int", "int", "int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void drawSystemPopulation(Graphics2D g2, StarSystem sys, Font textF, int y, int w, int h) {\n        int id = sys.id;\n        Empire pl = player();\n\n        Planet planet = sys.planet();\n        int rightMargin = s10;\n\n        if (planet.maxSize() > 0) {\n            g2.setFont(textF);\n            String popStr;\n            boolean ignoreWaste = planet.isColonized() && planet.empire().race().ignoresPlanetEnvironment();\n            int planetSize = (int) sys.colony().maxSize();\n            int population = (int) sys.colony().displayPopulation();\n            g2.setColor(greenText);\n            if (pl.sv.isColonized(id) && pl.sv.colony(id).inRebellion()) {\n                popStr = text(\"MAIN_PLANET_REBELLION\");\n                g2.setColor(redText);\n            }\n            else if (planetSize == population)\n                popStr = text(\"MAIN_PLANET_POP\", population);\n            else\n                popStr = text(\"MAIN_PLANET_POP_SIZE\", population, planetSize);\n\n            int sw = g2.getFontMetrics().stringWidth(popStr);\n\n            int x0 = w-rightMargin-sw;\n            g2.drawString(popStr, x0, y+h);\n        }\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/main/SystemPanel.java", "stars": "74", "class_props": {"extends": "BasePanel", "implements": ["SystemViewer", "MapSpriteViewer"], "modifiers": ["public", "abstract"]}}, {"id": 63499, "method_name": "drawSystemSize", "class_name": "SystemPanel", "params": ["Graphics2D", "StarSystem", "Font", "int", "int", "int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void drawSystemSize(Graphics2D g2, StarSystem sys, Font textF, int y, int w, int h) {\n        int id = sys.id;\n        Empire pl = player();\n\n        Planet planet = sys.planet();\n        int rightMargin = s10;\n\n        if (planet.maxSize() > 0) {\n            g2.setFont(textF);\n            String popStr;\n            boolean ignoreWaste = planet.isColonized() && planet.empire().race().ignoresPlanetEnvironment();\n            int planetSize = ignoreWaste ? (int) planet.currentSize() : (int) planet.sizeAfterWaste();\n            if (ignoreWaste || (planet.waste() == 0))\n                g2.setColor(greenText);\n            else\n                g2.setColor(redText);\n            if (pl.sv.isColonized(id) && pl.sv.colony(id).inRebellion()) {\n                popStr = text(\"MAIN_PLANET_REBELLION\");\n                g2.setColor(redText);\n            }\n            else if (planet.currentSize() == planet.maxSize())\n                popStr = text(\"MAIN_PLANET_SIZE\", planetSize);\n            else if (pl.sv.isColonized(id) && pl.sv.empire(id).isAI())\n                popStr = text(\"MAIN_PLANET_SIZE\", planetSize);\n            else\n                popStr = text(\"MAIN_PLANET_SIZE+\", planetSize);\n\n            int sw = g2.getFontMetrics().stringWidth(popStr);\n\n            int x0 = w-rightMargin-sw;\n            g2.drawString(popStr, x0, y+h);\n        }\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/main/SystemPanel.java", "stars": "74", "class_props": {"extends": "BasePanel", "implements": ["SystemViewer", "MapSpriteViewer"], "modifiers": ["public", "abstract"]}}, {"id": 63500, "method_name": "drawSystemReportAge", "class_name": "SystemPanel", "params": ["Graphics2D", "StarSystem", "Font", "int", "int", "int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void drawSystemReportAge(Graphics2D g2, StarSystem sys, Font textF, int y, int w, int h) {\n        int rightMargin = s10;\n\n        int age = player().sv.spyReportAge(sys.id);\n\n        if (age > 0) {\n            g2.setFont(textF);\n            g2.setColor(Color.gray);\n            String title = text(\"RACES_REPORT_AGE\", age);\n            int sw = g2.getFontMetrics().stringWidth(title);\n            int x0 = w-rightMargin-sw;\n            g2.drawString(title, x0, y+h);\n        }\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/main/SystemPanel.java", "stars": "74", "class_props": {"extends": "BasePanel", "implements": ["SystemViewer", "MapSpriteViewer"], "modifiers": ["public", "abstract"]}}, {"id": 63501, "method_name": "init", "class_name": "SystemRangePane", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "        private void init() {\n            setOpaque(false);\n            setPreferredSize(new Dimension(getWidth(),s40));\n        }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/main/SystemPanel.java", "stars": "74", "class_props": {"extends": "BasePanel", "implements": null, "modifiers": ["protected"]}}, {"id": 63502, "method_name": "textureName", "class_name": "SystemRangePane", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "        public String textureName()            { return TEXTURE_GRAY; }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/main/SystemPanel.java", "stars": "74", "class_props": {"extends": "BasePanel", "implements": null, "modifiers": ["protected"]}}, {"id": 63503, "method_name": "textureClip", "class_name": "SystemRangePane", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Shape", "snippet": "        public Shape textureClip()    { return textureClip; }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/main/SystemPanel.java", "stars": "74", "class_props": {"extends": "BasePanel", "implements": null, "modifiers": ["protected"]}}, {"id": 63504, "method_name": "paintComponent", "class_name": "SystemRangePane", "params": ["Graphics"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "        public void paintComponent(Graphics g0) {\n            Graphics2D g = (Graphics2D) g0;\n            super.paintComponent(g);\n\n            Empire pl = player();\n\n            int w = getWidth();\n            int h = getHeight();\n            StarSystem sys = parent.parentSpritePanel.systemViewToDisplay();\n            if (sys == null)\n                return;\n            int range = (int) Math.ceil(pl.sv.distance(sys.id));\n            \n            String label = pl.alliedWith(id(sys.empire())) ?  text(\"MAIN_ALLIED_COLONY\") : text(\"MAIN_SYSTEM_RANGE\", range);\n            String desc;\n            Color c0;\n            if (pl.sv.inShipRange(sys.id)) {\n                c0 = inRangeC;\n                desc = text(\"MAIN_IN_RANGE_DESC\");\n            }\n            else if (pl.sv.inScoutRange(sys.id)) {\n                c0 = scoutRangeC;\n                desc = text(\"MAIN_SCOUT_RANGE_DESC\");\n            }\n            else {\n                c0 = outOfRangeC;\n                desc = text(\"MAIN_OUT_OF_RANGE_DESC\");\n            }\n\n            int y0 = s5;\n            g.setColor(MainUI.shadeBorderC());\n            g.fillRect(0, 0, w, y0);\n            g.setColor(c0);\n            g.fillRect(0, y0, w, h-y0);\n\n            g.setFont(narrowFont(20));\n            int sw = g.getFontMetrics().stringWidth(label);\n            drawBorderedString(g, label, s10, h-s13, Color.black, whiteText);\n\n            int x2 = s10+sw+s5;\n            int w2 = w-s5-x2;\n            g.setFont(narrowFont(15));\n            List<String> descLines = wrappedLines(g, desc, w2);\n            if (descLines.size() == 1) {\n                int sw2 = g.getFontMetrics().stringWidth(desc);\n                int x2a = x2+((w2-sw2)/2);\n                drawBorderedString(g, desc, x2a, h-s13, Color.black, grayText);\n            }\n            else if (descLines.size() == 2) {\n                String line = descLines.get(0);\n                int sw2 = g.getFontMetrics().stringWidth(line);\n                int x2a = x2+((w2-sw2)/2);\n                drawBorderedString(g, line, x2a, h-s20, Color.black, grayText);\n                line = descLines.get(1);\n                sw2 = g.getFontMetrics().stringWidth(line);\n                x2a = x2+((w2-sw2)/2);\n                drawBorderedString(g, line, x2a, h-s6, Color.black, grayText);\n            }\n\n            g.setColor(Color.black);\n            Stroke prev = g.getStroke();\n            g.setStroke(stroke1);\n            g.drawRect(0, y0, w-s1, h-y0-s1);\n            g.setStroke(prev);\n            textureClip = new Rectangle2D.Float(0, y0, w-s1, h-y0-s1);\n        }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/main/SystemPanel.java", "stars": "74", "class_props": {"extends": "BasePanel", "implements": null, "modifiers": ["protected"]}}, {"id": 63505, "method_name": "executeProcedure", "class_name": "OrangeAmaranthExplosionProcedure", "params": ["java"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "\tpublic static void executeProcedure(java.util.HashMap<String, Object> dependencies) {\n\t\tif (dependencies.get(\"x\") == null) {\n\t\t\tSystem.err.println(\"Failed to load dependency x for procedure OrangeAmaranthExplosion!\");\n\t\t\treturn;\n\t\t}\n\t\tif (dependencies.get(\"y\") == null) {\n\t\t\tSystem.err.println(\"Failed to load dependency y for procedure OrangeAmaranthExplosion!\");\n\t\t\treturn;\n\t\t}\n\t\tif (dependencies.get(\"z\") == null) {\n\t\t\tSystem.err.println(\"Failed to load dependency z for procedure OrangeAmaranthExplosion!\");\n\t\t\treturn;\n\t\t}\n\t\tif (dependencies.get(\"world\") == null) {\n\t\t\tSystem.err.println(\"Failed to load dependency world for procedure OrangeAmaranthExplosion!\");\n\t\t\treturn;\n\t\t}\n\t\tint x = (int) dependencies.get(\"x\");\n\t\tint y = (int) dependencies.get(\"y\");\n\t\tint z = (int) dependencies.get(\"z\");\n\t\tWorld world = (World) dependencies.get(\"world\");\n\t\tif (!world.isRemote) {\n\t\t\tItemEntity entityToSpawn = new ItemEntity(world, x, y, z, new ItemStack(OrangeAmaranthBlock.block, (int) (1)));\n\t\t\tentityToSpawn.setPickupDelay(10);\n\t\t\tworld.addEntity(entityToSpawn);\n\t\t}\n\t\tif (!world.isRemote) {\n\t\t\tItemEntity entityToSpawn = new ItemEntity(world, x, y, z, new ItemStack(Items.FLOWER_POT, (int) (1)));\n\t\t\tentityToSpawn.setPickupDelay(10);\n\t\t\tworld.addEntity(entityToSpawn);\n\t\t}\n\t}", "url": "https://raw.githubusercontent.com/KarogathModdingStudios/Enhanced-Vanilla-1.15/master/src/main/java/com/karogath/enhancedvanilla/procedures/OrangeAmaranthExplosionProcedure.java", "stars": "2", "class_props": {"extends": "EnhancedVanillaElements", "implements": null, "modifiers": ["public"]}}, {"id": 63506, "method_name": "shortName", "class_name": "TechArmor", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String shortName()    {  return item(); }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/tech/TechArmor.java", "stars": "74", "class_props": {"extends": "Tech", "implements": null, "modifiers": ["final", "public"]}}, {"id": 63507, "method_name": "canBeMiniaturized", "class_name": "TechArmor", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean canBeMiniaturized()      { return true; }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/tech/TechArmor.java", "stars": "74", "class_props": {"extends": "Tech", "implements": null, "modifiers": ["final", "public"]}}, {"id": 63508, "method_name": "init", "class_name": "TechArmor", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void init() {\n        super.init();\n\n        techType = Tech.ARMOR;\n        baseArmor = new MissileBaseArmor(this);\n\n        switch(typeSeq) {\n            case 0:\n                hitsAdj = 1;\n                groundAttackBonus = 0;\n                transportHP = 15;\n                baseArmor.baseCost(0);\n                break;\n            case 1:\n                hitsAdj = 1.5f;\n                groundAttackBonus = 5;\n                transportHP = 22;\n                baseArmor.baseCost(36);\n                break;\n            case 2:\n                hitsAdj = 2;\n                groundAttackBonus = 10;\n                transportHP = 30;\n                baseArmor.baseCost(60);\n                break;\n            case 3:\n                hitsAdj = 2.5f;\n                groundAttackBonus = 15;\n                transportHP = 37;\n                baseArmor.baseCost(90);\n                break;\n            case 4:\n                hitsAdj = 3;\n                groundAttackBonus = 20;\n                transportHP = 45;\n                baseArmor.baseCost(120);\n                break;\n            case 5:\n                hitsAdj = 3.5f;\n                groundAttackBonus = 25;\n                transportHP = 52;\n                baseArmor.baseCost(150);\n                break;\n            case 6:\n                hitsAdj = 4;\n                groundAttackBonus = 30;\n                transportHP = 60;\n                baseArmor.baseCost(180);\n                break;\n        }\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/tech/TechArmor.java", "stars": "74", "class_props": {"extends": "Tech", "implements": null, "modifiers": ["final", "public"]}}, {"id": 63509, "method_name": "warModeFactor", "class_name": "TechArmor", "params": [], "throws": null, "modifiers": ["public"], "return_type": "float", "snippet": "    public float warModeFactor()           { return 3; }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/tech/TechArmor.java", "stars": "74", "class_props": {"extends": "Tech", "implements": null, "modifiers": ["final", "public"]}}, {"id": 63510, "method_name": "providesShipComponent", "class_name": "TechArmor", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean providesShipComponent()  { return true; }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/tech/TechArmor.java", "stars": "74", "class_props": {"extends": "Tech", "implements": null, "modifiers": ["final", "public"]}}, {"id": 63511, "method_name": "isObsolete", "class_name": "TechArmor", "params": ["Empire"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean isObsolete(Empire c)     { return groundAttackBonus < c.tech().armorGroundBonus(); }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/tech/TechArmor.java", "stars": "74", "class_props": {"extends": "Tech", "implements": null, "modifiers": ["final", "public"]}}, {"id": 63512, "method_name": "baseValue", "class_name": "TechArmor", "params": ["Empire"], "throws": null, "modifiers": ["public"], "return_type": "float", "snippet": "    public float baseValue(Empire c)   { return c.ai().scientist().baseValue(this); }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/tech/TechArmor.java", "stars": "74", "class_props": {"extends": "Tech", "implements": null, "modifiers": ["final", "public"]}}, {"id": 63513, "method_name": "provideBenefits", "class_name": "TechArmor", "params": ["Empire"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void provideBenefits(Empire c) {\n        super.provideBenefits(c);\n        if (!isObsolete(c)) {\n            c.tech().topArmorTech(this);\n            c.tech().updateMissileBase();\n        }\n        ShipArmor sh = new ShipArmor(this, false);\n        c.shipLab().addArmor(sh);\n        ShipArmor sh2 = new ShipArmor(this, true);\n        c.shipLab().addArmor(sh2);\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/tech/TechArmor.java", "stars": "74", "class_props": {"extends": "Tech", "implements": null, "modifiers": ["final", "public"]}}, {"id": 63514, "method_name": "baseCost", "class_name": "TechArmor", "params": ["int", "boolean"], "throws": null, "modifiers": ["public"], "return_type": "float", "snippet": "    public float baseCost(int size, boolean reinforced) {\n        int baseCost;\n\n        switch (size) {\n            case ShipDesign.SMALL:\n                return reinforced ? Math.max(2, typeSeq * 3) : typeSeq *2;\n            case ShipDesign.MEDIUM:\n                return reinforced ? Math.max(10, typeSeq * 15) : typeSeq * 10;\n            case ShipDesign.LARGE:\n                baseCost = typeSeq == 1 ? 60 : typeSeq * 50;\n                if (reinforced)\n                    baseCost = (int) Math.max(50, baseCost * 1.5);\n                return baseCost;\n            case ShipDesign.HUGE:\n                baseCost = typeSeq == 1 ? 300 : typeSeq * 250;\n                if (reinforced)\n                    baseCost = (int) Math.max(250, baseCost * 1.5);\n                return baseCost;\n        }\n        return 1;\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/tech/TechArmor.java", "stars": "74", "class_props": {"extends": "Tech", "implements": null, "modifiers": ["final", "public"]}}, {"id": 63515, "method_name": "baseSize", "class_name": "TechArmor", "params": ["int", "boolean"], "throws": null, "modifiers": ["public"], "return_type": "float", "snippet": "    public float baseSize(int s, boolean reinforced) {\n        switch (s) {\n            case ShipDesign.SMALL:\n                if (reinforced)\n                    return (typeSeq <= 4) ? 14 + (typeSeq * 3) : 5 + (typeSeq * 5);\n                else\n                    return typeSeq * 2;\n            case ShipDesign.MEDIUM:\n                if (reinforced) {\n                    switch (typeSeq) {\n                        case 0: return 80;\n                        case 1: return 85;\n                        case 2: return 100;\n                        case 3: return 115;\n                        case 4: return 130;\n                        case 5: return 150;\n                        case 6: return 175;\n                        default: return 25 + (25*typeSeq);\n                    }\n                }\n                else\n                    return typeSeq * 10;\n            case ShipDesign.LARGE:\n                if (reinforced) {\n                    switch (typeSeq) {\n                        case 0: return 400;\n                        case 1: return 425;\n                        case 2: return 500;\n                        case 3: return 575;\n                        case 4: return 650;\n                        case 5: return 750;\n                        case 6: return 875;\n                        default: return 125 + (125*typeSeq);\n                    }\n                }\n                else\n                    return typeSeq == 1 ? 60 : typeSeq * 50;\n            case ShipDesign.HUGE:\n                if (reinforced) {\n                    switch (typeSeq) {\n                        case 0: return 2000;\n                        case 1: return 2100;\n                        case 2: return 2500;\n                        case 3: return 2875;\n                        case 4: return 3250;\n                        case 5: return 3750;\n                        case 6: return 4375;\n                        default: return 625 + (625*typeSeq);\n                    }\n                }\n                else\n                    return typeSeq == 1 ? 300 : typeSeq * 250;\n        }\n        return 1;\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/tech/TechArmor.java", "stars": "74", "class_props": {"extends": "Tech", "implements": null, "modifiers": ["final", "public"]}}, {"id": 63516, "method_name": "generateCode", "class_name": "StmFOR", "params": [], "throws": ["CodeException"], "modifiers": ["public"], "return_type": "String", "snippet": "\tpublic String generateCode() throws CodeException {\n\t\tString result = \"\";\n\t\tresult += super.generateCode();\n\n\t\tString var_test = \"_var_for_test__\" + this.getId();\n\t\tString label_for_test = \"_for_label_test_\" + this.getId();\n\t\tString label_for_code = \"_for_label_code_\" + this.getId(); \n\t\tString label_for_end = \"_for_label_end_\" + this.getId(); \n\t\t\n\t\tresult += tab() + getFirst().generateCode() + NL; //initialization\n\t\tresult += tab() + \"int \" + var_test + \";\" + NL;\n\t\t\n\t\tresult += tab() + label_for_test + \":{}\" + NL;\n\t\t\n\t\tresult += tab() + var_test + \" = \" + expr.generateCode() + \";\" + NL;\n\t\t\n\t\tresult += tab() + \"if (\" + var_test + \")\" + NL; //stopping condition\n\t\tincIndent();\n\t\t\tresult += tab() + \"goto \" + label_for_code + \";\" + NL;\n\t\tdecIndent();\n\t\tresult += tab() + \"goto \" + label_for_end + \";\" + NL;\n\t\tresult += tab() + label_for_code + \":{\" + NL;\n\t\tincIndent();\n\t\t\tresult += getThird().generateCode();\n\t\t\tresult += getSecond().generateCode(); //increment\n\t\t\tresult += tab() + \"goto \" + label_for_test + \";\" + NL;\n\t\tdecIndent();\n\t\tresult += tab() + \"}\" + NL;\n\t\tresult += tab() + label_for_end + \":{}\" + NL;\n\t\t\n\t\treturn result;\n\t}", "url": "https://raw.githubusercontent.com/RhenaudTheLukark/Lea2C/master/src/fr/ubordeaux/deptinfo/compilation/lea/abstract_syntax/StmFOR.java", "stars": "3", "class_props": {"extends": "StmTernary", "implements": null, "modifiers": ["public"]}}, {"id": 63517, "method_name": "checkType", "class_name": "StmFOR", "params": [], "throws": ["TypeException"], "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void checkType() throws TypeException {\n\t\texpr.checkType();\n\t\tif (this.getFirst() != null)\n\t\t\tthis.getFirst().checkType();\n\t\tif (this.getSecond() != null)\n\t\t\tthis.getSecond().checkType();\n\t\tif (this.getThird() != null)\n\t\t\tthis.getThird().checkType();\n\t\texpr.getType().assertType(this, TypeCode.BOOLEAN);\n\t}", "url": "https://raw.githubusercontent.com/RhenaudTheLukark/Lea2C/master/src/fr/ubordeaux/deptinfo/compilation/lea/abstract_syntax/StmFOR.java", "stars": "3", "class_props": {"extends": "StmTernary", "implements": null, "modifiers": ["public"]}}, {"id": 63518, "method_name": "toString", "class_name": "StmFOR", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "\tpublic String toString() {\n\t\treturn \"for (... ; ... ; ...)\";\n\t}", "url": "https://raw.githubusercontent.com/RhenaudTheLukark/Lea2C/master/src/fr/ubordeaux/deptinfo/compilation/lea/abstract_syntax/StmFOR.java", "stars": "3", "class_props": {"extends": "StmTernary", "implements": null, "modifiers": ["public"]}}, {"id": 63519, "method_name": "getSupportedFallbackId", "class_name": "YouTubeManager", "params": ["int"], "throws": null, "modifiers": ["static", "private"], "return_type": "int", "snippet": "    private static int getSupportedFallbackId(int oldId) {\n        final int supportedFormatIds[] = {13,  //3GPP (MPEG-4 encoded) Low quality\n                17,  //3GPP (MPEG-4 encoded) Medium quality\n                18,  //MP4  (H.264 encoded) Normal quality\n                22,  //MP4  (H.264 encoded) High quality\n                37   //MP4  (H.264 encoded) High quality\n        };\n        int fallbackId = oldId;\n        for (int i = supportedFormatIds.length - 1; i >= 0; i--) {\n            if (oldId == supportedFormatIds[i] && i > 0) {\n                fallbackId = supportedFormatIds[i - 1];\n            }\n        }\n        return fallbackId;\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/manager/youtube/YouTubeManager.java", "stars": "4", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 63520, "method_name": "isYouTubeUrl", "class_name": "YouTubeManager", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean isYouTubeUrl(String youtubeUrl) {\n        String expression = \"^.*((youtu.be\\\\/)|(v\\\\/)|(\\\\/u\\\\/w\\\\/)|(embed\\\\/)|(watch\\\\?))\\\\??v?=?([^#\\\\&\\\\?]*).*\"; // var regExp = /^.*((youtu.be\\/)|(v\\/)|(\\/u\\/\\w\\/)|(embed\\/)|(watch\\?))\\??v?=?([^#\\&\\?]*).*/;\n        Pattern pattern = Pattern.compile(expression, Pattern.CASE_INSENSITIVE);\n        Matcher matcher = pattern.matcher(youtubeUrl);\n        return matcher.matches();\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/manager/youtube/YouTubeManager.java", "stars": "4", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 63521, "method_name": "getYouTubeVideoId", "class_name": "YouTubeManager", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getYouTubeVideoId(String youtubeUrl) {\n        String videoId = \"\";\n        if (youtubeUrl != null && youtubeUrl.trim().length() > 0 && youtubeUrl.startsWith(\"http\")) {\n            String expression = \"^.*((youtu.be\\\\/)|(v\\\\/)|(\\\\/u\\\\/w\\\\/)|(embed\\\\/)|(watch\\\\?))\\\\??v?=?([^#\\\\&\\\\?]*).*\"; // var regExp = /^.*((youtu.be\\/)|(v\\/)|(\\/u\\/\\w\\/)|(embed\\/)|(watch\\?))\\??v?=?([^#\\&\\?]*).*/;\n            Pattern pattern = Pattern.compile(expression, Pattern.CASE_INSENSITIVE);\n            Matcher matcher = pattern.matcher(youtubeUrl);\n            if (matcher.matches()) {\n                String groupIndex1 = matcher.group(7);\n                if (groupIndex1 != null && groupIndex1.length() == 11)\n                    videoId = groupIndex1;\n            }\n        }\n        return videoId;\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/manager/youtube/YouTubeManager.java", "stars": "4", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 63522, "method_name": "calculateYouTubeUrl", "class_name": "YouTubeManager", "params": ["String", "boolean", "String"], "throws": ["IOException"], "modifiers": ["public"], "return_type": "String", "snippet": "    public String calculateYouTubeUrl(String quality, boolean fallback, String videoId) throws IOException {\n\n        String uriStr = null;\n\n        Request.Builder request = new Request.Builder();\n        request.url(YOUTUBE_VIDEO_INFORMATION_URL + videoId);\n        Call call = client.newCall(request.build());\n        Response response = call.execute();\n        if (!response.isSuccessful())\n            return null;\n\n        String infoStr = response.body().string();\n\n        String[] args = infoStr.split(\"&\");\n        Map<String, String> argMap = new HashMap<>();\n        for (String arg : args) {\n            String[] valStrArr = arg.split(\"=\");\n            if (valStrArr.length >= 2) {\n                argMap.put(valStrArr[0], URLDecoder.decode(valStrArr[1]));\n            }\n        }\n\n        //Find out the URI string from the parameters\n\n        //Populate the list of formats for the video\n        String fmtList = URLDecoder.decode(argMap.get(\"fmt_list\"), \"utf-8\");\n        ArrayList<Format> formats = new ArrayList<>();\n        if (null != fmtList) {\n            String formatStrs[] = fmtList.split(\",\");\n\n            for (String lFormatStr : formatStrs) {\n                Format format = new Format(lFormatStr);\n                formats.add(format);\n            }\n        }\n\n        //Populate the list of streams for the video\n        String streamList = argMap.get(\"url_encoded_fmt_stream_map\");\n        if (null != streamList) {\n            String streamStrs[] = streamList.split(\",\");\n            ArrayList<VideoStream> streams = new ArrayList<>();\n            for (String streamStr : streamStrs) {\n                VideoStream lStream = new VideoStream(streamStr);\n                streams.add(lStream);\n            }\n\n            //Search for the given format in the list of video formats\n            // if it is there, select the corresponding stream\n            // otherwise if fallback is requested, check for next lower format\n            int formatId = Integer.parseInt(quality);\n\n            Format searchFormat = new Format(formatId);\n            while (!formats.contains(searchFormat) && fallback) {\n                int oldId = searchFormat.getId();\n                int newId = getSupportedFallbackId(oldId);\n\n                if (oldId == newId) {\n                    break;\n                }\n                searchFormat = new Format(newId);\n            }\n\n            int index = formats.indexOf(searchFormat);\n            if (index >= 0) {\n                VideoStream searchStream = streams.get(index);\n                uriStr = searchStream.getUrl();\n            }\n\n        }\n        //Return the URI string. It may be null if the format (or a fallback format if enabled)\n        // is not found in the list of formats for the video\n        return uriStr;\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/manager/youtube/YouTubeManager.java", "stars": "4", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 63523, "method_name": "getIpTest", "class_name": "IpUtilTest", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void getIpTest() {\n        String machineIp = IpUtil.getMachineIp();\n        System.out.println(machineIp);\n    }", "url": "https://raw.githubusercontent.com/rubywooJ/beyond/master/src/test/java/cn/tsxygfy/beyond/IpUtilTest.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 63524, "method_name": "isList", "class_name": "ReflectUtil", "params": ["Object"], "throws": null, "modifiers": ["public", "static"], "return_type": "boolean", "snippet": "    public static boolean isList(Object obj) {\n        if (obj == null) return false;\n\n        Class<?> type = obj.getClass();\n\n        return obj instanceof List || type.isArray();\n    }", "url": "https://raw.githubusercontent.com/Virjid/Kartingjson/master/src/main/java/me/virjid/karting/json/util/ReflectUtil.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 63525, "method_name": "isMap", "class_name": "ReflectUtil", "params": ["Object"], "throws": null, "modifiers": ["public", "static"], "return_type": "boolean", "snippet": "    public static boolean isMap(Object obj) {\n        if (obj == null) return false;\n\n        return obj instanceof Map;\n    }", "url": "https://raw.githubusercontent.com/Virjid/Kartingjson/master/src/main/java/me/virjid/karting/json/util/ReflectUtil.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 63526, "method_name": "isDateTime", "class_name": "ReflectUtil", "params": ["Object"], "throws": null, "modifiers": ["public", "static"], "return_type": "boolean", "snippet": "    public static boolean isDateTime(Object obj) {\n        return obj instanceof TemporalAccessor;\n    }", "url": "https://raw.githubusercontent.com/Virjid/Kartingjson/master/src/main/java/me/virjid/karting/json/util/ReflectUtil.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 63527, "method_name": "isWrapper", "class_name": "ReflectUtil", "params": ["Class<?>"], "throws": null, "modifiers": ["public", "static"], "return_type": "boolean", "snippet": "    public static boolean isWrapper(Class<?> type) {\n        return type == Integer.class || type == Long.class || type == Boolean.class\n                || type == Double.class || type == Float.class\n                || type == Character.class || type == Byte.class\n                || type == Short.class;\n    }", "url": "https://raw.githubusercontent.com/Virjid/Kartingjson/master/src/main/java/me/virjid/karting/json/util/ReflectUtil.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 63528, "method_name": "isNotJSONObject", "class_name": "ReflectUtil", "params": ["Object"], "throws": null, "modifiers": ["public", "static"], "return_type": "boolean", "snippet": "    public static boolean isNotJSONObject(Object val) {\n        if (val == null) return true;\n\n        Class<?> type = val.getClass();\n        return type.isPrimitive() || isWrapper(type) || type == String.class;\n    }", "url": "https://raw.githubusercontent.com/Virjid/Kartingjson/master/src/main/java/me/virjid/karting/json/util/ReflectUtil.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 63529, "method_name": "isJSONObject", "class_name": "ReflectUtil", "params": ["Object"], "throws": null, "modifiers": ["public", "static"], "return_type": "boolean", "snippet": "    public static boolean isJSONObject(Object val) {\n        return !isNotJSONObject(val);\n    }", "url": "https://raw.githubusercontent.com/Virjid/Kartingjson/master/src/main/java/me/virjid/karting/json/util/ReflectUtil.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 63530, "method_name": "objectToMap", "class_name": "ReflectUtil", "params": ["Object"], "throws": null, "modifiers": ["public", "static"], "return_type": "Map<String,Object>", "snippet": "    public static Map<String, Object> objectToMap(@NotNull Object obj) {\n        Map<String, Object> map = new HashMap<>();\n\n        Field[] fields = obj.getClass().getDeclaredFields();\n\n        try {\n            for (Field field : fields) {\n                int mod = field.getModifiers();\n                if (Modifier.isStatic(mod) || Modifier.isFinal(mod) || Modifier.isTransient(mod)) {\n                    continue;\n                }\n\n                // \u83b7\u53d6Transient\u6ce8\u89e3\n                if (field.getAnnotation(Transient.class) != null) {\n                    continue;\n                }\n\n                boolean accessible = field.isAccessible();\n                field.setAccessible(true);\n\n                String key = field.getName();\n                Object val = field.get(obj);\n\n                // \u5904\u7406\u65f6\u95f4\u7c7b\u578b\n                if (isDateTime(val)) {\n                    TimeFormat timeFormat = field.getAnnotation(TimeFormat.class);\n                    if (timeFormat == null) {\n                        map.put(key, val);\n                    } else {\n                        String pattern  = timeFormat.value();\n\n                        if (\"\".equals(pattern)) {\n                            map.put(key, StringUtil.dateTimeToString((TemporalAccessor) val));\n                        } else {\n                            map.put(key, StringUtil.dateTimeToString((TemporalAccessor) val, pattern));\n                        }\n                    }\n                }\n                // \u76f4\u63a5\u5b58\u653e\u81f3Map\n                else {\n                    map.put(key, val);\n                }\n\n                field.setAccessible(accessible);\n            }\n        } catch (IllegalAccessException e) {\n            throw new RuntimeException(e);\n        }\n\n        return map;\n    }", "url": "https://raw.githubusercontent.com/Virjid/Kartingjson/master/src/main/java/me/virjid/karting/json/util/ReflectUtil.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 63531, "method_name": "asList", "class_name": "ReflectUtil", "params": ["Object"], "throws": null, "modifiers": ["public", "static"], "return_type": "List<?>", "snippet": "    public static List<?> asList(Object obj) {\n        if (obj instanceof List) return (List<?>) obj;\n\n        if (obj.getClass().isArray()) {\n            Class<?> type = obj.getClass().getComponentType();\n            if (!type.isPrimitive()) {\n                return Arrays.asList((Object[]) obj);\n            }\n\n            if (type == int.class) {\n                return Arrays.stream((int[]) obj).boxed().collect(Collectors.toList());\n            }\n\n            if (type == boolean.class) {\n                boolean[] booleans = (boolean[]) obj;\n                return IntStream.range(0, booleans.length)\n                        .mapToObj(idx -> booleans[idx])\n                        .collect(Collectors.toList());\n            }\n\n            if (type == double.class) {\n                return Arrays.stream((double[]) obj).boxed().collect(Collectors.toList());\n            }\n\n            if (type == float.class) {\n                float[] floats = (float[]) obj;\n                return IntStream.range(0, floats.length)\n                        .mapToObj(idx -> floats[idx])\n                        .collect(Collectors.toList());\n            }\n\n            if (type == long.class) {\n                return Arrays.stream((long[]) obj).boxed().collect(Collectors.toList());\n            }\n\n            if (type == char.class) {\n                char[] chars = (char[]) obj;\n                return IntStream.range(0, chars.length)\n                        .mapToObj(idx -> chars[idx])\n                        .collect(Collectors.toList());\n            }\n\n            if (type == byte.class) {\n                byte[] bytes = (byte[]) obj;\n                return IntStream.range(0, bytes.length)\n                        .mapToObj(idx -> bytes[idx])\n                        .collect(Collectors.toList());\n            }\n\n            if (type == short.class) {\n                short[] shorts = (short[]) obj;\n                return IntStream.range(0, shorts.length)\n                        .mapToObj(idx -> shorts[idx])\n                        .collect(Collectors.toList());\n            }\n        }\n\n        return Collections.singletonList(obj);\n    }", "url": "https://raw.githubusercontent.com/Virjid/Kartingjson/master/src/main/java/me/virjid/karting/json/util/ReflectUtil.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 63532, "method_name": "whetherResendMessage", "class_name": "MessageResendService", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void  whetherResendMessage(){\n\n        //1.\u6839\u636e\u5df2\u7ecf\u91cd\u53d1\u6b21\u6570\u5927\u5230\u5c0f\u8fdb\u884c\u5904\u7406\u9700\u8981\u91cd\u53d1\u7684\u6d88\u606f,\u4f18\u5148\u5904\u7406\u5feb\u8981\u8fbe\u5230\u6700\u5927\u91cd\u8bd5\u6b21\u6570\u7684\u6d88\u606f\u3002\n        int maxRetryCounts = messageResendConfig.getInterval().size();//\u6839\u636e\u65f6\u95f4\u95f4\u9694\u83b7\u53d6\u6700\u5927\u7684\u91cd\u53d1\u6b21\u6570\n        for (int retryNum = maxRetryCounts-1; retryNum >= 0 ; retryNum--) {\n             resend(retryNum);\n        }\n        awaitComplete();//\u67e5\u770b\u8fd0\u884c\u8fc7\u7a0b\u4e2d\u7ebf\u7a0b\u6570\u91cf\n    }", "url": "https://raw.githubusercontent.com/JeremyKinge/rtm/master/rtm-pcm/src/main/java/com/kingge/rtm/pcm/service/impl/MessageResendService.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 63533, "method_name": "resend", "class_name": "MessageResendService", "params": ["int"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void resend(int retryNum) {\n\n        TKMessageExample queryParam = getQueryParam(retryNum);\n\n        //3.\u5206\u9875\u67e5\u8be2\n        int pageSize = messageResendConfig.getCorePoolSize();//\u6bcf\u6b21\u53d6\u7684\u6570\u636e\u6ee1\u8db3\u6700\u5c0f\u7ebf\u7a0b\u6c60\u4e2a\u6570\n        boolean countFlag = true;\n        int totalPage = 0;//\u603b\u9875\u6570\u9000\u51fa\u5faa\u73af\u6761\u4ef6\n        int pageNum = 1;//\u9ed8\u8ba4\u83b7\u53d6\u7b2c\u4e00\u9875\n        while(true){\n            Page<TKMessage> pageResult = PageHelper.startPage(pageNum, pageSize, countFlag).setOrderBy(\"confirm_msg_time\");\n            tkMessageMapper.pageByExample(queryParam);\n            //\u904d\u5386\u9700\u8981\u91cd\u53d1\u5230mq\u7684\u6d88\u606f\n            for (TKMessage msg : pageResult.getResult()){\n                //\u8c03\u7528\u7ebf\u7a0b\u6c60\u91cd\u53d1\u6d88\u606f\u5230mq\n                try {\n                    messageResendExecutor.execute( () -> resendMesage(msg) );\n                } catch (RejectedExecutionException e) {//\u5fc5\u987b\u5904\u7406\u5f02\u5e38\uff0c\u5426\u5219\u4f1a\u5f71\u54cd\u540e\u9762\u7684\u7ebf\u7a0b\u6267\u884c\n                    log.error(\"\u3010 CheckResendMsgTimer \u3011Thread pool exhaustion:\" + e.getMessage());\n                }\n            }\n            if (countFlag) {//\u4e0d\u662f\u9996\u9875\uff0c\u90a3\u4e48\u5c31\u4e0d\u9700\u8981\u83b7\u53d6\u603b\u9875\u6570\u4e86\n                countFlag = false;\n                totalPage = pageResult.getPages();\n            }\n            if (pageNum >= totalPage) {//\u5f53\u524d\u8bfb\u53d6\u9875\u6570\u7b49\u4e8e\u603b\u9875\u6570\uff0c\u6570\u636e\u8bfb\u53d6\u5b8c\u6bd5\uff0c\u9000\u51fa\u5faa\u73af\n                break;\n            }\n\n            pageNum++;\n        }\n\n\n    }", "url": "https://raw.githubusercontent.com/JeremyKinge/rtm/master/rtm-pcm/src/main/java/com/kingge/rtm/pcm/service/impl/MessageResendService.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 63534, "method_name": "resendMesage", "class_name": "MessageResendService", "params": ["TKMessage"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void resendMesage(TKMessage msg) {\n        try {\n            log.info(\"\u3010 CheckResendMsgTimer \u3011 resend message ={}\", JSONUtil.toJsonStr(msg));\n\n            iKafkaService.sendMessage(msg);\n\n        } catch (Exception e) {\n            log.error(\"\u3010 CheckResendMsgTimer \u3011call resendMesage()  Exception, messageId=\" + msg.getMsgId() + \", error:\", e);\n        }\n    }", "url": "https://raw.githubusercontent.com/JeremyKinge/rtm/master/rtm-pcm/src/main/java/com/kingge/rtm/pcm/service/impl/MessageResendService.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 63535, "method_name": "getQueryParam", "class_name": "MessageResendService", "params": ["int"], "throws": null, "modifiers": ["private"], "return_type": "TKMessageExample", "snippet": "    private TKMessageExample getQueryParam(int retryNum) {\n\n        LocalDateTime checktime = LocalDateTime.now().minusMinutes(getResendInterval(retryNum));\n        String dateStr = checktime.format(DateTimeFormatter.ofPattern(DateUtil.DATE_TIME_FORMAT_YYYY_MM_DD_HH_MI_SS));\n\n        //2.\u62fc\u63a5\u67e5\u8be2\u53c2\u6570\n        TKMessageExample param = new TKMessageExample();\n        param.createCriteria().andMsgStatusEqualTo(Constants.MSG_STATUS_SENDING)//\u5f85\u786e\u8ba4\u6d88\u8d39\u7684\u6d88\u606f\n                .andCreateMsgTimeLessThanOrEqualTo(DateUtil.strToDate(dateStr,\n                        DateUtil.DATE_TIME_FORMAT_YYYY_MM_DD_HH_MI_SS))//\u8fd9\u4e2a\u503c\u5f88\u5173\u952e\uff0c\u907f\u514d\u6d88\u606f\u5728\u6ca1\u6709\u5230\u65f6\u95f4\u95f4\u9694\u65f6\u5c31\u88ab\u5b9a\u65f6\u5668\u68c0\u67e5\n                                                                        //\u597d\u5904\u5c31\u662f\uff0c\u907f\u514d\u521a\u53d1\u9001\u5230mq\u7684\u6d88\u606f\uff0c\u76f4\u63a5\u7565\u8fc7\u68c0\u67e5\uff0c\u907f\u514d\u6b64\u523b\u91cd\u590d\u53d1\u9001\u3002\n                .andMsgDStatusEqualTo(Constants.MSG_DEAD_STATUS_NORMAL)//\u672a\u6b7b\u4ea1\u7684\u6d88\u606f\n                .andRetryCountsEqualTo(retryNum+\"\");//\u91cd\u8bd5\u6b21\u6570\u7b49\u4e8e\u5f53\u524d\u7684\u503c\n\n        return param;\n    }", "url": "https://raw.githubusercontent.com/JeremyKinge/rtm/master/rtm-pcm/src/main/java/com/kingge/rtm/pcm/service/impl/MessageResendService.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 63536, "method_name": "getResendInterval", "class_name": "MessageResendService", "params": ["int"], "throws": null, "modifiers": ["private"], "return_type": "long", "snippet": "    private long getResendInterval(int retryNum) {\n        long result = 0L;\n        List<Long> interval = messageResendConfig.getInterval();\n        for (int i = 0; i <= retryNum; i++) {\n            result += interval.get(i);\n        }\n        return result;\n    }", "url": "https://raw.githubusercontent.com/JeremyKinge/rtm/master/rtm-pcm/src/main/java/com/kingge/rtm/pcm/service/impl/MessageResendService.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 63537, "method_name": "awaitComplete", "class_name": "MessageResendService", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void awaitComplete() {\n        try {\n            log.info(\"\u3010CheckResendMsgTimer\u3011start wait all thread complete\");\n            int checkInterval = 1000;\n            int maxCheckCount = messageResendConfig.getWaitCompleteTimeout() / checkInterval;\n            int count = 0;\n            while (count < maxCheckCount) {\n                log.info(\"\u3010CheckResendMsgTimer\u3011activeThreadCount=\" + messageResendExecutor.getActiveCount());\n                if (0 == messageResendExecutor.getActiveCount()) {//\u9700\u8981\u6ce8\u610fgetActiveCount\u65b9\u6cd5\uff0c\u53ea\u662f\u8fd4\u56de\u4e00\u4e2a\u8fd1\u4f3c\u7684\u6b63\u5728\u6267\u884c\u4efb\u52a1\u7684\u7ebf\u7a0b\u6570\u91cf\u3002\u5982\u679c\u7b49\u4e8e0\u3002\n                    // \u8bf4\u660e\u7ebf\u7a0b\u6c60\u4e2d\u5df2\u7ecf\u6ca1\u6709\u7ebf\u7a0b\u6267\u884c\u3002\n                    break;\n                }\n                ThreadUtil.sleep(checkInterval);//\u6240\u4ee5\u4e3a\u4e86\u5f97\u5230\u6b63\u786e\u7684\u6b63\u5728\u6267\u884c\u7684\u7ebf\u7a0b\u6570\u91cf\uff0c\u6211\u4eec\u9700\u8981\u8ba9\u4e3b\u7ebf\u7a0b\u7a0d\u5fae\u7b49\u4e00\u4f1a\u3002\n                count++;\n            }\n            log.info(\"\u3010CheckResendMsgTimer\u3011all thread completed\");\n        } catch (Exception e) {\n            log.error(\"\u3010CheckResendMsgTimer\u3011WaitComplete Exception:\", e);\n        }\n    }", "url": "https://raw.githubusercontent.com/JeremyKinge/rtm/master/rtm-pcm/src/main/java/com/kingge/rtm/pcm/service/impl/MessageResendService.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 63538, "method_name": "onCreate", "class_name": "EntityTimestamp", "params": [], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void onCreate()\n    {\n        timestampUpdated = timestampCreated = new Date();\n    }", "url": "https://raw.githubusercontent.com/billsonnn/nitro-java/master/application/src/main/java/com/nitro/application/database/abstracts/EntityTimestamp.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 63539, "method_name": "onUpdate", "class_name": "EntityTimestamp", "params": [], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void onUpdate()\n    {\n        timestampUpdated = new Date();\n    }", "url": "https://raw.githubusercontent.com/billsonnn/nitro-java/master/application/src/main/java/com/nitro/application/database/abstracts/EntityTimestamp.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 63540, "method_name": "getTimestampCreated", "class_name": "EntityTimestamp", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Date", "snippet": "    public Date getTimestampCreated() {\n        return this.timestampCreated;\n    }", "url": "https://raw.githubusercontent.com/billsonnn/nitro-java/master/application/src/main/java/com/nitro/application/database/abstracts/EntityTimestamp.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 63541, "method_name": "getTimestampUpdated", "class_name": "EntityTimestamp", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Date", "snippet": "    public Date getTimestampUpdated() {\n        return this.timestampUpdated;\n    }", "url": "https://raw.githubusercontent.com/billsonnn/nitro-java/master/application/src/main/java/com/nitro/application/database/abstracts/EntityTimestamp.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 63542, "method_name": "generateRandomString", "class_name": "Code02_TrieTree", "params": ["int"], "throws": null, "modifiers": ["public", "static"], "return_type": "String", "snippet": "\tpublic static String generateRandomString(int strLen) {\n\t\tchar[] ans = new char[(int) (Math.random() * strLen) + 1];\n\t\tfor (int i = 0; i < ans.length; i++) {\n\t\t\tint value = (int) (Math.random() * 6);\n\t\t\tans[i] = (char) (97 + value);\n\t\t}\n\t\treturn String.valueOf(ans);\n\t}", "url": "https://raw.githubusercontent.com/algorithmzuo/algorithmbasic2020/master/src/class05/Code02_TrieTree.java", "stars": "27", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 63543, "method_name": "generateRandomStringArray", "class_name": "Code02_TrieTree", "params": ["int", "int"], "throws": null, "modifiers": ["public", "static"], "return_type": "String", "snippet": "\tpublic static String[] generateRandomStringArray(int arrLen, int strLen) {\n\t\tString[] ans = new String[(int) (Math.random() * arrLen) + 1];\n\t\tfor (int i = 0; i < ans.length; i++) {\n\t\t\tans[i] = generateRandomString(strLen);\n\t\t}\n\t\treturn ans;\n\t}", "url": "https://raw.githubusercontent.com/algorithmzuo/algorithmbasic2020/master/src/class05/Code02_TrieTree.java", "stars": "27", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 63544, "method_name": "main", "class_name": "Code02_TrieTree", "params": ["String"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "\tpublic static void main(String[] args) {\n\t\tint arrLen = 100;\n\t\tint strLen = 20;\n\t\tint testTimes = 100000;\n\t\tfor (int i = 0; i < testTimes; i++) {\n\t\t\tString[] arr = generateRandomStringArray(arrLen, strLen);\n\t\t\tTrie1 trie1 = new Trie1();\n\t\t\tTrie2 trie2 = new Trie2();\n\t\t\tRight right = new Right();\n\t\t\tfor (int j = 0; j < arr.length; j++) {\n\t\t\t\tdouble decide = Math.random();\n\t\t\t\tif (decide < 0.25) {\n\t\t\t\t\ttrie1.insert(arr[j]);\n\t\t\t\t\ttrie2.insert(arr[j]);\n\t\t\t\t\tright.insert(arr[j]);\n\t\t\t\t} else if (decide < 0.5) {\n\t\t\t\t\ttrie1.delete(arr[j]);\n\t\t\t\t\ttrie2.delete(arr[j]);\n\t\t\t\t\tright.delete(arr[j]);\n\t\t\t\t} else if (decide < 0.75) {\n\t\t\t\t\tint ans1 = trie1.search(arr[j]);\n\t\t\t\t\tint ans2 = trie2.search(arr[j]);\n\t\t\t\t\tint ans3 = right.search(arr[j]);\n\t\t\t\t\tif (ans1 != ans2 || ans2 != ans3) {\n\t\t\t\t\t\tSystem.out.println(\"Oops!\");\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tint ans1 = trie1.prefixNumber(arr[j]);\n\t\t\t\t\tint ans2 = trie2.prefixNumber(arr[j]);\n\t\t\t\t\tint ans3 = right.prefixNumber(arr[j]);\n\t\t\t\t\tif (ans1 != ans2 || ans2 != ans3) {\n\t\t\t\t\t\tSystem.out.println(\"Oops!\");\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tSystem.out.println(\"finish!\");\n\n\t}", "url": "https://raw.githubusercontent.com/algorithmzuo/algorithmbasic2020/master/src/class05/Code02_TrieTree.java", "stars": "27", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 63545, "method_name": "insert", "class_name": "Trie1", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\t\tpublic void insert(String word) {\n\t\t\tif (word == null) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tchar[] str = word.toCharArray();\n\t\t\tNode1 node = root;\n\t\t\tnode.pass++;\n\t\t\tint path = 0;\n\t\t\tfor (int i = 0; i < str.length; i++) { // \u4ece\u5de6\u5f80\u53f3\u904d\u5386\u5b57\u7b26\n\t\t\t\tpath = str[i] - 'a'; // \u7531\u5b57\u7b26\uff0c\u5bf9\u5e94\u6210\u8d70\u5411\u54ea\u6761\u8def\n\t\t\t\tif (node.nexts[path] == null) {\n\t\t\t\t\tnode.nexts[path] = new Node1();\n\t\t\t\t}\n\t\t\t\tnode = node.nexts[path];\n\t\t\t\tnode.pass++;\n\t\t\t}\n\t\t\tnode.end++;\n\t\t}", "url": "https://raw.githubusercontent.com/algorithmzuo/algorithmbasic2020/master/src/class05/Code02_TrieTree.java", "stars": "27", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "static"]}}, {"id": 63546, "method_name": "delete", "class_name": "Trie1", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\t\tpublic void delete(String word) {\n\t\t\tif (search(word) != 0) {\n\t\t\t\tchar[] chs = word.toCharArray();\n\t\t\t\tNode1 node = root;\n\t\t\t\tnode.pass--;\n\t\t\t\tint path = 0;\n\t\t\t\tfor (int i = 0; i < chs.length; i++) {\n\t\t\t\t\tpath = chs[i] - 'a';\n\t\t\t\t\tif (--node.nexts[path].pass == 0) {\n\t\t\t\t\t\tnode.nexts[path] = null;\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tnode = node.nexts[path];\n\t\t\t\t}\n\t\t\t\tnode.end--;\n\t\t\t}\n\t\t}", "url": "https://raw.githubusercontent.com/algorithmzuo/algorithmbasic2020/master/src/class05/Code02_TrieTree.java", "stars": "27", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "static"]}}, {"id": 63547, "method_name": "search", "class_name": "Trie1", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "\t\tpublic int search(String word) {\n\t\t\tif (word == null) {\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t\tchar[] chs = word.toCharArray();\n\t\t\tNode1 node = root;\n\t\t\tint index = 0;\n\t\t\tfor (int i = 0; i < chs.length; i++) {\n\t\t\t\tindex = chs[i] - 'a';\n\t\t\t\tif (node.nexts[index] == null) {\n\t\t\t\t\treturn 0;\n\t\t\t\t}\n\t\t\t\tnode = node.nexts[index];\n\t\t\t}\n\t\t\treturn node.end;\n\t\t}", "url": "https://raw.githubusercontent.com/algorithmzuo/algorithmbasic2020/master/src/class05/Code02_TrieTree.java", "stars": "27", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "static"]}}, {"id": 63548, "method_name": "prefixNumber", "class_name": "Trie1", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "\t\tpublic int prefixNumber(String pre) {\n\t\t\tif (pre == null) {\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t\tchar[] chs = pre.toCharArray();\n\t\t\tNode1 node = root;\n\t\t\tint index = 0;\n\t\t\tfor (int i = 0; i < chs.length; i++) {\n\t\t\t\tindex = chs[i] - 'a';\n\t\t\t\tif (node.nexts[index] == null) {\n\t\t\t\t\treturn 0;\n\t\t\t\t}\n\t\t\t\tnode = node.nexts[index];\n\t\t\t}\n\t\t\treturn node.pass;\n\t\t}", "url": "https://raw.githubusercontent.com/algorithmzuo/algorithmbasic2020/master/src/class05/Code02_TrieTree.java", "stars": "27", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "static"]}}, {"id": 63549, "method_name": "insert", "class_name": "Trie2", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\t\tpublic void insert(String word) {\n\t\t\tif (word == null) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tchar[] chs = word.toCharArray();\n\t\t\tNode2 node = root;\n\t\t\tnode.pass++;\n\t\t\tint index = 0;\n\t\t\tfor (int i = 0; i < chs.length; i++) {\n\t\t\t\tindex = (int) chs[i];\n\t\t\t\tif (!node.nexts.containsKey(index)) {\n\t\t\t\t\tnode.nexts.put(index, new Node2());\n\t\t\t\t}\n\t\t\t\tnode = node.nexts.get(index);\n\t\t\t\tnode.pass++;\n\t\t\t}\n\t\t\tnode.end++;\n\t\t}", "url": "https://raw.githubusercontent.com/algorithmzuo/algorithmbasic2020/master/src/class05/Code02_TrieTree.java", "stars": "27", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "static"]}}, {"id": 63550, "method_name": "delete", "class_name": "Trie2", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\t\tpublic void delete(String word) {\n\t\t\tif (search(word) != 0) {\n\t\t\t\tchar[] chs = word.toCharArray();\n\t\t\t\tNode2 node = root;\n\t\t\t\tnode.pass--;\n\t\t\t\tint index = 0;\n\t\t\t\tfor (int i = 0; i < chs.length; i++) {\n\t\t\t\t\tindex = (int) chs[i];\n\t\t\t\t\tif (--node.nexts.get(index).pass == 0) {\n\t\t\t\t\t\tnode.nexts.remove(index);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tnode = node.nexts.get(index);\n\t\t\t\t}\n\t\t\t\tnode.end--;\n\t\t\t}\n\t\t}", "url": "https://raw.githubusercontent.com/algorithmzuo/algorithmbasic2020/master/src/class05/Code02_TrieTree.java", "stars": "27", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "static"]}}, {"id": 63551, "method_name": "search", "class_name": "Trie2", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "\t\tpublic int search(String word) {\n\t\t\tif (word == null) {\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t\tchar[] chs = word.toCharArray();\n\t\t\tNode2 node = root;\n\t\t\tint index = 0;\n\t\t\tfor (int i = 0; i < chs.length; i++) {\n\t\t\t\tindex = (int) chs[i];\n\t\t\t\tif (!node.nexts.containsKey(index)) {\n\t\t\t\t\treturn 0;\n\t\t\t\t}\n\t\t\t\tnode = node.nexts.get(index);\n\t\t\t}\n\t\t\treturn node.end;\n\t\t}", "url": "https://raw.githubusercontent.com/algorithmzuo/algorithmbasic2020/master/src/class05/Code02_TrieTree.java", "stars": "27", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "static"]}}, {"id": 63552, "method_name": "prefixNumber", "class_name": "Trie2", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "\t\tpublic int prefixNumber(String pre) {\n\t\t\tif (pre == null) {\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t\tchar[] chs = pre.toCharArray();\n\t\t\tNode2 node = root;\n\t\t\tint index = 0;\n\t\t\tfor (int i = 0; i < chs.length; i++) {\n\t\t\t\tindex = (int) chs[i];\n\t\t\t\tif (!node.nexts.containsKey(index)) {\n\t\t\t\t\treturn 0;\n\t\t\t\t}\n\t\t\t\tnode = node.nexts.get(index);\n\t\t\t}\n\t\t\treturn node.pass;\n\t\t}", "url": "https://raw.githubusercontent.com/algorithmzuo/algorithmbasic2020/master/src/class05/Code02_TrieTree.java", "stars": "27", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "static"]}}, {"id": 63553, "method_name": "insert", "class_name": "Right", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\t\tpublic void insert(String word) {\n\t\t\tif (!box.containsKey(word)) {\n\t\t\t\tbox.put(word, 1);\n\t\t\t} else {\n\t\t\t\tbox.put(word, box.get(word) + 1);\n\t\t\t}\n\t\t}", "url": "https://raw.githubusercontent.com/algorithmzuo/algorithmbasic2020/master/src/class05/Code02_TrieTree.java", "stars": "27", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "static"]}}, {"id": 63554, "method_name": "delete", "class_name": "Right", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\t\tpublic void delete(String word) {\n\t\t\tif (box.containsKey(word)) {\n\t\t\t\tif (box.get(word) == 1) {\n\t\t\t\t\tbox.remove(word);\n\t\t\t\t} else {\n\t\t\t\t\tbox.put(word, box.get(word) - 1);\n\t\t\t\t}\n\t\t\t}\n\t\t}", "url": "https://raw.githubusercontent.com/algorithmzuo/algorithmbasic2020/master/src/class05/Code02_TrieTree.java", "stars": "27", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "static"]}}, {"id": 63555, "method_name": "search", "class_name": "Right", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "\t\tpublic int search(String word) {\n\t\t\tif (!box.containsKey(word)) {\n\t\t\t\treturn 0;\n\t\t\t} else {\n\t\t\t\treturn box.get(word);\n\t\t\t}\n\t\t}", "url": "https://raw.githubusercontent.com/algorithmzuo/algorithmbasic2020/master/src/class05/Code02_TrieTree.java", "stars": "27", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "static"]}}, {"id": 63556, "method_name": "prefixNumber", "class_name": "Right", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "\t\tpublic int prefixNumber(String pre) {\n\t\t\tint count = 0;\n\t\t\tfor (String cur : box.keySet()) {\n\t\t\t\tif (cur.startsWith(pre)) {\n\t\t\t\t\tcount += box.get(cur);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn count;\n\t\t}", "url": "https://raw.githubusercontent.com/algorithmzuo/algorithmbasic2020/master/src/class05/Code02_TrieTree.java", "stars": "27", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "static"]}}, {"id": 63557, "method_name": "setView", "class_name": "MnemonicInputFragment", "params": [], "throws": null, "modifiers": ["protected"], "return_type": "int", "snippet": "    protected int setView() {\n        return R.layout.mnemonic_input_fragment;\n    }", "url": "https://raw.githubusercontent.com/CoboVault/cobo-vault-cold/master/app/src/main/java/com/cobo/cold/ui/fragment/setup/MnemonicInputFragment.java", "stars": "13", "class_props": {"extends": "SetupVaultBaseFragment", "implements": null, "modifiers": ["public"]}}, {"id": 63558, "method_name": "init", "class_name": "MnemonicInputFragment", "params": ["View"], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void init(View view) {\n        super.init(view);\n        mBinding.setViewModel(viewModel);\n        mBinding.toolbar.setNavigationOnClickListener(v -> navigateUp());\n        mBinding.table.setMnemonicNumber(viewModel.getMnemonicCount().get());\n        mBinding.importMnemonic.setOnClickListener(v -> {\n            Keyboard.hide(mActivity, mBinding.importMnemonic);\n            validateMnemonic(v);\n        });\n        mBinding.table.getWordsList().forEach(o -> o.addOnPropertyChangedCallback(\n                new Observable.OnPropertyChangedCallback() {\n                    @Override\n                    public void onPropertyChanged(Observable sender, int propertyId) {\n                        if (mBinding.table.getWordsList()\n                                .stream()\n                                .allMatch(s -> isValidWord(s.get()))) {\n                            mBinding.importMnemonic.setEnabled(true);\n                        } else {\n                            mBinding.importMnemonic.setEnabled(false);\n                        }\n                    }\n                }));\n        subscribeVaultState(viewModel);\n    }", "url": "https://raw.githubusercontent.com/CoboVault/cobo-vault-cold/master/app/src/main/java/com/cobo/cold/ui/fragment/setup/MnemonicInputFragment.java", "stars": "13", "class_props": {"extends": "SetupVaultBaseFragment", "implements": null, "modifiers": ["public"]}}, {"id": 63559, "method_name": "isValidWord", "class_name": "MnemonicInputFragment", "params": ["String"], "throws": null, "modifiers": ["public", "static"], "return_type": "boolean", "snippet": "    public static boolean isValidWord(String s) {\n        return !TextUtils.isEmpty(s) && Arrays.asList(WordList.words).indexOf(s) != -1;\n    }", "url": "https://raw.githubusercontent.com/CoboVault/cobo-vault-cold/master/app/src/main/java/com/cobo/cold/ui/fragment/setup/MnemonicInputFragment.java", "stars": "13", "class_props": {"extends": "SetupVaultBaseFragment", "implements": null, "modifiers": ["public"]}}, {"id": 63560, "method_name": "subscribeVaultState", "class_name": "MnemonicInputFragment", "params": ["SetupVaultViewModel"], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void subscribeVaultState(SetupVaultViewModel viewModel) {\n        viewModel.getVaultCreateState().observe(this, state -> {\n            if (state == VAULT_STATE_CREATING) {\n                showModal();\n            } else if (state == VAULT_STATE_CREATED) {\n                Utilities.setVaultCreated(mActivity);\n                Utilities.setVaultId(mActivity, viewModel.getVaultId());\n                Utilities.setCurrentBelongTo(mActivity, \"main\");\n                Utilities.setMnemonicCount(mActivity, viewModel.getMnemonicCount().get());\n\n                Runnable onComplete = () -> {\n                    if (dialog != null && dialog.getDialog() != null && dialog.getDialog().isShowing()) {\n                        dialog.dismiss();\n                    }\n                    Bundle data = new Bundle();\n                    data.putBoolean(IS_SETUP_VAULT, ((SetupVaultActivity) mActivity).isSetupVault);\n                    navigate(R.id.action_add_coin_type2, data);\n                };\n\n                List<CoinEntity> coins = PresetData.generateCoins(mActivity);\n                viewModel.presetData(coins, onComplete);\n            }\n        });\n    }", "url": "https://raw.githubusercontent.com/CoboVault/cobo-vault-cold/master/app/src/main/java/com/cobo/cold/ui/fragment/setup/MnemonicInputFragment.java", "stars": "13", "class_props": {"extends": "SetupVaultBaseFragment", "implements": null, "modifiers": ["public"]}}, {"id": 63561, "method_name": "validateMnemonic", "class_name": "MnemonicInputFragment", "params": ["View"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void validateMnemonic(View view) {\n        String mnemonic = mBinding.table.getWordsList()\n                .stream()\n                .map(ObservableField::get)\n                .reduce((s1, s2) -> s1 + \" \" + s2)\n                .orElse(\"\");\n\n\n        if (viewModel.validateMnemonic(mnemonic)) {\n            viewModel.writeMnemonic(mnemonic);\n            mBinding.table.getWordsList().clear();\n        } else {\n            Utilities.alert(mActivity,\n                    getString(R.string.hint),\n                    getString(R.string.wrong_mnemonic_please_check),\n                    getString(R.string.confirm), null);\n        }\n    }", "url": "https://raw.githubusercontent.com/CoboVault/cobo-vault-cold/master/app/src/main/java/com/cobo/cold/ui/fragment/setup/MnemonicInputFragment.java", "stars": "13", "class_props": {"extends": "SetupVaultBaseFragment", "implements": null, "modifiers": ["public"]}}, {"id": 63562, "method_name": "showModal", "class_name": "MnemonicInputFragment", "params": [], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void showModal() {\n        CreateVaultModalBinding binding = DataBindingUtil.inflate(LayoutInflater.from(mActivity),\n                R.layout.create_vault_modal, null, false);\n        dialog = ModalDialog.newInstance();\n        dialog.setBinding(binding);\n        dialog.show(mActivity.getSupportFragmentManager(), \"\");\n        String[] steps = mActivity.getResources().getStringArray(R.array.create_vault_step);\n        binding.step.setText(steps[0]);\n        Handler handler = new Handler();\n        Runnable runnable = new Runnable() {\n            int i = 0;\n\n            @Override\n            public void run() {\n                try {\n                    handler.postDelayed(this, 8000);\n                    binding.step.setText(steps[i]);\n                    i++;\n                    if (i > 4) {\n                        handler.removeCallbacks(this);\n                    }\n                } catch (Exception e) {\n                    e.printStackTrace();\n                }\n            }\n        };\n        handler.post(runnable);\n    }", "url": "https://raw.githubusercontent.com/CoboVault/cobo-vault-cold/master/app/src/main/java/com/cobo/cold/ui/fragment/setup/MnemonicInputFragment.java", "stars": "13", "class_props": {"extends": "SetupVaultBaseFragment", "implements": null, "modifiers": ["public"]}}, {"id": 63563, "method_name": "sendSimpleMessage", "class_name": "SampleActiveMqTests", "params": ["CapturedOutput"], "throws": ["InterruptedException"], "modifiers": [], "return_type": "void", "snippet": "\tvoid sendSimpleMessage(CapturedOutput output) throws InterruptedException {\n\t\tthis.producer.send(\"Test message\");\n\t\tThread.sleep(1000L);\n\t\tassertThat(output).contains(\"Test message\");\n\t}", "url": "https://raw.githubusercontent.com/spring-projects/spring-boot/master/spring-boot-tests/spring-boot-smoke-tests/spring-boot-smoke-test-activemq/src/test/java/smoketest/activemq/SampleActiveMqTests.java", "stars": "47572", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 63564, "method_name": "getKey", "class_name": "BleBaseCallback", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getKey() {\n        return key;\n    }", "url": "https://raw.githubusercontent.com/wxw6860/BLEAPP/master/FastBleLib/src/main/java/com/clj/fastble/callback/BleBaseCallback.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 63565, "method_name": "setKey", "class_name": "BleBaseCallback", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setKey(String key) {\n        this.key = key;\n    }", "url": "https://raw.githubusercontent.com/wxw6860/BLEAPP/master/FastBleLib/src/main/java/com/clj/fastble/callback/BleBaseCallback.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 63566, "method_name": "getHandler", "class_name": "BleBaseCallback", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Handler", "snippet": "    public Handler getHandler() {\n        return handler;\n    }", "url": "https://raw.githubusercontent.com/wxw6860/BLEAPP/master/FastBleLib/src/main/java/com/clj/fastble/callback/BleBaseCallback.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 63567, "method_name": "setHandler", "class_name": "BleBaseCallback", "params": ["Handler"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setHandler(Handler handler) {\n        this.handler = handler;\n    }", "url": "https://raw.githubusercontent.com/wxw6860/BLEAPP/master/FastBleLib/src/main/java/com/clj/fastble/callback/BleBaseCallback.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 63568, "method_name": "goodEvent", "class_name": "RandomEventIndustrialAccident", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean goodEvent()    \t\t{ return false; }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/events/RandomEventIndustrialAccident.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Serializable", "RandomEvent"], "modifiers": ["public"]}}, {"id": 63569, "method_name": "repeatable", "class_name": "RandomEventIndustrialAccident", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean repeatable()    \t\t{ return true; }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/events/RandomEventIndustrialAccident.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Serializable", "RandomEvent"], "modifiers": ["public"]}}, {"id": 63570, "method_name": "notificationText", "class_name": "RandomEventIndustrialAccident", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String notificationText()    {\n        String s1 = text(\"EVENT_ACCIDENT\");\n        s1 = s1.replace(\"[system]\", galaxy().empire(empId).sv.name(sysId));\n        s1 = galaxy().empire(empId).replaceTokens(s1, \"target\");\n        return s1;\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/events/RandomEventIndustrialAccident.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Serializable", "RandomEvent"], "modifiers": ["public"]}}, {"id": 63571, "method_name": "trigger", "class_name": "RandomEventIndustrialAccident", "params": ["Empire"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void trigger(Empire emp) {\n        // find a random colony that has at least 30 factories\n        List<StarSystem> systems = new ArrayList<>();\n        for (StarSystem sys : emp.allColonizedSystems()) {\n            Colony col = sys.colony();\n            if (col.industry().factories() >= 30)\n                systems.add(sys);\n        }\n        if (systems.isEmpty())\n            return;\n\n        StarSystem targetSystem = random(systems);\n        empId = emp.id;\n        sysId = targetSystem.id;\n        \n        targetSystem.addEvent(new SystemRandomEvent(\"SYSEVENT_ACCIDENT\"));\n        targetSystem.planet().irradiateEnvironment();\n        float maxWaste = targetSystem.planet().maxWaste(); // calc max waste after irradiation\n        targetSystem.planet().addWaste(maxWaste);\n        if (player().knowsOf(empId))\n            GNNNotification.notifyRandomEvent(notificationText(), \"GNN_Event_Accident\");\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/events/RandomEventIndustrialAccident.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Serializable", "RandomEvent"], "modifiers": ["public"]}}, {"id": 63572, "method_name": "peerComposeFileGen", "class_name": "DockerConfigGenImpl", "params": ["InitConfigEntity"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean peerComposeFileGen(InitConfigEntity initConfig) {\n        // \u6839\u636e IP \u5730\u5740\u5206\u7ec4\n        Map<String, List<String>> peerGroups = this.groupHostByIp(initConfig.getPeerHostConfig());\n\n        // \u6bcf\u4e2a IP \u4e00\u4e2a docker-compose \u6587\u4ef6\n        for (String serverIp : peerGroups.keySet()) {\n            String path = String.format(\"fabric-net/dockerFile/peer-%s/\", serverIp);\n            String filePath = null;\n            try {\n                filePath = createPeerYamlFile(initConfig, serverIp, peerGroups.get(serverIp), path);\n            } catch (IOException e) {\n                e.printStackTrace();\n            }\n            if (StringUtils.isEmpty(filePath)) {\n                return false;\n            }\n        }\n\n        return true;\n    }", "url": "https://raw.githubusercontent.com/zeoio/fabric-toolkit/master/bcp-install-biz/src/main/java/com/cgb/bcpinstall/config/configGenImpl/DockerConfigGenImpl.java", "stars": "7", "class_props": {"extends": null, "implements": ["DockerConfigGen"], "modifiers": ["public"]}}, {"id": 63573, "method_name": "ordererComposeFileGen", "class_name": "DockerConfigGenImpl", "params": ["InitConfigEntity"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean ordererComposeFileGen(InitConfigEntity initConfig) {\n        // \u6839\u636e IP \u5730\u5740\u5206\u7ec4\n        Map<String, List<String>> orderGroups = this.groupHostByIp(initConfig.getOrdererHostConfig());\n        // \u6bcf\u4e2a IP \u4e00\u4e2a docker-compose \u6587\u4ef6\n        for (String orderServerIp : orderGroups.keySet()) {\n            String filePath = null;\n            try {\n                filePath = createOrdererYamlFile(initConfig, orderServerIp, orderGroups.get(orderServerIp), null);\n            } catch (IOException e) {\n                e.printStackTrace();\n            }\n            if (StringUtils.isEmpty(filePath)) {\n                return false;\n            }\n        }\n        return true;\n    }", "url": "https://raw.githubusercontent.com/zeoio/fabric-toolkit/master/bcp-install-biz/src/main/java/com/cgb/bcpinstall/config/configGenImpl/DockerConfigGenImpl.java", "stars": "7", "class_props": {"extends": null, "implements": ["DockerConfigGen"], "modifiers": ["public"]}}, {"id": 63574, "method_name": "groupHostByIp", "class_name": "DockerConfigGenImpl", "params": ["Map<String,String>"], "throws": null, "modifiers": ["public"], "return_type": "Map<String,List>", "snippet": "    public Map<String, List<String>> groupHostByIp(Map<String, String> nodeHostConfig) {\n        Map<String, List<String>> groups = new HashMap<>(16);\n\n        for (String url : nodeHostConfig.keySet()) {\n            String ip = nodeHostConfig.get(url);\n            int index = ip.lastIndexOf(\":\");\n            String port = ip.substring(index + 1);\n            ip = ip.substring(0, index);\n\n            List<String> nodes;\n            if (groups.containsKey(ip)) {\n                nodes = groups.get(ip);\n            } else {\n                nodes = new ArrayList<>();\n                groups.put(ip, nodes);\n            }\n            nodes.add(url + \":\" + port);\n        }\n        return groups;\n    }", "url": "https://raw.githubusercontent.com/zeoio/fabric-toolkit/master/bcp-install-biz/src/main/java/com/cgb/bcpinstall/config/configGenImpl/DockerConfigGenImpl.java", "stars": "7", "class_props": {"extends": null, "implements": ["DockerConfigGen"], "modifiers": ["public"]}}, {"id": 63575, "method_name": "createOrdererYamlFile", "class_name": "DockerConfigGenImpl", "params": ["InitConfigEntity", "String", "List<String>", "String"], "throws": ["IOException"], "modifiers": ["public"], "return_type": "String", "snippet": "    public String createOrdererYamlFile(InitConfigEntity initConfig, String hostIp, List<String> orderHosts, String folderName) throws IOException {\n        String workingDir = modeService.getInitDir();\n        Map<Object, Object> ordererComposeConfig = yamlFileService.loadYamlFile(workingDir + \"/template/docker-compose-orderer.yaml\");\n\n        Map<Object, Object> networks = (Map<Object, Object>) ordererComposeConfig.get(\"networks\");\n        networks.clear();\n        for (int i = 0; i < orderHosts.size(); ++i) {\n            networks.put(initConfig.getNetwork() + i, null);\n        }\n\n        Map<Object, Object> valumes = (Map<Object, Object>) ordererComposeConfig.get(\"volumes\");\n        valumes.clear();\n        for (String orderHost : orderHosts) {\n            valumes.put(orderHost.substring(0, orderHost.lastIndexOf(\":\")), null);\n        }\n\n        Map<Object, Object> services = (Map<Object, Object>) ordererComposeConfig.get(\"services\");\n        services.clear();\n\n        for (int hostIndex = 0; hostIndex < orderHosts.size(); ++hostIndex) {\n            String orderHost = orderHosts.get(hostIndex);\n\n            int index = orderHost.lastIndexOf(\":\");\n            String port = orderHost.substring(index + 1);\n            orderHost = orderHost.substring(0, index);\n\n            Map<Object, Object> orderConfig = yamlFileService.loadYamlFile(workingDir + \"template/orderer.yaml\");\n            Map<Object, Object> config = (Map<Object, Object>) orderConfig.get(\"orderer.example.com\");\n            config.put(\"container_name\", orderHost);\n            int finalHostIndex = hostIndex;\n            config.put(\"networks\", new ArrayList<String>() {{\n                add(initConfig.getNetwork() + finalHostIndex);\n            }});\n\n            List<String> newVols = new ArrayList<>();\n            List<String> vols = (List<String>) config.get(\"volumes\");\n            for (String item : vols) {\n                String newItem;\n                if (item.contains(\"orderer.example.com\")) {\n                    newItem = item.replace(\"orderer.example.com\", orderHost);\n                } else {\n                    newItem = item;\n                }\n                if (newItem.contains(\"example.com\")) {\n                    int i = orderHost.indexOf(\".\");\n                    newItem = newItem.replace(\"example.com\", orderHost.substring(i + 1));\n                }\n\n                newVols.add(newItem);\n            }\n            newVols.add(\"/var/run/:/opt/gopath/src/github.com/hyperledger/fabric\");\n            config.put(\"volumes\", newVols);\n\n            // extra_hosts\n            List<String> extraHosts = new ArrayList<>();\n            for (String eHost : initConfig.getOrdererHostConfig().keySet()) {\n                if (eHost.equalsIgnoreCase(orderHost)) {\n                    continue;\n                }\n\n                String eIp = initConfig.getOrdererHostConfig().get(eHost);\n                eIp = eIp.substring(0, eIp.lastIndexOf(\":\"));\n                if (eIp.equalsIgnoreCase(\"127.0.0.1\")) {\n                    eIp = NetUtil.getMyNormalIP();\n                }\n                extraHosts.add(eHost + \":\" + eIp);\n            }\n            if (!CollectionUtils.isEmpty(extraHosts)) {\n                config.put(\"extra_hosts\", extraHosts);\n            }\n\n            List<String> ports = (List<String>) config.get(\"ports\");\n            ports.clear();\n            ports.add(port + \":7050\");\n\n            services.put(orderHost, config);\n        }\n\n        String filePath = workingDir + String.format(\"fabric-net/dockerFile/%s/\", StringUtils.isEmpty(folderName) ? \"order-\" + hostIp : folderName);\n        FileUtil.makeFilePath(filePath, false);\n        String yamlFilePath = filePath + \"docker-compose-orderer.yaml\";\n        if (!yamlFileService.writeObjectToYamlFile(ordererComposeConfig, yamlFilePath)) {\n            return null;\n        }\n\n        // \u590d\u5236 start-orderer.sh\n        /*String content = getFileContent(workingDir + \"template/start-peer.sh\");\n        String newFilePath = filePath + \"start-orderer.sh\";\n\n        if (!writeFileContent(newFilePath, content)) {\n            return null;\n        }*/\n        String srcShFilePath = workingDir + \"template/start-peer.sh\";\n        String newShFilePath = filePath + \"start-orderer.sh\";\n        FileUtils.copyFile(new File(srcShFilePath), new File(newShFilePath));\n        return yamlFilePath;\n    }", "url": "https://raw.githubusercontent.com/zeoio/fabric-toolkit/master/bcp-install-biz/src/main/java/com/cgb/bcpinstall/config/configGenImpl/DockerConfigGenImpl.java", "stars": "7", "class_props": {"extends": null, "implements": ["DockerConfigGen"], "modifiers": ["public"]}}, {"id": 63576, "method_name": "createPeerYamlFile", "class_name": "DockerConfigGenImpl", "params": ["InitConfigEntity", "String", "List<String>", "String"], "throws": ["IOException"], "modifiers": ["public"], "return_type": "String", "snippet": "    public String createPeerYamlFile(InitConfigEntity initConfig, String hostIp, List<String> peerHosts, String folderName) throws IOException {\n\n        Map<Object, Object> peerComposeConfig = yamlFileService.loadYamlFile(modeService.getInitDir() + \"template/docker-compose-peer.yaml\");\n\n        Map<Object, Object> networks = (Map<Object, Object>) peerComposeConfig.get(\"networks\");\n        networks.clear();\n        networks.put(initConfig.getNetwork(), null);\n\n        Map<Object, Object> valumes = (Map<Object, Object>) peerComposeConfig.get(\"volumes\");\n        valumes.clear();\n        for (String host : peerHosts) {\n            valumes.put(host.substring(0, host.lastIndexOf(\":\")), null);\n        }\n\n        Map<Object, Object> services = (Map<Object, Object>) peerComposeConfig.get(\"services\");\n        Map<Object, Object> cliConfig = (Map<Object, Object>) services.get(\"cli\");\n        services.clear();\n\n        List<String> dependsOn = (List<String>) cliConfig.get(\"depends_on\");\n        dependsOn.clear();\n\n        // \u83b7\u53d6\u5176\u4ed6 peer \u914d\u7f6e\n        Map<String, String> othPeerHostConfig = new HashMap<>();\n        Set<String> peerHostSet = new HashSet<>(peerHosts);\n        for (String host : initConfig.getPeerHostConfig().keySet()) {\n            String origIp = initConfig.getPeerHostConfig().get(host);\n            String ip = origIp.split(\":\")[0];\n            String port = origIp.split(\":\")[1];\n            if (!ip.equalsIgnoreCase(hostIp)) {\n                othPeerHostConfig.put(host, origIp);\n            } else {\n                host = host + \":\" + port;\n                peerHostSet.add(host);\n            }\n        }\n\n        // peer\n        /*int couchDbPort = 7984;*/\n        /*int ssPort = 9443;*/\n        String firstHost = null;\n        for (String peerHost : peerHosts) {\n            if (StringUtils.isEmpty(firstHost)) {\n                firstHost = peerHost;\n            }\n\n            String finalPeerHost = peerHost;\n            List<String> otherPeerHosts = peerHostSet.stream().filter(i -> !i.equals(finalPeerHost)).collect(Collectors.toList());\n            if (!CollectionUtils.isEmpty(otherPeerHosts)) {\n                for (String otherHost : otherPeerHosts) {\n                    String host = otherHost.split(\":\")[0];\n                    // log.info(\"\u6269\u5bb9\u8282\u70b9\u5176\u4ed6\u8282\u70b9\u7684host:\" + host);\n                    log.info(\"Hosts of other nodes in the expansion node:\" + host);\n                    String origIp = initConfig.getPeerHostConfig().get(host);\n                    if (origIp.contains(\"127.0.0.1\")) {\n                        origIp = NetUtil.getMyNormalIP() + \":\" + origIp.split(\":\")[1];\n                    }\n                    othPeerHostConfig.put(host, origIp);\n                }\n            }\n\n            String peerHostPreFix = peerHost.split(initConfig.getPeerDomain())[0];\n            // couchdb\n            Map<Object, Object> couchDbConfig = new HashMap<>();\n            couchDbConfig.put(\"container_name\", peerHostPreFix + initConfig.getOrgMSPID() + \".\" + \"couchdb\");\n            couchDbConfig.put(\"image\", \"hyperledger/fabric-couchdb\");\n            couchDbConfig.put(\"environment\", new ArrayList<String>() {{\n                add(\"COUCHDB_USER=\");\n                add(\"COUCHDB_PASSWORD=\");\n            }});\n\n            String origHost = peerHost;\n            int index = peerHost.lastIndexOf(\":\");\n            int port = Integer.parseInt(peerHost.substring(index + 1));\n            peerHost = peerHost.substring(0, index);\n\n            String finalCouchdbPeerHost = peerHost;\n            couchDbConfig.put(\"ports\", new ArrayList<String>() {{\n                add(initConfig.getCouchdbPortConfig().get(finalCouchdbPeerHost) + \":5984\");\n            }});\n            couchDbConfig.put(\"networks\", new ArrayList<String>() {{\n                add(initConfig.getNetwork());\n            }});\n            services.put(peerHostPreFix + initConfig.getOrgMSPID() + \".\" + \"couchdb\", couchDbConfig);\n\n            //\n            Map<Object, Object> peerConfig = yamlFileService.loadYamlFile(modeService.getInitDir() + \"template/peer.yaml\");\n            Map<Object, Object> config = (Map<Object, Object>) peerConfig.get(\"peer0.org1.example.com\");\n            config.put(\"container_name\", peerHost);\n            config.put(\"networks\", new ArrayList<String>() {{\n                add(initConfig.getNetwork());\n            }});\n\n            List<String> newVols = new ArrayList<>();\n            List<String> vols = (List<String>) config.get(\"volumes\");\n            for (String item : vols) {\n                String newItem;\n                if (item.contains(\"peer0.org1.example.com\")) {\n                    newItem = item.replace(\"peer0.org1.example.com\", peerHost);\n                } else {\n                    newItem = item;\n                }\n                if (newItem.contains(\"org1.example.com\")) {\n                    int i = peerHost.indexOf(\".\");\n                    newItem = newItem.replace(\"org1.example.com\", peerHost.substring(i + 1));\n                }\n\n                newVols.add(newItem);\n            }\n            config.put(\"volumes\", newVols);\n\n            // environment\n            List<String> environment = new ArrayList<>();\n            environment.add(\"CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock\");\n\n            String netWorkConfig;\n            if (folderName.contains(\"new\")) {\n                String peerPathSplit = folderName.split(\"peer-\")[1];\n                String peerNetSplit = peerPathSplit.split(File.separator)[0];\n                netWorkConfig = \"peer-\" + peerNetSplit + \"_\" + initConfig.getNetwork();\n            } else {\n                netWorkConfig = \"peer_\" + initConfig.getNetwork();\n            }\n\n            environment.add(\"CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=\" + netWorkConfig);\n            environment.add(\"FABRIC_LOGGING_SPEC=INFO\");\n            environment.add(\"CORE_PEER_TLS_ENABLED=true\");\n            environment.add(\"CORE_PEER_GOSSIP_USELEADERELECTION=true\");\n            environment.add(\"CORE_PEER_GOSSIP_ORGLEADER=false\");\n            environment.add(\"CORE_PEER_PROFILE_ENABLED=true\");\n            environment.add(\"CORE_PEER_TLS_CERT_FILE=/etc/hyperledger/fabric/tls/server.crt\");\n            environment.add(\"CORE_PEER_TLS_KEY_FILE=/etc/hyperledger/fabric/tls/server.key\");\n            environment.add(\"CORE_PEER_TLS_ROOTCERT_FILE=/etc/hyperledger/fabric/tls/ca.crt\");\n            environment.add(\"CORE_PEER_ID=\" + peerHost);\n            environment.add(\"CORE_PEER_ADDRESS=\" + peerHost + \":\" + port);\n            environment.add(\"CORE_PEER_LISTENADDRESS=0.0.0.0:\" + port);\n            environment.add(\"CORE_PEER_CHAINCODEADDRESS=\" + peerHost + \":\" + (port + 1));\n            environment.add(\"CORE_PEER_CHAINCODELISTENADDRESS=0.0.0.0:\" + (port + 1));\n\n            if (CollectionUtils.isEmpty(othPeerHostConfig)) {\n                environment.add(\"CORE_PEER_GOSSIP_BOOTSTRAP=\" + origHost);\n            } else {\n                String firstKey = othPeerHostConfig.keySet().iterator().next();\n                String othIp = othPeerHostConfig.get(firstKey);\n                environment.add(\"CORE_PEER_GOSSIP_BOOTSTRAP=\" + firstKey + \":\" + othIp.substring(othIp.lastIndexOf(\":\") + 1));\n            }\n\n            environment.add(\"CORE_PEER_GOSSIP_EXTERNALENDPOINT=\" + origHost);\n            environment.add(\"CORE_PEER_LOCALMSPID=\" + initConfig.getOrgMSPID());\n            environment.add(\"CORE_OPERATIONS_LISTENADDRESS=0.0.0.0\" + \":9443\");\n            environment.add(\"CORE_METRICS_PROVIDER=prometheus\");\n            environment.add(\"CORE_LEDGER_STATE_STATEDATABASE=CouchDB\");\n            environment.add(\"CORE_LEDGER_STATE_COUCHDBCONFIG_COUCHDBADDRESS=\" + peerHostPreFix + initConfig.getOrgMSPID() + \".\" + \"couchdb\" + \":5984\");\n            /*environment.add(\"CORE_LEDGER_STATE_COUCHDBCONFIG_COUCHDBADDRESS=couchdb\" + hIndex + \":\" + finalCouchDbPort);*/\n            environment.add(\"CORE_LEDGER_STATE_COUCHDBCONFIG_USERNAME=\");\n            environment.add(\"CORE_LEDGER_STATE_COUCHDBCONFIG_PASSWORD=\");\n\n            config.put(\"environment\", environment);\n\n            // depends_on\n            config.put(\"depends_on\", new ArrayList<String>() {{\n                add(peerHostPreFix + initConfig.getOrgMSPID() + \".\" + \"couchdb\");\n            }});\n\n            List<String> extraHosts = new ArrayList<>();\n            for (String host : initConfig.getOrdererHostConfig().keySet()) {\n                String ip = initConfig.getOrdererHostConfig().get(host);\n                int i = ip.lastIndexOf(\":\");\n                ip = ip.substring(0, i);\n\n                if (\"127.0.0.1\".equalsIgnoreCase(ip)) {\n                    ip = NetUtil.getMyNormalIP();\n                }\n                extraHosts.add(host + \":\" + ip);\n            }\n\n            if (!CollectionUtils.isEmpty(othPeerHostConfig)) {\n                for (String othHost : othPeerHostConfig.keySet()) {\n                    String othIp = othPeerHostConfig.get(othHost);\n                    int i = othIp.lastIndexOf(\":\");\n                    othIp = othIp.substring(0, i);\n                    if (\"127.0.0.1\".equals(othIp)) {\n                        othIp = NetUtil.getMyNormalIP();\n                    }\n                    if (!peerHost.contains(othHost)) {\n                        extraHosts.add(othHost + \":\" + othIp);\n                    }\n                }\n            }\n//            extraHosts.add(\"couchdb\" + hIndex + \":\" + hostIp);\n            if (!CollectionUtils.isEmpty(extraHosts)) {\n                config.put(\"extra_hosts\", extraHosts);\n            }\n\n            List<String> ports = (List<String>) config.get(\"ports\");\n            ports.clear();\n            ports.add(port + \":\" + port);\n            String metricsPort = initConfig.getMetricPortConfig().get(peerHost);\n            ports.add(metricsPort + \":\" + \"9443\");\n            services.put(peerHost, config);\n            dependsOn.add(peerHost);\n        }\n\n        int index = firstHost.lastIndexOf(\":\");\n        String onlyHost = firstHost.substring(0, index);\n        String orgUrl = initConfig.getPeerDomain();\n        List<String> newEnvironment = new ArrayList<>();\n        List<String> environment = (List<String>) cliConfig.get(\"environment\");\n        for (String oldEnv : environment) {\n            String newEnv;\n            if (oldEnv.contains(\"CORE_PEER_ADDRESS\")) {\n                newEnv = \"CORE_PEER_ADDRESS=\" + firstHost;\n            } else if (oldEnv.contains(\"CORE_PEER_LOCALMSPID\")) {\n                newEnv = \"CORE_PEER_LOCALMSPID=\" + initConfig.getOrgMSPID();\n            } else if (oldEnv.contains(\"CORE_PEER_TLS_CERT_FILE\")) {\n                newEnv = String.format(oldEnv, orgUrl, onlyHost);\n            } else if (oldEnv.contains(\"CORE_PEER_TLS_KEY_FILE\")) {\n                newEnv = String.format(oldEnv, orgUrl, onlyHost);\n            } else if (oldEnv.contains(\"CORE_PEER_TLS_ROOTCERT_FILE\")) {\n                newEnv = String.format(oldEnv, orgUrl, onlyHost);\n            } else if (oldEnv.contains(\"CORE_PEER_MSPCONFIGPATH\")) {\n                newEnv = String.format(oldEnv, orgUrl, orgUrl);\n            } else {\n                newEnv = oldEnv;\n            }\n            newEnvironment.add(newEnv);\n        }\n        cliConfig.put(\"environment\", newEnvironment);\n\n        cliConfig.put(\"networks\", new ArrayList<String>() {{\n            add(initConfig.getNetwork());\n        }});\n\n        cliConfig.remove(\"extra_hosts\");\n        services.put(\"cli\", cliConfig);\n\n        /*String filePath = workingDir + String.format(\"fabric-net/dockerFile/peer-%s/\", hostIp);*/\n        String filePath = modeService.getInitDir() + folderName;\n        FileUtil.makeFilePath(filePath, false);\n        String yamlFilePath = filePath + \"docker-compose-peer.yaml\";\n\n        // log.info(\"\u65b0\u8282\u70b9\u751f\u6210docker-compose\u6587\u4ef6\u8def\u5f84:\" + yamlFilePath);\n        log.info(\"The path of the docker-compose file generated by the new node:\" + yamlFilePath);\n\n        if (!yamlFileService.writeObjectToYamlFile(peerComposeConfig, yamlFilePath)) {\n            return null;\n        }\n\n        // \u751f\u6210 start-peer.sh\n        String newShFilePath = filePath + \"start-peer.sh\";\n        String srcShFilePath = modeService.getInitDir() + \"template/start-peer.sh\";\n        FileUtils.copyFile(new File(srcShFilePath), new File(newShFilePath));\n\n        return yamlFilePath;\n    }", "url": "https://raw.githubusercontent.com/zeoio/fabric-toolkit/master/bcp-install-biz/src/main/java/com/cgb/bcpinstall/config/configGenImpl/DockerConfigGenImpl.java", "stars": "7", "class_props": {"extends": null, "implements": ["DockerConfigGen"], "modifiers": ["public"]}}, {"id": 63577, "method_name": "main", "class_name": "Rainbow", "params": ["String"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "\tpublic static void main(String[] args) {\n\t\t//                  0       1          2        3       4        5          6\n\t\t//String[] color = {\"red\", \"orange\", \"yellow\", \"green\", \"blue\", \"indigo\", \"violet\"};\n\t\t\n//\t\tSystem.out.println(color[0]);\n//\t\tSystem.out.println(color[1]);\n//\t\tSystem.out.println(color[2]);\n//\t\tSystem.out.println(color[3]);\n//\t\tSystem.out.println(color[4]);\n//\t\tSystem.out.println(color[5]);\n//\t\tSystem.out.println(color[6]);\n\t\t\n\t\t//       0     7 < 7;  \n//\t\tfor(int i = 0; i < color.length; i++) {\n//\t\t\t//                 color[6]\n//\t\t\tSystem.out.println(color[i]);\n//\t\t}\n\t\t\n\t\t//                  0       1          2        3       4        5          6\n\t\tString[] color = {\"red\", \"orange\", \"yellow\", \"green\", \"blue\", \"indigo\", \"violet\"};\n\t\tprintArray(color);\n\t\t\n\t\tint[] numArr = {6, 4, 3, 5, 2, 4};\n\t\tprintArray(numArr);\n\t\t\n\t\tdouble[] dArr = {1.5, 6, 7.5, 9.9, 1.1};\n\t\tprintArray(dArr);\n\t}", "url": "https://raw.githubusercontent.com/Suranchiyev/java-sdet-2020/master/src/day19/Rainbow.java", "stars": "21", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 63578, "method_name": "printArray", "class_name": "Rainbow", "params": ["String"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "\tpublic static void printArray(String[] str) {\n\t\tfor(int i = 0; i < str.length; i++) {\n\t\t\tSystem.out.println(str[i]);\n\t\t}\n\t}", "url": "https://raw.githubusercontent.com/Suranchiyev/java-sdet-2020/master/src/day19/Rainbow.java", "stars": "21", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 63579, "method_name": "printArray", "class_name": "Rainbow", "params": ["int"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "\tpublic static void printArray(int[] numArr) {\n\t\tfor(int i = 0; i < numArr.length; i++) {\n\t\t\t//                        \n\t\t\tSystem.out.println(numArr[i]);\n\t\t}\n\t}", "url": "https://raw.githubusercontent.com/Suranchiyev/java-sdet-2020/master/src/day19/Rainbow.java", "stars": "21", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 63580, "method_name": "printArray", "class_name": "Rainbow", "params": ["double"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "\tpublic static void printArray(double[] dArr) {\n\t\tfor(int i = 0; i < dArr.length; i++) {\n\t\t\tSystem.out.println(dArr[i]);\n\t\t}\n\t}", "url": "https://raw.githubusercontent.com/Suranchiyev/java-sdet-2020/master/src/day19/Rainbow.java", "stars": "21", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 63581, "method_name": "instance", "class_name": "GSYVideoManager", "params": [], "throws": null, "modifiers": ["synchronized", "public", "static"], "return_type": "GSYVideoManager", "snippet": "    public static synchronized GSYVideoManager instance() {\n        if (videoManager == null) {\n            videoManager = new GSYVideoManager();\n        }\n        return videoManager;\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/com/shuyu/gsyvideoplayer/GSYVideoManager.java", "stars": "2", "class_props": {"extends": "GSYVideoBaseManager", "implements": null, "modifiers": ["public"]}}, {"id": 63582, "method_name": "tmpInstance", "class_name": "GSYVideoManager", "params": ["GSYMediaPlayerListener"], "throws": null, "modifiers": ["synchronized", "public", "static"], "return_type": "GSYVideoManager", "snippet": "    public static synchronized GSYVideoManager tmpInstance(GSYMediaPlayerListener listener) {\n        GSYVideoManager gsyVideoManager = new GSYVideoManager();\n        gsyVideoManager.bufferPoint = videoManager.bufferPoint;\n        gsyVideoManager.optionModelList = videoManager.optionModelList;\n        gsyVideoManager.playTag = videoManager.playTag;\n        gsyVideoManager.currentVideoWidth = videoManager.currentVideoWidth;\n        gsyVideoManager.currentVideoHeight = videoManager.currentVideoHeight;\n        gsyVideoManager.context = videoManager.context;\n        gsyVideoManager.lastState = videoManager.lastState;\n        gsyVideoManager.playPosition = videoManager.playPosition;\n        gsyVideoManager.timeOut = videoManager.timeOut;\n        gsyVideoManager.needMute = videoManager.needMute;\n        gsyVideoManager.needTimeOutOther = videoManager.needTimeOutOther;\n        gsyVideoManager.setListener(listener);\n        return gsyVideoManager;\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/com/shuyu/gsyvideoplayer/GSYVideoManager.java", "stars": "2", "class_props": {"extends": "GSYVideoBaseManager", "implements": null, "modifiers": ["public"]}}, {"id": 63583, "method_name": "changeManager", "class_name": "GSYVideoManager", "params": ["GSYVideoManager"], "throws": null, "modifiers": ["synchronized", "public", "static"], "return_type": "void", "snippet": "    public static synchronized void changeManager(GSYVideoManager gsyVideoManager) {\n        videoManager = gsyVideoManager;\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/com/shuyu/gsyvideoplayer/GSYVideoManager.java", "stars": "2", "class_props": {"extends": "GSYVideoBaseManager", "implements": null, "modifiers": ["public"]}}, {"id": 63584, "method_name": "backFromWindowFull", "class_name": "GSYVideoManager", "params": ["Context"], "throws": null, "modifiers": ["public", "static"], "return_type": "boolean", "snippet": "    public static boolean backFromWindowFull(Context context) {\n        boolean backFrom = false;\n        ViewGroup vp = (ViewGroup) (CommonUtil.scanForActivity(context)).findViewById(Window.ID_ANDROID_CONTENT);\n        View oldF = vp.findViewById(FULLSCREEN_ID);\n        if (oldF != null) {\n            backFrom = true;\n            hideNavKey(context);\n            if (GSYVideoManager.instance().lastListener() != null) {\n                GSYVideoManager.instance().lastListener().onBackFullscreen();\n            }\n        }\n        return backFrom;\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/com/shuyu/gsyvideoplayer/GSYVideoManager.java", "stars": "2", "class_props": {"extends": "GSYVideoBaseManager", "implements": null, "modifiers": ["public"]}}, {"id": 63585, "method_name": "releaseAllVideos", "class_name": "GSYVideoManager", "params": [], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void releaseAllVideos() {\n        if (GSYVideoManager.instance().listener() != null) {\n            GSYVideoManager.instance().listener().onCompletion();\n        }\n        GSYVideoManager.instance().releaseMediaPlayer();\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/com/shuyu/gsyvideoplayer/GSYVideoManager.java", "stars": "2", "class_props": {"extends": "GSYVideoBaseManager", "implements": null, "modifiers": ["public"]}}, {"id": 63586, "method_name": "onPause", "class_name": "GSYVideoManager", "params": [], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void onPause() {\n        if (GSYVideoManager.instance().listener() != null) {\n            GSYVideoManager.instance().listener().onVideoPause();\n        }\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/com/shuyu/gsyvideoplayer/GSYVideoManager.java", "stars": "2", "class_props": {"extends": "GSYVideoBaseManager", "implements": null, "modifiers": ["public"]}}, {"id": 63587, "method_name": "onResume", "class_name": "GSYVideoManager", "params": [], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void onResume() {\n        if (GSYVideoManager.instance().listener() != null) {\n            GSYVideoManager.instance().listener().onVideoResume();\n        }\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/com/shuyu/gsyvideoplayer/GSYVideoManager.java", "stars": "2", "class_props": {"extends": "GSYVideoBaseManager", "implements": null, "modifiers": ["public"]}}, {"id": 63588, "method_name": "onResume", "class_name": "GSYVideoManager", "params": ["boolean"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void onResume(boolean seek) {\n        if (GSYVideoManager.instance().listener() != null) {\n            GSYVideoManager.instance().listener().onVideoResume(seek);\n        }\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/com/shuyu/gsyvideoplayer/GSYVideoManager.java", "stars": "2", "class_props": {"extends": "GSYVideoBaseManager", "implements": null, "modifiers": ["public"]}}, {"id": 63589, "method_name": "isFullState", "class_name": "GSYVideoManager", "params": ["Activity"], "throws": null, "modifiers": ["public", "static"], "return_type": "boolean", "snippet": "    public static boolean isFullState(Activity activity) {\n        ViewGroup vp = (ViewGroup) (CommonUtil.scanForActivity(activity)).findViewById(Window.ID_ANDROID_CONTENT);\n        final View full = vp.findViewById(FULLSCREEN_ID);\n        GSYVideoPlayer gsyVideoPlayer = null;\n        if (full != null) {\n            gsyVideoPlayer = (GSYVideoPlayer) full;\n        }\n        return gsyVideoPlayer != null;\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/com/shuyu/gsyvideoplayer/GSYVideoManager.java", "stars": "2", "class_props": {"extends": "GSYVideoBaseManager", "implements": null, "modifiers": ["public"]}}, {"id": 63590, "method_name": "getList", "class_name": "MediaProvider", "params": ["Filters", "Callback"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void getList(Filters filters, Callback callback) {\n        getList(null, filters, callback);\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/providers/media/MediaProvider.java", "stars": "4", "class_props": {"extends": "BaseProvider", "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 63591, "method_name": "getList", "class_name": "MediaProvider", "params": ["ArrayList<Media>", "Filters", "Callback"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void getList(final ArrayList<Media> existingList, Filters filters, final Callback callback) {\n        final ArrayList<Media> currentList;\n        if (existingList == null) {\n            currentList = new ArrayList<>();\n        } else {\n            currentList = new ArrayList<>(existingList);\n        }\n\n        ArrayList<AbstractMap.SimpleEntry<String, String>> params = new ArrayList<>();\n        params.add(new AbstractMap.SimpleEntry<>(\"limit\", \"30\"));\n\n        if (filters == null) {\n            filters = new Filters();\n        }\n\n        if (filters.keywords != null) {\n            params.add(new AbstractMap.SimpleEntry<>(\"keywords\", filters.keywords));\n        }\n\n        if (filters.genre != null) {\n            params.add(new AbstractMap.SimpleEntry<>(\"genre\", filters.genre));\n        }\n\n        if (filters.order == Filters.Order.ASC) {\n            params.add(new AbstractMap.SimpleEntry<>(\"order\", \"1\"));\n        } else {\n            params.add(new AbstractMap.SimpleEntry<>(\"order\", \"-1\"));\n        }\n\n        if (filters.langCode != null) {\n            params.add(new AbstractMap.SimpleEntry<>(\"lang\", filters.langCode));\n        }\n\n        String sort;\n        switch (filters.sort) {\n            default:\n            case POPULARITY:\n                sort = \"popularity\";\n                break;\n            case YEAR:\n                sort = \"year\";\n                break;\n            case DATE:\n                sort = \"last added\";\n                break;\n            case RATING:\n                sort = \"rating\";\n                break;\n            case ALPHABET:\n                sort = \"name\";\n                break;\n            case TRENDING:\n                sort = \"trending\";\n                break;\n        }\n\n        params.add(new AbstractMap.SimpleEntry<>(\"sort\", sort));\n\n        String url = apiUrls[currentApi] + itemsPath;\n        if (filters.page != null) {\n            url += filters.page;\n        } else {\n            url += \"1\";\n        }\n\n        Request.Builder requestBuilder = new Request.Builder();\n        String query = buildQuery(params);\n        url = url + \"?\" + query;\n        requestBuilder.url(url);\n\n        Timber.d(this.getClass().getSimpleName(), \"Making request to: \" + url);\n\n        fetchList(currentList, requestBuilder, filters, callback);\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/providers/media/MediaProvider.java", "stars": "4", "class_props": {"extends": "BaseProvider", "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 63592, "method_name": "fetchList", "class_name": "MediaProvider", "params": ["ArrayList<Media>", "Request", "Filters", "Callback"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void fetchList(final ArrayList<Media> currentList, final Request.Builder requestBuilder, final Filters filters, final Callback callback) {\n        enqueue(requestBuilder.build(), new okhttp3.Callback() {\n            @Override\n            public void onFailure(Call call, IOException e) {\n                String url = requestBuilder.build().url().toString();\n                if (currentApi >= apiUrls.length - 1) {\n                    callback.onFailure(e);\n                } else {\n                    if (url.contains(apiUrls[currentApi])) {\n                        url = url.replace(apiUrls[currentApi], apiUrls[currentApi + 1]);\n                        currentApi++;\n                    } else {\n                        url = url.replace(apiUrls[currentApi - 1], apiUrls[currentApi]);\n                    }\n                    requestBuilder.url(url);\n                    fetchList(currentList, requestBuilder, filters, callback);\n                }\n            }\n\n            @Override\n            public void onResponse(Call call, Response response) throws IOException {\n                if (response.isSuccessful()) {\n\n                    String responseStr = response.body().string();\n\n                    if (responseStr.isEmpty()) {\n                        onFailure(call, new IOException(\"Empty response\"));\n                    }\n                    int actualSize = currentList.size();\n                    ArrayList<Media> responseItems = getResponseFormattedList(responseStr, currentList);\n                    callback.onSuccess(filters, responseItems);\n                    return;\n                }\n                onFailure(call, new IOException(\"Couldn't connect to API\"));\n            }\n        });\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/providers/media/MediaProvider.java", "stars": "4", "class_props": {"extends": "BaseProvider", "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 63593, "method_name": "getDetail", "class_name": "MediaProvider", "params": ["ArrayList<Media>", "Integer", "Callback"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void getDetail(ArrayList<Media> currentList, Integer index, final Callback callback) {\n        Request.Builder requestBuilder = new Request.Builder();\n        String url = apiUrls[currentApi] + itemDetailsPath + currentList.get(index).videoId;\n        requestBuilder.url(url);\n\n        Timber.d(this.getClass().getSimpleName(), \"Making request to: \" + url);\n\n        enqueue(requestBuilder.build(), new okhttp3.Callback() {\n            @Override\n            public void onFailure(Call call, IOException e) {\n                callback.onFailure(e);\n            }\n\n            @Override\n            public void onResponse(Call call, Response response) throws IOException {\n                try {\n                    if (response.isSuccessful()) {\n\n                        String responseStr = response.body().string();\n\n                        if (responseStr.isEmpty()) {\n                            callback.onFailure(new NetworkErrorException(\"Empty response\"));\n                        }\n\n                        ArrayList<Media> formattedData = getResponseDetailsFormattedList(responseStr);\n                        if (formattedData.size() > 0) {\n                            callback.onSuccess(null, formattedData);\n                            return;\n                        }\n                        callback.onFailure(new IllegalStateException(\"Empty list\"));\n                        return;\n                    }\n                } catch (Exception e) {\n                    callback.onFailure(e);\n                }\n                callback.onFailure(new NetworkErrorException(\"Couldn't connect to API\"));\n            }\n        });\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/providers/media/MediaProvider.java", "stars": "4", "class_props": {"extends": "BaseProvider", "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 63594, "method_name": "getLoadingMessage", "class_name": "MediaProvider", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getLoadingMessage() {\n        return R.string.loading;\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/providers/media/MediaProvider.java", "stars": "4", "class_props": {"extends": "BaseProvider", "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 63595, "method_name": "getResponseFormattedList", "class_name": "MediaProvider", "params": ["String", "ArrayList<Media>"], "throws": ["IOException"], "modifiers": ["public"], "return_type": "ArrayList<Media>", "snippet": "    public ArrayList<Media> getResponseFormattedList(String responseStr, ArrayList<Media> currentList) throws IOException {\n        return new ArrayList<>();\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/providers/media/MediaProvider.java", "stars": "4", "class_props": {"extends": "BaseProvider", "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 63596, "method_name": "getResponseDetailsFormattedList", "class_name": "MediaProvider", "params": ["String"], "throws": ["IOException"], "modifiers": ["public"], "return_type": "ArrayList<Media>", "snippet": "    public ArrayList<Media> getResponseDetailsFormattedList(String responseStr) throws IOException {\n        return new ArrayList<>();\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/providers/media/MediaProvider.java", "stars": "4", "class_props": {"extends": "BaseProvider", "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 63597, "method_name": "getNavigation", "class_name": "MediaProvider", "params": [], "throws": null, "modifiers": ["public"], "return_type": "List<NavInfo>", "snippet": "    public List<NavInfo> getNavigation() {\n        return new ArrayList<>();\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/providers/media/MediaProvider.java", "stars": "4", "class_props": {"extends": "BaseProvider", "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 63598, "method_name": "getDefaultNavigationIndex", "class_name": "MediaProvider", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getDefaultNavigationIndex() {\n        return DEFAULT_NAVIGATION_INDEX;\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/providers/media/MediaProvider.java", "stars": "4", "class_props": {"extends": "BaseProvider", "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 63599, "method_name": "getGenres", "class_name": "MediaProvider", "params": [], "throws": null, "modifiers": ["public"], "return_type": "List<Genre>", "snippet": "    public List<Genre> getGenres() {\n        return new ArrayList<>();\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/providers/media/MediaProvider.java", "stars": "4", "class_props": {"extends": "BaseProvider", "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 63600, "method_name": "getSubsProvider", "class_name": "MediaProvider", "params": [], "throws": null, "modifiers": ["public"], "return_type": "SubsProvider", "snippet": "    public SubsProvider getSubsProvider() {\n        return subsProvider;\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/providers/media/MediaProvider.java", "stars": "4", "class_props": {"extends": "BaseProvider", "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 63601, "method_name": "hasSubsProvider", "class_name": "MediaProvider", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean hasSubsProvider() {\n        return subsProvider != null;\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/providers/media/MediaProvider.java", "stars": "4", "class_props": {"extends": "BaseProvider", "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 63602, "method_name": "getKeywords", "class_name": "Filters", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "        public String getKeywords() {\n            return keywords;\n        }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/providers/media/MediaProvider.java", "stars": "4", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "static"]}}, {"id": 63603, "method_name": "setKeywords", "class_name": "Filters", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "        public void setKeywords(String keywords) {\n            this.keywords = keywords;\n        }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/providers/media/MediaProvider.java", "stars": "4", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "static"]}}, {"id": 63604, "method_name": "getGenre", "class_name": "Filters", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "        public String getGenre() {\n            return genre;\n        }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/providers/media/MediaProvider.java", "stars": "4", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "static"]}}, {"id": 63605, "method_name": "setGenre", "class_name": "Filters", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "        public void setGenre(String genre) {\n            this.genre = genre;\n        }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/providers/media/MediaProvider.java", "stars": "4", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "static"]}}, {"id": 63606, "method_name": "getOrder", "class_name": "Filters", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Order", "snippet": "        public Order getOrder() {\n            return order;\n        }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/providers/media/MediaProvider.java", "stars": "4", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "static"]}}, {"id": 63607, "method_name": "setOrder", "class_name": "Filters", "params": ["Order"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "        public void setOrder(Order order) {\n            this.order = order;\n        }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/providers/media/MediaProvider.java", "stars": "4", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "static"]}}, {"id": 63608, "method_name": "getSort", "class_name": "Filters", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Sort", "snippet": "        public Sort getSort() {\n            return sort;\n        }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/providers/media/MediaProvider.java", "stars": "4", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "static"]}}, {"id": 63609, "method_name": "setSort", "class_name": "Filters", "params": ["Sort"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "        public void setSort(Sort sort) {\n            this.sort = sort;\n        }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/providers/media/MediaProvider.java", "stars": "4", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "static"]}}, {"id": 63610, "method_name": "getPage", "class_name": "Filters", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Integer", "snippet": "        public Integer getPage() {\n            return page;\n        }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/providers/media/MediaProvider.java", "stars": "4", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "static"]}}, {"id": 63611, "method_name": "setPage", "class_name": "Filters", "params": ["Integer"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "        public void setPage(Integer page) {\n            this.page = page;\n        }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/providers/media/MediaProvider.java", "stars": "4", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "static"]}}, {"id": 63612, "method_name": "getLangCode", "class_name": "Filters", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "        public String getLangCode() {\n            return langCode;\n        }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/providers/media/MediaProvider.java", "stars": "4", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "static"]}}, {"id": 63613, "method_name": "setLangCode", "class_name": "Filters", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "        public void setLangCode(String langCode) {\n            this.langCode = langCode;\n        }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/providers/media/MediaProvider.java", "stars": "4", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "static"]}}, {"id": 63614, "method_name": "getFilter", "class_name": "NavInfo", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Filters", "snippet": "        public Filters.Sort getFilter() {\n            return mSort;\n        }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/providers/media/MediaProvider.java", "stars": "4", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "static"]}}, {"id": 63615, "method_name": "getId", "class_name": "NavInfo", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "        public int getId() {\n            return mId;\n        }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/providers/media/MediaProvider.java", "stars": "4", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "static"]}}, {"id": 63616, "method_name": "getIcon", "class_name": "NavInfo", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "        public int getIcon() {\n            return mIconId;\n        }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/providers/media/MediaProvider.java", "stars": "4", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "static"]}}, {"id": 63617, "method_name": "getOrder", "class_name": "NavInfo", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Filters", "snippet": "        public Filters.Order getOrder() {\n            return mDefOrder;\n        }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/providers/media/MediaProvider.java", "stars": "4", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "static"]}}, {"id": 63618, "method_name": "getLabel", "class_name": "NavInfo", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "        public String getLabel() {\n            return mLabel;\n        }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/providers/media/MediaProvider.java", "stars": "4", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "static"]}}, {"id": 63619, "method_name": "init", "class_name": "SsrcUtil", "params": [], "throws": null, "modifiers": ["static", "private"], "return_type": "void", "snippet": "\tprivate static void init() {\n\t\tSipConfig sipConfig = (SipConfig) SpringBeanFactory.getBean(\"sipConfig\");\n\t\tssrcPrefix = sipConfig.getSipDomain().substring(4, 9);\n\t\tisUsed = new ArrayList<String>();\n\t\tnotUsed = new ArrayList<String>();\n\t\tfor (int i = 1; i < 10000; i++) {\n\t\t\tif (i < 10) {\n\t\t\t\tnotUsed.add(\"000\" + i);\n\t\t\t} else if (i < 100) {\n\t\t\t\tnotUsed.add(\"00\" + i);\n\t\t\t} else if (i < 1000) {\n\t\t\t\tnotUsed.add(\"0\" + i);\n\t\t\t} else {\n\t\t\t\tnotUsed.add(String.valueOf(i));\n\t\t\t}\n\t\t}\n\t}", "url": "https://raw.githubusercontent.com/swwheihei/wvp/master/src/main/java/com/genersoft/iot/vmp/gb28181/utils/SsrcUtil.java", "stars": "29", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 63620, "method_name": "getPlaySsrc", "class_name": "SsrcUtil", "params": [], "throws": null, "modifiers": ["public", "static"], "return_type": "String", "snippet": "\tpublic static String getPlaySsrc() {\n\t\treturn \"0\" + getSsrcPrefix() + getSN();\n\t}", "url": "https://raw.githubusercontent.com/swwheihei/wvp/master/src/main/java/com/genersoft/iot/vmp/gb28181/utils/SsrcUtil.java", "stars": "29", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 63621, "method_name": "getPlayBackSsrc", "class_name": "SsrcUtil", "params": [], "throws": null, "modifiers": ["public", "static"], "return_type": "String", "snippet": "\tpublic static String getPlayBackSsrc() {\n\t\treturn \"1\" + getSsrcPrefix() + getSN();\n\t}", "url": "https://raw.githubusercontent.com/swwheihei/wvp/master/src/main/java/com/genersoft/iot/vmp/gb28181/utils/SsrcUtil.java", "stars": "29", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 63622, "method_name": "releaseSsrc", "class_name": "SsrcUtil", "params": ["String"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "\tpublic static void releaseSsrc(String ssrc) {\n\t\tString sn = ssrc.substring(6);\n\t\tisUsed.remove(sn);\n\t\tnotUsed.add(sn);\n\t}", "url": "https://raw.githubusercontent.com/swwheihei/wvp/master/src/main/java/com/genersoft/iot/vmp/gb28181/utils/SsrcUtil.java", "stars": "29", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 63623, "method_name": "getSN", "class_name": "SsrcUtil", "params": [], "throws": null, "modifiers": ["static", "private"], "return_type": "String", "snippet": "\tprivate static String getSN() {\n\t\tString sn = null;\n\t\tif (notUsed.size() == 0) {\n\t\t\tthrow new RuntimeException(\"ssrc\u5df2\u7ecf\u7528\u5b8c\");\n\t\t} else if (notUsed.size() == 1) {\n\t\t\tsn = notUsed.get(0);\n\t\t} else {\n\t\t\tsn = notUsed.get(new Random().nextInt(notUsed.size() - 1));\n\t\t}\n\t\tnotUsed.remove(0);\n\t\tisUsed.add(sn);\n\t\treturn sn;\n\t}", "url": "https://raw.githubusercontent.com/swwheihei/wvp/master/src/main/java/com/genersoft/iot/vmp/gb28181/utils/SsrcUtil.java", "stars": "29", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 63624, "method_name": "getSsrcPrefix", "class_name": "SsrcUtil", "params": [], "throws": null, "modifiers": ["static", "private"], "return_type": "String", "snippet": "\tprivate static String getSsrcPrefix() {\n\t\tif (ssrcPrefix == null) {\n\t\t\tinit();\n\t\t}\n\t\treturn ssrcPrefix;\n\t}", "url": "https://raw.githubusercontent.com/swwheihei/wvp/master/src/main/java/com/genersoft/iot/vmp/gb28181/utils/SsrcUtil.java", "stars": "29", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 63625, "method_name": "getCapacity", "class_name": "EVEStorage", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getCapacity() {\n        return capacity;\n    }", "url": "https://raw.githubusercontent.com/Prunoideae/PhasePotion/master/src/main/java/com/naive/phase/Auxiliary/Magic/EVE/Storage/EVEStorage.java", "stars": "2", "class_props": {"extends": null, "implements": ["IEVEStorage"], "modifiers": ["public"]}}, {"id": 63626, "method_name": "setCapacity", "class_name": "EVEStorage", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setCapacity(int capacity) {\n        this.capacity = capacity;\n    }", "url": "https://raw.githubusercontent.com/Prunoideae/PhasePotion/master/src/main/java/com/naive/phase/Auxiliary/Magic/EVE/Storage/EVEStorage.java", "stars": "2", "class_props": {"extends": null, "implements": ["IEVEStorage"], "modifiers": ["public"]}}, {"id": 63627, "method_name": "getEVE", "class_name": "EVEStorage", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Eve", "snippet": "    public Eve getEVE() {\n        return energy;\n    }", "url": "https://raw.githubusercontent.com/Prunoideae/PhasePotion/master/src/main/java/com/naive/phase/Auxiliary/Magic/EVE/Storage/EVEStorage.java", "stars": "2", "class_props": {"extends": null, "implements": ["IEVEStorage"], "modifiers": ["public"]}}, {"id": 63628, "method_name": "setEVE", "class_name": "EVEStorage", "params": ["Eve"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setEVE(Eve incoming) {\n        this.energy = incoming;\n    }", "url": "https://raw.githubusercontent.com/Prunoideae/PhasePotion/master/src/main/java/com/naive/phase/Auxiliary/Magic/EVE/Storage/EVEStorage.java", "stars": "2", "class_props": {"extends": null, "implements": ["IEVEStorage"], "modifiers": ["public"]}}, {"id": 63629, "method_name": "blendEVE", "class_name": "EVEStorage", "params": ["Eve", "boolean"], "throws": null, "modifiers": ["public"], "return_type": "Eve", "snippet": "    public Eve blendEVE(Eve incoming, boolean simulate) {\n        Pairs<Eve, Eve> result = DataHelper.blend(energy, incoming);\n        if (!simulate)\n            setEVE(result.getFirst());\n        return result.getSecond();\n    }", "url": "https://raw.githubusercontent.com/Prunoideae/PhasePotion/master/src/main/java/com/naive/phase/Auxiliary/Magic/EVE/Storage/EVEStorage.java", "stars": "2", "class_props": {"extends": null, "implements": ["IEVEStorage"], "modifiers": ["public"]}}, {"id": 63630, "method_name": "getHueRange", "class_name": "EVEStorage", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Range", "snippet": "    public Range getHueRange() {\n        return hueRange;\n    }", "url": "https://raw.githubusercontent.com/Prunoideae/PhasePotion/master/src/main/java/com/naive/phase/Auxiliary/Magic/EVE/Storage/EVEStorage.java", "stars": "2", "class_props": {"extends": null, "implements": ["IEVEStorage"], "modifiers": ["public"]}}, {"id": 63631, "method_name": "getBrightnessRange", "class_name": "EVEStorage", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Range", "snippet": "    public Range getBrightnessRange() {\n        return brightnessRange;\n    }", "url": "https://raw.githubusercontent.com/Prunoideae/PhasePotion/master/src/main/java/com/naive/phase/Auxiliary/Magic/EVE/Storage/EVEStorage.java", "stars": "2", "class_props": {"extends": null, "implements": ["IEVEStorage"], "modifiers": ["public"]}}, {"id": 63632, "method_name": "canBlend", "class_name": "EVEStorage", "params": ["Eve"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean canBlend(Eve incoming) {\n        return hueRange.in(incoming.getHue()) && brightnessRange.in(incoming.getBrightness());\n    }", "url": "https://raw.githubusercontent.com/Prunoideae/PhasePotion/master/src/main/java/com/naive/phase/Auxiliary/Magic/EVE/Storage/EVEStorage.java", "stars": "2", "class_props": {"extends": null, "implements": ["IEVEStorage"], "modifiers": ["public"]}}, {"id": 63633, "method_name": "handleNotFoundException", "class_name": "ExceptionHandlingControllerAdvice", "params": ["AggregateNotFoundException"], "throws": null, "modifiers": ["public"], "return_type": "ResponseEntity<Object>", "snippet": "    public ResponseEntity<Object> handleNotFoundException(AggregateNotFoundException exception) {\n        return new ResponseEntity<>(createResponseBody(exception.getMessage(), NOT_FOUND), new HttpHeaders(), NOT_FOUND);\n    }", "url": "https://raw.githubusercontent.com/everest-engineering/lhotse/master/api/src/main/java/engineering/everest/lhotse/api/rest/ExceptionHandlingControllerAdvice.java", "stars": "9", "class_props": {"extends": "ResponseEntityExceptionHandler", "implements": null, "modifiers": ["public"]}}, {"id": 63634, "method_name": "handleRuntimeException", "class_name": "ExceptionHandlingControllerAdvice", "params": ["RuntimeException"], "throws": null, "modifiers": ["public"], "return_type": "ResponseEntity<Object>", "snippet": "    public ResponseEntity<Object> handleRuntimeException(RuntimeException exception) {\n        return new ResponseEntity<>(createResponseBody(exception.getMessage(), BAD_REQUEST), new HttpHeaders(), BAD_REQUEST);\n    }", "url": "https://raw.githubusercontent.com/everest-engineering/lhotse/master/api/src/main/java/engineering/everest/lhotse/api/rest/ExceptionHandlingControllerAdvice.java", "stars": "9", "class_props": {"extends": "ResponseEntityExceptionHandler", "implements": null, "modifiers": ["public"]}}, {"id": 63635, "method_name": "handleExecutionException", "class_name": "ExceptionHandlingControllerAdvice", "params": ["ExecutionException"], "throws": null, "modifiers": ["public"], "return_type": "ResponseEntity<Object>", "snippet": "    public ResponseEntity<Object> handleExecutionException(ExecutionException exception) {\n        var cause = exception.getCause();\n        var message = cause instanceof IllegalArgumentException || cause instanceof IllegalStateException\n                ? cause.getMessage()\n                : exception.getMessage();\n        return new ResponseEntity<>(createResponseBody(message, BAD_REQUEST), new HttpHeaders(), BAD_REQUEST);\n    }", "url": "https://raw.githubusercontent.com/everest-engineering/lhotse/master/api/src/main/java/engineering/everest/lhotse/api/rest/ExceptionHandlingControllerAdvice.java", "stars": "9", "class_props": {"extends": "ResponseEntityExceptionHandler", "implements": null, "modifiers": ["public"]}}, {"id": 63636, "method_name": "handleRemoteCommandExecutionException", "class_name": "ExceptionHandlingControllerAdvice", "params": ["RemoteCommandExecutionException"], "throws": null, "modifiers": ["public"], "return_type": "ResponseEntity<Object>", "snippet": "    public ResponseEntity<Object> handleRemoteCommandExecutionException(RemoteCommandExecutionException exception) {\n        var cause = exception.getCause();\n        if (cause instanceof ExecutionException) {\n            return handleExecutionException((ExecutionException)cause);\n        }\n        return new ResponseEntity<>(createResponseBody(cause.getMessage(), BAD_REQUEST), new HttpHeaders(), BAD_REQUEST);\n    }", "url": "https://raw.githubusercontent.com/everest-engineering/lhotse/master/api/src/main/java/engineering/everest/lhotse/api/rest/ExceptionHandlingControllerAdvice.java", "stars": "9", "class_props": {"extends": "ResponseEntityExceptionHandler", "implements": null, "modifiers": ["public"]}}, {"id": 63637, "method_name": "handleMethodArgumentNotValid", "class_name": "ExceptionHandlingControllerAdvice", "params": ["MethodArgumentNotValidException", "HttpHeaders", "HttpStatus", "WebRequest"], "throws": null, "modifiers": ["protected"], "return_type": "ResponseEntity<Object>", "snippet": "    protected ResponseEntity<Object> handleMethodArgumentNotValid(MethodArgumentNotValidException exception,\n                                                                  HttpHeaders headers,\n                                                                  HttpStatus status,\n                                                                  WebRequest request) {\n        var errors = exception.getBindingResult().getFieldErrors().stream()\n                .map(x -> String.format(\"%s: %s\", x.getField(), x.getDefaultMessage()))\n                .collect(joining(\"; \"));\n        return new ResponseEntity<>(createResponseBody(errors, BAD_REQUEST), new HttpHeaders(), BAD_REQUEST);\n    }", "url": "https://raw.githubusercontent.com/everest-engineering/lhotse/master/api/src/main/java/engineering/everest/lhotse/api/rest/ExceptionHandlingControllerAdvice.java", "stars": "9", "class_props": {"extends": "ResponseEntityExceptionHandler", "implements": null, "modifiers": ["public"]}}, {"id": 63638, "method_name": "createResponseBody", "class_name": "ExceptionHandlingControllerAdvice", "params": ["String", "HttpStatus"], "throws": null, "modifiers": ["private"], "return_type": "ApiErrorResponse", "snippet": "    private ApiErrorResponse createResponseBody(String message, HttpStatus badRequest) {\n        return ApiErrorResponse.builder()\n                .status(badRequest)\n                .message(message)\n                .timeStamp(Instant.now(clock))\n                .build();\n    }", "url": "https://raw.githubusercontent.com/everest-engineering/lhotse/master/api/src/main/java/engineering/everest/lhotse/api/rest/ExceptionHandlingControllerAdvice.java", "stars": "9", "class_props": {"extends": "ResponseEntityExceptionHandler", "implements": null, "modifiers": ["public"]}}, {"id": 63639, "method_name": "setFlow", "class_name": "FlowWatcher", "params": ["ExecutableFlow"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void setFlow(final ExecutableFlow flow) {\n    this.flow = flow;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-exec-server/src/main/java/azkaban/execapp/event/FlowWatcher.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 63640, "method_name": "getLogger", "class_name": "FlowWatcher", "params": [], "throws": null, "modifiers": ["protected"], "return_type": "Logger", "snippet": "  protected Logger getLogger() {\n    return this.logger;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-exec-server/src/main/java/azkaban/execapp/event/FlowWatcher.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 63641, "method_name": "setLogger", "class_name": "FlowWatcher", "params": ["Logger"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void setLogger(final Logger logger) {\n    this.logger = logger;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-exec-server/src/main/java/azkaban/execapp/event/FlowWatcher.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 63642, "method_name": "handleJobStatusChange", "class_name": "FlowWatcher", "params": ["String", "Status"], "throws": null, "modifiers": ["protected", "synchronized"], "return_type": "void", "snippet": "  protected synchronized void handleJobStatusChange(final String jobId, final Status status) {\n    final BlockingStatus block = this.map.get(jobId);\n    if (block != null) {\n      block.changeStatus(status);\n    }\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-exec-server/src/main/java/azkaban/execapp/event/FlowWatcher.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 63643, "method_name": "getExecId", "class_name": "FlowWatcher", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "  public int getExecId() {\n    return this.execId;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-exec-server/src/main/java/azkaban/execapp/event/FlowWatcher.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 63644, "method_name": "getBlockingStatus", "class_name": "FlowWatcher", "params": ["String"], "throws": null, "modifiers": ["synchronized", "public"], "return_type": "BlockingStatus", "snippet": "  public synchronized BlockingStatus getBlockingStatus(final String jobId) {\n    if (this.cancelWatch) {\n      return null;\n    }\n\n    final ExecutableNode node = this.flow.getExecutableNodePath(jobId);\n    if (node == null) {\n      return null;\n    }\n\n    BlockingStatus blockingStatus = this.map.get(jobId);\n    if (blockingStatus == null) {\n      blockingStatus = new BlockingStatus(this.execId, jobId, node.getStatus());\n      this.map.put(jobId, blockingStatus);\n    }\n\n    return blockingStatus;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-exec-server/src/main/java/azkaban/execapp/event/FlowWatcher.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 63645, "method_name": "peekStatus", "class_name": "FlowWatcher", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "Status", "snippet": "  public Status peekStatus(final String jobId) {\n    if (Status.isStatusFinished(this.flow.getStatus())) {\n      return null;\n    }\n    final ExecutableNode node = this.flow.getExecutableNodePath(jobId);\n    if (node != null) {\n      ExecutableFlowBase parentFlow = node.getParentFlow();\n      while (parentFlow != null) {\n        Status parentStatus = parentFlow.getStatus();\n        if (parentStatus == Status.SKIPPED || parentStatus == Status.DISABLED) {\n          return Status.SKIPPED;\n        }\n        parentFlow = parentFlow.getParentFlow();\n      }\n      return node.getStatus();\n    }\n\n    return null;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-exec-server/src/main/java/azkaban/execapp/event/FlowWatcher.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 63646, "method_name": "unblockAllWatches", "class_name": "FlowWatcher", "params": [], "throws": null, "modifiers": ["synchronized", "public"], "return_type": "void", "snippet": "  public synchronized void unblockAllWatches() {\n    this.logger.info(\"Unblock all watches on \" + this.execId);\n    this.cancelWatch = true;\n\n    for (final BlockingStatus status : this.map.values()) {\n      this.logger.info(\"Unblocking \" + status.getJobId());\n      status.changeStatus(Status.SKIPPED);\n      status.unblock();\n    }\n\n    this.logger.info(\"Successfully unblocked all watches on \" + this.execId);\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-exec-server/src/main/java/azkaban/execapp/event/FlowWatcher.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 63647, "method_name": "isWatchCancelled", "class_name": "FlowWatcher", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "  public boolean isWatchCancelled() {\n    return this.cancelWatch;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-exec-server/src/main/java/azkaban/execapp/event/FlowWatcher.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 63648, "method_name": "stopWatcher", "class_name": "FlowWatcher", "params": [], "throws": null, "modifiers": ["public", "abstract"], "return_type": "void", "snippet": "  public abstract void stopWatcher();\n}\n\n", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-exec-server/src/main/java/azkaban/execapp/event/FlowWatcher.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 63649, "method_name": "init", "class_name": "RegistryHandler", "params": [], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void init() {\n        ITEMS.register(FMLJavaModLoadingContext.get().getModEventBus());\n        BLOCKS.register(FMLJavaModLoadingContext.get().getModEventBus());\n    }", "url": "https://raw.githubusercontent.com/MrzDev/mod/master/src/main/java/com/mrz/swordmod/util/RegistryHandler.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 63650, "method_name": "main", "class_name": "ConstructorTest02", "params": ["String"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "\tpublic static void main(String[] args) {\n\t\t\n\t\t//\u521b\u5efa\u5bf9\u8c61\n\t\t //\u5f53\u4e00\u4e2a\u7c7b\u4e2d\u5143\u7d20\u8fc7\u591a\uff0c\u60f3\u5feb\u901f\u67e5\u770b\uff0c\u5728\u5f53\u524d\u7c7b\u4e2d\u4f7f\u7528CTRL + o \u5feb\u6377\u952e\uff0c\u7136\u540e\u8f93\u5165\u8981\u67e5\u627e\u7684\u5143\u7d20\u540d\u79f0\u3002\n\t\t Account act1 = new Account();\n\t\t \n\t\t System.out.println(\"\u8d26\u53f7: \" + act1.getActno());\n\t\t System.out.println(\"\u4f59\u989d: \" + act1.getBalance());\n\t\t \n\t\t Account act2 = new Account(\"222\");\n\t\t \n\t\t System.out.println(\"\u8d26\u53f7: \" + act2.getActno());\n\t\t System.out.println(\"\u4f59\u989d: \" + act2.getBalance());\n\t\t \n\t\t Account act3 = new Account(33.33);\n\t\t \n\t\t System.out.println(\"\u8d26\u53f7: \" + act3.getActno());\n\t\t System.out.println(\"\u4f59\u989d: \" + act3.getBalance());\n\t\t \n\t\t Account act4 = new Account(\"444\" , 44.44);\n\t\t \n\t\t System.out.println(\"\u8d26\u53f7: \" + act4.getActno());\n\t\t System.out.println(\"\u4f59\u989d: \" + act4.getBalance());\n\t}", "url": "https://raw.githubusercontent.com/hasaki-w-c/JAVA--/master/leiTest/ConstructorTest02.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 63651, "method_name": "getInstance", "class_name": "BluezoneIdGenerator", "params": ["Context"], "throws": null, "modifiers": ["public", "static"], "return_type": "BluezoneIdGenerator", "snippet": "    public static BluezoneIdGenerator getInstance(Context context) {\n        if (sInstance == null) {\n            sInstance = new BluezoneIdGenerator();\n            sInstance.mPreferenceManager = AppPreferenceManager.getInstance(context);\n        }\n\n        return sInstance;\n    }", "url": "https://raw.githubusercontent.com/BluezoneGlobal/react-native-bluetooth-scan/master/lib/android/src/main/java/com/scan/bluezoneid/BluezoneIdGenerator.java", "stars": "14", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 63652, "method_name": "getBluezoneId", "class_name": "BluezoneIdGenerator", "params": [], "throws": null, "modifiers": ["public"], "return_type": "byte", "snippet": "    public byte[] getBluezoneId() {\n        if (BluezoneIdConstants.Config.IS_ROLLING_ID) {\n            return rollingBluezoneId();\n        }\n\n        return randomBluezoneId().getBytes();\n    }", "url": "https://raw.githubusercontent.com/BluezoneGlobal/react-native-bluetooth-scan/master/lib/android/src/main/java/com/scan/bluezoneid/BluezoneIdGenerator.java", "stars": "14", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 63653, "method_name": "rollingBluezoneId", "class_name": "BluezoneIdGenerator", "params": [], "throws": null, "modifiers": ["private"], "return_type": "byte", "snippet": "    private byte[] rollingBluezoneId() {\n        byte[] bluezoneId = null;\n\n        // Current\n        long now = System.currentTimeMillis();\n        BluezoneDate bluezoneDateNow = new BluezoneDate(now);\n\n        // Get list BluezoneDailyId\n        BluezoneDailyId bluezoneDailyId = getBluezoneDailyId();\n        if (bluezoneDailyId != null && bluezoneDailyId.second.getTimeStart() >= bluezoneDateNow.getTimeStart()) {\n            int index = getIndexSubKey(now);\n            if (index >= 0) {\n                BluezoneId bluezoneIdSave = bluezoneDailyId.first.get(index);\n                if (bluezoneIdSave != null) {\n                    bluezoneId = bluezoneIdSave.first;\n                }\n            }\n        } else {\n            // Create BluezoneDailyId\n            BluezoneDailyKey bluezoneDailyKey = getBluezoneBaseId();\n            if (bluezoneDailyKey != null) {\n                // Other date\n                bluezoneId = createListBluezoneDailyId(createBluezoneDailyKey(bluezoneDailyKey, bluezoneDateNow.getTimeStart()));\n            } else {\n                // New create\n                bluezoneId = createBluezoneBaseId();\n            }\n        }\n\n        return bluezoneId;\n    }", "url": "https://raw.githubusercontent.com/BluezoneGlobal/react-native-bluetooth-scan/master/lib/android/src/main/java/com/scan/bluezoneid/BluezoneIdGenerator.java", "stars": "14", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 63654, "method_name": "createBluezoneBaseId", "class_name": "BluezoneIdGenerator", "params": [], "throws": null, "modifiers": ["private"], "return_type": "byte", "snippet": "    private byte[] createBluezoneBaseId() {\n        byte[] bluezoneDailyKeyNow = null;\n\n        // Create random bluezone base id\n        byte[] bluezoneBaseId = initRandomBluezoneBaseId();\n        if (bluezoneBaseId != null) {\n            BluezoneDailyKey bluezoneBaseIdData = new BluezoneDailyKey(initRandomBluezoneBaseId(), new BluezoneDate(System.currentTimeMillis()));\n            saveBluezoneBaseId(BluezoneIdUtils.objectToJson(bluezoneBaseIdData));\n\n            // Create BluezoneId\n            bluezoneDailyKeyNow = createListBluezoneDailyId(bluezoneBaseId);\n        }\n\n        return bluezoneDailyKeyNow;\n    }", "url": "https://raw.githubusercontent.com/BluezoneGlobal/react-native-bluetooth-scan/master/lib/android/src/main/java/com/scan/bluezoneid/BluezoneIdGenerator.java", "stars": "14", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 63655, "method_name": "initRandomBluezoneBaseId", "class_name": "BluezoneIdGenerator", "params": [], "throws": null, "modifiers": ["private"], "return_type": "byte", "snippet": "    private byte[] initRandomBluezoneBaseId() {\n        try {\n            KeyGenerator keyGenerator = KeyGenerator.getInstance(\"HmacSHA256\");\n            SecretKey secretKey = keyGenerator.generateKey();\n            return secretKey.getEncoded();\n        } catch (NoSuchAlgorithmException e) {\n            e.printStackTrace();\n        }\n\n        return null;\n    }", "url": "https://raw.githubusercontent.com/BluezoneGlobal/react-native-bluetooth-scan/master/lib/android/src/main/java/com/scan/bluezoneid/BluezoneIdGenerator.java", "stars": "14", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 63656, "method_name": "createBluezoneDailyKey", "class_name": "BluezoneIdGenerator", "params": ["BluezoneDailyKey", "long"], "throws": null, "modifiers": ["private"], "return_type": "byte", "snippet": "    private byte[] createBluezoneDailyKey(BluezoneDailyKey bluezoneDailyKey, long timeEnd) {\n        byte[] bluezoneDailyKeyNow = null;\n\n        // Create hash sha256 to Dn-1\n        if (bluezoneDailyKey != null) {\n            // Default\n            bluezoneDailyKeyNow = bluezoneDailyKey.first;\n\n            int times = (int) ((timeEnd - bluezoneDailyKey.second.getTimeStart()) / BluezoneIdConstants.DAY_MILLISECONDS);\n            if (times > 0) {\n                for (int i = 0; i < times - 1; i++) {\n                    bluezoneDailyKeyNow = BluezoneIdUtils.sha256(bluezoneDailyKeyNow);\n                }\n            }\n        }\n\n        return bluezoneDailyKeyNow;\n    }", "url": "https://raw.githubusercontent.com/BluezoneGlobal/react-native-bluetooth-scan/master/lib/android/src/main/java/com/scan/bluezoneid/BluezoneIdGenerator.java", "stars": "14", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 63657, "method_name": "createListBluezoneDailyId", "class_name": "BluezoneIdGenerator", "params": ["byte"], "throws": null, "modifiers": ["private"], "return_type": "byte", "snippet": "    private byte[] createListBluezoneDailyId(byte[] bluezoneDailyKey) {\n        byte[] bluezoneDailyKeyNow = null;\n\n        try {\n            // check\n            if (bluezoneDailyKey != null && bluezoneDailyKey.length == 32) {\n                long now = System.currentTimeMillis();\n\n                // Get max sub sub key per day\n                int maxSubKey = getMaxNumberSubKey();\n\n                // Data for subkey = bluezoneDailyKey + salt sub key\n                byte[] dataCreateSubKey = BluezoneIdUtils.addByteArrays(bluezoneDailyKey, BluezoneIdConstants.Config.SALT_SUB_KEY_DAILY);\n                byte[] bluezoneSubKey = BluezoneIdUtils.sha256(dataCreateSubKey);\n\n                // Date subkey\n                BluezoneDateSubKey dateSubKey = new BluezoneDateSubKey(now, maxSubKey);\n\n                int indexSubKey = dateSubKey.getIndexSubKey();\n\n                // List BluezoneId\n                ArrayList<BluezoneId> listBluezoneId = new ArrayList<>();\n\n                // Create list\n                for (int i = 0; i < maxSubKey; i++) {\n                    byte[] bluezoneId = convertBluezoneSubKeyToBluezoneId(bluezoneSubKey);\n                    if (bluezoneId.length == BluezoneIdConstants.Config.LENGTH_BYTE) {\n                        listBluezoneId.add(new BluezoneId(bluezoneId, dateSubKey.nextTimeSubKey()));\n\n                        // Check index subkey\n                        if (indexSubKey == i) {\n                            bluezoneDailyKeyNow = bluezoneId;\n                        }\n                    }\n\n                    bluezoneSubKey = BluezoneIdUtils.sha256(bluezoneSubKey);\n                }\n\n                // Save list daily id\n                saveBluezoneDailyId(BluezoneIdUtils.objectToJson(new BluezoneDailyId(listBluezoneId, new BluezoneDate(now))));\n            }\n        } catch (Exception e) {\n            e.printStackTrace();\n        }\n\n        return bluezoneDailyKeyNow;\n    }", "url": "https://raw.githubusercontent.com/BluezoneGlobal/react-native-bluetooth-scan/master/lib/android/src/main/java/com/scan/bluezoneid/BluezoneIdGenerator.java", "stars": "14", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 63658, "method_name": "convertBluezoneSubKeyToBluezoneId", "class_name": "BluezoneIdGenerator", "params": ["byte"], "throws": null, "modifiers": ["static", "private"], "return_type": "byte", "snippet": "    private static byte[] convertBluezoneSubKeyToBluezoneId(byte[] bluezoneSubKey) {\n        byte[] bluezoneDailyId = new byte[BluezoneIdConstants.Config.LENGTH_BYTE];\n\n        if (bluezoneSubKey != null && bluezoneSubKey.length == 32) {\n            // 12 Byte: 4 x 4 bytes + 2 x 8 bytes\n            for (int i = 0; i < BluezoneIdConstants.Config.LENGTH_BYTE; i++) {\n                int start = i * 4;\n\n                // Check 2 end\n                if (i > 3) {\n                    start = (i - 4) * 2 +  16;\n                }\n\n                bluezoneDailyId[i] = bluezoneSubKey[start];\n            }\n        }\n\n        return bluezoneDailyId;\n    }", "url": "https://raw.githubusercontent.com/BluezoneGlobal/react-native-bluetooth-scan/master/lib/android/src/main/java/com/scan/bluezoneid/BluezoneIdGenerator.java", "stars": "14", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 63659, "method_name": "getIndexSubKey", "class_name": "BluezoneIdGenerator", "params": ["long"], "throws": null, "modifiers": ["private"], "return_type": "int", "snippet": "    private int getIndexSubKey(long time) {\n        // Get max sub sub key per day\n        int maxSubKey = getMaxNumberSubKey();\n\n        // Index\n        return (int) ((time - (new BluezoneDate(time)).getTimeStart()) / (BluezoneIdConstants.DAY_MILLISECONDS / maxSubKey));\n    }", "url": "https://raw.githubusercontent.com/BluezoneGlobal/react-native-bluetooth-scan/master/lib/android/src/main/java/com/scan/bluezoneid/BluezoneIdGenerator.java", "stars": "14", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 63660, "method_name": "randomBluezoneId", "class_name": "BluezoneIdGenerator", "params": [], "throws": null, "modifiers": ["private"], "return_type": "String", "snippet": "    private String randomBluezoneId() {\n        String randomBluezoneId = getRadomBluezoneId();\n        if (TextUtils.isEmpty(randomBluezoneId)) {\n            StringBuilder blidBuilder = new StringBuilder();\n\n            // SecureRandom\n            SecureRandom secureRandom = new SecureRandom();\n\n            // Create id\n            for (int i = 0; i < BluezoneIdConstants.Config.LENGTH_BLID; i++) {\n                // Index Random\n                int index = secureRandom.nextInt(BluezoneIdConstants.Config.CHAR_RANDOM.length());\n\n                // Add\n                blidBuilder.append(BluezoneIdConstants.Config.CHAR_RANDOM.charAt(index));\n            }\n\n            randomBluezoneId = blidBuilder.toString();\n            saveBluezoneDailyId(randomBluezoneId);\n        }\n\n        return randomBluezoneId;\n    }", "url": "https://raw.githubusercontent.com/BluezoneGlobal/react-native-bluetooth-scan/master/lib/android/src/main/java/com/scan/bluezoneid/BluezoneIdGenerator.java", "stars": "14", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 63661, "method_name": "saveBluezoneBaseId", "class_name": "BluezoneIdGenerator", "params": ["String"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void saveBluezoneBaseId(String bluezoneBaseId) {\n        mPreferenceManager.putString(BluezoneIdConstants.Preference.BLUEZONE_BASE_ID, bluezoneBaseId);\n    }", "url": "https://raw.githubusercontent.com/BluezoneGlobal/react-native-bluetooth-scan/master/lib/android/src/main/java/com/scan/bluezoneid/BluezoneIdGenerator.java", "stars": "14", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 63662, "method_name": "getBluezoneBaseId", "class_name": "BluezoneIdGenerator", "params": [], "throws": null, "modifiers": ["private"], "return_type": "BluezoneDailyKey", "snippet": "    private BluezoneDailyKey getBluezoneBaseId() {\n        String jsonBluezoneBaseId = mPreferenceManager.getString(BluezoneIdConstants.Preference.BLUEZONE_BASE_ID, \"\");\n        if (!TextUtils.isEmpty(jsonBluezoneBaseId)) {\n            return BluezoneIdUtils.jsonToObject(jsonBluezoneBaseId, BluezoneDailyKey.class);\n        }\n\n        return null;\n    }", "url": "https://raw.githubusercontent.com/BluezoneGlobal/react-native-bluetooth-scan/master/lib/android/src/main/java/com/scan/bluezoneid/BluezoneIdGenerator.java", "stars": "14", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 63663, "method_name": "saveBluezoneDailyId", "class_name": "BluezoneIdGenerator", "params": ["String"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void saveBluezoneDailyId(String bluezoneDailyId) {\n        mPreferenceManager.putString(BluezoneIdConstants.Preference.BLUEZONE_DAILY_ID, bluezoneDailyId);\n    }", "url": "https://raw.githubusercontent.com/BluezoneGlobal/react-native-bluetooth-scan/master/lib/android/src/main/java/com/scan/bluezoneid/BluezoneIdGenerator.java", "stars": "14", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 63664, "method_name": "getBluezoneDailyId", "class_name": "BluezoneIdGenerator", "params": [], "throws": null, "modifiers": ["private"], "return_type": "BluezoneDailyId", "snippet": "    private BluezoneDailyId getBluezoneDailyId() {\n        String jsonBluezoneDailyId = mPreferenceManager.getString(BluezoneIdConstants.Preference.BLUEZONE_DAILY_ID, \"\");\n        if (!TextUtils.isEmpty(jsonBluezoneDailyId)) {\n            return BluezoneIdUtils.jsonToObject(jsonBluezoneDailyId, BluezoneDailyId.class);\n        }\n\n        return null;\n    }", "url": "https://raw.githubusercontent.com/BluezoneGlobal/react-native-bluetooth-scan/master/lib/android/src/main/java/com/scan/bluezoneid/BluezoneIdGenerator.java", "stars": "14", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 63665, "method_name": "getRadomBluezoneId", "class_name": "BluezoneIdGenerator", "params": [], "throws": null, "modifiers": ["private"], "return_type": "String", "snippet": "    private String getRadomBluezoneId() {\n        return mPreferenceManager.getString(BluezoneIdConstants.Preference.BLUEZONE_DAILY_ID, \"\");\n    }", "url": "https://raw.githubusercontent.com/BluezoneGlobal/react-native-bluetooth-scan/master/lib/android/src/main/java/com/scan/bluezoneid/BluezoneIdGenerator.java", "stars": "14", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 63666, "method_name": "setMaxNumberSubKey", "class_name": "BluezoneIdGenerator", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setMaxNumberSubKey(int maxNumber) {\n        mPreferenceManager.putInt(BluezoneIdConstants.Preference.MAX_NUMBER_SUB_KEY_PER_DAY, maxNumber);\n    }", "url": "https://raw.githubusercontent.com/BluezoneGlobal/react-native-bluetooth-scan/master/lib/android/src/main/java/com/scan/bluezoneid/BluezoneIdGenerator.java", "stars": "14", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 63667, "method_name": "getMaxNumberSubKey", "class_name": "BluezoneIdGenerator", "params": [], "throws": null, "modifiers": ["private"], "return_type": "int", "snippet": "    private int getMaxNumberSubKey() {\n        int maxSubKey = mPreferenceManager.getInt(BluezoneIdConstants.Preference.MAX_NUMBER_SUB_KEY_PER_DAY, BluezoneIdConstants.Config.MAX_NUMBER_SUB_KEY_PER_DAY);\n        if (maxSubKey < 1) {\n            maxSubKey = BluezoneIdConstants.Config.MAX_NUMBER_SUB_KEY_PER_DAY;\n        }\n\n        return maxSubKey;\n    }", "url": "https://raw.githubusercontent.com/BluezoneGlobal/react-native-bluetooth-scan/master/lib/android/src/main/java/com/scan/bluezoneid/BluezoneIdGenerator.java", "stars": "14", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 63668, "method_name": "main", "class_name": "TuneEverything", "params": ["String"], "throws": ["IOException"], "modifiers": ["public", "static"], "return_type": "void", "snippet": "\tpublic static void main(String[] args) throws IOException {\n\t\tint l, stringLength, iterations, minIndex, END, END1, END2, STEP2, nThreads;\n\t\tlong time;\n\t\tdouble min;\n\t\tdouble[] measurements;\n\t\tdouble[][] matrix;\n\t\tString path;\n\t\tIntArray string=null;\n\t\tBernoulliSubstring w;\n\t\tSubstringIterator iterator;\n\t\tnThreads=Integer.parseInt(args[0]);\n\t\tBufferedWriter bw = new BufferedWriter(new FileWriter(new File(\"TUNE_EVERYTHING_OUT_\"+nThreads+\".txt\")));\n\t\tSimpleDateFormat sdf = new java.text.SimpleDateFormat(\"MM/dd/yyyy HH:mm:ss\");\n\n\t\t// Parsing input\n\t\tpath=\"dna.50MB\";  // (file,length,nLines): (dna.50MB,52427710,?), (NC_021658.fna,14782125,211174)\n\t\tstringLength=52427710;\n\t\titerations=1;\n\t\tbw.write(\"availableProcessors=\"+Runtime.getRuntime().availableProcessors()+\" (but using \"+nThreads+\")\\n\");\n\t\tbw.flush();\n\n\t\t// Building $SubstringIterator$\n\t\tint[] alphabet = new int[] {0,1,2,3};\n\t\ttry { string=Utils.loadDNA(path,stringLength,1000); }\n\t\tcatch(IOException e) {\n\t\t\te.printStackTrace();\n\t\t\tSystem.exit(1);\n\t\t}\n\t\tw = new BernoulliSubstring(4,Utils.log2(4),Utils.bitsToEncode(4),string.length()+1,Utils.log2(string.length()+1),Utils.bitsToEncode(string.length()+1));\n\t\ttime=System.currentTimeMillis();\n\t\titerator = new SubstringIterator(string,alphabet,alphabet.length,w);\n\t\tbw.write(\"construction time: \"+(System.currentTimeMillis()-time)+\"\\n\");\n\t\tbw.flush();\n\t\tConstants.N_THREADS=nThreads;\n\n/*\n\t\t// LONGS_PER_REGION\n\t\tEND=10;\n\t\tmeasurements = new double[END+1];\n\t\tfor (l=0; l<=END; l++) {\n\t\t\tConstants.LONGS_PER_REGION=1<<l;\n\t\t\ttime=System.currentTimeMillis();\n\t\t\tfor (int i=0; i<iterations; i++) iterator.run();\n\t\t\tmeasurements[l]=(double)(System.currentTimeMillis()-time)/iterations;\n\t\t\tbw.write(\".\");bw.flush();\n\t\t}\n\t\tbw.write(\"\\nLONGS_PER_REGION\\n\");\n\t\tmin=Double.MAX_VALUE;\n\t\tminIndex=-1;\n\t\tfor (l=0; l<=END; l++) {\n\t\t\tbw.write(measurements[l]+\"\\n\");\n\t\t\tif (measurements[l]<min) {\n\t\t\t\tmin=measurements[l];\n\t\t\t\tminIndex=l;\n\t\t\t}\n\t\t}\n\t\tbw.flush();\n\t\tConstants.LONGS_PER_REGION=1<<minIndex;\n\n\n\t\t// LONGS_PER_REGION_CHARACTERSTACK\n\t\tEND=10;\n\t\tmeasurements = new double[END+1];\n\t\tfor (l=0; l<=END; l++) {\n\t\t\tConstants.LONGS_PER_REGION_CHARACTERSTACK=1<<l;\n\t\t\ttime=System.currentTimeMillis();\n\t\t\tfor (int i=0; i<iterations; i++) iterator.run();\n\t\t\tmeasurements[l]=(double)(System.currentTimeMillis()-time)/iterations;\n\t\t\tbw.write(\".\");bw.flush();\n\t\t}\n\t\tbw.write(\"\\nLONGS_PER_REGION_CHARACTERSTACK\\n\");\n\t\tmin=Double.MAX_VALUE;\n\t\tminIndex=-1;\n\t\tfor (l=0; l<=END; l++) {\n\t\t\tbw.write(measurements[l]+\"\\n\");\n\t\t\tif (measurements[l]<min) {\n\t\t\t\tmin=measurements[l];\n\t\t\t\tminIndex=l;\n\t\t\t}\n\t\t}\n\t\tbw.flush();\n\t\tConstants.LONGS_PER_REGION_CHARACTERSTACK=1<<minIndex;\n\n\n\t\t// LONGS_PER_REGION_POINTERSTACK\n\t\tEND=10;\n\t\tmeasurements = new double[END+1];\n\t\tfor (l=0; l<=END; l++) {\n\t\t\tConstants.LONGS_PER_REGION_POINTERSTACK=1<<l;\n\t\t\ttime=System.currentTimeMillis();\n\t\t\tfor (int i=0; i<iterations; i++) iterator.run();\n\t\t\tmeasurements[l]=(double)(System.currentTimeMillis()-time)/iterations;\n\t\t\tbw.write(\".\");bw.flush();\n\t\t}\n\t\tbw.write(\"\\nLONGS_PER_REGION_POINTERSTACK\\n\");\n\t\tmin=Double.MAX_VALUE;\n\t\tminIndex=-1;\n\t\tfor (l=0; l<=END; l++) {\n\t\t\tbw.write(measurements[l]+\"\\n\");\n\t\t\tif (measurements[l]<min) {\n\t\t\t\tmin=measurements[l];\n\t\t\t\tminIndex=l;\n\t\t\t}\n\t\t}\n\t\tbw.flush();\n\t\tConstants.LONGS_PER_REGION_POINTERSTACK=1<<minIndex;\n\n\n\t\t// N_STEALING_ATTEMPTS\n\t\tEND1 = 10;\n\t\tSTEP2 = 10;\n\t\tEND2 = 100;\n\t\tmeasurements = new double[1+END1+(END2-END1)/STEP2];\n\t\tfor (l=1; l<=END1; l++) {\n\t\t\tConstants.N_STEALING_ATTEMPTS=l;\n\t\t\ttime=System.currentTimeMillis();\n\t\t\tfor (int i=0; i<iterations; i++) iterator.run();\n\t\t\tmeasurements[l]=(double)(System.currentTimeMillis()-time)/iterations;\n\t\t\tbw.write(\".\");bw.flush();\n\t\t}\n\t\tfor (l=END1+1; l<measurements.length; l++) {\n\t\t\tConstants.N_STEALING_ATTEMPTS=END1+(l-END1)*STEP2;\n\t\t\ttime=System.currentTimeMillis();\n\t\t\tfor (int i=0; i<iterations; i++) iterator.run();\n\t\t\tmeasurements[l]=(double)(System.currentTimeMillis()-time)/iterations;\n\t\t\tbw.write(\".\");bw.flush();\n\t\t}\n\t\tbw.write(\"\\nN_STEALING_ATTEMPTS\\n\");\n\t\tmin=Double.MAX_VALUE;\n\t\tminIndex=-1;\n\t\tfor (l=1; l<measurements.length; l++) {\n\t\t\tbw.write(measurements[l]+\"\\n\");\n\t\t\tif (measurements[l]<min) {\n\t\t\t\tmin=measurements[l];\n\t\t\t\tminIndex=l;\n\t\t\t}\n\t\t}\n\t\tbw.flush();\n\t\tConstants.N_STEALING_ATTEMPTS=minIndex<=END1?minIndex:END1+(minIndex-END1)*STEP2;\n*/\n\n\t\t// MAX_STRING_LENGTH_FOR_SPLIT, DONOR_STACK_LOWERBOUND\n\t\tEND1=10;\n\t\tEND2=10;\n\t\tmatrix = new double[END1+1][END2+1];\n\t\tbw.write(\"\\nMAX_STRING_LENGTH_FOR_SPLIT, DONOR_STACK_LOWERBOUND\\n\");\n\t\tfor (int m=END1; m>=1; m--) {\n\t\t\tConstants.MAX_STRING_LENGTH_FOR_SPLIT=m;\n\t\t\tfor (int d=END2; d>=2; d--) {\n\t\t\t\tConstants.DONOR_STACK_LOWERBOUND=d;\n\t\t\t\ttime=System.currentTimeMillis();\n\t\t\t\tfor (int i=0; i<iterations; i++) iterator.run();\n\t\t\t\tmatrix[m][d]=(double)(System.currentTimeMillis()-time)/iterations;\n\t\t\t\tbw.write(matrix[m][d]+\" \"); bw.flush();\n\t\t\t\tSystem.out.println(sdf.format(new java.util.Date())+\"> finished processing pair (\"+m+\",\"+d+\")\");\n\t\t\t}\n\t\t\tbw.write(\"\\n\"); bw.flush();\n\t\t}\n\t\tmin=Double.MAX_VALUE;\n\t\tint minIndex1 = -1;\n\t\tint minIndex2 = -1;\n\t\tfor (int m=1; m<=END1; m++) {\n\t\t\tfor (int d=2; d<=END2; d++) {\n\t\t\t\tif (matrix[m][d]<min) {\n\t\t\t\t\tmin=matrix[m][d];\n\t\t\t\t\tminIndex1=m;\n\t\t\t\t\tminIndex2=d;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tConstants.MAX_STRING_LENGTH_FOR_SPLIT=minIndex1;\n\t\tConstants.DONOR_STACK_LOWERBOUND=minIndex2;\n\n\n\n\t\tbw.close();\n\t}", "url": "https://raw.githubusercontent.com/fcunial/portfolio/master/surprisingStrings/TuneEverything.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 63669, "method_name": "copyListWithRand1", "class_name": "Code04_CopyListWithRandom", "params": ["Node"], "throws": null, "modifiers": ["public", "static"], "return_type": "Node", "snippet": "\tpublic static Node copyListWithRand1(Node head) {\n\t\tHashMap<Node, Node> map = new HashMap<Node, Node>();\n\t\tNode cur = head;\n\t\twhile (cur != null) {\n\t\t\tmap.put(cur, new Node(cur.value));\n\t\t\tcur = cur.next;\n\t\t}\n\t\tcur = head;\n\t\twhile (cur != null) {\n\t\t\t// cur \u8001\n\t\t\t// map.get(cur) \u65b0\n\t\t\tmap.get(cur).next = map.get(cur.next);\n\t\t\tmap.get(cur).rand = map.get(cur.rand);\n\t\t\tcur = cur.next;\n\t\t}\n\t\treturn map.get(head);\n\t}", "url": "https://raw.githubusercontent.com/algorithmzuo/algorithmbasic2020/master/src/class06/Code04_CopyListWithRandom.java", "stars": "27", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 63670, "method_name": "copyListWithRand2", "class_name": "Code04_CopyListWithRandom", "params": ["Node"], "throws": null, "modifiers": ["public", "static"], "return_type": "Node", "snippet": "\tpublic static Node copyListWithRand2(Node head) {\n\t\tif (head == null) {\n\t\t\treturn null;\n\t\t}\n\t\tNode cur = head;\n\t\tNode next = null;\n\t\t// copy node and link to every node\n\t\t// 1 -> 2\n\t\t// 1 -> 1' -> 2\n\t\twhile (cur != null) {\n\t\t\t// cur \u8001   next \u8001\u7684\u4e0b\u4e00\u4e2a\n\t\t\tnext = cur.next;\n\t\t\tcur.next = new Node(cur.value);\n\t\t\tcur.next.next = next;\n\t\t\tcur = next;\n\t\t}\n\t\tcur = head;\n\t\tNode curCopy = null;\n\t\t// set copy node rand\n\t\t// 1 -> 1' -> 2 -> 2'\n\t\twhile (cur != null) {\n\t\t\t// cur \u8001\n\t\t\t// cur.next  \u65b0 copy\n\t\t\tnext = cur.next.next;\n\t\t\tcurCopy = cur.next;\n\t\t\tcurCopy.rand = cur.rand != null ? cur.rand.next : null;\n\t\t\tcur = next;\n\t\t}\n\t\t// head  head.next\n\t\tNode res = head.next;\n\t\tcur = head;\n\t\t// split\n\t\twhile (cur != null) {\n\t\t\tnext = cur.next.next;\n\t\t\tcurCopy = cur.next;\n\t\t\tcur.next = next;\n\t\t\tcurCopy.next = next != null ? next.next : null;\n\t\t\tcur = next;\n\t\t}\n\t\treturn res;\n\t}", "url": "https://raw.githubusercontent.com/algorithmzuo/algorithmbasic2020/master/src/class06/Code04_CopyListWithRandom.java", "stars": "27", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 63671, "method_name": "printRandLinkedList", "class_name": "Code04_CopyListWithRandom", "params": ["Node"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "\tpublic static void printRandLinkedList(Node head) {\n\t\tNode cur = head;\n\t\tSystem.out.print(\"order: \");\n\t\twhile (cur != null) {\n\t\t\tSystem.out.print(cur.value + \" \");\n\t\t\tcur = cur.next;\n\t\t}\n\t\tSystem.out.println();\n\t\tcur = head;\n\t\tSystem.out.print(\"rand:  \");\n\t\twhile (cur != null) {\n\t\t\tSystem.out.print(cur.rand == null ? \"- \" : cur.rand.value + \" \");\n\t\t\tcur = cur.next;\n\t\t}\n\t\tSystem.out.println();\n\t}", "url": "https://raw.githubusercontent.com/algorithmzuo/algorithmbasic2020/master/src/class06/Code04_CopyListWithRandom.java", "stars": "27", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 63672, "method_name": "main", "class_name": "Code04_CopyListWithRandom", "params": ["String"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "\tpublic static void main(String[] args) {\n\t\tNode head = null;\n\t\tNode res1 = null;\n\t\tNode res2 = null;\n\t\tprintRandLinkedList(head);\n\t\tres1 = copyListWithRand1(head);\n\t\tprintRandLinkedList(res1);\n\t\tres2 = copyListWithRand2(head);\n\t\tprintRandLinkedList(res2);\n\t\tprintRandLinkedList(head);\n\t\tSystem.out.println(\"=========================\");\n\n\t\thead = new Node(1);\n\t\thead.next = new Node(2);\n\t\thead.next.next = new Node(3);\n\t\thead.next.next.next = new Node(4);\n\t\thead.next.next.next.next = new Node(5);\n\t\thead.next.next.next.next.next = new Node(6);\n\n\t\thead.rand = head.next.next.next.next.next; // 1 -> 6\n\t\thead.next.rand = head.next.next.next.next.next; // 2 -> 6\n\t\thead.next.next.rand = head.next.next.next.next; // 3 -> 5\n\t\thead.next.next.next.rand = head.next.next; // 4 -> 3\n\t\thead.next.next.next.next.rand = null; // 5 -> null\n\t\thead.next.next.next.next.next.rand = head.next.next.next; // 6 -> 4\n\n\t\tprintRandLinkedList(head);\n\t\tres1 = copyListWithRand1(head);\n\t\tprintRandLinkedList(res1);\n\t\tres2 = copyListWithRand2(head);\n\t\tprintRandLinkedList(res2);\n\t\tprintRandLinkedList(head);\n\t\tSystem.out.println(\"=========================\");\n\n\t}", "url": "https://raw.githubusercontent.com/algorithmzuo/algorithmbasic2020/master/src/class06/Code04_CopyListWithRandom.java", "stars": "27", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 63673, "method_name": "main", "class_name": "Test_POIGenerate", "params": ["String"], "throws": ["Exception"], "modifiers": ["public", "static"], "return_type": "void", "snippet": "\tpublic static void main( String[] args )\n\t\tthrows Exception\n\t{\n\t\tfinal String orgName = \"\u0421\u043b\u0443\u0436\u0431\u0430 \u0442\u0435\u0445\u043d\u0438\u0447\u0435\u0441\u043a\u043e\u0439 \u043f\u043e\u0434\u0434\u0435\u0440\u0436\u043a\u0438 \u0441\u043b\u0443\u0436\u0431\u044b \u0443\u0434\u0430\u043b\u0435\u043d\u043d\u043e\u0439 \u043f\u043e\u0434\u0434\u0435\u0440\u0436\u043a\u0438 \u043a\u043b\u0438\u0435\u043d\u0442\u043e\u0432\";\n\t\t\n\t\tSetup setup = Setup.getSetup(  \"bgcrm_ufanet\", true );\n\t\tConnection con = setup.getDBConnectionFromPool();\n\t\t\n\t\tfinal int paramTabelNumber = 884;\n\t\tfinal int paramDolznost = 773;\n\t\tfinal int graphId = 2;\n\t\tfinal int groupId = 9;\n\t\tfinal int calendarId = 1;\n\t\tfinal Calendar dateFrom = new GregorianCalendar( 2013, Calendar.DECEMBER, 1 );\n\t\tCalendar dateTo = new GregorianCalendar( 2013, Calendar.DECEMBER, 31 );\n\t\t\n\t\tWorkDaysCalendar calendar = setup.getConfig( CalendarConfig.class ).getCalendar( calendarId );\n\t\tMap<Date, Integer> excludeDates = new WorkTypeDAO( con ).getWorkDaysCalendarExcludes( calendarId );\n\t\t\n\t\tParamValueDAO paramDao = new ParamValueDAO( con );\n\t\t\n\t\tMap<Integer, Map<Date, WorkShift>> userShifts = new ShiftDAO( con ).getUserShifts( graphId, dateFrom.getTime(), dateTo.getTime() );\n\t\t\n\t\tList<User> userList = new UserDAO( con ).getUserList( Collections.singleton( groupId ), dateFrom.getTime(), dateTo.getTime() );\n\t\t\n\t\t// \"/home/shamil/tmp/tabel_blank.xls\"\n\t\tHSSFWorkbook workbook = new HSSFWorkbook( new FileInputStream( System.getProperty( \"template\" ) ) );\n\t\tHSSFSheet sheet = workbook.getSheetAt( 0 );\n\t\t\n\t\t// \u043e\u0442\u0434\u0435\u043b\n\t\tsheet.getRow( 9 ).getCell( 1 ).setCellValue( orgName );\n\t\t\n\t\t// \u0434\u0430\u0442\u044b\n\t\taddDates( dateFrom, dateTo, sheet );\n\t\t\n\t\tfinal int days = dateTo.getActualMaximum( Calendar.DAY_OF_MONTH );\n\t\t\n\t\t// \u0447\u0438\u0441\u043b\u0430\n\t\taddDays( sheet, days, 20, new GetForDay()\n\t\t{\n\t\t\t@Override\n\t\t\tpublic String add( int day, boolean upCell )\n\t\t\t{\n\t\t\t\treturn upCell ? String.valueOf( day ) : \"\";\n\t\t\t}\n\n\t\t\t@Override\n\t\t\tpublic String getDefault( boolean upCell )\n\t\t\t{\n\t\t\t\treturn upCell ? \"X\" : \"\";\n\t\t\t}\t\t\t\n\t\t});\n\t\t\n\t\tfinal Map<Integer, WorkType> workTypeMap = new WorkTypeDAO( con ).getWorkTypeMap();\n\t\t\t\t\n\t\t// \u0434\u0438\u0430\u043f\u0430\u0437\u043e\u043d\u044b \u0432 \u0441\u0442\u0440\u043e\u043a\u0430\u0445 \u0441 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u0435\u043c \n\t\tList<CellRangeAddress> rangesForCopy = getRangesForCopy( sheet );\n\t\t\n\t\t// \u043f\u043e\u0434\u0441\u0447\u0451\u0442 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u0430 \u0440\u0430\u0431\u043e\u0447\u0438\u0445 \u0447\u0430\u0441\u043e\u0432\n\t\tint workHoursSum = 0;\n\t\t\n\t\tCalendar date = (Calendar)dateFrom.clone();\n\t\twhile( TimeUtils.dateBeforeOrEq( date, dateTo ) )\n\t\t{\n\t\t\tPair<DayType, Boolean> typePair = calendar.getDayType( date.getTime(), excludeDates );\n\t\t\tInteger workHours = DAY_TYPE_WORK_HOURS.get( typePair.getFirst().getId() );\n\t\t\tif( workHours != null )\n\t\t\t{\n\t\t\t\tworkHoursSum += workHours;\n\t\t\t}\n\t\t\t\n\t\t\tdate.add( Calendar.DAY_OF_YEAR, 1 );\n\t\t}\n\t\t\n\t\t// \u0442\u0435\u0441\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435\n\t\tfor( int i = 0; i < userList.size(); i++ )\n\t\t{\n\t\t\t// \u041a\u0443\u043b\u0430\u043a\u043e\u0432, \u041a\u0440\u0435\u043c\u0435\u0440\n\t\t\tif( userList.get( i ).getId() != 2428 /*&&\n\t\t\t\tuserList.get( i ).getId() != 875*/ )\n\t\t\t{\n\t\t\t\tuserList.remove( i );\n\t\t\t\ti--;\n\t\t\t}\n\t\t}\n\t\t\n\t\t// \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0430 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u0435\u0439\n\t\tfinal int size = userList.size();\n\t\tfor( int i = 0; i < size; i++ )\n\t\t{\n\t\t\tUser user = userList.get( i );\n\t\t\t\n\t\t\tint offset = i * USER_ROWS;\n\t\t\t\n\t\t\tif( i > 0 )\n\t\t\t{\n\t\t\t\tsheet.shiftRows( 30 + offset - USER_ROWS, 34 + offset - USER_ROWS, USER_ROWS );\n\t\t\t\tcreateUserRows( sheet, USER_ROW_FROM + offset, rangesForCopy );\n\t\t\t}\n\t\t\t\n\t\t\tString post = Utils.maskNull( paramDao.getParamText( user.getId(), paramDolznost ) );\n\t\t\tif( Utils.notBlankString( post ) )\n\t\t\t{\n\t\t\t\tpost = \", \" + post;\n\t\t\t}\n\t\t\t\n\t\t\t// \u043f\u043e\u0440\u044f\u0434\u043a\u043e\u0432\u044b\u0439 \u043d\u043e\u043c\u0435\u0440 \u0438 \u0424\u0418\u041e\n\t\t\tHSSFRow row = sheet.getRow( USER_ROW_FROM + offset );\n\t\t\trow.getCell( 0 ).setCellValue( i + 1 );\n\t\t\trow.getCell( 1 ).setCellValue( user.getTitle() + post );\n\t\t\trow.getCell( 2 ).setCellValue( paramDao.getParamText( user.getId(), paramTabelNumber ) );\n\t\t\t\n\t\t\t// \u043a\u043b\u044e\u0447 - \u0441\u0442\u0440\u043e\u043a\u0430\n\t\t\tfinal Map<String, Integer> neyavkMap = new HashMap<String, Integer>( 4 );\n\t\t\t\n\t\t\t@SuppressWarnings(\"unchecked\")\n\t\t\tfinal Map<Date, WorkShift> dateShifts = (Map<Date, WorkShift>)Utils.maskNull( userShifts.get( user.getId() ), Collections.emptyMap() );\n\t\t\t\n\t\t\t// \u0441\u0443\u043c\u043c\u044b \u0434\u043b\u044f \u0441\u0442\u043e\u043b\u0431\u0446\u0430 \"\u041e\u0442\u0440\u0430\u0431\u043e\u0442\u0430\u043d\u043e \u0437\u0430 \u043c\u0435\u0441\u044f\u0446\" \u043a\u0440\u043e\u043c\u0435 \u0441\u0432\u0435\u0440\u0445\u0443\u0440\u043e\u0447\u043a\u0438\n\t\t\t// \u043f\u043e \u043f\u043e\u0437\u0438\u0446\u0438\u044f\u043c \u0432 0 \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u0435 - \u0441\u0443\u043c\u043c\u0430 \u0434\u043d\u0435\u0439, \u0432 1 - \u043c\u0438\u043d\u0443\u0442\n\t\t\tfinal int[][] workedForPeriod = new int[4][2];\n\t\t\t\n\t\t\t// \u0442\u043e\u043b\u044c\u043a\u043e \u0434\u043b\u044f \u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e\u0441\u0442\u0438 \u0443\u0432\u0435\u043b\u0438\u0447\u0438\u0432\u0430\u0442\u044c \u0438\u0437 \u043a\u043b\u0430\u0441\u0441\u0430\n\t\t\tfinal AtomicInteger userWorkMinutes = new AtomicInteger(); \n\t\t\t\n\t\t\taddDays( sheet, days, USER_ROW_FROM + offset, new GetForDay()\n\t\t\t{\n\t\t\t\t// \u0442.\u043a. \u043f\u0435\u0440\u0432\u044b\u0439 \u0432\u044b\u0437\u043e\u0432 \u0438\u0434\u0451\u0442 \u0434\u043b\u044f upCell, \u0447\u0442\u043e\u0431\u044b \u0434\u0432\u0430 \u0440\u0430\u0437\u0430 \u043d\u0435 \u0441\u0447\u0438\u0442\u0430\u0442\u044c - \u0441\u044e\u0434\u0430 \u0441\u043e\u0445\u0440\u0430\u043d\u044f\u0435\u0442\u0441\u044f \u0441\u0442\u0440\u043e\u043a\u0430 \u0434\u043b\u044f \u043d\u0438\u0436\u043d\u0435\u0439 \u044f\u0447\u0435\u0439\u043a\u0438\n\t\t\t\tprivate String valueForDownCell = \"\";\n\t\t\t\t\n\t\t\t\t@Override\n\t\t\t\tpublic String add( int day, boolean upCell )\n\t\t\t\t{\n\t\t\t\t\tif( upCell )\n\t\t\t\t\t{\n    \t\t\t\t\tCalendar clnd = (Calendar)dateFrom.clone();\n    \t\t\t\t\tclnd.set( Calendar.DAY_OF_MONTH, day );\n    \t\t\t\t\t\n    \t\t\t\t\tDate curDate = TimeUtils.convertCalendarToDate( clnd );\n    \t\t\t\t\tDate prevDate = TimeUtils.getPrevDay( curDate );\n    \t\t\t\t\t\n    \t\t\t\t\t// \u043a\u043b\u044e\u0447 - \u043a\u043e\u0434 \u0442\u0438\u043f\u0430 \u0440\u0430\u0431\u043e\u0442. \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 - \u0441\u0443\u043c\u043c\u0430\u0440\u043d\u043e\u0435 \u0447\u0438\u0441\u043b\u043e \u043c\u0438\u043d\u0443\u0442 \u0432 \u044d\u0442\u0438 \u0441\u0443\u0442\u043a\u0438\n    \t\t\t\t\tLinkedHashMap<String, Integer> labels = new LinkedHashMap<String,Integer>();\n    \t\t\t\t\t\n    \t\t\t\t\t// \u0441\u043c\u0435\u043d\u044b \u043f\u0440\u0435\u0434\u044b\u0434\u0443\u0449\u0438\u0445 \u0441\u0443\u0442\u043e\u043a, \u043c\u043e\u0436\u0435\u0442 \u0447\u0442\u043e \u043f\u0435\u0440\u0435\u0448\u043b\u043e \u043d\u0430 \u044d\u0442\u0438\n    \t\t\t\t\tWorkShift shift = dateShifts.get( prevDate );\n    \t\t\t\t\tif( shift != null )\n    \t\t\t\t\t{\n    \t\t\t\t\t\tfor( WorkTypeTime time : shift.getWorkTypeTimeList() )\n    \t\t\t\t\t\t{\n    \t\t\t\t\t\t\tWorkType type = workTypeMap.get( time.getWorkTypeId() );\n        \t\t\t\t\t\tif( type != null )\n        \t\t\t\t\t\t{\n            \t\t\t\t\t\tif( !type.getIsNonWorkHours() )\n            \t\t\t\t\t\t{\n            \t\t\t\t\t\t\tint minutes = time.getWorkMinutesInDay( type, prevDate, curDate );\n            \t\t\t\t\t\t\tif( minutes > 0 )\n            \t\t\t\t\t\t\t{\n                \t\t\t\t\t\t\tfor( String shortcut : type.getShortcutList() )\n                \t\t\t\t\t\t\t{\n                \t\t\t\t\t\t\t\tlabels.put( shortcut, Utils.maskNull( labels.get( shortcut ), 0 ) + minutes );\n                \t\t\t\t\t\t\t}\n                \t\t\t\t\t\t\tuserWorkMinutes.addAndGet( minutes );\n            \t\t\t\t\t\t\t}\n            \t\t\t\t\t\t}\n        \t\t\t\t\t\t}\n            \t\t\t\t\telse\n            \t\t\t\t\t{\n        \t\t\t\t\t\t\tlog.warn( \"Can't find workType with id=\" + time.getWorkTypeId() );\n        \t\t\t\t\t\t}\n        \t\t\t\t\t}\n    \t\t\t\t\t}\n    \t\t\t\t\t\n    \t\t\t\t\t// \u0441\u043c\u0435\u043d\u0430 \u0442\u0435\u043a\u0443\u0449\u0438\u0445 \u0441\u0443\u0442\u043e\u043a\n    \t\t\t\t\tshift = dateShifts.get( curDate );\n    \t\t\t\t\tif( shift != null )\n    \t\t\t\t\t{\n    \t\t\t\t\t\tfor( WorkTypeTime time : shift.getWorkTypeTimeList() )\n    \t\t\t\t\t\t{\n    \t\t\t\t\t\t\tWorkType type = workTypeMap.get( time.getWorkTypeId() );\n    \t\t\t\t\t\t\tif( type != null )\n    \t\t\t\t\t\t\t{\n    \t\t\t\t\t\t\t\t// \u0432\u044b\u044f\u0432\u043b\u0435\u043d\u0438\u0435 \u043d\u0435\u044f\u0432\u043e\u043a\n    \t\t\t\t\t\t\t\tif( type.getIsNonWorkHours() )\n    \t\t\t\t\t\t\t\t{\n    \t\t\t\t\t\t\t\t\tint hours = time.getMinutesInDay( type, curDate, curDate, false ) / 60;\n    \t\t\t\t\t\t\t\t\t// \u0432\u0435\u0441\u044c \u0434\u0435\u043d\u044c \u043d\u0435 \u0443\u0447\u0438\u0442\u044b\u0432\u0430\u043c\u044b\u0439 \u0442\u0438\u043f \u0440\u0430\u0431\u043e\u0442 - \u043d\u0435\u044f\u0432\u043a\u0430\n    \t\t\t\t\t\t\t\t\tif( hours >= 23 )\n    \t\t\t\t\t\t\t\t\t{\n    \t\t\t\t\t\t\t\t\t\tString shortcut = Utils.getFirst( type.getShortcutList() );\n    \t\t\t\t\t\t\t\t\t\t\n    \t\t\t\t\t\t\t\t\t\tInteger current = Utils.maskNull( neyavkMap.get( shortcut ), 0 );\n    \t\t\t\t\t\t\t\t\t\tneyavkMap.put( shortcut, ++current );\n    \t\t\t\t\t\t\t\t\t\t\n    \t\t\t\t\t\t\t\t\t\tvalueForDownCell = \"\";\n    \t\t\t\t\t\t\t\t\t\treturn shortcut;\n    \t\t\t\t\t\t\t\t\t}\n    \t\t\t\t\t\t\t\t}\n    \t\t\t\t\t\t\t\telse\n    \t\t\t\t\t\t\t\t{\n    \t\t\t\t\t\t\t\t\tint minutes = time.getWorkMinutesInDay( type, curDate, curDate );\n    \t\t\t\t\t\t\t\t\tif( minutes > 0 )\n    \t\t\t\t\t\t\t\t\t{\n                \t\t\t\t\t\t\tfor( String shortcut : type.getShortcutList() )\n                \t\t\t\t\t\t\t{\n                \t\t\t\t\t\t\t\tlabels.put( shortcut, Utils.maskNull( labels.get( shortcut ), 1 ) + minutes );\n                \t\t\t\t\t\t\t}\n                \t\t\t\t\t\t\tuserWorkMinutes.addAndGet( minutes );\n    \t\t\t\t\t\t\t\t\t}\n    \t\t\t\t\t\t\t\t}\n    \t\t\t\t\t\t\t}\n    \t\t\t\t\t\t\telse\n    \t\t\t\t\t\t\t{\n    \t\t\t\t\t\t\t\tlog.warn( \"Can't find workType with id=\" + time.getWorkTypeId() );\n    \t\t\t\t\t\t\t}\n    \t\t\t\t\t\t}\n    \t\t\t\t\t}\n    \t\t\t\t\t\n    \t\t\t\t\tfor( Map.Entry<String, Integer> me : labels.entrySet() )\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tString shortcut = me.getKey();\n\t\t\t\t\t\t\tint minutes = me.getValue();\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tInteger position = SHORTCUT_POS.get( shortcut );\n\t\t\t\t\t\t\tif( position != null )\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tworkedForPeriod[position][0] ++;\n\t\t\t\t\t\t\t\tworkedForPeriod[position][1] += minutes;\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tif( log.isDebugEnabled() )\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tlog.debug( day + \" \" + shortcut + \" \" + workedForPeriod[position][0] + \" m \" + workedForPeriod[position][1] + \" h \" + workedForPeriod[position][1] / 60 );\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n    \t\t\t\t\t\n    \t\t\t\t\tStringBuilder labelString = new StringBuilder( 100 );\n    \t\t\t\t\tStringBuilder hoursString = new StringBuilder( 100 );\n    \t\t\t\t\t\n    \t\t\t\t\tfor( Map.Entry<String, Integer> me : labels.entrySet() )\n    \t\t\t\t\t{\n    \t\t\t\t\t\tUtils.addSeparated( labelString, \" / \", me.getKey() );\n    \t\t\t\t\t\tUtils.addSeparated( hoursString, \" / \", String.valueOf( me.getValue() / 60 ) );\n    \t\t\t\t\t}\n    \t\t\t\t\t\n    \t\t\t\t\tif( labels.size() == 0 )\n    \t\t\t\t\t{\n    \t\t\t\t\t\tlabelString.append( SHORTCUT_FREE_DAY );\n    \t\t\t\t\t}\n    \t\t\t\t\t\n    \t\t\t\t\tvalueForDownCell = hoursString.toString();\n    \t\t\t\t\t\n    \t\t\t\t\treturn labelString.toString();\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\t\t\t\t\t\n\t\t\t\t\t\treturn valueForDownCell;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t@Override\n\t\t\t\tpublic String getDefault( boolean upCell )\n\t\t\t\t{\n\t\t\t\t\treturn \"X\";\n\t\t\t\t}\t\t\t\n\t\t\t});\n\t\t\t\n\t\t\tHSSFRow rowNext = sheet.getRow( USER_ROW_FROM + offset + 2 );\n\t\t\t\n\t\t\t// \u0440\u0430\u0431., \u043a\u043e\u043c\u0430\u043d\u0434., \u043d\u043e\u0447\u043d., \u043f\u0440\u0430\u0437\u0434.\n\t\t\tfor( int k = 0; k < 4; k++ )\n\t\t\t{\n\t\t\t\tif( workedForPeriod[k][0] > 0 )\n\t\t\t\t{\n\t\t\t\t\trow.getCell( 19 + k ).setCellValue( workedForPeriod[k][0] );\n\t\t\t\t\trowNext.getCell( 19 + k ).setCellValue( workedForPeriod[k][1] / 60 );\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tint userWorkHours = userWorkMinutes.get();\n\t\t\t\n\t\t\t// \u0441\u0432\u0435\u0440\u0445\u0443\u0440\u043e\u0447\u043a\u0430\n\t\t\tif( userWorkHours > workHoursSum )\n\t\t\t{\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tint pos = 0;\n\t\t\tfor( Map.Entry<String, Integer> me : neyavkMap.entrySet() )\n\t\t\t{\n\t\t\t\trow = sheet.getRow( USER_ROW_FROM + offset + pos++ );\n\t\t\t\trow.getCell( 24 ).setCellValue( me.getKey() );\n\t\t\t\trow.getCell( 25 ).setCellValue( me.getValue() );\n\t\t\t}\n\t\t\t\n\t\t\t/*if( i > 4 )\n\t\t\t{\n\t\t\t\tbreak;\n\t\t\t}*/\n\t\t}\n\t\t\n\t\t// \"/home/shamil/tmp/new.xls\"\n\t\tFileOutputStream out = new FileOutputStream( System.getProperty( \"result\" ) );\n\t\tworkbook.write( out );\n\t\tout.close();\n\t\t\n\t\tSystem.out.println( \"Excel written successfully..\" );\n\t}", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/srcx/test/ru/bgcrm/test/exp/Test_POIGenerate.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 63674, "method_name": "getRangesForCopy", "class_name": "Test_POIGenerate", "params": ["HSSFSheet"], "throws": null, "modifiers": ["public", "static"], "return_type": "List<CellRangeAddress>", "snippet": "\tpublic static List<CellRangeAddress> getRangesForCopy( HSSFSheet sheet )\n\t{\n\t\tList<CellRangeAddress> rangesForCopy = new ArrayList<CellRangeAddress>();\t\t\n\t\tfor (int i = 0; i < sheet.getNumMergedRegions(); i++) \n\t\t{\n\t\t\tCellRangeAddress range = sheet.getMergedRegion( i );\n\t\t\tif( USER_ROW_FROM <= range.getFirstRow() && range.getFirstRow() < USER_ROW_FROM + USER_ROWS && \n\t\t\t\tUSER_COL_FROM <= range.getFirstColumn() && range.getLastColumn() < USER_COL_FROM + USER_COLS )\n\t\t\t{\n\t\t\t\trangesForCopy.add( range );\n\t\t\t}\n\t\t}\n\t\treturn rangesForCopy;\n\t}", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/srcx/test/ru/bgcrm/test/exp/Test_POIGenerate.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 63675, "method_name": "addDates", "class_name": "Test_POIGenerate", "params": ["Calendar", "Calendar", "HSSFSheet"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "\tpublic static void addDates( Calendar dateFrom, Calendar dateTo, HSSFSheet sheet )\n\t{\n\t\tHSSFRow row = sheet.getRow( 14 );\n\t\trow.getCell( 15 ).setCellValue( TimeUtils.format( dateTo.getTime(), TimeUtils.FORMAT_TYPE_YMD ) );\n\t\trow.getCell( 19 ).setCellValue( TimeUtils.format( dateFrom.getTime(), TimeUtils.FORMAT_TYPE_YMD ) );\n\t\trow.getCell( 21 ).setCellValue( TimeUtils.format( dateTo.getTime(), TimeUtils.FORMAT_TYPE_YMD ) );\n\t}", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/srcx/test/ru/bgcrm/test/exp/Test_POIGenerate.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 63676, "method_name": "addDays", "class_name": "Test_POIGenerate", "params": ["HSSFSheet", "int", "int", "GetForDay"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "\tpublic static void addDays( HSSFSheet sheet, final int days, int rowNum, GetForDay adder )\n\t{\n\t\t// \u0447\u0438\u0441\u043b\u0430\n\t\tfinal int daysInFirstRow = days / 2;\n\t\t\n\t\tint d = 1;\n\t\t\n\t\tHSSFRow row1 = sheet.getRow( rowNum );\n\t\tHSSFRow row2 = sheet.getRow( rowNum + 1 );\n\t\tfor( int c = 1; c <= 16; c++ )\n\t\t{\n\t\t\tfinal int cellnum = 2 + c;\n\t\t\t\n\t\t\trow1.getCell( cellnum ).setCellValue( c <= daysInFirstRow ? String.valueOf( adder.add( d, true ) ) : adder.getDefault( true ) );\n\t\t\trow2.getCell( cellnum ).setCellValue( c <= daysInFirstRow ? String.valueOf( adder.add( d, false ) ) : adder.getDefault( false ) );\n\t\t\t\n\t\t\tif( c <= daysInFirstRow )\n\t\t\t{\n\t\t\t\td++;\n\t\t\t}\n\t\t}\n\t\t\n\t\trow1 = sheet.getRow( rowNum + 2 );\n\t\trow2 = sheet.getRow( rowNum + 3 );\n\t\tfor( ; d <= 31; d++ )\n\t\t{\n\t\t\tfinal int cellnum = 2 + d - 15;\n\t\t\trow1.getCell( cellnum ).setCellValue( d <= days ? String.valueOf( adder.add( d, true ) ) : adder.getDefault( true ) );\n\t\t\trow2.getCell( cellnum ).setCellValue( d <= days ? String.valueOf( adder.add( d, false ) ) : adder.getDefault( false ) );\n\t\t}\n\t}", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/srcx/test/ru/bgcrm/test/exp/Test_POIGenerate.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 63677, "method_name": "createUserRows", "class_name": "Test_POIGenerate", "params": ["HSSFSheet", "int", "List<CellRangeAddress>"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "\tpublic static void createUserRows( HSSFSheet sheet, int toRow, List<CellRangeAddress> rangesForCopy )\n\t{\n\t\tfor( int rowInd = 0; rowInd < USER_ROWS; rowInd++ )\n\t\t{\n\t\t\tHSSFRow rowFrom = sheet.getRow( USER_ROW_FROM + rowInd );\n\t\t\tHSSFRow row = sheet.createRow( toRow + rowInd );\n\t\t\t\n\t\t\tfor( int colInd = USER_COL_FROM; colInd < USER_COLS; colInd++ )\n\t\t\t{\n\t\t\t\tCell cellFrom = rowFrom.getCell( colInd );\n\t\t\t\t\n\t\t\t\tCell cell = row.createCell( colInd );\n\t\t\t\tcell.setCellStyle( cellFrom.getCellStyle() );\n\t\t\t\tcell.setCellValue( \"\" );\n\t\t\t}\n\t\t}\n\t\t\n\t\tint rowDelta = toRow - USER_ROW_FROM;\n\t\tfor( CellRangeAddress address : rangesForCopy )\n\t\t{\n\t\t\tsheet.addMergedRegion( new CellRangeAddress( address.getFirstRow() + rowDelta, address.getLastRow() + rowDelta, \n\t\t\t                                             address.getFirstColumn(), address.getLastColumn() ) );\n\t\t}\n\t}", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/srcx/test/ru/bgcrm/test/exp/Test_POIGenerate.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 63678, "method_name": "newBuilder", "class_name": "HashRing", "params": [], "throws": null, "modifiers": ["public", "static"], "return_type": "HashRingBuilder<T>", "snippet": "    public static <T extends Node> HashRingBuilder<T> newBuilder() {\n        return new HashRingBuilder<>();\n    }", "url": "https://raw.githubusercontent.com/ishugaliy/allgood-consistent-hash/master/src/main/java/org/ishugaliy/allgood/consistent/hash/HashRing.java", "stars": "9", "class_props": {"extends": null, "implements": ["ConsistentHash"], "modifiers": ["final", "public"]}}, {"id": 63679, "method_name": "add", "class_name": "HashRing", "params": ["T"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean add(T node) {\n        mutex.writeLock().lock();\n        try {\n            return addNode(node);\n        } finally {\n            mutex.writeLock().unlock();\n        }\n    }", "url": "https://raw.githubusercontent.com/ishugaliy/allgood-consistent-hash/master/src/main/java/org/ishugaliy/allgood/consistent/hash/HashRing.java", "stars": "9", "class_props": {"extends": null, "implements": ["ConsistentHash"], "modifiers": ["final", "public"]}}, {"id": 63680, "method_name": "addAll", "class_name": "HashRing", "params": ["Collection<T>"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean addAll(Collection<T> nodes) {\n        mutex.writeLock().lock();\n        try {\n            if (nodes == null) {\n                nodes = emptyList();\n            }\n            nodes = nodes.stream()\n                    .filter(this::addNode)\n                    .collect(Collectors.toList());\n            return !nodes.isEmpty();\n        } finally {\n            mutex.writeLock().unlock();\n        }\n    }", "url": "https://raw.githubusercontent.com/ishugaliy/allgood-consistent-hash/master/src/main/java/org/ishugaliy/allgood/consistent/hash/HashRing.java", "stars": "9", "class_props": {"extends": null, "implements": ["ConsistentHash"], "modifiers": ["final", "public"]}}, {"id": 63681, "method_name": "contains", "class_name": "HashRing", "params": ["T"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean contains(T node) {\n        mutex.readLock().lock();\n        try {\n            return nodes.containsKey(node);\n        } finally {\n            mutex.readLock().unlock();\n        }\n    }", "url": "https://raw.githubusercontent.com/ishugaliy/allgood-consistent-hash/master/src/main/java/org/ishugaliy/allgood/consistent/hash/HashRing.java", "stars": "9", "class_props": {"extends": null, "implements": ["ConsistentHash"], "modifiers": ["final", "public"]}}, {"id": 63682, "method_name": "remove", "class_name": "HashRing", "params": ["T"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean remove(T node) {\n        mutex.writeLock().lock();\n        boolean removed = false;\n        try {\n            if (nodes.containsKey(node)) {\n                Set<Partition<T>> partitions = nodes.remove(node);\n                partitions.forEach(p -> ring.remove(p.getSlot()));\n                removed = true;\n                LOG.info(\"Ring [{}]: node [{}] removed\", name, node);\n            }\n        } finally {\n            mutex.writeLock().unlock();\n        }\n        return removed;\n    }", "url": "https://raw.githubusercontent.com/ishugaliy/allgood-consistent-hash/master/src/main/java/org/ishugaliy/allgood/consistent/hash/HashRing.java", "stars": "9", "class_props": {"extends": null, "implements": ["ConsistentHash"], "modifiers": ["final", "public"]}}, {"id": 63683, "method_name": "getNodes", "class_name": "HashRing", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Set<T>", "snippet": "    public Set<T> getNodes() {\n        mutex.readLock().lock();\n        try {\n            return new HashSet<>(nodes.keySet());\n        } finally {\n            mutex.readLock().unlock();\n        }\n    }", "url": "https://raw.githubusercontent.com/ishugaliy/allgood-consistent-hash/master/src/main/java/org/ishugaliy/allgood/consistent/hash/HashRing.java", "stars": "9", "class_props": {"extends": null, "implements": ["ConsistentHash"], "modifiers": ["final", "public"]}}, {"id": 63684, "method_name": "locate", "class_name": "HashRing", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "Optional<T>", "snippet": "    public Optional<T> locate(String key) {\n        mutex.readLock().lock();\n        Optional<T> node;\n        try {\n            node = findNode(key);\n        } finally {\n            mutex.readLock().unlock();\n        }\n        return node;\n    }", "url": "https://raw.githubusercontent.com/ishugaliy/allgood-consistent-hash/master/src/main/java/org/ishugaliy/allgood/consistent/hash/HashRing.java", "stars": "9", "class_props": {"extends": null, "implements": ["ConsistentHash"], "modifiers": ["final", "public"]}}, {"id": 63685, "method_name": "locate", "class_name": "HashRing", "params": ["String", "int"], "throws": null, "modifiers": ["public"], "return_type": "Set<T>", "snippet": "    public Set<T> locate(String key, int count) {\n        mutex.readLock().lock();\n        Set<T> nodes;\n        try {\n            nodes = findNodes(key, count);\n        } finally {\n            mutex.readLock().unlock();\n        }\n        return nodes;\n    }", "url": "https://raw.githubusercontent.com/ishugaliy/allgood-consistent-hash/master/src/main/java/org/ishugaliy/allgood/consistent/hash/HashRing.java", "stars": "9", "class_props": {"extends": null, "implements": ["ConsistentHash"], "modifiers": ["final", "public"]}}, {"id": 63686, "method_name": "getName", "class_name": "HashRing", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getName() {\n        return name;\n    }", "url": "https://raw.githubusercontent.com/ishugaliy/allgood-consistent-hash/master/src/main/java/org/ishugaliy/allgood/consistent/hash/HashRing.java", "stars": "9", "class_props": {"extends": null, "implements": ["ConsistentHash"], "modifiers": ["final", "public"]}}, {"id": 63687, "method_name": "size", "class_name": "HashRing", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int size() {\n        mutex.readLock().lock();\n        try {\n            return nodes.size();\n        } finally {\n            mutex.readLock().unlock();\n        }\n    }", "url": "https://raw.githubusercontent.com/ishugaliy/allgood-consistent-hash/master/src/main/java/org/ishugaliy/allgood/consistent/hash/HashRing.java", "stars": "9", "class_props": {"extends": null, "implements": ["ConsistentHash"], "modifiers": ["final", "public"]}}, {"id": 63688, "method_name": "getHasher", "class_name": "HashRing", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Hasher", "snippet": "    public Hasher getHasher() {\n        return hasher;\n    }", "url": "https://raw.githubusercontent.com/ishugaliy/allgood-consistent-hash/master/src/main/java/org/ishugaliy/allgood/consistent/hash/HashRing.java", "stars": "9", "class_props": {"extends": null, "implements": ["ConsistentHash"], "modifiers": ["final", "public"]}}, {"id": 63689, "method_name": "getPartitionRate", "class_name": "HashRing", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getPartitionRate() {\n        return partitionRate;\n    }", "url": "https://raw.githubusercontent.com/ishugaliy/allgood-consistent-hash/master/src/main/java/org/ishugaliy/allgood/consistent/hash/HashRing.java", "stars": "9", "class_props": {"extends": null, "implements": ["ConsistentHash"], "modifiers": ["final", "public"]}}, {"id": 63690, "method_name": "addNode", "class_name": "HashRing", "params": ["T"], "throws": null, "modifiers": ["private"], "return_type": "boolean", "snippet": "    private boolean addNode(T node) {\n        boolean added = false;\n        if (node != null && !nodes.containsKey(node)) {\n            Set<Partition<T>> partitions = createPartitions(node);\n            distributePartitions(partitions);\n            nodes.put(node, partitions);\n            LOG.info(\"Ring [{}]: node [{}] added\", name, node);\n            added = true;\n        }\n        return added;\n    }", "url": "https://raw.githubusercontent.com/ishugaliy/allgood-consistent-hash/master/src/main/java/org/ishugaliy/allgood/consistent/hash/HashRing.java", "stars": "9", "class_props": {"extends": null, "implements": ["ConsistentHash"], "modifiers": ["final", "public"]}}, {"id": 63691, "method_name": "createPartitions", "class_name": "HashRing", "params": ["T"], "throws": null, "modifiers": ["private"], "return_type": "Set<Partition>", "snippet": "    private Set<Partition<T>> createPartitions(T node) {\n        Set<Partition<T>> partitions = IntStream.range(0, partitionRate)\n                .mapToObj(idx -> new ReplicationPartition<>(idx, node))\n                .collect(Collectors.toSet());\n        LOG.debug(\"Ring [{}]: node [{}] partitions created\", name, node);\n        return partitions;\n    }", "url": "https://raw.githubusercontent.com/ishugaliy/allgood-consistent-hash/master/src/main/java/org/ishugaliy/allgood/consistent/hash/HashRing.java", "stars": "9", "class_props": {"extends": null, "implements": ["ConsistentHash"], "modifiers": ["final", "public"]}}, {"id": 63692, "method_name": "distributePartitions", "class_name": "HashRing", "params": ["Set<Partition>"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void distributePartitions(Set<Partition<T>> partitions) {\n        for (Partition<T> part : partitions) {\n            String pk = part.getPartitionKey();\n            long slot = findSlot(pk);\n            part.setSlot(slot);\n            ring.put(slot, part);\n            LOG.debug(\"Ring [{}]: node [{}] partitions distributed\", name, part.getNode());\n        }\n    }", "url": "https://raw.githubusercontent.com/ishugaliy/allgood-consistent-hash/master/src/main/java/org/ishugaliy/allgood/consistent/hash/HashRing.java", "stars": "9", "class_props": {"extends": null, "implements": ["ConsistentHash"], "modifiers": ["final", "public"]}}, {"id": 63693, "method_name": "findSlot", "class_name": "HashRing", "params": ["String"], "throws": null, "modifiers": ["private"], "return_type": "long", "snippet": "    private long findSlot(String pk) {\n        long slot;\n        int seed = 0;\n        do {\n            slot = hash(pk, seed++);\n        } while (ring.containsKey(slot));\n\n        return slot;\n    }", "url": "https://raw.githubusercontent.com/ishugaliy/allgood-consistent-hash/master/src/main/java/org/ishugaliy/allgood/consistent/hash/HashRing.java", "stars": "9", "class_props": {"extends": null, "implements": ["ConsistentHash"], "modifiers": ["final", "public"]}}, {"id": 63694, "method_name": "hash", "class_name": "HashRing", "params": ["String"], "throws": null, "modifiers": ["private"], "return_type": "long", "snippet": "    private long hash(String key) {\n        return hash(key, 0);\n    }", "url": "https://raw.githubusercontent.com/ishugaliy/allgood-consistent-hash/master/src/main/java/org/ishugaliy/allgood/consistent/hash/HashRing.java", "stars": "9", "class_props": {"extends": null, "implements": ["ConsistentHash"], "modifiers": ["final", "public"]}}, {"id": 63695, "method_name": "hash", "class_name": "HashRing", "params": ["String", "int"], "throws": null, "modifiers": ["private"], "return_type": "long", "snippet": "    private long hash(String key, int seed) {\n        return Math.abs(hasher.hash(key, seed));\n    }", "url": "https://raw.githubusercontent.com/ishugaliy/allgood-consistent-hash/master/src/main/java/org/ishugaliy/allgood/consistent/hash/HashRing.java", "stars": "9", "class_props": {"extends": null, "implements": ["ConsistentHash"], "modifiers": ["final", "public"]}}, {"id": 63696, "method_name": "findNode", "class_name": "HashRing", "params": ["String"], "throws": null, "modifiers": ["private"], "return_type": "Optional<T>", "snippet": "    private Optional<T> findNode(String key) {\n        return findNodes(key, 1).stream().findAny();\n    }", "url": "https://raw.githubusercontent.com/ishugaliy/allgood-consistent-hash/master/src/main/java/org/ishugaliy/allgood/consistent/hash/HashRing.java", "stars": "9", "class_props": {"extends": null, "implements": ["ConsistentHash"], "modifiers": ["final", "public"]}}, {"id": 63697, "method_name": "findNodes", "class_name": "HashRing", "params": ["String", "int"], "throws": null, "modifiers": ["private"], "return_type": "Set<T>", "snippet": "    private Set<T> findNodes(String key, int count) {\n        Set<T> res = new HashSet<>();\n        if (key != null && count > 0) {\n            if (count < nodes.size()) {\n                long slot = hash(key);\n                Iterator<Partition<T>> it = new ClockwiseIterator(slot);\n                while (it.hasNext() && res.size() < count) {\n                    Partition<T> part = it.next();\n                    res.add(part.getNode());\n                }\n            } else {\n                res.addAll(nodes.keySet());\n            }\n        }\n        LOG.debug(\"Ring [{}]: key [{}] located nodes [{}]\", name, key, res);\n        return res;\n    }", "url": "https://raw.githubusercontent.com/ishugaliy/allgood-consistent-hash/master/src/main/java/org/ishugaliy/allgood/consistent/hash/HashRing.java", "stars": "9", "class_props": {"extends": null, "implements": ["ConsistentHash"], "modifiers": ["final", "public"]}}, {"id": 63698, "method_name": "toString", "class_name": "HashRing", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String toString() {\n        return new StringJoiner(\", \", HashRing.class.getSimpleName() + \"[\", \"]\")\n                .add(\"nodes= \" + nodes.size())\n                .add(\"name= '\" + name + \"'\")\n                .add(\"hasher= \" + hasher)\n                .add(\"partitionRate= \" + partitionRate)\n                .toString();\n    }", "url": "https://raw.githubusercontent.com/ishugaliy/allgood-consistent-hash/master/src/main/java/org/ishugaliy/allgood/consistent/hash/HashRing.java", "stars": "9", "class_props": {"extends": null, "implements": ["ConsistentHash"], "modifiers": ["final", "public"]}}, {"id": 63699, "method_name": "hasNext", "class_name": "ClockwiseIterator", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "        public boolean hasNext() {\n            return head.hasNext() || tail.hasNext();\n        }", "url": "https://raw.githubusercontent.com/ishugaliy/allgood-consistent-hash/master/src/main/java/org/ishugaliy/allgood/consistent/hash/HashRing.java", "stars": "9", "class_props": {"extends": null, "implements": ["Iterator"], "modifiers": ["private"]}}, {"id": 63700, "method_name": "next", "class_name": "ClockwiseIterator", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Partition<T>", "snippet": "        public Partition<T> next() {\n            return tail.hasNext() ? tail.next() : head.next();\n        }", "url": "https://raw.githubusercontent.com/ishugaliy/allgood-consistent-hash/master/src/main/java/org/ishugaliy/allgood/consistent/hash/HashRing.java", "stars": "9", "class_props": {"extends": null, "implements": ["Iterator"], "modifiers": ["private"]}}, {"id": 63701, "method_name": "fxPropertyToObject", "class_name": "TableDataHelper", "params": ["List<ObservableList>"], "throws": null, "modifiers": ["public", "static"], "return_type": "List<Object>", "snippet": "    public static List<Object[]> fxPropertyToObject(List<ObservableList<StringProperty>> list) {\n        return list.stream()\n                .map(TableDataHelper::fxPropertyToObject)\n                .collect(Collectors.toList());\n    }", "url": "https://raw.githubusercontent.com/GZYangKui/openjfx-database/master/app/src/main/java/com/openjfx/database/app/TableDataHelper.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 63702, "method_name": "getChangeValue", "class_name": "TableDataHelper", "params": ["List<TableDataChangeMode>", "List<TableColumnMeta>", "int", "ObservableList<ObservableList>"], "throws": null, "modifiers": ["public", "static"], "return_type": "List<Map>", "snippet": "    public static List<Map<String, Object[]>> getChangeValue(List<TableDataChangeMode> modes, List<TableColumnMeta> metas, int keyIndex, ObservableList<ObservableList<StringProperty>> data) {\n        List<Integer> rows = modes.stream().map(TableDataChangeMode::getRowIndex)\n                .distinct()\n                .sorted()\n                .collect(Collectors.toList());\n\n        List<Map<String, Object[]>> list = new ArrayList<>();\n\n        int index = 0;\n        for (Integer row : rows) {\n            //\u83b7\u53d6\u884c\u6570\u636e\n            ObservableList<StringProperty> item = data.get(row);\n\n            Object[] objects = fxPropertyToObject(item);\n\n            Map<String, Object[]> map = new HashMap<>();\n\n            List<TableDataChangeMode> models = modes.stream()\n                    .filter(m -> m.getRowIndex() == row)\n                    .collect(Collectors.toList());\n            //\u9ed8\u8ba4key\u503c\u6ca1\u6709\u53d1\u751f\u6539\u53d8\n            map.put(KEY, new Object[]{objects[keyIndex]});\n            //\u68c0\u6d4bkey\u503c\u662f\u5426\u53d1\u751f\u6539\u53d8\n            for (TableDataChangeMode model : models) {\n                int colIndex = model.getColumnIndex();\n                if (keyIndex == colIndex) {\n                    map.put(KEY, new Object[]{model.getOriginalData()});\n                    break;\n                }\n            }\n            map.put(ROW, objects);\n            list.add(map);\n        }\n        return list;\n    }", "url": "https://raw.githubusercontent.com/GZYangKui/openjfx-database/master/app/src/main/java/com/openjfx/database/app/TableDataHelper.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 63703, "method_name": "fxPropertyToObject", "class_name": "TableDataHelper", "params": ["ObservableList<StringProperty>"], "throws": null, "modifiers": ["public", "static"], "return_type": "Object", "snippet": "    public static Object[] fxPropertyToObject(ObservableList<StringProperty> items) {\n        Object[] obj = new Object[items.size()];\n        for (int i = 0; i < items.size(); i++) {\n            StringProperty object = items.get(i);\n            obj[i] = singleFxPropertyToObject(object);\n        }\n        return obj;\n    }", "url": "https://raw.githubusercontent.com/GZYangKui/openjfx-database/master/app/src/main/java/com/openjfx/database/app/TableDataHelper.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 63704, "method_name": "singleFxPropertyToObject", "class_name": "TableDataHelper", "params": ["StringProperty"], "throws": null, "modifiers": ["public", "static"], "return_type": "Object", "snippet": "    public static Object singleFxPropertyToObject(StringProperty item) {\n        Object object = item.getValue();\n        Object target = null;\n        if (!object.equals(NULL)) {\n            target = object;\n        }\n        return target;\n    }", "url": "https://raw.githubusercontent.com/GZYangKui/openjfx-database/master/app/src/main/java/com/openjfx/database/app/TableDataHelper.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 63705, "method_name": "init", "class_name": "EmpireColonyInfoPane", "params": ["Color"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void init(Color c0) {\n        setBackground(c0);\n\n        setOpaque(true);\n        JPanel popFactoriesPane = new JPanel();\n        popFactoriesPane.setOpaque(false);\n\n        GridLayout layout1 = new GridLayout(0,2);\n        layout1.setHgap(s1);\n        popFactoriesPane.setLayout(layout1);\n        popFactoriesPane.add(new EmpirePopPane());\n        popFactoriesPane.add(new EmpireFactoriesPane());\n\n        JPanel shieldBasesPane = new JPanel();\n        shieldBasesPane.setOpaque(false);\n\n        GridLayout layout2 = new GridLayout(0,2);\n        layout2.setHgap(s1);\n        shieldBasesPane.setLayout(layout2);\n        shieldBasesPane.add(new EmpireShieldPane());\n        shieldBasesPane.add(new EmpireBasesPane());\n\n        GridLayout layout0 = new GridLayout(3,0);\n        layout0.setVgap(s1);\n        setLayout(layout0);\n        add(popFactoriesPane);\n        add(shieldBasesPane);\n        add(new EmpireProductionPane());\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/main/EmpireColonyInfoPane.java", "stars": "74", "class_props": {"extends": "BasePanel", "implements": null, "modifiers": ["public"]}}, {"id": 63706, "method_name": "init", "class_name": "EmpireDataPane", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "        private void init() {\n            setOpaque(true);\n            setBackground(backC);\n        }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/main/EmpireColonyInfoPane.java", "stars": "74", "class_props": {"extends": "BasePanel", "implements": null, "modifiers": ["abstract"]}}, {"id": 63707, "method_name": "paintComponent", "class_name": "EmpireDataPane", "params": ["Graphics"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "        public void paintComponent(Graphics g0) {\n            Graphics2D g = (Graphics2D) g0;\n            StarSystem sys = parentUI.systemViewToDisplay();\n            if (sys == null)\n                return;\n            Colony c = sys.colony();\n            if (c == null)\n                return;\n            super.paintComponent(g);\n\n            String strTitle = titleString();\n            String strDataLabel = dataLabelString(c);\n            String strData1 = valueString(c);\n            String strData2 = value(c) == maxValue(c) ? \"\" : concat(\"/\", maxValueString(c));\n\n            int x0 = s5;\n            int y0 = getHeight()-s6;\n\n            g.setFont(narrowFont(16));\n            int sw0 = strDataLabel == null ? 0 : g.getFontMetrics().stringWidth(strDataLabel);\n            int sw1 = g.getFontMetrics().stringWidth(strData1)+s1;\n            int sw2 = g.getFontMetrics().stringWidth(strData2);\n            int x2 = getWidth()-rightMargin()-sw2;\n            int x1 = x2-sw1;\n            if (sw0 > 0)\n                x1 = getWidth()-rightMargin()-sw0;\n\n            // calc max width for label and try to get largest font (from 13-16) in it\n            int titleMaxW = x1-x0-s2;\n            int fontSize = 16;\n            g.setFont(narrowFont(fontSize));\n            while ((g.getFontMetrics().stringWidth(strTitle) > titleMaxW) && (fontSize > 12)) {\n                fontSize--;\n                g.setFont(narrowFont(fontSize));\n            }\n            g.setColor(textColor);\n            g.drawString(strTitle, x0, y0);\n\n            if (strDataLabel != null) {\n                drawShadowedString(g, strDataLabel, 1, x1, y0, darkC, textC);\n            }\n            else {\n                drawShadowedString(g, strData1, 1, x1, y0, darkC, textC);\n                g.setColor(darkC);\n                g.drawString(strData2, x2, y0);\n                basesBox.setBounds(x1-s3,y0-s12,(x2-x1)+sw2+s6,s15);\n                if (hoverBox == basesBox) {\n                    Stroke prevStroke = g.getStroke();\n                    g.setStroke(stroke2);\n                    g.setColor(SystemPanel.yellowText);\n                    g.drawRect(x1-s3,y0-s12,(x2-x1)+sw2+s4,s15);\n                    g.setStroke(prevStroke);\n                }\n            }\n        }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/main/EmpireColonyInfoPane.java", "stars": "74", "class_props": {"extends": "BasePanel", "implements": null, "modifiers": ["abstract"]}}, {"id": 63708, "method_name": "rightMargin", "class_name": "EmpireDataPane", "params": [], "throws": null, "modifiers": ["protected"], "return_type": "int", "snippet": "        protected int rightMargin()   { return s5; }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/main/EmpireColonyInfoPane.java", "stars": "74", "class_props": {"extends": "BasePanel", "implements": null, "modifiers": ["abstract"]}}, {"id": 63709, "method_name": "valueString", "class_name": "EmpireDataPane", "params": ["Colony"], "throws": null, "modifiers": ["protected"], "return_type": "String", "snippet": "        protected String valueString(Colony c)  { return str(value(c)); }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/main/EmpireColonyInfoPane.java", "stars": "74", "class_props": {"extends": "BasePanel", "implements": null, "modifiers": ["abstract"]}}, {"id": 63710, "method_name": "maxValueString", "class_name": "EmpireDataPane", "params": ["Colony"], "throws": null, "modifiers": ["protected"], "return_type": "String", "snippet": "        protected String maxValueString(Colony c) { return str(maxValue(c)); }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/main/EmpireColonyInfoPane.java", "stars": "74", "class_props": {"extends": "BasePanel", "implements": null, "modifiers": ["abstract"]}}, {"id": 63711, "method_name": "dataLabelString", "class_name": "EmpireDataPane", "params": ["Colony"], "throws": null, "modifiers": ["protected"], "return_type": "String", "snippet": "        protected String dataLabelString(Colony c)   { return null; }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/main/EmpireColonyInfoPane.java", "stars": "74", "class_props": {"extends": "BasePanel", "implements": null, "modifiers": ["abstract"]}}, {"id": 63712, "method_name": "titleString", "class_name": "EmpireDataPane", "params": [], "throws": null, "modifiers": ["protected", "abstract"], "return_type": "String", "snippet": "        abstract protected String titleString();\n        abstract int value(Colony c);\n        abstract int maxValue(Colony c);\n    }\n    class EmpirePopPane extends EmpireDataPane {", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/main/EmpireColonyInfoPane.java", "stars": "74", "class_props": {"extends": "BasePanel", "implements": null, "modifiers": ["abstract"]}}, {"id": 63713, "method_name": "value", "class_name": "EmpireDataPane", "params": ["Colony"], "throws": null, "modifiers": ["abstract"], "return_type": "int", "snippet": "        abstract int value(Colony c);\n        abstract int maxValue(Colony c);\n    }\n    class EmpirePopPane extends EmpireDataPane {", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/main/EmpireColonyInfoPane.java", "stars": "74", "class_props": {"extends": "BasePanel", "implements": null, "modifiers": ["abstract"]}}, {"id": 63714, "method_name": "maxValue", "class_name": "EmpireDataPane", "params": ["Colony"], "throws": null, "modifiers": ["abstract"], "return_type": "int", "snippet": "        abstract int maxValue(Colony c);\n    }\n    class EmpirePopPane extends EmpireDataPane {", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/main/EmpireColonyInfoPane.java", "stars": "74", "class_props": {"extends": "BasePanel", "implements": null, "modifiers": ["abstract"]}}, {"id": 63715, "method_name": "textureName", "class_name": "EmpirePopPane", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "        public String textureName()            { return parentUI.subPanelTextureName(); }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/main/EmpireColonyInfoPane.java", "stars": "74", "class_props": {"extends": "EmpireDataPane", "implements": null, "modifiers": []}}, {"id": 63716, "method_name": "titleString", "class_name": "EmpirePopPane", "params": [], "throws": null, "modifiers": ["protected"], "return_type": "String", "snippet": "        protected String titleString()      { return text(\"MAIN_COLONY_POPULATION\"); }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/main/EmpireColonyInfoPane.java", "stars": "74", "class_props": {"extends": "EmpireDataPane", "implements": null, "modifiers": []}}, {"id": 63717, "method_name": "value", "class_name": "EmpirePopPane", "params": ["Colony"], "throws": null, "modifiers": ["protected"], "return_type": "int", "snippet": "        protected int value(Colony c)       { return (int) (c == null ? 0 : c.displayPopulation()); }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/main/EmpireColonyInfoPane.java", "stars": "74", "class_props": {"extends": "EmpireDataPane", "implements": null, "modifiers": []}}, {"id": 63718, "method_name": "maxValue", "class_name": "EmpirePopPane", "params": ["Colony"], "throws": null, "modifiers": ["protected"], "return_type": "int", "snippet": "        protected int maxValue(Colony c)    { return (int) (c == null ? 0 : c.maxSize()); }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/main/EmpireColonyInfoPane.java", "stars": "74", "class_props": {"extends": "EmpireDataPane", "implements": null, "modifiers": []}}, {"id": 63719, "method_name": "textureName", "class_name": "EmpireFactoriesPane", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "        public String textureName()            { return parentUI.subPanelTextureName(); }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/main/EmpireColonyInfoPane.java", "stars": "74", "class_props": {"extends": "EmpireDataPane", "implements": null, "modifiers": []}}, {"id": 63720, "method_name": "titleString", "class_name": "EmpireFactoriesPane", "params": [], "throws": null, "modifiers": ["protected"], "return_type": "String", "snippet": "        protected String titleString()   { return text(\"MAIN_COLONY_FACTORIES\"); }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/main/EmpireColonyInfoPane.java", "stars": "74", "class_props": {"extends": "EmpireDataPane", "implements": null, "modifiers": []}}, {"id": 63721, "method_name": "value", "class_name": "EmpireFactoriesPane", "params": ["Colony"], "throws": null, "modifiers": ["protected"], "return_type": "int", "snippet": "        protected int value(Colony c)    { return (int) (c == null ? 0 : c.industry().factories()); }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/main/EmpireColonyInfoPane.java", "stars": "74", "class_props": {"extends": "EmpireDataPane", "implements": null, "modifiers": []}}, {"id": 63722, "method_name": "maxValue", "class_name": "EmpireFactoriesPane", "params": ["Colony"], "throws": null, "modifiers": ["protected"], "return_type": "int", "snippet": "        protected int maxValue(Colony c) { return (int) (c == null ? 0 : c.industry().maxFactories()); }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/main/EmpireColonyInfoPane.java", "stars": "74", "class_props": {"extends": "EmpireDataPane", "implements": null, "modifiers": []}}, {"id": 63723, "method_name": "textureName", "class_name": "EmpireShieldPane", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "        public String textureName()            { return parentUI.subPanelTextureName(); }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/main/EmpireColonyInfoPane.java", "stars": "74", "class_props": {"extends": "EmpireDataPane", "implements": null, "modifiers": []}}, {"id": 63724, "method_name": "titleString", "class_name": "EmpireShieldPane", "params": [], "throws": null, "modifiers": ["protected"], "return_type": "String", "snippet": "        protected String titleString()   { return text(\"MAIN_COLONY_SHIELD\"); }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/main/EmpireColonyInfoPane.java", "stars": "74", "class_props": {"extends": "EmpireDataPane", "implements": null, "modifiers": []}}, {"id": 63725, "method_name": "value", "class_name": "EmpireShieldPane", "params": ["Colony"], "throws": null, "modifiers": ["protected"], "return_type": "int", "snippet": "        protected int value(Colony c)    { return c == null ? 0 : c.defense().shieldLevel(); }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/main/EmpireColonyInfoPane.java", "stars": "74", "class_props": {"extends": "EmpireDataPane", "implements": null, "modifiers": []}}, {"id": 63726, "method_name": "maxValue", "class_name": "EmpireShieldPane", "params": ["Colony"], "throws": null, "modifiers": ["protected"], "return_type": "int", "snippet": "        protected int maxValue(Colony c) { return (int) (c == null ? 0 : c.defense().maxShieldLevel()); }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/main/EmpireColonyInfoPane.java", "stars": "74", "class_props": {"extends": "EmpireDataPane", "implements": null, "modifiers": []}}, {"id": 63727, "method_name": "dataLabelString", "class_name": "EmpireShieldPane", "params": ["Colony"], "throws": null, "modifiers": ["protected"], "return_type": "String", "snippet": "        protected String dataLabelString(Colony c)   { return (c != null) && c.starSystem().inNebula() ? text(\"MAIN_COLONY_NO_SHIELD\") : null; }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/main/EmpireColonyInfoPane.java", "stars": "74", "class_props": {"extends": "EmpireDataPane", "implements": null, "modifiers": []}}, {"id": 63728, "method_name": "init", "class_name": "EmpireBasesPane", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "        private void init() {\n            addMouseListener(this);\n            addMouseMotionListener(this);\n            addMouseWheelListener(this);\n        }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/main/EmpireColonyInfoPane.java", "stars": "74", "class_props": {"extends": "EmpireDataPane", "implements": ["MouseListener", "MouseMotionListener", "MouseWheelListener"], "modifiers": []}}, {"id": 63729, "method_name": "incrementBases", "class_name": "EmpireBasesPane", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "        private void incrementBases() {\n            StarSystem sys = parentUI.systemViewToDisplay();\n            if (sys == null)\n                return;\n            Colony colony = sys.colony();\n            if  (colony == null)\n                return;\n            boolean updated = colony.defense().incrementMaxBases();\n            if (updated)\n                softClick();\n            else\n                misClick();\n            repaint();\n        }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/main/EmpireColonyInfoPane.java", "stars": "74", "class_props": {"extends": "EmpireDataPane", "implements": ["MouseListener", "MouseMotionListener", "MouseWheelListener"], "modifiers": []}}, {"id": 63730, "method_name": "decrementBases", "class_name": "EmpireBasesPane", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "        private void decrementBases() {\n            StarSystem sys = parentUI.systemViewToDisplay();\n            if (sys == null)\n                return;\n            Colony colony = sys.colony();\n            if  (colony == null)\n                return;\n            boolean updated = colony.defense().decrementMaxBases();\n            if (updated)\n                softClick();\n            else\n                misClick();\n            repaint();\n        }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/main/EmpireColonyInfoPane.java", "stars": "74", "class_props": {"extends": "EmpireDataPane", "implements": ["MouseListener", "MouseMotionListener", "MouseWheelListener"], "modifiers": []}}, {"id": 63731, "method_name": "textureName", "class_name": "EmpireBasesPane", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "        public String textureName()      { return parentUI.subPanelTextureName(); }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/main/EmpireColonyInfoPane.java", "stars": "74", "class_props": {"extends": "EmpireDataPane", "implements": ["MouseListener", "MouseMotionListener", "MouseWheelListener"], "modifiers": []}}, {"id": 63732, "method_name": "rightMargin", "class_name": "EmpireBasesPane", "params": [], "throws": null, "modifiers": ["protected"], "return_type": "int", "snippet": "        protected int rightMargin()      { return s20; }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/main/EmpireColonyInfoPane.java", "stars": "74", "class_props": {"extends": "EmpireDataPane", "implements": ["MouseListener", "MouseMotionListener", "MouseWheelListener"], "modifiers": []}}, {"id": 63733, "method_name": "titleString", "class_name": "EmpireBasesPane", "params": [], "throws": null, "modifiers": ["protected"], "return_type": "String", "snippet": "        protected String titleString()   { return text(\"MAIN_COLONY_BASES\"); }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/main/EmpireColonyInfoPane.java", "stars": "74", "class_props": {"extends": "EmpireDataPane", "implements": ["MouseListener", "MouseMotionListener", "MouseWheelListener"], "modifiers": []}}, {"id": 63734, "method_name": "value", "class_name": "EmpireBasesPane", "params": ["Colony"], "throws": null, "modifiers": ["protected"], "return_type": "int", "snippet": "        protected int value(Colony c)    { return c == null ? 0 : (int)c.defense().bases(); }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/main/EmpireColonyInfoPane.java", "stars": "74", "class_props": {"extends": "EmpireDataPane", "implements": ["MouseListener", "MouseMotionListener", "MouseWheelListener"], "modifiers": []}}, {"id": 63735, "method_name": "maxValue", "class_name": "EmpireBasesPane", "params": ["Colony"], "throws": null, "modifiers": ["protected"], "return_type": "int", "snippet": "        protected int maxValue(Colony c) { return c == null ? 0 : c.defense().maxBases(); }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/main/EmpireColonyInfoPane.java", "stars": "74", "class_props": {"extends": "EmpireDataPane", "implements": ["MouseListener", "MouseMotionListener", "MouseWheelListener"], "modifiers": []}}, {"id": 63736, "method_name": "paintComponent", "class_name": "EmpireBasesPane", "params": ["Graphics"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "        public void paintComponent(Graphics g0) {\n            Graphics2D g = (Graphics2D) g0;\n            super.paintComponent(g);\n\n            StarSystem sys = parentUI.systemViewToDisplay();\n            if (sys == null)\n                return;\n            Colony colony = sys.colony();\n            if  (colony == null)\n                return;\n\n            int w = getWidth();\n            int h = getHeight();\n\n            upButtonX[0] = w-s11; upButtonX[1] = w-s17; upButtonX[2] = w-s5;\n            upButtonY[0] = s3; upButtonY[1] = s11; upButtonY[2] = s11;\n\n            downButtonX[0] = w-s11; downButtonX[1] = w-s17; downButtonX[2] = w-s5;\n            downButtonY[0] = h-s3; downButtonY[1] = h-s11; downButtonY[2] = h-s11;\n\n            g.setColor(enabledArrowColor);\n            g.fillPolygon(upButtonX, upButtonY, 3);\n\n            if (colony.defense().maxBases() == 0)\n                g.setColor(disabledArrowColor);\n            else\n                g.setColor(enabledArrowColor);\n            g.fillPolygon(downButtonX, downButtonY, 3);\n\n            upArrow.reset();\n            downArrow.reset();\n            for (int i=0;i<upButtonX.length;i++) {\n                upArrow.addPoint(upButtonX[i], upButtonY[i]);\n                downArrow.addPoint(downButtonX[i], downButtonY[i]);\n            }\n            Stroke prevStroke = g.getStroke();\n            g.setStroke(stroke2);\n            if (hoverBox == upArrow) {\n                g.setColor(SystemPanel.yellowText);\n                g.drawPolygon(upArrow);\n            }\n            else if ((hoverBox == downArrow)\n                && (colony.defense().maxBases() > 0)) {\n                g.setColor(SystemPanel.yellowText);\n                g.drawPolygon(downArrow);\n            }\n            g.setStroke(prevStroke);\n        }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/main/EmpireColonyInfoPane.java", "stars": "74", "class_props": {"extends": "EmpireDataPane", "implements": ["MouseListener", "MouseMotionListener", "MouseWheelListener"], "modifiers": []}}, {"id": 63737, "method_name": "mouseClicked", "class_name": "EmpireBasesPane", "params": ["MouseEvent"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "        public void mouseClicked(MouseEvent arg0) {}", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/main/EmpireColonyInfoPane.java", "stars": "74", "class_props": {"extends": "EmpireDataPane", "implements": ["MouseListener", "MouseMotionListener", "MouseWheelListener"], "modifiers": []}}, {"id": 63738, "method_name": "mouseEntered", "class_name": "EmpireBasesPane", "params": ["MouseEvent"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "        public void mouseEntered(MouseEvent arg0) {}", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/main/EmpireColonyInfoPane.java", "stars": "74", "class_props": {"extends": "EmpireDataPane", "implements": ["MouseListener", "MouseMotionListener", "MouseWheelListener"], "modifiers": []}}, {"id": 63739, "method_name": "mouseExited", "class_name": "EmpireBasesPane", "params": ["MouseEvent"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "        public void mouseExited(MouseEvent arg0) {\n            if (hoverBox != null) {\n                hoverBox = null;\n                repaint();\n            }\n        }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/main/EmpireColonyInfoPane.java", "stars": "74", "class_props": {"extends": "EmpireDataPane", "implements": ["MouseListener", "MouseMotionListener", "MouseWheelListener"], "modifiers": []}}, {"id": 63740, "method_name": "mousePressed", "class_name": "EmpireBasesPane", "params": ["MouseEvent"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "        public void mousePressed(MouseEvent arg0) {}", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/main/EmpireColonyInfoPane.java", "stars": "74", "class_props": {"extends": "EmpireDataPane", "implements": ["MouseListener", "MouseMotionListener", "MouseWheelListener"], "modifiers": []}}, {"id": 63741, "method_name": "mouseReleased", "class_name": "EmpireBasesPane", "params": ["MouseEvent"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "        public void mouseReleased(MouseEvent e) {\n            if (e.getButton() > 3)\n                return;\n            int x = e.getX();\n            int y = e.getY();\n            if (upArrow.contains(x,y)) {\n                StarSystem sys = parentUI.systemViewToDisplay();\n                if (sys == null)\n                    return;\n                Colony colony = sys.colony();\n                if (colony == null)\n                    return;\n                boolean updated = colony.defense().incrementMaxBases();\n                if (updated)\n                    softClick();\n                else\n                    misClick();\n                repaint();\n            }\n            else if (downArrow.contains(x,y)) {\n                StarSystem sys = parentUI.systemViewToDisplay();\n                if (sys == null)\n                    return;\n                Colony colony = sys.colony();\n                if (colony == null)\n                    return;\n                boolean updated = colony.defense().decrementMaxBases();\n                if (updated)\n                    softClick();\n                else\n                    misClick();\n                repaint();\n            }\n        }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/main/EmpireColonyInfoPane.java", "stars": "74", "class_props": {"extends": "EmpireDataPane", "implements": ["MouseListener", "MouseMotionListener", "MouseWheelListener"], "modifiers": []}}, {"id": 63742, "method_name": "mouseDragged", "class_name": "EmpireBasesPane", "params": ["MouseEvent"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "        public void mouseDragged(MouseEvent e) { }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/main/EmpireColonyInfoPane.java", "stars": "74", "class_props": {"extends": "EmpireDataPane", "implements": ["MouseListener", "MouseMotionListener", "MouseWheelListener"], "modifiers": []}}, {"id": 63743, "method_name": "mouseMoved", "class_name": "EmpireBasesPane", "params": ["MouseEvent"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "        public void mouseMoved(MouseEvent e) {\n            int x = e.getX();\n            int y = e.getY();\n\n            Shape newHover = null;\n            if (upArrow.contains(x,y))\n                newHover = upArrow;\n            else if (downArrow.contains(x,y))\n                newHover = downArrow;\n            else if (basesBox.contains(x,y))\n                newHover = basesBox;\n\n            if (newHover != hoverBox) {\n                hoverBox = newHover;\n                repaint();\n            }\n        }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/main/EmpireColonyInfoPane.java", "stars": "74", "class_props": {"extends": "EmpireDataPane", "implements": ["MouseListener", "MouseMotionListener", "MouseWheelListener"], "modifiers": []}}, {"id": 63744, "method_name": "mouseWheelMoved", "class_name": "EmpireBasesPane", "params": ["MouseWheelEvent"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "        public void mouseWheelMoved(MouseWheelEvent e) {\n            if (e.getWheelRotation() < 0)\n                incrementBases();\n            else\n                decrementBases();\n        }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/main/EmpireColonyInfoPane.java", "stars": "74", "class_props": {"extends": "EmpireDataPane", "implements": ["MouseListener", "MouseMotionListener", "MouseWheelListener"], "modifiers": []}}, {"id": 63745, "method_name": "init", "class_name": "EmpireProductionPane", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "        private void init() {\n            setBackground(backC);\n            setOpaque(true);\n        }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/main/EmpireColonyInfoPane.java", "stars": "74", "class_props": {"extends": "BasePanel", "implements": null, "modifiers": []}}, {"id": 63746, "method_name": "textureName", "class_name": "EmpireProductionPane", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "        public String textureName()            { return parentUI.subPanelTextureName(); }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/main/EmpireColonyInfoPane.java", "stars": "74", "class_props": {"extends": "BasePanel", "implements": null, "modifiers": []}}, {"id": 63747, "method_name": "paintComponent", "class_name": "EmpireProductionPane", "params": ["Graphics"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "        public void paintComponent(Graphics g) {\n            StarSystem sys = parentUI.systemViewToDisplay();\n            if (sys == null)\n                return;\n            Colony c = sys.colony();\n            if (c == null)\n                return;\n\n            super.paintComponent(g);\n\n            String str1 = text(\"MAIN_COLONY_PRODUCTION\");\n            String str2 = str((int)c.totalIncome());\n            String str3 = concat(\"(\", str((int)c.production()), \")\");\n\n            int y0 = getHeight()-s6;\n            g.setColor(textColor);\n            g.setFont(narrowFont(16));\n            g.drawString(str1, s5, y0);\n            int sw2 = g.getFontMetrics().stringWidth(str2);\n            int sw3 = g.getFontMetrics().stringWidth(str3);\n\n            g.setFont(narrowFont(15));\n            drawShadowedString(g, str3, 1, getWidth()-sw3-s10, y0, darkC, textC);\n            g.setColor(textC);\n            drawShadowedString(g, str2, 1, getWidth()-sw2-sw3-s15, y0, darkC, textC);\n        }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/main/EmpireColonyInfoPane.java", "stars": "74", "class_props": {"extends": "BasePanel", "implements": null, "modifiers": []}}, {"id": 63748, "method_name": "setLogger", "class_name": "ExecuteFlowAction", "params": ["Logger"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "  public static void setLogger(final Logger logger) {\n    ExecuteFlowAction.logger = logger;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/trigger/builtin/ExecuteFlowAction.java", "stars": "18", "class_props": {"extends": null, "implements": ["TriggerAction"], "modifiers": ["public"]}}, {"id": 63749, "method_name": "getExecutorManager", "class_name": "ExecuteFlowAction", "params": [], "throws": null, "modifiers": ["public", "static"], "return_type": "ExecutorManagerAdapter", "snippet": "  public static ExecutorManagerAdapter getExecutorManager() {\n    return executorManagerAdapter;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/trigger/builtin/ExecuteFlowAction.java", "stars": "18", "class_props": {"extends": null, "implements": ["TriggerAction"], "modifiers": ["public"]}}, {"id": 63750, "method_name": "setExecutorManager", "class_name": "ExecuteFlowAction", "params": ["ExecutorManagerAdapter"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "  public static void setExecutorManager(\n      final ExecutorManagerAdapter executorManagerAdapter) {\n    ExecuteFlowAction.executorManagerAdapter = executorManagerAdapter;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/trigger/builtin/ExecuteFlowAction.java", "stars": "18", "class_props": {"extends": null, "implements": ["TriggerAction"], "modifiers": ["public"]}}, {"id": 63751, "method_name": "getTriggerManager", "class_name": "ExecuteFlowAction", "params": [], "throws": null, "modifiers": ["public", "static"], "return_type": "TriggerManager", "snippet": "  public static TriggerManager getTriggerManager() {\n    return triggerManager;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/trigger/builtin/ExecuteFlowAction.java", "stars": "18", "class_props": {"extends": null, "implements": ["TriggerAction"], "modifiers": ["public"]}}, {"id": 63752, "method_name": "setTriggerManager", "class_name": "ExecuteFlowAction", "params": ["TriggerManager"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "  public static void setTriggerManager(final TriggerManager triggerManager) {\n    ExecuteFlowAction.triggerManager = triggerManager;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/trigger/builtin/ExecuteFlowAction.java", "stars": "18", "class_props": {"extends": null, "implements": ["TriggerAction"], "modifiers": ["public"]}}, {"id": 63753, "method_name": "getSystemManager", "class_name": "ExecuteFlowAction", "params": [], "throws": null, "modifiers": ["public", "static"], "return_type": "SystemManager", "snippet": "  public static SystemManager getSystemManager() {\n    return systemManager;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/trigger/builtin/ExecuteFlowAction.java", "stars": "18", "class_props": {"extends": null, "implements": ["TriggerAction"], "modifiers": ["public"]}}, {"id": 63754, "method_name": "setSystemManager", "class_name": "ExecuteFlowAction", "params": ["SystemManager"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "  public static void setSystemManager(SystemManager systemManager) {\n    ExecuteFlowAction.systemManager = systemManager;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/trigger/builtin/ExecuteFlowAction.java", "stars": "18", "class_props": {"extends": null, "implements": ["TriggerAction"], "modifiers": ["public"]}}, {"id": 63755, "method_name": "getProjectManager", "class_name": "ExecuteFlowAction", "params": [], "throws": null, "modifiers": ["public", "static"], "return_type": "ProjectManager", "snippet": "  public static ProjectManager getProjectManager() {\n    return projectManager;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/trigger/builtin/ExecuteFlowAction.java", "stars": "18", "class_props": {"extends": null, "implements": ["TriggerAction"], "modifiers": ["public"]}}, {"id": 63756, "method_name": "setProjectManager", "class_name": "ExecuteFlowAction", "params": ["ProjectManager"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "  public static void setProjectManager(final ProjectManager projectManager) {\n    ExecuteFlowAction.projectManager = projectManager;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/trigger/builtin/ExecuteFlowAction.java", "stars": "18", "class_props": {"extends": null, "implements": ["TriggerAction"], "modifiers": ["public"]}}, {"id": 63757, "method_name": "createFromJson", "class_name": "ExecuteFlowAction", "params": ["HashMap<String,Object>"], "throws": null, "modifiers": ["public", "static"], "return_type": "TriggerAction", "snippet": "  public static TriggerAction createFromJson(final HashMap<String, Object> obj) {\n    final Map<String, Object> jsonObj = (HashMap<String, Object>) obj;\n    final String objType = (String) jsonObj.get(\"type\");\n    if (!objType.equals(type)) {\n      throw new RuntimeException(\"Cannot create action of \" + type + \" from \"\n          + objType);\n    }\n    final String actionId = (String) jsonObj.get(\"actionId\");\n    final int projectId = Integer.valueOf((String) jsonObj.get(\"projectId\"));\n    final String projectName = (String) jsonObj.get(\"projectName\");\n    final String flowName = (String) jsonObj.get(\"flowName\");\n    final String submitUser = (String) jsonObj.get(\"submitUser\");\n    ExecutionOptions executionOptions = null;\n    if (jsonObj.containsKey(\"executionOptions\")) {\n      executionOptions = ExecutionOptions.createFromObject(jsonObj.get(\"executionOptions\"));\n    }\n    List<SlaOption> slaOptions = null;\n    if (jsonObj.containsKey(\"slaOptions\")) {\n      slaOptions = new ArrayList<>();\n      final List<Object> slaOptionsObj = (List<Object>) jsonObj.get(\"slaOptions\");\n      for (final Object slaObj : slaOptionsObj) {\n        slaOptions.add(SlaOption.fromObject(slaObj));\n      }\n    }\n    //\u8bbe\u7f6e\u5176\u4ed6\u6570\u636e\u53c2\u6570\n    Map<String, Object> otherOptionsMap = new HashMap<>();\n    if(jsonObj.containsKey(\"otherOptions\")){\n      otherOptionsMap = (Map<String, Object>) jsonObj.get(\"otherOptions\");\n    }\n    return new ExecuteFlowAction(actionId, projectId, projectName, flowName,\n        submitUser, executionOptions, slaOptions, otherOptionsMap);\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/trigger/builtin/ExecuteFlowAction.java", "stars": "18", "class_props": {"extends": null, "implements": ["TriggerAction"], "modifiers": ["public"]}}, {"id": 63758, "method_name": "getProjectName", "class_name": "ExecuteFlowAction", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "  public String getProjectName() {\n    return this.projectName;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/trigger/builtin/ExecuteFlowAction.java", "stars": "18", "class_props": {"extends": null, "implements": ["TriggerAction"], "modifiers": ["public"]}}, {"id": 63759, "method_name": "getProjectId", "class_name": "ExecuteFlowAction", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "  public int getProjectId() {\n    return this.projectId;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/trigger/builtin/ExecuteFlowAction.java", "stars": "18", "class_props": {"extends": null, "implements": ["TriggerAction"], "modifiers": ["public"]}}, {"id": 63760, "method_name": "setProjectId", "class_name": "ExecuteFlowAction", "params": ["int"], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "  protected void setProjectId(final int projectId) {\n    this.projectId = projectId;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/trigger/builtin/ExecuteFlowAction.java", "stars": "18", "class_props": {"extends": null, "implements": ["TriggerAction"], "modifiers": ["public"]}}, {"id": 63761, "method_name": "getFlowName", "class_name": "ExecuteFlowAction", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "  public String getFlowName() {\n    return this.flowName;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/trigger/builtin/ExecuteFlowAction.java", "stars": "18", "class_props": {"extends": null, "implements": ["TriggerAction"], "modifiers": ["public"]}}, {"id": 63762, "method_name": "setFlowName", "class_name": "ExecuteFlowAction", "params": ["String"], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "  protected void setFlowName(final String flowName) {\n    this.flowName = flowName;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/trigger/builtin/ExecuteFlowAction.java", "stars": "18", "class_props": {"extends": null, "implements": ["TriggerAction"], "modifiers": ["public"]}}, {"id": 63763, "method_name": "getSubmitUser", "class_name": "ExecuteFlowAction", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "  public String getSubmitUser() {\n    return this.submitUser;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/trigger/builtin/ExecuteFlowAction.java", "stars": "18", "class_props": {"extends": null, "implements": ["TriggerAction"], "modifiers": ["public"]}}, {"id": 63764, "method_name": "setSubmitUser", "class_name": "ExecuteFlowAction", "params": ["String"], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "  protected void setSubmitUser(final String submitUser) {\n    this.submitUser = submitUser;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/trigger/builtin/ExecuteFlowAction.java", "stars": "18", "class_props": {"extends": null, "implements": ["TriggerAction"], "modifiers": ["public"]}}, {"id": 63765, "method_name": "getExecutionOptions", "class_name": "ExecuteFlowAction", "params": [], "throws": null, "modifiers": ["public"], "return_type": "ExecutionOptions", "snippet": "  public ExecutionOptions getExecutionOptions() {\n    return this.executionOptions;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/trigger/builtin/ExecuteFlowAction.java", "stars": "18", "class_props": {"extends": null, "implements": ["TriggerAction"], "modifiers": ["public"]}}, {"id": 63766, "method_name": "setExecutionOptions", "class_name": "ExecuteFlowAction", "params": ["ExecutionOptions"], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "  protected void setExecutionOptions(final ExecutionOptions executionOptions) {\n    this.executionOptions = executionOptions;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/trigger/builtin/ExecuteFlowAction.java", "stars": "18", "class_props": {"extends": null, "implements": ["TriggerAction"], "modifiers": ["public"]}}, {"id": 63767, "method_name": "getSlaOptions", "class_name": "ExecuteFlowAction", "params": [], "throws": null, "modifiers": ["public"], "return_type": "List<SlaOption>", "snippet": "  public List<SlaOption> getSlaOptions() {\n    return this.slaOptions;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/trigger/builtin/ExecuteFlowAction.java", "stars": "18", "class_props": {"extends": null, "implements": ["TriggerAction"], "modifiers": ["public"]}}, {"id": 63768, "method_name": "setSlaOptions", "class_name": "ExecuteFlowAction", "params": ["List<SlaOption>"], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "  protected void setSlaOptions(final List<SlaOption> slaOptions) {\n    this.slaOptions = slaOptions;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/trigger/builtin/ExecuteFlowAction.java", "stars": "18", "class_props": {"extends": null, "implements": ["TriggerAction"], "modifiers": ["public"]}}, {"id": 63769, "method_name": "getOtherOption", "class_name": "ExecuteFlowAction", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Map<String,Object>", "snippet": "  public Map<String, Object> getOtherOption() {\n    return otherOption;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/trigger/builtin/ExecuteFlowAction.java", "stars": "18", "class_props": {"extends": null, "implements": ["TriggerAction"], "modifiers": ["public"]}}, {"id": 63770, "method_name": "setOtherOption", "class_name": "ExecuteFlowAction", "params": ["Map<String,Object>"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void setOtherOption(Map<String, Object> otherOption) {\n    this.otherOption = otherOption;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/trigger/builtin/ExecuteFlowAction.java", "stars": "18", "class_props": {"extends": null, "implements": ["TriggerAction"], "modifiers": ["public"]}}, {"id": 63771, "method_name": "getType", "class_name": "ExecuteFlowAction", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "  public String getType() {\n    return type;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/trigger/builtin/ExecuteFlowAction.java", "stars": "18", "class_props": {"extends": null, "implements": ["TriggerAction"], "modifiers": ["public"]}}, {"id": 63772, "method_name": "fromJson", "class_name": "ExecuteFlowAction", "params": ["Object"], "throws": null, "modifiers": ["public"], "return_type": "TriggerAction", "snippet": "  public TriggerAction fromJson(final Object obj) {\n    return createFromJson((HashMap<String, Object>) obj);\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/trigger/builtin/ExecuteFlowAction.java", "stars": "18", "class_props": {"extends": null, "implements": ["TriggerAction"], "modifiers": ["public"]}}, {"id": 63773, "method_name": "toJson", "class_name": "ExecuteFlowAction", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Object", "snippet": "  public Object toJson() {\n    final Map<String, Object> jsonObj = new HashMap<>();\n    jsonObj.put(\"actionId\", this.actionId);\n    jsonObj.put(\"type\", type);\n    jsonObj.put(\"projectId\", String.valueOf(this.projectId));\n    jsonObj.put(\"projectName\", this.projectName);\n    jsonObj.put(\"flowName\", this.flowName);\n    jsonObj.put(\"submitUser\", this.submitUser);\n    if (this.executionOptions != null) {\n      jsonObj.put(\"executionOptions\", this.executionOptions.toObject());\n    }\n    if (this.slaOptions != null) {\n      final List<Object> slaOptionsObj = new ArrayList<>();\n      for (final SlaOption sla : this.slaOptions) {\n        slaOptionsObj.add(sla.toObject());\n      }\n      jsonObj.put(\"slaOptions\", slaOptionsObj);\n    }\n\n    if(this.otherOption != null){\n      jsonObj.put(\"otherOptions\", this.otherOption);\n    }\n\n    return jsonObj;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/trigger/builtin/ExecuteFlowAction.java", "stars": "18", "class_props": {"extends": null, "implements": ["TriggerAction"], "modifiers": ["public"]}}, {"id": 63774, "method_name": "doAction", "class_name": "ExecuteFlowAction", "params": [], "throws": ["Exception"], "modifiers": ["public"], "return_type": "void", "snippet": "  public void doAction() throws Exception {\n    if (projectManager == null || executorManagerAdapter == null) {\n      throw new Exception(\"ExecuteFlowAction not properly initialized!\");\n    }\n\n    final Project project = FlowUtils.getProject(projectManager, this.projectId);\n    final Flow flow = FlowUtils.getFlow(project, this.flowName);\n\n    final ExecutableFlow exflow = FlowUtils.createExecutableFlow(project, flow);\n\n    exflow.setSubmitUser(this.submitUser);\n\t\n\t// FIXME\u00a0Add proxy users to submit users to solve the problem that proxy users of scheduled tasks do not take effect.\n    exflow.addAllProxyUsers(project.getProxyUsers());\n    WtssUser wtssUser = null;\n    try {\n      wtssUser = systemManager.getSystemUserByUserName(this.submitUser);\n    } catch (SystemUserManagerException e){\n      logger.error(\"get wtssUser failed, \" + e);\n    }\n    if(wtssUser != null && wtssUser.getProxyUsers() != null) {\n      String[] proxySplit = wtssUser.getProxyUsers().split(\"\\\\s*,\\\\s*\");\n      logger.info(\"add proxyUser.\");\n      exflow.addAllProxyUsers(Arrays.asList(proxySplit));\n    }\n\n    if (this.executionOptions == null) {\n      this.executionOptions = new ExecutionOptions();\n    }\n    if (!this.executionOptions.isFailureEmailsOverridden()) {\n      this.executionOptions.setFailureEmails(flow.getFailureEmails());\n    }\n    if (!this.executionOptions.isSuccessEmailsOverridden()) {\n      this.executionOptions.setSuccessEmails(flow.getSuccessEmails());\n    }\n    exflow.setExecutionOptions(this.executionOptions);\n\n    if (this.slaOptions != null && this.slaOptions.size() > 0) {\n      exflow.setSlaOptions(this.slaOptions);\n    }\n    // FIXME\u00a0Set the task to a scheduled task type.\n    exflow.setFlowType(3);\n    // FIXME\u00a0Added new parameters for job stream, used to rerun job stream failure, and skip all tasks that failed execution.\n    if(null != this.otherOption && this.otherOption.size() > 0){\n      // \u8bbe\u7f6e\u4e86flow\u7684\u5931\u8d25\u91cd\u8dd1\n      if(this.otherOption.get(\"flowFailedRetryOption\") != null){\n        exflow.setFlowFailedRetry((Map<String, String>)this.otherOption.get(\"flowFailedRetryOption\"));\n      }\n      //\u662f\u5426\u8df3\u8fc7\u6240\u6709\u5931\u8d25job\n      exflow.setFailedSkipedAllJobs((Boolean) this.otherOption.getOrDefault(\"flowFailedSkiped\", false));\n      exflow.setOtherOption(this.otherOption);\n    }\n\n    logger.info(\"Invoking flow \" + project.getName() + \".\" + this.flowName);\n    executorManagerAdapter.submitExecutableFlow(exflow, this.submitUser);\n    logger.info(\"Invoked flow \" + project.getName() + \".\" + this.flowName);\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/trigger/builtin/ExecuteFlowAction.java", "stars": "18", "class_props": {"extends": null, "implements": ["TriggerAction"], "modifiers": ["public"]}}, {"id": 63775, "method_name": "getDescription", "class_name": "ExecuteFlowAction", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "  public String getDescription() {\n    return \"Execute flow \" + getFlowName() + \" from project \"\n        + getProjectName();\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/trigger/builtin/ExecuteFlowAction.java", "stars": "18", "class_props": {"extends": null, "implements": ["TriggerAction"], "modifiers": ["public"]}}, {"id": 63776, "method_name": "setContext", "class_name": "ExecuteFlowAction", "params": ["Map<String,Object>"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void setContext(final Map<String, Object> context) {\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/trigger/builtin/ExecuteFlowAction.java", "stars": "18", "class_props": {"extends": null, "implements": ["TriggerAction"], "modifiers": ["public"]}}, {"id": 63777, "method_name": "getId", "class_name": "ExecuteFlowAction", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "  public String getId() {\n    return this.actionId;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/trigger/builtin/ExecuteFlowAction.java", "stars": "18", "class_props": {"extends": null, "implements": ["TriggerAction"], "modifiers": ["public"]}}, {"id": 63778, "method_name": "main", "class_name": "Demo01Writer", "params": ["String"], "throws": ["IOException"], "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void main(String[] args) throws IOException {\n        //1.\u521b\u5efaFileWriter\u5bf9\u8c61,\u6784\u9020\u65b9\u6cd5\u4e2d\u7ed1\u5b9a\u8981\u5199\u5165\u6570\u636e\u7684\u76ee\u7684\u5730\n        FileWriter fw = new FileWriter(\"09_IOAndProperties\\\\d.txt\");\n        //2.\u4f7f\u7528FileWriter\u4e2d\u7684\u65b9\u6cd5write,\u628a\u6570\u636e\u5199\u5165\u5230\u5185\u5b58\u7f13\u51b2\u533a\u4e2d(\u5b57\u7b26\u8f6c\u6362\u4e3a\u5b57\u8282\u7684\u8fc7\u7a0b)\n        //void write(int c) \u5199\u5165\u5355\u4e2a\u5b57\u7b26\u3002\n        fw.write(97);\n        //3.\u4f7f\u7528FileWriter\u4e2d\u7684\u65b9\u6cd5flush,\u628a\u5185\u5b58\u7f13\u51b2\u533a\u4e2d\u7684\u6570\u636e,\u5237\u65b0\u5230\u6587\u4ef6\u4e2d\n        //fw.flush();\n        //4.\u91ca\u653e\u8d44\u6e90(\u4f1a\u5148\u628a\u5185\u5b58\u7f13\u51b2\u533a\u4e2d\u7684\u6570\u636e\u5237\u65b0\u5230\u6587\u4ef6\u4e2d)\n        fw.close();\n    }", "url": "https://raw.githubusercontent.com/liuminchao123/JavaWeb_Learning/master/02.%20java/Java/%E9%BB%91%E9%A9%AC%E6%95%99%E7%A8%8B/16.%E3%80%90%E5%BC%82%E5%B8%B8%E3%80%81%E7%BA%BF%E7%A8%8B%E3%80%91-%E7%AC%94%E8%AE%B0/20.%E3%80%90%E5%AD%97%E8%8A%82%E6%B5%81%E3%80%81%E5%AD%97%E7%AC%A6%E6%B5%81%E3%80%91-%E7%AC%94%E8%AE%B0/code/09_IOAndProperties/src/com/itheima/Demo05Writer/Demo01Writer.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 63779, "method_name": "atmosphereCompleted", "class_name": "ColonyEcology", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean atmosphereCompleted()         { return atmosphereCompleted; }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/colony/ColonyEcology.java", "stars": "74", "class_props": {"extends": "ColonySpendingCategory", "implements": null, "modifiers": ["public"]}}, {"id": 63780, "method_name": "soilEnrichCompleted", "class_name": "ColonyEcology", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean soilEnrichCompleted()         { return soilEnrichCompleted; }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/colony/ColonyEcology.java", "stars": "74", "class_props": {"extends": "ColonySpendingCategory", "implements": null, "modifiers": ["public"]}}, {"id": 63781, "method_name": "terraformCompleted", "class_name": "ColonyEcology", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean terraformCompleted()         { return terraformCompleted; }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/colony/ColonyEcology.java", "stars": "74", "class_props": {"extends": "ColonySpendingCategory", "implements": null, "modifiers": ["public"]}}, {"id": 63782, "method_name": "populationGrowthCompleted", "class_name": "ColonyEcology", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean populationGrowthCompleted()   { return populationGrowthCompleted; }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/colony/ColonyEcology.java", "stars": "74", "class_props": {"extends": "ColonySpendingCategory", "implements": null, "modifiers": ["public"]}}, {"id": 63783, "method_name": "resetBiosphere", "class_name": "ColonyEcology", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void resetBiosphere() {\n        hostileBC = 0;\n        soilEnrichBC = 0;\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/colony/ColonyEcology.java", "stars": "74", "class_props": {"extends": "ColonySpendingCategory", "implements": null, "modifiers": ["public"]}}, {"id": 63784, "method_name": "init", "class_name": "ColonyEcology", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void init() {\n        hostileBC = 0;\n        soilEnrichBC = 0;\n        planet().resetWaste();\n        unallocatedBC = 0;\n\n        wasteCleaned = 0;\n        newGrownPopulation = 0;\n        newPurchasedPopulation = 0;\n        newBiosphereIncrease = 0;\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/colony/ColonyEcology.java", "stars": "74", "class_props": {"extends": "ColonySpendingCategory", "implements": null, "modifiers": ["public"]}}, {"id": 63785, "method_name": "categoryType", "class_name": "ColonyEcology", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int categoryType()    { return Colony.ECOLOGY; }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/colony/ColonyEcology.java", "stars": "74", "class_props": {"extends": "ColonySpendingCategory", "implements": null, "modifiers": ["public"]}}, {"id": 63786, "method_name": "isCompleted", "class_name": "ColonyEcology", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean isCompleted() {\n        return colony().population() >= colony().planet().maxSize()\n            && (empire().race().ignoresPlanetEnvironment() || waste() == 0);\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/colony/ColonyEcology.java", "stars": "74", "class_props": {"extends": "ColonySpendingCategory", "implements": null, "modifiers": ["public"]}}, {"id": 63787, "method_name": "orderedValue", "class_name": "ColonyEcology", "params": [], "throws": null, "modifiers": ["public"], "return_type": "float", "snippet": "    public float orderedValue() {\n        return max(super.orderedValue(),\n                    colony().orderAmount(Colony.Orders.SOIL),\n                    colony().orderAmount(Colony.Orders.ATMOSPHERE),\n                    colony().orderAmount(Colony.Orders.TERRAFORM));\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/colony/ColonyEcology.java", "stars": "74", "class_props": {"extends": "ColonySpendingCategory", "implements": null, "modifiers": ["public"]}}, {"id": 63788, "method_name": "removeSpendingOrders", "class_name": "ColonyEcology", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void removeSpendingOrders()   {\n        colony().removeColonyOrder(Colony.Orders.SOIL);\n        colony().removeColonyOrder(Colony.Orders.ATMOSPHERE);\n        colony().removeColonyOrder(Colony.Orders.TERRAFORM);\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/colony/ColonyEcology.java", "stars": "74", "class_props": {"extends": "ColonySpendingCategory", "implements": null, "modifiers": ["public"]}}, {"id": 63789, "method_name": "capturedBy", "class_name": "ColonyEcology", "params": ["Empire"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void capturedBy(Empire newCiv) {\n        hostileBC = 0;\n        soilEnrichBC = 0;\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/colony/ColonyEcology.java", "stars": "74", "class_props": {"extends": "ColonySpendingCategory", "implements": null, "modifiers": ["public"]}}, {"id": 63790, "method_name": "waste", "class_name": "ColonyEcology", "params": [], "throws": null, "modifiers": ["public"], "return_type": "float", "snippet": "    public float waste()           { return planet().waste(); }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/colony/ColonyEcology.java", "stars": "74", "class_props": {"extends": "ColonySpendingCategory", "implements": null, "modifiers": ["public"]}}, {"id": 63791, "method_name": "addWaste", "class_name": "ColonyEcology", "params": ["float"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void addWaste(float w)  { planet().addWaste(w); }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/colony/ColonyEcology.java", "stars": "74", "class_props": {"extends": "ColonySpendingCategory", "implements": null, "modifiers": ["public"]}}, {"id": 63792, "method_name": "atmosphereTerraformCost", "class_name": "ColonyEcology", "params": [], "throws": null, "modifiers": ["public"], "return_type": "float", "snippet": "    public float atmosphereTerraformCost() {\n        return TechAtmosphereEnrichment.hostileTech.cost;\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/colony/ColonyEcology.java", "stars": "74", "class_props": {"extends": "ColonySpendingCategory", "implements": null, "modifiers": ["public"]}}, {"id": 63793, "method_name": "enrichSoilCost", "class_name": "ColonyEcology", "params": [], "throws": null, "modifiers": ["public"], "return_type": "float", "snippet": "    public float enrichSoilCost() {\n        if (!tech().enrichSoil())\n            return 0;\n\n        int envDiff = tech().topSoilEnrichmentTech().environment - planet().environment();\n        return Math.max(0, envDiff * SOIL_UPGRADE_BC);\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/colony/ColonyEcology.java", "stars": "74", "class_props": {"extends": "ColonySpendingCategory", "implements": null, "modifiers": ["public"]}}, {"id": 63794, "method_name": "terraformCost", "class_name": "ColonyEcology", "params": [], "throws": null, "modifiers": ["public"], "return_type": "float", "snippet": "    public float terraformCost() {\n        float roomToGrow = Math.max(0, colony().maxSize() - planet().currentSize());\n        if (roomToGrow <= 0)\n            return 0;\n\n        return roomToGrow * tech().popIncreaseCost();\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/colony/ColonyEcology.java", "stars": "74", "class_props": {"extends": "ColonySpendingCategory", "implements": null, "modifiers": ["public"]}}, {"id": 63795, "method_name": "nextTurn", "class_name": "ColonyEcology", "params": ["float", "float"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void nextTurn(float totalProd, float totalReserve) {\n        Colony c = colony();\n        Planet p = c.planet();\n        Empire emp = c.empire();\n        TechTree tr = emp.tech();\n        newGrownPopulation = c.normalPopGrowth();\n        wasteCleaned = 0;\n\n        float prodBC = pct()* totalProd;\n        float rsvBC = pct() * totalReserve;\n        float newBC = prodBC+rsvBC;\n\n        // add new waste created from this turn & clean it up\n        addWaste(c.newWaste());\n        wasteCleaned = emp.race().ignoresPlanetEnvironment() ? 0 : max(0, min((newBC * tr.wasteElimination()), waste()));\n        newBC -= (wasteCleaned / tr.wasteElimination());\n\n        // try to convert hostile atmosphere\n        atmosphereCompleted = false;\n        if (p.canTerraformAtmosphere(emp))  {\n            float hostileCost = min((atmosphereTerraformCost() - hostileBC), newBC);\n            hostileCost = max(hostileCost,0);\n            hostileBC += hostileCost;\n            newBC -= hostileCost;\n            if (hostileBC >= atmosphereTerraformCost()) {\n                atmosphereCompleted = true;\n                hostileBC = 0;\n                p.terraformAtmosphere();\n                float orderAmt = c.orderAmount(Colony.Orders.ATMOSPHERE);\n                if (orderAmt > 0) {\n                    c.removeColonyOrder(Colony.Orders.ATMOSPHERE);\n                    c.addColonyOrder(Colony.Orders.TERRAFORM, orderAmt);\n                }\n            }\n        }\n\n        //if not Hostile & civ has SoilEnrichment that will improvement this environment,\n        // then try to pay for soil enrichment... silicoids cannot do this\n        if (!emp.race().ignoresPlanetEnvironment()) {\n            soilEnrichCompleted = false;\n            if (!p.isEnvironmentHostile() && tr.enrichSoil() && (tr.topSoilEnrichmentTech().environment > p.environment()))  {\n                float enrichCost = min(newBC,enrichSoilCost() - soilEnrichBC);\n                enrichCost = max(enrichCost,0);\n                soilEnrichBC += enrichCost;\n                newBC -= enrichCost;\n                while (soilEnrichBC >= SOIL_UPGRADE_BC) {\n                    soilEnrichBC -= SOIL_UPGRADE_BC;\n                    p.enrichSoil();\n                }\n                soilEnrichCompleted = p.environment() >= tr.topSoilEnrichmentTech().environment;\n                if (soilEnrichCompleted) {\n                    float orderAmt = c.orderAmount(Colony.Orders.SOIL);\n                    if (orderAmt > 0) {\n                        c.removeColonyOrder(Colony.Orders.SOIL);\n                        c.addColonyOrder(Colony.Orders.TERRAFORM, orderAmt);\n                    }\n                }\n            }\n        }\n\n        // try to terraform planet to maxSize\n        float terraformCost = terraformCost();\n        newBiosphereIncrease = 0;\n\n        terraformCompleted = false;\n        if ((newBC > 0) && (terraformCost > 0)) {\n            terraformCost = min(newBC, terraformCost);\n            newBiosphereIncrease = terraformCost / tr.topTerraformingTech().costPerMillion;\n            newBC -= terraformCost;\n            p.terraformBiosphere(newBiosphereIncrease);\n            terraformCompleted = (newBiosphereIncrease > 0) && (p.currentSize() >= c.maxSize());\n            if (terraformCompleted) {\n                float orderAmt = c.orderAmount(Colony.Orders.TERRAFORM);\n                if (orderAmt > 0) {\n                    c.removeColonyOrder(Colony.Orders.TERRAFORM);\n                    c.addColonyOrder(Colony.Orders.FACTORIES, orderAmt);\n                }\n            }\n        }\n\n        // try to buy new population\n        populationGrowthCompleted = false;\n        newPurchasedPopulation = 0;\n        if (newBC > 0) {\n            newPurchasedPopulation = newBC / tr.populationCost();\n            newPurchasedPopulation = min(newPurchasedPopulation,(p.currentSize() - c.population() + c.inTransport() - newGrownPopulation));\n            newPurchasedPopulation = max(newPurchasedPopulation,0);\n            newBC -= (newPurchasedPopulation* tr.populationCost());\n            populationGrowthCompleted = (newPurchasedPopulation > 0) && (c.population() >= c.maxSize());\n        }\n\n        // for poor planets, we want to assume that as much\n        // of the remaining BC left (ecoProd) is from reserve\n        // this minimizes loss when sending back to the reserve\n        float planetAdj = p.productionAdj();\n        if (planetAdj < 1) {\n            float unadjustedBC = min(rsvBC, newBC);\n            float adjustedBC = (newBC - unadjustedBC) * planetAdj;\n            unallocatedBC += (unadjustedBC + adjustedBC);\n        }\n        // for normal/rich planets, we want to assume that as much\n        // of the remaining BC left (ecoProd) is from planetary\n        // production.. to maximum BC send to the reserve\n        else {\n            float unadjustedBC = max(0, newBC-prodBC);\n            float adjustedBC = (newBC - unadjustedBC) * planetAdj;\n            unallocatedBC += (unadjustedBC + adjustedBC);\n        }\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/colony/ColonyEcology.java", "stars": "74", "class_props": {"extends": "ColonySpendingCategory", "implements": null, "modifiers": ["public"]}}, {"id": 63796, "method_name": "assessTurn", "class_name": "ColonyEcology", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void assessTurn() {\n        populationGrowthCompleted = ((newGrownPopulation+newPurchasedPopulation) > 0) && (colony().population() >= colony().maxSize());\n        if (populationGrowthCompleted) {\n            float orderAmt = colony().orderAmount(Colony.Orders.TERRAFORM);\n            if (orderAmt > 0) {\n                colony().removeColonyOrder(Colony.Orders.TERRAFORM);\n                colony().addColonyOrder(Colony.Orders.FACTORIES, orderAmt);\n            }\n        }\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/colony/ColonyEcology.java", "stars": "74", "class_props": {"extends": "ColonySpendingCategory", "implements": null, "modifiers": ["public"]}}, {"id": 63797, "method_name": "commitTurn", "class_name": "ColonyEcology", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void commitTurn() {\n        addWaste(-wasteCleaned);\n        colony().setPopulation(colony().population() + newGrownPopulation);\n        colony().setPopulation(colony().population() + newPurchasedPopulation);\n\n        // if affected by waste, deduct population due to decreased planet size\n        if (!empire().race().ignoresPlanetEnvironment()) {\n            float pop = colony().population();\n            float size = planet().sizeAfterWaste();\n            if (pop > size) {\n                float over = pop - size;\n                float loss= over/pop * .1f * over;\n                colony().setPopulation(colony().population()-loss);\n            }\n        }\n        if (colony().population() < 0)\n            err(\"ERROR: bad pop for \", colony().name(), \" pop:\"+colony().population(), \" newGrown:\", str(newGrownPopulation), \" newPurchased:\", str(newPurchasedPopulation));\n\n        empire().addReserve(unallocatedBC);\n        unallocatedBC = 0;\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/colony/ColonyEcology.java", "stars": "74", "class_props": {"extends": "ColonySpendingCategory", "implements": null, "modifiers": ["public"]}}, {"id": 63798, "method_name": "upcomingPopGrowth", "class_name": "ColonyEcology", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int upcomingPopGrowth() {\n        upcomingResult();\n        return expectedPopGrowth;\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/colony/ColonyEcology.java", "stars": "74", "class_props": {"extends": "ColonySpendingCategory", "implements": null, "modifiers": ["public"]}}, {"id": 63799, "method_name": "warning", "class_name": "ColonyEcology", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean warning() {\n        if (empire().race().ignoresPlanetEnvironment())\n            return false;\n        \n        float prodBC = pct()* colony().totalProductionIncome();\n        float rsvBC = pct() * colony().maxReserveIncome();\n        float newBC = prodBC+rsvBC; \n        \n        return (newBC < colony().wasteCleanupCost());\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/colony/ColonyEcology.java", "stars": "74", "class_props": {"extends": "ColonySpendingCategory", "implements": null, "modifiers": ["public"]}}, {"id": 63800, "method_name": "upcomingResult", "class_name": "ColonyEcology", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String upcomingResult(){\n        Colony c = colony();\n        Planet p = c.planet();\n        Empire emp = c.empire();\n        TechTree tr = emp.tech();\n\n        float prodBC = pct()* c.totalProductionIncome();\n        float rsvBC = pct() * c.maxReserveIncome();\n        float newBC = prodBC+rsvBC;\n        float cost;\n\n        // new population\n        float currentPop = c.population();\n        float expGrowth = c.normalPopGrowth();\n        float newPopCost = tr.populationCost();\n        float workingPop = c.workingPopulation(); // currentpop - transports away\n        float newPopPurchaseable = c.maxSize() - workingPop - expGrowth;\n        expectedPopGrowth = (int) workingPop - (int) currentPop;\n        \n        // check for waste cleanup\n        cost = c.wasteCleanupCost();\n        if (newBC < cost) \n            return text(wasteText);\n        \n        if (colony().allocation(categoryType()) == 0)\n            return text(noneText);\n        if (allocation() == cleanupAllocationNeeded())\n            return text(cleanupText);\n\n        expectedPopGrowth = (int) (workingPop+expGrowth) - (int) currentPop;\n        newBC -= cost;\n        // check for atmospheric terraforming\n        cost = 0;\n        if (planet().canTerraformAtmosphere(empire()))\n            cost = atmosphereTerraformCost() - hostileBC;\n\n        if (newBC < cost)\n            return text(atmosphereText);\n\n        newBC -= cost;\n\n        // check for soil enrichment, not for silicoids\n        if (!emp.race().ignoresPlanetEnvironment()) {\n            cost = 0;\n            if ((! p.isEnvironmentHostile()) || p.canTerraformAtmosphere(empire())) {\n                if (tr.enrichSoil() && (tr.topSoilEnrichmentTech().environment > p.environment()))\n                    cost = ((tr.topSoilEnrichmentTech().environment - p.environment()) * SOIL_UPGRADE_BC) - soilEnrichBC;\n            }\n            if (newBC < cost)\n                return text(enrichSoilText);\n            newBC -= cost;\n        }\n\n        // check for terraforming\n        float roomToGrow = c.maxSize() - p.currentSize();\n        cost = 0;\n        if (roomToGrow > 0)\n            cost = roomToGrow * tr.topTerraformingTech().costPerMillion;\n\n        if (newBC < cost) \n             return text(terraformText);\n \n        newBC -= cost;\n\n        cost = max(0, newPopPurchaseable * newPopCost);\n        if (newBC < cost) {\n            int newPop = (int) (workingPop+expGrowth+(newBC / newPopCost)) - (int) currentPop;\n            expectedPopGrowth = newPop;\n            return text(growthText);\n        }\n\n        newBC -= cost;\n        expectedPopGrowth = (int) c.maxSize() - (int) currentPop;\n\n        // if less <1% of income, show \"Clean\", else show \"Reserve\"\n        if (newBC <= (c.totalIncome()/100))\n            return text(growthText);\n        else\n            return text(reserveText);\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/colony/ColonyEcology.java", "stars": "74", "class_props": {"extends": "ColonySpendingCategory", "implements": null, "modifiers": ["public"]}}, {"id": 63801, "method_name": "maxSpendingNeeded", "class_name": "ColonyEcology", "params": [], "throws": null, "modifiers": ["public"], "return_type": "float", "snippet": "    public float maxSpendingNeeded() {\n        // cost to terraform planet\n        float tform = terraformSpendingNeeded();\n        // try to buy new population\n        float newPopCost = (colony().maxSize() - colony().workingPopulation() - colony().normalPopGrowth()) * tech().populationCost();\n        newPopCost = max(0,newPopCost);\n        return tform + newPopCost;\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/colony/ColonyEcology.java", "stars": "74", "class_props": {"extends": "ColonySpendingCategory", "implements": null, "modifiers": ["public"]}}, {"id": 63802, "method_name": "terraformSpendingNeeded", "class_name": "ColonyEcology", "params": [], "throws": null, "modifiers": ["public"], "return_type": "float", "snippet": "    public float terraformSpendingNeeded() {\n        Empire emp = empire();\n        TechTree tech = emp.tech();\n        Planet planet = planet();\n        // try to convert hostile atmosphere\n        float hostileCost = 0;\n\n        if (planet.canTerraformAtmosphere(emp))\n            hostileCost = max(0, atmosphereTerraformCost() - hostileBC);\n\n        // don't count enrichSoil cost unless not hostile or civ can terraform hostile\n        float enrichCost = 0;\n        if (!emp.race().ignoresPlanetEnvironment()) {\n            if (!planet.isEnvironmentHostile() || planet.canTerraformAtmosphere(emp)) {\n                if (tech.enrichSoil() && (tech.topSoilEnrichmentTech().environment > planet.environment())) {\n                    enrichCost = ((tech.topSoilEnrichmentTech().environment - planet.environment()) * 150) - soilEnrichBC;\n                    enrichCost = max(0,enrichCost);\n                }\n            }\n        }\n        // try to terraform planet to maxSize (currently not counting incr from previous terraforms)\n        float roomToGrow = colony().maxSize() - planet.currentSize();\n        float terraformCost = 0;\n\n        if (roomToGrow > 0) {\n            terraformCost = roomToGrow * tech.popIncreaseCost();\n            terraformCost = max(0,terraformCost);\n        }\n\n        return hostileCost + enrichCost + terraformCost;\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/colony/ColonyEcology.java", "stars": "74", "class_props": {"extends": "ColonySpendingCategory", "implements": null, "modifiers": ["public"]}}, {"id": 63803, "method_name": "terraformAllocationNeeded", "class_name": "ColonyEcology", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int terraformAllocationNeeded() {\n        float needed = terraformSpendingNeeded();\n        if (needed == 0)\n            return 0;\n        float prod = colony().totalProductionIncome() + colony().maxReserveIncome();\n        float pctNeeded = min(1, needed / prod);\n        int ticks = (int) Math.ceil(pctNeeded * MAX_TICKS);\n        return ticks;\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/colony/ColonyEcology.java", "stars": "74", "class_props": {"extends": "ColonySpendingCategory", "implements": null, "modifiers": ["public"]}}, {"id": 63804, "method_name": "cleanupAllocationNeeded", "class_name": "ColonyEcology", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int cleanupAllocationNeeded() {\n        float needed = colony().minimumCleanupCost();\n        if (needed == 0)\n            return 0;\n        float prod = colony().totalProductionIncome() + colony().maxReserveIncome();\n        float pctNeeded = min(1, needed / prod);\n        int ticks = (int) Math.ceil(pctNeeded * MAX_TICKS);\n        return ticks;\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/colony/ColonyEcology.java", "stars": "74", "class_props": {"extends": "ColonySpendingCategory", "implements": null, "modifiers": ["public"]}}, {"id": 63805, "method_name": "maxAllocationNeeded", "class_name": "ColonyEcology", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int maxAllocationNeeded() {\n        float needed = maxSpendingNeeded();\n        if (needed <= 0)\n            return 0;\n        float prod = colony().totalProductionIncome() + colony().maxReserveIncome();\n        float pctNeeded = min(1, needed / prod);\n        int ticks = (int) Math.ceil(pctNeeded * MAX_TICKS);\n        return ticks;\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/colony/ColonyEcology.java", "stars": "74", "class_props": {"extends": "ColonySpendingCategory", "implements": null, "modifiers": ["public"]}}, {"id": 63806, "method_name": "isAlliance", "class_name": "TreatyAlliance", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean isAlliance()               { return true; }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/empires/TreatyAlliance.java", "stars": "74", "class_props": {"extends": "DiplomaticTreaty", "implements": ["Base"], "modifiers": ["public"]}}, {"id": 63807, "method_name": "listOrder", "class_name": "TreatyAlliance", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int listOrder()                      { return 3; }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/empires/TreatyAlliance.java", "stars": "74", "class_props": {"extends": "DiplomaticTreaty", "implements": ["Base"], "modifiers": ["public"]}}, {"id": 63808, "method_name": "onDraw", "class_name": "Practice11PieChartView", "params": ["Canvas"], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void onDraw(Canvas canvas) {\n        super.onDraw(canvas);\n\n        int marginBottom = 40;\n        int marginPhone = 200;\n\n        // \u7ed8\u5236\u6807\u9898\n        String title = \"2019\u4e0a\u534a\u5e74\u5b89\u5353\u624b\u673a\u5e02\u573a\u5360\u6bd4\";\n        mPaint.setTextAlign(Paint.Align.CENTER);\n        mPaint.setTextSize(48);\n        mPaint.setColor(Color.BLACK);\n        canvas.drawText(title, getWidth() / 2, getHeight() - marginBottom, mPaint);\n\n        // \u6247\u5f62\u7ed8\u5236\u8d77\u70b9\n        int outset = -188;\n\n        // \u5bf9\u6bd4 360 \u5ea6\u8f6c\u6362\u500d\u7387\n        double to360 = 3.43;\n\n        // \u624b\u673a\u5360\u6bd4\n        double percent;\n\n        // \u6247\u5f62\u5f00\u59cb\u89d2\u5ea6\u3001\u5212\u8fc7\u4e00\u534a\u89d2\u5ea6\n        float startAngle = 0, midAngle;\n\n        // \u6298\u7ebf\u4e24\u6bb5\u7ebf\n        int line1 = 25, line2;\n\n        // \u692d\u5706\u56db\u8fb9\n        float left, right, top, bottom;\n\n        // \u5706\u7684\u534a\u5f84\u53ca\u5750\u6807\n        float r = 280, oX, oY;\n\n        // \u6247\u5f62\u5f27\u7ebf\u4e2d\u70b9\u5750\u6807\n        float midX, midY;\n\n        // \u6587\u5b57\u5750\u6807\n        float txtX, txtY;\n\n        // \u6298\u7ebf\u5750\u6807\n        float line1X, line1Y, line2X, line2Y;\n\n        boolean isSelected;\n\n        int offset;\n\n        for (int i = 0; i < phoneModels.size(); i++) {\n\n            // \u9009\u62e9\u54ea\u4e2a\u624b\u673a\u54c1\u724c\n            isSelected = i == 0;\n\n            offset = isSelected ? 20 : 0;\n\n            percent = phoneModels.get(i).percent * to360;\n\n            oX = getWidth() / 2;\n            oY = (getHeight() - marginBottom)  / 2;\n\n            if (i == 0) {\n                startAngle = outset;\n            } else {\n                startAngle += phoneModels.get(i - 1).percent * to360 + 2;\n            }\n\n            midAngle = startAngle + (float) (percent / 2);\n\n            // \u5b9a\u4f4d\u5706\u5fc3\n            if (isSelected) {\n                oX += offset * Math.cos(midAngle * Math.PI / 180);\n                oY += offset * Math.sin(midAngle * Math.PI / 180);\n            } else {\n                oX = getWidth() / 2;\n                oY = (getHeight() - marginBottom) / 2;\n            }\n\n            left = oX - r;\n            right = oX + r;\n            top = oY - r;\n            bottom = oY + r;\n\n            midX = (float) (oX + Math.cos(midAngle * Math.PI / 180) * r);\n            midY = (float) (oY + Math.sin(midAngle * Math.PI / 180) * r);\n\n            line1X = (float) (oX + Math.cos(midAngle * Math.PI / 180) * (r + line1));\n            line1Y = (float) (oY + Math.sin(midAngle * Math.PI / 180) * (r + line1));\n\n            if (line1X > oX) {\n                // \u7ebf\u5728\u53f3\u4fa7\n                line2 = (int) (getWidth() - line1X - marginPhone);\n            } else {\n                // \u7ebf\u5728\u5de6\u4fa7\n                line2 = (int) (getWidth() / 2 - (getWidth() / 2 - line1X) - marginPhone);\n            }\n\n            line2X = Math.abs(midAngle) <= 90 ? line1X + line2 : line1X - line2;\n            line2Y = line1Y;\n\n            txtX = Math.abs(midAngle) <= 90 ? line2X + 20 : line2X - 20;\n            txtY = line1Y;\n\n            // \u7ed8\u5236\u6298\u7ebf\n            mPaint.setStyle(Paint.Style.STROKE);\n            mPaint.setColor(Color.BLACK);\n            mPath.moveTo(midX, midY);\n            mPath.lineTo(line1X, line1Y);\n            mPath.lineTo(line2X, line2Y);\n            canvas.drawPath(mPath, mPaint);\n\n            // \u7ed8\u5236\u624b\u673a\u5382\u5546\u540d\n            txtPaint.setStyle(Paint.Style.FILL);\n            txtPaint.setColor(Color.BLACK);\n            txtPaint.setTextSize(24);\n            if (Math.abs(midAngle) <= 90) {\n                txtPaint.setTextAlign(Paint.Align.LEFT);\n            } else {\n                txtPaint.setTextAlign(Paint.Align.RIGHT);\n            }\n            String name = phoneModels.get(i).brand + \" \" + phoneModels.get(i).percent + \" %\";\n            canvas.drawText(name, txtX, txtY, txtPaint);\n\n            // \u7ed8\u5236\u6247\u5f62\n            mPaint.setStyle(Paint.Style.FILL);\n            mPaint.setColor(getResources().getColor(phoneModels.get(i).color));\n            mRectF.set(left, top, right, bottom);\n            canvas.drawArc(mRectF, startAngle, (float) percent, true, mPaint);\n        }\n    }", "url": "https://raw.githubusercontent.com/Geekholt/Practice-CustomView/master/app/src/main/java/com/geekholt/practiceui/view/lesson1/Practice11PieChartView.java", "stars": "2", "class_props": {"extends": "View", "implements": null, "modifiers": ["public"]}}, {"id": 63809, "method_name": "leader", "class_name": "GalacticCouncil", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Empire", "snippet": "    public Empire leader()             { return leader; }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/empires/GalacticCouncil.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Serializable"], "modifiers": ["public"]}}, {"id": 63810, "method_name": "leader", "class_name": "GalacticCouncil", "params": ["Empire"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void leader(Empire e)       { leader = e; }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/empires/GalacticCouncil.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Serializable"], "modifiers": ["public"]}}, {"id": 63811, "method_name": "allies", "class_name": "GalacticCouncil", "params": [], "throws": null, "modifiers": ["public"], "return_type": "List<Empire>", "snippet": "    public List<Empire>  allies()      { return allies; }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/empires/GalacticCouncil.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Serializable"], "modifiers": ["public"]}}, {"id": 63812, "method_name": "finalWar", "class_name": "GalacticCouncil", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean finalWar()          { return !rebels.isEmpty(); }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/empires/GalacticCouncil.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Serializable"], "modifiers": ["public"]}}, {"id": 63813, "method_name": "addAlly", "class_name": "GalacticCouncil", "params": ["Empire"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void addAlly(Empire e)      { allies.add(e); }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/empires/GalacticCouncil.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Serializable"], "modifiers": ["public"]}}, {"id": 63814, "method_name": "addRebel", "class_name": "GalacticCouncil", "params": ["Empire"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void addRebel(Empire e)     { rebels.add(e); }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/empires/GalacticCouncil.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Serializable"], "modifiers": ["public"]}}, {"id": 63815, "method_name": "isAllied", "class_name": "GalacticCouncil", "params": ["Empire"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean isAllied(Empire e)  { return allies.contains(e); }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/empires/GalacticCouncil.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Serializable"], "modifiers": ["public"]}}, {"id": 63816, "method_name": "empires", "class_name": "GalacticCouncil", "params": [], "throws": null, "modifiers": ["public"], "return_type": "List<Empire>", "snippet": "    public List<Empire> empires() {\n        if (empires == null) \n            initEmpires();\n        return empires;\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/empires/GalacticCouncil.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Serializable"], "modifiers": ["public"]}}, {"id": 63817, "method_name": "init", "class_name": "GalacticCouncil", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void init() {\n        if (galaxy().numActiveEmpires() > 2)\n            nextAction = CHECK;\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/empires/GalacticCouncil.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Serializable"], "modifiers": ["public"]}}, {"id": 63818, "method_name": "checkIfDisband", "class_name": "GalacticCouncil", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void checkIfDisband() {\n        int num = galaxy().numActiveEmpires();\n        if (active() &&  (num < 3)) {\n            if (num == 2)\n                GNNNotification.notifyCouncil(text(\"GNN_END_COUNCIL\"));\n            end();\n        }\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/empires/GalacticCouncil.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Serializable"], "modifiers": ["public"]}}, {"id": 63819, "method_name": "nextTurn", "class_name": "GalacticCouncil", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void nextTurn() {\n        if (galaxy().numActiveEmpires() < 3)\n            return;\n        if (disbanded())\n            return;\n\n        actionCountdown--;\n        if (actionCountdown > 0)\n            return;\n\n        switch (nextAction) {\n            case CHECK:    checkFormation(); break;\n            case SCHEDULE: schedule(); break;\n            case CONVENE:  convene(); break;\n        }\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/empires/GalacticCouncil.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Serializable"], "modifiers": ["public"]}}, {"id": 63820, "method_name": "inactive", "class_name": "GalacticCouncil", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean inactive()         { return currentStatus == INACTIVE; }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/empires/GalacticCouncil.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Serializable"], "modifiers": ["public"]}}, {"id": 63821, "method_name": "active", "class_name": "GalacticCouncil", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean active()           { return currentStatus == ACTIVE; }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/empires/GalacticCouncil.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Serializable"], "modifiers": ["public"]}}, {"id": 63822, "method_name": "disbanded", "class_name": "GalacticCouncil", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean disbanded()        { return currentStatus == DISBANDED; }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/empires/GalacticCouncil.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Serializable"], "modifiers": ["public"]}}, {"id": 63823, "method_name": "checkFormation", "class_name": "GalacticCouncil", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void checkFormation() {\n        Galaxy gal = galaxy();\n        int limit = (int) Math.ceil(gal.numStarSystems()*PCT_REQUIRED);\n        float colonized = 0;\n        for (int i=0; i<gal.numStarSystems(); i++) {\n            StarSystem sys = gal.system(i);\n            if (sys.isColonized())\n                colonized++;\n        }\n        if (colonized >= limit) {\n            currentStatus = ACTIVE;\n            schedule();\n        }\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/empires/GalacticCouncil.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Serializable"], "modifiers": ["public"]}}, {"id": 63824, "method_name": "schedule", "class_name": "GalacticCouncil", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void schedule() {\n        galaxy().giveAdvice(\"MAIN_ADVISOR_COUNCIL\");\n        GNNNotification.notifyCouncil(text(\"GNN_FORM_COUNCIL\"));\n        nextAction = CONVENE;\n        actionCountdown = noticeDuration;\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/empires/GalacticCouncil.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Serializable"], "modifiers": ["public"]}}, {"id": 63825, "method_name": "convene", "class_name": "GalacticCouncil", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void convene() {\n        openConvention();\n        CouncilVoteNotification.create();\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/empires/GalacticCouncil.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Serializable"], "modifiers": ["public"]}}, {"id": 63826, "method_name": "votingInProgress", "class_name": "GalacticCouncil", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean votingInProgress()  { return voteIndex < empires.size(); }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/empires/GalacticCouncil.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Serializable"], "modifiers": ["public"]}}, {"id": 63827, "method_name": "hasVoted", "class_name": "GalacticCouncil", "params": ["Empire"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean hasVoted(Empire e)  { return empires.indexOf(e) < voteIndex; }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/empires/GalacticCouncil.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Serializable"], "modifiers": ["public"]}}, {"id": 63828, "method_name": "votes", "class_name": "GalacticCouncil", "params": ["Empire"], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int votes(Empire e)         { return votes[empires.indexOf(e)]; }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/empires/GalacticCouncil.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Serializable"], "modifiers": ["public"]}}, {"id": 63829, "method_name": "nextVoter", "class_name": "GalacticCouncil", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Empire", "snippet": "    public Empire nextVoter()  { return empires.get(voteIndex); }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/empires/GalacticCouncil.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Serializable"], "modifiers": ["public"]}}, {"id": 63830, "method_name": "candidate1", "class_name": "GalacticCouncil", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Empire", "snippet": "    public Empire candidate1() { return candidate1; }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/empires/GalacticCouncil.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Serializable"], "modifiers": ["public"]}}, {"id": 63831, "method_name": "candidate2", "class_name": "GalacticCouncil", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Empire", "snippet": "    public Empire candidate2() { return candidate2; }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/empires/GalacticCouncil.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Serializable"], "modifiers": ["public"]}}, {"id": 63832, "method_name": "lastVoter", "class_name": "GalacticCouncil", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Empire", "snippet": "    public Empire lastVoter()  { return lastVoter; }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/empires/GalacticCouncil.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Serializable"], "modifiers": ["public"]}}, {"id": 63833, "method_name": "lastVoted", "class_name": "GalacticCouncil", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Empire", "snippet": "    public Empire lastVoted()  { return lastVoted; }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/empires/GalacticCouncil.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Serializable"], "modifiers": ["public"]}}, {"id": 63834, "method_name": "totalVotes", "class_name": "GalacticCouncil", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int totalVotes()    { return totalVotes; }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/empires/GalacticCouncil.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Serializable"], "modifiers": ["public"]}}, {"id": 63835, "method_name": "votesToElect", "class_name": "GalacticCouncil", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int votesToElect()  { return (int) Math.ceil(totalVotes * 2 / 3.0); }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/empires/GalacticCouncil.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Serializable"], "modifiers": ["public"]}}, {"id": 63836, "method_name": "votes1", "class_name": "GalacticCouncil", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int votes1()        { return votes1; }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/empires/GalacticCouncil.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Serializable"], "modifiers": ["public"]}}, {"id": 63837, "method_name": "votes2", "class_name": "GalacticCouncil", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int votes2()        { return votes2; }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/empires/GalacticCouncil.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Serializable"], "modifiers": ["public"]}}, {"id": 63838, "method_name": "lastVotes", "class_name": "GalacticCouncil", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int lastVotes()     { return lastVotes; }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/empires/GalacticCouncil.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Serializable"], "modifiers": ["public"]}}, {"id": 63839, "method_name": "nextVotes", "class_name": "GalacticCouncil", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int nextVotes()     { return votes[voteIndex]; }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/empires/GalacticCouncil.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Serializable"], "modifiers": ["public"]}}, {"id": 63840, "method_name": "hasLeader", "class_name": "GalacticCouncil", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean hasLeader() { return leader != null; }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/empires/GalacticCouncil.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Serializable"], "modifiers": ["public"]}}, {"id": 63841, "method_name": "castNextVote", "class_name": "GalacticCouncil", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void castNextVote() {\n        // will not cast vote for player\n        if (!nextVoter().isPlayer())\n            castNextVote(nextVoter().diplomatAI().councilVoteFor(candidate1(), candidate2()));\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/empires/GalacticCouncil.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Serializable"], "modifiers": ["public"]}}, {"id": 63842, "method_name": "castPlayerVote", "class_name": "GalacticCouncil", "params": ["Empire"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void castPlayerVote(Empire chosen) {\n        if (nextVoter().isPlayer())\n            castNextVote(chosen);\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/empires/GalacticCouncil.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Serializable"], "modifiers": ["public"]}}, {"id": 63843, "method_name": "nextVoteWouldElect", "class_name": "GalacticCouncil", "params": ["Empire"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean nextVoteWouldElect(Empire emp) {\n        if ((emp != candidate1())\n        && (emp != candidate2()))\n            return false;\n        int votesAlreadyCast = emp == candidate1() ? votes1() : votes2();\n        return (nextVotes() + votesAlreadyCast) >= votesToElect();\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/empires/GalacticCouncil.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Serializable"], "modifiers": ["public"]}}, {"id": 63844, "method_name": "castNextVote", "class_name": "GalacticCouncil", "params": ["Empire"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void castNextVote(Empire chosen) {\n        lastVoter = empires.get(voteIndex);\n        lastVotes = votes[voteIndex];\n\n        if (chosen == candidate1) {\n            lastVoter.lastCouncilVoteEmpId(id(candidate1));\n            votes1 += lastVotes;\n            lastVoted = candidate1;\n        }\n        else if (chosen == candidate2) {\n            lastVoter.lastCouncilVoteEmpId(id(candidate2));\n            votes2 += lastVotes;\n            lastVoted = candidate2;\n        }\n        else {\n            lastVoter.lastCouncilVoteEmpId(Empire.ABSTAIN_ID);\n            lastVoted = null;\n        }\n\n        voteIndex++;\n        if (!votingInProgress())\n            closeConvention();\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/empires/GalacticCouncil.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Serializable"], "modifiers": ["public"]}}, {"id": 63845, "method_name": "end", "class_name": "GalacticCouncil", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void end() {\n        currentStatus = DISBANDED;\n        if (leader == null)\n            return;\n        \n        boolean playerWasAllied = player().alliedWith(leader.id);\n\n        boolean electedLeaderIsCrazy = rebels.contains(leader);\n        if (electedLeaderIsCrazy) {\n            Empire crazyEmpire = leader;\n            if (crazyEmpire == candidate1)\n                leader = candidate2;\n            else\n                leader = candidate1;\n            allies.addAll(rebels);\n            allies.remove(crazyEmpire);\n            rebels.clear();\n            rebels.add(crazyEmpire);\n        }\n        \n        // if player won the vote and no rebels, game over\n        if (leader.isPlayer() && rebels.isEmpty()) {\n            session().status().winDiplomatic();\n            return;\n        }\n        // if player accepted ruling, also game over\n        else if (!leader.isPlayer() && allies.contains(player())) {\n            if (playerWasAllied)\n                session().status().winCouncilAlliance();\n            else\n                session().status().loseDiplomatic();\n            return;\n        }\n\n        // final war: player is rebelling aginst leader, or player\n        // is leader and at least one AI is rebelling\n        if (leader.isPlayer())\n            galaxy().giveAdvice(\"MAIN_ADVISOR_COUNCIL_RESISTED\", leader.raceName());                   \n        else \n            galaxy().giveAdvice(\"MAIN_ADVISOR_RESIST_COUNCIL\");\n\n        // all members of alliance declare final war on player and all rebels\n        // everyone gets the incident first. Once Final War is declared, no\n        // more incidents are checked\n        for (Empire rebel: rebels) {\n            for (Empire ally: allies) {\n                FinalWarIncident.create(ally, leader, rebel);\n            }\n        }\n        \n        // all members of alliance declare final war on player and all rebels\n        for (Empire rebel: rebels) {\n            for (Empire ally: allies) {\n                ally.viewForEmpire(rebel).embassy().declareFinalWar();\n            }\n        }\n        \n        // all mmembers of alliance establish unity with each other\n        // this ensures no spying costs and all learned techs traded freely\n        for (Empire ally1: allies) {\n            for (Empire ally2: allies) {\n                if (ally1 != ally2) {\n                    EmpireView v = ally1.viewForEmpire(ally2);\n                    v.embassy().establishUnity();\n                }\n            }\n        }\n        // all members of alliance share techs with leader\n        for (Empire ally: allies) {\n            for (Tech tech : ally.tech().techsUnknownTo(leader))\n                leader.tech().acquireTechThroughTrade(tech.id, ally.id);\n        }\n        // leader then shares all techs with allies\n        for (Empire ally: allies) {\n            for (Tech tech : leader.tech().techsUnknownTo(ally))\n                ally.tech().acquireTechThroughTrade(tech.id, leader.id);\n        }\n        if (leader.isPlayer()) {\n            for (Empire rebel: rebels) {\n                EmpireView v = rebel.viewForEmpire(leader);\n                DiplomaticNotification.create(v, DialogueManager.WARNING_REBELLING_AGAINST); \n            }\n        }\n        else {\n            for (Empire rebel: rebels) {\n                if (!rebel.isPlayer()) {\n                    EmpireView v = rebel.viewForEmpire(leader);\n                    DiplomaticNotification.create(v, DialogueManager.PRAISE_REBELLING_WITH); \n                }\n            }\n        }\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/empires/GalacticCouncil.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Serializable"], "modifiers": ["public"]}}, {"id": 63846, "method_name": "openConvention", "class_name": "GalacticCouncil", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void openConvention() {\n        initConventionVars();\n\n        // calculate vote total for each empire\n        for (int i = 0; i <empires.size(); i++) {\n            Empire voter = empires.get(i);\n            votes[i] = (int) Math.ceil(voter.totalPlanetaryPopulation() / 100);\n            totalVotes += votes[i];\n        }\n\n        log(\"Convening council. # empires: \" + empires.size());\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/empires/GalacticCouncil.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Serializable"], "modifiers": ["public"]}}, {"id": 63847, "method_name": "initEmpires", "class_name": "GalacticCouncil", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void initEmpires() {\n        empires = galaxy().activeEmpires();\n        Collections.sort(empires, Empire.TOTAL_POPULATION);\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/empires/GalacticCouncil.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Serializable"], "modifiers": ["public"]}}, {"id": 63848, "method_name": "initConventionVars", "class_name": "GalacticCouncil", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void initConventionVars() {\n        initEmpires();\n        votes = new int[empires().size()];\n        votes1 = 0;\n        votes2 = 0;\n        candidate1 = empires.get(0);\n        candidate2 = empires.get(1);\n        voteIndex = 0;\n        totalVotes = 0;\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/empires/GalacticCouncil.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Serializable"], "modifiers": ["public"]}}, {"id": 63849, "method_name": "closeConvention", "class_name": "GalacticCouncil", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void closeConvention() {\n        // determine leader\n        int minVotes = this.votesToElect();\n        leader = null;\n\n        if (votes1 >= minVotes)\n            leader = candidate1;\n        else if (votes2 >= minVotes)\n            leader = candidate2;\n\n        List<Empire> allVoters = new ArrayList<>(empires);\n        // if leader is elected, ask all empires to accept ruling\n        if (leader != null) {\n            rebels.addAll(allVoters);\n            for (Empire c : allVoters)\n                c.diplomatAI().acceptCouncilRuling(this);\n            return;\n        }\n        else \n            ensureFullContact();\n\n\n        // create incidents between voters and the candidates\n        for (Empire voter: empires) {\n            Empire lastVote = galaxy().empire(voter.lastCouncilVoteEmpId());\n            CouncilVoteIncident.create(candidate1.viewForEmpire(voter), lastVote, candidate2);\n            CouncilVoteIncident.create(candidate2.viewForEmpire(voter), lastVote, candidate1);\n        }\n\n        // schedule next council\n        nextAction = SCHEDULE;\n        actionCountdown = interval;\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/empires/GalacticCouncil.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Serializable"], "modifiers": ["public"]}}, {"id": 63850, "method_name": "defyRuling", "class_name": "GalacticCouncil", "params": ["Empire"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void defyRuling(Empire e) {\n        empires.remove(e);\n        if (empires.isEmpty())\n            end();\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/empires/GalacticCouncil.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Serializable"], "modifiers": ["public"]}}, {"id": 63851, "method_name": "acceptRuling", "class_name": "GalacticCouncil", "params": ["Empire"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void acceptRuling(Empire e) {\n        empires.remove(e);\n        rebels.remove(e);\n        allies.add(e);\n        if (empires.isEmpty())\n            end();\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/empires/GalacticCouncil.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Serializable"], "modifiers": ["public"]}}, {"id": 63852, "method_name": "removeEmpire", "class_name": "GalacticCouncil", "params": ["Empire"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void removeEmpire(Empire deadEmpire) {\n        allies.remove(deadEmpire);\n        rebels.remove(deadEmpire);\n        \n        if (deadEmpire.isPlayer()) {\n            if (leader().isPlayer())\n                // player was leader of alliance and still lost!\n                session().status().loseNewRepublic();\n            else\n                // player was a rebel against alliance and lost\n                session().status().loseRebellion();\n        }\n        else {\n            if (rebels.isEmpty() && leader().isPlayer())\n                // rebellion has been defeated\n                session().status().winNewRepublic();\n            else if (allies.isEmpty() && !leader().isPlayer()) {\n                // New Republic has been defeated\n                if (rebels.size() == 1) \n                    session().status().winRebellion();\n                else\n                    session().status().winRebellionAlliance();\n            }               \n        }\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/empires/GalacticCouncil.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Serializable"], "modifiers": ["public"]}}, {"id": 63853, "method_name": "ensureFullContact", "class_name": "GalacticCouncil", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void ensureFullContact() {\n        List<Empire> emps = new ArrayList<>(galaxy().activeEmpires());\n        for (Empire emp1: galaxy().activeEmpires()) {\n            emps.remove(emp1);\n            for (Empire emp2: emps)\n                emp1.makeContact(emp2);\n        }\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/empires/GalacticCouncil.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Serializable"], "modifiers": ["public"]}}, {"id": 63854, "method_name": "setup", "class_name": "GardenFieldSearchIT", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setup() {\n        GardenFieldController gardenFieldController = new GardenFieldController(gardenFieldService, leasingService);\n\n        this.restGardenFieldMockMvc = MockMvcBuilders.standaloneSetup(gardenFieldController)\n            .setCustomArgumentResolvers(pageableArgumentResolver)\n            .setControllerAdvice(exceptionTranslator)\n            .setMessageConverters(jacksonMessageConverter)\n            .build();\n\n        User user = new User();\n        user.setLogin(DEFAULT_LOGIN);\n        user.setPassword(RandomStringUtils.random(60));\n        user.setActivated(true);\n        user.setEmail(RandomStringUtils.randomAlphabetic(5) + DEFAULT_EMAIL);\n        user.setFirstName(DEFAULT_FIRSTNAME);\n        user.setLastName(DEFAULT_LASTNAME);\n        user.setBankAccountIBAN(DEFAULT_IBAN);\n        user.setStripeAccountVerified(true);\n        User savedUser = userRepository.saveAndFlush(user);\n        simpleUserDTO = simpleUserMapper.toDTO(savedUser);\n    }", "url": "https://raw.githubusercontent.com/gardle/gardle-web/master/src/test/java/com/gardle/web/rest/GardenFieldSearchIT.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 63855, "method_name": "searchGardenFieldForDescription", "class_name": "GardenFieldSearchIT", "params": [], "throws": ["Exception"], "modifiers": ["public"], "return_type": "void", "snippet": "    public void searchGardenFieldForDescription() throws Exception {\n        String name1 = \"garden1\";\n        String name2 = \"garden2\";\n        String name3 = \"garden3\";\n        String desc1 = \"Wenig Sonne, kleines Gartenfeld.\";\n        String desc2 = \"Netter Garten in ruhiger Umgebung\";\n        String desc3 = \"Cooler Garten mit viel Sonne\";\n\n        GardenFieldDTO gardenFieldDTO1 = createGardenFieldDTOWithoutOwner();\n        GardenFieldDTO gardenFieldDTO2 = createGardenFieldDTOWithoutOwner();\n        GardenFieldDTO gardenFieldDTO3 = createGardenFieldDTOWithoutOwner();\n\n        gardenFieldDTO1.setOwner(simpleUserDTO);\n        gardenFieldDTO1.setName(name1);\n        gardenFieldDTO1.setDescription(desc1);\n\n        gardenFieldDTO2.setOwner(simpleUserDTO);\n        gardenFieldDTO2.setName(name2);\n        gardenFieldDTO2.setDescription(desc2);\n\n        gardenFieldDTO3.setOwner(simpleUserDTO);\n        gardenFieldDTO3.setName(name3);\n        gardenFieldDTO3.setDescription(desc3);\n\n        gardenFieldService.createGardenField(gardenFieldDTO1);\n        gardenFieldService.createGardenField(gardenFieldDTO2);\n        gardenFieldService.createGardenField(gardenFieldDTO3);\n\n        restGardenFieldMockMvc.perform(get(\"/api/v1/gardenfields/filter?keywords=Sonne\")\n            .accept(MediaType.APPLICATION_JSON))\n            .andDo(MockMvcResultHandlers.print())\n            .andExpect(status().isOk())\n            .andExpect(content().contentType(MediaType.APPLICATION_JSON_UTF8_VALUE))\n            .andExpect(jsonPath(\"$.content.length()\").value(is(2)))\n            .andExpect(jsonPath(\"$.content.[0].name\").value(is(\"garden1\")))\n            .andExpect(jsonPath(\"$.content.[1].name\").value(is(\"garden3\")));\n    }", "url": "https://raw.githubusercontent.com/gardle/gardle-web/master/src/test/java/com/gardle/web/rest/GardenFieldSearchIT.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 63856, "method_name": "testGardenFieldFilterLocation", "class_name": "GardenFieldSearchIT", "params": [], "throws": ["Exception"], "modifiers": ["public"], "return_type": "void", "snippet": "    public void testGardenFieldFilterLocation() throws Exception {\n        String filterString = \"latitude=\" + LATITUDE + \"&longitude=\" + LONGITUDE + \"&radiusInKM=50\";\n        String name1 = \"gardenname1\";\n        String name2 = \"gardenname2\";\n\n        GardenFieldDTO gardenFieldDTO1 = createGardenFieldDTOWithoutOwner();\n        GardenFieldDTO gardenFieldDTO2 = createGardenFieldDTOWithoutOwner();\n        GardenFieldDTO gardenFieldDTO3 = createGardenFieldDTOWithoutOwner();\n\n        gardenFieldDTO1.setOwner(simpleUserDTO);\n        gardenFieldDTO1.setName(name1);\n        gardenFieldDTO1.setLatitude(LATITUDE);\n        gardenFieldDTO1.setLongitude(LONGITUDE);\n\n        gardenFieldDTO2.setOwner(simpleUserDTO);\n        gardenFieldDTO2.setName(name2);\n        gardenFieldDTO2.setLatitude(LATITUDE + 0.1);\n        gardenFieldDTO2.setLongitude(LONGITUDE + 0.1);\n\n        gardenFieldDTO3.setOwner(simpleUserDTO);\n        //gardenfield 3 should not be in the radius 5, as gardenfield 1 and 2 are\n        gardenFieldDTO3.setLatitude(LATITUDE + 123.23);\n        gardenFieldDTO3.setLongitude(LONGITUDE + 13.876);\n\n        gardenFieldService.createGardenField(gardenFieldDTO1);\n        gardenFieldService.createGardenField(gardenFieldDTO2);\n        gardenFieldService.createGardenField(gardenFieldDTO3);\n\n        restGardenFieldMockMvc.perform(get(\"/api/v1/gardenfields/filter?\" + filterString)\n            .accept(MediaType.APPLICATION_JSON))\n            .andDo(MockMvcResultHandlers.print())\n            .andExpect(status().isOk())\n            .andExpect(content().contentType(MediaType.APPLICATION_JSON_UTF8_VALUE))\n            .andExpect(jsonPath(\"$.content.length()\").value(is(2)))\n            .andExpect(jsonPath(\"$.content.[0].name\").value(is(name1)))\n            .andExpect(jsonPath(\"$.content.[1].name\").value(is(name2)));\n    }", "url": "https://raw.githubusercontent.com/gardle/gardle-web/master/src/test/java/com/gardle/web/rest/GardenFieldSearchIT.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 63857, "method_name": "testGardenFieldFilterSize", "class_name": "GardenFieldSearchIT", "params": [], "throws": ["Exception"], "modifiers": ["public"], "return_type": "void", "snippet": "    public void testGardenFieldFilterSize() throws Exception {\n        String filterString = \"sizeInM2LowerBound=3&sizeInM2UpperBound=9\";\n        String name1 = \"gardenfield1\";\n        String name2 = \"gardenfield2\";\n        String name3 = \"gardenfield3\";\n\n        GardenFieldDTO gardenFieldDTO1 = createGardenFieldDTOWithoutOwner();\n        gardenFieldDTO1.setName(name1);\n        gardenFieldDTO1.setSizeInM2(5.0);\n        gardenFieldDTO1.setOwner(simpleUserDTO);\n\n        GardenFieldDTO gardenFieldDTO2 = createGardenFieldDTOWithoutOwner();\n        gardenFieldDTO2.setName(name2);\n        gardenFieldDTO2.setSizeInM2(8.9);\n        gardenFieldDTO2.setOwner(simpleUserDTO);\n\n        GardenFieldDTO gardenFieldDTO3 = createGardenFieldDTOWithoutOwner();\n        gardenFieldDTO3.setName(name3);\n        gardenFieldDTO3.setSizeInM2(10.0);\n        gardenFieldDTO3.setOwner(simpleUserDTO);\n\n        gardenFieldService.createGardenField(gardenFieldDTO1);\n        gardenFieldService.createGardenField(gardenFieldDTO2);\n        gardenFieldService.createGardenField(gardenFieldDTO3);\n\n        restGardenFieldMockMvc.perform(get(\"/api/v1/gardenfields/filter?\" + filterString)\n            .accept(MediaType.APPLICATION_JSON))\n            .andDo(MockMvcResultHandlers.print())\n            .andExpect(status().isOk())\n            .andExpect(content().contentType(MediaType.APPLICATION_JSON_UTF8_VALUE))\n            .andExpect(jsonPath(\"$.content.[0].name\").value(is(name1)))\n            .andExpect(jsonPath(\"$.content.[1].name\").value(is(name2)))\n            .andExpect(jsonPath(\"$.content.length()\").value(is(2)));\n    }", "url": "https://raw.githubusercontent.com/gardle/gardle-web/master/src/test/java/com/gardle/web/rest/GardenFieldSearchIT.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 63858, "method_name": "testGardenFieldFilterWithInvalidCriteriaMissingRadius_shouldReturnValidationError", "class_name": "GardenFieldSearchIT", "params": [], "throws": ["Exception"], "modifiers": ["public"], "return_type": "void", "snippet": "    public void testGardenFieldFilterWithInvalidCriteriaMissingRadius_shouldReturnValidationError() throws Exception {\n        String filterString = \"latitude=1.0&longitude=2.0\";\n\n        GardenFieldDTO gardenFieldDTO1 = createGardenFieldDTOWithoutOwner();\n        GardenFieldDTO gardenFieldDTO2 = createGardenFieldDTOWithoutOwner();\n        GardenFieldDTO gardenFieldDTO3 = createGardenFieldDTOWithoutOwner();\n\n        gardenFieldDTO1.setOwner(simpleUserDTO);\n        gardenFieldDTO2.setOwner(simpleUserDTO);\n        gardenFieldDTO3.setOwner(simpleUserDTO);\n\n        gardenFieldDTO1.setSizeInM2(5.0);\n        gardenFieldDTO2.setSizeInM2(10.0);\n        gardenFieldDTO3.setSizeInM2(8.9);\n\n        gardenFieldService.createGardenField(gardenFieldDTO1);\n        gardenFieldService.createGardenField(gardenFieldDTO2);\n        gardenFieldService.createGardenField(gardenFieldDTO3);\n\n        Exception exception = restGardenFieldMockMvc.perform(get(\"/api/v1/gardenfields/filter?\" + filterString)\n            .accept(MediaType.APPLICATION_JSON))\n            .andDo(MockMvcResultHandlers.print())\n            .andExpect(status().isBadRequest())\n            .andReturn().getResolvedException();\n        assertThat(Objects.requireNonNull(exception).getMessage()).contains(\"filter\").contains(\"invalid\");\n    }", "url": "https://raw.githubusercontent.com/gardle/gardle-web/master/src/test/java/com/gardle/web/rest/GardenFieldSearchIT.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 63859, "method_name": "testLeasingTimeFromTofilter", "class_name": "GardenFieldSearchIT", "params": [], "throws": ["Exception"], "modifiers": ["public"], "return_type": "void", "snippet": "    public void testLeasingTimeFromTofilter() throws Exception {\n        String filterString = \"leasingTimeFrom=2021-01-01T04:00:00.000Z&leasingTimeTo=2021-04-01T04:00:00.000Z\";\n        String name1 = \"gardenname1\";\n        GardenFieldDTO gardenFieldDTO1 = createGardenFieldDTOWithoutOwner();\n        gardenFieldDTO1.setName(name1);\n        GardenFieldDTO gardenFieldDTO2 = createGardenFieldDTOWithoutOwner();\n\n        gardenFieldDTO1.setOwner(simpleUserDTO);\n        gardenFieldDTO2.setOwner(simpleUserDTO);\n\n        gardenFieldDTO1.setSizeInM2(5.0);\n        gardenFieldDTO2.setSizeInM2(10.0);\n\n        gardenFieldDTO1 = gardenFieldService.createGardenField(gardenFieldDTO1);\n        gardenFieldDTO2 = gardenFieldService.createGardenField(gardenFieldDTO2);\n\n        GardenField gardenField1 = gardenFieldRepository.findById(gardenFieldDTO1.getId()).get();\n        GardenField gardenField2 = gardenFieldRepository.findById(gardenFieldDTO2.getId()).get();\n\n        Leasing leasing1 = new Leasing()\n            .from(Instant.parse(\"2020-01-01T04:00:00.000Z\"))\n            .to(Instant.parse(\"2020-10-01T04:00:50.000Z\"))\n            .status(LeasingStatus.RESERVED)\n            .gardenField(gardenField1)\n            .paymentSessionId(DEFAULT_PAYMENT_SESSION_ID)\n            .user(userRepository.getOne(simpleUserDTO.getId()));\n        Leasing leasing2 = new Leasing()\n            .from(Instant.parse(\"2021-03-01T04:00:00.000Z\"))\n            .to(Instant.parse(\"2021-10-01T04:00:50.000Z\"))\n            .status(LeasingStatus.RESERVED)\n            .gardenField(gardenField2)\n            .paymentSessionId(DEFAULT_PAYMENT_SESSION_ID)\n            .user(userRepository.getOne(simpleUserDTO.getId()));\n        leasingRepository.save(leasing1);\n        leasingRepository.save(leasing2);\n        leasingRepository.flush();\n        gardenField1.setLeasings(Collections.singletonList(leasing1));\n        gardenField2.setLeasings(Collections.singletonList(leasing2));\n        gardenFieldRepository.save(gardenField1);\n        gardenFieldRepository.save(gardenField2);\n        gardenFieldRepository.flush();\n\n        restGardenFieldMockMvc.perform(get(\"/api/v1/gardenfields/filter?\" + filterString)\n            .accept(MediaType.APPLICATION_JSON))\n            .andDo(MockMvcResultHandlers.print())\n            .andExpect(status().isOk())\n            .andExpect(content().contentType(MediaType.APPLICATION_JSON_UTF8_VALUE))\n            .andExpect(jsonPath(\"$.content.length()\").value(is(1)))\n            .andExpect(jsonPath(\"$.content.[0].name\").value(is(name1)));\n    }", "url": "https://raw.githubusercontent.com/gardle/gardle-web/master/src/test/java/com/gardle/web/rest/GardenFieldSearchIT.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 63860, "method_name": "testBooleanFilters", "class_name": "GardenFieldSearchIT", "params": [], "throws": ["Exception"], "modifiers": ["public"], "return_type": "void", "snippet": "    public void testBooleanFilters() throws Exception {\n        String filterString = \"water=true&electricity=true&roofed=false&high=false&glassHouse=false\";\n        GardenFieldDTO gardenFieldDTO1 = createGardenFieldDTO();\n        GardenFieldDTO gardenFieldDTO2 = createGardenFieldDTO();\n        GardenFieldDTO gardenFieldDTO3 = createGardenFieldDTO();\n\n        gardenFieldDTO1.setWater(true);\n        gardenFieldDTO1.setElectricity(true);\n        gardenFieldDTO1.setRoofed(false);\n        gardenFieldDTO1.setHigh(false);\n        gardenFieldDTO1.setGlassHouse(false);\n        gardenFieldDTO1.setName(\"gardenname1\");\n\n        gardenFieldService.createGardenField(gardenFieldDTO1);\n        gardenFieldService.createGardenField(gardenFieldDTO2);\n        gardenFieldService.createGardenField(gardenFieldDTO3);\n\n        restGardenFieldMockMvc.perform(get(\"/api/v1/gardenfields/filter?\" + filterString)\n            .accept(MediaType.APPLICATION_JSON))\n            .andDo(MockMvcResultHandlers.print())\n            .andExpect(status().isOk())\n            .andExpect(content().contentType(MediaType.APPLICATION_JSON_UTF8_VALUE))\n            .andExpect(jsonPath(\"$.content.length()\").value(is(1)))\n            .andExpect(jsonPath(\"$.content.[0].name\").value(is(\"gardenname1\")));\n    }", "url": "https://raw.githubusercontent.com/gardle/gardle-web/master/src/test/java/com/gardle/web/rest/GardenFieldSearchIT.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 63861, "method_name": "testGardenFieldCombinedFilter", "class_name": "GardenFieldSearchIT", "params": [], "throws": ["Exception"], "modifiers": ["public"], "return_type": "void", "snippet": "    public void testGardenFieldCombinedFilter() throws Exception {\n        String filterString = \"maxPrice=300.0&roofed=true&latitude=1.0&longitude=2.0&radiusInKM=5\";\n        String name1 = \"gardenname1\";\n        GardenFieldDTO gardenFieldDTO1 = createGardenFieldDTOWithoutOwner();\n        GardenFieldDTO gardenFieldDTO2 = createGardenFieldDTOWithoutOwner();\n        GardenFieldDTO gardenFieldDTO3 = createGardenFieldDTOWithoutOwner();\n\n        gardenFieldDTO1.setOwner(simpleUserDTO);\n        gardenFieldDTO1.setName(name1);\n        gardenFieldDTO2.setOwner(simpleUserDTO);\n        gardenFieldDTO3.setOwner(simpleUserDTO);\n\n        gardenFieldDTO1.setPricePerM2(1.0);\n        gardenFieldDTO1.setRoofed(true);\n        gardenFieldDTO1.setSizeInM2(10.0);\n\n        gardenFieldDTO2.setPricePerM2(1.5);\n        gardenFieldDTO2.setRoofed(false);\n        gardenFieldDTO2.setSizeInM2(10.0);\n\n        gardenFieldDTO3.setPricePerM2(2.1);\n        gardenFieldDTO3.setRoofed(true);\n        gardenFieldDTO3.setSizeInM2(10.0);\n\n        gardenFieldService.createGardenField(gardenFieldDTO1);\n        gardenFieldService.createGardenField(gardenFieldDTO2);\n        gardenFieldService.createGardenField(gardenFieldDTO3);\n\n        restGardenFieldMockMvc.perform(get(\"/api/v1/gardenfields/filter?\" + filterString)\n            .accept(MediaType.APPLICATION_JSON))\n            .andDo(MockMvcResultHandlers.print())\n            .andExpect(status().isOk())\n            .andExpect(content().contentType(MediaType.APPLICATION_JSON_UTF8_VALUE))\n            .andExpect(jsonPath(\"$.content.length()\").value(is(1)))\n            .andExpect(jsonPath(\"$.content.[0].name\").value(is(name1)));\n    }", "url": "https://raw.githubusercontent.com/gardle/gardle-web/master/src/test/java/com/gardle/web/rest/GardenFieldSearchIT.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 63862, "method_name": "createGardenFieldDTOWithoutOwner", "class_name": "GardenFieldSearchIT", "params": [], "throws": null, "modifiers": ["private"], "return_type": "GardenFieldDTO", "snippet": "    private GardenFieldDTO createGardenFieldDTOWithoutOwner() {\n        GardenFieldDTO gardenFieldDTO = new GardenFieldDTO();\n        gardenFieldDTO.setName(GARDEN_NAME);\n        gardenFieldDTO.setSizeInM2(SIZE_IN_M2);\n        gardenFieldDTO.setPricePerM2(PRICE_PER_M2);\n        gardenFieldDTO.setLatitude(LATITUDE);\n        gardenFieldDTO.setLongitude(LONGITUDE);\n        gardenFieldDTO.setCity(CITY);\n        gardenFieldDTO.setRoofed(ROOFED);\n        gardenFieldDTO.setGlassHouse(GLASS_HOUSE);\n        gardenFieldDTO.setHigh(HIGH);\n        gardenFieldDTO.setWater(WATER);\n        gardenFieldDTO.setElectricity(ELECTRICITY);\n        gardenFieldDTO.setPhValue(PH_VALUE);\n        gardenFieldDTO.setDescription(DESCRIPTION);\n        return gardenFieldDTO;\n    }", "url": "https://raw.githubusercontent.com/gardle/gardle-web/master/src/test/java/com/gardle/web/rest/GardenFieldSearchIT.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 63863, "method_name": "createGardenFieldDTO", "class_name": "GardenFieldSearchIT", "params": [], "throws": null, "modifiers": ["private"], "return_type": "GardenFieldDTO", "snippet": "    private GardenFieldDTO createGardenFieldDTO() {\n        GardenFieldDTO gardenFieldDTO = createGardenFieldDTOWithoutOwner();\n        gardenFieldDTO.setOwner(simpleUserDTO);\n        return gardenFieldDTO;\n    }", "url": "https://raw.githubusercontent.com/gardle/gardle-web/master/src/test/java/com/gardle/web/rest/GardenFieldSearchIT.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 63864, "method_name": "saveCredentialsPassword", "class_name": "PrefLoginGlobal", "params": ["Context", "String", "String"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void saveCredentialsPassword(Context context, String username, String password)\n    {\n        context = MyApplication.getAppContext();\n\n        // get a handle to shared Preference\n        SharedPreferences sharedPref;\n\n        sharedPref = context.getSharedPreferences(\n                context.getString(R.string.preference_file_name),\n                MODE_PRIVATE);\n\n        // write to the shared preference\n        SharedPreferences.Editor editor = sharedPref.edit();\n        editor.putString(TAG_USERNAME_GLOBAL, username);\n        editor.putString(TAG_PASSWORD_GLOBAL,password);\n        editor.apply();\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/Preferences/PrefLoginGlobal.java", "stars": "10", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 63865, "method_name": "saveToken", "class_name": "PrefLoginGlobal", "params": ["Context", "String", "String"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void saveToken(Context context, String username, String token)\n    {\n        context = MyApplication.getAppContext();\n\n        // get a handle to shared Preference\n        SharedPreferences sharedPref;\n\n        sharedPref = context.getSharedPreferences(\n                context.getString(R.string.preference_file_name),\n                MODE_PRIVATE);\n\n        // write to the shared preference\n        SharedPreferences.Editor editor = sharedPref.edit();\n        editor.putString(TAG_USERNAME_GLOBAL, username);\n        editor.putString(TAG_TOKEN_GLOBAL,token);\n        editor.apply();\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/Preferences/PrefLoginGlobal.java", "stars": "10", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 63866, "method_name": "getUsername", "class_name": "PrefLoginGlobal", "params": ["Context"], "throws": null, "modifiers": ["public", "static"], "return_type": "String", "snippet": "    public static String getUsername(Context context)\n    {\n        context = MyApplication.getAppContext();\n\n        SharedPreferences sharedPref = context.getSharedPreferences(context.getString(R.string.preference_file_name), MODE_PRIVATE);\n        return sharedPref.getString(TAG_USERNAME_GLOBAL, \"\");\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/Preferences/PrefLoginGlobal.java", "stars": "10", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 63867, "method_name": "getPassword", "class_name": "PrefLoginGlobal", "params": ["Context"], "throws": null, "modifiers": ["public", "static"], "return_type": "String", "snippet": "    public static String getPassword(Context context)\n    {\n        context = MyApplication.getAppContext();\n\n        SharedPreferences sharedPref = context.getSharedPreferences(context.getString(R.string.preference_file_name), MODE_PRIVATE);\n        return sharedPref.getString(TAG_PASSWORD_GLOBAL, \"\");\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/Preferences/PrefLoginGlobal.java", "stars": "10", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 63868, "method_name": "getToken", "class_name": "PrefLoginGlobal", "params": ["Context"], "throws": null, "modifiers": ["public", "static"], "return_type": "String", "snippet": "    public static String getToken(Context context)\n    {\n        context = MyApplication.getAppContext();\n\n        SharedPreferences sharedPref = context.getSharedPreferences(context.getString(R.string.preference_file_name), MODE_PRIVATE);\n        return sharedPref.getString(TAG_TOKEN_GLOBAL, \"\");\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/Preferences/PrefLoginGlobal.java", "stars": "10", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 63869, "method_name": "baseEncoding", "class_name": "PrefLoginGlobal", "params": ["String", "String"], "throws": null, "modifiers": ["public", "static"], "return_type": "String", "snippet": "    public static String baseEncoding(String username,String password)\n    {\n        String credentials = username + \":\" + password;\n        // create Base64 encodet string\n        String basic =\n                \"Basic \" + Base64.encodeToString(credentials.getBytes(), Base64.NO_WRAP);\n\n        return basic;\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/Preferences/PrefLoginGlobal.java", "stars": "10", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 63870, "method_name": "getAuthorizationHeaders", "class_name": "PrefLoginGlobal", "params": ["Context"], "throws": null, "modifiers": ["public", "static"], "return_type": "String", "snippet": "    public static String getAuthorizationHeaders(Context context)\n    {\n        context = MyApplication.getAppContext();\n\n\n        return PrefLoginGlobal.baseEncoding(\n                PrefLoginGlobal.getUsername(context),\n                PrefLoginGlobal.getToken(context));\n\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/Preferences/PrefLoginGlobal.java", "stars": "10", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 63871, "method_name": "getAuthHeaderPassword", "class_name": "PrefLoginGlobal", "params": ["Context"], "throws": null, "modifiers": ["public", "static"], "return_type": "String", "snippet": "    public static String getAuthHeaderPassword(Context context)\n    {\n        context = MyApplication.getAppContext();\n\n\n        return PrefLoginGlobal.baseEncoding(\n                PrefLoginGlobal.getUsername(context),\n                PrefLoginGlobal.getPassword(context));\n\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/Preferences/PrefLoginGlobal.java", "stars": "10", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 63872, "method_name": "saveUserProfile", "class_name": "PrefLoginGlobal", "params": ["User", "Context"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void saveUserProfile(User user, Context context)\n    {\n        context = MyApplication.getAppContext();\n\n        //Creating a shared preference\n        SharedPreferences sharedPref = context.getSharedPreferences(context.getString(R.string.preference_file_name), MODE_PRIVATE);\n\n        SharedPreferences.Editor prefsEditor = sharedPref.edit();\n\n        Gson gson = UtilityFunctions.provideGson();\n        String json = gson.toJson(user);\n        prefsEditor.putString(TAG_USER_PROFILE_GLOBAL, json);\n\n        prefsEditor.apply();\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/Preferences/PrefLoginGlobal.java", "stars": "10", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 63873, "method_name": "getUser", "class_name": "PrefLoginGlobal", "params": ["Context"], "throws": null, "modifiers": ["public", "static"], "return_type": "User", "snippet": "    public static User getUser(Context context)\n    {\n        context = MyApplication.getAppContext();\n\n        SharedPreferences sharedPref = context.getSharedPreferences(context.getString(R.string.preference_file_name), MODE_PRIVATE);\n\n        Gson gson = UtilityFunctions.provideGson();\n        String json = sharedPref.getString(TAG_USER_PROFILE_GLOBAL, null);\n\n        return gson.fromJson(json, User.class);\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/Preferences/PrefLoginGlobal.java", "stars": "10", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 63874, "method_name": "saveUsername", "class_name": "PrefLoginGlobal", "params": ["Context", "String"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void saveUsername(Context context, String username)\n    {\n        context = MyApplication.getAppContext();\n\n        // get a handle to shared Preference\n        SharedPreferences sharedPref;\n\n        sharedPref = context.getSharedPreferences(\n                context.getString(R.string.preference_file_name),\n                MODE_PRIVATE);\n\n        // write to the shared preference\n        SharedPreferences.Editor editor = sharedPref.edit();\n        editor.putString(TAG_USERNAME_GLOBAL, username);\n//        editor.putString(\"password\",password);\n        editor.apply();\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/Preferences/PrefLoginGlobal.java", "stars": "10", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 63875, "method_name": "savePassword", "class_name": "PrefLoginGlobal", "params": ["Context", "String"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void savePassword(Context context, String password)\n    {\n\n        context = MyApplication.getAppContext();\n\n        // get a handle to shared Preference\n        SharedPreferences sharedPref;\n\n        sharedPref = context.getSharedPreferences(\n                context.getString(R.string.preference_file_name),\n                MODE_PRIVATE);\n\n        // write to the shared preference\n        SharedPreferences.Editor editor = sharedPref.edit();\n//        editor.putString(\"username\", username);\n        editor.putString(TAG_PASSWORD_GLOBAL,password);\n        editor.apply();\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/Preferences/PrefLoginGlobal.java", "stars": "10", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 63876, "method_name": "setRoleID", "class_name": "PrefLoginGlobal", "params": ["Context", "int"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void setRoleID(Context context, int role_id)\n    {\n        // get a handle to shared Preference\n        SharedPreferences sharedPref;\n\n        sharedPref = context.getSharedPreferences(\n                context.getString(R.string.preference_file_name),\n                MODE_PRIVATE);\n\n        // write to the shared preference\n        SharedPreferences.Editor editor = sharedPref.edit();\n        editor.putInt(TAG_ROLE_GLOBAL, role_id);\n        editor.apply();\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/Preferences/PrefLoginGlobal.java", "stars": "10", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 63877, "method_name": "getRoleID", "class_name": "PrefLoginGlobal", "params": ["Context"], "throws": null, "modifiers": ["public", "static"], "return_type": "int", "snippet": "    public static int getRoleID(Context context) {\n\n        SharedPreferences sharedPref = context.getSharedPreferences(context.getString(R.string.preference_file_name), MODE_PRIVATE);\n        return sharedPref.getInt(TAG_ROLE_GLOBAL, -1);\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/Preferences/PrefLoginGlobal.java", "stars": "10", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 63878, "method_name": "setTitle", "class_name": "ConfirmDialog", "params": ["CharSequence"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setTitle(CharSequence title) {\n        this.tvTitle.setText(title);\n    }", "url": "https://raw.githubusercontent.com/Aivacom/JLYLiveChat-android/master/app/src/main/java/com/mediaroom/utils/ConfirmDialog.java", "stars": "2", "class_props": {"extends": "BaseDialog", "implements": null, "modifiers": ["public"]}}, {"id": 63879, "method_name": "setTitleTextSize", "class_name": "ConfirmDialog", "params": ["float"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setTitleTextSize(float dp) {\n        this.tvTitle.setTextSize(dp);\n    }", "url": "https://raw.githubusercontent.com/Aivacom/JLYLiveChat-android/master/app/src/main/java/com/mediaroom/utils/ConfirmDialog.java", "stars": "2", "class_props": {"extends": "BaseDialog", "implements": null, "modifiers": ["public"]}}, {"id": 63880, "method_name": "setDesc", "class_name": "ConfirmDialog", "params": ["CharSequence"], "throws": null, "modifiers": ["public"], "return_type": "ConfirmDialog", "snippet": "    public ConfirmDialog setDesc(CharSequence desc) {\n        if (!TextUtils.isEmpty(desc)) {\n            this.tvDesc.setVisibility(View.VISIBLE);\n            this.tvDesc.setText(desc);\n        } else {\n            this.tvDesc.setVisibility(View.GONE);\n        }\n        return this;\n    }", "url": "https://raw.githubusercontent.com/Aivacom/JLYLiveChat-android/master/app/src/main/java/com/mediaroom/utils/ConfirmDialog.java", "stars": "2", "class_props": {"extends": "BaseDialog", "implements": null, "modifiers": ["public"]}}, {"id": 63881, "method_name": "setDescTextColor", "class_name": "ConfirmDialog", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "ConfirmDialog", "snippet": "    public ConfirmDialog setDescTextColor(int color) {\n        this.tvDesc.setTextColor(color);\n        return this;\n    }", "url": "https://raw.githubusercontent.com/Aivacom/JLYLiveChat-android/master/app/src/main/java/com/mediaroom/utils/ConfirmDialog.java", "stars": "2", "class_props": {"extends": "BaseDialog", "implements": null, "modifiers": ["public"]}}, {"id": 63882, "method_name": "setDescTextSize", "class_name": "ConfirmDialog", "params": ["float"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setDescTextSize(float dp) {\n        this.tvDesc.setTextSize(dp);\n    }", "url": "https://raw.githubusercontent.com/Aivacom/JLYLiveChat-android/master/app/src/main/java/com/mediaroom/utils/ConfirmDialog.java", "stars": "2", "class_props": {"extends": "BaseDialog", "implements": null, "modifiers": ["public"]}}, {"id": 63883, "method_name": "setButton", "class_name": "ConfirmDialog", "params": ["CharSequence", "CharSequence"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setButton(CharSequence cancelCs, CharSequence okCs) {\n        tvCancel.setText(cancelCs);\n        tvOk.setText(okCs);\n    }", "url": "https://raw.githubusercontent.com/Aivacom/JLYLiveChat-android/master/app/src/main/java/com/mediaroom/utils/ConfirmDialog.java", "stars": "2", "class_props": {"extends": "BaseDialog", "implements": null, "modifiers": ["public"]}}, {"id": 63884, "method_name": "setButton", "class_name": "ConfirmDialog", "params": ["CharSequence"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setButton(CharSequence okCs) {\n        tvCancel.setVisibility(View.GONE);\n        vLine.setVisibility(View.GONE);\n        vHorLine.setVisibility(View.VISIBLE);\n        tvOk.setText(okCs);\n    }", "url": "https://raw.githubusercontent.com/Aivacom/JLYLiveChat-android/master/app/src/main/java/com/mediaroom/utils/ConfirmDialog.java", "stars": "2", "class_props": {"extends": "BaseDialog", "implements": null, "modifiers": ["public"]}}, {"id": 63885, "method_name": "setTitleGrivate", "class_name": "ConfirmDialog", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setTitleGrivate() {\n        tvTitle.setGravity(Gravity.LEFT);\n    }", "url": "https://raw.githubusercontent.com/Aivacom/JLYLiveChat-android/master/app/src/main/java/com/mediaroom/utils/ConfirmDialog.java", "stars": "2", "class_props": {"extends": "BaseDialog", "implements": null, "modifiers": ["public"]}}, {"id": 63886, "method_name": "getLayout", "class_name": "ConfirmDialog", "params": [], "throws": null, "modifiers": ["protected"], "return_type": "int", "snippet": "    protected int getLayout() {\n        return R.layout.dialog_confirm;\n    }", "url": "https://raw.githubusercontent.com/Aivacom/JLYLiveChat-android/master/app/src/main/java/com/mediaroom/utils/ConfirmDialog.java", "stars": "2", "class_props": {"extends": "BaseDialog", "implements": null, "modifiers": ["public"]}}, {"id": 63887, "method_name": "getObject", "class_name": "ParameterSearchedObject", "params": [], "throws": null, "modifiers": ["public"], "return_type": "T", "snippet": "    public T getObject() {\n        return object;\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/model/param/ParameterSearchedObject.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 63888, "method_name": "getParam", "class_name": "ParameterSearchedObject", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Parameter", "snippet": "    public Parameter getParam() {\n        return param;\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/model/param/ParameterSearchedObject.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 63889, "method_name": "getValue", "class_name": "ParameterSearchedObject", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Object", "snippet": "    public Object getValue() {\n        return value;\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/model/param/ParameterSearchedObject.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 63890, "method_name": "main", "class_name": "DevToolsTestApplication", "params": ["String"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "\tpublic static void main(String[] args) {\n\t\tnew SpringApplicationBuilder(DevToolsTestApplication.class).listeners(new WebServerPortFileWriter(args[0]))\n\t\t\t\t.run(args);\n\t}", "url": "https://raw.githubusercontent.com/spring-projects/spring-boot/master/spring-boot-project/spring-boot-devtools/src/intTest/java/com/example/DevToolsTestApplication.java", "stars": "47572", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 63891, "method_name": "checkString", "class_name": "Demo02Predicate_and", "params": ["String", "Predicate<String>", "Predicate<String>"], "throws": null, "modifiers": ["public", "static"], "return_type": "boolean", "snippet": "    public static boolean checkString(String s, Predicate<String> pre1,Predicate<String> pre2){\n        //return pre1.test(s) && pre2.test(s);\n        return pre1.and(pre2).test(s);//\u7b49\u4ef7\u4e8ereturn pre1.test(s) && pre2.test(s);\n    }", "url": "https://raw.githubusercontent.com/liuminchao123/JavaWeb_Learning/master/02.%20java/Java/%E9%BB%91%E9%A9%AC%E6%95%99%E7%A8%8B/23.%E3%80%90%E5%87%BD%E6%95%B0%E5%BC%8F%E6%8E%A5%E5%8F%A3%E3%80%91-%E7%AC%94%E8%AE%B0/code/12_FunctionalInterface/src/com/itheima/demo06/Predicate/Demo02Predicate_and.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 63892, "method_name": "main", "class_name": "Demo02Predicate_and", "params": ["String"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void main(String[] args) {\n        //\u5b9a\u4e49\u4e00\u4e2a\u5b57\u7b26\u4e32\n        String s = \"abcdef\";\n        //\u8c03\u7528checkString\u65b9\u6cd5,\u53c2\u6570\u4f20\u9012\u5b57\u7b26\u4e32\u548c\u4e24\u4e2aLambda\u8868\u8fbe\u5f0f\n        boolean b = checkString(s,(String str)->{\n            //\u5224\u65ad\u5b57\u7b26\u4e32\u7684\u957f\u5ea6\u662f\u5426\u5927\u4e8e5\n            return str.length()>5;\n        },(String str)->{\n            //\u5224\u65ad\u5b57\u7b26\u4e32\u4e2d\u662f\u5426\u5305\u542ba\n            return str.contains(\"a\");\n        });\n        System.out.println(b);\n    }", "url": "https://raw.githubusercontent.com/liuminchao123/JavaWeb_Learning/master/02.%20java/Java/%E9%BB%91%E9%A9%AC%E6%95%99%E7%A8%8B/23.%E3%80%90%E5%87%BD%E6%95%B0%E5%BC%8F%E6%8E%A5%E5%8F%A3%E3%80%91-%E7%AC%94%E8%AE%B0/code/12_FunctionalInterface/src/com/itheima/demo06/Predicate/Demo02Predicate_and.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 63893, "method_name": "recycle", "class_name": "ObjectPool", "params": ["RecycleObject"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void recycle(RecycleObject obj) {\n\n        if (!enabled) {\n            return;\n        }\n\n        if (obj != null) {\n            Class cls = obj.getClass();\n            int id = System.identityHashCode(cls);\n            Queue queue;\n            synchronized (map) {\n                queue = map.get(id);\n                if (queue == null) {\n                    queue = new Queue(cls);\n                    map.put(id, queue);\n                }\n            }\n\n            // must recycle first  then put , or else will be used by others\n            obj.recycle();\n            queue.put(obj);\n\n        }\n    }", "url": "https://raw.githubusercontent.com/iqiyi/TaskManager/master/TaskManager/src/main/java/org/qiyi/basecore/taskmanager/pool/ObjectPool.java", "stars": "50", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 63894, "method_name": "obtain", "class_name": "ObjectPool", "params": ["Class<T>"], "throws": null, "modifiers": ["public", "static"], "return_type": "T", "snippet": "    public static <T extends RecycleObject> T obtain(Class<T> target) {\n        if (!enabled) {\n            return null;\n        }\n        int id = System.identityHashCode(target);\n        Queue<T> queue;\n        synchronized (map) {\n            queue = map.get(id);\n            if (queue == null) {\n                return null;\n            }\n        }\n        return queue.poll();\n    }", "url": "https://raw.githubusercontent.com/iqiyi/TaskManager/master/TaskManager/src/main/java/org/qiyi/basecore/taskmanager/pool/ObjectPool.java", "stars": "50", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 63895, "method_name": "cleanUp", "class_name": "ObjectPool", "params": [], "throws": null, "modifiers": ["public", "static"], "return_type": "boolean", "snippet": "    public static boolean cleanUp() {\n\n        if (!enabled) {\n            return false;\n        }\n\n        LinkedList<Queue> queues = new LinkedList<>();\n        synchronized (map) {\n            int size = map.size();\n            for (int i = 0; i < size; i++) {\n                queues.addLast(map.valueAt(i));\n            }\n        }\n        boolean rs = false;\n        for (Queue queue : queues) {\n            rs |= queue.clean();\n        }\n        return rs;\n    }", "url": "https://raw.githubusercontent.com/iqiyi/TaskManager/master/TaskManager/src/main/java/org/qiyi/basecore/taskmanager/pool/ObjectPool.java", "stars": "50", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 63896, "method_name": "enableDataPool", "class_name": "ObjectPool", "params": ["boolean"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void enableDataPool(boolean enable) {\n        enabled = enable;\n    }", "url": "https://raw.githubusercontent.com/iqiyi/TaskManager/master/TaskManager/src/main/java/org/qiyi/basecore/taskmanager/pool/ObjectPool.java", "stars": "50", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 63897, "method_name": "poll", "class_name": "Queue", "params": [], "throws": null, "modifiers": ["public"], "return_type": "T", "snippet": "        public T poll() {\n            if (list == null) {\n                synchronized (this) {\n                    if (list == null) {\n                        list = new LinkedList<T>();\n                        return null;\n                    }\n                }\n            }\n            T var;\n            synchronized (this) {\n                var = list.poll();\n            }\n\n            if (var != null) {\n                hitCount++;\n            } else {\n                missCount++;\n            }\n            return var;\n        }", "url": "https://raw.githubusercontent.com/iqiyi/TaskManager/master/TaskManager/src/main/java/org/qiyi/basecore/taskmanager/pool/ObjectPool.java", "stars": "50", "class_props": {"extends": null, "implements": null, "modifiers": ["static"]}}, {"id": 63898, "method_name": "put", "class_name": "Queue", "params": ["T"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "        public void put(T object) {\n            synchronized (this) {\n                if (list == null) {\n                    list = new LinkedList<>();\n                }\n\n                if (list.size() < size) {\n                    list.addLast(object);\n                }\n            }\n        }", "url": "https://raw.githubusercontent.com/iqiyi/TaskManager/master/TaskManager/src/main/java/org/qiyi/basecore/taskmanager/pool/ObjectPool.java", "stars": "50", "class_props": {"extends": null, "implements": null, "modifiers": ["static"]}}, {"id": 63899, "method_name": "grade", "class_name": "Queue", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "        private void grade() {\n            int var = size;\n\n            if (missCount == 0) {\n                // shrink\n                size = var - (var >> 2);\n            } else {\n                float rate = 1F* hitCount / missCount;\n                if (rate < 0.5f) {\n                    // enlarge\n                    size = var << 1;\n                } else if (rate < 1f) {\n                    // 1.25\n                    size += (var >> 2);\n                } else if (rate > 6f) {\n                    size = var - (var >> 2);\n                } else if (rate > 10f) {\n                    // try shrink\n                    size = var >> 1;\n                } else { // [1 , 3]\n                    if (missCount < 50) {\n                        // do nothing\n                        if (hitCount < size) {\n                            //shrink\n                            size = var - (var >> 2);\n                        }\n                    } else if (missCount < 500) {\n                        size += (var >> 2);\n                    } else if (missCount < 1500) {\n                        size += var >> 1;\n                    } else {\n                        size = var << 1;\n                    }\n\n                }\n            }\n\n            if (size > MAX_CACHED_SIZE) {\n                size = MAX_CACHED_SIZE;\n            } else if (size < 2) {\n                size = 2;\n            }\n        }", "url": "https://raw.githubusercontent.com/iqiyi/TaskManager/master/TaskManager/src/main/java/org/qiyi/basecore/taskmanager/pool/ObjectPool.java", "stars": "50", "class_props": {"extends": null, "implements": null, "modifiers": ["static"]}}, {"id": 63900, "method_name": "clean", "class_name": "Queue", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "        public boolean clean() {\n            if (list != null) {\n                int sz = list.size();\n                grade();\n                hitCount = 0;\n                missCount = 0;\n                if (sz > size) {\n                    // trim\n                    synchronized (this) {\n                        while (list.size() > size) {\n                            list.pollFirst();\n                        }\n                    }\n\n                    return true;\n                }\n            }\n            return false;\n        }", "url": "https://raw.githubusercontent.com/iqiyi/TaskManager/master/TaskManager/src/main/java/org/qiyi/basecore/taskmanager/pool/ObjectPool.java", "stars": "50", "class_props": {"extends": null, "implements": null, "modifiers": ["static"]}}, {"id": 63901, "method_name": "getText", "class_name": "Token", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getText() {\n        return text;\n    }", "url": "https://raw.githubusercontent.com/mjtb49/LattiCG/master/src/randomreverser/reversal/asm/Token.java", "stars": "14", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 63902, "method_name": "getLine", "class_name": "Token", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getLine() {\n        return line;\n    }", "url": "https://raw.githubusercontent.com/mjtb49/LattiCG/master/src/randomreverser/reversal/asm/Token.java", "stars": "14", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 63903, "method_name": "actionPerformed", "class_name": "DecompilerPanel", "params": ["ActionEvent"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void actionPerformed(ActionEvent e) {\n    if (scp != null && scp.isShowing()) {\n      reload();\n    }\n  }", "url": "https://raw.githubusercontent.com/GraxCode/threadtear/master/src/me/nov/threadtear/swing/panel/DecompilerPanel.java", "stars": "140", "class_props": {"extends": "JPanel", "implements": ["ActionListener"], "modifiers": ["public"]}}, {"id": 63904, "method_name": "reload", "class_name": "DecompilerPanel", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "  private void reload() {\n    LoadingIndicator loadingLabel = new LoadingIndicator(\"Decompiling class file... \", JLabel.CENTER);\n    loadingLabel.setRunning(true);\n    this.add(loadingLabel, BorderLayout.CENTER);\n    this.remove(scp);\n    invalidate();\n    validate();\n    SwingUtilities.invokeLater(() -> {\n      new Thread(() -> {\n        update();\n        this.remove(loadingLabel);\n        this.add(scp, BorderLayout.CENTER);\n        invalidate();\n        validate();\n        repaint();\n      }).start();\n    });\n  }", "url": "https://raw.githubusercontent.com/GraxCode/threadtear/master/src/me/nov/threadtear/swing/panel/DecompilerPanel.java", "stars": "140", "class_props": {"extends": "JPanel", "implements": ["ActionListener"], "modifiers": ["public"]}}, {"id": 63905, "method_name": "update", "class_name": "DecompilerPanel", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void update() {\n    try {\n      byte[] bytes;\n      if (conversionMethod.getSelectedIndex() == 0) {\n        // use the original jar file to retrieve bytes\n        bytes = IOUtils.toByteArray(clazz.streamOriginal());\n      } else {\n        // use the local code\n        bytes = Conversion.toBytecode0(clazz.node);\n      }\n      ClassNode copy = Conversion.toNode(bytes);\n      // do some asm action here\n      if (ignoreTCB.isSelected()) {\n        copy.methods.forEach(m -> m.tryCatchBlocks = null);\n      }\n      if (ignoreMon.isSelected()) {\n        copy.methods.forEach(m -> StreamSupport.stream(m.instructions.spliterator(), false).filter(i -> i.getOpcode() == MONITORENTER || i.getOpcode() == MONITOREXIT)\n            .forEach(i -> m.instructions.set(i, new InsnNode(POP))));\n      }\n      bytes = Conversion.toBytecode0(copy);\n      CFR.setTopsort(topsort.isSelected());\n      String decompiled = CFR.decompile(clazz.node.name, bytes);\n      this.textArea.setText(decompiled);\n    } catch (IOException e) {\n      e.printStackTrace();\n      StringWriter sw = new StringWriter();\n      PrintWriter pw = new PrintWriter(sw);\n      e.printStackTrace(pw);\n      this.textArea.setText(sw.toString());\n    }\n  }", "url": "https://raw.githubusercontent.com/GraxCode/threadtear/master/src/me/nov/threadtear/swing/panel/DecompilerPanel.java", "stars": "140", "class_props": {"extends": "JPanel", "implements": ["ActionListener"], "modifiers": ["public"]}}, {"id": 63906, "method_name": "hightlightText", "class_name": "DecompilerPanel", "params": ["String"], "throws": ["BadLocationException"], "modifiers": ["private"], "return_type": "void", "snippet": "  private void hightlightText(String searchText) throws BadLocationException {\n    Highlighter highlighter = textArea.getHighlighter();\n    highlighter.removeAllHighlights();\n    Document document = textArea.getDocument();\n    String text = document.getText(0, document.getLength()).toLowerCase();\n    int pos = text.indexOf(searchText);\n    while (pos >= 0) {\n      highlighter.addHighlight(pos, pos + searchText.length(), new DefaultHighlighter.DefaultHighlightPainter(new Color(0x0078d7)));\n      pos = text.indexOf(searchText, pos + searchText.length());\n    }\n  }", "url": "https://raw.githubusercontent.com/GraxCode/threadtear/master/src/me/nov/threadtear/swing/panel/DecompilerPanel.java", "stars": "140", "class_props": {"extends": "JPanel", "implements": ["ActionListener"], "modifiers": ["public"]}}, {"id": 63907, "method_name": "traverseAndLockQueue", "class_name": "DbQueueManager", "params": ["int"], "throws": null, "modifiers": [], "return_type": "DbQueue", "snippet": "    DbQueue traverseAndLockQueue(int index){\n        LOG.info(\"Traversal queue => total [{}], index [{}], try to get the Consumer-Lock of queue\",\n                queueList.size(), index);\n        int preIndex = index;\n        while (true) {\n            DbQueue dbQueue;\n            rwLock.readLock().lock();\n            try{\n                if(queueList.isEmpty()){\n                    return null;\n                }\n                int size = queueList.size();\n                if(size >= preIndex){\n                    // if you find that the size of queue-list has changed, update 'preIndex'\n                    preIndex = 0;\n                }\n                index = (++index) % size;\n                dbQueue = queueList.get(index);\n            }finally{\n                rwLock.readLock().unlock();\n            }\n            QueueInfo info = dbQueue.queue.getInfo();\n            //try to lock\n            Date lockTime = Calendar.getInstance().getTime();\n            if (queueDao.lock(info.getId(), AppUtil.getIpAndPort(),\n                    lockTime, this.config.getQueueLockExpire()) > 0) {\n                LOG.info(\"Succeed in getting the Consumer-Lock of queue whose id  [{}], name [{}]\",\n                        info.getId(), info.getqName());\n                //clear the cache\n                dbQueue.queue.cleanCache();\n                //update last lock time\n                dbQueue.lastLockTime = lockTime;\n                return dbQueue;\n            }\n            // if preIndex == index, means that you have traversed the list once\n            if (preIndex == index) {\n                info = queueDao.selectOne(info.getId());\n                long waitTime = 0;\n                if (null != info && info.isLock() && (waitTime = info.getLockTime().getTime() +\n                        this.config.getQueueLockExpire() * 1000 - Calendar.getInstance().getTimeInMillis())> 0) {\n                    syncLock.lock();\n                    try {\n                        //wait for notify\n                        LOG.info(\"Await for getting the Consumer-Lock of queue whose id [{}], name [{}], wait time in mills [{}]\",\n                                info.getId(), info.getqName(), waitTime);\n                        dbQueue.noConsumerLock.await(waitTime, TimeUnit.MILLISECONDS);\n                    } catch (InterruptedException e) {\n                        Thread.currentThread().interrupt();\n                        //ignore\n                    }finally{\n                        syncLock.unlock();\n                    }\n                }\n            }\n        }\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/service/src/main/java/com/webank/wedatasphere/exchangis/queue/manager/DbQueueManager.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 63908, "method_name": "chooseQueue", "class_name": "DbQueueManager", "params": [], "throws": null, "modifiers": [], "return_type": "DbQueue", "snippet": "    DbQueue chooseQueue(){\n        rwLock.readLock().lock();\n        try{\n            int size = queueList.size();\n            Random random = new SecureRandom();\n            int choose = random.nextInt(size);\n            DbQueue dbQueue = queueList.get(choose);\n            return dbQueue;\n        }finally{\n            rwLock.readLock().unlock();\n        }\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/service/src/main/java/com/webank/wedatasphere/exchangis/queue/manager/DbQueueManager.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 63909, "method_name": "getDbQueue", "class_name": "DbQueueManager", "params": ["String"], "throws": null, "modifiers": [], "return_type": "DbQueue", "snippet": "    DbQueue getDbQueue(String qId) {\n         rwLock.readLock().lock();\n         try{\n             return queueRefs.get(qId);\n         }finally{\n             rwLock.readLock().unlock();\n         }\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/service/src/main/java/com/webank/wedatasphere/exchangis/queue/manager/DbQueueManager.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 63910, "method_name": "removeDbQueue", "class_name": "DbQueueManager", "params": ["String"], "throws": null, "modifiers": [], "return_type": "DbQueue", "snippet": "    DbQueue removeDbQueue(String qId){\n         rwLock.writeLock().lock();\n         try {\n             LOG.info(\"Remove the queue id [{}] in list\", qId);\n             DbQueue dbQueue = queueRefs.remove(qId);\n             queueList.remove(dbQueue);\n             //update index\n             int index = dbQueue.index;\n             for(int i = index + 1; i < queueList.size(); i++){\n                 queueList.get(i).index --;\n             }\n             return dbQueue;\n         }finally{\n             rwLock.writeLock().unlock();\n         }\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/service/src/main/java/com/webank/wedatasphere/exchangis/queue/manager/DbQueueManager.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 63911, "method_name": "getDbQueueIdSet", "class_name": "DbQueueManager", "params": [], "throws": null, "modifiers": [], "return_type": "Set<String>", "snippet": "    Set<String> getDbQueueIdSet(){\n        rwLock.readLock().lock();\n        try{\n            return new HashSet<>(queueRefs.keySet());\n        }finally{\n            rwLock.readLock().unlock();\n        }\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/service/src/main/java/com/webank/wedatasphere/exchangis/queue/manager/DbQueueManager.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 63912, "method_name": "addDbQueue", "class_name": "DbQueueManager", "params": ["String", "CacheDbQueue"], "throws": null, "modifiers": [], "return_type": "void", "snippet": "    void addDbQueue(String qId, CacheDbQueue queue){\n        rwLock.writeLock().lock();\n        try {\n            LOG.info(\"Add the queue id [{}] to list\", qId);\n            DbQueue dbQueue = new DbQueue(queue);\n            queueRefs.put(qId, dbQueue);\n            queueList.add(dbQueue);\n            dbQueue.index = queueList.size() - 1;\n        }finally{\n            rwLock.writeLock().unlock();\n        }\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/service/src/main/java/com/webank/wedatasphere/exchangis/queue/manager/DbQueueManager.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 63913, "method_name": "unlockNotify", "class_name": "DbQueueManager", "params": ["String"], "throws": null, "modifiers": [], "return_type": "void", "snippet": "    void unlockNotify(String qId){\n        syncLock.lock();\n        try{\n            DbQueue dbQueue = getDbQueue(qId);\n            if(null != dbQueue){\n                //notify the other threads\n                LOG.trace(\"Notify all threads with that queue id [{}] has released the Consumer-Lock\", qId);\n                dbQueue.noConsumerLock.signalAll();\n            }\n        }finally{\n            syncLock.unlock();\n        }\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/service/src/main/java/com/webank/wedatasphere/exchangis/queue/manager/DbQueueManager.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 63914, "method_name": "unlockQueueAndNotify", "class_name": "DbQueueManager", "params": ["String"], "throws": null, "modifiers": [], "return_type": "void", "snippet": "    void unlockQueueAndNotify(String qId){\n        LOG.info(\"Unlock queue id [{}]\", qId);\n        queueDao.unlock(Integer.valueOf(qId), AppUtil.getIpAndPort());\n        unlockNotify(qId);\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/service/src/main/java/com/webank/wedatasphere/exchangis/queue/manager/DbQueueManager.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 63915, "method_name": "getFieldOrder", "class_name": "DyldAllImageInfos32", "params": [], "throws": null, "modifiers": ["protected"], "return_type": "List<String>", "snippet": "    protected List<String> getFieldOrder() {\n        return Arrays.asList(\"version\", \"infoArrayCount\", \"infoArray\", \"notification\", \"processDetachedFromSharedRegion\", \"libSystemInitialized\",\n                \"dyldImageLoadAddress\", \"jitInfo\", \"dyldVersion\", \"errorMessage\", \"terminationFlags\", \"coreSymbolicationShmPage\", \"systemOrderFlag\",\n                \"uuidArrayCount\", \"uuidArray\", \"dyldAllImageInfosAddress\", \"initialImageCount\", \"errorKind\", \"errorClientOfDylibPath\", \"errorTargetDylibPath\", \"errorSymbol\",\n                \"sharedCacheSlide\", \"sharedCacheUUID\", \"reserved\");\n    }", "url": "https://raw.githubusercontent.com/wmm1996528/unidbg_douyin10/master/src/main/java/com/github/unidbg/ios/struct/sysctl/DyldAllImageInfos32.java", "stars": "16", "class_props": {"extends": "UnicornStructure", "implements": null, "modifiers": ["public"]}}, {"id": 63916, "method_name": "folderNameFromType", "class_name": "PacmanView", "params": ["PacmanType"], "throws": null, "modifiers": ["static", "private"], "return_type": "String", "snippet": "    private static String folderNameFromType(PacmanType type) {\n        switch (type) {\n        case NEUTRAL:\n            return \"1\";\n        case SCISSORS:\n            return \"2\";\n        case PAPER:\n            return \"3\";\n        case ROCK:\n            return \"4\";\n        }\n        throw new RuntimeException(\"Unrecognised pac type: \" + type);\n    }", "url": "https://raw.githubusercontent.com/CodinGame/SpringChallenge2020/master/src/main/java/com/codingame/view/PacmanView.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 63917, "method_name": "getDeathPacmanImages", "class_name": "PacmanView", "params": ["int", "PacmanType"], "throws": null, "modifiers": ["public", "static"], "return_type": "String", "snippet": "    public static String[] getDeathPacmanImages(int playerIndex, PacmanType type) {\n        String indexPacmanType = folderNameFromType(type);\n        String color = playerIndex == 0 ? \"red\" : \"blue\";\n\n        List<String> deathPacmanImages = new ArrayList<String>();\n        for (int i = 1; i < DEATH_FRAME_INDEX_END; i++) {\n            deathPacmanImages.add(\n                String.format(\n                    \"mort_%s_%s_mort%04d\",\n                    color,\n                    indexPacmanType,\n                    i\n                )\n            );\n        }\n        return deathPacmanImages.toArray(new String[0]);\n    }", "url": "https://raw.githubusercontent.com/CodinGame/SpringChallenge2020/master/src/main/java/com/codingame/view/PacmanView.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 63918, "method_name": "getWalkPacmanImages", "class_name": "PacmanView", "params": ["int", "PacmanType", "boolean"], "throws": null, "modifiers": ["static", "private"], "return_type": "String", "snippet": "    private static String[] getWalkPacmanImages(int playerIndex, PacmanType type, boolean alive) {\n        String indexPacmanType = folderNameFromType(type);\n        String color = playerIndex == 0 ? \"red\" : \"blue\";\n\n        List<String> walkPacmanImages = new ArrayList<String>();\n        for (int i = 0; i < WALK_CYCLE.length; i++) {\n            String extension = alive ? \"\" : \"_2\";\n            walkPacmanImages.add(\n                \"paku_\" + color + \"_\" + indexPacmanType + \"_walk000\" + WALK_CYCLE[i] + extension\n            );\n        }\n        return walkPacmanImages.toArray(new String[0]);\n    }", "url": "https://raw.githubusercontent.com/CodinGame/SpringChallenge2020/master/src/main/java/com/codingame/view/PacmanView.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 63919, "method_name": "setViewState", "class_name": "PacmanView", "params": ["int", "PacmanType", "boolean"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setViewState(int playerIndex, PacmanType type, boolean alive) {\n        sprite.setImages(stateToImages.get(new PacmanViewState(playerIndex, type, alive)));\n        if (!alive && death != null) {\n            death.setImages(getDeathPacmanImages(playerIndex, type));\n        }\n    }", "url": "https://raw.githubusercontent.com/CodinGame/SpringChallenge2020/master/src/main/java/com/codingame/view/PacmanView.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 63920, "method_name": "equals", "class_name": "PacmanViewState", "params": ["Object"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "        public boolean equals(Object obj) {\n            if (this == obj) return true;\n            if (obj == null) return false;\n            if (getClass() != obj.getClass()) return false;\n            PacmanViewState other = (PacmanViewState) obj;\n            if (alive != other.alive) return false;\n            if (playerIndex != other.playerIndex) return false;\n            if (type != other.type) return false;\n            return true;\n        }", "url": "https://raw.githubusercontent.com/CodinGame/SpringChallenge2020/master/src/main/java/com/codingame/view/PacmanView.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["static", "private"]}}, {"id": 63921, "method_name": "hashCode", "class_name": "PacmanViewState", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "        public int hashCode() {\n            final int prime = 31;\n            int result = 1;\n            result = prime * result + (alive ? 1231 : 1237);\n            result = prime * result + playerIndex;\n            result = prime * result + ((type == null) ? 0 : type.hashCode());\n            return result;\n        }", "url": "https://raw.githubusercontent.com/CodinGame/SpringChallenge2020/master/src/main/java/com/codingame/view/PacmanView.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["static", "private"]}}, {"id": 63922, "method_name": "inProgress", "class_name": "GameStatus", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean inProgress()       { return status == Status.IN_PROGRESS; }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/game/GameStatus.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Serializable"], "modifiers": ["public"]}}, {"id": 63923, "method_name": "lost", "class_name": "GameStatus", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean lost() {\n    \treturn lostOverthrown() || lostMilitary() || lostDiplomatic()\n    \t\t|| lostNewRepublic() || lostRebellion(); \n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/game/GameStatus.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Serializable"], "modifiers": ["public"]}}, {"id": 63924, "method_name": "won", "class_name": "GameStatus", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean won() {\n    \treturn wonCouncilAlliance() || wonMilitary() || wonMilitaryAlliance() \n            || wonNewRepublic() || wonRebellion() || wonRebellionAlliance() || wonDiplomatic();\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/game/GameStatus.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Serializable"], "modifiers": ["public"]}}, {"id": 63925, "method_name": "lostOverthrown", "class_name": "GameStatus", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean lostOverthrown()       { return status == Status.LOSS_OVERTHROWN; }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/game/GameStatus.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Serializable"], "modifiers": ["public"]}}, {"id": 63926, "method_name": "lostMilitary", "class_name": "GameStatus", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean lostMilitary()         { return status == Status.LOSS_MILITARY; }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/game/GameStatus.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Serializable"], "modifiers": ["public"]}}, {"id": 63927, "method_name": "lostDiplomatic", "class_name": "GameStatus", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean lostDiplomatic()       { return status == Status.LOSS_DIPLOMATIC; }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/game/GameStatus.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Serializable"], "modifiers": ["public"]}}, {"id": 63928, "method_name": "lostNewRepublic", "class_name": "GameStatus", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean lostNewRepublic()      { return status == Status.LOSS_NEW_REPUBLIC; }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/game/GameStatus.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Serializable"], "modifiers": ["public"]}}, {"id": 63929, "method_name": "lostRebellion", "class_name": "GameStatus", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean lostRebellion()        { return status == Status.LOSS_REBELLION; }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/game/GameStatus.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Serializable"], "modifiers": ["public"]}}, {"id": 63930, "method_name": "wonDiplomatic", "class_name": "GameStatus", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean wonDiplomatic()        { return status == Status.WIN_DIPLOMATIC; }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/game/GameStatus.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Serializable"], "modifiers": ["public"]}}, {"id": 63931, "method_name": "wonMilitary", "class_name": "GameStatus", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean wonMilitary()          { return status == Status.WIN_MILITARY; }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/game/GameStatus.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Serializable"], "modifiers": ["public"]}}, {"id": 63932, "method_name": "wonMilitaryAlliance", "class_name": "GameStatus", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean wonMilitaryAlliance()  { return status == Status.WIN_MILITARY_ALLIANCE; }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/game/GameStatus.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Serializable"], "modifiers": ["public"]}}, {"id": 63933, "method_name": "wonNewRepublic", "class_name": "GameStatus", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean wonNewRepublic()       { return status == Status.WIN_NEW_REPUBLIC; }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/game/GameStatus.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Serializable"], "modifiers": ["public"]}}, {"id": 63934, "method_name": "wonRebellion", "class_name": "GameStatus", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean wonRebellion()         { return status == Status.WIN_REBELLION; }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/game/GameStatus.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Serializable"], "modifiers": ["public"]}}, {"id": 63935, "method_name": "wonRebellionAlliance", "class_name": "GameStatus", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean wonRebellionAlliance() { return status == Status.WIN_REBELLION_ALLIANCE; }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/game/GameStatus.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Serializable"], "modifiers": ["public"]}}, {"id": 63936, "method_name": "wonCouncilAlliance", "class_name": "GameStatus", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean wonCouncilAlliance()   { return status == Status.WIN_COUNCIL_ALLIANCE; }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/game/GameStatus.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Serializable"], "modifiers": ["public"]}}, {"id": 63937, "method_name": "startGame", "class_name": "GameStatus", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void startGame()               { status = Status.IN_PROGRESS; }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/game/GameStatus.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Serializable"], "modifiers": ["public"]}}, {"id": 63938, "method_name": "loseOverthrown", "class_name": "GameStatus", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void loseOverthrown()          { status = Status.LOSS_OVERTHROWN; }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/game/GameStatus.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Serializable"], "modifiers": ["public"]}}, {"id": 63939, "method_name": "loseMilitary", "class_name": "GameStatus", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void loseMilitary()            { status = Status.LOSS_MILITARY; }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/game/GameStatus.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Serializable"], "modifiers": ["public"]}}, {"id": 63940, "method_name": "loseDiplomatic", "class_name": "GameStatus", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void loseDiplomatic()          { status = Status.LOSS_DIPLOMATIC; }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/game/GameStatus.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Serializable"], "modifiers": ["public"]}}, {"id": 63941, "method_name": "loseNewRepublic", "class_name": "GameStatus", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void loseNewRepublic()         { status = Status.LOSS_NEW_REPUBLIC; }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/game/GameStatus.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Serializable"], "modifiers": ["public"]}}, {"id": 63942, "method_name": "loseRebellion", "class_name": "GameStatus", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void loseRebellion()           { status = Status.LOSS_REBELLION; }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/game/GameStatus.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Serializable"], "modifiers": ["public"]}}, {"id": 63943, "method_name": "winDiplomatic", "class_name": "GameStatus", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void winDiplomatic()           { status = Status.WIN_DIPLOMATIC; }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/game/GameStatus.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Serializable"], "modifiers": ["public"]}}, {"id": 63944, "method_name": "winMilitary", "class_name": "GameStatus", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void winMilitary()             { status = Status.WIN_MILITARY; }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/game/GameStatus.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Serializable"], "modifiers": ["public"]}}, {"id": 63945, "method_name": "winMilitaryAlliance", "class_name": "GameStatus", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void winMilitaryAlliance()     { status = Status.WIN_MILITARY_ALLIANCE; }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/game/GameStatus.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Serializable"], "modifiers": ["public"]}}, {"id": 63946, "method_name": "winNewRepublic", "class_name": "GameStatus", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void winNewRepublic()          { status = Status.WIN_NEW_REPUBLIC; }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/game/GameStatus.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Serializable"], "modifiers": ["public"]}}, {"id": 63947, "method_name": "winRebellion", "class_name": "GameStatus", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void winRebellion()            { status = Status.WIN_REBELLION; }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/game/GameStatus.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Serializable"], "modifiers": ["public"]}}, {"id": 63948, "method_name": "winRebellionAlliance", "class_name": "GameStatus", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void winRebellionAlliance()    { status = Status.WIN_REBELLION_ALLIANCE; }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/game/GameStatus.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Serializable"], "modifiers": ["public"]}}, {"id": 63949, "method_name": "winCouncilAlliance", "class_name": "GameStatus", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void winCouncilAlliance()      { status = Status.WIN_COUNCIL_ALLIANCE; }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/game/GameStatus.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Serializable"], "modifiers": ["public"]}}, {"id": 63950, "method_name": "finalScore", "class_name": "GameStatus", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int finalScore() {\n    \tif (numTurns() == 0)\n    \t\treturn 0;\n    \treturn (int) (sizeVal()*opponentsVal()*difficultyVal()*endConditionVal()/numTurns());\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/game/GameStatus.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Serializable"], "modifiers": ["public"]}}, {"id": 63951, "method_name": "sizeVal", "class_name": "GameStatus", "params": [], "throws": null, "modifiers": ["private"], "return_type": "float", "snippet": "    private float sizeVal() {\n    \tswitch(options().selectedGalaxySize()) {\n    \tcase IGameOptions.SIZE_TINY:       return 100;\n    \tcase IGameOptions.SIZE_SMALL:      return 200;\n    \tcase IGameOptions.SIZE_SMALL2:     return 250;\n    \tcase IGameOptions.SIZE_MEDIUM:     return 300;\n    \tcase IGameOptions.SIZE_MEDIUM2:    return 350;\n    \tcase IGameOptions.SIZE_LARGE:      return 400;\n    \tcase IGameOptions.SIZE_LARGE2:     return 450;\n    \tcase IGameOptions.SIZE_HUGE:       return 500;\n    \tcase IGameOptions.SIZE_HUGE2:      return 550;\n    \tcase IGameOptions.SIZE_MASSIVE:    return 600;\n    \tcase IGameOptions.SIZE_MASSIVE2:   return 620;\n    \tcase IGameOptions.SIZE_MASSIVE3:   return 640;\n    \tcase IGameOptions.SIZE_MASSIVE4:   return 660;\n    \tcase IGameOptions.SIZE_MASSIVE5:   return 680;\n    \tcase IGameOptions.SIZE_INSANE:     return 700;\n    \tcase IGameOptions.SIZE_LUDICROUS:  return 1000;\n    \t}\n    \treturn 0;\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/game/GameStatus.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Serializable"], "modifiers": ["public"]}}, {"id": 63952, "method_name": "opponentsVal", "class_name": "GameStatus", "params": [], "throws": null, "modifiers": ["private"], "return_type": "float", "snippet": "    private float opponentsVal() {\n    \treturn sqrt(options().selectedNumberOpponents());\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/game/GameStatus.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Serializable"], "modifiers": ["public"]}}, {"id": 63953, "method_name": "difficultyVal", "class_name": "GameStatus", "params": [], "throws": null, "modifiers": ["private"], "return_type": "float", "snippet": "    private float difficultyVal() {\n    \treturn 1.0f;\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/game/GameStatus.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Serializable"], "modifiers": ["public"]}}, {"id": 63954, "method_name": "endConditionVal", "class_name": "GameStatus", "params": [], "throws": null, "modifiers": ["private"], "return_type": "float", "snippet": "    private float endConditionVal() {\n    \tswitch(status) {\n    \tcase LOSS_OVERTHROWN:        return 1;\n    \tcase LOSS_NEW_REPUBLIC:      return 1;\n    \tcase LOSS_MILITARY:          return 3;\n    \tcase LOSS_DIPLOMATIC:        return 3;\n    \tcase LOSS_REBELLION:         return 3;\n    \tcase WIN_COUNCIL_ALLIANCE:   return 7;\n    \tcase WIN_DIPLOMATIC:         return 10;\n    \tcase WIN_NEW_REPUBLIC:       return 12;\n    \tcase WIN_MILITARY:           return 15;\n    \tcase WIN_MILITARY_ALLIANCE:  return 15;\n    \tcase WIN_REBELLION:          return 20;\n    \tcase WIN_REBELLION_ALLIANCE: return 20;\n    \tdefault:                     return 0;\n    \t}\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/game/GameStatus.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Serializable"], "modifiers": ["public"]}}, {"id": 63955, "method_name": "numTurns", "class_name": "GameStatus", "params": [], "throws": null, "modifiers": ["private"], "return_type": "int", "snippet": "    private int numTurns() {\n    \treturn galaxy().numberTurns();\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/game/GameStatus.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Serializable"], "modifiers": ["public"]}}, {"id": 63956, "method_name": "cast", "class_name": "CastException", "params": ["RtmCode"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void cast(RtmCode rtmCode) {\n        log.error(rtmCode.toString());\n        throw new CustomerException(rtmCode);\n    }", "url": "https://raw.githubusercontent.com/JeremyKinge/rtm/master/rtm-common/src/main/java/com/kingge/rtm/exception/CastException.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 63957, "method_name": "main", "class_name": "BaseBTree", "params": ["String"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void main(String[] args) {\n\n    }", "url": "https://raw.githubusercontent.com/hzc869046779/JAVA-STUDY/master/src/DataStructure/BTree/BaseBTree.java", "stars": "10", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 63958, "method_name": "isZh", "class_name": "LanguageUtil", "params": ["Context"], "throws": null, "modifiers": ["public", "static"], "return_type": "boolean", "snippet": "    public static boolean isZh(Context context) {\n        Locale locale = context.getResources().getConfiguration().locale;\n        if (locale.getCountry().equals(\"CN\"))\n            return true;\n        else\n            return false;\n    }", "url": "https://raw.githubusercontent.com/Florizt/RxMVVM/master/rxmvvmlib/src/main/java/com/rx/rxmvvmlib/util/LanguageUtil.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 63959, "method_name": "getColumnName", "class_name": "ColumnDO", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "\tpublic String getColumnName() {\n\t\treturn columnName;\n\t}", "url": "https://raw.githubusercontent.com/201206030/novel-plus/master/novel-admin/src/main/java/com/java2nb/common/domain/ColumnDO.java", "stars": "137", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 63960, "method_name": "setColumnName", "class_name": "ColumnDO", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void setColumnName(String columnName) {\n\t\tthis.columnName = columnName;\n\t}", "url": "https://raw.githubusercontent.com/201206030/novel-plus/master/novel-admin/src/main/java/com/java2nb/common/domain/ColumnDO.java", "stars": "137", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 63961, "method_name": "getDataType", "class_name": "ColumnDO", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "\tpublic String getDataType() {\n\t\treturn dataType;\n\t}", "url": "https://raw.githubusercontent.com/201206030/novel-plus/master/novel-admin/src/main/java/com/java2nb/common/domain/ColumnDO.java", "stars": "137", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 63962, "method_name": "setDataType", "class_name": "ColumnDO", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void setDataType(String dataType) {\n\t\tthis.dataType = dataType;\n\t}", "url": "https://raw.githubusercontent.com/201206030/novel-plus/master/novel-admin/src/main/java/com/java2nb/common/domain/ColumnDO.java", "stars": "137", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 63963, "method_name": "getComments", "class_name": "ColumnDO", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "\tpublic String getComments() {\n\t\treturn comments;\n\t}", "url": "https://raw.githubusercontent.com/201206030/novel-plus/master/novel-admin/src/main/java/com/java2nb/common/domain/ColumnDO.java", "stars": "137", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 63964, "method_name": "setComments", "class_name": "ColumnDO", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void setComments(String comments) {\n\t\tthis.comments = comments;\n\t}", "url": "https://raw.githubusercontent.com/201206030/novel-plus/master/novel-admin/src/main/java/com/java2nb/common/domain/ColumnDO.java", "stars": "137", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 63965, "method_name": "getAttrname", "class_name": "ColumnDO", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "\tpublic String getAttrname() {\n\t\treturn attrname;\n\t}", "url": "https://raw.githubusercontent.com/201206030/novel-plus/master/novel-admin/src/main/java/com/java2nb/common/domain/ColumnDO.java", "stars": "137", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 63966, "method_name": "setAttrname", "class_name": "ColumnDO", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void setAttrname(String attrname) {\n\t\tthis.attrname = attrname;\n\t}", "url": "https://raw.githubusercontent.com/201206030/novel-plus/master/novel-admin/src/main/java/com/java2nb/common/domain/ColumnDO.java", "stars": "137", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 63967, "method_name": "getAttrName", "class_name": "ColumnDO", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "\tpublic String getAttrName() {\n\t\treturn attrName;\n\t}", "url": "https://raw.githubusercontent.com/201206030/novel-plus/master/novel-admin/src/main/java/com/java2nb/common/domain/ColumnDO.java", "stars": "137", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 63968, "method_name": "setAttrName", "class_name": "ColumnDO", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void setAttrName(String attrName) {\n\t\tthis.attrName = attrName;\n\t}", "url": "https://raw.githubusercontent.com/201206030/novel-plus/master/novel-admin/src/main/java/com/java2nb/common/domain/ColumnDO.java", "stars": "137", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 63969, "method_name": "getAttrType", "class_name": "ColumnDO", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "\tpublic String getAttrType() {\n\t\treturn attrType;\n\t}", "url": "https://raw.githubusercontent.com/201206030/novel-plus/master/novel-admin/src/main/java/com/java2nb/common/domain/ColumnDO.java", "stars": "137", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 63970, "method_name": "setAttrType", "class_name": "ColumnDO", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void setAttrType(String attrType) {\n\t\tthis.attrType = attrType;\n\t}", "url": "https://raw.githubusercontent.com/201206030/novel-plus/master/novel-admin/src/main/java/com/java2nb/common/domain/ColumnDO.java", "stars": "137", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 63971, "method_name": "getExtra", "class_name": "ColumnDO", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "\tpublic String getExtra() {\n\t\treturn extra;\n\t}", "url": "https://raw.githubusercontent.com/201206030/novel-plus/master/novel-admin/src/main/java/com/java2nb/common/domain/ColumnDO.java", "stars": "137", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 63972, "method_name": "setExtra", "class_name": "ColumnDO", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void setExtra(String extra) {\n\t\tthis.extra = extra;\n\t}", "url": "https://raw.githubusercontent.com/201206030/novel-plus/master/novel-admin/src/main/java/com/java2nb/common/domain/ColumnDO.java", "stars": "137", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 63973, "method_name": "toString", "class_name": "ColumnDO", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "\tpublic String toString() {\n\t\treturn \"ColumnDO{\" +\n\t\t\t\t\"columnName='\" + columnName + '\\'' +\n\t\t\t\t\", dataType='\" + dataType + '\\'' +\n\t\t\t\t\", comments='\" + comments + '\\'' +\n\t\t\t\t\", attrName='\" + attrName + '\\'' +\n\t\t\t\t\", attrname='\" + attrname + '\\'' +\n\t\t\t\t\", attrType='\" + attrType + '\\'' +\n\t\t\t\t\", extra='\" + extra + '\\'' +\n\t\t\t\t'}';\n\t}", "url": "https://raw.githubusercontent.com/201206030/novel-plus/master/novel-admin/src/main/java/com/java2nb/common/domain/ColumnDO.java", "stars": "137", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 63974, "method_name": "initialize", "class_name": "SyncPanelControl", "params": ["URL", "ResourceBundle"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void initialize(URL location, ResourceBundle resources) {\n        \n        Sync.getStylesheets().add(LightTheme.toString());\n        \n       \n\n\n        \n        MSP_Split_Right_ListView.prefWidthProperty().bind(MSP_Split_Right.widthProperty());\n        MSP_Split_Right_ListView.prefHeightProperty().bind(MSP_Split_Right.heightProperty());\n        MSP_Split_Left_Content.prefWidthProperty().bind(MSP_Split_Left.widthProperty());\n        MSP_Split_Left_Content.prefHeightProperty().bind(MSP_Split_Left.heightProperty());\n        MSP_Split_Left_MediaView.fitWidthProperty().bind(mediaContent.widthProperty());\n        MSP_Split_Left_MediaView.fitHeightProperty().bind(mediaContent.heightProperty());\n\n/*        mediaContent.widthProperty().addListener(new ChangeListener<Number>() {\n            @Override\n            public void changed(ObservableValue<? extends Number> observable, Number oldValue, Number newValue) {\n                MSP_Split_Left_MediaView.setFitWidth((double)newValue);\n            }\n        });\n        mediaContent.heightProperty().addListener(new ChangeListener<Number>() {\n            @Override\n            public void changed(ObservableValue<? extends Number> observable, Number oldValue, Number newValue) {\n                MSP_Split_Left_MediaView.setFitHeight((double)newValue-6);\n\n            }\n        });*/\n    }", "url": "https://raw.githubusercontent.com/fordes123/Subtitles-View/master/src/main/java/org/fordes/subview/controller/SyncPanelControl.java", "stars": "151", "class_props": {"extends": null, "implements": ["Initializable"], "modifiers": ["public"]}}, {"id": 63975, "method_name": "modeChange", "class_name": "SyncPanelControl", "params": ["Boolean"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void modeChange(Boolean ModeState){\n        /*\u79fb\u9664\u6240\u6709\u6837\u5f0f\u8868*/\n        Sync.getStylesheets().remove(LightTheme);\n        Sync.getStylesheets().remove(DarkTheme);\n        if(ModeState)\n            Sync.getStylesheets().add(LightTheme.toString());\n        else\n            Sync.getStylesheets().add(DarkTheme.toString());\n        \n    }", "url": "https://raw.githubusercontent.com/fordes123/Subtitles-View/master/src/main/java/org/fordes/subview/controller/SyncPanelControl.java", "stars": "151", "class_props": {"extends": null, "implements": ["Initializable"], "modifiers": ["public"]}}, {"id": 63976, "method_name": "onManualSync", "class_name": "SyncPanelControl", "params": ["ActionEvent"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onManualSync(ActionEvent actionEvent) {\n        ListGroup.selectToggle(ManualSync);\n        ManualSync.setSelected(true);\n        \n        if(controller.focus_indicator.equals(ManualSync.getId()))\n            return;\n        controller.focus_indicator=ManualSync.getId();\n        Hide();\n        if(controller.inputset.getVideoFile()==null)\n            WaitingLoadingPanel.setVisible(true);\n        /*\u68c0\u67e5\u521d\u59cb\u5316\u662f\u5426\u5b8c\u6210*/\n        else if(!ManualSync_initialize_state)\n            ManualSync_initialize();\n        else{\n            \n            RefreshMSP_ListView();\n            ManualSyncPanel.setVisible(true);\n        }\n        \n\n    }", "url": "https://raw.githubusercontent.com/fordes123/Subtitles-View/master/src/main/java/org/fordes/subview/controller/SyncPanelControl.java", "stars": "151", "class_props": {"extends": null, "implements": ["Initializable"], "modifiers": ["public"]}}, {"id": 63977, "method_name": "onAutomaticSync", "class_name": "SyncPanelControl", "params": ["ActionEvent"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onAutomaticSync(ActionEvent actionEvent) {\n        ListGroup.selectToggle(AutomaticSync);\n        AutomaticSync.setSelected(true);\n        \n        if(controller.focus_indicator.equals(AutomaticSync.getId()))\n            return;\n        controller.focus_indicator=AutomaticSync.getId();\n        Hide();\n        AutomaticSyncPanel.setVisible(true);\n    }", "url": "https://raw.githubusercontent.com/fordes123/Subtitles-View/master/src/main/java/org/fordes/subview/controller/SyncPanelControl.java", "stars": "151", "class_props": {"extends": null, "implements": ["Initializable"], "modifiers": ["public"]}}, {"id": 63978, "method_name": "Hide", "class_name": "SyncPanelControl", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void Hide(){\n        ManualSyncPanel.setVisible(false);\n        AutomaticSyncPanel.setVisible(false);\n        WaitingLoadingPanel.setVisible(false);\n        stopManualSync();\n    }", "url": "https://raw.githubusercontent.com/fordes123/Subtitles-View/master/src/main/java/org/fordes/subview/controller/SyncPanelControl.java", "stars": "151", "class_props": {"extends": null, "implements": ["Initializable"], "modifiers": ["public"]}}, {"id": 63979, "method_name": "onDragOver", "class_name": "SyncPanelControl", "params": ["DragEvent"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onDragOver(DragEvent dragEvent) {\n        Dragboard db = dragEvent.getDragboard();\n        if (db.hasFiles()) {\n            File file=db.getFiles().get(0);\n            int Type=new FileUtil().getFileType(file);\n            if(Type>=10){\n                dragEvent.acceptTransferModes(TransferMode.COPY_OR_MOVE);\n                controller.inputset.setVideo(file,Type);\n            }\n        }\n        dragEvent.consume();\n    }", "url": "https://raw.githubusercontent.com/fordes123/Subtitles-View/master/src/main/java/org/fordes/subview/controller/SyncPanelControl.java", "stars": "151", "class_props": {"extends": null, "implements": ["Initializable"], "modifiers": ["public"]}}, {"id": 63980, "method_name": "onDragDropped", "class_name": "SyncPanelControl", "params": ["DragEvent"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onDragDropped(DragEvent dragEvent) {\n        ManualSync_initialize();\n    }", "url": "https://raw.githubusercontent.com/fordes123/Subtitles-View/master/src/main/java/org/fordes/subview/controller/SyncPanelControl.java", "stars": "151", "class_props": {"extends": null, "implements": ["Initializable"], "modifiers": ["public"]}}, {"id": 63981, "method_name": "chooseVideoFile", "class_name": "SyncPanelControl", "params": ["ActionEvent"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void chooseVideoFile(ActionEvent actionEvent) {\n        File videoFile = new OpenfileUtil().LoadVideo().showOpenDialog(controller.inputset.getStage());\n        if (videoFile != null) {\n            controller.inputset.setVideo(videoFile,new FileUtil().getFileType(videoFile));\n            ManualSync_initialize();\n            \n\n\n        }\n    }", "url": "https://raw.githubusercontent.com/fordes123/Subtitles-View/master/src/main/java/org/fordes/subview/controller/SyncPanelControl.java", "stars": "151", "class_props": {"extends": null, "implements": ["Initializable"], "modifiers": ["public"]}}, {"id": 63982, "method_name": "RefreshMSP_ListView", "class_name": "SyncPanelControl", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void RefreshMSP_ListView(){\n        if(ManualSync_initialize_state)\n            MSP_Split_Right_ListView.getItems().removeAll();\n                    \n        SubtitleList = new ArrayList<>();\n        for(String i:controller.inputset.getText().split(\"\\n\"))\n            SubtitleList.add(i+\"\\n\");\n        \n        try {\n            MSP_Split_Right_ListView.setItems(FXCollections.observableList(SubtitleList));\n        }catch (Exception e){\n\n        }\n    }", "url": "https://raw.githubusercontent.com/fordes123/Subtitles-View/master/src/main/java/org/fordes/subview/controller/SyncPanelControl.java", "stars": "151", "class_props": {"extends": null, "implements": ["Initializable"], "modifiers": ["public"]}}, {"id": 63983, "method_name": "stopManualSync", "class_name": "SyncPanelControl", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void stopManualSync(){\n        /*if(timer==null)\n            return;\n        timer.cancel();\n        mediaplayer.stop();\n        ManualPlayState=false;*/\n        if(ManualPlayState) {\n            timer.cancel();\n            mediaplayer.stop();\n            ManualPlayState=!ManualPlayState;\n        }\n    }", "url": "https://raw.githubusercontent.com/fordes123/Subtitles-View/master/src/main/java/org/fordes/subview/controller/SyncPanelControl.java", "stars": "151", "class_props": {"extends": null, "implements": ["Initializable"], "modifiers": ["public"]}}, {"id": 63984, "method_name": "ManualSync_initialize", "class_name": "SyncPanelControl", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void ManualSync_initialize(){\n        Hide();\n        ManualSyncPanel.setVisible(true);\n        \n        RefreshMSP_ListView();\n        \n        mediaplayer = new MediaPlayer(new Media(controller.inputset.getVideoFile().toURI().toString()));\n        MSP_Split_Left_MediaView.setMediaPlayer(mediaplayer);\n        \n        VideoInfoUtil vu=new VideoInfoUtil(controller.inputset.getVideoFile());\n        VideoWidth=vu.getVideoWidth();\n        VideoHeight=vu.getVideoHeight();\n        \n        dynamic((double)MSP_Split_Left_Content.getWidth());\n        \n        MSP_Split_Left_Content.widthProperty().addListener(new ChangeListener<Number>() {\n            @Override\n            public void changed(ObservableValue<? extends Number> observable, Number oldValue, Number newValue) {\n                dynamic((double)newValue);\n            }\n        });\n        \n        mediaplayer.setVolume(0.50);\n        video_vol.setText(\"\u97f3\u91cf\uff1a50\");\n        \n        MSP_Split_Right_ListView.getSelectionModel().selectedItemProperty().addListener(new ChangeListener() {\n            @Override\n            public void changed(ObservableValue observable, Object oldValue, Object newValue) {\n                \n                if (controller.timelineUtil.TimelineCheck(newValue.toString().trim(),1)) {\n                    if (ManualPlayState) \n                        timer.cancel();\n                    mediaplayer.stop();\n                    \n                    long first =controller.timelineUtil.TimelineToMillisecond(newValue.toString().substring(0, 12));\n                    \n                    long last = controller.timelineUtil.TimelineToMillisecond(newValue.toString().substring(17, 29));\n                    \n                    long time = last - first;\n                    if (time <= 0) {\n                        new ToastUtil().toast(\"\u6b64\u884c\u65f6\u95f4\u8f74\u5b58\u5728\u9519\u8bef\uff0c\u68c0\u67e5\u4e00\u4e0b~\", 2000);\n                        return;\n                    }\n                    \n                    TimerTask task = new TimerTask() {\n                        @Override\n                        public void run() {\n                            Platform.runLater(() -> mediaplayer.stop());\n                            ManualPlayState = false;\n                        }\n                    };\n                    mediaplayer.setStartTime(new Duration(first));\n                    timer=new Timer();\n                    timer.schedule(task, time);\n\n                    \n                    mediaplayer.play();\n                    ManualPlayState = true;\n                }\n            }\n        });\n        MSP_Split_Right_ListView.setCellFactory(TextFieldListCell.forListView());\n        MSP_Split_Right_ListView.setEditable(true);\n        ManualSync_initialize_state=true;\n\n    }", "url": "https://raw.githubusercontent.com/fordes123/Subtitles-View/master/src/main/java/org/fordes/subview/controller/SyncPanelControl.java", "stars": "151", "class_props": {"extends": null, "implements": ["Initializable"], "modifiers": ["public"]}}, {"id": 63985, "method_name": "saveListView", "class_name": "SyncPanelControl", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void saveListView(){\n        String str=\"\";\n        String[] temp=MSP_Split_Right_ListView.getItems().toString().split(\"\\n\");\n        for(int i=0;i<temp.length-1;i++){\n            str+=MSP_Split_Right_ListView.getItems().get(i);\n        }\n        controller.inputset.setText(str);\n    }", "url": "https://raw.githubusercontent.com/fordes123/Subtitles-View/master/src/main/java/org/fordes/subview/controller/SyncPanelControl.java", "stars": "151", "class_props": {"extends": null, "implements": ["Initializable"], "modifiers": ["public"]}}, {"id": 63986, "method_name": "dynamic", "class_name": "SyncPanelControl", "params": ["double"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void dynamic(double value){\n/*        MSP_Split_Left_MediaView.setFitWidth(value-40);\n        double proportion=(VideoHeight*value)/VideoWidth;\n        mediaRowConstraints.setMaxHeight(proportion);\n        MSP_Split_Left_MediaView.setFitHeight(proportion-3);*/\n\n        double proportion=(double)VideoWidth/VideoHeight;\n        double trueHeight=(value-40)/proportion+15;\n        mediaRowConstraints.setMaxHeight(trueHeight);\n        mediaContent.setMinWidth(value-40);\n        mediaContent.setMinHeight(trueHeight-15);\n        \n    }", "url": "https://raw.githubusercontent.com/fordes123/Subtitles-View/master/src/main/java/org/fordes/subview/controller/SyncPanelControl.java", "stars": "151", "class_props": {"extends": null, "implements": ["Initializable"], "modifiers": ["public"]}}, {"id": 63987, "method_name": "mediaScroll", "class_name": "SyncPanelControl", "params": ["ScrollEvent"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void mediaScroll(ScrollEvent scrollEvent) {\n        double vol;\n        if(scrollEvent.getDeltaY()>0){\n            vol=mediaplayer.getVolume()+0.02;\n            if(vol>1.0){\n                vol=(double)1;\n                new ToastUtil().toast(\"\u97f3\u91cf\u5df2\u6700\u5927\uff0c\u7ee7\u7eed\u63d0\u5347\u8bf7\u5c1d\u8bd5\u8c03\u6574\u7cfb\u7edf\u97f3\u91cf\",1000);\n            }\n        }\n        else {\n            vol=mediaplayer.getVolume()-0.02;\n            if(vol<0){\n                vol=0;\n                new ToastUtil().toast(\"\u97f3\u91cf\u5df2\u5173\u95ed\",2000);\n            }\n\n        }\n        mediaplayer.setVolume(vol);\n        video_vol.setText(\"\u97f3\u91cf\uff1a\"+Math.round(vol*100));\n    }", "url": "https://raw.githubusercontent.com/fordes123/Subtitles-View/master/src/main/java/org/fordes/subview/controller/SyncPanelControl.java", "stars": "151", "class_props": {"extends": null, "implements": ["Initializable"], "modifiers": ["public"]}}, {"id": 63988, "method_name": "ManualListEditCommit", "class_name": "SyncPanelControl", "params": ["ListView"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void ManualListEditCommit(ListView.EditEvent editEvent) {\n        new ToastUtil().toast(\"\u5b8c\u6210\u7f16\u8f91\", 1000);\n        MSP_Split_Right_ListView.getItems().set(editEvent.getIndex(), editEvent.getNewValue()+\"\\n\");\n        saveListView();\n    }", "url": "https://raw.githubusercontent.com/fordes123/Subtitles-View/master/src/main/java/org/fordes/subview/controller/SyncPanelControl.java", "stars": "151", "class_props": {"extends": null, "implements": ["Initializable"], "modifiers": ["public"]}}, {"id": 63989, "method_name": "ManualListEditStart", "class_name": "SyncPanelControl", "params": ["ListView"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void ManualListEditStart(ListView.EditEvent editEvent) {\n        new ToastUtil().toast(\"\u5f00\u59cb\u7f16\u8f91\", 1000);\n    }", "url": "https://raw.githubusercontent.com/fordes123/Subtitles-View/master/src/main/java/org/fordes/subview/controller/SyncPanelControl.java", "stars": "151", "class_props": {"extends": null, "implements": ["Initializable"], "modifiers": ["public"]}}, {"id": 63990, "method_name": "isValid", "class_name": "NoValidateRequest", "params": ["Object"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "\tpublic boolean isValid(Object authObject) {\n\t\treturn true;\n\t}", "url": "https://raw.githubusercontent.com/DP-3T/dp3t-sdk-backend/develop/dpppt-backend-sdk/dpppt-backend-sdk-ws/src/main/java/org/dpppt/backend/sdk/ws/security/NoValidateRequest.java", "stars": "125", "class_props": {"extends": null, "implements": ["ValidateRequest"], "modifiers": ["public"]}}, {"id": 63991, "method_name": "getKeyDate", "class_name": "NoValidateRequest", "params": ["Object", "Object"], "throws": ["InvalidDateException"], "modifiers": ["public"], "return_type": "long", "snippet": "\tpublic long getKeyDate(Object authObject, Object others) throws InvalidDateException {\n\t\tif (others instanceof ExposeeRequest) {\n\t\t\tExposeeRequest request = ((ExposeeRequest) others);\n\t\t\tif (request.getKeyDate() < OffsetDateTime.now().minusDays(21).toInstant().toEpochMilli()) {\n\t\t\t\tthrow new InvalidDateException();\n\t\t\t} else if (request.getKeyDate() > OffsetDateTime.now().withOffsetSameInstant(ZoneOffset.UTC).toInstant()\n\t\t\t\t\t.toEpochMilli()) {\n\t\t\t\tthrow new InvalidDateException();\n\t\t\t}\n\t\t\treturn request.getKeyDate();\n\t\t}\n\t\tif (others instanceof GaenKey) {\n\t\t\tGaenKey key = ((GaenKey) others);\n\t\t\tvar requestDate = Duration.of(key.getRollingStartNumber(), GaenUnit.TenMinutes);\n\t\t\tif (requestDate.toMillis() < OffsetDateTime.now().minusDays(21).toInstant().toEpochMilli()) {\n\t\t\t\tthrow new InvalidDateException();\n\t\t\t} else if (requestDate.toMillis() > OffsetDateTime.now().withOffsetSameInstant(ZoneOffset.UTC).toInstant()\n\t\t\t\t\t.toEpochMilli()) {\n\t\t\t\tthrow new InvalidDateException();\n\t\t\t}\n\t\t\treturn requestDate.toMillis();\n\t\t}\n\t\tthrow new IllegalArgumentException();\n\t}", "url": "https://raw.githubusercontent.com/DP-3T/dp3t-sdk-backend/develop/dpppt-backend-sdk/dpppt-backend-sdk-ws/src/main/java/org/dpppt/backend/sdk/ws/security/NoValidateRequest.java", "stars": "125", "class_props": {"extends": null, "implements": ["ValidateRequest"], "modifiers": ["public"]}}, {"id": 63992, "method_name": "isFakeRequest", "class_name": "NoValidateRequest", "params": ["Object", "Object"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "\tpublic boolean isFakeRequest(Object authObject, Object others) {\n\t\tif (others instanceof ExposeeRequest) {\n\t\t\tExposeeRequest request = ((ExposeeRequest) others);\n\t\t\treturn request.isFake() == 1;\n\t\t}\n\t\tif (others instanceof GaenKey) {\n\t\t\tGaenKey request = ((GaenKey) others);\n\t\t\treturn request.getFake() == 1;\n\t\t}\n\t\tthrow new IllegalArgumentException();\n\t}", "url": "https://raw.githubusercontent.com/DP-3T/dp3t-sdk-backend/develop/dpppt-backend-sdk/dpppt-backend-sdk-ws/src/main/java/org/dpppt/backend/sdk/ws/security/NoValidateRequest.java", "stars": "125", "class_props": {"extends": null, "implements": ["ValidateRequest"], "modifiers": ["public"]}}, {"id": 63993, "method_name": "main", "class_name": "FlowSwitch", "params": ["String"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "\tpublic static void main(String[] args) {\n\t\tSystem.out.println(\"please choice:\");\n\t\tSystem.out.println(\" 1: Rock\");//\u77f3\u982d\n\t\tSystem.out.println(\" 2: Scis1sors\");//\u526a\u5200\n\t\tSystem.out.println(\" 3: Paper\");//\u5e03\n\t\t// \u7528\u6237\u8f93\u5165:\n\t\tScanner scanner = new Scanner (System.in);\n\t\tint choice = scanner.nextInt();\n\t\t// \u8ba1\u7b97\u673a\u968f\u673a\u6570 1, 2, 3:\n\t\t//int random = 1 + (int) Math.random() * 3;\n\t\t//\u89e3\u51b3\u4e86radom\u7684\u503c\u4e00\u76f4\u4e0d\u53d8\u7684\u95ee\u9898\n\t\tRandom rd = new Random();\n\t\tint random = 1 + rd.nextInt(3);\n\t\tswitch (choice) {\n\t\t// TODO:\n\t\tcase 1://\u77f3\u5934\n\t\t\tif(random == 1) {//\u77f3\u5934\n\t\t\t\tSystem.out.println(\"Rock\");\n\t\t\t\tSystem.out.println(\"!\");\n\t\t\t}else if(random == 2) {//\u526a\u5200\n\t\t\t\tSystem.out.println(\"Scissors\");\n\t\t\t\tSystem.out.println(\"win!\");\n\t\t\t}else {//\u5e03\n\t\t\t\tSystem.out.println(\"Paper\");\n\t\t\t\tSystem.out.println(\"lose!\");\n\t\t\t}\n\t\t\tbreak;\n\t\tcase 2://\u526a\u5200\n\t\t\tif(random == 1) {//\u77f3\u5934\n\t\t\t\tSystem.out.println(\"Rock\");\n\t\t\t\tSystem.out.println(\"lose!\");\n\t\t\t}else if(random == 2) {//\u526a\u5200\n\t\t\t\tSystem.out.println(\"Scissors\");\n\t\t\t\tSystem.out.println(\"!\");\n\t\t\t}else {//\u5e03\n\t\t\t\tSystem.out.println(\"Paper\");\n\t\t\t\tSystem.out.println(\"win!\");\n\t\t\t}\n\t\t\tbreak;\n\t\tcase 3://\u5e03\n\t\t\tif(random == 1) {//\u77f3\u5934\n\t\t\t\tSystem.out.println(\"Rock\");\n\t\t\t\tSystem.out.println(\"win!\");\n\t\t\t}else if(random == 2) {//\u526a\u5200\n\t\t\t\tSystem.out.println(\"lose!\");\n\t\t\t\tSystem.out.println(\"Scissors\");\n\t\t\t}else {//\u5e03\n\t\t\t\tSystem.out.println(\"Paper\");\n\t\t\t\tSystem.out.println(\"!\");\n\t\t\tbreak;\n\t\t}\n\t\t\n\t\t/*java12_update\n\t\tString fruit = \"apple\";\n        int opt = switch (fruit) {\n            case \"apple\" -> 1;\n            case \"pear\", \"mango\" -> 2;\n            default -> 0;\n        }; // \u6ce8\u610f\u8d4b\u503c\u8bed\u53e5\u8981\u4ee5;\u7ed3\u675f\n        System.out.println(\"opt = \" + opt);\n        */\n\t\t}\n\t}", "url": "https://raw.githubusercontent.com/IzzyPrime/JavaWorkspace/master/JavaPractice/part1/src/com/flow/javapractice/FlowSwitch.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 63994, "method_name": "getColumnIndex", "class_name": "TransformerExecutionParas", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Integer", "snippet": "    public Integer getColumnIndex() {\n        return columnIndex;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/engine/datax/datax-core/src/main/java/com/alibaba/datax/core/transport/transformer/TransformerExecutionParas.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 63995, "method_name": "getParas", "class_name": "TransformerExecutionParas", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String[] getParas() {\n        return paras;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/engine/datax/datax-core/src/main/java/com/alibaba/datax/core/transport/transformer/TransformerExecutionParas.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 63996, "method_name": "gettContext", "class_name": "TransformerExecutionParas", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Map<String,Object>", "snippet": "    public Map<String, Object> gettContext() {\n        return tContext;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/engine/datax/datax-core/src/main/java/com/alibaba/datax/core/transport/transformer/TransformerExecutionParas.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 63997, "method_name": "getCode", "class_name": "TransformerExecutionParas", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getCode() {\n        return code;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/engine/datax/datax-core/src/main/java/com/alibaba/datax/core/transport/transformer/TransformerExecutionParas.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 63998, "method_name": "getExtraPackage", "class_name": "TransformerExecutionParas", "params": [], "throws": null, "modifiers": ["public"], "return_type": "List<String>", "snippet": "    public List<String> getExtraPackage() {\n        return extraPackage;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/engine/datax/datax-core/src/main/java/com/alibaba/datax/core/transport/transformer/TransformerExecutionParas.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 63999, "method_name": "setColumnIndex", "class_name": "TransformerExecutionParas", "params": ["Integer"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setColumnIndex(Integer columnIndex) {\n        this.columnIndex = columnIndex;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/engine/datax/datax-core/src/main/java/com/alibaba/datax/core/transport/transformer/TransformerExecutionParas.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 64000, "method_name": "setParas", "class_name": "TransformerExecutionParas", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setParas(String[] paras) {\n        this.paras = paras;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/engine/datax/datax-core/src/main/java/com/alibaba/datax/core/transport/transformer/TransformerExecutionParas.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 64001, "method_name": "settContext", "class_name": "TransformerExecutionParas", "params": ["Map<String,Object>"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void settContext(Map<String, Object> tContext) {\n        this.tContext = tContext;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/engine/datax/datax-core/src/main/java/com/alibaba/datax/core/transport/transformer/TransformerExecutionParas.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 64002, "method_name": "setCode", "class_name": "TransformerExecutionParas", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setCode(String code) {\n        this.code = code;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/engine/datax/datax-core/src/main/java/com/alibaba/datax/core/transport/transformer/TransformerExecutionParas.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 64003, "method_name": "setExtraPackage", "class_name": "TransformerExecutionParas", "params": ["List<String>"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setExtraPackage(List<String> extraPackage) {\n        this.extraPackage = extraPackage;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/engine/datax/datax-core/src/main/java/com/alibaba/datax/core/transport/transformer/TransformerExecutionParas.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 64004, "method_name": "getFieldOrder", "class_name": "KInfoProc64", "params": [], "throws": null, "modifiers": ["protected"], "return_type": "List<String>", "snippet": "    protected List<String> getFieldOrder() {\n        return Arrays.asList(\"kp_proc\", \"kp_eproc\");\n    }", "url": "https://raw.githubusercontent.com/wmm1996528/unidbg_douyin10/master/src/main/java/com/github/unidbg/ios/struct/sysctl/KInfoProc64.java", "stars": "16", "class_props": {"extends": "UnicornStructure", "implements": null, "modifiers": ["public"]}}, {"id": 64005, "method_name": "setup", "class_name": "LibraryFileLoaderTest", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setup() {\n        testFileLoader = new LibraryFileLoader();\n        testBookData = new ArrayList<>();\n        testBookData.add(DATA_HEADER);\n        testBookData.add(DATA_SAMPLE1);\n        testBookData.add(DATA_SAMPLE2);\n\n        setBookData(testBookData);\n    }", "url": "https://raw.githubusercontent.com/LJacksonPan/Y1-OOP-CW3/master/tests/LibraryFileLoaderTest.java", "stars": "6", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 64006, "method_name": "setBookData", "class_name": "LibraryFileLoaderTest", "params": ["List<String>"], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void setBookData(List<String> data) {\n        // circumvent file loading by directly setting\n        // the corresponding field using reflection\n        FieldTestUtils.setPrivateField(testFileLoader, testFileLoader.getClass(), FILE_CONTENT_FIELD_NAME, data);\n    }", "url": "https://raw.githubusercontent.com/LJacksonPan/Y1-OOP-CW3/master/tests/LibraryFileLoaderTest.java", "stars": "6", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 64007, "method_name": "checkBookCollectionResult", "class_name": "LibraryFileLoaderTest", "params": ["List<String>", "List<Object>"], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void checkBookCollectionResult(List<String> bookData, List<Object[]> expectedValues) {\n        List<BookEntry> books = testFileLoader.parseFileContent();\n        assertNotNull(\"Resulting book collection is not expected to be null.\", books);\n        assertEquals(\"Resulting book data has unexpected size.\", expectedValues.size(), books.size());\n\n        for (int i = 0; i < books.size(); i++) {\n            BookEntryTestUtils.checkBookFieldValues(books.get(i), BookEntryTest.BOOK_ENTRY_FIELD_NAMES,\n                    expectedValues.get(i));\n        }\n    }", "url": "https://raw.githubusercontent.com/LJacksonPan/Y1-OOP-CW3/master/tests/LibraryFileLoaderTest.java", "stars": "6", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 64008, "method_name": "getDate", "class_name": "ArchiveDto", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getDate() {\n        return date;\n    }", "url": "https://raw.githubusercontent.com/chenval/my-site/master/src/main/java/cn/blog/dto/ArchiveDto.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 64009, "method_name": "setDate", "class_name": "ArchiveDto", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setDate(String date) {\n        this.date = date;\n    }", "url": "https://raw.githubusercontent.com/chenval/my-site/master/src/main/java/cn/blog/dto/ArchiveDto.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 64010, "method_name": "getCount", "class_name": "ArchiveDto", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getCount() {\n        return count;\n    }", "url": "https://raw.githubusercontent.com/chenval/my-site/master/src/main/java/cn/blog/dto/ArchiveDto.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 64011, "method_name": "setCount", "class_name": "ArchiveDto", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setCount(String count) {\n        this.count = count;\n    }", "url": "https://raw.githubusercontent.com/chenval/my-site/master/src/main/java/cn/blog/dto/ArchiveDto.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 64012, "method_name": "getArticles", "class_name": "ArchiveDto", "params": [], "throws": null, "modifiers": ["public"], "return_type": "List<ContentDomain>", "snippet": "    public List<ContentDomain> getArticles() {\n        return articles;\n    }", "url": "https://raw.githubusercontent.com/chenval/my-site/master/src/main/java/cn/blog/dto/ArchiveDto.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 64013, "method_name": "setArticles", "class_name": "ArchiveDto", "params": ["List<ContentDomain>"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setArticles(List<ContentDomain> articles) {\n        this.articles = articles;\n    }", "url": "https://raw.githubusercontent.com/chenval/my-site/master/src/main/java/cn/blog/dto/ArchiveDto.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 64014, "method_name": "getDevice", "class_name": "ConnectionImpl", "params": [], "throws": null, "modifiers": ["public"], "return_type": "BluetoothDevice", "snippet": "    public BluetoothDevice getDevice() {\n        return device;\n    }", "url": "https://raw.githubusercontent.com/wandersnail/classic-bluetooth/master/library/src/main/java/cn/wandersnail/bluetooth/ConnectionImpl.java", "stars": "3", "class_props": {"extends": "Connection", "implements": null, "modifiers": []}}, {"id": 64015, "method_name": "connect", "class_name": "ConnectionImpl", "params": ["UUID", "ConnectCallback"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void connect(UUID uuid, ConnectCallback callback) {\n        if (isReleased) {\n            if (callback != null) {\n                callback.onFail(\"Already released.\", null);\n            }\n        } else if (socketConnection != null && socketConnection.isConnected()) {\n            if (callback != null) {\n                callback.onFail(\"Already connected.\", null);\n            }\n        } else {\n            socketConnection = new SocketConnection(this, device, uuid, callback);\n        }        \n    }", "url": "https://raw.githubusercontent.com/wandersnail/classic-bluetooth/master/library/src/main/java/cn/wandersnail/bluetooth/ConnectionImpl.java", "stars": "3", "class_props": {"extends": "Connection", "implements": null, "modifiers": []}}, {"id": 64016, "method_name": "isConnected", "class_name": "ConnectionImpl", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean isConnected() {\n        return state == STATE_CONNECTED;\n    }", "url": "https://raw.githubusercontent.com/wandersnail/classic-bluetooth/master/library/src/main/java/cn/wandersnail/bluetooth/ConnectionImpl.java", "stars": "3", "class_props": {"extends": "Connection", "implements": null, "modifiers": []}}, {"id": 64017, "method_name": "disconnect", "class_name": "ConnectionImpl", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void disconnect() {\n        if (socketConnection != null) {\n            socketConnection.close();\n            socketConnection = null;\n        }\n    }", "url": "https://raw.githubusercontent.com/wandersnail/classic-bluetooth/master/library/src/main/java/cn/wandersnail/bluetooth/ConnectionImpl.java", "stars": "3", "class_props": {"extends": "Connection", "implements": null, "modifiers": []}}, {"id": 64018, "method_name": "release", "class_name": "ConnectionImpl", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void release() {\n        release(false);\n    }", "url": "https://raw.githubusercontent.com/wandersnail/classic-bluetooth/master/library/src/main/java/cn/wandersnail/bluetooth/ConnectionImpl.java", "stars": "3", "class_props": {"extends": "Connection", "implements": null, "modifiers": []}}, {"id": 64019, "method_name": "releaseNoEvent", "class_name": "ConnectionImpl", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void releaseNoEvent() {\n        release(true);\n    }", "url": "https://raw.githubusercontent.com/wandersnail/classic-bluetooth/master/library/src/main/java/cn/wandersnail/bluetooth/ConnectionImpl.java", "stars": "3", "class_props": {"extends": "Connection", "implements": null, "modifiers": []}}, {"id": 64020, "method_name": "release", "class_name": "ConnectionImpl", "params": ["boolean"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void release(boolean noEvent) {\n        if (!isReleased) {\n            clearQueue();\n            disconnect();\n            isReleased = true;\n            state = Connection.STATE_RELEASED;\n            if (BTManager.isDebugMode) {\n                Log.d(BTManager.DEBUG_TAG, \"connection released!\");\n            }\n            if (!noEvent) {\n                if (observer != null) {\n                    posterDispatcher.post(observer, MethodInfoGenerator.onConnectionStateChanged(device, state));\n                }\n                observable.notifyObservers(MethodInfoGenerator.onConnectionStateChanged(device, state));\n            }\n            btManager.releaseConnection(device);//\u4ece\u96c6\u5408\u4e2d\u5220\u9664\n        }\n    }", "url": "https://raw.githubusercontent.com/wandersnail/classic-bluetooth/master/library/src/main/java/cn/wandersnail/bluetooth/ConnectionImpl.java", "stars": "3", "class_props": {"extends": "Connection", "implements": null, "modifiers": []}}, {"id": 64021, "method_name": "getState", "class_name": "ConnectionImpl", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getState() {\n        return state;\n    }", "url": "https://raw.githubusercontent.com/wandersnail/classic-bluetooth/master/library/src/main/java/cn/wandersnail/bluetooth/ConnectionImpl.java", "stars": "3", "class_props": {"extends": "Connection", "implements": null, "modifiers": []}}, {"id": 64022, "method_name": "setState", "class_name": "ConnectionImpl", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setState(int state) {\n        if (BTManager.isDebugMode) {\n            Log.d(BTManager.DEBUG_TAG, \"state changed: \" + state);\n        }\n        this.state = state;\n        if (observer != null) {\n            posterDispatcher.post(observer, MethodInfoGenerator.onConnectionStateChanged(device, state));\n        }\n        observable.notifyObservers(MethodInfoGenerator.onConnectionStateChanged(device, state));\n    }", "url": "https://raw.githubusercontent.com/wandersnail/classic-bluetooth/master/library/src/main/java/cn/wandersnail/bluetooth/ConnectionImpl.java", "stars": "3", "class_props": {"extends": "Connection", "implements": null, "modifiers": []}}, {"id": 64023, "method_name": "clearQueue", "class_name": "ConnectionImpl", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void clearQueue() {\n        synchronized (this) {\n            writeQueue.clear();\n        }\n    }", "url": "https://raw.githubusercontent.com/wandersnail/classic-bluetooth/master/library/src/main/java/cn/wandersnail/bluetooth/ConnectionImpl.java", "stars": "3", "class_props": {"extends": "Connection", "implements": null, "modifiers": []}}, {"id": 64024, "method_name": "write", "class_name": "ConnectionImpl", "params": ["String", "byte", "WriteCallback"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void write(@Nullable String tag, @NonNull byte[] value, @Nullable WriteCallback callback) {\n        write(tag, value, false, callback);\n    }", "url": "https://raw.githubusercontent.com/wandersnail/classic-bluetooth/master/library/src/main/java/cn/wandersnail/bluetooth/ConnectionImpl.java", "stars": "3", "class_props": {"extends": "Connection", "implements": null, "modifiers": []}}, {"id": 64025, "method_name": "writeImmediately", "class_name": "ConnectionImpl", "params": ["String", "byte", "WriteCallback"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void writeImmediately(@Nullable String tag, @NonNull byte[] value, @Nullable WriteCallback callback) {\n        write(tag, value, true, callback);\n    }", "url": "https://raw.githubusercontent.com/wandersnail/classic-bluetooth/master/library/src/main/java/cn/wandersnail/bluetooth/ConnectionImpl.java", "stars": "3", "class_props": {"extends": "Connection", "implements": null, "modifiers": []}}, {"id": 64026, "method_name": "write", "class_name": "ConnectionImpl", "params": ["String", "byte", "boolean", "WriteCallback"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void write(String tag, byte[] value, boolean immediately, @Nullable WriteCallback callback) {\n        tag = tag == null ? StringUtils.randomUuid() : tag;\n        if (isReleased || !bluetoothAdapter.isEnabled()) {\n            if (callback != null) {\n                callback.onWrite(device, tag, value, false);\n            } else {\n                if (observer != null) {\n                    posterDispatcher.post(observer, MethodInfoGenerator.onWrite(device, tag, value, false));\n                }\n                observable.notifyObservers(MethodInfoGenerator.onWrite(device, tag, value, false));\n            }\n        } else {\n            synchronized (this) {\n                SocketConnection.WriteData writeData = new SocketConnection.WriteData(tag, value);\n                writeData.callback = callback;\n                if (immediately) {\n                    writeQueue.add(0, writeData);\n                } else {\n                    writeQueue.add(writeData);\n                }\n                if (!writeRunning) {\n                    writeRunning = true;\n                    btManager.getExecutorService().execute(writeRunnable);\n                }\n            }\n        }\n    }", "url": "https://raw.githubusercontent.com/wandersnail/classic-bluetooth/master/library/src/main/java/cn/wandersnail/bluetooth/ConnectionImpl.java", "stars": "3", "class_props": {"extends": "Connection", "implements": null, "modifiers": []}}, {"id": 64027, "method_name": "getInstance", "class_name": "ActivityStackManager", "params": [], "throws": null, "modifiers": ["public", "static"], "return_type": "ActivityStackManager", "snippet": "    public static ActivityStackManager getInstance() {\n        // \u52a0\u5165\u53cc\u91cd\u6821\u9a8c\u9501\n        if(sInstance == null) {\n            synchronized (ActivityStackManager.class) {\n                if(sInstance == null){\n                    sInstance = new ActivityStackManager();\n                }\n            }\n        }\n        return sInstance;\n    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/helper/ActivityStackManager.java", "stars": "1", "class_props": {"extends": null, "implements": ["Application"], "modifiers": ["final", "public"]}}, {"id": 64028, "method_name": "init", "class_name": "ActivityStackManager", "params": ["Application"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void init(Application application) {\n        mApplication = application;\n        application.registerActivityLifecycleCallbacks(this);\n    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/helper/ActivityStackManager.java", "stars": "1", "class_props": {"extends": null, "implements": ["Application"], "modifiers": ["final", "public"]}}, {"id": 64029, "method_name": "getApplication", "class_name": "ActivityStackManager", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Application", "snippet": "    public Application getApplication() {\n        return mApplication;\n    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/helper/ActivityStackManager.java", "stars": "1", "class_props": {"extends": null, "implements": ["Application"], "modifiers": ["final", "public"]}}, {"id": 64030, "method_name": "getTopActivity", "class_name": "ActivityStackManager", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Activity", "snippet": "    public Activity getTopActivity() {\n        return mActivitySet.get(mCurrentTag);\n    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/helper/ActivityStackManager.java", "stars": "1", "class_props": {"extends": null, "implements": ["Application"], "modifiers": ["final", "public"]}}, {"id": 64031, "method_name": "finishAllActivities", "class_name": "ActivityStackManager", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void finishAllActivities() {\n        finishAllActivities((Class<? extends Activity>) null);\n    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/helper/ActivityStackManager.java", "stars": "1", "class_props": {"extends": null, "implements": ["Application"], "modifiers": ["final", "public"]}}, {"id": 64032, "method_name": "finishAllActivities", "class_name": "ActivityStackManager", "params": ["Class<Activity>"], "throws": null, "modifiers": ["final", "public"], "return_type": "void", "snippet": "    public final void finishAllActivities(Class<? extends Activity>... classArray) {\n        String[] keys = mActivitySet.keySet().toArray(new String[]{});\n        for (String key : keys) {\n            Activity activity = mActivitySet.get(key);\n            if (activity != null && !activity.isFinishing()) {\n                boolean whiteClazz = false;\n                if (classArray != null) {\n                    for (Class<? extends Activity> clazz : classArray) {\n                        if (activity.getClass() == clazz) {\n                            whiteClazz = true;\n                        }\n                    }\n                }\n                // \u5982\u679c\u4e0d\u662f\u767d\u540d\u5355\u4e0a\u9762\u7684 Activity \u5c31\u9500\u6bc1\u6389\n                if (!whiteClazz) {\n                    activity.finish();\n                    mActivitySet.remove(key);\n                }\n            }\n        }\n    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/helper/ActivityStackManager.java", "stars": "1", "class_props": {"extends": null, "implements": ["Application"], "modifiers": ["final", "public"]}}, {"id": 64033, "method_name": "getObjectTag", "class_name": "ActivityStackManager", "params": ["Object"], "throws": null, "modifiers": ["static", "private"], "return_type": "String", "snippet": "    private static String getObjectTag(Object object) {\n        // \u5bf9\u8c61\u6240\u5728\u7684\u5305\u540d + \u5bf9\u8c61\u7684\u5185\u5b58\u5730\u5740\n        return object.getClass().getName() + Integer.toHexString(object.hashCode());\n    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/helper/ActivityStackManager.java", "stars": "1", "class_props": {"extends": null, "implements": ["Application"], "modifiers": ["final", "public"]}}, {"id": 64034, "method_name": "onActivityCreated", "class_name": "ActivityStackManager", "params": ["Activity", "Bundle"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onActivityCreated(@NonNull Activity activity, @Nullable Bundle savedInstanceState) {\n        mCurrentTag = getObjectTag(activity);\n        mActivitySet.put(getObjectTag(activity), activity);\n    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/helper/ActivityStackManager.java", "stars": "1", "class_props": {"extends": null, "implements": ["Application"], "modifiers": ["final", "public"]}}, {"id": 64035, "method_name": "onActivityStarted", "class_name": "ActivityStackManager", "params": ["Activity"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onActivityStarted(@NonNull Activity activity) {\n        mCurrentTag = getObjectTag(activity);\n    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/helper/ActivityStackManager.java", "stars": "1", "class_props": {"extends": null, "implements": ["Application"], "modifiers": ["final", "public"]}}, {"id": 64036, "method_name": "onActivityResumed", "class_name": "ActivityStackManager", "params": ["Activity"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onActivityResumed(@NonNull Activity activity) {\n        mCurrentTag = getObjectTag(activity);\n    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/helper/ActivityStackManager.java", "stars": "1", "class_props": {"extends": null, "implements": ["Application"], "modifiers": ["final", "public"]}}, {"id": 64037, "method_name": "onActivityPaused", "class_name": "ActivityStackManager", "params": ["Activity"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onActivityPaused(@NonNull Activity activity) {}", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/helper/ActivityStackManager.java", "stars": "1", "class_props": {"extends": null, "implements": ["Application"], "modifiers": ["final", "public"]}}, {"id": 64038, "method_name": "onActivityStopped", "class_name": "ActivityStackManager", "params": ["Activity"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onActivityStopped(@NonNull Activity activity) {}", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/helper/ActivityStackManager.java", "stars": "1", "class_props": {"extends": null, "implements": ["Application"], "modifiers": ["final", "public"]}}, {"id": 64039, "method_name": "onActivitySaveInstanceState", "class_name": "ActivityStackManager", "params": ["Activity", "Bundle"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onActivitySaveInstanceState(@NonNull Activity activity, @NonNull Bundle outState) {}", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/helper/ActivityStackManager.java", "stars": "1", "class_props": {"extends": null, "implements": ["Application"], "modifiers": ["final", "public"]}}, {"id": 64040, "method_name": "onActivityDestroyed", "class_name": "ActivityStackManager", "params": ["Activity"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onActivityDestroyed(@NonNull Activity activity) {\n        mActivitySet.remove(getObjectTag(activity));\n        if (getObjectTag(activity).equals(mCurrentTag)) {\n            // \u6e05\u9664\u5f53\u524d\u6807\u8bb0\n            mCurrentTag = null;\n        }\n    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/helper/ActivityStackManager.java", "stars": "1", "class_props": {"extends": null, "implements": ["Application"], "modifiers": ["final", "public"]}}, {"id": 64041, "method_name": "init", "class_name": "HttpClientUtil", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void init() {\n        try {\n            int poolsize = Integer.parseInt(this.poolSize);\n            int socketTimeout = Integer.parseInt(this.socketTimeout);\n            int connectTimeout = Integer.parseInt(this.connectTimeout);\n            int connectionRequestTimeout = Integer.parseInt(this.connectionRequestTimeout);\n            int defaultMaxPerRoute = Integer.parseInt(this.defaultMaxPerRoute);\n\n            LOGGER.info(\"HttpClientUtil init. poolsize:{}, socketTimeout:{}, connectTimeout:{}, connectionRequestTimeout:{}, defaultMaxPerRoute:{}\",\n                    poolsize, socketTimeout, connectTimeout,\n                    connectionRequestTimeout, defaultMaxPerRoute);\n\n            //TrustManager[] trustAllCerts = { new MyTM() };\n\n            //SSLContext sc  = SSLContext.getInstance(\"SSL\");\n            //  sc.init(null, trustAllCerts, null);\n\n            Registry<ConnectionSocketFactory> socketFactoryRegistry = RegistryBuilder.<ConnectionSocketFactory>create()\n                    .register(\"http\", PlainConnectionSocketFactory.INSTANCE)\n                    //.register(\"https\", new SSLConnectionSocketFactory(sc))\n                    .build();\n\n           /* HostnameVerifier hv = (urlHostName, session) -> {\n                LOGGER.info(\"Warning: URL Host: \" + urlHostName + \" vs. \" + session.getPeerHost());\n                return true;\n            };*/\n\n            config = RequestConfig.custom()\n                    .setSocketTimeout(socketTimeout)\n                    .setConnectTimeout(connectTimeout)\n                    .setConnectionRequestTimeout(connectionRequestTimeout)\n                    .build();\n\n            PoolingHttpClientConnectionManager cm = new PoolingHttpClientConnectionManager(socketFactoryRegistry);\n            cm.setMaxTotal(poolsize);\n            cm.setDefaultMaxPerRoute(defaultMaxPerRoute);\n\n            client = HttpClients.custom()\n                    .setConnectionManager(cm)\n                    .setDefaultRequestConfig(config)\n                    //.setSSLHostnameVerifier(hv)\n                    .build();\n        } catch (Exception e) {\n            // log.error(\"\u521d\u59cb\u5316http client\u5f02\u5e38\", e);\n            log.error(\"An exception occurred while initializing http client\", e);\n            e.printStackTrace();\n        }\n    }", "url": "https://raw.githubusercontent.com/zeoio/fabric-toolkit/master/bcp-install-common/src/main/java/com/cgb/bcpinstall/common/util/HttpClientUtil.java", "stars": "7", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 64042, "method_name": "doGet", "class_name": "HttpClientUtil", "params": ["String", "Map<String,Object>"], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String doGet(String url, Map<String, Object> params) {\n        String apiUrl = url;\n        StringBuffer param = new StringBuffer();\n        CloseableHttpResponse response = null;\n        int i = 0;\n        for (String key : params.keySet()) {\n            if (i == 0) {\n                param.append(\"?\");\n            } else {\n                param.append(\"&\");\n            }\n\n            param.append(key).append(\"=\").append(params.get(key));\n            i++;\n        }\n        apiUrl += param;\n        String result = \"\";\n        HttpGet httpPost = new HttpGet(apiUrl);\n        try {\n            response = client.execute(httpPost);\n            int statusCode = response.getStatusLine().getStatusCode();\n            if (HTTP_SUCCESS != statusCode) {\n                return result;\n            }\n            HttpEntity entity = response.getEntity();\n            if (entity != null) {\n                result = EntityUtils.toString(entity);\n            }\n        } catch (IOException e) {\n            e.printStackTrace();\n        } finally {\n            httpPost.abort();\n            try {\n                if (response != null) {\n                    response.close();\n                }\n            } catch (IOException e) {\n                e.printStackTrace();\n                log.error(e.toString());\n            }\n        }\n        return result;\n    }", "url": "https://raw.githubusercontent.com/zeoio/fabric-toolkit/master/bcp-install-common/src/main/java/com/cgb/bcpinstall/common/util/HttpClientUtil.java", "stars": "7", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 64043, "method_name": "postForm", "class_name": "HttpClientUtil", "params": ["String", "Map<String,Object>", "boolean"], "throws": ["ClientProtocolException", "IOException"], "modifiers": ["public"], "return_type": "String", "snippet": "    public String postForm(String url, Map<String, Object> map, boolean retry)\n            throws ClientProtocolException, IOException {\n        Assert.notNull(url, \"Error posting data, url is null.\");\n        return postInner(retry, parseHttpPost(url, getPostParams(map)));\n    }", "url": "https://raw.githubusercontent.com/zeoio/fabric-toolkit/master/bcp-install-common/src/main/java/com/cgb/bcpinstall/common/util/HttpClientUtil.java", "stars": "7", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 64044, "method_name": "postJson", "class_name": "HttpClientUtil", "params": ["String", "String", "boolean"], "throws": ["ClientProtocolException", "IOException"], "modifiers": ["public"], "return_type": "String", "snippet": "    public String postJson(String url, String json, boolean retry)\n            throws ClientProtocolException, IOException {\n        Assert.notNull(url, \"Error posting data, url is null.\");\n        HttpPost parsedHttpPost = parseHttpPost(url, getPostParams(json));\n        parsedHttpPost.addHeader(\"Content-Type\", \"application/json\");\n        return postInner(retry, parsedHttpPost);\n    }", "url": "https://raw.githubusercontent.com/zeoio/fabric-toolkit/master/bcp-install-common/src/main/java/com/cgb/bcpinstall/common/util/HttpClientUtil.java", "stars": "7", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 64045, "method_name": "post", "class_name": "HttpClientUtil", "params": ["String", "String"], "throws": ["IOException"], "modifiers": ["public"], "return_type": "CloseableHttpResponse", "snippet": "    public CloseableHttpResponse post(String url, String json) throws IOException {\n        HttpPost httpPost = new HttpPost(url);\n        if (json != null) {\n            httpPost.setEntity(getPostParams(json));\n        }\n\n        return client.execute(httpPost);\n    }", "url": "https://raw.githubusercontent.com/zeoio/fabric-toolkit/master/bcp-install-common/src/main/java/com/cgb/bcpinstall/common/util/HttpClientUtil.java", "stars": "7", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 64046, "method_name": "get", "class_name": "HttpClientUtil", "params": ["String", "Map<String,Object>"], "throws": ["IOException"], "modifiers": ["public"], "return_type": "CloseableHttpResponse", "snippet": "    public CloseableHttpResponse get(String url, Map<String, Object> params) throws IOException {\n        String apiUrl = url;\n        StringBuffer param = new StringBuffer();\n        CloseableHttpResponse response = null;\n        int i = 0;\n        for (String key : params.keySet()) {\n            if (i == 0) {\n                param.append(\"?\");\n            } else {\n                param.append(\"&\");\n            }\n\n            param.append(key).append(\"=\").append(params.get(key));\n            i++;\n        }\n        apiUrl += param;\n\n        HttpGet httpPost = new HttpGet(apiUrl);\n        return client.execute(httpPost);\n    }", "url": "https://raw.githubusercontent.com/zeoio/fabric-toolkit/master/bcp-install-common/src/main/java/com/cgb/bcpinstall/common/util/HttpClientUtil.java", "stars": "7", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 64047, "method_name": "postInner", "class_name": "HttpClientUtil", "params": ["boolean", "HttpPost"], "throws": ["IOException"], "modifiers": ["private"], "return_type": "String", "snippet": "    private String postInner(boolean retry, HttpPost httpPost) throws IOException {\n        // HttpResponse response = null;\n        CloseableHttpResponse response = null;\n        try {\n            // CloseableHttpClient httpClient = getHttpClient(retry);\n            response = client.execute(httpPost);\n            if (response.getStatusLine().getStatusCode() != HTTP_SUCCESS) {\n//\t\t\t\thttpPost.abort();\n                return null;\n            }\n            HttpEntity entity = response.getEntity();\n            String result = EntityUtils.toString(entity, Consts.UTF_8);\n            EntityUtils.consume(entity);\n            return result;\n        } finally {\n            httpPost.abort();\n            // httpPost.releaseConnection();\n            try {\n                if (response != null) {\n                    response.close();\n                }\n            } catch (IOException e) {\n                e.printStackTrace();\n                log.error(e.toString());\n            }\n        }\n    }", "url": "https://raw.githubusercontent.com/zeoio/fabric-toolkit/master/bcp-install-common/src/main/java/com/cgb/bcpinstall/common/util/HttpClientUtil.java", "stars": "7", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 64048, "method_name": "parseHttpPost", "class_name": "HttpClientUtil", "params": ["String", "HttpEntity"], "throws": null, "modifiers": ["private"], "return_type": "HttpPost", "snippet": "    private HttpPost parseHttpPost(String url, HttpEntity postParams) {\n        HttpPost httpPost = new HttpPost(url);\n        // httpPost.setConfig(getConfig());\n        httpPost.setEntity(postParams);\n        return httpPost;\n    }", "url": "https://raw.githubusercontent.com/zeoio/fabric-toolkit/master/bcp-install-common/src/main/java/com/cgb/bcpinstall/common/util/HttpClientUtil.java", "stars": "7", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 64049, "method_name": "getPostParams", "class_name": "HttpClientUtil", "params": ["Map<String,Object>"], "throws": null, "modifiers": ["private"], "return_type": "HttpEntity", "snippet": "    private HttpEntity getPostParams(Map<String, Object> params) {\n        if (params == null || params.size() == 0) {\n            return null;\n        }\n        List<NameValuePair> nvps = new ArrayList<NameValuePair>();\n        Set<String> keySet = params.keySet();\n        for (String key : keySet) {\n            nvps.add(new BasicNameValuePair(key, params.get(key).toString()));\n        }\n        return new UrlEncodedFormEntity(nvps, Consts.UTF_8);\n    }", "url": "https://raw.githubusercontent.com/zeoio/fabric-toolkit/master/bcp-install-common/src/main/java/com/cgb/bcpinstall/common/util/HttpClientUtil.java", "stars": "7", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 64050, "method_name": "getPostParams", "class_name": "HttpClientUtil", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "HttpEntity", "snippet": "    public HttpEntity getPostParams(String params) {\n        return new StringEntity(params, Consts.UTF_8);\n    }", "url": "https://raw.githubusercontent.com/zeoio/fabric-toolkit/master/bcp-install-common/src/main/java/com/cgb/bcpinstall/common/util/HttpClientUtil.java", "stars": "7", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 64051, "method_name": "downloadFile", "class_name": "HttpClientUtil", "params": ["String", "String"], "throws": ["DownloadFileException"], "modifiers": ["public"], "return_type": "void", "snippet": "    public void downloadFile(String url, String localFilePath) throws DownloadFileException {\n        OutputStream out = null;\n        InputStream in = null;\n\n        try {\n            HttpGet httpGet = new HttpGet(url);\n            HttpResponse httpResponse = client.execute(httpGet);\n            HttpEntity entity = httpResponse.getEntity();\n\n            in = entity.getContent();\n\n            if (!entity.getContentType().getValue().equalsIgnoreCase(\"application/octet-stream\")) {\n                out = new ByteArrayOutputStream();\n                IOUtils.copy(in, out);\n\n                // throw new DownloadFileException(out.toString(), \"\u4e0b\u8f7d\u6587\u4ef6\u5931\u8d25\");\n                throw new DownloadFileException(out.toString(), \"File download failed\");\n            }\n\n            File file = new File(localFilePath);\n            out = new FileOutputStream(file, false);\n            IOUtils.copy(in, out);\n            out.flush();\n        } catch (IOException e) {\n            e.printStackTrace();\n        } finally {\n            IOUtils.closeQuietly(in);\n            IOUtils.closeQuietly(out);\n        }\n    }", "url": "https://raw.githubusercontent.com/zeoio/fabric-toolkit/master/bcp-install-common/src/main/java/com/cgb/bcpinstall/common/util/HttpClientUtil.java", "stars": "7", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 64052, "method_name": "uploadFile", "class_name": "HttpClientUtil", "params": ["String", "String"], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String uploadFile(String url, String filePath) {\n        try {\n            MultipartEntityBuilder multipartEntityBuilder = MultipartEntityBuilder.create();\n            File file = new File(filePath);\n\n            multipartEntityBuilder.addBinaryBody(\"file\", file);\n\n            HttpEntity httpEntity = multipartEntityBuilder.build();\n\n            HttpPost httpPost = new HttpPost(url);\n            httpPost.setEntity(httpEntity);\n\n            HttpResponse httpResponse = client.execute(httpPost);\n            HttpEntity responseEntity = httpResponse.getEntity();\n            int statusCode= httpResponse.getStatusLine().getStatusCode();\n            if (statusCode == 200) {\n                String result = EntityUtils.toString(responseEntity, Consts.UTF_8);\n                EntityUtils.consume(responseEntity);\n\n                return result;\n            }\n        } catch (IOException e) {\n            // log.error(String.format(\"\u4e0a\u4f20\u6587\u4ef6 %s \u5230 %s \u5f02\u5e38\", filePath, url));\n            log.error(String.format(\"An exception occurred while uploading files %s to %s\", filePath, url));\n            e.printStackTrace();\n        }\n\n        return \"\";\n    }", "url": "https://raw.githubusercontent.com/zeoio/fabric-toolkit/master/bcp-install-common/src/main/java/com/cgb/bcpinstall/common/util/HttpClientUtil.java", "stars": "7", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 64053, "method_name": "sendFileAndJson", "class_name": "HttpClientUtil", "params": ["String", "String", "String"], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String sendFileAndJson(String url, String filePath, String jsonContent) {\n        try {\n            MultipartEntityBuilder multipartEntityBuilder = MultipartEntityBuilder.create();\n\n            if (!StringUtils.isEmpty(filePath)) {\n                File file = new File(filePath);\n                if (file.exists() && file.isFile()) {\n                    multipartEntityBuilder.addBinaryBody(\"file\", file);\n                }\n            }\n\n            if (!StringUtils.isEmpty(jsonContent)) {\n                multipartEntityBuilder.addTextBody(\"content\", jsonContent, ContentType.APPLICATION_JSON);\n            }\n\n            HttpEntity httpEntity = multipartEntityBuilder.build();\n\n            HttpPost httpPost = new HttpPost(url);\n            httpPost.setEntity(httpEntity);\n\n            HttpResponse httpResponse = client.execute(httpPost);\n            HttpEntity responseEntity = httpResponse.getEntity();\n            int statusCode= httpResponse.getStatusLine().getStatusCode();\n            if (statusCode == 200) {\n                String result = EntityUtils.toString(responseEntity, Consts.UTF_8);\n                EntityUtils.consume(responseEntity);\n\n                return result;\n            }\n        } catch (Exception e) {\n            // log.error(String.format(\"\u53d1\u9001\u6587\u4ef6 %s \u5230 %s \u5f02\u5e38\", filePath, url));\n            log.error(String.format(\"An exception occurred while sending files %s to %s\", filePath, url));\n            e.printStackTrace();\n        }\n\n        return \"\";\n    }", "url": "https://raw.githubusercontent.com/zeoio/fabric-toolkit/master/bcp-install-common/src/main/java/com/cgb/bcpinstall/common/util/HttpClientUtil.java", "stars": "7", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 64054, "method_name": "retryRequest", "class_name": "RetryHandler", "params": ["IOException", "int", "HttpContext"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "        public boolean retryRequest(IOException exception, int executionCount,\n                                    HttpContext context) {\n            System.out.println(executionCount);\n            if (executionCount >= RETRY_TIME) {\n                // Do not retry if over max retry count\n\n                return false;\n            }\n            if (exception instanceof InterruptedIOException) {\n                // Timeout\n                return false;\n            }\n            if (exception instanceof UnknownHostException) {\n                // Unknown host\n                return false;\n            }\n            if (exception instanceof ConnectTimeoutException) {\n                // Connection refused\n                return false;\n            }\n           /* if (exception instanceof SSLException) {\n                // SSL handshake exception\n                return false;\n            }*/\n\n            HttpClientContext clientContext = HttpClientContext.adapt(context);\n            HttpRequest request = clientContext.getRequest();\n\n            // \u589e\u52a0\u65e5\u5fd7\uff0c\u4fbf\u4e8e\u786e\u8ba4\u662f\u5426\u91cd\u8bd5\n\n\n            if (LOGGER.isDebugEnabled()) {\n                LOGGER.debug(\" retryCount = \" + executionCount);\n            }\n\n            boolean idempotent = !(request instanceof HttpEntityEnclosingRequest);\n            if (idempotent) {\n                // Retry if the request is considered idempotent\n                return true;\n            }\n            return false;\n        }", "url": "https://raw.githubusercontent.com/zeoio/fabric-toolkit/master/bcp-install-common/src/main/java/com/cgb/bcpinstall/common/util/HttpClientUtil.java", "stars": "7", "class_props": {"extends": null, "implements": ["HttpRequestRetryHandler"], "modifiers": []}}, {"id": 64055, "method_name": "merge", "class_name": "ConfigurationBase", "params": ["ConfigurationBase", "String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void merge(ConfigurationBase config, String path) {\n\n        if (config == null) return;\n        getOverrideConfig().merge(config.getOverrideSection(path));\n    }", "url": "https://raw.githubusercontent.com/Silthus/sLimits/master/src/main/java/net/silthus/slib/config/ConfigurationBase.java", "stars": "3", "class_props": {"extends": "YamlConfiguration", "implements": ["Config"], "modifiers": ["public", "abstract"]}}, {"id": 64056, "method_name": "merge", "class_name": "ConfigurationBase", "params": ["ConfigurationBase"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void merge(ConfigurationBase config) {\n\n        getOverrideConfig().merge(config);\n    }", "url": "https://raw.githubusercontent.com/Silthus/sLimits/master/src/main/java/net/silthus/slib/config/ConfigurationBase.java", "stars": "3", "class_props": {"extends": "YamlConfiguration", "implements": ["Config"], "modifiers": ["public", "abstract"]}}, {"id": 64057, "method_name": "merge", "class_name": "ConfigurationBase", "params": ["ConfigurationSection"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void merge(ConfigurationSection config) {\n\n        getOverrideConfig().merge(config);\n    }", "url": "https://raw.githubusercontent.com/Silthus/sLimits/master/src/main/java/net/silthus/slib/config/ConfigurationBase.java", "stars": "3", "class_props": {"extends": "YamlConfiguration", "implements": ["Config"], "modifiers": ["public", "abstract"]}}, {"id": 64058, "method_name": "getOverride", "class_name": "ConfigurationBase", "params": ["String", "V"], "throws": null, "modifiers": ["public"], "return_type": "V", "snippet": "    public <V> V getOverride(String key, V def) {\n\n        if (!isSet(key)) {\n            set(key, def);\n        }\n        if (def instanceof Integer) return (V) (Integer) getOverrideInt(key, (Integer) def);\n        if (def instanceof Double) return (V) (Double) getOverrideDouble(key, (Double) def);\n        return (V) getOverrideConfig().get(key, def);\n    }", "url": "https://raw.githubusercontent.com/Silthus/sLimits/master/src/main/java/net/silthus/slib/config/ConfigurationBase.java", "stars": "3", "class_props": {"extends": "YamlConfiguration", "implements": ["Config"], "modifiers": ["public", "abstract"]}}, {"id": 64059, "method_name": "getOverrideInt", "class_name": "ConfigurationBase", "params": ["String", "int"], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getOverrideInt(String key, int def) {\n\n        return getOverrideConfig().getInt(key, def);\n    }", "url": "https://raw.githubusercontent.com/Silthus/sLimits/master/src/main/java/net/silthus/slib/config/ConfigurationBase.java", "stars": "3", "class_props": {"extends": "YamlConfiguration", "implements": ["Config"], "modifiers": ["public", "abstract"]}}, {"id": 64060, "method_name": "getOverrideDouble", "class_name": "ConfigurationBase", "params": ["String", "double"], "throws": null, "modifiers": ["public"], "return_type": "double", "snippet": "    public double getOverrideDouble(String key, double def) {\n\n        return getOverrideConfig().getDouble(key, def);\n    }", "url": "https://raw.githubusercontent.com/Silthus/sLimits/master/src/main/java/net/silthus/slib/config/ConfigurationBase.java", "stars": "3", "class_props": {"extends": "YamlConfiguration", "implements": ["Config"], "modifiers": ["public", "abstract"]}}, {"id": 64061, "method_name": "getOverrideString", "class_name": "ConfigurationBase", "params": ["String", "String"], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getOverrideString(String key, String def) {\n\n        return getOverrideConfig().getString(key, def);\n    }", "url": "https://raw.githubusercontent.com/Silthus/sLimits/master/src/main/java/net/silthus/slib/config/ConfigurationBase.java", "stars": "3", "class_props": {"extends": "YamlConfiguration", "implements": ["Config"], "modifiers": ["public", "abstract"]}}, {"id": 64062, "method_name": "getOverrideBool", "class_name": "ConfigurationBase", "params": ["String", "boolean"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean getOverrideBool(String key, boolean def) {\n\n        return getOverrideConfig().getBoolean(key, def);\n    }", "url": "https://raw.githubusercontent.com/Silthus/sLimits/master/src/main/java/net/silthus/slib/config/ConfigurationBase.java", "stars": "3", "class_props": {"extends": "YamlConfiguration", "implements": ["Config"], "modifiers": ["public", "abstract"]}}, {"id": 64063, "method_name": "getOverrideSection", "class_name": "ConfigurationBase", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "ConfigurationSection", "snippet": "    public ConfigurationSection getOverrideSection(String path) {\n\n        return getOverrideConfig().getSafeConfigSection(path);\n    }", "url": "https://raw.githubusercontent.com/Silthus/sLimits/master/src/main/java/net/silthus/slib/config/ConfigurationBase.java", "stars": "3", "class_props": {"extends": "YamlConfiguration", "implements": ["Config"], "modifiers": ["public", "abstract"]}}, {"id": 64064, "method_name": "getOverrideConfig", "class_name": "ConfigurationBase", "params": [], "throws": null, "modifiers": ["public"], "return_type": "DataMap", "snippet": "    public DataMap getOverrideConfig() {\n\n        if (override == null) {\n            setOverrideConfig(createDataMap());\n        }\n        return this.override;\n    }", "url": "https://raw.githubusercontent.com/Silthus/sLimits/master/src/main/java/net/silthus/slib/config/ConfigurationBase.java", "stars": "3", "class_props": {"extends": "YamlConfiguration", "implements": ["Config"], "modifiers": ["public", "abstract"]}}, {"id": 64065, "method_name": "setOverrideConfig", "class_name": "ConfigurationBase", "params": ["DataMap"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setOverrideConfig(DataMap override) {\n\n        this.override = override;\n    }", "url": "https://raw.githubusercontent.com/Silthus/sLimits/master/src/main/java/net/silthus/slib/config/ConfigurationBase.java", "stars": "3", "class_props": {"extends": "YamlConfiguration", "implements": ["Config"], "modifiers": ["public", "abstract"]}}, {"id": 64066, "method_name": "getSafeConfigSection", "class_name": "ConfigurationBase", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "ConfigurationSection", "snippet": "    public ConfigurationSection getSafeConfigSection(String path) {\n\n        ConfigurationSection configurationSection = getConfigurationSection(path);\n        if (configurationSection == null) {\n            configurationSection = createSection(path);\n        }\n        return configurationSection;\n    }", "url": "https://raw.githubusercontent.com/Silthus/sLimits/master/src/main/java/net/silthus/slib/config/ConfigurationBase.java", "stars": "3", "class_props": {"extends": "YamlConfiguration", "implements": ["Config"], "modifiers": ["public", "abstract"]}}, {"id": 64067, "method_name": "createDataMap", "class_name": "ConfigurationBase", "params": [], "throws": null, "modifiers": ["public"], "return_type": "DataMap", "snippet": "    public DataMap createDataMap() {\n\n        return new YamlDataMap(this, this);\n    }", "url": "https://raw.githubusercontent.com/Silthus/sLimits/master/src/main/java/net/silthus/slib/config/ConfigurationBase.java", "stars": "3", "class_props": {"extends": "YamlConfiguration", "implements": ["Config"], "modifiers": ["public", "abstract"]}}, {"id": 64068, "method_name": "createDataMap", "class_name": "ConfigurationBase", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "DataMap", "snippet": "    public DataMap createDataMap(String path) {\n\n        return new YamlDataMap(getSafeConfigSection(path), this);\n    }", "url": "https://raw.githubusercontent.com/Silthus/sLimits/master/src/main/java/net/silthus/slib/config/ConfigurationBase.java", "stars": "3", "class_props": {"extends": "YamlConfiguration", "implements": ["Config"], "modifiers": ["public", "abstract"]}}, {"id": 64069, "method_name": "getFile", "class_name": "ConfigurationBase", "params": [], "throws": null, "modifiers": ["public"], "return_type": "File", "snippet": "    public File getFile() {\n\n        return file;\n    }", "url": "https://raw.githubusercontent.com/Silthus/sLimits/master/src/main/java/net/silthus/slib/config/ConfigurationBase.java", "stars": "3", "class_props": {"extends": "YamlConfiguration", "implements": ["Config"], "modifiers": ["public", "abstract"]}}, {"id": 64070, "method_name": "getPlugin", "class_name": "ConfigurationBase", "params": [], "throws": null, "modifiers": ["public"], "return_type": "T", "snippet": "    public T getPlugin() {\n\n        return plugin;\n    }", "url": "https://raw.githubusercontent.com/Silthus/sLimits/master/src/main/java/net/silthus/slib/config/ConfigurationBase.java", "stars": "3", "class_props": {"extends": "YamlConfiguration", "implements": ["Config"], "modifiers": ["public", "abstract"]}}, {"id": 64071, "method_name": "reload", "class_name": "ConfigurationBase", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void reload() {\n\n        load();\n    }", "url": "https://raw.githubusercontent.com/Silthus/sLimits/master/src/main/java/net/silthus/slib/config/ConfigurationBase.java", "stars": "3", "class_props": {"extends": "YamlConfiguration", "implements": ["Config"], "modifiers": ["public", "abstract"]}}, {"id": 64072, "method_name": "save", "class_name": "ConfigurationBase", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void save() {\n\n        save(file);\n    }", "url": "https://raw.githubusercontent.com/Silthus/sLimits/master/src/main/java/net/silthus/slib/config/ConfigurationBase.java", "stars": "3", "class_props": {"extends": "YamlConfiguration", "implements": ["Config"], "modifiers": ["public", "abstract"]}}, {"id": 64073, "method_name": "load", "class_name": "ConfigurationBase", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void load() {\n\n        load(file);\n        loadAnnotations();\n    }", "url": "https://raw.githubusercontent.com/Silthus/sLimits/master/src/main/java/net/silthus/slib/config/ConfigurationBase.java", "stars": "3", "class_props": {"extends": "YamlConfiguration", "implements": ["Config"], "modifiers": ["public", "abstract"]}}, {"id": 64074, "method_name": "load", "class_name": "ConfigurationBase", "params": ["File"], "throws": null, "modifiers": ["final", "public"], "return_type": "void", "snippet": "    public final void load(File file) {\n\n        try {\n            if (!file.exists() || file.length() == 0) {\n                copyFile();\n                save();\n            }\n            // load the config by calling the bukkit super method\n            super.load(file);\n            //            plugin.getLogger().info(\"[\" + plugin.getName() + \"] loaded config file \\\"\" +\n            // displayName + \"\\\" successfully.\");\n        } catch (IOException | InvalidConfigurationException e) {\n            plugin.getLogger().warning(e.getMessage());\n            e.printStackTrace();\n        }\n    }", "url": "https://raw.githubusercontent.com/Silthus/sLimits/master/src/main/java/net/silthus/slib/config/ConfigurationBase.java", "stars": "3", "class_props": {"extends": "YamlConfiguration", "implements": ["Config"], "modifiers": ["public", "abstract"]}}, {"id": 64075, "method_name": "loadAnnotations", "class_name": "ConfigurationBase", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void loadAnnotations() {\n\n        if (loadAnnotations(this)) save(file);\n    }", "url": "https://raw.githubusercontent.com/Silthus/sLimits/master/src/main/java/net/silthus/slib/config/ConfigurationBase.java", "stars": "3", "class_props": {"extends": "YamlConfiguration", "implements": ["Config"], "modifiers": ["public", "abstract"]}}, {"id": 64076, "method_name": "loadAnnotations", "class_name": "ConfigurationBase", "params": ["Object"], "throws": null, "modifiers": ["private"], "return_type": "boolean", "snippet": "    private boolean loadAnnotations(Object object) {\n\n        boolean foundAnnotations = false;\n        for (Field field : getFieldsRecur(object.getClass())) {\n            field.setAccessible(true);\n\n            try {\n                if (field.isAnnotationPresent(ConfigSubClass.class) && field.get(object) != null) {\n                    foundAnnotations = loadAnnotations(field.get(object));\n                } else if (field.isAnnotationPresent(Setting.class)) {\n\n                    String key = field.getAnnotation(Setting.class).value();\n                    if (Strings.isNullOrEmpty(key)) {\n                        key = field.getName();\n                    }\n                    final Object value = smartCast(field.getGenericType(), get(key));\n\n                    if (value != null) {\n                        field.set(object, value);\n                    } else {\n                        set(key, prepareSerialization(field.get(object)));\n                    }\n                    foundAnnotations = true;\n                }\n            } catch (IllegalAccessException e) {\n                plugin.getLogger().log(Level.SEVERE, \"Error setting configuration value of field: \", e);\n                e.printStackTrace();\n            }\n        }\n        return foundAnnotations;\n    }", "url": "https://raw.githubusercontent.com/Silthus/sLimits/master/src/main/java/net/silthus/slib/config/ConfigurationBase.java", "stars": "3", "class_props": {"extends": "YamlConfiguration", "implements": ["Config"], "modifiers": ["public", "abstract"]}}, {"id": 64077, "method_name": "save", "class_name": "ConfigurationBase", "params": ["File"], "throws": null, "modifiers": ["final", "public"], "return_type": "void", "snippet": "    public final void save(File file) {\n\n        try {\n            annos.clear();\n            saveAnnotations();\n            super.save(file);\n            commentPostProcess(file);\n        } catch (IOException e) {\n            plugin.getLogger().warning(e.getMessage());\n            e.printStackTrace();\n        }\n    }", "url": "https://raw.githubusercontent.com/Silthus/sLimits/master/src/main/java/net/silthus/slib/config/ConfigurationBase.java", "stars": "3", "class_props": {"extends": "YamlConfiguration", "implements": ["Config"], "modifiers": ["public", "abstract"]}}, {"id": 64078, "method_name": "saveAnnotations", "class_name": "ConfigurationBase", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void saveAnnotations() {\n\n        saveAnnotations(this);\n    }", "url": "https://raw.githubusercontent.com/Silthus/sLimits/master/src/main/java/net/silthus/slib/config/ConfigurationBase.java", "stars": "3", "class_props": {"extends": "YamlConfiguration", "implements": ["Config"], "modifiers": ["public", "abstract"]}}, {"id": 64079, "method_name": "saveAnnotations", "class_name": "ConfigurationBase", "params": ["Object"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void saveAnnotations(Object object) {\n\n        for (Field field : getFieldsRecur(object.getClass())) {\n            field.setAccessible(true);\n            try {\n                if (field.isAnnotationPresent(ConfigSubClass.class) && field.get(object) != null) {\n                    saveAnnotations(field.get(object));\n                } else if (field.isAnnotationPresent(Setting.class)) {\n                    String key = field.getAnnotation(Setting.class).value();\n                    if (Strings.isNullOrEmpty(key)) {\n                        key = field.getName();\n                    }\n                    onComment(key, field);\n                    set(key, prepareSerialization(field.get(object)));\n                }\n            } catch (IllegalAccessException e) {\n                plugin.getLogger().log(Level.SEVERE, \"Error setting configuration value of field: \", e);\n                e.printStackTrace();\n            }\n        }\n    }", "url": "https://raw.githubusercontent.com/Silthus/sLimits/master/src/main/java/net/silthus/slib/config/ConfigurationBase.java", "stars": "3", "class_props": {"extends": "YamlConfiguration", "implements": ["Config"], "modifiers": ["public", "abstract"]}}, {"id": 64080, "method_name": "onComment", "class_name": "ConfigurationBase", "params": ["String", "Field"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void onComment(String path, Field field) {\n\n        if (field.getAnnotation(Comment.class) != null) {\n            annos.put(path, new String[]{field.getAnnotation(Comment.class).value()});\n            return;\n        }\n        if (field.getAnnotation(MultiComment.class) != null) {\n            annos.put(path, field.getAnnotation(MultiComment.class).value());\n        }\n    }", "url": "https://raw.githubusercontent.com/Silthus/sLimits/master/src/main/java/net/silthus/slib/config/ConfigurationBase.java", "stars": "3", "class_props": {"extends": "YamlConfiguration", "implements": ["Config"], "modifiers": ["public", "abstract"]}}, {"id": 64081, "method_name": "level", "class_name": "ConfigurationBase", "params": ["String"], "throws": null, "modifiers": ["private"], "return_type": "int", "snippet": "    private int level(String path) {\n\n        int count = 0;\n        for (int i = 0; i < path.length(); i++) {\n            if (path.charAt(i) != ' ') {\n                break;\n            }\n            count++;\n        }\n        return count / 2;\n    }", "url": "https://raw.githubusercontent.com/Silthus/sLimits/master/src/main/java/net/silthus/slib/config/ConfigurationBase.java", "stars": "3", "class_props": {"extends": "YamlConfiguration", "implements": ["Config"], "modifiers": ["public", "abstract"]}}, {"id": 64082, "method_name": "commentPostProcess", "class_name": "ConfigurationBase", "params": ["File"], "throws": ["IOException"], "modifiers": ["private"], "return_type": "void", "snippet": "    private void commentPostProcess(File file) throws IOException {\n\n        ArrayList<String> buffer = new ArrayList<String>();\n        BufferedReader reader = new BufferedReader(new FileReader(file));\n\n        String line;\n        while ((line = reader.readLine()) != null) {\n            buffer.add(line);\n        }\n        reader.close();\n        ArrayList<String> key = new ArrayList<String>();\n        int level;\n        String newKey;\n        String tmpKey;\n        int diff;\n        String[] comment;\n        BufferedWriter writer = new BufferedWriter(new FileWriter(file));\n        for (int i = 0; i < buffer.size(); i++) {\n            if (buffer.get(i).charAt(0) == '#') {\n                continue;\n            }\n            newKey = buffer.get(i).split(\":\")[0];\n            level = level(newKey);\n            newKey = newKey.trim();\n            if (level == 0) {\n                key.clear();\n            } else {\n                diff = key.size() - level;\n                for (int j = 0; j < diff; j++) {\n                    key.remove(key.size() - 1);\n                }\n                tmpKey = StringUtils.join(key, \".\");\n                tmpKey += \".\" + newKey;\n\n                if (annos.containsKey(tmpKey)) {\n                    comment = annos.get(tmpKey);\n                    for (int j = 0; j < comment.length; j++) {\n                        writer.write(\"# \" + comment[j]);\n                        writer.newLine();\n                    }\n                }\n            }\n            key.add(newKey);\n            writer.write(buffer.get(i));\n            writer.newLine();\n        }\n        writer.close();\n    }", "url": "https://raw.githubusercontent.com/Silthus/sLimits/master/src/main/java/net/silthus/slib/config/ConfigurationBase.java", "stars": "3", "class_props": {"extends": "YamlConfiguration", "implements": ["Config"], "modifiers": ["public", "abstract"]}}, {"id": 64083, "method_name": "getFieldsRecur", "class_name": "ConfigurationBase", "params": ["Class<?>"], "throws": null, "modifiers": ["private"], "return_type": "List<Field>", "snippet": "    private List<Field> getFieldsRecur(Class<?> clazz) {\n\n        return getFieldsRecur(clazz, false);\n    }", "url": "https://raw.githubusercontent.com/Silthus/sLimits/master/src/main/java/net/silthus/slib/config/ConfigurationBase.java", "stars": "3", "class_props": {"extends": "YamlConfiguration", "implements": ["Config"], "modifiers": ["public", "abstract"]}}, {"id": 64084, "method_name": "getFieldsRecur", "class_name": "ConfigurationBase", "params": ["Class<?>", "boolean"], "throws": null, "modifiers": ["private"], "return_type": "List<Field>", "snippet": "    private List<Field> getFieldsRecur(Class<?> clazz, boolean includeObject) {\n\n        List<Field> fields = new ArrayList<>();\n        while (clazz != null && (includeObject || !Object.class.equals(clazz))) {\n\n            fields.addAll(Arrays.asList(clazz.getDeclaredFields()));\n            clazz = clazz.getSuperclass();\n        }\n        return fields;\n    }", "url": "https://raw.githubusercontent.com/Silthus/sLimits/master/src/main/java/net/silthus/slib/config/ConfigurationBase.java", "stars": "3", "class_props": {"extends": "YamlConfiguration", "implements": ["Config"], "modifiers": ["public", "abstract"]}}, {"id": 64085, "method_name": "copyFile", "class_name": "ConfigurationBase", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void copyFile() {\n\n        try {\n            // read the template file from the resources folder\n            InputStream stream = plugin.getResource(\"defaults/\" + name);\n            if (stream == null) {\n                plugin.getLogger().warning(\"There is no default config for \" + name);\n                file.createNewFile();\n                return;\n            }\n            Files.copy(stream, file.toPath(), StandardCopyOption.REPLACE_EXISTING);\n            plugin.getLogger().log(Level.INFO, \"Copied default config: \" + name);\n        } catch (IOException iex) {\n            plugin.getLogger().log(Level.WARNING, \"could not create default config: \" + name, iex);\n        }\n    }", "url": "https://raw.githubusercontent.com/Silthus/sLimits/master/src/main/java/net/silthus/slib/config/ConfigurationBase.java", "stars": "3", "class_props": {"extends": "YamlConfiguration", "implements": ["Config"], "modifiers": ["public", "abstract"]}}, {"id": 64086, "method_name": "getInt", "class_name": "ConfigurationBase", "params": ["String", "int"], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getInt(String path, int def) {\n\n        if (!isSet(path)) {\n            set(path, def);\n            if (isSaveDefaults()) save();\n        } else {\n            return super.getInt(path, def);\n        }\n        return getInt(path);\n    }", "url": "https://raw.githubusercontent.com/Silthus/sLimits/master/src/main/java/net/silthus/slib/config/ConfigurationBase.java", "stars": "3", "class_props": {"extends": "YamlConfiguration", "implements": ["Config"], "modifiers": ["public", "abstract"]}}, {"id": 64087, "method_name": "getString", "class_name": "ConfigurationBase", "params": ["String", "String"], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getString(String path, String def) {\n\n        if (def == null) return super.getString(path, null);\n        if (!isSet(path)) {\n            set(path, def);\n            if (isSaveDefaults()) save();\n        } else {\n            return super.getString(path, def);\n        }\n        return getString(path);\n    }", "url": "https://raw.githubusercontent.com/Silthus/sLimits/master/src/main/java/net/silthus/slib/config/ConfigurationBase.java", "stars": "3", "class_props": {"extends": "YamlConfiguration", "implements": ["Config"], "modifiers": ["public", "abstract"]}}, {"id": 64088, "method_name": "getBoolean", "class_name": "ConfigurationBase", "params": ["String", "boolean"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean getBoolean(String path, boolean def) {\n\n        if (!isSet(path)) {\n            set(path, def);\n            if (isSaveDefaults()) save();\n        } else {\n            return super.getBoolean(path, def);\n        }\n        return getBoolean(path);\n    }", "url": "https://raw.githubusercontent.com/Silthus/sLimits/master/src/main/java/net/silthus/slib/config/ConfigurationBase.java", "stars": "3", "class_props": {"extends": "YamlConfiguration", "implements": ["Config"], "modifiers": ["public", "abstract"]}}, {"id": 64089, "method_name": "getDouble", "class_name": "ConfigurationBase", "params": ["String", "double"], "throws": null, "modifiers": ["public"], "return_type": "double", "snippet": "    public double getDouble(String path, double def) {\n\n        if (!isSet(path)) {\n            set(path, def);\n            if (isSaveDefaults()) save();\n        } else {\n            return super.getDouble(path, def);\n        }\n        return getDouble(path);\n    }", "url": "https://raw.githubusercontent.com/Silthus/sLimits/master/src/main/java/net/silthus/slib/config/ConfigurationBase.java", "stars": "3", "class_props": {"extends": "YamlConfiguration", "implements": ["Config"], "modifiers": ["public", "abstract"]}}, {"id": 64090, "method_name": "getLong", "class_name": "ConfigurationBase", "params": ["String", "long"], "throws": null, "modifiers": ["public"], "return_type": "long", "snippet": "    public long getLong(String path, long def) {\n\n        if (!isSet(path)) {\n            set(path, def);\n            if (isSaveDefaults()) save();\n        } else {\n            return super.getLong(path, def);\n        }\n        return getLong(path);\n    }", "url": "https://raw.githubusercontent.com/Silthus/sLimits/master/src/main/java/net/silthus/slib/config/ConfigurationBase.java", "stars": "3", "class_props": {"extends": "YamlConfiguration", "implements": ["Config"], "modifiers": ["public", "abstract"]}}, {"id": 64091, "method_name": "mousehover", "class_name": "day8pepperfry", "params": ["String", "String", "String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void mousehover(String Product,String subProd,String catProd)\n\t{\n\t\tmouse=new Actions(driver);\n\t\tmouse.moveToElement(driver.findElementByXPath(\"//a[text()='\"+Product+\"' and @class='level-top']\")).pause(2000).perform();\n\t\tdriver.findElementByLinkText(catProd).click();\n\t}", "url": "https://raw.githubusercontent.com/SudhaM-SeleniumCoding/Learnings/master/day8pepperfry.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 64092, "method_name": "wishlist", "class_name": "day8pepperfry", "params": ["String"], "throws": ["InterruptedException"], "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void wishlist(String ModelName) throws InterruptedException\n\t{\n        \n\t\tdriver.findElementByXPath(\"//a[contains(@title,'\"+ModelName+\"')]/following::a[contains(@data-productname,'\"+ModelName+\"')]\").click();\n\t\tThread.sleep(3000);\n\t\twishlistCount = driver.findElementByXPath(\"//div[@class='wishlist_bar']//span\").getText();\n\t\t\n\t}", "url": "https://raw.githubusercontent.com/SudhaM-SeleniumCoding/Learnings/master/day8pepperfry.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 64093, "method_name": "pepperfry", "class_name": "day8pepperfry", "params": [], "throws": ["IOException", "InterruptedException"], "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void pepperfry() throws IOException, InterruptedException\n\t{\n\t\t\n\t\t//Go to https://www.pepperfry.com/\n\t\tSystem.setProperty(\"webdriver.chrome.driver\", \"./drivers/chromedriver.exe\");\n\t\tChromeOptions options= new ChromeOptions();\n\t\toptions.addArguments(\"--disable-notifications\");\n\t\tdriver=new ChromeDriver(options);\n\t\tWebDriverWait wait=new WebDriverWait(driver,30);\n\t\tJavascriptExecutor Js=(JavascriptExecutor)driver;\n\t\tdriver.manage().window().maximize();\n\t\tdriver.manage().timeouts().implicitlyWait(30, TimeUnit.SECONDS);\n\t\tdriver.get(\"https://www.pepperfry.com/\");\n\t\t\n\t\t//Close the signup pop up\n\t   wait.until(ExpectedConditions.visibilityOf(driver.findElementByXPath(\"(//div[@class='reg-modal-right-frm-wrap'])[1]\")));\n\t   driver.findElementByXPath(\"(//a[@class='popup-close'])[5]\").click();\n\n\t\t//Mouseover on Furniture and click Office Chairs under Chairs -Using method\n\t\tmousehover(\"Furniture\",\"Chairs\",\"Office Chairs\");\n\t\t\n\t\t//click Executive Chairs\n\t\twait.until(ExpectedConditions.visibilityOf(driver.findElementByXPath(\"//h5[text()='Executive Chairs']\")));\n\t\tdriver.findElementByXPath(\"//h5[text()='Executive Chairs']\").click();\n\t\t\n\t\t//Change the minimum Height as 50 in under Dimensions\n\t\tdriver.findElementByXPath(\"//h2[contains(text(),'DIMENSION')]/following::input[1]\").clear();\n\t\tdriver.findElementByXPath(\"//h2[contains(text(),'DIMENSION')]/following::input[1]\").sendKeys(\"50\",Keys.ENTER);\n\t\t\n\t\twait.until(ExpectedConditions.visibilityOf(driver.findElementByXPath(\"//div[@id='clipFilterCardContainer']//li[contains(text(),'Height')]\")));\n\t\tif(driver.findElementByXPath(\"//div[@id='clipFilterCardContainer']//li[contains(text(),'Height')]\").isDisplayed())\n\t\t{\n\t\t\tSystem.out.println(\"The height filter is applied successfully\");\n\t\t}\n\t\t\n\t\t//Add \"Poise Executive Chair in Black Colour\" chair to Wishlist\n\t\twait.until(ExpectedConditions.elementToBeClickable(driver.findElementByXPath(\"//a[text()='Poise Executive Chair in Black Colour']\")));\n\t\tString ChairName = driver.findElementByXPath(\"//a[text()='Poise Executive Chair in Black Colour']\").getText();\n\t\tSystem.out.println(ChairName.substring(0, 15));\n\t\twishlist(ChairName.substring(0, 15));\n\t\t\n\t\t\n\t\t//Mouseover on Homeware and Click Pressure Cookers under Cookware\n\t\tmousehover(\"Homeware\",\"Cookware\",\"Pressure Cookers\");\n\t\t\n\t\t//Select Prestige as Brand\n\t\tdriver.findElementByXPath(\"//label[text()='Prestige']\").click();\n\t\twait.until(ExpectedConditions.visibilityOf(driver.findElementByXPath(\"//li[text()='Prestige']\")));\n\t\t\n\t\t//Select Capacity as 1-3 Ltr\n\t\tThread.sleep(3000);\n\t\tdriver.findElementByXPath(\"//label[@for='capacity_db1_Ltr_-_3_Ltr']\").click();\n\t\twait.until(ExpectedConditions.visibilityOf(driver.findElementByXPath(\"//li[text()='1 Ltr - 3 Ltr']\")));\n\t\t\n\t\tif(driver.findElementByXPath(\"//li[text()='1 Ltr - 3 Ltr']\").isDisplayed() & driver.findElementByXPath(\"//li[text()='Prestige']\").isDisplayed())\n\t\t{\n\t\t\tSystem.out.println(\"The filter Prestige and capacity is applied successfully\");\n\t\t}\n\t\t\n\t\t//Add \"Nakshatra Cute Metallic Red Aluminium Cooker 2 Ltr\" to Wishlist\n\t\t\n\t\tString CookerName = driver.findElementByXPath(\"//a[text()='Nakshatra Cute Metallic Red Aluminium Cooker 2 Ltr']\").getText();\n\t\tSystem.out.println(CookerName.substring(0, 14));\n\t\tThread.sleep(3000);\n\t\twishlist(CookerName.substring(0, 14));\n\t\tif (wishlistCount.equals(\"2\"))\n\t\t{\n\t\t\tSystem.out.println(\"The number of items in wishlist is \" +wishlistCount);\n\t\t}\n\t\t\n\t\t\n\t\t//Navigate to Wishlist\n\t\tdriver.findElementByXPath(\"//div[@class='wishlist_bar']/a\").click();\n\t\t\n\t\t//Move Pressure Cooker only to Cart from Wishlist\n\t\tThread.sleep(3000);\n\t\tJs.executeScript(\"arguments[0].scrollIntoView();\",driver.findElementByXPath(\"//div[@id='cart_item_holder']//a[contains(text(),'Cooker')]/following::div[1]//a[contains(text(),'Add to Cart')]\"));\n\t\twait.until(ExpectedConditions.visibilityOf(driver.findElementByXPath(\"//div[@id='cart_item_holder']//a[contains(text(),'Cooker')]/following::div[1]//a[contains(text(),'Add to Cart')]\")));\n\t\tdriver.findElementByXPath(\"//div[@id='cart_item_holder']//a[contains(text(),'Cooker')]/following::div[1]//a[contains(text(),'Add to Cart')]\").click();\n\t\t\n\t\t//Check for the availability for Pincode 600128\n\t\tJs.executeScript(\"arguments[0].scrollIntoView();\",driver.findElementByClassName(\"srvc_pin_text\"));\n\t\twait.until(ExpectedConditions.visibilityOf(driver.findElementByClassName(\"srvc_pin_text\")));\n\t\tdriver.findElementByClassName(\"srvc_pin_text\").sendKeys(\"600128\");\n\t\tdriver.findElementByClassName(\"check_available\").click();\n\t\twait.until(ExpectedConditions.elementToBeClickable(driver.findElementByXPath(\"(//div[@id='cart_item_holder']//a[contains(text(),'Cooker')])[1]\")));\n\t\t\n\t\tif (driver.findElementByXPath(\"(//div[@class='minicart-error'])[1]\").isDisplayed()) {\n\t\t\tSystem.out.println(\"The product is not delivered to your location\");}\n\t\t\n\t\telse {\n\t\t\t//Js.executeScript(\"arguments[0].scrollIntoView();\",driver.findElementByXPath(\"//a[text()='Proceed to pay securely ']\"));\n\t\t\t//Click Proceed to Pay Securely\n\t\t\twait.ignoring(StaleElementReferenceException.class).until(ExpectedConditions.elementToBeClickable(By.xpath(\"//a[contains(text(),'Proceed to pay securely')]\")));\n\t\t\tdriver.findElementByXPath(\"//a[contains(text(),'Proceed to pay securely')]\").click();\n\t\t\t\n\t\t\t//mouse.moveToElement(driver.findElementByXPath(\"//a[contains(text(),'Proceed to pay securely')]\")).click().build().perform();\n\t\t\t\n\t\t\t//Click Proceed to Pay\n\t\t\tdriver.findElementByLinkText(\"PLACE ORDER\").click();\n\t\t\t\n\t\t\t//Capture the screenshot of the item under Order Item\n\t\t\twait.ignoring(StaleElementReferenceException.class).until(ExpectedConditions.elementToBeClickable(By.xpath(\"//span[text()='ORDER SUMMARY']\")));\n\t\t\tdriver.findElementByXPath(\"//span[text()='ORDER SUMMARY']\").click();\n\t\t\tFile screenShot = driver.findElementByXPath(\"//li[@data-slick-index='0']\").getScreenshotAs(OutputType.FILE);\n\t\t\tFileUtils.copyFile(screenShot, new File(\"./screenshot/image.png\"));\n\t\t\t\n\t\t}\n\t\tdriver.close();\n\t\t\n\t}", "url": "https://raw.githubusercontent.com/SudhaM-SeleniumCoding/Learnings/master/day8pepperfry.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 64094, "method_name": "getLiving", "class_name": "EVEStorageLiving", "params": [], "throws": null, "modifiers": ["public"], "return_type": "EntityLivingBase", "snippet": "    public EntityLivingBase getLiving() {\n        return living;\n    }", "url": "https://raw.githubusercontent.com/Prunoideae/PhasePotion/master/src/main/java/com/naive/phase/Auxiliary/Magic/EVE/Storage/EVEStorageLiving.java", "stars": "2", "class_props": {"extends": null, "implements": ["IEVEStorageEntity", "ICapabilityProvider", "INBTSerializable"], "modifiers": ["public"]}}, {"id": 64095, "method_name": "getEVE", "class_name": "EVEStorageLiving", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Eve", "snippet": "    public Eve getEVE() {\n        NBTTagCompound tag = living.getEntityData();\n        return tag.hasKey(TAG_EVE) ?\n                DataHelper.loadEVEfromNBT(tag) :\n                new Eve(0, getCapacity(), getHueRange().getMid(), getBrightnessRange().getMid(), 0);\n    }", "url": "https://raw.githubusercontent.com/Prunoideae/PhasePotion/master/src/main/java/com/naive/phase/Auxiliary/Magic/EVE/Storage/EVEStorageLiving.java", "stars": "2", "class_props": {"extends": null, "implements": ["IEVEStorageEntity", "ICapabilityProvider", "INBTSerializable"], "modifiers": ["public"]}}, {"id": 64096, "method_name": "setEVE", "class_name": "EVEStorageLiving", "params": ["Eve"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setEVE(Eve incoming) {\n        living.getEntityData().setTag(TAG_EVE, incoming.writeToNBT());\n    }", "url": "https://raw.githubusercontent.com/Prunoideae/PhasePotion/master/src/main/java/com/naive/phase/Auxiliary/Magic/EVE/Storage/EVEStorageLiving.java", "stars": "2", "class_props": {"extends": null, "implements": ["IEVEStorageEntity", "ICapabilityProvider", "INBTSerializable"], "modifiers": ["public"]}}, {"id": 64097, "method_name": "blendEVE", "class_name": "EVEStorageLiving", "params": ["Eve", "boolean"], "throws": null, "modifiers": ["public"], "return_type": "Eve", "snippet": "    public Eve blendEVE(Eve incoming, boolean simulate) {\n        return null;\n    }", "url": "https://raw.githubusercontent.com/Prunoideae/PhasePotion/master/src/main/java/com/naive/phase/Auxiliary/Magic/EVE/Storage/EVEStorageLiving.java", "stars": "2", "class_props": {"extends": null, "implements": ["IEVEStorageEntity", "ICapabilityProvider", "INBTSerializable"], "modifiers": ["public"]}}, {"id": 64098, "method_name": "getHueRange", "class_name": "EVEStorageLiving", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Range", "snippet": "    public Range getHueRange() {\n        return hueRange;\n    }", "url": "https://raw.githubusercontent.com/Prunoideae/PhasePotion/master/src/main/java/com/naive/phase/Auxiliary/Magic/EVE/Storage/EVEStorageLiving.java", "stars": "2", "class_props": {"extends": null, "implements": ["IEVEStorageEntity", "ICapabilityProvider", "INBTSerializable"], "modifiers": ["public"]}}, {"id": 64099, "method_name": "getBrightnessRange", "class_name": "EVEStorageLiving", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Range", "snippet": "    public Range getBrightnessRange() {\n        return brightnessRange;\n    }", "url": "https://raw.githubusercontent.com/Prunoideae/PhasePotion/master/src/main/java/com/naive/phase/Auxiliary/Magic/EVE/Storage/EVEStorageLiving.java", "stars": "2", "class_props": {"extends": null, "implements": ["IEVEStorageEntity", "ICapabilityProvider", "INBTSerializable"], "modifiers": ["public"]}}, {"id": 64100, "method_name": "canBlend", "class_name": "EVEStorageLiving", "params": ["Eve"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean canBlend(Eve incoming) {\n        return getHueRange().in(incoming.getHue()) && getBrightnessRange().in(incoming.getBrightness());\n    }", "url": "https://raw.githubusercontent.com/Prunoideae/PhasePotion/master/src/main/java/com/naive/phase/Auxiliary/Magic/EVE/Storage/EVEStorageLiving.java", "stars": "2", "class_props": {"extends": null, "implements": ["IEVEStorageEntity", "ICapabilityProvider", "INBTSerializable"], "modifiers": ["public"]}}, {"id": 64101, "method_name": "hasCapability", "class_name": "EVEStorageLiving", "params": ["Capability<?>", "EnumFacing"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean hasCapability(@Nonnull Capability<?> capability, @Nullable EnumFacing facing) {\n        return capability == CapabilityEVE.EVE_ENTITY;\n    }", "url": "https://raw.githubusercontent.com/Prunoideae/PhasePotion/master/src/main/java/com/naive/phase/Auxiliary/Magic/EVE/Storage/EVEStorageLiving.java", "stars": "2", "class_props": {"extends": null, "implements": ["IEVEStorageEntity", "ICapabilityProvider", "INBTSerializable"], "modifiers": ["public"]}}, {"id": 64102, "method_name": "getCapability", "class_name": "EVEStorageLiving", "params": ["Capability<T>", "EnumFacing"], "throws": null, "modifiers": ["public"], "return_type": "T", "snippet": "    public <T> T getCapability(@Nonnull Capability<T> capability, @Nullable EnumFacing facing) {\n        return capability == CapabilityEVE.EVE_ENTITY ? (T) this : null;\n    }", "url": "https://raw.githubusercontent.com/Prunoideae/PhasePotion/master/src/main/java/com/naive/phase/Auxiliary/Magic/EVE/Storage/EVEStorageLiving.java", "stars": "2", "class_props": {"extends": null, "implements": ["IEVEStorageEntity", "ICapabilityProvider", "INBTSerializable"], "modifiers": ["public"]}}, {"id": 64103, "method_name": "serializeNBT", "class_name": "EVEStorageLiving", "params": [], "throws": null, "modifiers": ["public"], "return_type": "NBTTagCompound", "snippet": "    public NBTTagCompound serializeNBT() {\n        return getEVE().writeToNBT();\n    }", "url": "https://raw.githubusercontent.com/Prunoideae/PhasePotion/master/src/main/java/com/naive/phase/Auxiliary/Magic/EVE/Storage/EVEStorageLiving.java", "stars": "2", "class_props": {"extends": null, "implements": ["IEVEStorageEntity", "ICapabilityProvider", "INBTSerializable"], "modifiers": ["public"]}}, {"id": 64104, "method_name": "deserializeNBT", "class_name": "EVEStorageLiving", "params": ["NBTTagCompound"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void deserializeNBT(NBTTagCompound nbt) {\n        setEVE(getEVE().readFromNBT(nbt));\n    }", "url": "https://raw.githubusercontent.com/Prunoideae/PhasePotion/master/src/main/java/com/naive/phase/Auxiliary/Magic/EVE/Storage/EVEStorageLiving.java", "stars": "2", "class_props": {"extends": null, "implements": ["IEVEStorageEntity", "ICapabilityProvider", "INBTSerializable"], "modifiers": ["public"]}}, {"id": 64105, "method_name": "getCapacity", "class_name": "EVEStorageLiving", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getCapacity() {\n        return capacity;\n    }", "url": "https://raw.githubusercontent.com/Prunoideae/PhasePotion/master/src/main/java/com/naive/phase/Auxiliary/Magic/EVE/Storage/EVEStorageLiving.java", "stars": "2", "class_props": {"extends": null, "implements": ["IEVEStorageEntity", "ICapabilityProvider", "INBTSerializable"], "modifiers": ["public"]}}, {"id": 64106, "method_name": "onMeasure", "class_name": "PasswordView", "params": ["int", "int"], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void onMeasure(int widthMeasureSpec, int heightMeasureSpec) {\n        switch (MeasureSpec.getMode(widthMeasureSpec)) {\n            case MeasureSpec.AT_MOST:\n            case MeasureSpec.UNSPECIFIED:\n                widthMeasureSpec = MeasureSpec.makeMeasureSpec(mItemWidth * PASSWORD_COUNT, MeasureSpec.EXACTLY);\n                break;\n            case MeasureSpec.EXACTLY:\n            default:\n                break;\n        }\n\n        switch (MeasureSpec.getMode(heightMeasureSpec)) {\n            case MeasureSpec.AT_MOST:\n            case MeasureSpec.UNSPECIFIED:\n                heightMeasureSpec = MeasureSpec.makeMeasureSpec(mItemHeight, MeasureSpec.EXACTLY);\n                break;\n            case MeasureSpec.EXACTLY:\n            default:\n                break;\n        }\n\n        setMeasuredDimension(widthMeasureSpec, heightMeasureSpec);\n    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/widget/PasswordView.java", "stars": "1", "class_props": {"extends": "View", "implements": null, "modifiers": ["final", "public"]}}, {"id": 64107, "method_name": "onDraw", "class_name": "PasswordView", "params": ["Canvas"], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void onDraw(Canvas canvas) {\n        mPaint.setStrokeWidth(5);\n        canvas.drawPath(mPath, mPaint);\n\n        // \u753b\u5355\u4e2a\u7684\u5206\u5272\u7ebf\n        mPaint.setStrokeWidth(3);\n        for (int index = 1; index < PASSWORD_COUNT; index++) {\n            canvas.drawLine(mItemWidth * index, 0, mItemWidth * index, mItemHeight, mPaint);\n        }\n\n        // \u7ed8\u5236\u4e2d\u95f4\u7684\u5c0f\u9ed1\u70b9\n        if (mCurrentIndex == 0) {\n            return;\n        }\n        for (int i = 1; i <= mCurrentIndex; i++) {\n            canvas.drawCircle(i * mItemWidth - (float) mItemWidth / 2, (float) mItemHeight / 2, POINT_RADIUS, mPointPaint);\n        }\n    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/widget/PasswordView.java", "stars": "1", "class_props": {"extends": "View", "implements": null, "modifiers": ["final", "public"]}}, {"id": 64108, "method_name": "setPassWordLength", "class_name": "PasswordView", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setPassWordLength(int index) {\n        mCurrentIndex = index;\n        invalidate();\n    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/widget/PasswordView.java", "stars": "1", "class_props": {"extends": "View", "implements": null, "modifiers": ["final", "public"]}}, {"id": 64109, "method_name": "setNonNullParameter", "class_name": "LongTypeHandler", "params": ["PreparedStatement", "int", "Long", "JdbcType"], "throws": ["SQLException"], "modifiers": ["public"], "return_type": "void", "snippet": "  public void setNonNullParameter(PreparedStatement ps, int i, Long parameter, JdbcType jdbcType)\n      throws SQLException {\n    ps.setLong(i, parameter);\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/type/LongTypeHandler.java", "stars": "15", "class_props": {"extends": "BaseTypeHandler", "implements": null, "modifiers": ["public"]}}, {"id": 64110, "method_name": "getNullableResult", "class_name": "LongTypeHandler", "params": ["ResultSet", "String"], "throws": ["SQLException"], "modifiers": ["public"], "return_type": "Long", "snippet": "  public Long getNullableResult(ResultSet rs, String columnName)\n      throws SQLException {\n    long result = rs.getLong(columnName);\n    return result == 0 && rs.wasNull() ? null : result;\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/type/LongTypeHandler.java", "stars": "15", "class_props": {"extends": "BaseTypeHandler", "implements": null, "modifiers": ["public"]}}, {"id": 64111, "method_name": "getNullableResult", "class_name": "LongTypeHandler", "params": ["ResultSet", "int"], "throws": ["SQLException"], "modifiers": ["public"], "return_type": "Long", "snippet": "  public Long getNullableResult(ResultSet rs, int columnIndex)\n      throws SQLException {\n    long result = rs.getLong(columnIndex);\n    return result == 0 && rs.wasNull() ? null : result;\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/type/LongTypeHandler.java", "stars": "15", "class_props": {"extends": "BaseTypeHandler", "implements": null, "modifiers": ["public"]}}, {"id": 64112, "method_name": "getNullableResult", "class_name": "LongTypeHandler", "params": ["CallableStatement", "int"], "throws": ["SQLException"], "modifiers": ["public"], "return_type": "Long", "snippet": "  public Long getNullableResult(CallableStatement cs, int columnIndex)\n      throws SQLException {\n    long result = cs.getLong(columnIndex);\n    return result == 0 && cs.wasNull() ? null : result;\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/type/LongTypeHandler.java", "stars": "15", "class_props": {"extends": "BaseTypeHandler", "implements": null, "modifiers": ["public"]}}, {"id": 64113, "method_name": "cleanUp", "class_name": "BannerTests", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "\tvoid cleanUp() {\n\t\tif (this.context != null) {\n\t\t\tthis.context.close();\n\t\t}\n\t}", "url": "https://raw.githubusercontent.com/spring-projects/spring-boot/master/spring-boot-project/spring-boot/src/test/java/org/springframework/boot/BannerTests.java", "stars": "47572", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 64114, "method_name": "setup", "class_name": "BannerTests", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "\tvoid setup() {\n\t\tMockitoAnnotations.initMocks(this);\n\t}", "url": "https://raw.githubusercontent.com/spring-projects/spring-boot/master/spring-boot-project/spring-boot/src/test/java/org/springframework/boot/BannerTests.java", "stars": "47572", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 64115, "method_name": "testDefaultBanner", "class_name": "BannerTests", "params": ["CapturedOutput"], "throws": null, "modifiers": [], "return_type": "void", "snippet": "\tvoid testDefaultBanner(CapturedOutput output) {\n\t\tSpringApplication application = createSpringApplication();\n\t\tthis.context = application.run();\n\t\tassertThat(output).contains(\":: Spring Boot ::\");\n\t}", "url": "https://raw.githubusercontent.com/spring-projects/spring-boot/master/spring-boot-project/spring-boot/src/test/java/org/springframework/boot/BannerTests.java", "stars": "47572", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 64116, "method_name": "testDefaultBannerInLog", "class_name": "BannerTests", "params": ["CapturedOutput"], "throws": null, "modifiers": [], "return_type": "void", "snippet": "\tvoid testDefaultBannerInLog(CapturedOutput output) {\n\t\tSpringApplication application = createSpringApplication();\n\t\tthis.context = application.run();\n\t\tassertThat(output).contains(\":: Spring Boot ::\");\n\t}", "url": "https://raw.githubusercontent.com/spring-projects/spring-boot/master/spring-boot-project/spring-boot/src/test/java/org/springframework/boot/BannerTests.java", "stars": "47572", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 64117, "method_name": "testCustomBanner", "class_name": "BannerTests", "params": ["CapturedOutput"], "throws": null, "modifiers": [], "return_type": "void", "snippet": "\tvoid testCustomBanner(CapturedOutput output) {\n\t\tSpringApplication application = createSpringApplication();\n\t\tapplication.setBanner(new DummyBanner());\n\t\tthis.context = application.run();\n\t\tassertThat(output).contains(\"My Banner\");\n\t}", "url": "https://raw.githubusercontent.com/spring-projects/spring-boot/master/spring-boot-project/spring-boot/src/test/java/org/springframework/boot/BannerTests.java", "stars": "47572", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 64118, "method_name": "testBannerInContext", "class_name": "BannerTests", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "\tvoid testBannerInContext() {\n\t\tSpringApplication application = createSpringApplication();\n\t\tthis.context = application.run();\n\t\tassertThat(this.context.containsBean(\"springBootBanner\")).isTrue();\n\t}", "url": "https://raw.githubusercontent.com/spring-projects/spring-boot/master/spring-boot-project/spring-boot/src/test/java/org/springframework/boot/BannerTests.java", "stars": "47572", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 64119, "method_name": "testCustomBannerInContext", "class_name": "BannerTests", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "\tvoid testCustomBannerInContext() {\n\t\tSpringApplication application = createSpringApplication();\n\t\tBanner banner = mock(Banner.class);\n\t\tapplication.setBanner(banner);\n\t\tthis.context = application.run();\n\t\tBanner printedBanner = (Banner) this.context.getBean(\"springBootBanner\");\n\t\tassertThat(printedBanner).hasFieldOrPropertyWithValue(\"banner\", banner);\n\t\tverify(banner).printBanner(any(Environment.class), this.sourceClassCaptor.capture(), any(PrintStream.class));\n\t\treset(banner);\n\t\tprintedBanner.printBanner(this.context.getEnvironment(), null, System.out);\n\t\tverify(banner).printBanner(any(Environment.class), eq(this.sourceClassCaptor.getValue()),\n\t\t\t\tany(PrintStream.class));\n\t}", "url": "https://raw.githubusercontent.com/spring-projects/spring-boot/master/spring-boot-project/spring-boot/src/test/java/org/springframework/boot/BannerTests.java", "stars": "47572", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 64120, "method_name": "testDisableBannerInContext", "class_name": "BannerTests", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "\tvoid testDisableBannerInContext() {\n\t\tSpringApplication application = createSpringApplication();\n\t\tapplication.setBannerMode(Mode.OFF);\n\t\tthis.context = application.run();\n\t\tassertThat(this.context.containsBean(\"springBootBanner\")).isFalse();\n\t}", "url": "https://raw.githubusercontent.com/spring-projects/spring-boot/master/spring-boot-project/spring-boot/src/test/java/org/springframework/boot/BannerTests.java", "stars": "47572", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 64121, "method_name": "createSpringApplication", "class_name": "BannerTests", "params": [], "throws": null, "modifiers": ["private"], "return_type": "SpringApplication", "snippet": "\tprivate SpringApplication createSpringApplication() {\n\t\tSpringApplication application = new SpringApplication(Config.class);\n\t\tapplication.setWebApplicationType(WebApplicationType.NONE);\n\t\treturn application;\n\t}", "url": "https://raw.githubusercontent.com/spring-projects/spring-boot/master/spring-boot-project/spring-boot/src/test/java/org/springframework/boot/BannerTests.java", "stars": "47572", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 64122, "method_name": "printBanner", "class_name": "DummyBanner", "params": ["Environment", "Class<?>", "PrintStream"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\t\tpublic void printBanner(Environment environment, Class<?> sourceClass, PrintStream out) {\n\t\t\tout.println(\"My Banner\");\n\t\t}", "url": "https://raw.githubusercontent.com/spring-projects/spring-boot/master/spring-boot-project/spring-boot/src/test/java/org/springframework/boot/BannerTests.java", "stars": "47572", "class_props": {"extends": null, "implements": ["Banner"], "modifiers": ["static"]}}, {"id": 64123, "method_name": "maxWeapons", "class_name": "ShipDesign", "params": [], "throws": null, "modifiers": ["final", "public", "static"], "return_type": "int", "snippet": "    public static final int maxWeapons()                 { return maxWeapons; }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/ships/ShipDesign.java", "stars": "74", "class_props": {"extends": "Design", "implements": null, "modifiers": ["final", "public"]}}, {"id": 64124, "method_name": "maxSpecials", "class_name": "ShipDesign", "params": [], "throws": null, "modifiers": ["final", "public", "static"], "return_type": "int", "snippet": "    public static final int maxSpecials()                { return maxSpecials; }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/ships/ShipDesign.java", "stars": "74", "class_props": {"extends": "Design", "implements": null, "modifiers": ["final", "public"]}}, {"id": 64125, "method_name": "hullPoints", "class_name": "ShipDesign", "params": ["int"], "throws": null, "modifiers": ["public", "static"], "return_type": "float", "snippet": "    public static float hullPoints(int size)   { return Galaxy.current().pow(6, size); }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/ships/ShipDesign.java", "stars": "74", "class_props": {"extends": "Design", "implements": null, "modifiers": ["final", "public"]}}, {"id": 64126, "method_name": "computer", "class_name": "ShipDesign", "params": [], "throws": null, "modifiers": ["public"], "return_type": "ShipComputer", "snippet": "    public ShipComputer computer()          { return computer; }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/ships/ShipDesign.java", "stars": "74", "class_props": {"extends": "Design", "implements": null, "modifiers": ["final", "public"]}}, {"id": 64127, "method_name": "computer", "class_name": "ShipDesign", "params": ["ShipComputer"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void computer(ShipComputer c)    { computer = c; }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/ships/ShipDesign.java", "stars": "74", "class_props": {"extends": "Design", "implements": null, "modifiers": ["final", "public"]}}, {"id": 64128, "method_name": "shield", "class_name": "ShipDesign", "params": [], "throws": null, "modifiers": ["public"], "return_type": "ShipShield", "snippet": "    public ShipShield shield()              { return shield; }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/ships/ShipDesign.java", "stars": "74", "class_props": {"extends": "Design", "implements": null, "modifiers": ["final", "public"]}}, {"id": 64129, "method_name": "shield", "class_name": "ShipDesign", "params": ["ShipShield"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void shield(ShipShield c)        { shield = c; }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/ships/ShipDesign.java", "stars": "74", "class_props": {"extends": "Design", "implements": null, "modifiers": ["final", "public"]}}, {"id": 64130, "method_name": "ecm", "class_name": "ShipDesign", "params": [], "throws": null, "modifiers": ["public"], "return_type": "ShipECM", "snippet": "    public ShipECM ecm()                    { return ecm; }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/ships/ShipDesign.java", "stars": "74", "class_props": {"extends": "Design", "implements": null, "modifiers": ["final", "public"]}}, {"id": 64131, "method_name": "ecm", "class_name": "ShipDesign", "params": ["ShipECM"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void ecm(ShipECM c)              { ecm = c; }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/ships/ShipDesign.java", "stars": "74", "class_props": {"extends": "Design", "implements": null, "modifiers": ["final", "public"]}}, {"id": 64132, "method_name": "armor", "class_name": "ShipDesign", "params": [], "throws": null, "modifiers": ["public"], "return_type": "ShipArmor", "snippet": "    public ShipArmor armor()                { return armor; }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/ships/ShipDesign.java", "stars": "74", "class_props": {"extends": "Design", "implements": null, "modifiers": ["final", "public"]}}, {"id": 64133, "method_name": "armor", "class_name": "ShipDesign", "params": ["ShipArmor"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void armor(ShipArmor c)          { armor = c; }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/ships/ShipDesign.java", "stars": "74", "class_props": {"extends": "Design", "implements": null, "modifiers": ["final", "public"]}}, {"id": 64134, "method_name": "engine", "class_name": "ShipDesign", "params": [], "throws": null, "modifiers": ["public"], "return_type": "ShipEngine", "snippet": "    public ShipEngine engine()              { return engine; }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/ships/ShipDesign.java", "stars": "74", "class_props": {"extends": "Design", "implements": null, "modifiers": ["final", "public"]}}, {"id": 64135, "method_name": "engine", "class_name": "ShipDesign", "params": ["ShipEngine"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void engine(ShipEngine c)        { engine = c; }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/ships/ShipDesign.java", "stars": "74", "class_props": {"extends": "Design", "implements": null, "modifiers": ["final", "public"]}}, {"id": 64136, "method_name": "maneuver", "class_name": "ShipDesign", "params": [], "throws": null, "modifiers": ["public"], "return_type": "ShipManeuver", "snippet": "    public ShipManeuver maneuver()          { return maneuver; }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/ships/ShipDesign.java", "stars": "74", "class_props": {"extends": "Design", "implements": null, "modifiers": ["final", "public"]}}, {"id": 64137, "method_name": "maneuver", "class_name": "ShipDesign", "params": ["ShipManeuver"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void maneuver(ShipManeuver c)    { maneuver = c; }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/ships/ShipDesign.java", "stars": "74", "class_props": {"extends": "Design", "implements": null, "modifiers": ["final", "public"]}}, {"id": 64138, "method_name": "weapon", "class_name": "ShipDesign", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "ShipWeapon", "snippet": "    public ShipWeapon weapon(int i)           { return weapon[i]; }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/ships/ShipDesign.java", "stars": "74", "class_props": {"extends": "Design", "implements": null, "modifiers": ["final", "public"]}}, {"id": 64139, "method_name": "special", "class_name": "ShipDesign", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "ShipSpecial", "snippet": "    public ShipSpecial special(int i)         { return special[i]; }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/ships/ShipDesign.java", "stars": "74", "class_props": {"extends": "Design", "implements": null, "modifiers": ["final", "public"]}}, {"id": 64140, "method_name": "wpnCount", "class_name": "ShipDesign", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int wpnCount(int i)                { return wpnCount[i]; }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/ships/ShipDesign.java", "stars": "74", "class_props": {"extends": "Design", "implements": null, "modifiers": ["final", "public"]}}, {"id": 64141, "method_name": "weapon", "class_name": "ShipDesign", "params": ["int", "ShipWeapon"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void weapon(int i, ShipWeapon c)   { weapon[i] = c; }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/ships/ShipDesign.java", "stars": "74", "class_props": {"extends": "Design", "implements": null, "modifiers": ["final", "public"]}}, {"id": 64142, "method_name": "special", "class_name": "ShipDesign", "params": ["int", "ShipSpecial"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void special(int i, ShipSpecial c) { special[i] = c; }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/ships/ShipDesign.java", "stars": "74", "class_props": {"extends": "Design", "implements": null, "modifiers": ["final", "public"]}}, {"id": 64143, "method_name": "wpnCount", "class_name": "ShipDesign", "params": ["int", "int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void wpnCount(int i, int n)        { wpnCount[i] = n; }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/ships/ShipDesign.java", "stars": "74", "class_props": {"extends": "Design", "implements": null, "modifiers": ["final", "public"]}}, {"id": 64144, "method_name": "weapon", "class_name": "ShipDesign", "params": ["int", "ShipWeapon", "int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void weapon(int i, ShipWeapon c, int n) {\n        weapon[i] = c;\n        wpnCount[i] = n;\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/ships/ShipDesign.java", "stars": "74", "class_props": {"extends": "Design", "implements": null, "modifiers": ["final", "public"]}}, {"id": 64145, "method_name": "size", "class_name": "ShipDesign", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int size()                       { return size; }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/ships/ShipDesign.java", "stars": "74", "class_props": {"extends": "Design", "implements": null, "modifiers": ["final", "public"]}}, {"id": 64146, "method_name": "size", "class_name": "ShipDesign", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void size(int i)                 { size = i; }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/ships/ShipDesign.java", "stars": "74", "class_props": {"extends": "Design", "implements": null, "modifiers": ["final", "public"]}}, {"id": 64147, "method_name": "mission", "class_name": "ShipDesign", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int mission()                    { return mission; }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/ships/ShipDesign.java", "stars": "74", "class_props": {"extends": "Design", "implements": null, "modifiers": ["final", "public"]}}, {"id": 64148, "method_name": "mission", "class_name": "ShipDesign", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void mission(int i)              { mission = i; }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/ships/ShipDesign.java", "stars": "74", "class_props": {"extends": "Design", "implements": null, "modifiers": ["final", "public"]}}, {"id": 64149, "method_name": "remainingLife", "class_name": "ShipDesign", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int remainingLife()              { return remainingLife; }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/ships/ShipDesign.java", "stars": "74", "class_props": {"extends": "Design", "implements": null, "modifiers": ["final", "public"]}}, {"id": 64150, "method_name": "unusedTurns", "class_name": "ShipDesign", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int unusedTurns()                { return unusedTurns; }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/ships/ShipDesign.java", "stars": "74", "class_props": {"extends": "Design", "implements": null, "modifiers": ["final", "public"]}}, {"id": 64151, "method_name": "maxUnusedTurns", "class_name": "ShipDesign", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int maxUnusedTurns()             { return maxUnusedTurns; }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/ships/ShipDesign.java", "stars": "74", "class_props": {"extends": "Design", "implements": null, "modifiers": ["final", "public"]}}, {"id": 64152, "method_name": "maxUnusedTurns", "class_name": "ShipDesign", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void maxUnusedTurns(int i)       { maxUnusedTurns = i; }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/ships/ShipDesign.java", "stars": "74", "class_props": {"extends": "Design", "implements": null, "modifiers": ["final", "public"]}}, {"id": 64153, "method_name": "addUsedCount", "class_name": "ShipDesign", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void addUsedCount(int i)         { usedCount += i; }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/ships/ShipDesign.java", "stars": "74", "class_props": {"extends": "Design", "implements": null, "modifiers": ["final", "public"]}}, {"id": 64154, "method_name": "perTurnDamage", "class_name": "ShipDesign", "params": [], "throws": null, "modifiers": ["public"], "return_type": "float", "snippet": "    public float perTurnDamage()            { return perTurnDmg; }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/ships/ShipDesign.java", "stars": "74", "class_props": {"extends": "Design", "implements": null, "modifiers": ["final", "public"]}}, {"id": 64155, "method_name": "perTurnDamage", "class_name": "ShipDesign", "params": ["float"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void perTurnDamage(float d)      { perTurnDmg = d; }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/ships/ShipDesign.java", "stars": "74", "class_props": {"extends": "Design", "implements": null, "modifiers": ["final", "public"]}}, {"id": 64156, "method_name": "iconKey", "class_name": "ShipDesign", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String iconKey()                 { return iconKey; }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/ships/ShipDesign.java", "stars": "74", "class_props": {"extends": "Design", "implements": null, "modifiers": ["final", "public"]}}, {"id": 64157, "method_name": "iconKey", "class_name": "ShipDesign", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void iconKey(String s)           { icon = null; iconKey = s; }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/ships/ShipDesign.java", "stars": "74", "class_props": {"extends": "Design", "implements": null, "modifiers": ["final", "public"]}}, {"id": 64158, "method_name": "seq", "class_name": "ShipDesign", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void seq(int i)                  { seq = i%6; setIconKey(); }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/ships/ShipDesign.java", "stars": "74", "class_props": {"extends": "Design", "implements": null, "modifiers": ["final", "public"]}}, {"id": 64159, "method_name": "scrapValue", "class_name": "ShipDesign", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "float", "snippet": "    public float scrapValue(int n)          { return cost() * n / 4.0f; }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/ships/ShipDesign.java", "stars": "74", "class_props": {"extends": "Design", "implements": null, "modifiers": ["final", "public"]}}, {"id": 64160, "method_name": "setIconKey", "class_name": "ShipDesign", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setIconKey() {\n        iconKey(ShipLibrary.current().shipKey(lab().shipStyleIndex(), size(), seq()));\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/ships/ShipDesign.java", "stars": "74", "class_props": {"extends": "Design", "implements": null, "modifiers": ["final", "public"]}}, {"id": 64161, "method_name": "sizeDesc", "class_name": "ShipDesign", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String sizeDesc() {\n        switch (size()) {\n            case ShipDesign.SMALL:  return text(\"SHIP_DESIGN_SIZE_SMALL\");\n            case ShipDesign.MEDIUM: return  text(\"SHIP_DESIGN_SIZE_MEDIUM\");\n            case ShipDesign.LARGE:  return  text(\"SHIP_DESIGN_SIZE_LARGE\");\n            case ShipDesign.HUGE:  return  text(\"SHIP_DESIGN_SIZE_HUGE\");\n        }\n        return \"\";\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/ships/ShipDesign.java", "stars": "74", "class_props": {"extends": "Design", "implements": null, "modifiers": ["final", "public"]}}, {"id": 64162, "method_name": "icon", "class_name": "ShipDesign", "params": [], "throws": null, "modifiers": ["public"], "return_type": "ImageIcon", "snippet": "    public ImageIcon icon()                 {\n        if (icon == null)\n            icon = icon(iconKey);\n        return icon;\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/ships/ShipDesign.java", "stars": "74", "class_props": {"extends": "Design", "implements": null, "modifiers": ["final", "public"]}}, {"id": 64163, "method_name": "isScout", "class_name": "ShipDesign", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean isScout()       { return (mission() == SCOUT); }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/ships/ShipDesign.java", "stars": "74", "class_props": {"extends": "Design", "implements": null, "modifiers": ["final", "public"]}}, {"id": 64164, "method_name": "isFighter", "class_name": "ShipDesign", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean isFighter()     { return (mission() == FIGHTER); }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/ships/ShipDesign.java", "stars": "74", "class_props": {"extends": "Design", "implements": null, "modifiers": ["final", "public"]}}, {"id": 64165, "method_name": "isColonyShip", "class_name": "ShipDesign", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean isColonyShip()  { return (mission() == COLONY); }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/ships/ShipDesign.java", "stars": "74", "class_props": {"extends": "Design", "implements": null, "modifiers": ["final", "public"]}}, {"id": 64166, "method_name": "isBomber", "class_name": "ShipDesign", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean isBomber()      { return (mission() == BOMBER); }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/ships/ShipDesign.java", "stars": "74", "class_props": {"extends": "Design", "implements": null, "modifiers": ["final", "public"]}}, {"id": 64167, "method_name": "clearEmptyWeapons", "class_name": "ShipDesign", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void clearEmptyWeapons() {\n        for (int i=0;i<wpnCount.length;i++) {\n            if (wpnCount[i] == 0)\n                weapon[i] = lab().noWeapon();\n        }\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/ships/ShipDesign.java", "stars": "74", "class_props": {"extends": "Design", "implements": null, "modifiers": ["final", "public"]}}, {"id": 64168, "method_name": "shipImage", "class_name": "ShipDesign", "params": [], "throws": null, "modifiers": ["public"], "return_type": "ShipImage", "snippet": "    public ShipImage shipImage() {\n        return ShipLibrary.current().shipImage(lab().shipStyleIndex(), size(), seq());\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/ships/ShipDesign.java", "stars": "74", "class_props": {"extends": "Design", "implements": null, "modifiers": ["final", "public"]}}, {"id": 64169, "method_name": "nextImage", "class_name": "ShipDesign", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void nextImage() {\n        seq++;\n        if (seq > 5)\n            seq = 0;\n        setIconKey();\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/ships/ShipDesign.java", "stars": "74", "class_props": {"extends": "Design", "implements": null, "modifiers": ["final", "public"]}}, {"id": 64170, "method_name": "prevImage", "class_name": "ShipDesign", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void prevImage() {\n        seq--;\n        if (seq < 0)\n            seq = 5;\n        setIconKey();\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/ships/ShipDesign.java", "stars": "74", "class_props": {"extends": "Design", "implements": null, "modifiers": ["final", "public"]}}, {"id": 64171, "method_name": "copyFrom", "class_name": "ShipDesign", "params": ["ShipDesign"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void copyFrom(ShipDesign d) {\n        seq = d.seq();\n        lab(d.lab());\n        iconKey(d.iconKey());\n        size(d.size());\n        //name(d.name());\n        computer(d.computer());\n        shield(d.shield());\n        ecm(d.ecm());\n        armor(d.armor());\n        engine(d.engine());\n        maneuver(d.maneuver());\n        mission(d.mission());\n        for (int i=0;i<maxWeapons();i++) {\n            weapon(i, d.weapon(i));\n            wpnCount(i, d.wpnCount(i));\n        }\n        for (int i=0;i<maxSpecials();i++) {\n            special(i, d.special(i));\n        }\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/ships/ShipDesign.java", "stars": "74", "class_props": {"extends": "Design", "implements": null, "modifiers": ["final", "public"]}}, {"id": 64172, "method_name": "validConfiguration", "class_name": "ShipDesign", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean validConfiguration() {\n        return availableSpace() >= 0;\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/ships/ShipDesign.java", "stars": "74", "class_props": {"extends": "Design", "implements": null, "modifiers": ["final", "public"]}}, {"id": 64173, "method_name": "nextEmptyWeaponSlot", "class_name": "ShipDesign", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int nextEmptyWeaponSlot() {\n        for (int i=0;i<maxWeapons;i++) {\n            if (weapon(i).isNone())\n                return i;\n        }\n        return -1;\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/ships/ShipDesign.java", "stars": "74", "class_props": {"extends": "Design", "implements": null, "modifiers": ["final", "public"]}}, {"id": 64174, "method_name": "nextEmptySpecialSlot", "class_name": "ShipDesign", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int nextEmptySpecialSlot() {\n        for (int i=0;i<maxSpecials;i++) {\n            if (special(i).isNone())\n                return i;\n        }\n        return -1;\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/ships/ShipDesign.java", "stars": "74", "class_props": {"extends": "Design", "implements": null, "modifiers": ["final", "public"]}}, {"id": 64175, "method_name": "adjustedPixel", "class_name": "ShipDesign", "params": ["int", "int"], "throws": null, "modifiers": ["protected"], "return_type": "int", "snippet": "    protected int adjustedPixel(int pixel, int amt) {\n        float adj = (float) amt / 12;\n        if (adj > 0)\n            return min(255, pixel+(int) (adj*(255-pixel)));\n        if (adj < 0)\n            return max(0, (int)((1+adj)*pixel));\n        return pixel;\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/ships/ShipDesign.java", "stars": "74", "class_props": {"extends": "Design", "implements": null, "modifiers": ["final", "public"]}}, {"id": 64176, "method_name": "matchesDesign", "class_name": "ShipDesign", "params": ["ShipDesign"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean matchesDesign(ShipDesign d) {\n        if (scrapped() != d.scrapped())\n            return false;\n        if (size() != d.size())\n            return false;\n        if (armor() != d.armor())\n            return false;\n        if (shield() != d.shield())\n            return false;\n        if (computer() != d.computer())\n            return false;\n        if (ecm() != d.ecm())\n            return false;\n        if (engine() != d.engine())\n            return false;\n        if (maneuver() != d.maneuver())\n            return false;\n        for (int i=0;i<ShipDesign.maxWeapons();i++) {\n            if (weapon(i) != d.weapon(i) )\n                return false;\n            if (wpnCount(i) != d.wpnCount(i))\n                return false;\n        }\n        for (int i=0;i<ShipDesign.maxSpecials();i++) {\n            if (special(i) != d.special(i))\n                return false;\n        }\n        return true;\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/ships/ShipDesign.java", "stars": "74", "class_props": {"extends": "Design", "implements": null, "modifiers": ["final", "public"]}}, {"id": 64177, "method_name": "validMission", "class_name": "ShipDesign", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean validMission(int destId) {\n        if (mission != ShipDesign.COLONY)\n            return true;\n        ShipSpecialColony colonySpecial = colonySpecial();\n        if (colonySpecial == null)\n            return true;\n        if (destId == StarSystem.NULL_ID)\n            return false;\n        StarSystem dest = galaxy().system(destId);\n        // return if ordersStack can colonize the destination planet\n        return empire().race().ignoresPlanetEnvironment() || colonySpecial.canColonize(dest.planet());\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/ships/ShipDesign.java", "stars": "74", "class_props": {"extends": "Design", "implements": null, "modifiers": ["final", "public"]}}, {"id": 64178, "method_name": "cost", "class_name": "ShipDesign", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int cost() {\n        float cost = baseCost();\n        cost += computer().cost(this);\n        cost += shield().cost(this);\n        cost += ecm().cost(this);\n        cost += armor().cost(this);\n        cost += (enginesRequired() * engine().cost(this));\n\n        for (int i=0; i<maxWeapons(); i++)\n            cost += (wpnCount(i) * weapon(i).cost(this));\n        for (int i=0; i<maxSpecials(); i++)\n            cost += special(i).cost(this);\n\n        return (int) cost;\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/ships/ShipDesign.java", "stars": "74", "class_props": {"extends": "Design", "implements": null, "modifiers": ["final", "public"]}}, {"id": 64179, "method_name": "hullPoints", "class_name": "ShipDesign", "params": [], "throws": null, "modifiers": ["public"], "return_type": "float", "snippet": "    public float hullPoints() { return hullPoints(size()); }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/ships/ShipDesign.java", "stars": "74", "class_props": {"extends": "Design", "implements": null, "modifiers": ["final", "public"]}}, {"id": 64180, "method_name": "totalSpace", "class_name": "ShipDesign", "params": [], "throws": null, "modifiers": ["public"], "return_type": "float", "snippet": "    public float totalSpace() { return totalSpace(size()); }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/ships/ShipDesign.java", "stars": "74", "class_props": {"extends": "Design", "implements": null, "modifiers": ["final", "public"]}}, {"id": 64181, "method_name": "totalSpace", "class_name": "ShipDesign", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "float", "snippet": "    public float totalSpace(int s) {\n        float techBonus = 1 + (.02f * empire().tech().construction().techLevel());\n        switch(s) {\n            case SMALL  : return 40 * techBonus;\n            case MEDIUM : return 200 * techBonus;\n            case LARGE  : return 1000 * techBonus;\n            case HUGE   : return 5000 * techBonus;\n            default     : return 0;\n        }\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/ships/ShipDesign.java", "stars": "74", "class_props": {"extends": "Design", "implements": null, "modifiers": ["final", "public"]}}, {"id": 64182, "method_name": "becomeObsolete", "class_name": "ShipDesign", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void becomeObsolete(int turns) {\n        if (!obsolete()) {\n            obsolete(true);\n            remainingLife = turns;\n        }\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/ships/ShipDesign.java", "stars": "74", "class_props": {"extends": "Design", "implements": null, "modifiers": ["final", "public"]}}, {"id": 64183, "method_name": "spaceUsed", "class_name": "ShipDesign", "params": [], "throws": null, "modifiers": ["public"], "return_type": "float", "snippet": "    public float spaceUsed() { return spaceUsed(size()); }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/ships/ShipDesign.java", "stars": "74", "class_props": {"extends": "Design", "implements": null, "modifiers": ["final", "public"]}}, {"id": 64184, "method_name": "spaceUsed", "class_name": "ShipDesign", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "float", "snippet": "    public float spaceUsed(int s) {\n        int tempSize = size();\n        size(s);\n\n        float space = 0;\n        space += computer().space(this);\n        space += shield().space(this);\n        space += ecm().space(this);\n        space += armor().space(this);\n        space += maneuver().space(this);\n        for (int i=0; i<maxWeapons(); i++)\n            space += (wpnCount(i) * weapon(i).space(this));\n        for (int i=0; i<maxSpecials(); i++)\n            space += special(i).space(this);\n        size(tempSize);\n        return space;\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/ships/ShipDesign.java", "stars": "74", "class_props": {"extends": "Design", "implements": null, "modifiers": ["final", "public"]}}, {"id": 64185, "method_name": "enginesUsed", "class_name": "ShipDesign", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int enginesUsed() { return (int) Math.ceil(enginesRequired()); }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/ships/ShipDesign.java", "stars": "74", "class_props": {"extends": "Design", "implements": null, "modifiers": ["final", "public"]}}, {"id": 64186, "method_name": "enginesRequired", "class_name": "ShipDesign", "params": [], "throws": null, "modifiers": ["public"], "return_type": "float", "snippet": "    public float enginesRequired() {\n        float engines = 0;\n        engines += computer().enginesRequired(this);\n        engines += shield().enginesRequired(this);\n        engines += ecm().enginesRequired(this);\n        engines += armor().enginesRequired(this);\n        engines += maneuver().enginesRequired(this);\n        for (int i=0; i<maxWeapons(); i++)\n            engines += (wpnCount(i) * weapon(i).enginesRequired(this));\n        for (int i=0; i<maxSpecials(); i++)\n            engines += special(i).enginesRequired(this);\n        return engines;\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/ships/ShipDesign.java", "stars": "74", "class_props": {"extends": "Design", "implements": null, "modifiers": ["final", "public"]}}, {"id": 64187, "method_name": "addWeapon", "class_name": "ShipDesign", "params": ["ShipWeapon", "int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void addWeapon(ShipWeapon wpn, int count) {\n        for (int i=0; i<maxWeapons(); i++) {\n            if (weapon(i).noWeapon()) {\n                weapon(i, wpn);\n                wpnCount(i, count);\n                return;\n            }\n            if (weapon(i).tech() == wpn.tech()) {\n                wpnCount(i, wpnCount(i) + count);\n                return;\n            }\n        }\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/ships/ShipDesign.java", "stars": "74", "class_props": {"extends": "Design", "implements": null, "modifiers": ["final", "public"]}}, {"id": 64188, "method_name": "canAttackPlanets", "class_name": "ShipDesign", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean canAttackPlanets() {\n        for (int i=0;i<maxWeapons();i++) {\n            if (weapon(i).canAttackPlanets())\n                return true;\n        }\n        for (int i=0;i<maxSpecials();i++) {\n            if (special(i).canAttackPlanets())\n                return true;\n        }\n        return false;\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/ships/ShipDesign.java", "stars": "74", "class_props": {"extends": "Design", "implements": null, "modifiers": ["final", "public"]}}, {"id": 64189, "method_name": "isArmed", "class_name": "ShipDesign", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean isArmed() {\n        for (int i=0;i<maxWeapons();i++) {\n            if (!weapon(i).noWeapon() && (wpnCount(i)>0))\n                return true;\n        }\n        for (int i=0;i<maxSpecials();i++) {\n            if (special(i).isWeapon())\n                return true;\n        }\n        return false;\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/ships/ShipDesign.java", "stars": "74", "class_props": {"extends": "Design", "implements": null, "modifiers": ["final", "public"]}}, {"id": 64190, "method_name": "isExtendedRange", "class_name": "ShipDesign", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean isExtendedRange() {\n        for (int i=0;i<maxSpecials();i++) {\n            if (special(i).isFuelRange())\n                return true;\n        }\n        return false;\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/ships/ShipDesign.java", "stars": "74", "class_props": {"extends": "Design", "implements": null, "modifiers": ["final", "public"]}}, {"id": 64191, "method_name": "firepower", "class_name": "ShipDesign", "params": ["float"], "throws": null, "modifiers": ["public"], "return_type": "float", "snippet": "    public float firepower(float shield) {\n        float dmg = 0;\n        for (int i=0;i<maxWeapons();i++)\n            dmg += (wpnCount(i) * weapon(i).firepower(shield));\n        return dmg;\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/ships/ShipDesign.java", "stars": "74", "class_props": {"extends": "Design", "implements": null, "modifiers": ["final", "public"]}}, {"id": 64192, "method_name": "firepower", "class_name": "ShipDesign", "params": ["CombatStack", "int"], "throws": null, "modifiers": ["public"], "return_type": "float", "snippet": "    public float firepower(CombatStack target, int wpn) {\n        float dmg = wpnCount(wpn) * weapon(wpn).firepower(target.shieldLevel());\n        if (weapon(wpn).isStreamingWeapon() && (dmg > target.maxHits()))\n            dmg *= (dmg/target.maxHits());\n        return dmg;\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/ships/ShipDesign.java", "stars": "74", "class_props": {"extends": "Design", "implements": null, "modifiers": ["final", "public"]}}, {"id": 64193, "method_name": "estimatedKills", "class_name": "ShipDesign", "params": ["CombatStack", "CombatStack"], "throws": null, "modifiers": ["public"], "return_type": "float", "snippet": "    public float estimatedKills(CombatStack source, CombatStack target) {\n        float kills = 0;\n        for (int i=0;i<maxWeapons();i++)\n            kills += weapon(i).estimatedKills(source, target, wpnCount(i));\n        return kills;\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/ships/ShipDesign.java", "stars": "74", "class_props": {"extends": "Design", "implements": null, "modifiers": ["final", "public"]}}, {"id": 64194, "method_name": "availableSpace", "class_name": "ShipDesign", "params": [], "throws": null, "modifiers": ["public"], "return_type": "float", "snippet": "    public float availableSpace()                { return totalSpace() - spaceUsed(); }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/ships/ShipDesign.java", "stars": "74", "class_props": {"extends": "Design", "implements": null, "modifiers": ["final", "public"]}}, {"id": 64195, "method_name": "availableSpace", "class_name": "ShipDesign", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "float", "snippet": "    public float availableSpace(int newSize)     { return totalSpace(newSize) - spaceUsed(newSize); }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/ships/ShipDesign.java", "stars": "74", "class_props": {"extends": "Design", "implements": null, "modifiers": ["final", "public"]}}, {"id": 64196, "method_name": "availableSpaceForComputerSlot", "class_name": "ShipDesign", "params": [], "throws": null, "modifiers": ["public"], "return_type": "float", "snippet": "    public float availableSpaceForComputerSlot() { return availableSpace() + computer().space(this); }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/ships/ShipDesign.java", "stars": "74", "class_props": {"extends": "Design", "implements": null, "modifiers": ["final", "public"]}}, {"id": 64197, "method_name": "availableSpaceForShieldSlot", "class_name": "ShipDesign", "params": [], "throws": null, "modifiers": ["public"], "return_type": "float", "snippet": "    public float availableSpaceForShieldSlot()   { return availableSpace() + shield().space(this); }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/ships/ShipDesign.java", "stars": "74", "class_props": {"extends": "Design", "implements": null, "modifiers": ["final", "public"]}}, {"id": 64198, "method_name": "availableSpaceForECMSlot", "class_name": "ShipDesign", "params": [], "throws": null, "modifiers": ["public"], "return_type": "float", "snippet": "    public float availableSpaceForECMSlot()      { return availableSpace() + ecm().space(this); }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/ships/ShipDesign.java", "stars": "74", "class_props": {"extends": "Design", "implements": null, "modifiers": ["final", "public"]}}, {"id": 64199, "method_name": "availableSpaceForArmorSlot", "class_name": "ShipDesign", "params": [], "throws": null, "modifiers": ["public"], "return_type": "float", "snippet": "    public float availableSpaceForArmorSlot()    { return availableSpace() + armor().space(this); }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/ships/ShipDesign.java", "stars": "74", "class_props": {"extends": "Design", "implements": null, "modifiers": ["final", "public"]}}, {"id": 64200, "method_name": "availableSpaceForManeuverSlot", "class_name": "ShipDesign", "params": [], "throws": null, "modifiers": ["public"], "return_type": "float", "snippet": "    public float availableSpaceForManeuverSlot() { return availableSpace() + maneuver().space(this); }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/ships/ShipDesign.java", "stars": "74", "class_props": {"extends": "Design", "implements": null, "modifiers": ["final", "public"]}}, {"id": 64201, "method_name": "availableSpaceForWeaponSlot", "class_name": "ShipDesign", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "float", "snippet": "    public float availableSpaceForWeaponSlot(int i)  { return availableSpace() + (wpnCount(i) * weapon(i).space(this)); }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/ships/ShipDesign.java", "stars": "74", "class_props": {"extends": "Design", "implements": null, "modifiers": ["final", "public"]}}, {"id": 64202, "method_name": "availableSpaceForSpecialSlot", "class_name": "ShipDesign", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "float", "snippet": "    public float availableSpaceForSpecialSlot(int i) { return availableSpace() + special(i).space(this); }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/ships/ShipDesign.java", "stars": "74", "class_props": {"extends": "Design", "implements": null, "modifiers": ["final", "public"]}}, {"id": 64203, "method_name": "availableSpecialsForSlot", "class_name": "ShipDesign", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "List<ShipSpecial>", "snippet": "    public List<ShipSpecial> availableSpecialsForSlot(int slot) {\n        List<ShipSpecial> knownSpecials = lab().specials();\n        List<ShipSpecial> allowedSpecials = new ArrayList<>();\n        allowedSpecials.addAll(knownSpecials);\n        \n        for (int i=0;i<maxSpecials();i++) {\n            ShipSpecial slotSpecial = special(i);\n            if ((i != slot) && !slotSpecial.isNone()) {\n                // remove any specials of the same typet that are already in other slots\n                for (ShipSpecial sp: knownSpecials) {\n                    if (sp.designGroup().equals(slotSpecial.designGroup()))\n                        allowedSpecials.remove(sp);\n                }\n            }\n        }\n        return allowedSpecials;\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/ships/ShipDesign.java", "stars": "74", "class_props": {"extends": "Design", "implements": null, "modifiers": ["final", "public"]}}, {"id": 64204, "method_name": "availableManeuvers", "class_name": "ShipDesign", "params": [], "throws": null, "modifiers": ["public"], "return_type": "List<ShipManeuver>", "snippet": "    public List<ShipManeuver> availableManeuvers() {\n        int maxLevel = engine().tech().level();\n        List<ShipManeuver> maneuvers = new ArrayList<>();\n        for (ShipManeuver manv: lab().maneuvers()) {\n            if (manv.tech().level() <= maxLevel)\n                maneuvers.add(manv);\n        }\n        return maneuvers;\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/ships/ShipDesign.java", "stars": "74", "class_props": {"extends": "Design", "implements": null, "modifiers": ["final", "public"]}}, {"id": 64205, "method_name": "changeIcon", "class_name": "ShipDesign", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void changeIcon()  { iconKey(lab().nextAvailableIconKey(size(), iconKey));  }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/ships/ShipDesign.java", "stars": "74", "class_props": {"extends": "Design", "implements": null, "modifiers": ["final", "public"]}}, {"id": 64206, "method_name": "changeSize", "class_name": "ShipDesign", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void changeSize(int newSize) {\n        size(newSize);\n        iconKey(lab().nextAvailableIconKey(size(), null));\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/ships/ShipDesign.java", "stars": "74", "class_props": {"extends": "Design", "implements": null, "modifiers": ["final", "public"]}}, {"id": 64207, "method_name": "setSmallestSize", "class_name": "ShipDesign", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setSmallestSize() {\n        for (int i=SMALL;i<=HUGE;i++) {\n            changeSize(i);\n            if (availableSpace() >= 0)\n                return;\n        }\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/ships/ShipDesign.java", "stars": "74", "class_props": {"extends": "Design", "implements": null, "modifiers": ["final", "public"]}}, {"id": 64208, "method_name": "weaponMax", "class_name": "ShipDesign", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int weaponMax(int i) { return (int)Math.max(0, weapon(i).max(this, i));  }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/ships/ShipDesign.java", "stars": "74", "class_props": {"extends": "Design", "implements": null, "modifiers": ["final", "public"]}}, {"id": 64209, "method_name": "baseHits", "class_name": "ShipDesign", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int baseHits() {\n        switch(size()) {\n            case SMALL  : return 3;\n            case MEDIUM : return 18;\n            case LARGE  : return 100;\n            case HUGE   : return 600;\n            default     : return 0;\n        }\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/ships/ShipDesign.java", "stars": "74", "class_props": {"extends": "Design", "implements": null, "modifiers": ["final", "public"]}}, {"id": 64210, "method_name": "baseCost", "class_name": "ShipDesign", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int baseCost() {\n        switch(size()) {\n            case SMALL  : return 6;\n            case MEDIUM : return 36;\n            case LARGE  : return 200;\n            case HUGE   : return 1200;\n            default     : return 0;\n        }\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/ships/ShipDesign.java", "stars": "74", "class_props": {"extends": "Design", "implements": null, "modifiers": ["final", "public"]}}, {"id": 64211, "method_name": "baseMissileDefense", "class_name": "ShipDesign", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int baseMissileDefense() {\n        switch(size()) {\n            case SMALL  : return 2;\n            case MEDIUM : return 1;\n            case LARGE  : return 0;\n            case HUGE   : return -1;\n            default     : return 0;\n        }\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/ships/ShipDesign.java", "stars": "74", "class_props": {"extends": "Design", "implements": null, "modifiers": ["final", "public"]}}, {"id": 64212, "method_name": "hits", "class_name": "ShipDesign", "params": [], "throws": null, "modifiers": ["public"], "return_type": "float", "snippet": "    public float hits()        { return armor().hits(this); }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/ships/ShipDesign.java", "stars": "74", "class_props": {"extends": "Design", "implements": null, "modifiers": ["final", "public"]}}, {"id": 64213, "method_name": "initiative", "class_name": "ShipDesign", "params": [], "throws": null, "modifiers": ["public"], "return_type": "float", "snippet": "    public float initiative() {\n        float lvl = computer().level() + maneuverability();\n        for (ShipSpecial spec: special)\n            lvl += spec.initiativeBonus();\n        return lvl;\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/ships/ShipDesign.java", "stars": "74", "class_props": {"extends": "Design", "implements": null, "modifiers": ["final", "public"]}}, {"id": 64214, "method_name": "attackLevel", "class_name": "ShipDesign", "params": [], "throws": null, "modifiers": ["public"], "return_type": "float", "snippet": "    public float attackLevel() {\n        int lvl = computer().level();\n        for (ShipSpecial spec: special)\n            lvl += spec.attackBonus();\n        return lvl;\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/ships/ShipDesign.java", "stars": "74", "class_props": {"extends": "Design", "implements": null, "modifiers": ["final", "public"]}}, {"id": 64215, "method_name": "shieldLevel", "class_name": "ShipDesign", "params": [], "throws": null, "modifiers": ["public"], "return_type": "float", "snippet": "    public float shieldLevel() { return shield().level(); }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/ships/ShipDesign.java", "stars": "74", "class_props": {"extends": "Design", "implements": null, "modifiers": ["final", "public"]}}, {"id": 64216, "method_name": "combatSpeed", "class_name": "ShipDesign", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int combatSpeed() {\n        int speed = maneuver().combatSpeed();\n        for (int i=0;i<maxSpecials();i++)\n            speed += special(i).speedBonus();\n        return max(speed,1);\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/ships/ShipDesign.java", "stars": "74", "class_props": {"extends": "Design", "implements": null, "modifiers": ["final", "public"]}}, {"id": 64217, "method_name": "maneuverability", "class_name": "ShipDesign", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int maneuverability() {\n        int speed = baseMissileDefense() + maneuver().level();\n        for (int i=0;i<maxSpecials();i++)\n            speed += special(i).speedBonus();\n        // always guarantee a minimum design speed of 1\n        return max(1, speed);\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/ships/ShipDesign.java", "stars": "74", "class_props": {"extends": "Design", "implements": null, "modifiers": ["final", "public"]}}, {"id": 64218, "method_name": "weaponRange", "class_name": "ShipDesign", "params": ["ShipComponent"], "throws": null, "modifiers": ["public"], "return_type": "float", "snippet": "    public float weaponRange(ShipComponent c) {\n        if (!c.isBeamWeapon())\n            return c.range();\n        float rng = c.range();\n        for (int j=0;j<maxSpecials();j++)\n            rng += special(j).beamRangeBonus();\n        return rng;\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/ships/ShipDesign.java", "stars": "74", "class_props": {"extends": "Design", "implements": null, "modifiers": ["final", "public"]}}, {"id": 64219, "method_name": "targetShieldMod", "class_name": "ShipDesign", "params": ["ShipComponent"], "throws": null, "modifiers": ["public"], "return_type": "float", "snippet": "    public float targetShieldMod(ShipComponent c) {\n        float shieldMod = 1.0f;\n        if (c.isBeamWeapon()) {\n            for (int i = 0; i < maxSpecials(); i++)\n                shieldMod *= special(i).beamShieldMod();\n        }\n        return shieldMod;\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/ships/ShipDesign.java", "stars": "74", "class_props": {"extends": "Design", "implements": null, "modifiers": ["final", "public"]}}, {"id": 64220, "method_name": "moveRange", "class_name": "ShipDesign", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int moveRange() { return max(1, combatSpeed()); }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/ships/ShipDesign.java", "stars": "74", "class_props": {"extends": "Design", "implements": null, "modifiers": ["final", "public"]}}, {"id": 64221, "method_name": "repulsorRange", "class_name": "ShipDesign", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int repulsorRange() {\n        int r = 0;\n        for (int i=0;i<maxSpecials();i++)\n            r = max(r, special(i).repulsorRange());\n        return r;\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/ships/ShipDesign.java", "stars": "74", "class_props": {"extends": "Design", "implements": null, "modifiers": ["final", "public"]}}, {"id": 64222, "method_name": "missileInterceptPct", "class_name": "ShipDesign", "params": ["ShipWeaponMissileType"], "throws": null, "modifiers": ["public"], "return_type": "float", "snippet": "    public float missileInterceptPct(ShipWeaponMissileType wpn) {\n        float maxIntercept = 0;\n        for (int i=0;i<maxSpecials();i++)\n            maxIntercept = max(maxIntercept, special(i).missileIntercept(wpn));\n        return maxIntercept;\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/ships/ShipDesign.java", "stars": "74", "class_props": {"extends": "Design", "implements": null, "modifiers": ["final", "public"]}}, {"id": 64223, "method_name": "missileDefense", "class_name": "ShipDesign", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int missileDefense() {\n        int defense = baseMissileDefense() + ecm().level() + maneuver().level();\n        for (int i=0;i<maxSpecials();i++)\n            defense += special(i).defenseBonus();\n        return defense;\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/ships/ShipDesign.java", "stars": "74", "class_props": {"extends": "Design", "implements": null, "modifiers": ["final", "public"]}}, {"id": 64224, "method_name": "beamDefense", "class_name": "ShipDesign", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int beamDefense() {\n        int defense = baseMissileDefense() + maneuver().level();\n        for (int i=0;i<maxSpecials();i++)\n            defense += special(i).defenseBonus();\n        return defense;\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/ships/ShipDesign.java", "stars": "74", "class_props": {"extends": "Design", "implements": null, "modifiers": ["final", "public"]}}, {"id": 64225, "method_name": "allowsCloaking", "class_name": "ShipDesign", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean allowsCloaking() {\n        for (int i=0;i<maxSpecials();i++) {\n            if (special(i).allowsCloaking())\n                return true;\n        }\n        return false;\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/ships/ShipDesign.java", "stars": "74", "class_props": {"extends": "Design", "implements": null, "modifiers": ["final", "public"]}}, {"id": 64226, "method_name": "allowsTeleporting", "class_name": "ShipDesign", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean allowsTeleporting() {\n        for (int i=0;i<maxSpecials();i++) {\n            if (special(i).allowsTeleporting())\n                return true;\n        }\n        return false;\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/ships/ShipDesign.java", "stars": "74", "class_props": {"extends": "Design", "implements": null, "modifiers": ["final", "public"]}}, {"id": 64227, "method_name": "blackHoleDef", "class_name": "ShipDesign", "params": [], "throws": null, "modifiers": ["public"], "return_type": "float", "snippet": "    public float blackHoleDef() {\n        float def = 0;\n        for (int i=0;i<maxSpecials();i++)\n            def = max(def,special(i).blackHoleDef());\n        return def;\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/ships/ShipDesign.java", "stars": "74", "class_props": {"extends": "Design", "implements": null, "modifiers": ["final", "public"]}}, {"id": 64228, "method_name": "allowsScanning", "class_name": "ShipDesign", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean allowsScanning() {\n        for (int i=0;i<maxSpecials();i++) {\n            if (special(i).allowsScanning())\n                return true;\n        }\n        return false;\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/ships/ShipDesign.java", "stars": "74", "class_props": {"extends": "Design", "implements": null, "modifiers": ["final", "public"]}}, {"id": 64229, "method_name": "range", "class_name": "ShipDesign", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int range() {\n        if (isExtendedRange())\n            return (int) empire().tech().scoutRange();\n        else\n            return (int) empire().tech().shipRange();\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/ships/ShipDesign.java", "stars": "74", "class_props": {"extends": "Design", "implements": null, "modifiers": ["final", "public"]}}, {"id": 64230, "method_name": "warpSpeed", "class_name": "ShipDesign", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int warpSpeed() {\n        return engine().warp();\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/ships/ShipDesign.java", "stars": "74", "class_props": {"extends": "Design", "implements": null, "modifiers": ["final", "public"]}}, {"id": 64231, "method_name": "hasColonySpecial", "class_name": "ShipDesign", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean hasColonySpecial() { return colonySpecial() != null; }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/ships/ShipDesign.java", "stars": "74", "class_props": {"extends": "Design", "implements": null, "modifiers": ["final", "public"]}}, {"id": 64232, "method_name": "missPct", "class_name": "ShipDesign", "params": [], "throws": null, "modifiers": ["public"], "return_type": "float", "snippet": "    public float missPct() {\n        float pct = 0.0f;\n        for (ShipSpecial spec: special)\n            pct = max(pct, spec.missPct());\n        return pct;\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/ships/ShipDesign.java", "stars": "74", "class_props": {"extends": "Design", "implements": null, "modifiers": ["final", "public"]}}, {"id": 64233, "method_name": "colonySpecial", "class_name": "ShipDesign", "params": [], "throws": null, "modifiers": ["public"], "return_type": "ShipSpecialColony", "snippet": "    public ShipSpecialColony colonySpecial() {\n        for (int i=0; i<maxSpecials(); i++) {\n            if (special(i).isColonySpecial())\n                return (ShipSpecialColony) special(i);\n        }\n        return null;\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/ships/ShipDesign.java", "stars": "74", "class_props": {"extends": "Design", "implements": null, "modifiers": ["final", "public"]}}, {"id": 64234, "method_name": "canUpgradeBattleComputer", "class_name": "ShipDesign", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean canUpgradeBattleComputer() {\n        return empire().tech().topBattleComputerTech().level > computer().tech().level();\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/ships/ShipDesign.java", "stars": "74", "class_props": {"extends": "Design", "implements": null, "modifiers": ["final", "public"]}}, {"id": 64235, "method_name": "canUpgradeDeflectorShield", "class_name": "ShipDesign", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean canUpgradeDeflectorShield() {\n        return empire().tech().topDeflectorShieldTech().level > shield().tech().level();\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/ships/ShipDesign.java", "stars": "74", "class_props": {"extends": "Design", "implements": null, "modifiers": ["final", "public"]}}, {"id": 64236, "method_name": "canUpgradeEcmJammer", "class_name": "ShipDesign", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean canUpgradeEcmJammer() {\n        return empire().tech().topECMJammerTech().level > ecm().tech().level();\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/ships/ShipDesign.java", "stars": "74", "class_props": {"extends": "Design", "implements": null, "modifiers": ["final", "public"]}}, {"id": 64237, "method_name": "canUpgradeHullArmor", "class_name": "ShipDesign", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean canUpgradeHullArmor() {\n        return !armor().reinforced() || empire().tech().topArmorTech().level > armor().tech().level();\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/ships/ShipDesign.java", "stars": "74", "class_props": {"extends": "Design", "implements": null, "modifiers": ["final", "public"]}}, {"id": 64238, "method_name": "canUpgradeEngine", "class_name": "ShipDesign", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean canUpgradeEngine() {\n        return empire().tech().topEngineWarpTech().level > engine().tech().level();\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/ships/ShipDesign.java", "stars": "74", "class_props": {"extends": "Design", "implements": null, "modifiers": ["final", "public"]}}, {"id": 64239, "method_name": "canUpgradeManeuver", "class_name": "ShipDesign", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean canUpgradeManeuver() {\n        return empire().tech().topEngineWarpTech().level > maneuver().tech().level();\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/ships/ShipDesign.java", "stars": "74", "class_props": {"extends": "Design", "implements": null, "modifiers": ["final", "public"]}}, {"id": 64240, "method_name": "unused", "class_name": "ShipDesign", "params": ["int", "float"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean unused(int shipCount, float minUsePct)       {\n        // design is considered \"unused\" if there are some constructed\n        // but less than 20% are being allocated by the FleetCommander\n        return (shipCount > 0) && (usedCount < (shipCount * minUsePct));\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/ships/ShipDesign.java", "stars": "74", "class_props": {"extends": "Design", "implements": null, "modifiers": ["final", "public"]}}, {"id": 64241, "method_name": "checkForUse", "class_name": "ShipDesign", "params": ["int", "float"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void checkForUse(int shipCount, float minUsePct) {\n            //unused method\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/ships/ShipDesign.java", "stars": "74", "class_props": {"extends": "Design", "implements": null, "modifiers": ["final", "public"]}}, {"id": 64242, "method_name": "preNextTurn", "class_name": "ShipDesign", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void preNextTurn() {\n        resetBuildCount();\n        usedCount = 0;\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/ships/ShipDesign.java", "stars": "74", "class_props": {"extends": "Design", "implements": null, "modifiers": ["final", "public"]}}, {"id": 64243, "method_name": "setNonNullParameter", "class_name": "DoubleTypeHandler", "params": ["PreparedStatement", "int", "Double", "JdbcType"], "throws": ["SQLException"], "modifiers": ["public"], "return_type": "void", "snippet": "  public void setNonNullParameter(PreparedStatement ps, int i, Double parameter, JdbcType jdbcType)\n      throws SQLException {\n    ps.setDouble(i, parameter);\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/type/DoubleTypeHandler.java", "stars": "15", "class_props": {"extends": "BaseTypeHandler", "implements": null, "modifiers": ["public"]}}, {"id": 64244, "method_name": "getNullableResult", "class_name": "DoubleTypeHandler", "params": ["ResultSet", "String"], "throws": ["SQLException"], "modifiers": ["public"], "return_type": "Double", "snippet": "  public Double getNullableResult(ResultSet rs, String columnName)\n      throws SQLException {\n    double result = rs.getDouble(columnName);\n    return result == 0 && rs.wasNull() ? null : result;\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/type/DoubleTypeHandler.java", "stars": "15", "class_props": {"extends": "BaseTypeHandler", "implements": null, "modifiers": ["public"]}}, {"id": 64245, "method_name": "getNullableResult", "class_name": "DoubleTypeHandler", "params": ["ResultSet", "int"], "throws": ["SQLException"], "modifiers": ["public"], "return_type": "Double", "snippet": "  public Double getNullableResult(ResultSet rs, int columnIndex)\n      throws SQLException {\n    double result = rs.getDouble(columnIndex);\n    return result == 0 && rs.wasNull() ? null : result;\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/type/DoubleTypeHandler.java", "stars": "15", "class_props": {"extends": "BaseTypeHandler", "implements": null, "modifiers": ["public"]}}, {"id": 64246, "method_name": "getNullableResult", "class_name": "DoubleTypeHandler", "params": ["CallableStatement", "int"], "throws": ["SQLException"], "modifiers": ["public"], "return_type": "Double", "snippet": "  public Double getNullableResult(CallableStatement cs, int columnIndex)\n      throws SQLException {\n    double result = cs.getDouble(columnIndex);\n    return result == 0 && cs.wasNull() ? null : result;\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/type/DoubleTypeHandler.java", "stars": "15", "class_props": {"extends": "BaseTypeHandler", "implements": null, "modifiers": ["public"]}}, {"id": 64247, "method_name": "wxMpService", "class_name": "SecurityAutoConfiguration", "params": [], "throws": null, "modifiers": ["public"], "return_type": "WxMpService", "snippet": "    public WxMpService wxMpService() {\n        WxMpService wxMpService = new WxMpServiceImpl();\n        WxMpInMemoryConfigStorage wxMpConfigStorage = new WxMpInMemoryConfigStorage();\n        wxMpConfigStorage.setAppId(securityProperties.getWx().getAppId());\n        log.debug(\"mp appid: {}\", securityProperties.getWx().getAppId());\n        wxMpConfigStorage.setSecret(securityProperties.getWx().getAppSecret());\n        wxMpConfigStorage.setToken(securityProperties.getWx().getToken());\n        wxMpConfigStorage.setAesKey(securityProperties.getWx().getAesKey());\n        wxMpService.setWxMpConfigStorage(wxMpConfigStorage);\n        return wxMpService;\n    }", "url": "https://raw.githubusercontent.com/taoroot/taoiot/master/src/main/java/com/github/taoroot/taoiot/security/SecurityAutoConfiguration.java", "stars": "6", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 64248, "method_name": "alipayClient", "class_name": "SecurityAutoConfiguration", "params": [], "throws": null, "modifiers": ["public"], "return_type": "AlipayClient", "snippet": "    public AlipayClient alipayClient() {\n        return new DefaultAlipayClient(\n                \"https://openapi.alipay.com/gateway.do\",\n                securityProperties.getAli().getAppId(),\n                securityProperties.getAli().getPrivateKey(),\n                \"json\",\n                CharsetUtil.UTF_8,\n                securityProperties.getAli().getPublicKey(),\n                \"RSA2\"\n        );\n    }", "url": "https://raw.githubusercontent.com/taoroot/taoiot/master/src/main/java/com/github/taoroot/taoiot/security/SecurityAutoConfiguration.java", "stars": "6", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 64249, "method_name": "passwordEncoder", "class_name": "SecurityAutoConfiguration", "params": [], "throws": null, "modifiers": ["public"], "return_type": "PasswordEncoder", "snippet": "    public PasswordEncoder passwordEncoder() {\n        return new BCryptPasswordEncoder();\n    }", "url": "https://raw.githubusercontent.com/taoroot/taoiot/master/src/main/java/com/github/taoroot/taoiot/security/SecurityAutoConfiguration.java", "stars": "6", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 64250, "method_name": "initElements", "class_name": "ThatchSlabBlock", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void initElements() {\n\t\telements.blocks.add(() -> new CustomBlock());\n\t\telements.items\n\t\t\t\t.add(() -> new BlockItem(block, new Item.Properties().group(ItemGroup.BUILDING_BLOCKS)).setRegistryName(block.getRegistryName()));\n\t}", "url": "https://raw.githubusercontent.com/KarogathModdingStudios/Enhanced-Vanilla-1.15/master/src/main/java/com/karogath/enhancedvanilla/block/ThatchSlabBlock.java", "stars": "2", "class_props": {"extends": "EnhancedVanillaElements", "implements": null, "modifiers": ["public"]}}, {"id": 64251, "method_name": "getDrops", "class_name": "CustomBlock", "params": ["BlockState", "LootContext"], "throws": null, "modifiers": ["public"], "return_type": "List<ItemStack>", "snippet": "\t\tpublic List<ItemStack> getDrops(BlockState state, LootContext.Builder builder) {\n\t\t\tList<ItemStack> dropsOriginal = super.getDrops(state, builder);\n\t\t\tif (!dropsOriginal.isEmpty())\n\t\t\t\treturn dropsOriginal;\n\t\t\treturn Collections.singletonList(new ItemStack(this, state.get(TYPE) == SlabType.DOUBLE ? 2 : 1));\n\t\t}", "url": "https://raw.githubusercontent.com/KarogathModdingStudios/Enhanced-Vanilla-1.15/master/src/main/java/com/karogath/enhancedvanilla/block/ThatchSlabBlock.java", "stars": "2", "class_props": {"extends": "SlabBlock", "implements": null, "modifiers": ["public", "static"]}}, {"id": 64252, "method_name": "add", "class_name": "Executor", "params": ["Process"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void add(Process process) {\n        processes.add(process);\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgerp/plugin/blow/model/Executor.java", "stars": "12", "class_props": {"extends": "IdTitle", "implements": null, "modifiers": ["public"]}}, {"id": 64253, "method_name": "getParameter", "class_name": "ParamChangingEvent", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Parameter", "snippet": "\tpublic Parameter getParameter()\n\t{\n\t\treturn parameter;\n\t}", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/event/ParamChangingEvent.java", "stars": "12", "class_props": {"extends": "UserEvent", "implements": null, "modifiers": ["public"]}}, {"id": 64254, "method_name": "getObjectId", "class_name": "ParamChangingEvent", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "\tpublic int getObjectId()\n\t{\n\t\treturn objectId;\n\t}", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/event/ParamChangingEvent.java", "stars": "12", "class_props": {"extends": "UserEvent", "implements": null, "modifiers": ["public"]}}, {"id": 64255, "method_name": "getValue", "class_name": "ParamChangingEvent", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Object", "snippet": "\tpublic Object getValue()\n\t{\n\t\treturn value;\n\t}", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/event/ParamChangingEvent.java", "stars": "12", "class_props": {"extends": "UserEvent", "implements": null, "modifiers": ["public"]}}, {"id": 64256, "method_name": "operate", "class_name": "OperateBarrier", "params": ["String", "Supplier<R>"], "throws": null, "modifiers": ["public", "static"], "return_type": "R", "snippet": "    public static <R>R operate(String operateId, Supplier<R> operate){\n        Barrier barrier = barrierMap.computeIfAbsent(operateId, key -> new Barrier(operateId));\n        boolean signal = inQueue(barrier);\n        try{\n            //Execute in async\n            return operate.get();\n        }finally{\n            deQueue(barrier, signal);\n\n        }\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/core/src/main/java/com/webank/wedatasphere/exchangis/executor/util/OperateBarrier.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 64257, "method_name": "inQueue", "class_name": "OperateBarrier", "params": ["Barrier"], "throws": null, "modifiers": ["static", "private"], "return_type": "boolean", "snippet": "    private static boolean inQueue(Barrier barrier){\n        boolean signal = true;\n        barrier.barrierLock.lock();\n        try {\n            if(barrier.enQueueCount.get() > 0){\n                //Just wait in certain time\n                signal = barrier.enQueueCondition.await(BARRIER_EXIST_IN_SECONDS, TimeUnit.SECONDS);\n            }\n            barrier.enQueueCount.incrementAndGet();\n        } catch (InterruptedException e) {\n            Thread.currentThread().interrupt();\n            //Ignore\n        } finally{\n            barrier.barrierLock.unlock();\n        }\n        return signal;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/core/src/main/java/com/webank/wedatasphere/exchangis/executor/util/OperateBarrier.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 64258, "method_name": "deQueue", "class_name": "OperateBarrier", "params": ["Barrier", "boolean"], "throws": null, "modifiers": ["static", "private"], "return_type": "void", "snippet": "    private static void  deQueue(Barrier barrier, boolean signal){\n        barrier.barrierLock.lock();\n        try{\n            if(barrier.enQueueCount.get() > 0 ){\n                if(signal) {\n                    //Just signal one thread\n                    barrier.enQueueCondition.signal();\n                }\n                barrier.enQueueCount.decrementAndGet();\n            }\n            if(!barrier.barrierLock.hasWaiters(barrier.enQueueCondition)) {\n                barrierMap.remove(barrier.id);\n            }\n        }finally{\n            barrier.barrierLock.unlock();\n        }\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/core/src/main/java/com/webank/wedatasphere/exchangis/executor/util/OperateBarrier.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 64259, "method_name": "success", "class_name": "FileResult", "params": ["T"], "throws": null, "modifiers": ["public", "static"], "return_type": "FileResult<T>", "snippet": "    public static <T extends NewFileIO> FileResult<T> success(T io) {\n        if (io == null) {\n            throw new NullPointerException(\"io is null\");\n        }\n\n        return new FileResult<>(io, 0);\n    }", "url": "https://raw.githubusercontent.com/wmm1996528/unidbg_douyin10/master/src/main/java/com/github/unidbg/file/FileResult.java", "stars": "16", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 64260, "method_name": "failed", "class_name": "FileResult", "params": ["int"], "throws": null, "modifiers": ["public", "static"], "return_type": "FileResult<T>", "snippet": "    public static <T extends NewFileIO> FileResult<T> failed(int errno) {\n        if (errno == 0) {\n            throw new IllegalArgumentException(\"errno=\" + errno);\n        }\n\n        return new FileResult<>(null, errno);\n    }", "url": "https://raw.githubusercontent.com/wmm1996528/unidbg_douyin10/master/src/main/java/com/github/unidbg/file/FileResult.java", "stars": "16", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 64261, "method_name": "fallback", "class_name": "FileResult", "params": ["T"], "throws": null, "modifiers": ["public", "static"], "return_type": "FileResult<T>", "snippet": "    public static <T extends NewFileIO> FileResult<T> fallback(T io) {\n        if (io == null) {\n            throw new NullPointerException(\"io is null\");\n        }\n\n        return new FileResult<>(io, FALLBACK_ERRNO);\n    }", "url": "https://raw.githubusercontent.com/wmm1996528/unidbg_douyin10/master/src/main/java/com/github/unidbg/file/FileResult.java", "stars": "16", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 64262, "method_name": "isSuccess", "class_name": "FileResult", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean isSuccess() {\n        return io != null && errno == 0;\n    }", "url": "https://raw.githubusercontent.com/wmm1996528/unidbg_douyin10/master/src/main/java/com/github/unidbg/file/FileResult.java", "stars": "16", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 64263, "method_name": "isFallback", "class_name": "FileResult", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean isFallback() {\n        return io != null && errno == FALLBACK_ERRNO;\n    }", "url": "https://raw.githubusercontent.com/wmm1996528/unidbg_douyin10/master/src/main/java/com/github/unidbg/file/FileResult.java", "stars": "16", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 64264, "method_name": "setAdapter", "class_name": "WrapRecyclerView", "params": ["Adapter"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setAdapter(Adapter adapter) {\n        mRealAdapter = adapter;\n        // \u5077\u6881\u6362\u67f1\n        mWrapAdapter.setRealAdapter(mRealAdapter);\n        super.setAdapter(mWrapAdapter);\n    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/widget/src/main/java/com/hjq/widget/layout/WrapRecyclerView.java", "stars": "1", "class_props": {"extends": "RecyclerView", "implements": null, "modifiers": ["final", "public"]}}, {"id": 64265, "method_name": "getAdapter", "class_name": "WrapRecyclerView", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Adapter", "snippet": "    public Adapter getAdapter() {\n        return mRealAdapter;\n    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/widget/src/main/java/com/hjq/widget/layout/WrapRecyclerView.java", "stars": "1", "class_props": {"extends": "RecyclerView", "implements": null, "modifiers": ["final", "public"]}}, {"id": 64266, "method_name": "addHeaderView", "class_name": "WrapRecyclerView", "params": ["View"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void addHeaderView(View view) {\n        mWrapAdapter.addHeaderView(view);\n    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/widget/src/main/java/com/hjq/widget/layout/WrapRecyclerView.java", "stars": "1", "class_props": {"extends": "RecyclerView", "implements": null, "modifiers": ["final", "public"]}}, {"id": 64267, "method_name": "addHeaderView", "class_name": "WrapRecyclerView", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "V", "snippet": "    public <V extends View> V addHeaderView(@LayoutRes int id) {\n        View headerView = LayoutInflater.from(getContext()).inflate(id, this, false);\n        addHeaderView(headerView);\n        return (V) headerView;\n    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/widget/src/main/java/com/hjq/widget/layout/WrapRecyclerView.java", "stars": "1", "class_props": {"extends": "RecyclerView", "implements": null, "modifiers": ["final", "public"]}}, {"id": 64268, "method_name": "removeHeaderView", "class_name": "WrapRecyclerView", "params": ["View"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void removeHeaderView(View view) {\n        mWrapAdapter.removeHeaderView(view);\n    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/widget/src/main/java/com/hjq/widget/layout/WrapRecyclerView.java", "stars": "1", "class_props": {"extends": "RecyclerView", "implements": null, "modifiers": ["final", "public"]}}, {"id": 64269, "method_name": "addFooterView", "class_name": "WrapRecyclerView", "params": ["View"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void addFooterView(View view) {\n        mWrapAdapter.addFooterView(view);\n    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/widget/src/main/java/com/hjq/widget/layout/WrapRecyclerView.java", "stars": "1", "class_props": {"extends": "RecyclerView", "implements": null, "modifiers": ["final", "public"]}}, {"id": 64270, "method_name": "addFooterView", "class_name": "WrapRecyclerView", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "V", "snippet": "    public <V extends View> V addFooterView(@LayoutRes int id) {\n        View footerView = LayoutInflater.from(getContext()).inflate(id, this, false);\n        addFooterView(footerView);\n        return (V) footerView;\n    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/widget/src/main/java/com/hjq/widget/layout/WrapRecyclerView.java", "stars": "1", "class_props": {"extends": "RecyclerView", "implements": null, "modifiers": ["final", "public"]}}, {"id": 64271, "method_name": "removeFooterView", "class_name": "WrapRecyclerView", "params": ["View"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void removeFooterView(View view) {\n        mWrapAdapter.removeFooterView(view);\n    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/widget/src/main/java/com/hjq/widget/layout/WrapRecyclerView.java", "stars": "1", "class_props": {"extends": "RecyclerView", "implements": null, "modifiers": ["final", "public"]}}, {"id": 64272, "method_name": "getHeaderViewsCount", "class_name": "WrapRecyclerView", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getHeaderViewsCount() {\n        return mWrapAdapter.getHeaderViewsCount();\n    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/widget/src/main/java/com/hjq/widget/layout/WrapRecyclerView.java", "stars": "1", "class_props": {"extends": "RecyclerView", "implements": null, "modifiers": ["final", "public"]}}, {"id": 64273, "method_name": "getFooterViewsCount", "class_name": "WrapRecyclerView", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getFooterViewsCount() {\n        return mWrapAdapter.getFooterViewsCount();\n    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/widget/src/main/java/com/hjq/widget/layout/WrapRecyclerView.java", "stars": "1", "class_props": {"extends": "RecyclerView", "implements": null, "modifiers": ["final", "public"]}}, {"id": 64274, "method_name": "getHeaderViews", "class_name": "WrapRecyclerView", "params": [], "throws": null, "modifiers": ["public"], "return_type": "List<View>", "snippet": "    public List<View> getHeaderViews() {\n        return mWrapAdapter.getHeaderViews();\n    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/widget/src/main/java/com/hjq/widget/layout/WrapRecyclerView.java", "stars": "1", "class_props": {"extends": "RecyclerView", "implements": null, "modifiers": ["final", "public"]}}, {"id": 64275, "method_name": "getFooterViews", "class_name": "WrapRecyclerView", "params": [], "throws": null, "modifiers": ["public"], "return_type": "List<View>", "snippet": "    public List<View> getFooterViews() {\n        return mWrapAdapter.getFooterViews();\n    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/widget/src/main/java/com/hjq/widget/layout/WrapRecyclerView.java", "stars": "1", "class_props": {"extends": "RecyclerView", "implements": null, "modifiers": ["final", "public"]}}, {"id": 64276, "method_name": "refreshHeaderFooterViews", "class_name": "WrapRecyclerView", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void refreshHeaderFooterViews() {\n        mWrapAdapter.notifyDataSetChanged();\n    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/widget/src/main/java/com/hjq/widget/layout/WrapRecyclerView.java", "stars": "1", "class_props": {"extends": "RecyclerView", "implements": null, "modifiers": ["final", "public"]}}, {"id": 64277, "method_name": "setRealAdapter", "class_name": "WrapRecyclerAdapter", "params": ["RecyclerView"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "        private void setRealAdapter(RecyclerView.Adapter adapter) {\n            if (mRealAdapter != adapter) {\n\n                if (mRealAdapter != null) {\n                    if (mObserver != null) {\n                        // \u4e3a\u539f\u6709\u7684RecyclerAdapter\u79fb\u9664\u6570\u636e\u76d1\u542c\u5bf9\u8c61\n                        mRealAdapter.unregisterAdapterDataObserver(mObserver);\n                    }\n                }\n\n                mRealAdapter = adapter;\n                if (mRealAdapter != null) {\n                    if (mObserver == null) {\n                        mObserver = new WrapAdapterDataObserver(this);\n                    }\n                    // \u4e3a\u539f\u6709\u7684RecyclerAdapter\u6dfb\u52a0\u6570\u636e\u76d1\u542c\u5bf9\u8c61\n                    mRealAdapter.registerAdapterDataObserver(mObserver);\n                    // \u9002\u914d\u5668\u4e0d\u662f\u7b2c\u4e00\u6b21\u88ab\u7ed1\u5b9a\u5230RecyclerView\u4e0a\u9700\u8981\u53d1\u9001\u901a\u77e5\uff0c\u56e0\u4e3a\u7b2c\u4e00\u6b21\u7ed1\u5b9a\u4f1a\u81ea\u52a8\u901a\u77e5\n                    if (mRecyclerView != null) {\n                        notifyDataSetChanged();\n                    }\n                }\n            }\n        }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/widget/src/main/java/com/hjq/widget/layout/WrapRecyclerView.java", "stars": "1", "class_props": {"extends": "RecyclerView", "implements": null, "modifiers": ["final", "static", "private"]}}, {"id": 64278, "method_name": "getItemCount", "class_name": "WrapRecyclerAdapter", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "        public int getItemCount() {\n            if (mRealAdapter != null) {\n                return getHeaderViewsCount() + mRealAdapter.getItemCount() + getFooterViewsCount();\n            }else {\n                return getHeaderViewsCount() + getFooterViewsCount();\n            }\n        }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/widget/src/main/java/com/hjq/widget/layout/WrapRecyclerView.java", "stars": "1", "class_props": {"extends": "RecyclerView", "implements": null, "modifiers": ["final", "static", "private"]}}, {"id": 64279, "method_name": "getItemViewType", "class_name": "WrapRecyclerAdapter", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "        public int getItemViewType(int position) {\n            mCurrentPosition = position;\n            // \u83b7\u53d6\u5934\u90e8\u5e03\u5c40\u7684\u603b\u6570\n            int headerCount = getHeaderViewsCount();\n            // \u83b7\u53d6\u539f\u6709\u9002\u914d\u5668\u7684\u603b\u6570\n            int adapterCount = mRealAdapter != null ? mRealAdapter.getItemCount() : 0;\n            // \u83b7\u53d6\u5728\u539f\u6709\u9002\u914d\u5668\u4e0a\u7684\u4f4d\u7f6e\n            int adjPosition = position - headerCount;\n            if (position < headerCount) {\n                return HEADER_VIEW_TYPE;\n            }else if (adjPosition < adapterCount) {\n                return mRealAdapter.getItemViewType(adjPosition);\n            }else {\n                return FOOTER_VIEW_TYPE;\n            }\n        }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/widget/src/main/java/com/hjq/widget/layout/WrapRecyclerView.java", "stars": "1", "class_props": {"extends": "RecyclerView", "implements": null, "modifiers": ["final", "static", "private"]}}, {"id": 64280, "method_name": "getPosition", "class_name": "WrapRecyclerAdapter", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "        public int getPosition() {\n            return mCurrentPosition;\n        }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/widget/src/main/java/com/hjq/widget/layout/WrapRecyclerView.java", "stars": "1", "class_props": {"extends": "RecyclerView", "implements": null, "modifiers": ["final", "static", "private"]}}, {"id": 64281, "method_name": "onCreateViewHolder", "class_name": "WrapRecyclerAdapter", "params": ["ViewGroup", "int"], "throws": null, "modifiers": ["public"], "return_type": "RecyclerView", "snippet": "        public RecyclerView.ViewHolder onCreateViewHolder(@NonNull ViewGroup parent, int viewType) {\n            switch (viewType) {\n                case HEADER_VIEW_TYPE:\n                    return newWrapViewHolder(mHeaderViews.get(getPosition()));\n                case FOOTER_VIEW_TYPE:\n                    return newWrapViewHolder(mFooterViews.get(getPosition() - getHeaderViewsCount() - (mRealAdapter != null ? mRealAdapter.getItemCount() : 0)));\n                default:\n                    int itemViewType = mRealAdapter.getItemViewType(getPosition() - getHeaderViewsCount());\n                    if (itemViewType == HEADER_VIEW_TYPE || itemViewType == FOOTER_VIEW_TYPE) {\n                        throw new IllegalStateException(\"Please do not use this type as itemType\");\n                    }\n                    if (mRealAdapter != null) {\n                        return mRealAdapter.onCreateViewHolder(parent, itemViewType);\n                    } else {\n                        return null;\n                    }\n            }\n        }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/widget/src/main/java/com/hjq/widget/layout/WrapRecyclerView.java", "stars": "1", "class_props": {"extends": "RecyclerView", "implements": null, "modifiers": ["final", "static", "private"]}}, {"id": 64282, "method_name": "onBindViewHolder", "class_name": "WrapRecyclerAdapter", "params": ["RecyclerView", "int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "        public void onBindViewHolder(@NonNull RecyclerView.ViewHolder holder, int position) {\n            int viewType = getItemViewType(position);\n            switch (viewType) {\n                case HEADER_VIEW_TYPE:\n                case FOOTER_VIEW_TYPE:\n                    break;\n                default:\n                    if (mRealAdapter != null) {\n                        mRealAdapter.onBindViewHolder(holder, getPosition() - getHeaderViewsCount());\n                    }\n                    break;\n            }\n        }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/widget/src/main/java/com/hjq/widget/layout/WrapRecyclerView.java", "stars": "1", "class_props": {"extends": "RecyclerView", "implements": null, "modifiers": ["final", "static", "private"]}}, {"id": 64283, "method_name": "newWrapViewHolder", "class_name": "WrapRecyclerAdapter", "params": ["View"], "throws": null, "modifiers": ["private"], "return_type": "WrapViewHolder", "snippet": "        private WrapViewHolder newWrapViewHolder(View view) {\n            ViewParent parent =  view.getParent();\n            if (parent instanceof ViewGroup) {\n                // IllegalStateException: ViewHolder views must not be attached when created.\n                // Ensure that you are not passing 'true' to the attachToRoot parameter of LayoutInflater.inflate(..., boolean attachToRoot)\n                ((ViewGroup) parent).removeView(view);\n            }\n            return new WrapViewHolder(view);\n        }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/widget/src/main/java/com/hjq/widget/layout/WrapRecyclerView.java", "stars": "1", "class_props": {"extends": "RecyclerView", "implements": null, "modifiers": ["final", "static", "private"]}}, {"id": 64284, "method_name": "getItemId", "class_name": "WrapRecyclerAdapter", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "long", "snippet": "        public long getItemId(int position) {\n            if (mRealAdapter != null && position > getHeaderViewsCount() - 1 && position < getHeaderViewsCount() + mRealAdapter.getItemCount()) {\n                return mRealAdapter.getItemId(position - getHeaderViewsCount());\n            } else {\n                return super.getItemId(position);\n            }\n        }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/widget/src/main/java/com/hjq/widget/layout/WrapRecyclerView.java", "stars": "1", "class_props": {"extends": "RecyclerView", "implements": null, "modifiers": ["final", "static", "private"]}}, {"id": 64285, "method_name": "onAttachedToRecyclerView", "class_name": "WrapRecyclerAdapter", "params": ["RecyclerView"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "        public void onAttachedToRecyclerView(@NonNull RecyclerView recyclerView) {\n            mRecyclerView = recyclerView;\n            if (mRealAdapter != null) {\n                mRealAdapter.onAttachedToRecyclerView(recyclerView);\n            }\n        }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/widget/src/main/java/com/hjq/widget/layout/WrapRecyclerView.java", "stars": "1", "class_props": {"extends": "RecyclerView", "implements": null, "modifiers": ["final", "static", "private"]}}, {"id": 64286, "method_name": "onDetachedFromRecyclerView", "class_name": "WrapRecyclerAdapter", "params": ["RecyclerView"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "        public void onDetachedFromRecyclerView(@NonNull RecyclerView recyclerView) {\n            mRecyclerView = null;\n            if (mRealAdapter != null) {\n                mRealAdapter.onDetachedFromRecyclerView(recyclerView);\n            }\n        }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/widget/src/main/java/com/hjq/widget/layout/WrapRecyclerView.java", "stars": "1", "class_props": {"extends": "RecyclerView", "implements": null, "modifiers": ["final", "static", "private"]}}, {"id": 64287, "method_name": "onViewRecycled", "class_name": "WrapRecyclerAdapter", "params": ["ViewHolder"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "        public void onViewRecycled(@NonNull ViewHolder holder) {\n            if (holder instanceof WrapViewHolder) {\n                // \u9632\u6b62\u8fd9\u4e2a ViewHolder \u88ab RecyclerView \u62ff\u53bb\u590d\u7528\n                holder.setIsRecyclable(false);\n                return;\n            }\n            if (mRealAdapter != null) {\n                mRealAdapter.onViewRecycled(holder);\n            }\n        }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/widget/src/main/java/com/hjq/widget/layout/WrapRecyclerView.java", "stars": "1", "class_props": {"extends": "RecyclerView", "implements": null, "modifiers": ["final", "static", "private"]}}, {"id": 64288, "method_name": "onFailedToRecycleView", "class_name": "WrapRecyclerAdapter", "params": ["ViewHolder"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "        public boolean onFailedToRecycleView(@NonNull ViewHolder holder) {\n            if (mRealAdapter != null) {\n                return mRealAdapter.onFailedToRecycleView(holder);\n            }\n            return super.onFailedToRecycleView(holder);\n        }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/widget/src/main/java/com/hjq/widget/layout/WrapRecyclerView.java", "stars": "1", "class_props": {"extends": "RecyclerView", "implements": null, "modifiers": ["final", "static", "private"]}}, {"id": 64289, "method_name": "onViewAttachedToWindow", "class_name": "WrapRecyclerAdapter", "params": ["ViewHolder"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "        public void onViewAttachedToWindow(@NonNull ViewHolder holder) {\n            if (mRealAdapter != null) {\n                mRealAdapter.onViewAttachedToWindow(holder);\n            }\n        }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/widget/src/main/java/com/hjq/widget/layout/WrapRecyclerView.java", "stars": "1", "class_props": {"extends": "RecyclerView", "implements": null, "modifiers": ["final", "static", "private"]}}, {"id": 64290, "method_name": "onViewDetachedFromWindow", "class_name": "WrapRecyclerAdapter", "params": ["ViewHolder"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "        public void onViewDetachedFromWindow(@NonNull ViewHolder holder) {\n            if (mRealAdapter != null) {\n                mRealAdapter.onViewDetachedFromWindow(holder);\n            }\n        }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/widget/src/main/java/com/hjq/widget/layout/WrapRecyclerView.java", "stars": "1", "class_props": {"extends": "RecyclerView", "implements": null, "modifiers": ["final", "static", "private"]}}, {"id": 64291, "method_name": "addHeaderView", "class_name": "WrapRecyclerAdapter", "params": ["View"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "        private void addHeaderView(View view) {\n            // \u4e0d\u80fd\u6dfb\u52a0\u540c\u4e00\u4e2aView\u5bf9\u8c61\uff0c\u5426\u5219\u4f1a\u5bfc\u81f4RecyclerView\u590d\u7528\u5f02\u5e38\n            if (!mHeaderViews.contains(view) && !mFooterViews.contains(view)) {\n                adjustSpanSize(mRecyclerView, this, mRealAdapter);\n                mHeaderViews.add(view);\n                notifyDataSetChanged();\n            }\n        }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/widget/src/main/java/com/hjq/widget/layout/WrapRecyclerView.java", "stars": "1", "class_props": {"extends": "RecyclerView", "implements": null, "modifiers": ["final", "static", "private"]}}, {"id": 64292, "method_name": "removeHeaderView", "class_name": "WrapRecyclerAdapter", "params": ["View"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "        private void removeHeaderView(View view) {\n            if (mHeaderViews.remove(view)) {\n                notifyDataSetChanged();\n            }\n        }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/widget/src/main/java/com/hjq/widget/layout/WrapRecyclerView.java", "stars": "1", "class_props": {"extends": "RecyclerView", "implements": null, "modifiers": ["final", "static", "private"]}}, {"id": 64293, "method_name": "addFooterView", "class_name": "WrapRecyclerAdapter", "params": ["View"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "        private void addFooterView(View view) {\n            // \u4e0d\u80fd\u6dfb\u52a0\u540c\u4e00\u4e2aView\u5bf9\u8c61\uff0c\u5426\u5219\u4f1a\u5bfc\u81f4RecyclerView\u590d\u7528\u5f02\u5e38\n            if (!mFooterViews.contains(view) && !mHeaderViews.contains(view)) {\n                adjustSpanSize(mRecyclerView, this, mRealAdapter);\n                mFooterViews.add(view);\n                notifyDataSetChanged();\n            }\n        }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/widget/src/main/java/com/hjq/widget/layout/WrapRecyclerView.java", "stars": "1", "class_props": {"extends": "RecyclerView", "implements": null, "modifiers": ["final", "static", "private"]}}, {"id": 64294, "method_name": "removeFooterView", "class_name": "WrapRecyclerAdapter", "params": ["View"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "        private void removeFooterView(View view) {\n            if (mFooterViews.remove(view)) {\n                notifyDataSetChanged();\n            }\n        }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/widget/src/main/java/com/hjq/widget/layout/WrapRecyclerView.java", "stars": "1", "class_props": {"extends": "RecyclerView", "implements": null, "modifiers": ["final", "static", "private"]}}, {"id": 64295, "method_name": "getHeaderViewsCount", "class_name": "WrapRecyclerAdapter", "params": [], "throws": null, "modifiers": ["private"], "return_type": "int", "snippet": "        private int getHeaderViewsCount() {\n            return mHeaderViews.size();\n        }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/widget/src/main/java/com/hjq/widget/layout/WrapRecyclerView.java", "stars": "1", "class_props": {"extends": "RecyclerView", "implements": null, "modifiers": ["final", "static", "private"]}}, {"id": 64296, "method_name": "getFooterViewsCount", "class_name": "WrapRecyclerAdapter", "params": [], "throws": null, "modifiers": ["private"], "return_type": "int", "snippet": "        private int getFooterViewsCount() {\n            return mFooterViews.size();\n        }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/widget/src/main/java/com/hjq/widget/layout/WrapRecyclerView.java", "stars": "1", "class_props": {"extends": "RecyclerView", "implements": null, "modifiers": ["final", "static", "private"]}}, {"id": 64297, "method_name": "getHeaderViews", "class_name": "WrapRecyclerAdapter", "params": [], "throws": null, "modifiers": ["private"], "return_type": "List<View>", "snippet": "        private List<View> getHeaderViews() {\n            return mHeaderViews;\n        }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/widget/src/main/java/com/hjq/widget/layout/WrapRecyclerView.java", "stars": "1", "class_props": {"extends": "RecyclerView", "implements": null, "modifiers": ["final", "static", "private"]}}, {"id": 64298, "method_name": "getFooterViews", "class_name": "WrapRecyclerAdapter", "params": [], "throws": null, "modifiers": ["private"], "return_type": "List<View>", "snippet": "        private List<View> getFooterViews() {\n            return mFooterViews;\n        }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/widget/src/main/java/com/hjq/widget/layout/WrapRecyclerView.java", "stars": "1", "class_props": {"extends": "RecyclerView", "implements": null, "modifiers": ["final", "static", "private"]}}, {"id": 64299, "method_name": "adjustSpanSize", "class_name": "WrapRecyclerAdapter", "params": ["RecyclerView", "WrapRecyclerAdapter", "RecyclerView"], "throws": null, "modifiers": ["static", "private"], "return_type": "void", "snippet": "        private static void adjustSpanSize(RecyclerView recyclerView, final WrapRecyclerAdapter wrapAdapter, final RecyclerView.Adapter realAdapter) {\n\n            if (recyclerView == null || wrapAdapter == null || realAdapter == null) {\n                return;\n            }\n\n            final RecyclerView.LayoutManager layoutManager = recyclerView.getLayoutManager();\n            if (layoutManager instanceof GridLayoutManager) {\n                ((GridLayoutManager) layoutManager).setSpanSizeLookup(new GridLayoutManager.SpanSizeLookup() {\n\n                    @Override\n                    public int getSpanSize(int position) {\n                        return (position < wrapAdapter.getHeaderViewsCount()\n                                || position >= wrapAdapter.getHeaderViewsCount() + realAdapter.getItemCount())\n                                ? ((GridLayoutManager) layoutManager).getSpanCount() : 1;\n                    }\n                });\n            }\n        }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/widget/src/main/java/com/hjq/widget/layout/WrapRecyclerView.java", "stars": "1", "class_props": {"extends": "RecyclerView", "implements": null, "modifiers": ["final", "static", "private"]}}, {"id": 64300, "method_name": "onChanged", "class_name": "WrapAdapterDataObserver", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "        public void onChanged() {\n            mWrapAdapter.notifyDataSetChanged();\n        }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/widget/src/main/java/com/hjq/widget/layout/WrapRecyclerView.java", "stars": "1", "class_props": {"extends": "RecyclerView", "implements": null, "modifiers": ["final", "static", "private"]}}, {"id": 64301, "method_name": "onItemRangeChanged", "class_name": "WrapAdapterDataObserver", "params": ["int", "int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "        public void onItemRangeChanged(int positionStart, int itemCount) {\n            mWrapAdapter.notifyItemRangeChanged(mWrapAdapter.getHeaderViewsCount() + positionStart, itemCount);\n        }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/widget/src/main/java/com/hjq/widget/layout/WrapRecyclerView.java", "stars": "1", "class_props": {"extends": "RecyclerView", "implements": null, "modifiers": ["final", "static", "private"]}}, {"id": 64302, "method_name": "onItemRangeChanged", "class_name": "WrapAdapterDataObserver", "params": ["int", "int", "Object"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "        public void onItemRangeChanged(int positionStart, int itemCount, Object payload) {\n            onItemRangeChanged(mWrapAdapter.getHeaderViewsCount() + positionStart, itemCount);\n        }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/widget/src/main/java/com/hjq/widget/layout/WrapRecyclerView.java", "stars": "1", "class_props": {"extends": "RecyclerView", "implements": null, "modifiers": ["final", "static", "private"]}}, {"id": 64303, "method_name": "onItemRangeInserted", "class_name": "WrapAdapterDataObserver", "params": ["int", "int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "        public void onItemRangeInserted(int positionStart, int itemCount) {\n            mWrapAdapter.notifyItemRangeInserted(mWrapAdapter.getHeaderViewsCount() + positionStart, itemCount);\n        }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/widget/src/main/java/com/hjq/widget/layout/WrapRecyclerView.java", "stars": "1", "class_props": {"extends": "RecyclerView", "implements": null, "modifiers": ["final", "static", "private"]}}, {"id": 64304, "method_name": "onItemRangeRemoved", "class_name": "WrapAdapterDataObserver", "params": ["int", "int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "        public void onItemRangeRemoved(int positionStart, int itemCount) {\n            mWrapAdapter.notifyItemRangeRemoved(mWrapAdapter.getHeaderViewsCount() + positionStart, itemCount);\n        }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/widget/src/main/java/com/hjq/widget/layout/WrapRecyclerView.java", "stars": "1", "class_props": {"extends": "RecyclerView", "implements": null, "modifiers": ["final", "static", "private"]}}, {"id": 64305, "method_name": "onItemRangeMoved", "class_name": "WrapAdapterDataObserver", "params": ["int", "int", "int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "        public void onItemRangeMoved(int fromPosition, int toPosition, int itemCount) {\n            mWrapAdapter.notifyItemMoved(mWrapAdapter.getHeaderViewsCount() + fromPosition, toPosition);\n        }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/widget/src/main/java/com/hjq/widget/layout/WrapRecyclerView.java", "stars": "1", "class_props": {"extends": "RecyclerView", "implements": null, "modifiers": ["final", "static", "private"]}}, {"id": 64306, "method_name": "newInstance", "class_name": "user_account_view", "params": [], "throws": null, "modifiers": ["public", "static"], "return_type": "user_account_view", "snippet": "    public static user_account_view newInstance() {\n        user_account_view fragment = new user_account_view();\n        return fragment;\n    }", "url": "https://raw.githubusercontent.com/sachin2912/torripo/master/app/src/main/java/com/example/torripo/user_account_view.java", "stars": "2", "class_props": {"extends": "Fragment", "implements": null, "modifiers": ["public"]}}, {"id": 64307, "method_name": "onCreate", "class_name": "user_account_view", "params": ["Bundle"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        sharedPreferences=getActivity().getSharedPreferences(\"torripo_login\",Context.MODE_PRIVATE);\n        uname_1 = sharedPreferences.getString(\"uname\",\"none\");\n\n    }", "url": "https://raw.githubusercontent.com/sachin2912/torripo/master/app/src/main/java/com/example/torripo/user_account_view.java", "stars": "2", "class_props": {"extends": "Fragment", "implements": null, "modifiers": ["public"]}}, {"id": 64308, "method_name": "onCreateView", "class_name": "user_account_view", "params": ["LayoutInflater", "ViewGroup", "Bundle"], "throws": null, "modifiers": ["public"], "return_type": "View", "snippet": "    public View onCreateView(LayoutInflater inflater, ViewGroup container,\n                             Bundle savedInstanceState) {\n        // Inflate the layout for this fragment\n        if (!((MainActivity)getActivity()).isNetworkAvailable(getContext()))\n        {\n            Toast.makeText(getContext(),\"No Internet Connectivity\",Toast.LENGTH_LONG).show();\n            getActivity().finish();\n        }\n        View view=inflater.inflate(R.layout.fragment_user_account_view, container, false);\n        uname=view.findViewById(R.id.uname);\n        user_name=view.findViewById(R.id.name);\n        user_email=view.findViewById(R.id.email);\n        pbar=view.findViewById(R.id.progress);\n        main_user = view.findViewById(R.id.user_main);\n        Retrofit retrofit = new Retrofit.Builder().baseUrl(APIUrl.BASE_URL).\n                addConverterFactory(GsonConverterFactory.create()).build();\n        APIService service = retrofit.create(APIService.class);\n        Call<user_detail> call = service.getuserdetail(\"user_details\",uname_1);\n        call.enqueue(new Callback<user_detail>() {\n            @Override\n            public void onResponse(Call<user_detail> call, Response<user_detail> response) {\n                user_1 = response.body();\n                pbar.setVisibility(View.GONE);\n                main_user.setVisibility(View.VISIBLE);\n                uname.setText(\"Username :  \"+user_1.uname);\n                user_name.setText(\"Name :  \"+user_1.name);\n                user_email.setText(\"Email :  \"+user_1.email);\n            }\n\n            @Override\n            public void onFailure(Call<user_detail> call, Throwable t) {\n                Log.e(\"Error\", t.getMessage());\n            }\n        });\n\n\n        return view;\n    }", "url": "https://raw.githubusercontent.com/sachin2912/torripo/master/app/src/main/java/com/example/torripo/user_account_view.java", "stars": "2", "class_props": {"extends": "Fragment", "implements": null, "modifiers": ["public"]}}, {"id": 64309, "method_name": "onButtonPressed", "class_name": "user_account_view", "params": ["Uri"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onButtonPressed(Uri uri) {\n\n    }", "url": "https://raw.githubusercontent.com/sachin2912/torripo/master/app/src/main/java/com/example/torripo/user_account_view.java", "stars": "2", "class_props": {"extends": "Fragment", "implements": null, "modifiers": ["public"]}}, {"id": 64310, "method_name": "onAttach", "class_name": "user_account_view", "params": ["Context"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onAttach(Context context) {\n        super.onAttach(context);\n\n    }", "url": "https://raw.githubusercontent.com/sachin2912/torripo/master/app/src/main/java/com/example/torripo/user_account_view.java", "stars": "2", "class_props": {"extends": "Fragment", "implements": null, "modifiers": ["public"]}}, {"id": 64311, "method_name": "onDetach", "class_name": "user_account_view", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onDetach() {\n        super.onDetach();\n        }", "url": "https://raw.githubusercontent.com/sachin2912/torripo/master/app/src/main/java/com/example/torripo/user_account_view.java", "stars": "2", "class_props": {"extends": "Fragment", "implements": null, "modifiers": ["public"]}}, {"id": 64312, "method_name": "getASMTransformerClass", "class_name": "MercuryLoader", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String[] getASMTransformerClass() {\n        return new String[0];\n    }", "url": "https://raw.githubusercontent.com/Crystallinqq/Mercury-Client/master/src/main/java/fail/mercury/client/api/loader/MercuryLoader.java", "stars": "12", "class_props": {"extends": null, "implements": ["IFMLLoadingPlugin"], "modifiers": ["public"]}}, {"id": 64313, "method_name": "getModContainerClass", "class_name": "MercuryLoader", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getModContainerClass() {\n        return null;\n    }", "url": "https://raw.githubusercontent.com/Crystallinqq/Mercury-Client/master/src/main/java/fail/mercury/client/api/loader/MercuryLoader.java", "stars": "12", "class_props": {"extends": null, "implements": ["IFMLLoadingPlugin"], "modifiers": ["public"]}}, {"id": 64314, "method_name": "getSetupClass", "class_name": "MercuryLoader", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getSetupClass() {\n        return null;\n    }", "url": "https://raw.githubusercontent.com/Crystallinqq/Mercury-Client/master/src/main/java/fail/mercury/client/api/loader/MercuryLoader.java", "stars": "12", "class_props": {"extends": null, "implements": ["IFMLLoadingPlugin"], "modifiers": ["public"]}}, {"id": 64315, "method_name": "injectData", "class_name": "MercuryLoader", "params": ["Map<String,Object>"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void injectData(Map<String, Object> data) { }", "url": "https://raw.githubusercontent.com/Crystallinqq/Mercury-Client/master/src/main/java/fail/mercury/client/api/loader/MercuryLoader.java", "stars": "12", "class_props": {"extends": null, "implements": ["IFMLLoadingPlugin"], "modifiers": ["public"]}}, {"id": 64316, "method_name": "getAccessTransformerClass", "class_name": "MercuryLoader", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getAccessTransformerClass() {\n        return MercuryAccessTransformer.class.getName();\n    }", "url": "https://raw.githubusercontent.com/Crystallinqq/Mercury-Client/master/src/main/java/fail/mercury/client/api/loader/MercuryLoader.java", "stars": "12", "class_props": {"extends": null, "implements": ["IFMLLoadingPlugin"], "modifiers": ["public"]}}, {"id": 64317, "method_name": "toHQL", "class_name": "DropPartitionHQL", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "  public String toHQL() {\n    String exists = ifExists ? \"IF EXISTS \" : \"\";\n\n    return \"ALTER TABLE \" + table + \" DROP \" + exists + \"PARTITION (\"\n        + partition + \"='\" + value + \"');\";\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-jobtype/src/main/java/com/webank/wedatasphere/schedulis/jobtype/hiveutils/azkaban/hive/actions/DropPartitionHQL.java", "stars": "18", "class_props": {"extends": null, "implements": ["HQL"], "modifiers": []}}, {"id": 64318, "method_name": "main", "class_name": "reStudy", "params": ["String"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void main(String[] args) {\n        String str = \"c\";\n        String regex = \"[abc]\";\n        System.out.println(str.matches(regex));\n\n        Pattern phone = Pattern.compile(\"1\\\\d{10}\");\n        Pattern email = Pattern.compile(\"\\\\w+@163.com\");\n        Pattern ip = Pattern.compile(\"^((2(5[0-5]|[0-4]\\\\d))|[0-1]?\\\\d{1,2})(\\\\.((2(5[0-5]|[0-4]\\\\d))|[0-1]?\\\\d{1,2})){3}$\");\n        Pattern new1 = Pattern.compile(\"\\\\d&&[^2]\") ;\n        Matcher m = ip.matcher(\"192.168.256.5\");\n//        Matcher m = new1.matcher(\"3\");\n        boolean b = m.matches();\n        System.out.println(b);\n\n        String str5 = \"sadasd1561*/*/53asd*9/*\";\n        String regex1 = \"[^\\\\w]+\";\n        System.out.println(str5.replaceAll(regex1,\"\"));\n        System.out.println(\"asdasd192.168.0.1adasdasd\".matches(\".*((2(5[0-5]|[0-4]\\\\d))|[0-1]?\\\\d{1,2}\" +\n                \"(\\\\.((2(5[0-5]|[0-4]\\\\d))|[0-1]?\\\\d{1,2})){3}).*\"));\n\n\n\n    }", "url": "https://raw.githubusercontent.com/hzc869046779/JAVA-STUDY/master/src/javaSenior/reStudy/reStudy.java", "stars": "10", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 64319, "method_name": "main", "class_name": "Client2Application", "params": ["String"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void main(String[] args) {\n        SpringApplication.run(Client2Application.class, args);\n    }", "url": "https://raw.githubusercontent.com/lenve/oauth2-samples/master/oauth2-sso/client2/src/main/java/org/javaboy/client2/Client2Application.java", "stars": "47", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 64320, "method_name": "addFooBar", "class_name": "FooBarClientFallback", "params": ["FooBar"], "throws": ["Exception"], "modifiers": ["public"], "return_type": "ApiResult<Boolean>", "snippet": "    public ApiResult<Boolean> addFooBar(FooBar fooBar) throws Exception {\n        log.error(\"\u9519\u8bef\u539f\u56e0\uff1a\", throwable);\n        return ApiResult.fail();\n    }", "url": "https://raw.githubusercontent.com/geekidea/spring-cloud-plus/master/scp-example/scp-example-api/src/main/java/com/example/foobar/api/feign/fallback/FooBarClientFallback.java", "stars": "22", "class_props": {"extends": null, "implements": ["FooBarClient"], "modifiers": ["public"]}}, {"id": 64321, "method_name": "updateFooBar", "class_name": "FooBarClientFallback", "params": ["FooBar"], "throws": ["Exception"], "modifiers": ["public"], "return_type": "ApiResult<Boolean>", "snippet": "    public ApiResult<Boolean> updateFooBar(FooBar fooBar) throws Exception {\n        log.error(\"\u9519\u8bef\u539f\u56e0\uff1a\", throwable);\n        return ApiResult.fail();\n    }", "url": "https://raw.githubusercontent.com/geekidea/spring-cloud-plus/master/scp-example/scp-example-api/src/main/java/com/example/foobar/api/feign/fallback/FooBarClientFallback.java", "stars": "22", "class_props": {"extends": null, "implements": ["FooBarClient"], "modifiers": ["public"]}}, {"id": 64322, "method_name": "deleteFooBar", "class_name": "FooBarClientFallback", "params": ["Long"], "throws": ["Exception"], "modifiers": ["public"], "return_type": "ApiResult<Boolean>", "snippet": "    public ApiResult<Boolean> deleteFooBar(Long id) throws Exception {\n        log.error(\"\u9519\u8bef\u539f\u56e0\uff1a\", throwable);\n        return ApiResult.fail();\n    }", "url": "https://raw.githubusercontent.com/geekidea/spring-cloud-plus/master/scp-example/scp-example-api/src/main/java/com/example/foobar/api/feign/fallback/FooBarClientFallback.java", "stars": "22", "class_props": {"extends": null, "implements": ["FooBarClient"], "modifiers": ["public"]}}, {"id": 64323, "method_name": "getFooBar", "class_name": "FooBarClientFallback", "params": ["Long"], "throws": ["Exception"], "modifiers": ["public"], "return_type": "ApiResult<FooBar>", "snippet": "    public ApiResult<FooBar> getFooBar(Long id) throws Exception {\n        log.error(\"\u9519\u8bef\u539f\u56e0\uff1a\", throwable);\n        return ApiResult.fail();\n    }", "url": "https://raw.githubusercontent.com/geekidea/spring-cloud-plus/master/scp-example/scp-example-api/src/main/java/com/example/foobar/api/feign/fallback/FooBarClientFallback.java", "stars": "22", "class_props": {"extends": null, "implements": ["FooBarClient"], "modifiers": ["public"]}}, {"id": 64324, "method_name": "getFooBarPageList", "class_name": "FooBarClientFallback", "params": ["FooBarPageQuery"], "throws": ["Exception"], "modifiers": ["public"], "return_type": "ApiResult<Paging>", "snippet": "    public ApiResult<Paging<FooBar>> getFooBarPageList(FooBarPageQuery fooBarPageQuery) throws Exception {\n        log.error(\"\u9519\u8bef\u539f\u56e0\uff1a\", throwable);\n        return ApiResult.fail();\n    }", "url": "https://raw.githubusercontent.com/geekidea/spring-cloud-plus/master/scp-example/scp-example-api/src/main/java/com/example/foobar/api/feign/fallback/FooBarClientFallback.java", "stars": "22", "class_props": {"extends": null, "implements": ["FooBarClient"], "modifiers": ["public"]}}, {"id": 64325, "method_name": "LibVLC", "class_name": "BaseVideoPlayerFragment", "params": [], "throws": null, "modifiers": ["static", "private"], "return_type": "LibVLC", "snippet": "    private static LibVLC LibVLC() {\n        return VLCInstance.get(ButterApplication.getAppContext());\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/fragments/BaseVideoPlayerFragment.java", "stars": "4", "class_props": {"extends": "Fragment", "implements": ["IVLCVout", "TorrentServerListener", "MediaPlayer", "LibVLC", "SubtitleDownloader"], "modifiers": ["public", "abstract"]}}, {"id": 64326, "method_name": "onAttach", "class_name": "BaseVideoPlayerFragment", "params": ["Context"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onAttach(Context context) {\n        super.onAttach(context);\n        if (context instanceof Callback) mCallback = (Callback) context;\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/fragments/BaseVideoPlayerFragment.java", "stars": "4", "class_props": {"extends": "Fragment", "implements": ["IVLCVout", "TorrentServerListener", "MediaPlayer", "LibVLC", "SubtitleDownloader"], "modifiers": ["public", "abstract"]}}, {"id": 64327, "method_name": "onCreate", "class_name": "BaseVideoPlayerFragment", "params": ["Bundle"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        setRetainInstance(true);\n        setHasOptionsMenu(true);\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/fragments/BaseVideoPlayerFragment.java", "stars": "4", "class_props": {"extends": "Fragment", "implements": ["IVLCVout", "TorrentServerListener", "MediaPlayer", "LibVLC", "SubtitleDownloader"], "modifiers": ["public", "abstract"]}}, {"id": 64328, "method_name": "onCreateView", "class_name": "BaseVideoPlayerFragment", "params": ["LayoutInflater", "ViewGroup", "Bundle"], "throws": null, "modifiers": ["public"], "return_type": "View", "snippet": "    public View onCreateView(LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstanceState) {\n        return super.onCreateView(inflater, container, savedInstanceState);\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/fragments/BaseVideoPlayerFragment.java", "stars": "4", "class_props": {"extends": "Fragment", "implements": ["IVLCVout", "TorrentServerListener", "MediaPlayer", "LibVLC", "SubtitleDownloader"], "modifiers": ["public", "abstract"]}}, {"id": 64329, "method_name": "onViewCreated", "class_name": "BaseVideoPlayerFragment", "params": ["View", "Bundle"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onViewCreated(View view, @Nullable Bundle savedInstanceState) {\n        super.onViewCreated(view, savedInstanceState);\n        mRootView = view;\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/fragments/BaseVideoPlayerFragment.java", "stars": "4", "class_props": {"extends": "Fragment", "implements": ["IVLCVout", "TorrentServerListener", "MediaPlayer", "LibVLC", "SubtitleDownloader"], "modifiers": ["public", "abstract"]}}, {"id": 64330, "method_name": "onActivityCreated", "class_name": "BaseVideoPlayerFragment", "params": ["Bundle"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onActivityCreated(@Nullable Bundle savedInstanceState) {\n        super.onActivityCreated(savedInstanceState);\n\n        if (getActivity() instanceof Callback && mCallback == null) {\n            mCallback = (Callback) getActivity();\n        }\n\n        mResumePosition = mCallback.getResumePosition();\n        PrefUtils.save(getActivity(), RESUME_POSITION, mResumePosition);\n\n        if (!VLCInstance.hasCompatibleCPU(getContext())) {\n            getActivity().finish();\n            return;\n        }\n\n        StreamInfo streamInfo = mCallback.getInfo();\n\n        if (streamInfo == null){\n            getActivity().finish();\n            return;\n        }\n\n        mMedia = streamInfo.getMedia();\n\n        mLibVLC = LibVLC();\n        mLibVLC.setOnHardwareAccelerationError(this);\n\n        mMediaPlayer = new MediaPlayer(mLibVLC);\n        mMediaPlayer.setEventListener(this);\n\n        if (mCallback.getService() != null) {\n            mCallback.getService().addListener(this);\n        }\n\n        setProgressVisible(true);\n\n        if (null == streamInfo.getSubtitleLanguage()) {\n            // Get selected default subtitle\n            String defaultSubtitle = PrefUtils.get(\n                    getActivity(),\n                    Prefs.SUBTITLE_DEFAULT,\n                    SubsProvider.SUBTITLE_LANGUAGE_NONE);\n            streamInfo.setSubtitleLanguage(defaultSubtitle);\n            mCurrentSubsLang = defaultSubtitle;\n            Timber.d(\"Using default subtitle: \" + mCurrentSubsLang);\n        }\n\n        if (!streamInfo.getSubtitleLanguage().equals(SubsProvider.SUBTITLE_LANGUAGE_NONE)) {\n            Timber.d(\"Download default subtitle\");\n            mCurrentSubsLang = streamInfo.getSubtitleLanguage();\n            loadOrDownloadSubtitle();\n        }\n\n        updateSubtitleSize(PrefUtils.get(getActivity(), Prefs.SUBTITLE_SIZE, getResources().getInteger(R.integer.player_subtitles_default_text_size)));\n\n        prepareVlcVout();\n        if(mMediaReady)\n            loadMedia();\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/fragments/BaseVideoPlayerFragment.java", "stars": "4", "class_props": {"extends": "Fragment", "implements": ["IVLCVout", "TorrentServerListener", "MediaPlayer", "LibVLC", "SubtitleDownloader"], "modifiers": ["public", "abstract"]}}, {"id": 64331, "method_name": "onResume", "class_name": "BaseVideoPlayerFragment", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onResume() {\n        super.onResume();\n\n        prepareVlcVout();\n        BeamManager.getInstance(getActivity()).addDeviceListener(mDeviceListener);\n        onProgressChanged(PrefUtils.get(getActivity(), RESUME_POSITION, mResumePosition), mDuration);\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/fragments/BaseVideoPlayerFragment.java", "stars": "4", "class_props": {"extends": "Fragment", "implements": ["IVLCVout", "TorrentServerListener", "MediaPlayer", "LibVLC", "SubtitleDownloader"], "modifiers": ["public", "abstract"]}}, {"id": 64332, "method_name": "onPause", "class_name": "BaseVideoPlayerFragment", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onPause() {\n        super.onPause();\n\n        saveVideoCurrentTime();\n        mMediaPlayer.stop();\n\n        final IVLCVout vlcout = mMediaPlayer.getVLCVout();\n        vlcout.removeCallback(this);\n        vlcout.detachViews();\n\n        BeamManager.getInstance(getActivity()).removeDeviceListener(mDeviceListener);\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/fragments/BaseVideoPlayerFragment.java", "stars": "4", "class_props": {"extends": "Fragment", "implements": ["IVLCVout", "TorrentServerListener", "MediaPlayer", "LibVLC", "SubtitleDownloader"], "modifiers": ["public", "abstract"]}}, {"id": 64333, "method_name": "onDestroy", "class_name": "BaseVideoPlayerFragment", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onDestroy() {\n        super.onDestroy();\n\n        PrefUtils.save(getActivity(), RESUME_POSITION, 0);\n\n        mMediaPlayer.release();\n        mLibVLC.release();\n\n        if (mCallback.getService() != null) {\n            mCallback.getService().removeListener(this);\n        }\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/fragments/BaseVideoPlayerFragment.java", "stars": "4", "class_props": {"extends": "Fragment", "implements": ["IVLCVout", "TorrentServerListener", "MediaPlayer", "LibVLC", "SubtitleDownloader"], "modifiers": ["public", "abstract"]}}, {"id": 64334, "method_name": "onMediaReady", "class_name": "BaseVideoPlayerFragment", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onMediaReady() {\n        if(!mMediaReady) {\n            mMediaReady = true;\n        }\n        if(mLibVLC != null) {\n            loadMedia();\n        }\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/fragments/BaseVideoPlayerFragment.java", "stars": "4", "class_props": {"extends": "Fragment", "implements": ["IVLCVout", "TorrentServerListener", "MediaPlayer", "LibVLC", "SubtitleDownloader"], "modifiers": ["public", "abstract"]}}, {"id": 64335, "method_name": "disableHardwareAcceleration", "class_name": "BaseVideoPlayerFragment", "params": [], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void disableHardwareAcceleration() {\n        mDisabledHardwareAcceleration = true;\n        saveVideoCurrentTime();\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/fragments/BaseVideoPlayerFragment.java", "stars": "4", "class_props": {"extends": "Fragment", "implements": ["IVLCVout", "TorrentServerListener", "MediaPlayer", "LibVLC", "SubtitleDownloader"], "modifiers": ["public", "abstract"]}}, {"id": 64336, "method_name": "loadMedia", "class_name": "BaseVideoPlayerFragment", "params": [], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void loadMedia() {\n        StreamInfo streamInfo = mCallback.getInfo();\n\n        String videoLocation;\n        if (TextUtils.isEmpty(streamInfo.getVideoLocation())) {\n            Toast.makeText(getActivity(), \"Error loading media\", Toast.LENGTH_LONG).show();\n            getActivity().finish();\n            return;\n        }\n        else {\n            videoLocation = streamInfo.getVideoLocation();\n            if (!videoLocation.startsWith(\"file://\") && !videoLocation.startsWith(\"http://\") && !videoLocation.startsWith(\"https://\")) {\n                videoLocation = \"file://\" + videoLocation;\n            }\n        }\n\n        int flags = mDisabledHardwareAcceleration ? VLCOptions.MEDIA_NO_HWACCEL : 0;\n        flags = flags | VLCOptions.MEDIA_VIDEO;\n\n        org.videolan.libvlc.Media media = new org.videolan.libvlc.Media(mLibVLC, Uri.parse(videoLocation));\n        VLCOptions.setMediaOptions(media, getActivity(), flags);\n\n        mMediaPlayer.setMedia(media);\n\n        long resumeFrom = PrefUtils.get(getActivity(), RESUME_POSITION, mResumePosition);\n        if (resumeFrom > 0) {\n            mMediaPlayer.setTime(resumeFrom);\n        }\n\n        mDuration = mMediaPlayer.getLength();\n        mMediaPlayer.play();\n        mEnded = false;\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/fragments/BaseVideoPlayerFragment.java", "stars": "4", "class_props": {"extends": "Fragment", "implements": ["IVLCVout", "TorrentServerListener", "MediaPlayer", "LibVLC", "SubtitleDownloader"], "modifiers": ["public", "abstract"]}}, {"id": 64337, "method_name": "setProgressVisible", "class_name": "BaseVideoPlayerFragment", "params": ["boolean"], "throws": null, "modifiers": ["protected", "abstract"], "return_type": "void", "snippet": "    protected abstract void setProgressVisible(boolean visible);\n\n    protected abstract void showOverlay();\n\n    protected abstract void showPlayerInfo(String info);\n\n    protected abstract void onProgressChanged(long currentTime, long duration);\n\n    protected abstract void updatePlayPauseState();\n\n    protected abstract void onErrorEncountered();\n\n    protected abstract void onHardwareAccelerationError();\n\n    protected abstract void showTimedCaptionText(Caption text);\n\n    protected abstract SurfaceView getVideoSurface();\n\n    protected void setSeeking(boolean seeking) {\n        mSeeking = seeking;\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/fragments/BaseVideoPlayerFragment.java", "stars": "4", "class_props": {"extends": "Fragment", "implements": ["IVLCVout", "TorrentServerListener", "MediaPlayer", "LibVLC", "SubtitleDownloader"], "modifiers": ["public", "abstract"]}}, {"id": 64338, "method_name": "showOverlay", "class_name": "BaseVideoPlayerFragment", "params": [], "throws": null, "modifiers": ["protected", "abstract"], "return_type": "void", "snippet": "    protected abstract void showOverlay();\n\n    protected abstract void showPlayerInfo(String info);\n\n    protected abstract void onProgressChanged(long currentTime, long duration);\n\n    protected abstract void updatePlayPauseState();\n\n    protected abstract void onErrorEncountered();\n\n    protected abstract void onHardwareAccelerationError();\n\n    protected abstract void showTimedCaptionText(Caption text);\n\n    protected abstract SurfaceView getVideoSurface();\n\n    protected void setSeeking(boolean seeking) {\n        mSeeking = seeking;\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/fragments/BaseVideoPlayerFragment.java", "stars": "4", "class_props": {"extends": "Fragment", "implements": ["IVLCVout", "TorrentServerListener", "MediaPlayer", "LibVLC", "SubtitleDownloader"], "modifiers": ["public", "abstract"]}}, {"id": 64339, "method_name": "showPlayerInfo", "class_name": "BaseVideoPlayerFragment", "params": ["String"], "throws": null, "modifiers": ["protected", "abstract"], "return_type": "void", "snippet": "    protected abstract void showPlayerInfo(String info);\n\n    protected abstract void onProgressChanged(long currentTime, long duration);\n\n    protected abstract void updatePlayPauseState();\n\n    protected abstract void onErrorEncountered();\n\n    protected abstract void onHardwareAccelerationError();\n\n    protected abstract void showTimedCaptionText(Caption text);\n\n    protected abstract SurfaceView getVideoSurface();\n\n    protected void setSeeking(boolean seeking) {\n        mSeeking = seeking;\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/fragments/BaseVideoPlayerFragment.java", "stars": "4", "class_props": {"extends": "Fragment", "implements": ["IVLCVout", "TorrentServerListener", "MediaPlayer", "LibVLC", "SubtitleDownloader"], "modifiers": ["public", "abstract"]}}, {"id": 64340, "method_name": "onProgressChanged", "class_name": "BaseVideoPlayerFragment", "params": ["long", "long"], "throws": null, "modifiers": ["protected", "abstract"], "return_type": "void", "snippet": "    protected abstract void onProgressChanged(long currentTime, long duration);\n\n    protected abstract void updatePlayPauseState();\n\n    protected abstract void onErrorEncountered();\n\n    protected abstract void onHardwareAccelerationError();\n\n    protected abstract void showTimedCaptionText(Caption text);\n\n    protected abstract SurfaceView getVideoSurface();\n\n    protected void setSeeking(boolean seeking) {\n        mSeeking = seeking;\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/fragments/BaseVideoPlayerFragment.java", "stars": "4", "class_props": {"extends": "Fragment", "implements": ["IVLCVout", "TorrentServerListener", "MediaPlayer", "LibVLC", "SubtitleDownloader"], "modifiers": ["public", "abstract"]}}, {"id": 64341, "method_name": "updatePlayPauseState", "class_name": "BaseVideoPlayerFragment", "params": [], "throws": null, "modifiers": ["protected", "abstract"], "return_type": "void", "snippet": "    protected abstract void updatePlayPauseState();\n\n    protected abstract void onErrorEncountered();\n\n    protected abstract void onHardwareAccelerationError();\n\n    protected abstract void showTimedCaptionText(Caption text);\n\n    protected abstract SurfaceView getVideoSurface();\n\n    protected void setSeeking(boolean seeking) {\n        mSeeking = seeking;\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/fragments/BaseVideoPlayerFragment.java", "stars": "4", "class_props": {"extends": "Fragment", "implements": ["IVLCVout", "TorrentServerListener", "MediaPlayer", "LibVLC", "SubtitleDownloader"], "modifiers": ["public", "abstract"]}}, {"id": 64342, "method_name": "onErrorEncountered", "class_name": "BaseVideoPlayerFragment", "params": [], "throws": null, "modifiers": ["protected", "abstract"], "return_type": "void", "snippet": "    protected abstract void onErrorEncountered();\n\n    protected abstract void onHardwareAccelerationError();\n\n    protected abstract void showTimedCaptionText(Caption text);\n\n    protected abstract SurfaceView getVideoSurface();\n\n    protected void setSeeking(boolean seeking) {\n        mSeeking = seeking;\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/fragments/BaseVideoPlayerFragment.java", "stars": "4", "class_props": {"extends": "Fragment", "implements": ["IVLCVout", "TorrentServerListener", "MediaPlayer", "LibVLC", "SubtitleDownloader"], "modifiers": ["public", "abstract"]}}, {"id": 64343, "method_name": "onHardwareAccelerationError", "class_name": "BaseVideoPlayerFragment", "params": [], "throws": null, "modifiers": ["protected", "abstract"], "return_type": "void", "snippet": "    protected abstract void onHardwareAccelerationError();\n\n    protected abstract void showTimedCaptionText(Caption text);\n\n    protected abstract SurfaceView getVideoSurface();\n\n    protected void setSeeking(boolean seeking) {\n        mSeeking = seeking;\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/fragments/BaseVideoPlayerFragment.java", "stars": "4", "class_props": {"extends": "Fragment", "implements": ["IVLCVout", "TorrentServerListener", "MediaPlayer", "LibVLC", "SubtitleDownloader"], "modifiers": ["public", "abstract"]}}, {"id": 64344, "method_name": "showTimedCaptionText", "class_name": "BaseVideoPlayerFragment", "params": ["Caption"], "throws": null, "modifiers": ["protected", "abstract"], "return_type": "void", "snippet": "    protected abstract void showTimedCaptionText(Caption text);\n\n    protected abstract SurfaceView getVideoSurface();\n\n    protected void setSeeking(boolean seeking) {\n        mSeeking = seeking;\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/fragments/BaseVideoPlayerFragment.java", "stars": "4", "class_props": {"extends": "Fragment", "implements": ["IVLCVout", "TorrentServerListener", "MediaPlayer", "LibVLC", "SubtitleDownloader"], "modifiers": ["public", "abstract"]}}, {"id": 64345, "method_name": "getVideoSurface", "class_name": "BaseVideoPlayerFragment", "params": [], "throws": null, "modifiers": ["protected", "abstract"], "return_type": "SurfaceView", "snippet": "    protected abstract SurfaceView getVideoSurface();\n\n    protected void setSeeking(boolean seeking) {\n        mSeeking = seeking;\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/fragments/BaseVideoPlayerFragment.java", "stars": "4", "class_props": {"extends": "Fragment", "implements": ["IVLCVout", "TorrentServerListener", "MediaPlayer", "LibVLC", "SubtitleDownloader"], "modifiers": ["public", "abstract"]}}, {"id": 64346, "method_name": "setSeeking", "class_name": "BaseVideoPlayerFragment", "params": ["boolean"], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void setSeeking(boolean seeking) {\n        mSeeking = seeking;\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/fragments/BaseVideoPlayerFragment.java", "stars": "4", "class_props": {"extends": "Fragment", "implements": ["IVLCVout", "TorrentServerListener", "MediaPlayer", "LibVLC", "SubtitleDownloader"], "modifiers": ["public", "abstract"]}}, {"id": 64347, "method_name": "isSeeking", "class_name": "BaseVideoPlayerFragment", "params": [], "throws": null, "modifiers": ["protected"], "return_type": "boolean", "snippet": "    protected boolean isSeeking() {\n        return mSeeking;\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/fragments/BaseVideoPlayerFragment.java", "stars": "4", "class_props": {"extends": "Fragment", "implements": ["IVLCVout", "TorrentServerListener", "MediaPlayer", "LibVLC", "SubtitleDownloader"], "modifiers": ["public", "abstract"]}}, {"id": 64348, "method_name": "prepareVlcVout", "class_name": "BaseVideoPlayerFragment", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void prepareVlcVout() {\n        final IVLCVout vlcVout = mMediaPlayer.getVLCVout();\n\n        if (!vlcVout.areViewsAttached()) {\n            vlcVout.setVideoView(getVideoSurface());\n            vlcVout.addCallback(this);\n            vlcVout.attachViews();\n        }\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/fragments/BaseVideoPlayerFragment.java", "stars": "4", "class_props": {"extends": "Fragment", "implements": ["IVLCVout", "TorrentServerListener", "MediaPlayer", "LibVLC", "SubtitleDownloader"], "modifiers": ["public", "abstract"]}}, {"id": 64349, "method_name": "saveVideoCurrentTime", "class_name": "BaseVideoPlayerFragment", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void saveVideoCurrentTime() {\n        long currentTime = mMediaPlayer.getTime();\n        PrefUtils.save(getActivity(), RESUME_POSITION, currentTime);\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/fragments/BaseVideoPlayerFragment.java", "stars": "4", "class_props": {"extends": "Fragment", "implements": ["IVLCVout", "TorrentServerListener", "MediaPlayer", "LibVLC", "SubtitleDownloader"], "modifiers": ["public", "abstract"]}}, {"id": 64350, "method_name": "resumeVideo", "class_name": "BaseVideoPlayerFragment", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void resumeVideo() {\n        if (getActivity() != null) {\n            long resumePosition = PrefUtils.get(getActivity(), RESUME_POSITION, 0);\n            mDuration = mMediaPlayer.getLength();\n            if (mDuration > resumePosition && resumePosition > 0) {\n                setCurrentTime(resumePosition);\n                PrefUtils.save(getActivity(), RESUME_POSITION, 0);\n            }\n        }\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/fragments/BaseVideoPlayerFragment.java", "stars": "4", "class_props": {"extends": "Fragment", "implements": ["IVLCVout", "TorrentServerListener", "MediaPlayer", "LibVLC", "SubtitleDownloader"], "modifiers": ["public", "abstract"]}}, {"id": 64351, "method_name": "play", "class_name": "BaseVideoPlayerFragment", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void play() {\n        mMediaPlayer.play();\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/fragments/BaseVideoPlayerFragment.java", "stars": "4", "class_props": {"extends": "Fragment", "implements": ["IVLCVout", "TorrentServerListener", "MediaPlayer", "LibVLC", "SubtitleDownloader"], "modifiers": ["public", "abstract"]}}, {"id": 64352, "method_name": "pause", "class_name": "BaseVideoPlayerFragment", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void pause() {\n        mMediaPlayer.pause();\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/fragments/BaseVideoPlayerFragment.java", "stars": "4", "class_props": {"extends": "Fragment", "implements": ["IVLCVout", "TorrentServerListener", "MediaPlayer", "LibVLC", "SubtitleDownloader"], "modifiers": ["public", "abstract"]}}, {"id": 64353, "method_name": "togglePlayPause", "class_name": "BaseVideoPlayerFragment", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void togglePlayPause() {\n        if (mEnded) {\n            loadMedia();\n        }\n\n        if (mMediaPlayer.isPlaying()) {\n            pause();\n        } else {\n            play();\n        }\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/fragments/BaseVideoPlayerFragment.java", "stars": "4", "class_props": {"extends": "Fragment", "implements": ["IVLCVout", "TorrentServerListener", "MediaPlayer", "LibVLC", "SubtitleDownloader"], "modifiers": ["public", "abstract"]}}, {"id": 64354, "method_name": "seekForwardClick", "class_name": "BaseVideoPlayerFragment", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void seekForwardClick() {\n        seek(10000);\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/fragments/BaseVideoPlayerFragment.java", "stars": "4", "class_props": {"extends": "Fragment", "implements": ["IVLCVout", "TorrentServerListener", "MediaPlayer", "LibVLC", "SubtitleDownloader"], "modifiers": ["public", "abstract"]}}, {"id": 64355, "method_name": "seekBackwardClick", "class_name": "BaseVideoPlayerFragment", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void seekBackwardClick() {\n        seek(-10000);\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/fragments/BaseVideoPlayerFragment.java", "stars": "4", "class_props": {"extends": "Fragment", "implements": ["IVLCVout", "TorrentServerListener", "MediaPlayer", "LibVLC", "SubtitleDownloader"], "modifiers": ["public", "abstract"]}}, {"id": 64356, "method_name": "scaleClick", "class_name": "BaseVideoPlayerFragment", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void scaleClick() {\n        if (mCurrentSize < SURFACE_ORIGINAL) {\n            mCurrentSize++;\n        } else {\n            mCurrentSize = 0;\n        }\n        changeSurfaceSize(true);\n        showOverlay();\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/fragments/BaseVideoPlayerFragment.java", "stars": "4", "class_props": {"extends": "Fragment", "implements": ["IVLCVout", "TorrentServerListener", "MediaPlayer", "LibVLC", "SubtitleDownloader"], "modifiers": ["public", "abstract"]}}, {"id": 64357, "method_name": "setCurrentTime", "class_name": "BaseVideoPlayerFragment", "params": ["long"], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void setCurrentTime(long time) {\n        if (time / getDuration() * 100 <= getStreamerProgress()) {\n            mMediaPlayer.setTime(time);\n        }\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/fragments/BaseVideoPlayerFragment.java", "stars": "4", "class_props": {"extends": "Fragment", "implements": ["IVLCVout", "TorrentServerListener", "MediaPlayer", "LibVLC", "SubtitleDownloader"], "modifiers": ["public", "abstract"]}}, {"id": 64358, "method_name": "getCurrentTime", "class_name": "BaseVideoPlayerFragment", "params": [], "throws": null, "modifiers": ["protected"], "return_type": "long", "snippet": "    protected long getCurrentTime() {\n        return mMediaPlayer.getTime();\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/fragments/BaseVideoPlayerFragment.java", "stars": "4", "class_props": {"extends": "Fragment", "implements": ["IVLCVout", "TorrentServerListener", "MediaPlayer", "LibVLC", "SubtitleDownloader"], "modifiers": ["public", "abstract"]}}, {"id": 64359, "method_name": "getDuration", "class_name": "BaseVideoPlayerFragment", "params": [], "throws": null, "modifiers": ["protected"], "return_type": "long", "snippet": "    protected long getDuration() {\n        return mDuration;\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/fragments/BaseVideoPlayerFragment.java", "stars": "4", "class_props": {"extends": "Fragment", "implements": ["IVLCVout", "TorrentServerListener", "MediaPlayer", "LibVLC", "SubtitleDownloader"], "modifiers": ["public", "abstract"]}}, {"id": 64360, "method_name": "getStreamerProgress", "class_name": "BaseVideoPlayerFragment", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getStreamerProgress() {\n        return mStreamerProgress;\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/fragments/BaseVideoPlayerFragment.java", "stars": "4", "class_props": {"extends": "Fragment", "implements": ["IVLCVout", "TorrentServerListener", "MediaPlayer", "LibVLC", "SubtitleDownloader"], "modifiers": ["public", "abstract"]}}, {"id": 64361, "method_name": "isPlaying", "class_name": "BaseVideoPlayerFragment", "params": [], "throws": null, "modifiers": ["protected"], "return_type": "boolean", "snippet": "    protected boolean isPlaying() {\n        return mMediaPlayer.isPlaying();\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/fragments/BaseVideoPlayerFragment.java", "stars": "4", "class_props": {"extends": "Fragment", "implements": ["IVLCVout", "TorrentServerListener", "MediaPlayer", "LibVLC", "SubtitleDownloader"], "modifiers": ["public", "abstract"]}}, {"id": 64362, "method_name": "endReached", "class_name": "BaseVideoPlayerFragment", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void endReached() {\n        mEnded = true;\n        onPlaybackEndReached();\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/fragments/BaseVideoPlayerFragment.java", "stars": "4", "class_props": {"extends": "Fragment", "implements": ["IVLCVout", "TorrentServerListener", "MediaPlayer", "LibVLC", "SubtitleDownloader"], "modifiers": ["public", "abstract"]}}, {"id": 64363, "method_name": "onPlaybackEndReached", "class_name": "BaseVideoPlayerFragment", "params": [], "throws": null, "modifiers": ["public", "abstract"], "return_type": "void", "snippet": "    public abstract void onPlaybackEndReached();\n\n    private void handleHardwareAccelerationError() {\n        saveVideoCurrentTime();\n        mMediaPlayer.stop();\n        onHardwareAccelerationError();\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/fragments/BaseVideoPlayerFragment.java", "stars": "4", "class_props": {"extends": "Fragment", "implements": ["IVLCVout", "TorrentServerListener", "MediaPlayer", "LibVLC", "SubtitleDownloader"], "modifiers": ["public", "abstract"]}}, {"id": 64364, "method_name": "handleHardwareAccelerationError", "class_name": "BaseVideoPlayerFragment", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void handleHardwareAccelerationError() {\n        saveVideoCurrentTime();\n        mMediaPlayer.stop();\n        onHardwareAccelerationError();\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/fragments/BaseVideoPlayerFragment.java", "stars": "4", "class_props": {"extends": "Fragment", "implements": ["IVLCVout", "TorrentServerListener", "MediaPlayer", "LibVLC", "SubtitleDownloader"], "modifiers": ["public", "abstract"]}}, {"id": 64365, "method_name": "changeSurfaceSize", "class_name": "BaseVideoPlayerFragment", "params": ["boolean"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void changeSurfaceSize(boolean message) {\n        int screenWidth = getActivity().getWindow().getDecorView().getWidth();\n        int screenHeight = getActivity().getWindow().getDecorView().getHeight();\n\n        if (mMediaPlayer != null) {\n            final IVLCVout vlcVout = mMediaPlayer.getVLCVout();\n            vlcVout.setWindowSize(screenWidth, screenHeight);\n        }\n\n        double displayWidth = screenWidth, displayHeight = screenHeight;\n\n        if (screenWidth < screenHeight) {\n            displayWidth = screenHeight;\n            displayHeight = screenWidth;\n        }\n\n        // sanity check\n        if (displayWidth * displayHeight <= 1 || mVideoWidth * mVideoHeight <= 1) {\n            Timber.e(\"Invalid surface size\");\n            onErrorEncountered();\n            return;\n        }\n\n        // compute the aspect ratio\n        double aspectRatio, visibleWidth;\n        if (mSarDen == mSarNum) {\n\t\t\t/* No indication about the density, assuming 1:1 */\n            visibleWidth = mVideoVisibleWidth;\n            aspectRatio = (double) mVideoVisibleWidth / (double) mVideoVisibleHeight;\n        } else {\n\t\t\t/* Use the specified aspect ratio */\n            visibleWidth = mVideoVisibleWidth * (double) mSarNum / mSarDen;\n            aspectRatio = visibleWidth / mVideoVisibleHeight;\n        }\n\n        // compute the display aspect ratio\n        double displayAspectRatio = displayWidth / displayHeight;\n\n        switch (mCurrentSize) {\n            case SURFACE_BEST_FIT:\n                if (message) showPlayerInfo(getString(R.string.best_fit));\n                if (displayAspectRatio < aspectRatio)\n                    displayHeight = displayWidth / aspectRatio;\n                else\n                    displayWidth = displayHeight * aspectRatio;\n                break;\n            case SURFACE_FIT_HORIZONTAL:\n                displayHeight = displayWidth / aspectRatio;\n                if (message) showPlayerInfo(getString(R.string.fit_horizontal));\n                break;\n            case SURFACE_FIT_VERTICAL:\n                displayWidth = displayHeight * aspectRatio;\n                if (message) showPlayerInfo(getString(R.string.fit_vertical));\n                break;\n            case SURFACE_FILL:\n                if (message) showPlayerInfo(getString(R.string.fill));\n                break;\n            case SURFACE_16_9:\n                if (message) showPlayerInfo(\"16:9\");\n                aspectRatio = 16.0 / 9.0;\n                if (displayAspectRatio < aspectRatio)\n                    displayHeight = displayWidth / aspectRatio;\n                else\n                    displayWidth = displayHeight * aspectRatio;\n                break;\n            case SURFACE_4_3:\n                if (message) showPlayerInfo(\"4:3\");\n                aspectRatio = 4.0 / 3.0;\n                if (displayAspectRatio < aspectRatio)\n                    displayHeight = displayWidth / aspectRatio;\n                else\n                    displayWidth = displayHeight * aspectRatio;\n                break;\n            case SURFACE_ORIGINAL:\n                if (message) showPlayerInfo(getString(R.string.original_size));\n                displayHeight = mVideoVisibleHeight;\n                displayWidth = visibleWidth;\n                break;\n        }\n\n        // set display size\n        int finalWidth = (int) Math.ceil(displayWidth * mVideoWidth / mVideoVisibleWidth);\n        int finalHeight = (int) Math.ceil(displayHeight * mVideoHeight / mVideoVisibleHeight);\n\n        SurfaceHolder holder = getVideoSurface().getHolder();\n        holder.setFixedSize(finalWidth, finalHeight);\n\n        ViewGroup.LayoutParams lp = getVideoSurface().getLayoutParams();\n        lp.width = finalWidth;\n        lp.height = finalHeight;\n        getVideoSurface().setLayoutParams(lp);\n        getVideoSurface().invalidate();\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/fragments/BaseVideoPlayerFragment.java", "stars": "4", "class_props": {"extends": "Fragment", "implements": ["IVLCVout", "TorrentServerListener", "MediaPlayer", "LibVLC", "SubtitleDownloader"], "modifiers": ["public", "abstract"]}}, {"id": 64366, "method_name": "seek", "class_name": "BaseVideoPlayerFragment", "params": ["int"], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void seek(int delta) {\n        if (mMediaPlayer.getLength() <= 0 && !mSeeking) return;\n\n        long position = mMediaPlayer.getTime() + delta;\n        if (position < 0) position = 0;\n        setCurrentTime(position);\n        showOverlay();\n        onProgressChanged(getCurrentTime(), getDuration());\n        mLastSub = null;\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/fragments/BaseVideoPlayerFragment.java", "stars": "4", "class_props": {"extends": "Fragment", "implements": ["IVLCVout", "TorrentServerListener", "MediaPlayer", "LibVLC", "SubtitleDownloader"], "modifiers": ["public", "abstract"]}}, {"id": 64367, "method_name": "setLastSubtitleCaption", "class_name": "BaseVideoPlayerFragment", "params": ["Caption"], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void setLastSubtitleCaption(Caption sub) {\n        mLastSub = sub;\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/fragments/BaseVideoPlayerFragment.java", "stars": "4", "class_props": {"extends": "Fragment", "implements": ["IVLCVout", "TorrentServerListener", "MediaPlayer", "LibVLC", "SubtitleDownloader"], "modifiers": ["public", "abstract"]}}, {"id": 64368, "method_name": "progressSubtitleCaption", "class_name": "BaseVideoPlayerFragment", "params": [], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void progressSubtitleCaption() {\n        if (mLibVLC != null && mMediaPlayer != null && mMediaPlayer.isPlaying() && mSubs != null) {\n            Collection<Caption> subtitles = mSubs.captions.values();\n            double currentTime = getCurrentTime() - mSubtitleOffset;\n            if (mLastSub != null && currentTime >= mLastSub.start.getMilliseconds() && currentTime <= mLastSub.end.getMilliseconds()) {\n                showTimedCaptionText(mLastSub);\n            } else {\n                for (Caption caption : subtitles) {\n                    if (currentTime >= caption.start.getMilliseconds() && currentTime <= caption.end.getMilliseconds()) {\n                        mLastSub = caption;\n                        showTimedCaptionText(caption);\n                        break;\n                    } else if (currentTime > caption.end.getMilliseconds()) {\n                        showTimedCaptionText(null);\n                    }\n                }\n            }\n        }\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/fragments/BaseVideoPlayerFragment.java", "stars": "4", "class_props": {"extends": "Fragment", "implements": ["IVLCVout", "TorrentServerListener", "MediaPlayer", "LibVLC", "SubtitleDownloader"], "modifiers": ["public", "abstract"]}}, {"id": 64369, "method_name": "onSubtitleLanguageSelected", "class_name": "BaseVideoPlayerFragment", "params": ["String"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void onSubtitleLanguageSelected(String language) {\n        if (mCurrentSubsLang != null && (language == null || mCurrentSubsLang.equals(language))) {\n            return;\n        }\n\n        mCurrentSubsLang = language;\n        mCallback.getInfo().setSubtitleLanguage(mCurrentSubsLang);\n\n        if (mCurrentSubsLang.equals(SubsProvider.SUBTITLE_LANGUAGE_NONE)) {\n            mSubs = null;\n            onSubtitleEnabledStateChanged(false);\n            return;\n        }\n\n        if (mMedia == null || mMedia.subtitles == null || mMedia.subtitles.size() == 0) {\n            mSubs = null;\n            onSubtitleEnabledStateChanged(false);\n            throw new IllegalArgumentException(\"Media doesn't have subtitle\");\n        }\n\n        if (!mMedia.subtitles.containsKey(mCurrentSubsLang)) {\n            mSubs = null;\n            onSubtitleEnabledStateChanged(false);\n            throw new IllegalArgumentException(\"Media doesn't have subtitle with specified language\");\n        }\n\n        showTimedCaptionText(null);\n        loadOrDownloadSubtitle();\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/fragments/BaseVideoPlayerFragment.java", "stars": "4", "class_props": {"extends": "Fragment", "implements": ["IVLCVout", "TorrentServerListener", "MediaPlayer", "LibVLC", "SubtitleDownloader"], "modifiers": ["public", "abstract"]}}, {"id": 64370, "method_name": "loadOrDownloadSubtitle", "class_name": "BaseVideoPlayerFragment", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void loadOrDownloadSubtitle() {\n        if (mMedia == null) throw new NullPointerException(\"Media is not available\");\n        if (mCurrentSubsLang.equals(SubsProvider.SUBTITLE_LANGUAGE_NONE)) return;\n\n        SubtitleDownloader subtitleDownloader = new SubtitleDownloader(\n                providerManager.getCurrentSubsProvider(),\n                getActivity(), mCallback.getInfo(), mCurrentSubsLang);\n        subtitleDownloader.setSubtitleDownloaderListener(this);\n\n        try {\n            mSubsFile = SubtitleDownloader.getDownloadedSubtitleFile(getActivity(), mMedia, mCurrentSubsLang);\n            if (mSubsFile != null && mSubsFile.exists()) {\n                subtitleDownloader.parseSubtitle(mSubsFile);\n            }\n        }\n        catch (FileNotFoundException e) {\n            subtitleDownloader.downloadSubtitle();\n        }\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/fragments/BaseVideoPlayerFragment.java", "stars": "4", "class_props": {"extends": "Fragment", "implements": ["IVLCVout", "TorrentServerListener", "MediaPlayer", "LibVLC", "SubtitleDownloader"], "modifiers": ["public", "abstract"]}}, {"id": 64371, "method_name": "onNewLayout", "class_name": "BaseVideoPlayerFragment", "params": ["IVLCVout", "int", "int", "int", "int", "int", "int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onNewLayout(\n        IVLCVout vlcVout, int width, int height, int visibleWidth, int visibleHeight, int sarNum, int sarDen) {\n        if (width * height <= 0) {\n            return;\n        }\n\n        // store video size\n        mVideoWidth = width;\n        mVideoHeight = height;\n        mVideoVisibleWidth  = visibleWidth;\n        mVideoVisibleHeight = visibleHeight;\n        mSarNum = sarNum;\n        mSarDen = sarDen;\n\n        changeSurfaceLayout();\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/fragments/BaseVideoPlayerFragment.java", "stars": "4", "class_props": {"extends": "Fragment", "implements": ["IVLCVout", "TorrentServerListener", "MediaPlayer", "LibVLC", "SubtitleDownloader"], "modifiers": ["public", "abstract"]}}, {"id": 64372, "method_name": "onSubtitleEnabledStateChanged", "class_name": "BaseVideoPlayerFragment", "params": ["boolean"], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void onSubtitleEnabledStateChanged(boolean enabled) {}", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/fragments/BaseVideoPlayerFragment.java", "stars": "4", "class_props": {"extends": "Fragment", "implements": ["IVLCVout", "TorrentServerListener", "MediaPlayer", "LibVLC", "SubtitleDownloader"], "modifiers": ["public", "abstract"]}}, {"id": 64373, "method_name": "onSurfacesCreated", "class_name": "BaseVideoPlayerFragment", "params": ["IVLCVout"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onSurfacesCreated(IVLCVout ivlcVout) { }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/fragments/BaseVideoPlayerFragment.java", "stars": "4", "class_props": {"extends": "Fragment", "implements": ["IVLCVout", "TorrentServerListener", "MediaPlayer", "LibVLC", "SubtitleDownloader"], "modifiers": ["public", "abstract"]}}, {"id": 64374, "method_name": "onSurfacesDestroyed", "class_name": "BaseVideoPlayerFragment", "params": ["IVLCVout"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onSurfacesDestroyed(IVLCVout ivlcVout) { }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/fragments/BaseVideoPlayerFragment.java", "stars": "4", "class_props": {"extends": "Fragment", "implements": ["IVLCVout", "TorrentServerListener", "MediaPlayer", "LibVLC", "SubtitleDownloader"], "modifiers": ["public", "abstract"]}}, {"id": 64375, "method_name": "onEvent", "class_name": "BaseVideoPlayerFragment", "params": ["MediaPlayer"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onEvent(MediaPlayer.Event event) {\n        switch (event.type) {\n            case MediaPlayer.Event.Playing:\n                getVideoSurface().getHolder().setKeepScreenOn(true);\n                mDuration = mMediaPlayer.getLength();\n                resumeVideo();\n                setProgressVisible(false);\n                showOverlay();\n                updatePlayPauseState();\n                break;\n            case MediaPlayer.Event.Paused:\n                getVideoSurface().getHolder().setKeepScreenOn(false);\n                saveVideoCurrentTime();\n                updatePlayPauseState();\n                break;\n            case MediaPlayer.Event.Stopped:\n                getVideoSurface().getHolder().setKeepScreenOn(false);\n                updatePlayPauseState();\n                break;\n            case MediaPlayer.Event.EndReached:\n                endReached();\n                updatePlayPauseState();\n                break;\n            case MediaPlayer.Event.EncounteredError:\n                onErrorEncountered();\n                updatePlayPauseState();\n                break;\n            case MediaPlayer.Event.Opening:\n                setProgressVisible(true);\n                mDuration = mMediaPlayer.getLength();\n                mMediaPlayer.play();\n                break;\n            case MediaPlayer.Event.TimeChanged:\n            case MediaPlayer.Event.PositionChanged:\n                onProgressChanged(getCurrentTime(), getDuration());\n                progressSubtitleCaption();\n                break;\n        }\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/fragments/BaseVideoPlayerFragment.java", "stars": "4", "class_props": {"extends": "Fragment", "implements": ["IVLCVout", "TorrentServerListener", "MediaPlayer", "LibVLC", "SubtitleDownloader"], "modifiers": ["public", "abstract"]}}, {"id": 64376, "method_name": "eventHardwareAccelerationError", "class_name": "BaseVideoPlayerFragment", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void eventHardwareAccelerationError() {\n        handleHardwareAccelerationError();\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/fragments/BaseVideoPlayerFragment.java", "stars": "4", "class_props": {"extends": "Fragment", "implements": ["IVLCVout", "TorrentServerListener", "MediaPlayer", "LibVLC", "SubtitleDownloader"], "modifiers": ["public", "abstract"]}}, {"id": 64377, "method_name": "changeSurfaceLayout", "class_name": "BaseVideoPlayerFragment", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void changeSurfaceLayout() {\n        changeSurfaceSize(false);\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/fragments/BaseVideoPlayerFragment.java", "stars": "4", "class_props": {"extends": "Fragment", "implements": ["IVLCVout", "TorrentServerListener", "MediaPlayer", "LibVLC", "SubtitleDownloader"], "modifiers": ["public", "abstract"]}}, {"id": 64378, "method_name": "onStreamPrepared", "class_name": "BaseVideoPlayerFragment", "params": ["Torrent"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onStreamPrepared(Torrent torrent) { }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/fragments/BaseVideoPlayerFragment.java", "stars": "4", "class_props": {"extends": "Fragment", "implements": ["IVLCVout", "TorrentServerListener", "MediaPlayer", "LibVLC", "SubtitleDownloader"], "modifiers": ["public", "abstract"]}}, {"id": 64379, "method_name": "onStreamStarted", "class_name": "BaseVideoPlayerFragment", "params": ["Torrent"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onStreamStarted(Torrent torrent) { }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/fragments/BaseVideoPlayerFragment.java", "stars": "4", "class_props": {"extends": "Fragment", "implements": ["IVLCVout", "TorrentServerListener", "MediaPlayer", "LibVLC", "SubtitleDownloader"], "modifiers": ["public", "abstract"]}}, {"id": 64380, "method_name": "onStreamStopped", "class_name": "BaseVideoPlayerFragment", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onStreamStopped() { }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/fragments/BaseVideoPlayerFragment.java", "stars": "4", "class_props": {"extends": "Fragment", "implements": ["IVLCVout", "TorrentServerListener", "MediaPlayer", "LibVLC", "SubtitleDownloader"], "modifiers": ["public", "abstract"]}}, {"id": 64381, "method_name": "onStreamError", "class_name": "BaseVideoPlayerFragment", "params": ["Torrent", "Exception"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onStreamError(Torrent torrent, Exception e) { }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/fragments/BaseVideoPlayerFragment.java", "stars": "4", "class_props": {"extends": "Fragment", "implements": ["IVLCVout", "TorrentServerListener", "MediaPlayer", "LibVLC", "SubtitleDownloader"], "modifiers": ["public", "abstract"]}}, {"id": 64382, "method_name": "onStreamReady", "class_name": "BaseVideoPlayerFragment", "params": ["Torrent"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onStreamReady(Torrent torrent) { }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/fragments/BaseVideoPlayerFragment.java", "stars": "4", "class_props": {"extends": "Fragment", "implements": ["IVLCVout", "TorrentServerListener", "MediaPlayer", "LibVLC", "SubtitleDownloader"], "modifiers": ["public", "abstract"]}}, {"id": 64383, "method_name": "onServerReady", "class_name": "BaseVideoPlayerFragment", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onServerReady(String url) { }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/fragments/BaseVideoPlayerFragment.java", "stars": "4", "class_props": {"extends": "Fragment", "implements": ["IVLCVout", "TorrentServerListener", "MediaPlayer", "LibVLC", "SubtitleDownloader"], "modifiers": ["public", "abstract"]}}, {"id": 64384, "method_name": "onStreamProgress", "class_name": "BaseVideoPlayerFragment", "params": ["Torrent", "StreamStatus"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onStreamProgress(Torrent torrent, StreamStatus streamStatus) {\n        int newProgress = (int) ((getDuration() / 100) * streamStatus.progress);\n        if (mStreamerProgress < newProgress) {\n            mStreamerProgress = newProgress;\n        }\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/fragments/BaseVideoPlayerFragment.java", "stars": "4", "class_props": {"extends": "Fragment", "implements": ["IVLCVout", "TorrentServerListener", "MediaPlayer", "LibVLC", "SubtitleDownloader"], "modifiers": ["public", "abstract"]}}, {"id": 64385, "method_name": "onCreateOptionsMenu", "class_name": "BaseVideoPlayerFragment", "params": ["Menu", "MenuInflater"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onCreateOptionsMenu(Menu menu, MenuInflater inflater) {\n        super.onCreateOptionsMenu(menu, inflater);\n        inflater.inflate(R.menu.activity_player, menu);\n        menu.findItem(R.id.action_reload).setVisible(mShowReload);\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/fragments/BaseVideoPlayerFragment.java", "stars": "4", "class_props": {"extends": "Fragment", "implements": ["IVLCVout", "TorrentServerListener", "MediaPlayer", "LibVLC", "SubtitleDownloader"], "modifiers": ["public", "abstract"]}}, {"id": 64386, "method_name": "onOptionsItemSelected", "class_name": "BaseVideoPlayerFragment", "params": ["MenuItem"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean onOptionsItemSelected(MenuItem item) {\n        int i = item.getItemId();\n        if (i == R.id.action_reload) {\n            mMediaPlayer.stop();\n            Canvas canvas = new Canvas();\n            canvas.drawColor(0, PorterDuff.Mode.CLEAR);\n            getVideoSurface().draw(canvas);\n            loadMedia();\n            return true;\n        }\n        return super.onOptionsItemSelected(item);\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/fragments/BaseVideoPlayerFragment.java", "stars": "4", "class_props": {"extends": "Fragment", "implements": ["IVLCVout", "TorrentServerListener", "MediaPlayer", "LibVLC", "SubtitleDownloader"], "modifiers": ["public", "abstract"]}}, {"id": 64387, "method_name": "subsClick", "class_name": "BaseVideoPlayerFragment", "params": [], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void subsClick() {\n        if (mMedia != null && mMedia.subtitles != null) {\n            if (getChildFragmentManager().findFragmentByTag(\"overlay_fragment\") != null) return;\n\n            String[] subsOptions = {\n                    getString(R.string.subtitle_language),\n                    getString(R.string.subtitle_size),\n                    getString(R.string.subtitle_timing)\n            };\n\n            StringArraySelectorDialogFragment.show(getChildFragmentManager(), R.string.subtitle_settings, subsOptions, -1,\n                    new DialogInterface.OnClickListener() {\n                        @Override\n                        public void onClick(DialogInterface dialog, int position) {\n                            switch (position) {\n                                case 0:\n                                    subsLanguageSettings();\n                                    break;\n                                case 1:\n                                    subsSizeSettings();\n                                    break;\n                                case 2:\n                                    subsTimingSettings();\n                                    break;\n                            }\n                        }\n                    });\n        }\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/fragments/BaseVideoPlayerFragment.java", "stars": "4", "class_props": {"extends": "Fragment", "implements": ["IVLCVout", "TorrentServerListener", "MediaPlayer", "LibVLC", "SubtitleDownloader"], "modifiers": ["public", "abstract"]}}, {"id": 64388, "method_name": "subsLanguageSettings", "class_name": "BaseVideoPlayerFragment", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void subsLanguageSettings() {\n        String[] subtitles = mMedia.subtitles.keySet().toArray(new String[mMedia.subtitles.size()]);\n        Arrays.sort(subtitles);\n        final String[] adapterSubtitles = new String[subtitles.length + 2];\n        System.arraycopy(subtitles, 0, adapterSubtitles, 1, subtitles.length);\n\n        adapterSubtitles[0] = SubsProvider.SUBTITLE_LANGUAGE_NONE;\n        adapterSubtitles[adapterSubtitles.length - 1] = \"custom\";\n        String[] readableNames = new String[adapterSubtitles.length];\n\n        for (int i = 0; i < readableNames.length - 1; i++) {\n            String language = adapterSubtitles[i];\n            if (language.equals(SubsProvider.SUBTITLE_LANGUAGE_NONE)) {\n                readableNames[i] = getString(R.string.no_subs);\n            } else {\n                Locale locale = LocaleUtils.toLocale(language);\n                readableNames[i] = locale.getDisplayName(locale);\n            }\n        }\n\n        readableNames[readableNames.length - 1] = \"Custom..\";\n\n        StringArraySelectorDialogFragment.showSingleChoice(\n            getChildFragmentManager(),\n            R.string.subtitles,\n            readableNames,\n            Arrays.asList(adapterSubtitles).indexOf(mCurrentSubsLang),\n            new DialogInterface.OnClickListener() {\n                @Override\n                public void onClick(final DialogInterface dialog, int position) {\n                    if (position == adapterSubtitles.length - 1) {\n                        FileSelectorDialogFragment.show(getChildFragmentManager(), new FileSelectorDialogFragment.Listener() {\n                            @Override\n                            public void onFileSelected(File f) {\n                                if (!f.getPath().endsWith(\".srt\")) {\n                                    Snackbar.make(mRootView, R.string.unknown_error, Snackbar.LENGTH_SHORT).show();\n                                    return;\n                                }\n                                FileSelectorDialogFragment.hide();\n                                mSubsFile = f;\n                                dialog.dismiss();\n                            }\n                        });\n                        return;\n                    }\n                    onSubtitleLanguageSelected(adapterSubtitles[position]);\n                    dialog.dismiss();\n                }\n            });\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/fragments/BaseVideoPlayerFragment.java", "stars": "4", "class_props": {"extends": "Fragment", "implements": ["IVLCVout", "TorrentServerListener", "MediaPlayer", "LibVLC", "SubtitleDownloader"], "modifiers": ["public", "abstract"]}}, {"id": 64389, "method_name": "subsSizeSettings", "class_name": "BaseVideoPlayerFragment", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void subsSizeSettings() {\n        Bundle args = new Bundle();\n        args.putString(NumberPickerDialogFragment.TITLE, getString(R.string.subtitle_size));\n        args.putInt(NumberPickerDialogFragment.MAX_VALUE, 60);\n        args.putInt(NumberPickerDialogFragment.MIN_VALUE, SUBTITLE_MINIMUM_SIZE);\n        args.putInt(NumberPickerDialogFragment.DEFAULT_VALUE, getResources().getInteger(R.integer.player_subtitles_default_text_size));\n\n        NumberPickerDialogFragment dialogFragment = new NumberPickerDialogFragment();\n        dialogFragment.setArguments(args);\n        dialogFragment.setOnResultListener(new NumberPickerDialogFragment.ResultListener() {\n            @Override\n            public void onNewValue(int value) {\n                updateSubtitleSize(value);\n            }\n        });\n        dialogFragment.show(getChildFragmentManager(), \"overlay_fragment\");\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/fragments/BaseVideoPlayerFragment.java", "stars": "4", "class_props": {"extends": "Fragment", "implements": ["IVLCVout", "TorrentServerListener", "MediaPlayer", "LibVLC", "SubtitleDownloader"], "modifiers": ["public", "abstract"]}}, {"id": 64390, "method_name": "subsTimingSettings", "class_name": "BaseVideoPlayerFragment", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void subsTimingSettings() {\n        Bundle args = new Bundle();\n        args.putString(NumberPickerDialogFragment.TITLE, getString(R.string.subtitle_timing));\n        args.putInt(NumberPickerDialogFragment.MAX_VALUE, 3600);\n        args.putInt(NumberPickerDialogFragment.MIN_VALUE, -3600);\n        args.putInt(NumberPickerDialogFragment.DEFAULT_VALUE, mSubtitleOffset / 60);\n        args.putBoolean(NumberPickerDialogFragment.FOCUSABLE, true);\n\n        NumberPickerDialogFragment dialogFragment = new NumberPickerDialogFragment();\n        dialogFragment.setArguments(args);\n        dialogFragment.setOnResultListener(new NumberPickerDialogFragment.ResultListener() {\n            @Override\n            public void onNewValue(int value) {\n                mSubtitleOffset = value * 60;\n                showTimedCaptionText(null);\n            }\n        });\n        dialogFragment.show(getChildFragmentManager(), \"overlay_fragment\");\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/fragments/BaseVideoPlayerFragment.java", "stars": "4", "class_props": {"extends": "Fragment", "implements": ["IVLCVout", "TorrentServerListener", "MediaPlayer", "LibVLC", "SubtitleDownloader"], "modifiers": ["public", "abstract"]}}, {"id": 64391, "method_name": "updateSubtitleSize", "class_name": "BaseVideoPlayerFragment", "params": ["int"], "throws": null, "modifiers": ["protected", "abstract"], "return_type": "void", "snippet": "    protected abstract void updateSubtitleSize(int size);\n\n    @Override\n    public void onSubtitleDownloadCompleted(boolean isSuccessful, TimedTextObject subtitleFile) {\n        onSubtitleEnabledStateChanged(isSuccessful);\n        mSubs = subtitleFile;\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/fragments/BaseVideoPlayerFragment.java", "stars": "4", "class_props": {"extends": "Fragment", "implements": ["IVLCVout", "TorrentServerListener", "MediaPlayer", "LibVLC", "SubtitleDownloader"], "modifiers": ["public", "abstract"]}}, {"id": 64392, "method_name": "onSubtitleDownloadCompleted", "class_name": "BaseVideoPlayerFragment", "params": ["boolean", "TimedTextObject"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onSubtitleDownloadCompleted(boolean isSuccessful, TimedTextObject subtitleFile) {\n        onSubtitleEnabledStateChanged(isSuccessful);\n        mSubs = subtitleFile;\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/fragments/BaseVideoPlayerFragment.java", "stars": "4", "class_props": {"extends": "Fragment", "implements": ["IVLCVout", "TorrentServerListener", "MediaPlayer", "LibVLC", "SubtitleDownloader"], "modifiers": ["public", "abstract"]}}, {"id": 64393, "method_name": "startBeamPlayerActivity", "class_name": "BaseVideoPlayerFragment", "params": [], "throws": null, "modifiers": ["public", "abstract"], "return_type": "void", "snippet": "    public abstract void startBeamPlayerActivity();\n}\n\n", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/fragments/BaseVideoPlayerFragment.java", "stars": "4", "class_props": {"extends": "Fragment", "implements": ["IVLCVout", "TorrentServerListener", "MediaPlayer", "LibVLC", "SubtitleDownloader"], "modifiers": ["public", "abstract"]}}, {"id": 64394, "method_name": "getTitle", "class_name": "ContractTariffGroup", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "\tpublic String getTitle()\n\t{\n\t\treturn title;\n\t}", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/proto/model/tariff/ContractTariffGroup.java", "stars": "12", "class_props": {"extends": "Id", "implements": ["PeriodSet"], "modifiers": ["public"]}}, {"id": 64395, "method_name": "setTitle", "class_name": "ContractTariffGroup", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void setTitle( String title )\n\t{\n\t\tthis.title = title;\n\t}", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/proto/model/tariff/ContractTariffGroup.java", "stars": "12", "class_props": {"extends": "Id", "implements": ["PeriodSet"], "modifiers": ["public"]}}, {"id": 64396, "method_name": "getComment", "class_name": "ContractTariffGroup", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "\tpublic String getComment()\n\t{\n\t\treturn comment;\n\t}", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/proto/model/tariff/ContractTariffGroup.java", "stars": "12", "class_props": {"extends": "Id", "implements": ["PeriodSet"], "modifiers": ["public"]}}, {"id": 64397, "method_name": "setComment", "class_name": "ContractTariffGroup", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void setComment( String comment )\n\t{\n\t\tthis.comment = comment;\n\t}", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/proto/model/tariff/ContractTariffGroup.java", "stars": "12", "class_props": {"extends": "Id", "implements": ["PeriodSet"], "modifiers": ["public"]}}, {"id": 64398, "method_name": "getGroupId", "class_name": "ContractTariffGroup", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "\tpublic int getGroupId()\n\t{\n\t\treturn groupId;\n\t}", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/proto/model/tariff/ContractTariffGroup.java", "stars": "12", "class_props": {"extends": "Id", "implements": ["PeriodSet"], "modifiers": ["public"]}}, {"id": 64399, "method_name": "setGroupId", "class_name": "ContractTariffGroup", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void setGroupId( int groupId )\n\t{\n\t\tthis.groupId = groupId;\n\t}", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/proto/model/tariff/ContractTariffGroup.java", "stars": "12", "class_props": {"extends": "Id", "implements": ["PeriodSet"], "modifiers": ["public"]}}, {"id": 64400, "method_name": "getDateFrom", "class_name": "ContractTariffGroup", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Date", "snippet": "\tpublic Date getDateFrom()\n\t{\n\t\treturn dateFrom;\n\t}", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/proto/model/tariff/ContractTariffGroup.java", "stars": "12", "class_props": {"extends": "Id", "implements": ["PeriodSet"], "modifiers": ["public"]}}, {"id": 64401, "method_name": "setDateFrom", "class_name": "ContractTariffGroup", "params": ["Date"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void setDateFrom( Date dateFrom )\n\t{\n\t\tthis.dateFrom = dateFrom;\n\t}", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/proto/model/tariff/ContractTariffGroup.java", "stars": "12", "class_props": {"extends": "Id", "implements": ["PeriodSet"], "modifiers": ["public"]}}, {"id": 64402, "method_name": "getDateTo", "class_name": "ContractTariffGroup", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Date", "snippet": "\tpublic Date getDateTo()\n\t{\n\t\treturn dateTo;\n\t}", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/proto/model/tariff/ContractTariffGroup.java", "stars": "12", "class_props": {"extends": "Id", "implements": ["PeriodSet"], "modifiers": ["public"]}}, {"id": 64403, "method_name": "setDateTo", "class_name": "ContractTariffGroup", "params": ["Date"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void setDateTo( Date dateTo )\n\t{\n\t\tthis.dateTo = dateTo;\n\t}", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/proto/model/tariff/ContractTariffGroup.java", "stars": "12", "class_props": {"extends": "Id", "implements": ["PeriodSet"], "modifiers": ["public"]}}, {"id": 64404, "method_name": "instance", "class_name": "ErrorContext", "params": [], "throws": null, "modifiers": ["public", "static"], "return_type": "ErrorContext", "snippet": "  public static ErrorContext instance() {\n    ErrorContext context = LOCAL.get();\n    if (context == null) {\n      context = new ErrorContext();\n      LOCAL.set(context);\n    }\n    return context;\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/executor/ErrorContext.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 64405, "method_name": "store", "class_name": "ErrorContext", "params": [], "throws": null, "modifiers": ["public"], "return_type": "ErrorContext", "snippet": "  public ErrorContext store() {\n    ErrorContext newContext = new ErrorContext();\n    newContext.stored = this;\n    LOCAL.set(newContext);\n    return LOCAL.get();\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/executor/ErrorContext.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 64406, "method_name": "recall", "class_name": "ErrorContext", "params": [], "throws": null, "modifiers": ["public"], "return_type": "ErrorContext", "snippet": "  public ErrorContext recall() {\n    if (stored != null) {\n      LOCAL.set(stored);\n      stored = null;\n    }\n    return LOCAL.get();\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/executor/ErrorContext.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 64407, "method_name": "resource", "class_name": "ErrorContext", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "ErrorContext", "snippet": "  public ErrorContext resource(String resource) {\n    this.resource = resource;\n    return this;\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/executor/ErrorContext.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 64408, "method_name": "activity", "class_name": "ErrorContext", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "ErrorContext", "snippet": "  public ErrorContext activity(String activity) {\n    this.activity = activity;\n    return this;\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/executor/ErrorContext.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 64409, "method_name": "object", "class_name": "ErrorContext", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "ErrorContext", "snippet": "  public ErrorContext object(String object) {\n    this.object = object;\n    return this;\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/executor/ErrorContext.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 64410, "method_name": "message", "class_name": "ErrorContext", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "ErrorContext", "snippet": "  public ErrorContext message(String message) {\n    this.message = message;\n    return this;\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/executor/ErrorContext.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 64411, "method_name": "sql", "class_name": "ErrorContext", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "ErrorContext", "snippet": "  public ErrorContext sql(String sql) {\n    this.sql = sql;\n    return this;\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/executor/ErrorContext.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 64412, "method_name": "cause", "class_name": "ErrorContext", "params": ["Throwable"], "throws": null, "modifiers": ["public"], "return_type": "ErrorContext", "snippet": "  public ErrorContext cause(Throwable cause) {\n    this.cause = cause;\n    return this;\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/executor/ErrorContext.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 64413, "method_name": "reset", "class_name": "ErrorContext", "params": [], "throws": null, "modifiers": ["public"], "return_type": "ErrorContext", "snippet": "  public ErrorContext reset() {\n    resource = null;\n    activity = null;\n    object = null;\n    message = null;\n    sql = null;\n    cause = null;\n    LOCAL.remove();\n    return this;\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/executor/ErrorContext.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 64414, "method_name": "toString", "class_name": "ErrorContext", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "  public String toString() {\n    StringBuilder description = new StringBuilder();\n\n    // message\n    if (this.message != null) {\n      description.append(LINE_SEPARATOR);\n      description.append(\"### \");\n      description.append(this.message);\n    }\n\n    // resource\n    if (resource != null) {\n      description.append(LINE_SEPARATOR);\n      description.append(\"### The error may exist in \");\n      description.append(resource);\n    }\n\n    // object\n    if (object != null) {\n      description.append(LINE_SEPARATOR);\n      description.append(\"### The error may involve \");\n      description.append(object);\n    }\n\n    // activity\n    if (activity != null) {\n      description.append(LINE_SEPARATOR);\n      description.append(\"### The error occurred while \");\n      description.append(activity);\n    }\n\n    // sql\n    if (sql != null) {\n      description.append(LINE_SEPARATOR);\n      description.append(\"### SQL: \");\n      description.append(sql.replace('\\n', ' ').replace('\\r', ' ').replace('\\t', ' ').trim());\n    }\n\n    // cause\n    if (cause != null) {\n      description.append(LINE_SEPARATOR);\n      description.append(\"### Cause: \");\n      description.append(cause.toString());\n    }\n\n    return description.toString();\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/executor/ErrorContext.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 64415, "method_name": "exec", "class_name": "LoginForm", "params": ["HttpServletRequest", "HttpServletResponse"], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "\tpublic String exec(HttpServletRequest req, HttpServletResponse resp) {\n\t\tString view = \"/member/Login.jsp\";\n\t\treturn view;\n\t}", "url": "https://raw.githubusercontent.com/increpas-cls2/clsProj/branch/clsProj/src/com/increpas/www/controller/member/LoginForm.java", "stars": "2", "class_props": {"extends": null, "implements": ["ClsController"], "modifiers": ["public"]}}, {"id": 64416, "method_name": "longestCommonPrefix", "class_name": "LongestCommonPrefix", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String longestCommonPrefix(String[] strs) {\n        if(strs.length == 0)\n            return \"\";\n\n        String prefix = \"\";\n        char[] chars = strs[0].toCharArray();\n        Stack<String> letters = new Stack<>();\n\n        for(int i = chars.length - 1; i >= 0; i --){\n            letters.push(String.valueOf(chars[i]));\n        }\n\n        while(true){\n            if(letters.isEmpty())\n                return prefix;\n            prefix += letters.pop();\n            for(int i = 1; i < strs.length; i ++){\n                if(strs[i].indexOf(prefix) != 0){\n                    return prefix.substring(0, prefix.length() - 1);\n                }\n            }\n        }\n    }", "url": "https://raw.githubusercontent.com/nishantc1527/LeetCode/master/src/LongestCommonPrefix.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 64417, "method_name": "expire", "class_name": "RedisUtil", "params": ["String", "long"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean expire(String key, long time) {\n        try {\n            if (time > 0) {\n                redisTemplate.expire(key, time, TimeUnit.SECONDS);\n            }\n            return true;\n        } catch (Exception e) {\n            log.error(e.getMessage(),e);\n            return false;\n        }\n    }", "url": "https://raw.githubusercontent.com/201206030/novel-plus/master/novel-admin/src/main/java/com/java2nb/common/utils/RedisUtil.java", "stars": "137", "class_props": {"extends": null, "implements": null, "modifiers": ["final", "public"]}}, {"id": 64418, "method_name": "getExpire", "class_name": "RedisUtil", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "long", "snippet": "    public long getExpire(String key) {\n        return redisTemplate.getExpire(key, TimeUnit.SECONDS);\n    }", "url": "https://raw.githubusercontent.com/201206030/novel-plus/master/novel-admin/src/main/java/com/java2nb/common/utils/RedisUtil.java", "stars": "137", "class_props": {"extends": null, "implements": null, "modifiers": ["final", "public"]}}, {"id": 64419, "method_name": "hasKey", "class_name": "RedisUtil", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean hasKey(String key) {\n        try {\n            return redisTemplate.hasKey(key);\n        } catch (Exception e) {\n            log.error(e.getMessage(),e);\n            return false;\n        }\n    }", "url": "https://raw.githubusercontent.com/201206030/novel-plus/master/novel-admin/src/main/java/com/java2nb/common/utils/RedisUtil.java", "stars": "137", "class_props": {"extends": null, "implements": null, "modifiers": ["final", "public"]}}, {"id": 64420, "method_name": "del", "class_name": "RedisUtil", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void del(String... key) {\n        if (key != null && key.length > 0) {\n            if (key.length == 1) {\n                redisTemplate.delete(key[0]);\n            } else {\n                redisTemplate.delete(CollectionUtils.arrayToList(key));\n            }\n        }\n    }", "url": "https://raw.githubusercontent.com/201206030/novel-plus/master/novel-admin/src/main/java/com/java2nb/common/utils/RedisUtil.java", "stars": "137", "class_props": {"extends": null, "implements": null, "modifiers": ["final", "public"]}}, {"id": 64421, "method_name": "get", "class_name": "RedisUtil", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "Object", "snippet": "    public Object get(String key) {\n        return key == null ? null : redisTemplate.opsForValue().get(key);\n    }", "url": "https://raw.githubusercontent.com/201206030/novel-plus/master/novel-admin/src/main/java/com/java2nb/common/utils/RedisUtil.java", "stars": "137", "class_props": {"extends": null, "implements": null, "modifiers": ["final", "public"]}}, {"id": 64422, "method_name": "set", "class_name": "RedisUtil", "params": ["String", "Object"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean set(String key, Object value) {\n        try {\n            redisTemplate.opsForValue().set(key, value);\n            return true;\n        } catch (Exception e) {\n            log.error(e.getMessage(),e);\n            return false;\n        }\n    }", "url": "https://raw.githubusercontent.com/201206030/novel-plus/master/novel-admin/src/main/java/com/java2nb/common/utils/RedisUtil.java", "stars": "137", "class_props": {"extends": null, "implements": null, "modifiers": ["final", "public"]}}, {"id": 64423, "method_name": "set", "class_name": "RedisUtil", "params": ["String", "Object", "long"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean set(String key, Object value, long time) {\n        try {\n            if (time > 0) {\n                redisTemplate.opsForValue().set(key, value, time, TimeUnit.SECONDS);\n            } else {\n                set(key, value);\n            }\n            return true;\n        } catch (Exception e) {\n            log.error(e.getMessage(),e);\n            return false;\n        }\n    }", "url": "https://raw.githubusercontent.com/201206030/novel-plus/master/novel-admin/src/main/java/com/java2nb/common/utils/RedisUtil.java", "stars": "137", "class_props": {"extends": null, "implements": null, "modifiers": ["final", "public"]}}, {"id": 64424, "method_name": "incr", "class_name": "RedisUtil", "params": ["String", "long"], "throws": null, "modifiers": ["public"], "return_type": "long", "snippet": "    public long incr(String key, long delta) {\n        if (delta < 0) {\n            throw new RuntimeException(\"\u9012\u589e\u56e0\u5b50\u5fc5\u987b\u5927\u4e8e0\");\n        }\n        return redisTemplate.opsForValue().increment(key, delta);\n    }", "url": "https://raw.githubusercontent.com/201206030/novel-plus/master/novel-admin/src/main/java/com/java2nb/common/utils/RedisUtil.java", "stars": "137", "class_props": {"extends": null, "implements": null, "modifiers": ["final", "public"]}}, {"id": 64425, "method_name": "decr", "class_name": "RedisUtil", "params": ["String", "long"], "throws": null, "modifiers": ["public"], "return_type": "long", "snippet": "    public long decr(String key, long delta) {\n        if (delta < 0) {\n            throw new RuntimeException(\"\u9012\u51cf\u56e0\u5b50\u5fc5\u987b\u5927\u4e8e0\");\n        }\n        return redisTemplate.opsForValue().increment(key, -delta);\n    }", "url": "https://raw.githubusercontent.com/201206030/novel-plus/master/novel-admin/src/main/java/com/java2nb/common/utils/RedisUtil.java", "stars": "137", "class_props": {"extends": null, "implements": null, "modifiers": ["final", "public"]}}, {"id": 64426, "method_name": "hget", "class_name": "RedisUtil", "params": ["String", "String"], "throws": null, "modifiers": ["public"], "return_type": "Object", "snippet": "    public Object hget(String key, String item) {\n        return redisTemplate.opsForHash().get(key, item);\n    }", "url": "https://raw.githubusercontent.com/201206030/novel-plus/master/novel-admin/src/main/java/com/java2nb/common/utils/RedisUtil.java", "stars": "137", "class_props": {"extends": null, "implements": null, "modifiers": ["final", "public"]}}, {"id": 64427, "method_name": "hmget", "class_name": "RedisUtil", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "Map<Object,Object>", "snippet": "    public Map<Object, Object> hmget(String key) {\n        return redisTemplate.opsForHash().entries(key);\n    }", "url": "https://raw.githubusercontent.com/201206030/novel-plus/master/novel-admin/src/main/java/com/java2nb/common/utils/RedisUtil.java", "stars": "137", "class_props": {"extends": null, "implements": null, "modifiers": ["final", "public"]}}, {"id": 64428, "method_name": "hmset", "class_name": "RedisUtil", "params": ["String", "Map<String,Object>"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean hmset(String key, Map<String, Object> map) {\n        try {\n            redisTemplate.opsForHash().putAll(key, map);\n            return true;\n        } catch (Exception e) {\n            log.error(e.getMessage(),e);\n            return false;\n        }\n    }", "url": "https://raw.githubusercontent.com/201206030/novel-plus/master/novel-admin/src/main/java/com/java2nb/common/utils/RedisUtil.java", "stars": "137", "class_props": {"extends": null, "implements": null, "modifiers": ["final", "public"]}}, {"id": 64429, "method_name": "hmset", "class_name": "RedisUtil", "params": ["String", "Map<String,Object>", "long"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean hmset(String key, Map<String, Object> map, long time) {\n        try {\n            redisTemplate.opsForHash().putAll(key, map);\n            if (time > 0) {\n                expire(key, time);\n            }\n            return true;\n        } catch (Exception e) {\n            log.error(e.getMessage(),e);\n            return false;\n        }\n    }", "url": "https://raw.githubusercontent.com/201206030/novel-plus/master/novel-admin/src/main/java/com/java2nb/common/utils/RedisUtil.java", "stars": "137", "class_props": {"extends": null, "implements": null, "modifiers": ["final", "public"]}}, {"id": 64430, "method_name": "hset", "class_name": "RedisUtil", "params": ["String", "String", "Object"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean hset(String key, String item, Object value) {\n        try {\n            redisTemplate.opsForHash().put(key, item, value);\n            return true;\n        } catch (Exception e) {\n            log.error(e.getMessage(),e);\n            return false;\n        }\n    }", "url": "https://raw.githubusercontent.com/201206030/novel-plus/master/novel-admin/src/main/java/com/java2nb/common/utils/RedisUtil.java", "stars": "137", "class_props": {"extends": null, "implements": null, "modifiers": ["final", "public"]}}, {"id": 64431, "method_name": "hset", "class_name": "RedisUtil", "params": ["String", "String", "Object", "long"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean hset(String key, String item, Object value, long time) {\n        try {\n            redisTemplate.opsForHash().put(key, item, value);\n            if (time > 0) {\n                expire(key, time);\n            }\n            return true;\n        } catch (Exception e) {\n            log.error(e.getMessage(),e);\n            return false;\n        }\n    }", "url": "https://raw.githubusercontent.com/201206030/novel-plus/master/novel-admin/src/main/java/com/java2nb/common/utils/RedisUtil.java", "stars": "137", "class_props": {"extends": null, "implements": null, "modifiers": ["final", "public"]}}, {"id": 64432, "method_name": "hdel", "class_name": "RedisUtil", "params": ["String", "Object"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void hdel(String key, Object... item) {\n        redisTemplate.opsForHash().delete(key, item);\n    }", "url": "https://raw.githubusercontent.com/201206030/novel-plus/master/novel-admin/src/main/java/com/java2nb/common/utils/RedisUtil.java", "stars": "137", "class_props": {"extends": null, "implements": null, "modifiers": ["final", "public"]}}, {"id": 64433, "method_name": "hHasKey", "class_name": "RedisUtil", "params": ["String", "String"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean hHasKey(String key, String item) {\n        return redisTemplate.opsForHash().hasKey(key, item);\n    }", "url": "https://raw.githubusercontent.com/201206030/novel-plus/master/novel-admin/src/main/java/com/java2nb/common/utils/RedisUtil.java", "stars": "137", "class_props": {"extends": null, "implements": null, "modifiers": ["final", "public"]}}, {"id": 64434, "method_name": "hincr", "class_name": "RedisUtil", "params": ["String", "String", "double"], "throws": null, "modifiers": ["public"], "return_type": "double", "snippet": "    public double hincr(String key, String item, double by) {\n        return redisTemplate.opsForHash().increment(key, item, by);\n    }", "url": "https://raw.githubusercontent.com/201206030/novel-plus/master/novel-admin/src/main/java/com/java2nb/common/utils/RedisUtil.java", "stars": "137", "class_props": {"extends": null, "implements": null, "modifiers": ["final", "public"]}}, {"id": 64435, "method_name": "hdecr", "class_name": "RedisUtil", "params": ["String", "String", "double"], "throws": null, "modifiers": ["public"], "return_type": "double", "snippet": "    public double hdecr(String key, String item, double by) {\n        return redisTemplate.opsForHash().increment(key, item, -by);\n    }", "url": "https://raw.githubusercontent.com/201206030/novel-plus/master/novel-admin/src/main/java/com/java2nb/common/utils/RedisUtil.java", "stars": "137", "class_props": {"extends": null, "implements": null, "modifiers": ["final", "public"]}}, {"id": 64436, "method_name": "sGet", "class_name": "RedisUtil", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "Set<Object>", "snippet": "    public Set<Object> sGet(String key) {\n        try {\n            return redisTemplate.opsForSet().members(key);\n        } catch (Exception e) {\n            log.error(e.getMessage(),e);\n            return null;\n        }\n    }", "url": "https://raw.githubusercontent.com/201206030/novel-plus/master/novel-admin/src/main/java/com/java2nb/common/utils/RedisUtil.java", "stars": "137", "class_props": {"extends": null, "implements": null, "modifiers": ["final", "public"]}}, {"id": 64437, "method_name": "sHasKey", "class_name": "RedisUtil", "params": ["String", "Object"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean sHasKey(String key, Object value) {\n        try {\n            return redisTemplate.opsForSet().isMember(key, value);\n        } catch (Exception e) {\n            log.error(e.getMessage(),e);\n            return false;\n        }\n    }", "url": "https://raw.githubusercontent.com/201206030/novel-plus/master/novel-admin/src/main/java/com/java2nb/common/utils/RedisUtil.java", "stars": "137", "class_props": {"extends": null, "implements": null, "modifiers": ["final", "public"]}}, {"id": 64438, "method_name": "sSet", "class_name": "RedisUtil", "params": ["String", "Object"], "throws": null, "modifiers": ["public"], "return_type": "long", "snippet": "    public long sSet(String key, Object... values) {\n        try {\n            return redisTemplate.opsForSet().add(key, values);\n        } catch (Exception e) {\n            log.error(e.getMessage(),e);\n            return 0;\n        }\n    }", "url": "https://raw.githubusercontent.com/201206030/novel-plus/master/novel-admin/src/main/java/com/java2nb/common/utils/RedisUtil.java", "stars": "137", "class_props": {"extends": null, "implements": null, "modifiers": ["final", "public"]}}, {"id": 64439, "method_name": "sSetAndTime", "class_name": "RedisUtil", "params": ["String", "long", "Object"], "throws": null, "modifiers": ["public"], "return_type": "long", "snippet": "    public long sSetAndTime(String key, long time, Object... values) {\n        try {\n            Long count = redisTemplate.opsForSet().add(key, values);\n            if (time > 0)\n                expire(key, time);\n            return count;\n        } catch (Exception e) {\n            log.error(e.getMessage(),e);\n            return 0;\n        }\n    }", "url": "https://raw.githubusercontent.com/201206030/novel-plus/master/novel-admin/src/main/java/com/java2nb/common/utils/RedisUtil.java", "stars": "137", "class_props": {"extends": null, "implements": null, "modifiers": ["final", "public"]}}, {"id": 64440, "method_name": "sGetSetSize", "class_name": "RedisUtil", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "long", "snippet": "    public long sGetSetSize(String key) {\n        try {\n            return redisTemplate.opsForSet().size(key);\n        } catch (Exception e) {\n            log.error(e.getMessage(),e);\n            return 0;\n        }\n    }", "url": "https://raw.githubusercontent.com/201206030/novel-plus/master/novel-admin/src/main/java/com/java2nb/common/utils/RedisUtil.java", "stars": "137", "class_props": {"extends": null, "implements": null, "modifiers": ["final", "public"]}}, {"id": 64441, "method_name": "setRemove", "class_name": "RedisUtil", "params": ["String", "Object"], "throws": null, "modifiers": ["public"], "return_type": "long", "snippet": "    public long setRemove(String key, Object... values) {\n        try {\n            Long count = redisTemplate.opsForSet().remove(key, values);\n            return count;\n        } catch (Exception e) {\n            log.error(e.getMessage(),e);\n            return 0;\n        }\n    }", "url": "https://raw.githubusercontent.com/201206030/novel-plus/master/novel-admin/src/main/java/com/java2nb/common/utils/RedisUtil.java", "stars": "137", "class_props": {"extends": null, "implements": null, "modifiers": ["final", "public"]}}, {"id": 64442, "method_name": "lGet", "class_name": "RedisUtil", "params": ["String", "long", "long"], "throws": null, "modifiers": ["public"], "return_type": "List<Object>", "snippet": "    public List<Object> lGet(String key, long start, long end) {\n        try {\n            return redisTemplate.opsForList().range(key, start, end);\n        } catch (Exception e) {\n            log.error(e.getMessage(),e);\n            return null;\n        }\n    }", "url": "https://raw.githubusercontent.com/201206030/novel-plus/master/novel-admin/src/main/java/com/java2nb/common/utils/RedisUtil.java", "stars": "137", "class_props": {"extends": null, "implements": null, "modifiers": ["final", "public"]}}, {"id": 64443, "method_name": "lGetListSize", "class_name": "RedisUtil", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "long", "snippet": "    public long lGetListSize(String key) {\n        try {\n            return redisTemplate.opsForList().size(key);\n        } catch (Exception e) {\n            log.error(e.getMessage(),e);\n            return 0;\n        }\n    }", "url": "https://raw.githubusercontent.com/201206030/novel-plus/master/novel-admin/src/main/java/com/java2nb/common/utils/RedisUtil.java", "stars": "137", "class_props": {"extends": null, "implements": null, "modifiers": ["final", "public"]}}, {"id": 64444, "method_name": "lGetIndex", "class_name": "RedisUtil", "params": ["String", "long"], "throws": null, "modifiers": ["public"], "return_type": "Object", "snippet": "    public Object lGetIndex(String key, long index) {\n        try {\n            return redisTemplate.opsForList().index(key, index);\n        } catch (Exception e) {\n            log.error(e.getMessage(),e);\n            return null;\n        }\n    }", "url": "https://raw.githubusercontent.com/201206030/novel-plus/master/novel-admin/src/main/java/com/java2nb/common/utils/RedisUtil.java", "stars": "137", "class_props": {"extends": null, "implements": null, "modifiers": ["final", "public"]}}, {"id": 64445, "method_name": "lSet", "class_name": "RedisUtil", "params": ["String", "Object"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean lSet(String key, Object value) {\n        try {\n            redisTemplate.opsForList().rightPush(key, value);\n            return true;\n        } catch (Exception e) {\n            log.error(e.getMessage(),e);\n            return false;\n        }\n    }", "url": "https://raw.githubusercontent.com/201206030/novel-plus/master/novel-admin/src/main/java/com/java2nb/common/utils/RedisUtil.java", "stars": "137", "class_props": {"extends": null, "implements": null, "modifiers": ["final", "public"]}}, {"id": 64446, "method_name": "lSet", "class_name": "RedisUtil", "params": ["String", "Object", "long"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean lSet(String key, Object value, long time) {\n        try {\n            redisTemplate.opsForList().rightPush(key, value);\n            if (time > 0)\n                expire(key, time);\n            return true;\n        } catch (Exception e) {\n            log.error(e.getMessage(),e);\n            return false;\n        }\n    }", "url": "https://raw.githubusercontent.com/201206030/novel-plus/master/novel-admin/src/main/java/com/java2nb/common/utils/RedisUtil.java", "stars": "137", "class_props": {"extends": null, "implements": null, "modifiers": ["final", "public"]}}, {"id": 64447, "method_name": "lSet", "class_name": "RedisUtil", "params": ["String", "List<Object>"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean lSet(String key, List<Object> value) {\n        try {\n            redisTemplate.opsForList().rightPushAll(key, value);\n            return true;\n        } catch (Exception e) {\n            log.error(e.getMessage(),e);\n            return false;\n        }\n    }", "url": "https://raw.githubusercontent.com/201206030/novel-plus/master/novel-admin/src/main/java/com/java2nb/common/utils/RedisUtil.java", "stars": "137", "class_props": {"extends": null, "implements": null, "modifiers": ["final", "public"]}}, {"id": 64448, "method_name": "lSet", "class_name": "RedisUtil", "params": ["String", "List<Object>", "long"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean lSet(String key, List<Object> value, long time) {\n        try {\n            redisTemplate.opsForList().rightPushAll(key, value);\n            if (time > 0)\n                expire(key, time);\n            return true;\n        } catch (Exception e) {\n            log.error(e.getMessage(),e);\n            return false;\n        }\n    }", "url": "https://raw.githubusercontent.com/201206030/novel-plus/master/novel-admin/src/main/java/com/java2nb/common/utils/RedisUtil.java", "stars": "137", "class_props": {"extends": null, "implements": null, "modifiers": ["final", "public"]}}, {"id": 64449, "method_name": "lUpdateIndex", "class_name": "RedisUtil", "params": ["String", "long", "Object"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean lUpdateIndex(String key, long index, Object value) {\n        try {\n            redisTemplate.opsForList().set(key, index, value);\n            return true;\n        } catch (Exception e) {\n            log.error(e.getMessage(),e);\n            return false;\n        }\n    }", "url": "https://raw.githubusercontent.com/201206030/novel-plus/master/novel-admin/src/main/java/com/java2nb/common/utils/RedisUtil.java", "stars": "137", "class_props": {"extends": null, "implements": null, "modifiers": ["final", "public"]}}, {"id": 64450, "method_name": "lRemove", "class_name": "RedisUtil", "params": ["String", "long", "Object"], "throws": null, "modifiers": ["public"], "return_type": "long", "snippet": "    public long lRemove(String key, long count, Object value) {\n        try {\n            Long remove = redisTemplate.opsForList().remove(key, count, value);\n            return remove;\n        } catch (Exception e) {\n            log.error(e.getMessage(),e);\n            return 0;\n        }\n    }", "url": "https://raw.githubusercontent.com/201206030/novel-plus/master/novel-admin/src/main/java/com/java2nb/common/utils/RedisUtil.java", "stars": "137", "class_props": {"extends": null, "implements": null, "modifiers": ["final", "public"]}}, {"id": 64451, "method_name": "seedUser", "class_name": "ApiexampleApplication", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void seedUser() {\n        if (userRepository.findByUsername(\"test\") == null) {\n            String encodedPassword = passwordEncoder.encode(\"12345\");\n            ApplicationUser user = new ApplicationUser(1, \"test\", encodedPassword);\n            userRepository.save(user);\n        }\n    }", "url": "https://raw.githubusercontent.com/fawad1997/SpringWebAPI/master/src/main/java/com/restfulspring/apiexample/ApiexampleApplication.java", "stars": "14", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 64452, "method_name": "main", "class_name": "ApiexampleApplication", "params": ["String"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void main(String[] args) {\n        SpringApplication.run(ApiexampleApplication.class, args);\n    }", "url": "https://raw.githubusercontent.com/fawad1997/SpringWebAPI/master/src/main/java/com/restfulspring/apiexample/ApiexampleApplication.java", "stars": "14", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 64453, "method_name": "scanHandler", "class_name": "PackageHandlerProcessor", "params": ["String"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void scanHandler(String packageName) {\n        Set<Class<?>> packages = ClassUtil.scanPackageBySuper(packageName, PackageHandler.class);\n        for (Class<?> aPackage : packages) {\n            try {\n                registerHandler((PackageHandler<? extends ProtocolBody>) aPackage.newInstance());\n            } catch (InstantiationException | IllegalAccessException e) {\n                e.printStackTrace();\n            }\n        }\n    }", "url": "https://raw.githubusercontent.com/taoroot/taoiot/master/src/main/java/com/github/taoroot/taoiot/netty/tcp/core/PackageHandlerProcessor.java", "stars": "6", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 64454, "method_name": "registerHandler", "class_name": "PackageHandlerProcessor", "params": ["PackageHandler<ProtocolBody>"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void registerHandler(PackageHandler<? extends ProtocolBody> packageHandler) {\n        // \u4ece\u6cdb\u578b\u63a5\u53e3\u4e2d\u62ff\u51fa\u7c7b\u578b\n        ParameterizedType parameterizedType = (ParameterizedType) packageHandler.getClass().getGenericInterfaces()[0];\n        Type actualTypeArgument = parameterizedType.getActualTypeArguments()[0];\n        if (!CACHE_MAP.containsKey(actualTypeArgument.getTypeName())) {\n            CACHE_MAP.put(actualTypeArgument.getTypeName(), packageHandler);\n            log.debug(\"Register Handler: {} {}\", actualTypeArgument.getTypeName(), packageHandler.getClass().getName());\n        }\n    }", "url": "https://raw.githubusercontent.com/taoroot/taoiot/master/src/main/java/com/github/taoroot/taoiot/netty/tcp/core/PackageHandlerProcessor.java", "stars": "6", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 64455, "method_name": "getHandler", "class_name": "PackageHandlerProcessor", "params": ["Class<ProtocolBody>"], "throws": null, "modifiers": ["public", "static"], "return_type": "PackageHandler<ProtocolBody>", "snippet": "    public static PackageHandler<? extends ProtocolBody> getHandler(Class<? extends ProtocolBody> classType) {\n        return CACHE_MAP.get(classType.getName());\n    }", "url": "https://raw.githubusercontent.com/taoroot/taoiot/master/src/main/java/com/github/taoroot/taoiot/netty/tcp/core/PackageHandlerProcessor.java", "stars": "6", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 64456, "method_name": "getInstance", "class_name": "JobRegistryMonitorHelper", "params": [], "throws": null, "modifiers": ["public", "static"], "return_type": "JobRegistryMonitorHelper", "snippet": "\tpublic static JobRegistryMonitorHelper getInstance(){\n\t\treturn instance;\n\t}", "url": "https://raw.githubusercontent.com/miaoo92/xxl-job-mongo/master/src/main/java/com/avon/rga/core/thread/JobRegistryMonitorHelper.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 64457, "method_name": "start", "class_name": "JobRegistryMonitorHelper", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void start(){\n\t\tregistryThread = new Thread(new Runnable() {\n\t\t\t@Override\n\t\t\tpublic void run() {\n\t\t\t\twhile (!toStop) {\n\t\t\t\t\ttry {\n\t\t\t\t\t\t// auto registry group\n\t\t\t\t\t\tList<XxlJobGroup> groupList = XxlJobAdminConfig.getAdminConfig().getXxlJobGroupDao().findByAddressType(0);\n\t\t\t\t\t\tif (groupList!=null && !groupList.isEmpty()) {\n\n\t\t\t\t\t\t\t// remove dead address (admin/executor)\n\t\t\t\t\t\t\tList<Integer> ids = XxlJobAdminConfig.getAdminConfig().getXxlJobRegistryDao().findDead(RegistryConfig.DEAD_TIMEOUT, new Date());\n\t\t\t\t\t\t\tif (ids!=null && ids.size()>0) {\n\t\t\t\t\t\t\t\tXxlJobAdminConfig.getAdminConfig().getXxlJobRegistryDao().removeDead(ids);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t// fresh online address (admin/executor)\n\t\t\t\t\t\t\tHashMap<String, List<String>> appAddressMap = new HashMap<String, List<String>>();\n\t\t\t\t\t\t\tList<XxlJobRegistry> list = XxlJobAdminConfig.getAdminConfig().getXxlJobRegistryDao().findAll(RegistryConfig.DEAD_TIMEOUT, new Date());\n\t\t\t\t\t\t\tif (list != null) {\n\t\t\t\t\t\t\t\tfor (XxlJobRegistry item: list) {\n\t\t\t\t\t\t\t\t\tif (RegistryConfig.RegistType.EXECUTOR.name().equals(item.getRegistryGroup())) {\n\t\t\t\t\t\t\t\t\t\tString appName = item.getRegistryKey();\n\t\t\t\t\t\t\t\t\t\tList<String> registryList = appAddressMap.get(appName);\n\t\t\t\t\t\t\t\t\t\tif (registryList == null) {\n\t\t\t\t\t\t\t\t\t\t\tregistryList = new ArrayList<String>();\n\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\tif (!registryList.contains(item.getRegistryValue())) {\n\t\t\t\t\t\t\t\t\t\t\tregistryList.add(item.getRegistryValue());\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\tappAddressMap.put(appName, registryList);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t// fresh group address\n\t\t\t\t\t\t\tfor (XxlJobGroup group: groupList) {\n\t\t\t\t\t\t\t\tList<String> registryList = appAddressMap.get(group.getAppName());\n\t\t\t\t\t\t\t\tString addressListStr = null;\n\t\t\t\t\t\t\t\tif (registryList!=null && !registryList.isEmpty()) {\n\t\t\t\t\t\t\t\t\tCollections.sort(registryList);\n\t\t\t\t\t\t\t\t\taddressListStr = \"\";\n\t\t\t\t\t\t\t\t\tfor (String item:registryList) {\n\t\t\t\t\t\t\t\t\t\taddressListStr += item + \",\";\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\taddressListStr = addressListStr.substring(0, addressListStr.length()-1);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tgroup.setAddressList(addressListStr);\n\t\t\t\t\t\t\t\tXxlJobAdminConfig.getAdminConfig().getXxlJobGroupDao().update(group);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t} catch (Exception e) {\n\t\t\t\t\t\tif (!toStop) {\n\t\t\t\t\t\t\tlogger.error(\">>>>>>>>>>> xxl-job, job registry monitor thread error:{}\", e);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\ttry {\n\t\t\t\t\t\tTimeUnit.SECONDS.sleep(RegistryConfig.BEAT_TIMEOUT);\n\t\t\t\t\t} catch (InterruptedException e) {\n\t\t\t\t\t\tif (!toStop) {\n\t\t\t\t\t\t\tlogger.error(\">>>>>>>>>>> xxl-job, job registry monitor thread error:{}\", e);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tlogger.info(\">>>>>>>>>>> xxl-job, job registry monitor thread stop\");\n\t\t\t}\n\t\t});\n\t\tregistryThread.setDaemon(true);\n\t\tregistryThread.setName(\"xxl-job, admin JobRegistryMonitorHelper\");\n\t\tregistryThread.start();\n\t}", "url": "https://raw.githubusercontent.com/miaoo92/xxl-job-mongo/master/src/main/java/com/avon/rga/core/thread/JobRegistryMonitorHelper.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 64458, "method_name": "toStop", "class_name": "JobRegistryMonitorHelper", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void toStop(){\n\t\ttoStop = true;\n\t\t// interrupt and wait\n\t\tregistryThread.interrupt();\n\t\ttry {\n\t\t\tregistryThread.join();\n\t\t} catch (InterruptedException e) {\n\t\t\tlogger.error(e.getMessage(), e);\n\t\t}\n\t}", "url": "https://raw.githubusercontent.com/miaoo92/xxl-job-mongo/master/src/main/java/com/avon/rga/core/thread/JobRegistryMonitorHelper.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 64459, "method_name": "read", "class_name": "ZipCycleInputStream", "params": [], "throws": ["IOException"], "modifiers": ["public"], "return_type": "int", "snippet": "    public int read() throws IOException {\n        // \u5b9a\u4f4d\u4e00\u4e2aEntry\u6570\u636e\u6d41\u7684\u5f00\u5934\n        if (null == this.currentZipEntry) {\n            this.currentZipEntry = this.zipInputStream.getNextEntry();\n            if (null == this.currentZipEntry) {\n                return -1;\n            } else {\n                LOG.info(String.format(\"Validate zipEntry with name: %s\",\n                        this.currentZipEntry.getName()));\n            }\n        }\n\n        // \u4e0d\u652f\u6301zip\u4e0b\u7684\u5d4c\u5957, \u5bf9\u4e8e\u76ee\u5f55\u8df3\u8fc7\n        if (this.currentZipEntry.isDirectory()) {\n            LOG.warn(String.format(\"meet a directory %s, ignore...\",\n                    this.currentZipEntry.getName()));\n            this.currentZipEntry = null;\n            return this.read();\n        }\n\n        // \u8bfb\u53d6\u4e00\u4e2aEntry\u6570\u636e\u6d41\n        int result = this.zipInputStream.read();\n\n        // \u5f53\u524dEntry\u6570\u636e\u6d41\u7ed3\u675f\u4e86, \u9700\u8981\u5c1d\u8bd5\u4e0b\u4e00\u4e2aEntry\n        if (-1 == result) {\n            this.currentZipEntry = null;\n            return this.read();\n        } else {\n            return result;\n        }\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/engine/datax/datax-core/src/main/java/com/alibaba/datax/plugin/unstructuredstorage/reader/ZipCycleInputStream.java", "stars": "23", "class_props": {"extends": "InputStream", "implements": null, "modifiers": ["public"]}}, {"id": 64460, "method_name": "close", "class_name": "ZipCycleInputStream", "params": [], "throws": ["IOException"], "modifiers": ["public"], "return_type": "void", "snippet": "    public void close() throws IOException {\n        this.zipInputStream.close();\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/engine/datax/datax-core/src/main/java/com/alibaba/datax/plugin/unstructuredstorage/reader/ZipCycleInputStream.java", "stars": "23", "class_props": {"extends": "InputStream", "implements": null, "modifiers": ["public"]}}, {"id": 64461, "method_name": "getOffset", "class_name": "PageDO", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "\tpublic int getOffset() {\n\t\treturn offset;\n\t}", "url": "https://raw.githubusercontent.com/201206030/novel-plus/master/novel-admin/src/main/java/com/java2nb/common/domain/PageDO.java", "stars": "137", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 64462, "method_name": "setOffset", "class_name": "PageDO", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void setOffset(int offset) {\n\t\tthis.offset = offset;\n\t}", "url": "https://raw.githubusercontent.com/201206030/novel-plus/master/novel-admin/src/main/java/com/java2nb/common/domain/PageDO.java", "stars": "137", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 64463, "method_name": "getLimit", "class_name": "PageDO", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "\tpublic int getLimit() {\n\t\treturn limit;\n\t}", "url": "https://raw.githubusercontent.com/201206030/novel-plus/master/novel-admin/src/main/java/com/java2nb/common/domain/PageDO.java", "stars": "137", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 64464, "method_name": "setLimit", "class_name": "PageDO", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void setLimit(int limit) {\n\t\tthis.limit = limit;\n\t}", "url": "https://raw.githubusercontent.com/201206030/novel-plus/master/novel-admin/src/main/java/com/java2nb/common/domain/PageDO.java", "stars": "137", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 64465, "method_name": "getTotal", "class_name": "PageDO", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "\tpublic int getTotal() {\n\t\treturn total;\n\t}", "url": "https://raw.githubusercontent.com/201206030/novel-plus/master/novel-admin/src/main/java/com/java2nb/common/domain/PageDO.java", "stars": "137", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 64466, "method_name": "setTotal", "class_name": "PageDO", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void setTotal(int total) {\n\t\tthis.total = total;\n\t}", "url": "https://raw.githubusercontent.com/201206030/novel-plus/master/novel-admin/src/main/java/com/java2nb/common/domain/PageDO.java", "stars": "137", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 64467, "method_name": "getParams", "class_name": "PageDO", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Map<String,Object>", "snippet": "\tpublic Map<String, Object> getParams() {\n\t\treturn params;\n\t}", "url": "https://raw.githubusercontent.com/201206030/novel-plus/master/novel-admin/src/main/java/com/java2nb/common/domain/PageDO.java", "stars": "137", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 64468, "method_name": "setParams", "class_name": "PageDO", "params": ["Map<String,Object>"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void setParams(Map<String, Object> params) {\n\t\tthis.params = params;\n\t}", "url": "https://raw.githubusercontent.com/201206030/novel-plus/master/novel-admin/src/main/java/com/java2nb/common/domain/PageDO.java", "stars": "137", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 64469, "method_name": "getRows", "class_name": "PageDO", "params": [], "throws": null, "modifiers": ["public"], "return_type": "List<T>", "snippet": "\tpublic List<T> getRows() {\n\t\treturn rows;\n\t}", "url": "https://raw.githubusercontent.com/201206030/novel-plus/master/novel-admin/src/main/java/com/java2nb/common/domain/PageDO.java", "stars": "137", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 64470, "method_name": "setRows", "class_name": "PageDO", "params": ["List<T>"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void setRows(List<T> rows) {\n\t\tthis.rows = rows;\n\t}", "url": "https://raw.githubusercontent.com/201206030/novel-plus/master/novel-admin/src/main/java/com/java2nb/common/domain/PageDO.java", "stars": "137", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 64471, "method_name": "getParam", "class_name": "PageDO", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "\tpublic String getParam() {\n\t\treturn param;\n\t}", "url": "https://raw.githubusercontent.com/201206030/novel-plus/master/novel-admin/src/main/java/com/java2nb/common/domain/PageDO.java", "stars": "137", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 64472, "method_name": "setParam", "class_name": "PageDO", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void setParam(String param) {\n\t\tthis.param = param;\n\t}", "url": "https://raw.githubusercontent.com/201206030/novel-plus/master/novel-admin/src/main/java/com/java2nb/common/domain/PageDO.java", "stars": "137", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 64473, "method_name": "toString", "class_name": "PageDO", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "\tpublic String toString() {\n\t\treturn \"PageDO{\" +\n\t\t\t\t\"offset=\" + offset +\n\t\t\t\t\", limit=\" + limit +\n\t\t\t\t\", total=\" + total +\n\t\t\t\t\", params=\" + params +\n\t\t\t\t\", param='\" + param + '\\'' +\n\t\t\t\t\", rows=\" + rows +\n\t\t\t\t'}';\n\t}", "url": "https://raw.githubusercontent.com/201206030/novel-plus/master/novel-admin/src/main/java/com/java2nb/common/domain/PageDO.java", "stars": "137", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 64474, "method_name": "main", "class_name": "ConsumerApp", "params": ["String"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void main(String[] args) {\n        SpringApplication.run(ConsumerApp.class);\n    }", "url": "https://raw.githubusercontent.com/zhuchangwu/lawyer-lover-cloud-backend/master/lawyer-lover-consumer/src/main/java/com/changwu/ConsumerApp.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 64475, "method_name": "initializeInstance", "class_name": "AppPreferenceManager", "params": ["Context"], "throws": null, "modifiers": ["synchronized", "static", "private"], "return_type": "void", "snippet": "    private static synchronized void initializeInstance(Context context) {\n        if (sInstance == null) {\n            sInstance = new AppPreferenceManager(context);\n        }\n    }", "url": "https://raw.githubusercontent.com/BluezoneGlobal/react-native-bluetooth-scan/master/lib/android/src/main/java/com/scan/preference/AppPreferenceManager.java", "stars": "14", "class_props": {"extends": "AbstractPreferenceManager", "implements": null, "modifiers": ["public"]}}, {"id": 64476, "method_name": "getInstance", "class_name": "AppPreferenceManager", "params": ["Context"], "throws": null, "modifiers": ["synchronized", "public", "static"], "return_type": "AppPreferenceManager", "snippet": "    public static synchronized AppPreferenceManager getInstance(Context context) {\n        if (sInstance == null) {\n            initializeInstance(context);\n        }\n\n        return sInstance;\n    }", "url": "https://raw.githubusercontent.com/BluezoneGlobal/react-native-bluetooth-scan/master/lib/android/src/main/java/com/scan/preference/AppPreferenceManager.java", "stars": "14", "class_props": {"extends": "AbstractPreferenceManager", "implements": null, "modifiers": ["public"]}}, {"id": 64477, "method_name": "setBlid", "class_name": "AppPreferenceManager", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setBlid(String blid) {\n        putString(PreferenceConstants.BLID, blid);\n    }", "url": "https://raw.githubusercontent.com/BluezoneGlobal/react-native-bluetooth-scan/master/lib/android/src/main/java/com/scan/preference/AppPreferenceManager.java", "stars": "14", "class_props": {"extends": "AbstractPreferenceManager", "implements": null, "modifiers": ["public"]}}, {"id": 64478, "method_name": "getBlid", "class_name": "AppPreferenceManager", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getBlid() {\n        return getString(PreferenceConstants.BLID, \"Bluezoner\");\n    }", "url": "https://raw.githubusercontent.com/BluezoneGlobal/react-native-bluetooth-scan/master/lib/android/src/main/java/com/scan/preference/AppPreferenceManager.java", "stars": "14", "class_props": {"extends": "AbstractPreferenceManager", "implements": null, "modifiers": ["public"]}}, {"id": 64479, "method_name": "setConfigScanBleDuration", "class_name": "AppPreferenceManager", "params": ["long"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setConfigScanBleDuration(long time) {\n        putLong(PreferenceConstants.CONFIG_SEVER_SCAN_BLE_DURATION, time);\n    }", "url": "https://raw.githubusercontent.com/BluezoneGlobal/react-native-bluetooth-scan/master/lib/android/src/main/java/com/scan/preference/AppPreferenceManager.java", "stars": "14", "class_props": {"extends": "AbstractPreferenceManager", "implements": null, "modifiers": ["public"]}}, {"id": 64480, "method_name": "getConfigScanBleDuration", "class_name": "AppPreferenceManager", "params": ["long"], "throws": null, "modifiers": ["public"], "return_type": "long", "snippet": "    public long getConfigScanBleDuration(long timeDefault) {\n        return getLong(PreferenceConstants.CONFIG_SEVER_SCAN_BLE_DURATION, timeDefault);\n    }", "url": "https://raw.githubusercontent.com/BluezoneGlobal/react-native-bluetooth-scan/master/lib/android/src/main/java/com/scan/preference/AppPreferenceManager.java", "stars": "14", "class_props": {"extends": "AbstractPreferenceManager", "implements": null, "modifiers": ["public"]}}, {"id": 64481, "method_name": "setConfigScanBleInterval", "class_name": "AppPreferenceManager", "params": ["long"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setConfigScanBleInterval(long time) {\n        putLong(PreferenceConstants.CONFIG_SERVER_SCAN_BLE_INTERVAL, time);\n    }", "url": "https://raw.githubusercontent.com/BluezoneGlobal/react-native-bluetooth-scan/master/lib/android/src/main/java/com/scan/preference/AppPreferenceManager.java", "stars": "14", "class_props": {"extends": "AbstractPreferenceManager", "implements": null, "modifiers": ["public"]}}, {"id": 64482, "method_name": "getConfigScanBleInterval", "class_name": "AppPreferenceManager", "params": ["long"], "throws": null, "modifiers": ["public"], "return_type": "long", "snippet": "    public long getConfigScanBleInterval(long timeDefault) {\n        return getLong(PreferenceConstants.CONFIG_SERVER_SCAN_BLE_INTERVAL, timeDefault);\n    }", "url": "https://raw.githubusercontent.com/BluezoneGlobal/react-native-bluetooth-scan/master/lib/android/src/main/java/com/scan/preference/AppPreferenceManager.java", "stars": "14", "class_props": {"extends": "AbstractPreferenceManager", "implements": null, "modifiers": ["public"]}}, {"id": 64483, "method_name": "setConfigBroadcastBleDuration", "class_name": "AppPreferenceManager", "params": ["long"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setConfigBroadcastBleDuration(long time) {\n        putLong(PreferenceConstants.CONFIG_SERVER_BROADCAST_BLE_DURATION, time);\n    }", "url": "https://raw.githubusercontent.com/BluezoneGlobal/react-native-bluetooth-scan/master/lib/android/src/main/java/com/scan/preference/AppPreferenceManager.java", "stars": "14", "class_props": {"extends": "AbstractPreferenceManager", "implements": null, "modifiers": ["public"]}}, {"id": 64484, "method_name": "getConfigBroadcasBleDuration", "class_name": "AppPreferenceManager", "params": ["long"], "throws": null, "modifiers": ["public"], "return_type": "long", "snippet": "    public long getConfigBroadcasBleDuration(long timeDefault) {\n        return getLong(PreferenceConstants.CONFIG_SERVER_BROADCAST_BLE_DURATION, timeDefault);\n    }", "url": "https://raw.githubusercontent.com/BluezoneGlobal/react-native-bluetooth-scan/master/lib/android/src/main/java/com/scan/preference/AppPreferenceManager.java", "stars": "14", "class_props": {"extends": "AbstractPreferenceManager", "implements": null, "modifiers": ["public"]}}, {"id": 64485, "method_name": "setConfigBroadcastBleInterval", "class_name": "AppPreferenceManager", "params": ["long"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setConfigBroadcastBleInterval(long time) {\n        putLong(PreferenceConstants.CONFIG_SERVER_BROADCAST_BLE_INTERVAL, time);\n    }", "url": "https://raw.githubusercontent.com/BluezoneGlobal/react-native-bluetooth-scan/master/lib/android/src/main/java/com/scan/preference/AppPreferenceManager.java", "stars": "14", "class_props": {"extends": "AbstractPreferenceManager", "implements": null, "modifiers": ["public"]}}, {"id": 64486, "method_name": "getConfigBroadcasBleInterval", "class_name": "AppPreferenceManager", "params": ["long"], "throws": null, "modifiers": ["public"], "return_type": "long", "snippet": "    public long getConfigBroadcasBleInterval(long timeDefault) {\n        return getLong(PreferenceConstants.CONFIG_SERVER_BROADCAST_BLE_INTERVAL, timeDefault);\n    }", "url": "https://raw.githubusercontent.com/BluezoneGlobal/react-native-bluetooth-scan/master/lib/android/src/main/java/com/scan/preference/AppPreferenceManager.java", "stars": "14", "class_props": {"extends": "AbstractPreferenceManager", "implements": null, "modifiers": ["public"]}}, {"id": 64487, "method_name": "setConfigScanDevicesDuration", "class_name": "AppPreferenceManager", "params": ["long"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setConfigScanDevicesDuration(long time) {\n        putLong(PreferenceConstants.CONFIG_SERVER_SCAN_DEVICES_DURATION, time);\n    }", "url": "https://raw.githubusercontent.com/BluezoneGlobal/react-native-bluetooth-scan/master/lib/android/src/main/java/com/scan/preference/AppPreferenceManager.java", "stars": "14", "class_props": {"extends": "AbstractPreferenceManager", "implements": null, "modifiers": ["public"]}}, {"id": 64488, "method_name": "getConfigScanDevicesDuration", "class_name": "AppPreferenceManager", "params": ["long"], "throws": null, "modifiers": ["public"], "return_type": "long", "snippet": "    public long getConfigScanDevicesDuration(long timeDefault) {\n        return getLong(PreferenceConstants.CONFIG_SERVER_SCAN_DEVICES_DURATION, timeDefault);\n    }", "url": "https://raw.githubusercontent.com/BluezoneGlobal/react-native-bluetooth-scan/master/lib/android/src/main/java/com/scan/preference/AppPreferenceManager.java", "stars": "14", "class_props": {"extends": "AbstractPreferenceManager", "implements": null, "modifiers": ["public"]}}, {"id": 64489, "method_name": "setConfigScanDevicesInterval", "class_name": "AppPreferenceManager", "params": ["long"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setConfigScanDevicesInterval(long time) {\n        putLong(PreferenceConstants.CONFIG_SERVER_SCAN_DEVICES_INTERVAL, time);\n    }", "url": "https://raw.githubusercontent.com/BluezoneGlobal/react-native-bluetooth-scan/master/lib/android/src/main/java/com/scan/preference/AppPreferenceManager.java", "stars": "14", "class_props": {"extends": "AbstractPreferenceManager", "implements": null, "modifiers": ["public"]}}, {"id": 64490, "method_name": "getConfigScanDevicesInterval", "class_name": "AppPreferenceManager", "params": ["long"], "throws": null, "modifiers": ["public"], "return_type": "long", "snippet": "    public long getConfigScanDevicesInterval(long timeDefault) {\n        return getLong(PreferenceConstants.CONFIG_SERVER_SCAN_DEVICES_INTERVAL, timeDefault);\n    }", "url": "https://raw.githubusercontent.com/BluezoneGlobal/react-native-bluetooth-scan/master/lib/android/src/main/java/com/scan/preference/AppPreferenceManager.java", "stars": "14", "class_props": {"extends": "AbstractPreferenceManager", "implements": null, "modifiers": ["public"]}}, {"id": 64491, "method_name": "setConfigInsertDb", "class_name": "AppPreferenceManager", "params": ["long"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setConfigInsertDb(long time) {\n        putLong(PreferenceConstants.CONFIG_SERVER_INSERT_DB, time);\n    }", "url": "https://raw.githubusercontent.com/BluezoneGlobal/react-native-bluetooth-scan/master/lib/android/src/main/java/com/scan/preference/AppPreferenceManager.java", "stars": "14", "class_props": {"extends": "AbstractPreferenceManager", "implements": null, "modifiers": ["public"]}}, {"id": 64492, "method_name": "getConfigInsertDb", "class_name": "AppPreferenceManager", "params": ["long"], "throws": null, "modifiers": ["public"], "return_type": "long", "snippet": "    public long getConfigInsertDb(long timeDefault) {\n        return getLong(PreferenceConstants.CONFIG_SERVER_INSERT_DB, timeDefault);\n    }", "url": "https://raw.githubusercontent.com/BluezoneGlobal/react-native-bluetooth-scan/master/lib/android/src/main/java/com/scan/preference/AppPreferenceManager.java", "stars": "14", "class_props": {"extends": "AbstractPreferenceManager", "implements": null, "modifiers": ["public"]}}, {"id": 64493, "method_name": "setConfigBackupDb", "class_name": "AppPreferenceManager", "params": ["long"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setConfigBackupDb(long time) {\n        putLong(PreferenceConstants.CONFIG_SERVER_BACKUP_DB, time);\n    }", "url": "https://raw.githubusercontent.com/BluezoneGlobal/react-native-bluetooth-scan/master/lib/android/src/main/java/com/scan/preference/AppPreferenceManager.java", "stars": "14", "class_props": {"extends": "AbstractPreferenceManager", "implements": null, "modifiers": ["public"]}}, {"id": 64494, "method_name": "getConfigBackupDb", "class_name": "AppPreferenceManager", "params": ["long"], "throws": null, "modifiers": ["public"], "return_type": "long", "snippet": "    public long getConfigBackupDb(long timeDefault) {\n        return getLong(PreferenceConstants.CONFIG_SERVER_BACKUP_DB, timeDefault);\n    }", "url": "https://raw.githubusercontent.com/BluezoneGlobal/react-native-bluetooth-scan/master/lib/android/src/main/java/com/scan/preference/AppPreferenceManager.java", "stars": "14", "class_props": {"extends": "AbstractPreferenceManager", "implements": null, "modifiers": ["public"]}}, {"id": 64495, "method_name": "setConfigLogFile", "class_name": "AppPreferenceManager", "params": ["boolean"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setConfigLogFile(boolean isLog) {\n        putBoolean(PreferenceConstants.CONFIG_LOG_FILE, isLog);\n    }", "url": "https://raw.githubusercontent.com/BluezoneGlobal/react-native-bluetooth-scan/master/lib/android/src/main/java/com/scan/preference/AppPreferenceManager.java", "stars": "14", "class_props": {"extends": "AbstractPreferenceManager", "implements": null, "modifiers": ["public"]}}, {"id": 64496, "method_name": "getConfigLogFile", "class_name": "AppPreferenceManager", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean getConfigLogFile() {\n        return getBoolean(PreferenceConstants.CONFIG_LOG_FILE, false);\n    }", "url": "https://raw.githubusercontent.com/BluezoneGlobal/react-native-bluetooth-scan/master/lib/android/src/main/java/com/scan/preference/AppPreferenceManager.java", "stars": "14", "class_props": {"extends": "AbstractPreferenceManager", "implements": null, "modifiers": ["public"]}}, {"id": 64497, "method_name": "setConfigLogBattery", "class_name": "AppPreferenceManager", "params": ["boolean"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setConfigLogBattery(boolean isLog) {\n        putBoolean(PreferenceConstants.CONFIG_LOG_BATTERY, isLog);\n    }", "url": "https://raw.githubusercontent.com/BluezoneGlobal/react-native-bluetooth-scan/master/lib/android/src/main/java/com/scan/preference/AppPreferenceManager.java", "stars": "14", "class_props": {"extends": "AbstractPreferenceManager", "implements": null, "modifiers": ["public"]}}, {"id": 64498, "method_name": "getConfigLogBattery", "class_name": "AppPreferenceManager", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean getConfigLogBattery() {\n        return getBoolean(PreferenceConstants.CONFIG_LOG_BATTERY, false);\n    }", "url": "https://raw.githubusercontent.com/BluezoneGlobal/react-native-bluetooth-scan/master/lib/android/src/main/java/com/scan/preference/AppPreferenceManager.java", "stars": "14", "class_props": {"extends": "AbstractPreferenceManager", "implements": null, "modifiers": ["public"]}}, {"id": 64499, "method_name": "setLastBackup", "class_name": "AppPreferenceManager", "params": ["long"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setLastBackup(long time) {\n        putLong(PreferenceConstants.TIME_LAST_BACKUP, time);\n    }", "url": "https://raw.githubusercontent.com/BluezoneGlobal/react-native-bluetooth-scan/master/lib/android/src/main/java/com/scan/preference/AppPreferenceManager.java", "stars": "14", "class_props": {"extends": "AbstractPreferenceManager", "implements": null, "modifiers": ["public"]}}, {"id": 64500, "method_name": "getLastBackup", "class_name": "AppPreferenceManager", "params": [], "throws": null, "modifiers": ["public"], "return_type": "long", "snippet": "    public long getLastBackup() {\n        return getLong(PreferenceConstants.TIME_LAST_BACKUP, 0);\n    }", "url": "https://raw.githubusercontent.com/BluezoneGlobal/react-native-bluetooth-scan/master/lib/android/src/main/java/com/scan/preference/AppPreferenceManager.java", "stars": "14", "class_props": {"extends": "AbstractPreferenceManager", "implements": null, "modifiers": ["public"]}}, {"id": 64501, "method_name": "setConfigEnableBluetoothInterval", "class_name": "AppPreferenceManager", "params": ["long"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setConfigEnableBluetoothInterval(long time) {\n        putLong(PreferenceConstants.CONFIG_SERVER_ENABLE_BLUETOOTH_INTERVAL, time);\n    }", "url": "https://raw.githubusercontent.com/BluezoneGlobal/react-native-bluetooth-scan/master/lib/android/src/main/java/com/scan/preference/AppPreferenceManager.java", "stars": "14", "class_props": {"extends": "AbstractPreferenceManager", "implements": null, "modifiers": ["public"]}}, {"id": 64502, "method_name": "getConfigEnableBluetoothInterval", "class_name": "AppPreferenceManager", "params": ["long"], "throws": null, "modifiers": ["public"], "return_type": "long", "snippet": "    public long getConfigEnableBluetoothInterval(long timeDefault) {\n        return getLong(PreferenceConstants.CONFIG_SERVER_ENABLE_BLUETOOTH_INTERVAL, timeDefault);\n    }", "url": "https://raw.githubusercontent.com/BluezoneGlobal/react-native-bluetooth-scan/master/lib/android/src/main/java/com/scan/preference/AppPreferenceManager.java", "stars": "14", "class_props": {"extends": "AbstractPreferenceManager", "implements": null, "modifiers": ["public"]}}, {"id": 64503, "method_name": "setConfigCheckIntervalRequestPermission", "class_name": "AppPreferenceManager", "params": ["long"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setConfigCheckIntervalRequestPermission(long time) {\n        putLong(PreferenceConstants.CONFIG_SERVER_CHECK_NOTIFY_REQUEST_PERMISSON, time);\n    }", "url": "https://raw.githubusercontent.com/BluezoneGlobal/react-native-bluetooth-scan/master/lib/android/src/main/java/com/scan/preference/AppPreferenceManager.java", "stars": "14", "class_props": {"extends": "AbstractPreferenceManager", "implements": null, "modifiers": ["public"]}}, {"id": 64504, "method_name": "getConfigCheckIntervalRequestPermission", "class_name": "AppPreferenceManager", "params": ["long"], "throws": null, "modifiers": ["public"], "return_type": "long", "snippet": "    public long getConfigCheckIntervalRequestPermission(long timeDefault) {\n        return getLong(PreferenceConstants.CONFIG_SERVER_CHECK_NOTIFY_REQUEST_PERMISSON, timeDefault);\n    }", "url": "https://raw.githubusercontent.com/BluezoneGlobal/react-native-bluetooth-scan/master/lib/android/src/main/java/com/scan/preference/AppPreferenceManager.java", "stars": "14", "class_props": {"extends": "AbstractPreferenceManager", "implements": null, "modifiers": ["public"]}}, {"id": 64505, "method_name": "setConfigEnableBluetoothBatteryLevel", "class_name": "AppPreferenceManager", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setConfigEnableBluetoothBatteryLevel(int time) {\n        putLong(PreferenceConstants.CONFIG_SERVER_ENABLE_BLUETOOTH_BATTERY_LEVEL, time);\n    }", "url": "https://raw.githubusercontent.com/BluezoneGlobal/react-native-bluetooth-scan/master/lib/android/src/main/java/com/scan/preference/AppPreferenceManager.java", "stars": "14", "class_props": {"extends": "AbstractPreferenceManager", "implements": null, "modifiers": ["public"]}}, {"id": 64506, "method_name": "getConfigEnableBluetoothBatteryLevel", "class_name": "AppPreferenceManager", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "long", "snippet": "    public long getConfigEnableBluetoothBatteryLevel(int levelDefault) {\n        return getInt(PreferenceConstants.CONFIG_SERVER_ENABLE_BLUETOOTH_BATTERY_LEVEL, levelDefault);\n    }", "url": "https://raw.githubusercontent.com/BluezoneGlobal/react-native-bluetooth-scan/master/lib/android/src/main/java/com/scan/preference/AppPreferenceManager.java", "stars": "14", "class_props": {"extends": "AbstractPreferenceManager", "implements": null, "modifiers": ["public"]}}, {"id": 64507, "method_name": "setConfigScanDevices", "class_name": "AppPreferenceManager", "params": ["boolean"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setConfigScanDevices(boolean isScan) {\n        putBoolean(PreferenceConstants.CONFIG_SERVER_SCAN_DEVICES, isScan);\n    }", "url": "https://raw.githubusercontent.com/BluezoneGlobal/react-native-bluetooth-scan/master/lib/android/src/main/java/com/scan/preference/AppPreferenceManager.java", "stars": "14", "class_props": {"extends": "AbstractPreferenceManager", "implements": null, "modifiers": ["public"]}}, {"id": 64508, "method_name": "getConfigScanDevices", "class_name": "AppPreferenceManager", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean getConfigScanDevices() {\n        return getBoolean(PreferenceConstants.CONFIG_SERVER_SCAN_DEVICES, AppConstants.Config.IS_CONFIG_SCAN_DEVICES);\n    }", "url": "https://raw.githubusercontent.com/BluezoneGlobal/react-native-bluetooth-scan/master/lib/android/src/main/java/com/scan/preference/AppPreferenceManager.java", "stars": "14", "class_props": {"extends": "AbstractPreferenceManager", "implements": null, "modifiers": ["public"]}}, {"id": 64509, "method_name": "setLanguage", "class_name": "AppPreferenceManager", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setLanguage(String language) {\n        putString(PreferenceConstants.LANGUAGE, language);\n    }", "url": "https://raw.githubusercontent.com/BluezoneGlobal/react-native-bluetooth-scan/master/lib/android/src/main/java/com/scan/preference/AppPreferenceManager.java", "stars": "14", "class_props": {"extends": "AbstractPreferenceManager", "implements": null, "modifiers": ["public"]}}, {"id": 64510, "method_name": "getLanguage", "class_name": "AppPreferenceManager", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getLanguage() {\n        return getString(PreferenceConstants.LANGUAGE, \"vi\");\n    }", "url": "https://raw.githubusercontent.com/BluezoneGlobal/react-native-bluetooth-scan/master/lib/android/src/main/java/com/scan/preference/AppPreferenceManager.java", "stars": "14", "class_props": {"extends": "AbstractPreferenceManager", "implements": null, "modifiers": ["public"]}}, {"id": 64511, "method_name": "setNotifyRequestBlu", "class_name": "AppPreferenceManager", "params": ["String", "String", "String", "String", "String", "String", "String", "String", "String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setNotifyRequestBlu(\n            String bigTextVi,\n            String bigTextEn,\n            String subTextVi,\n            String subTextEn,\n            String titleVi,\n            String titleEn,\n            String messageVi,\n            String messageEn,\n            String itemRepeat\n    ) {\n        putString(PreferenceConstants.NOTIFICATION_BLUETOOTH_BIG_TEXT_VI, bigTextVi);\n        putString(PreferenceConstants.NOTIFICATION_BLUETOOTH_BIG_TEXT_EN, bigTextEn);\n        putString(PreferenceConstants.NOTIFICATION_BLUETOOTH_SUB_TEXT_VI, subTextVi);\n        putString(PreferenceConstants.NOTIFICATION_BLUETOOTH_SUB_TEXT_EN, subTextEn);\n        putString(PreferenceConstants.NOTIFICATION_BLUETOOTH_TITLE_VI, titleVi);\n        putString(PreferenceConstants.NOTIFICATION_BLUETOOTH_TITLE_EN, titleEn);\n        putString(PreferenceConstants.NOTIFICATION_BLUETOOTH_MESSAGE_VI, messageVi);\n        putString(PreferenceConstants.NOTIFICATION_BLUETOOTH_MESSAGE_EN, messageEn);\n        putString(PreferenceConstants.NOTIFICATION_BLUETOOTH_REPEAT, itemRepeat);\n    }", "url": "https://raw.githubusercontent.com/BluezoneGlobal/react-native-bluetooth-scan/master/lib/android/src/main/java/com/scan/preference/AppPreferenceManager.java", "stars": "14", "class_props": {"extends": "AbstractPreferenceManager", "implements": null, "modifiers": ["public"]}}, {"id": 64512, "method_name": "getNotifyRequestBlue", "class_name": "AppPreferenceManager", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "Map<String,String>", "snippet": "    public Map<String, String> getNotifyRequestBlue (String language) {\n        Map<String, String> result = new HashMap<>();\n        result.put(\"itemRepeat\", getString(PreferenceConstants.NOTIFICATION_BLUETOOTH_REPEAT, \"\"));\n        result.put(\"bigText\", getString(PreferenceConstants.NOTIFICATION_BLUETOOTH_BIG_TEXT_VI, \"bigTextVi\"));\n        result.put(\"bigText_en\", getString(PreferenceConstants.NOTIFICATION_BLUETOOTH_BIG_TEXT_EN, \"bigTextEn\"));\n        result.put(\"subText\", getString(PreferenceConstants.NOTIFICATION_BLUETOOTH_SUB_TEXT_VI, \"subTextVi\"));\n        result.put(\"subText_en\", getString(PreferenceConstants.NOTIFICATION_BLUETOOTH_SUB_TEXT_EN, \"subTextEn\"));\n        result.put(\"title\", getString(PreferenceConstants.NOTIFICATION_BLUETOOTH_TITLE_VI, \"titleVi\"));\n        result.put(\"title_en\", getString(PreferenceConstants.NOTIFICATION_BLUETOOTH_TITLE_EN, \"titleEn\"));\n        result.put(\"message\", getString(PreferenceConstants.NOTIFICATION_BLUETOOTH_MESSAGE_VI, \"messageVi\"));\n        result.put(\"message_en\", getString(PreferenceConstants.NOTIFICATION_BLUETOOTH_MESSAGE_EN, \"messageEn\"));\n        return result;\n    }", "url": "https://raw.githubusercontent.com/BluezoneGlobal/react-native-bluetooth-scan/master/lib/android/src/main/java/com/scan/preference/AppPreferenceManager.java", "stars": "14", "class_props": {"extends": "AbstractPreferenceManager", "implements": null, "modifiers": ["public"]}}, {"id": 64513, "method_name": "setNotifyRequestLocation", "class_name": "AppPreferenceManager", "params": ["String", "String", "String", "String", "String", "String", "String", "String", "String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setNotifyRequestLocation(\n            String bigTextVi,\n            String bigTextEn,\n            String subTextVi,\n            String subTextEn,\n            String titleVi,\n            String titleEn,\n            String messageVi,\n            String messageEn,\n            String itemRepeat\n    ) {\n        putString(PreferenceConstants.NOTIFICATION_LOCATION_BIG_TEXT_VI, bigTextVi);\n        putString(PreferenceConstants.NOTIFICATION_LOCATION_BIG_TEXT_EN, bigTextEn);\n        putString(PreferenceConstants.NOTIFICATION_LOCATION_SUB_TEXT_VI, subTextVi);\n        putString(PreferenceConstants.NOTIFICATION_LOCATION_SUB_TEXT_EN, subTextEn);\n        putString(PreferenceConstants.NOTIFICATION_LOCATION_TITLE_VI, titleVi);\n        putString(PreferenceConstants.NOTIFICATION_LOCATION_TITLE_EN, titleEn);\n        putString(PreferenceConstants.NOTIFICATION_LOCATION_MESSAGE_VI, messageVi);\n        putString(PreferenceConstants.NOTIFICATION_LOCATION_MESSAGE_EN, messageEn);\n        putString(PreferenceConstants.NOTIFICATION_LOCATION_REPEAT, itemRepeat);\n    }", "url": "https://raw.githubusercontent.com/BluezoneGlobal/react-native-bluetooth-scan/master/lib/android/src/main/java/com/scan/preference/AppPreferenceManager.java", "stars": "14", "class_props": {"extends": "AbstractPreferenceManager", "implements": null, "modifiers": ["public"]}}, {"id": 64514, "method_name": "getNotifyRequestLocation", "class_name": "AppPreferenceManager", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "Map<String,String>", "snippet": "    public Map<String, String> getNotifyRequestLocation (String language) {\n        Map<String, String> result = new HashMap<>();\n        result.put(\"itemRepeat\", getString(PreferenceConstants.NOTIFICATION_LOCATION_REPEAT, \"\"));\n        result.put(\"bigText\", getString(PreferenceConstants.NOTIFICATION_LOCATION_BIG_TEXT_VI, \"bigTextVi\"));\n        result.put(\"bigText_en\", getString(PreferenceConstants.NOTIFICATION_LOCATION_BIG_TEXT_EN, \"bigTextEn\"));\n        result.put(\"subText\", getString(PreferenceConstants.NOTIFICATION_LOCATION_SUB_TEXT_VI, \"subTextVi\"));\n        result.put(\"subText_en\", getString(PreferenceConstants.NOTIFICATION_LOCATION_SUB_TEXT_EN, \"subTextEn\"));\n        result.put(\"title\", getString(PreferenceConstants.NOTIFICATION_LOCATION_TITLE_VI, \"titleVi\"));\n        result.put(\"title_en\", getString(PreferenceConstants.NOTIFICATION_LOCATION_TITLE_EN, \"titleEn\"));\n        result.put(\"message\", getString(PreferenceConstants.NOTIFICATION_LOCATION_MESSAGE_VI, \"messageVi\"));\n        result.put(\"message_en\", getString(PreferenceConstants.NOTIFICATION_LOCATION_MESSAGE_EN, \"messageEn\"));\n        return result;\n    }", "url": "https://raw.githubusercontent.com/BluezoneGlobal/react-native-bluetooth-scan/master/lib/android/src/main/java/com/scan/preference/AppPreferenceManager.java", "stars": "14", "class_props": {"extends": "AbstractPreferenceManager", "implements": null, "modifiers": ["public"]}}, {"id": 64515, "method_name": "setNotifyRequestPermisson", "class_name": "AppPreferenceManager", "params": ["String", "String", "String", "String", "String", "String", "String", "String", "String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setNotifyRequestPermisson(\n            String bigTextVi,\n            String bigTextEn,\n            String subTextVi,\n            String subTextEn,\n            String titleVi,\n            String titleEn,\n            String messageVi,\n            String messageEn,\n            String itemRepeat\n    ) {\n        putString(PreferenceConstants.NOTIFICATION_REQUEST_PERMISSON_BIG_TEXT_VI, bigTextVi);\n        putString(PreferenceConstants.NOTIFICATION_REQUEST_PERMISSON_BIG_TEXT_EN, bigTextEn);\n        putString(PreferenceConstants.NOTIFICATION_REQUEST_PERMISSON_SUB_TEXT_VI, subTextVi);\n        putString(PreferenceConstants.NOTIFICATION_REQUEST_PERMISSON_SUB_TEXT_EN, subTextEn);\n        putString(PreferenceConstants.NOTIFICATION_REQUEST_PERMISSON_TITLE_VI, titleVi);\n        putString(PreferenceConstants.NOTIFICATION_REQUEST_PERMISSON_TITLE_EN, titleEn);\n        putString(PreferenceConstants.NOTIFICATION_REQUEST_PERMISSON_MESSAGE_VI, messageVi);\n        putString(PreferenceConstants.NOTIFICATION_REQUEST_PERMISSON_MESSAGE_EN, messageEn);\n        putString(PreferenceConstants.NOTIFICATION_REQUEST_PERMISSON_REPEAT, itemRepeat);\n    }", "url": "https://raw.githubusercontent.com/BluezoneGlobal/react-native-bluetooth-scan/master/lib/android/src/main/java/com/scan/preference/AppPreferenceManager.java", "stars": "14", "class_props": {"extends": "AbstractPreferenceManager", "implements": null, "modifiers": ["public"]}}, {"id": 64516, "method_name": "getNotifyRequestPermisson", "class_name": "AppPreferenceManager", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "Map<String,String>", "snippet": "    public Map<String, String> getNotifyRequestPermisson (String language) {\n        Map<String, String> result = new HashMap<>();\n        result.put(\"itemRepeat\", getString(PreferenceConstants.NOTIFICATION_REQUEST_PERMISSON_REPEAT, \"\"));\n        result.put(\"bigText\", getString(PreferenceConstants.NOTIFICATION_REQUEST_PERMISSON_BIG_TEXT_VI, \"bigTextVi\"));\n        result.put(\"bigText_en\", getString(PreferenceConstants.NOTIFICATION_REQUEST_PERMISSON_BIG_TEXT_EN, \"bigTextEn\"));\n        result.put(\"subText\", getString(PreferenceConstants.NOTIFICATION_REQUEST_PERMISSON_SUB_TEXT_VI, \"subTextVi\"));\n        result.put(\"subText_en\", getString(PreferenceConstants.NOTIFICATION_REQUEST_PERMISSON_SUB_TEXT_EN, \"subTextEn\"));\n        result.put(\"title\", getString(PreferenceConstants.NOTIFICATION_REQUEST_PERMISSON_TITLE_VI, \"titleVi\"));\n        result.put(\"title_en\", getString(PreferenceConstants.NOTIFICATION_REQUEST_PERMISSON_TITLE_EN, \"titleEn\"));\n        result.put(\"message\", getString(PreferenceConstants.NOTIFICATION_REQUEST_PERMISSON_MESSAGE_VI, \"messageVi\"));\n        result.put(\"message_en\", getString(PreferenceConstants.NOTIFICATION_REQUEST_PERMISSON_MESSAGE_EN, \"messageEn\"));\n        return result;\n    }", "url": "https://raw.githubusercontent.com/BluezoneGlobal/react-native-bluetooth-scan/master/lib/android/src/main/java/com/scan/preference/AppPreferenceManager.java", "stars": "14", "class_props": {"extends": "AbstractPreferenceManager", "implements": null, "modifiers": ["public"]}}, {"id": 64517, "method_name": "newXNode", "class_name": "XNode", "params": ["Node"], "throws": null, "modifiers": ["public"], "return_type": "XNode", "snippet": "  public XNode newXNode(Node node) {\n    return new XNode(xpathParser, node, variables);\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/parsing/XNode.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 64518, "method_name": "getParent", "class_name": "XNode", "params": [], "throws": null, "modifiers": ["public"], "return_type": "XNode", "snippet": "  public XNode getParent() {\n    Node parent = node.getParentNode();\n    if (!(parent instanceof Element)) {\n      return null;\n    } else {\n      return new XNode(xpathParser, parent, variables);\n    }\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/parsing/XNode.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 64519, "method_name": "getPath", "class_name": "XNode", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "  public String getPath() {\n    StringBuilder builder = new StringBuilder();\n    Node current = node;\n    while (current instanceof Element) {\n      if (current != node) {\n        builder.insert(0, \"/\");\n      }\n      builder.insert(0, current.getNodeName());\n      current = current.getParentNode();\n    }\n    return builder.toString();\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/parsing/XNode.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 64520, "method_name": "getValueBasedIdentifier", "class_name": "XNode", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "  public String getValueBasedIdentifier() {\n    StringBuilder builder = new StringBuilder();\n    XNode current = this;\n    while (current != null) {\n      if (current != this) {\n        builder.insert(0, \"_\");\n      }\n      String value = current.getStringAttribute(\"id\",\n          current.getStringAttribute(\"value\",\n              current.getStringAttribute(\"property\", (String) null)));\n      if (value != null) {\n        value = value.replace('.', '_');\n        builder.insert(0, \"]\");\n        builder.insert(0,\n            value);\n        builder.insert(0, \"[\");\n      }\n      builder.insert(0, current.getName());\n      current = current.getParent();\n    }\n    return builder.toString();\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/parsing/XNode.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 64521, "method_name": "evalString", "class_name": "XNode", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "  public String evalString(String expression) {\n    return xpathParser.evalString(node, expression);\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/parsing/XNode.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 64522, "method_name": "evalBoolean", "class_name": "XNode", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "Boolean", "snippet": "  public Boolean evalBoolean(String expression) {\n    return xpathParser.evalBoolean(node, expression);\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/parsing/XNode.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 64523, "method_name": "evalDouble", "class_name": "XNode", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "Double", "snippet": "  public Double evalDouble(String expression) {\n    return xpathParser.evalDouble(node, expression);\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/parsing/XNode.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 64524, "method_name": "evalNodes", "class_name": "XNode", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "List<XNode>", "snippet": "  public List<XNode> evalNodes(String expression) {\n    return xpathParser.evalNodes(node, expression);\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/parsing/XNode.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 64525, "method_name": "evalNode", "class_name": "XNode", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "XNode", "snippet": "  public XNode evalNode(String expression) {\n    return xpathParser.evalNode(node, expression);\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/parsing/XNode.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 64526, "method_name": "getNode", "class_name": "XNode", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Node", "snippet": "  public Node getNode() {\n    return node;\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/parsing/XNode.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 64527, "method_name": "getName", "class_name": "XNode", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "  public String getName() {\n    return name;\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/parsing/XNode.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 64528, "method_name": "getStringBody", "class_name": "XNode", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "  public String getStringBody() {\n    return getStringBody(null);\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/parsing/XNode.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 64529, "method_name": "getStringBody", "class_name": "XNode", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "  public String getStringBody(String def) {\n    if (body == null) {\n      return def;\n    } else {\n      return body;\n    }\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/parsing/XNode.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 64530, "method_name": "getBooleanBody", "class_name": "XNode", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Boolean", "snippet": "  public Boolean getBooleanBody() {\n    return getBooleanBody(null);\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/parsing/XNode.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 64531, "method_name": "getBooleanBody", "class_name": "XNode", "params": ["Boolean"], "throws": null, "modifiers": ["public"], "return_type": "Boolean", "snippet": "  public Boolean getBooleanBody(Boolean def) {\n    if (body == null) {\n      return def;\n    } else {\n      return Boolean.valueOf(body);\n    }\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/parsing/XNode.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 64532, "method_name": "getIntBody", "class_name": "XNode", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Integer", "snippet": "  public Integer getIntBody() {\n    return getIntBody(null);\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/parsing/XNode.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 64533, "method_name": "getIntBody", "class_name": "XNode", "params": ["Integer"], "throws": null, "modifiers": ["public"], "return_type": "Integer", "snippet": "  public Integer getIntBody(Integer def) {\n    if (body == null) {\n      return def;\n    } else {\n      return Integer.parseInt(body);\n    }\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/parsing/XNode.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 64534, "method_name": "getLongBody", "class_name": "XNode", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Long", "snippet": "  public Long getLongBody() {\n    return getLongBody(null);\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/parsing/XNode.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 64535, "method_name": "getLongBody", "class_name": "XNode", "params": ["Long"], "throws": null, "modifiers": ["public"], "return_type": "Long", "snippet": "  public Long getLongBody(Long def) {\n    if (body == null) {\n      return def;\n    } else {\n      return Long.parseLong(body);\n    }\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/parsing/XNode.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 64536, "method_name": "getDoubleBody", "class_name": "XNode", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Double", "snippet": "  public Double getDoubleBody() {\n    return getDoubleBody(null);\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/parsing/XNode.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 64537, "method_name": "getDoubleBody", "class_name": "XNode", "params": ["Double"], "throws": null, "modifiers": ["public"], "return_type": "Double", "snippet": "  public Double getDoubleBody(Double def) {\n    if (body == null) {\n      return def;\n    } else {\n      return Double.parseDouble(body);\n    }\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/parsing/XNode.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 64538, "method_name": "getFloatBody", "class_name": "XNode", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Float", "snippet": "  public Float getFloatBody() {\n    return getFloatBody(null);\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/parsing/XNode.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 64539, "method_name": "getFloatBody", "class_name": "XNode", "params": ["Float"], "throws": null, "modifiers": ["public"], "return_type": "Float", "snippet": "  public Float getFloatBody(Float def) {\n    if (body == null) {\n      return def;\n    } else {\n      return Float.parseFloat(body);\n    }\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/parsing/XNode.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 64540, "method_name": "getEnumAttribute", "class_name": "XNode", "params": ["Class<T>", "String"], "throws": null, "modifiers": ["public"], "return_type": "T", "snippet": "  public <T extends Enum<T>> T getEnumAttribute(Class<T> enumType, String name) {\n    return getEnumAttribute(enumType, name, null);\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/parsing/XNode.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 64541, "method_name": "getEnumAttribute", "class_name": "XNode", "params": ["Class<T>", "String", "T"], "throws": null, "modifiers": ["public"], "return_type": "T", "snippet": "  public <T extends Enum<T>> T getEnumAttribute(Class<T> enumType, String name, T def) {\n    String value = getStringAttribute(name);\n    if (value == null) {\n      return def;\n    } else {\n      return Enum.valueOf(enumType, value);\n    }\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/parsing/XNode.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 64542, "method_name": "getStringAttribute", "class_name": "XNode", "params": ["String", "Supplier<String>"], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "  public String getStringAttribute(String name, Supplier<String> defSupplier) {\n    String value = attributes.getProperty(name);\n    return value == null ? defSupplier.get() : value;\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/parsing/XNode.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 64543, "method_name": "getStringAttribute", "class_name": "XNode", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "  public String getStringAttribute(String name) {\n    return getStringAttribute(name, (String) null);\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/parsing/XNode.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 64544, "method_name": "getStringAttribute", "class_name": "XNode", "params": ["String", "String"], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "  public String getStringAttribute(String name, String def) {\n    String value = attributes.getProperty(name);\n    if (value == null) {\n      return def;\n    } else {\n      return value;\n    }\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/parsing/XNode.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 64545, "method_name": "getBooleanAttribute", "class_name": "XNode", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "Boolean", "snippet": "  public Boolean getBooleanAttribute(String name) {\n    return getBooleanAttribute(name, null);\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/parsing/XNode.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 64546, "method_name": "getBooleanAttribute", "class_name": "XNode", "params": ["String", "Boolean"], "throws": null, "modifiers": ["public"], "return_type": "Boolean", "snippet": "  public Boolean getBooleanAttribute(String name, Boolean def) {\n    String value = attributes.getProperty(name);\n    if (value == null) {\n      return def;\n    } else {\n      return Boolean.valueOf(value);\n    }\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/parsing/XNode.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 64547, "method_name": "getIntAttribute", "class_name": "XNode", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "Integer", "snippet": "  public Integer getIntAttribute(String name) {\n    return getIntAttribute(name, null);\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/parsing/XNode.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 64548, "method_name": "getIntAttribute", "class_name": "XNode", "params": ["String", "Integer"], "throws": null, "modifiers": ["public"], "return_type": "Integer", "snippet": "  public Integer getIntAttribute(String name, Integer def) {\n    String value = attributes.getProperty(name);\n    if (value == null) {\n      return def;\n    } else {\n      return Integer.parseInt(value);\n    }\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/parsing/XNode.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 64549, "method_name": "getLongAttribute", "class_name": "XNode", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "Long", "snippet": "  public Long getLongAttribute(String name) {\n    return getLongAttribute(name, null);\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/parsing/XNode.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 64550, "method_name": "getLongAttribute", "class_name": "XNode", "params": ["String", "Long"], "throws": null, "modifiers": ["public"], "return_type": "Long", "snippet": "  public Long getLongAttribute(String name, Long def) {\n    String value = attributes.getProperty(name);\n    if (value == null) {\n      return def;\n    } else {\n      return Long.parseLong(value);\n    }\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/parsing/XNode.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 64551, "method_name": "getDoubleAttribute", "class_name": "XNode", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "Double", "snippet": "  public Double getDoubleAttribute(String name) {\n    return getDoubleAttribute(name, null);\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/parsing/XNode.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 64552, "method_name": "getDoubleAttribute", "class_name": "XNode", "params": ["String", "Double"], "throws": null, "modifiers": ["public"], "return_type": "Double", "snippet": "  public Double getDoubleAttribute(String name, Double def) {\n    String value = attributes.getProperty(name);\n    if (value == null) {\n      return def;\n    } else {\n      return Double.parseDouble(value);\n    }\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/parsing/XNode.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 64553, "method_name": "getFloatAttribute", "class_name": "XNode", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "Float", "snippet": "  public Float getFloatAttribute(String name) {\n    return getFloatAttribute(name, null);\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/parsing/XNode.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 64554, "method_name": "getFloatAttribute", "class_name": "XNode", "params": ["String", "Float"], "throws": null, "modifiers": ["public"], "return_type": "Float", "snippet": "  public Float getFloatAttribute(String name, Float def) {\n    String value = attributes.getProperty(name);\n    if (value == null) {\n      return def;\n    } else {\n      return Float.parseFloat(value);\n    }\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/parsing/XNode.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 64555, "method_name": "getChildren", "class_name": "XNode", "params": [], "throws": null, "modifiers": ["public"], "return_type": "List<XNode>", "snippet": "  public List<XNode> getChildren() {\n    List<XNode> children = new ArrayList<>();\n    NodeList nodeList = node.getChildNodes();\n    if (nodeList != null) {\n      for (int i = 0, n = nodeList.getLength(); i < n; i++) {\n        Node node = nodeList.item(i);\n        if (node.getNodeType() == Node.ELEMENT_NODE) {\n          children.add(new XNode(xpathParser, node, variables));\n        }\n      }\n    }\n    return children;\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/parsing/XNode.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 64556, "method_name": "getChildrenAsProperties", "class_name": "XNode", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Properties", "snippet": "  public Properties getChildrenAsProperties() {\n    Properties properties = new Properties();\n    for (XNode child : getChildren()) {\n      String name = child.getStringAttribute(\"name\");\n      String value = child.getStringAttribute(\"value\");\n      if (name != null && value != null) {\n        properties.setProperty(name, value);\n      }\n    }\n    return properties;\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/parsing/XNode.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 64557, "method_name": "toString", "class_name": "XNode", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "  public String toString() {\n    StringBuilder builder = new StringBuilder();\n    toString(builder, 0);\n    return builder.toString();\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/parsing/XNode.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 64558, "method_name": "toString", "class_name": "XNode", "params": ["StringBuilder", "int"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "  private void toString(StringBuilder builder, int level) {\n    builder.append(\"<\");\n    builder.append(name);\n    for (Map.Entry<Object, Object> entry : attributes.entrySet()) {\n      builder.append(\" \");\n      builder.append(entry.getKey());\n      builder.append(\"=\\\"\");\n      builder.append(entry.getValue());\n      builder.append(\"\\\"\");\n    }\n    List<XNode> children = getChildren();\n    if (!children.isEmpty()) {\n      builder.append(\">\\n\");\n      for (XNode child : children) {\n        indent(builder, level + 1);\n        child.toString(builder, level + 1);\n      }\n      indent(builder, level);\n      builder.append(\"</\");\n      builder.append(name);\n      builder.append(\">\");\n    } else if (body != null) {\n      builder.append(\">\");\n      builder.append(body);\n      builder.append(\"</\");\n      builder.append(name);\n      builder.append(\">\");\n    } else {\n      builder.append(\"/>\");\n      indent(builder, level);\n    }\n    builder.append(\"\\n\");\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/parsing/XNode.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 64559, "method_name": "indent", "class_name": "XNode", "params": ["StringBuilder", "int"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "  private void indent(StringBuilder builder, int level) {\n    for (int i = 0; i < level; i++) {\n      builder.append(\"    \");\n    }\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/parsing/XNode.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 64560, "method_name": "parseAttributes", "class_name": "XNode", "params": ["Node"], "throws": null, "modifiers": ["private"], "return_type": "Properties", "snippet": "  private Properties parseAttributes(Node n) {\n    Properties attributes = new Properties();\n    NamedNodeMap attributeNodes = n.getAttributes();\n    if (attributeNodes != null) {\n      for (int i = 0; i < attributeNodes.getLength(); i++) {\n        Node attribute = attributeNodes.item(i);\n        String value = PropertyParser.parse(attribute.getNodeValue(), variables);\n        attributes.put(attribute.getNodeName(), value);\n      }\n    }\n    return attributes;\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/parsing/XNode.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 64561, "method_name": "parseBody", "class_name": "XNode", "params": ["Node"], "throws": null, "modifiers": ["private"], "return_type": "String", "snippet": "  private String parseBody(Node node) {\n    String data = getBodyData(node);\n    if (data == null) {\n      NodeList children = node.getChildNodes();\n      for (int i = 0; i < children.getLength(); i++) {\n        Node child = children.item(i);\n        data = getBodyData(child);\n        if (data != null) {\n          break;\n        }\n      }\n    }\n    return data;\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/parsing/XNode.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 64562, "method_name": "getBodyData", "class_name": "XNode", "params": ["Node"], "throws": null, "modifiers": ["private"], "return_type": "String", "snippet": "  private String getBodyData(Node child) {\n    if (child.getNodeType() == Node.CDATA_SECTION_NODE\n        || child.getNodeType() == Node.TEXT_NODE) {\n      String data = ((CharacterData) child).getData();\n      data = PropertyParser.parse(data, variables);\n      return data;\n    }\n    return null;\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/parsing/XNode.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 64563, "method_name": "getResultObject", "class_name": "DefaultResultContext", "params": [], "throws": null, "modifiers": ["public"], "return_type": "T", "snippet": "  public T getResultObject() {\n    return resultObject;\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/executor/result/DefaultResultContext.java", "stars": "15", "class_props": {"extends": null, "implements": ["ResultContext"], "modifiers": ["public"]}}, {"id": 64564, "method_name": "getResultCount", "class_name": "DefaultResultContext", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "  public int getResultCount() {\n    return resultCount;\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/executor/result/DefaultResultContext.java", "stars": "15", "class_props": {"extends": null, "implements": ["ResultContext"], "modifiers": ["public"]}}, {"id": 64565, "method_name": "isStopped", "class_name": "DefaultResultContext", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "  public boolean isStopped() {\n    return stopped;\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/executor/result/DefaultResultContext.java", "stars": "15", "class_props": {"extends": null, "implements": ["ResultContext"], "modifiers": ["public"]}}, {"id": 64566, "method_name": "nextResultObject", "class_name": "DefaultResultContext", "params": ["T"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void nextResultObject(T resultObject) {\n    resultCount++;\n    this.resultObject = resultObject;\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/executor/result/DefaultResultContext.java", "stars": "15", "class_props": {"extends": null, "implements": ["ResultContext"], "modifiers": ["public"]}}, {"id": 64567, "method_name": "stop", "class_name": "DefaultResultContext", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void stop() {\n    this.stopped = true;\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/executor/result/DefaultResultContext.java", "stars": "15", "class_props": {"extends": null, "implements": ["ResultContext"], "modifiers": ["public"]}}, {"id": 64568, "method_name": "setSno", "class_name": "Student", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void setSno(int sno) {\n\t\tthis.sno = sno;\n\t}", "url": "https://raw.githubusercontent.com/nataraz123/Spring/master/IOCProj38-P-CNameSpaces/src/main/java/com/nt/beans/Student.java", "stars": "8", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 64569, "method_name": "setSname", "class_name": "Student", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void setSname(String sname) {\n\t\tthis.sname = sname;\n\t}", "url": "https://raw.githubusercontent.com/nataraz123/Spring/master/IOCProj38-P-CNameSpaces/src/main/java/com/nt/beans/Student.java", "stars": "8", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 64570, "method_name": "setSadd", "class_name": "Student", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void setSadd(String sadd) {\n\t\tthis.sadd = sadd;\n\t}", "url": "https://raw.githubusercontent.com/nataraz123/Spring/master/IOCProj38-P-CNameSpaces/src/main/java/com/nt/beans/Student.java", "stars": "8", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 64571, "method_name": "setCourse", "class_name": "Student", "params": ["Course"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void setCourse(Course course) {\n\t\tthis.course = course;\n\t}", "url": "https://raw.githubusercontent.com/nataraz123/Spring/master/IOCProj38-P-CNameSpaces/src/main/java/com/nt/beans/Student.java", "stars": "8", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 64572, "method_name": "setDob", "class_name": "Student", "params": ["Date"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void setDob(Date dob) {\n\t\tthis.dob = dob;\n\t}", "url": "https://raw.githubusercontent.com/nataraz123/Spring/master/IOCProj38-P-CNameSpaces/src/main/java/com/nt/beans/Student.java", "stars": "8", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 64573, "method_name": "toString", "class_name": "Student", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "\tpublic String toString() {\n\t\treturn \"Student [sno=\" + sno + \", sname=\" + sname + \", sadd=\" + sadd + \", course=\" + course + \", dob=\" + dob\n\t\t\t\t+ \"]\";\n\t}", "url": "https://raw.githubusercontent.com/nataraz123/Spring/master/IOCProj38-P-CNameSpaces/src/main/java/com/nt/beans/Student.java", "stars": "8", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 64574, "method_name": "diplomat", "class_name": "DiplomacyMainMenu", "params": ["Empire"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void diplomat(Empire emp) { \n        super.diplomat(emp); \n        \n        Diplomat plAI = player().diplomatAI();\n        Empire dip = diplomat();\n        \n        options.clear();\n        if (plAI.canOfferDiplomaticTreaties(dip))\n            options.add(TREATY_MENU);\n        if (plAI.canOfferTradeTreaty(dip))\n            options.add(TRADE_MENU);\n        if (plAI.canExchangeTechnology(dip))\n            options.add(TECHNOLOGY_MENU);\n        if (plAI.canOfferAid(dip))\n            options.add(AID_MENU);\n        if (plAI.canDeclareWar(dip))\n            options.add(WAR_MENU);\n        \n        options.add(EXIT);\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/diplomacy/DiplomacyMainMenu.java", "stars": "74", "class_props": {"extends": "DiplomaticMessage", "implements": null, "modifiers": ["public"]}}, {"id": 64575, "method_name": "showTalking", "class_name": "DiplomacyMainMenu", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean showTalking()        { return false; }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/diplomacy/DiplomacyMainMenu.java", "stars": "74", "class_props": {"extends": "DiplomaticMessage", "implements": null, "modifiers": ["public"]}}, {"id": 64576, "method_name": "numReplies", "class_name": "DiplomacyMainMenu", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int numReplies()             { return options.size(); }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/diplomacy/DiplomacyMainMenu.java", "stars": "74", "class_props": {"extends": "DiplomaticMessage", "implements": null, "modifiers": ["public"]}}, {"id": 64577, "method_name": "enabled", "class_name": "DiplomacyMainMenu", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean enabled(int i)       { return i < options.size(); }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/diplomacy/DiplomacyMainMenu.java", "stars": "74", "class_props": {"extends": "DiplomaticMessage", "implements": null, "modifiers": ["public"]}}, {"id": 64578, "method_name": "reply", "class_name": "DiplomacyMainMenu", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String reply(int i)          { \n        if (i >= options.size())\n            return \"\";\n        \n        int choice = options.get(i);\n        switch(choice) {\n            case TREATY_MENU      : return text(\"DIPLOMACY_MENU_TREATIES\");\n            case TRADE_MENU       : return text(\"DIPLOMACY_MENU_TRADE\");\n            case TECHNOLOGY_MENU  : return text(\"DIPLOMACY_MENU_TECHNOLOGY\");\n            case AID_MENU         : return text(\"DIPLOMACY_MENU_OFFER_AID\");\n            case WAR_MENU         : return text(\"DIPLOMACY_MENU_DECLARE_WAR\");\n            case EXIT             : return text(\"DIPLOMACY_MENU_GOODBYE\"); \n        }\n        return \"\"; \n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/diplomacy/DiplomacyMainMenu.java", "stars": "74", "class_props": {"extends": "DiplomaticMessage", "implements": null, "modifiers": ["public"]}}, {"id": 64579, "method_name": "select", "class_name": "DiplomacyMainMenu", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void select(int i) {\n        if (!enabled(i))\n            return;\n        if (i >= options.size())\n            return;\n\n        Empire pl = player();\n        log(\"DiplomacyMainMenu - selected: \", str(i));\n        int choice = options.get(i);\n\n        switch(choice) {\n            case TREATY_MENU     : DiplomaticMessage.show(view(), DialogueManager.DIPLOMACY_TREATY_MENU); break;\n            case TRADE_MENU      : DiplomaticMessage.show(view(), DialogueManager.DIPLOMACY_TRADE_MENU); break;\n            case TECHNOLOGY_MENU :\n                if (pl.diplomatAI().techsAvailableForRequest(diplomat()).isEmpty()) {\n                    DiplomaticReply reply = diplomat().viewForEmpire(pl.id).refuse(DialogueManager.DECLINE_TECH_TRADE);\n                    reply.returnMenu(DialogueManager.DIPLOMACY_MAIN_MENU);\n                    DiplomaticMessage.reply(DiplomacyRequestReply.create(diplomat(), reply));\n                }\n                else\n                     DiplomaticMessage.show(view(), DialogueManager.DIPLOMACY_TECH_REQ_MENU); \n                break;\n            case AID_MENU        : DiplomaticMessage.show(view(), DialogueManager.DIPLOMACY_OFFER_AID_MENU); break;\n            case WAR_MENU        : DiplomaticMessage.show(view(), DialogueManager.DIPLOMACY_DECLARE_WAR_MENU); break;\n            case EXIT            : \n            default              : escape(); break;\n        }\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/diplomacy/DiplomacyMainMenu.java", "stars": "74", "class_props": {"extends": "DiplomaticMessage", "implements": null, "modifiers": ["public"]}}, {"id": 64580, "method_name": "escape", "class_name": "DiplomacyMainMenu", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void escape() {\n        RotPUI.instance().selectRacesPanel();\t\t\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/diplomacy/DiplomacyMainMenu.java", "stars": "74", "class_props": {"extends": "DiplomaticMessage", "implements": null, "modifiers": ["public"]}}, {"id": 64581, "method_name": "getCount", "class_name": "UrlArrayVO", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getCount() {\n        return count;\n    }", "url": "https://raw.githubusercontent.com/wechaturl/wechat_url_api_java_sdk/master/src/main/java/www/wechaturl/us/fangfeng/sdk/vo/UrlArrayVO.java", "stars": "2", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 64582, "method_name": "setCount", "class_name": "UrlArrayVO", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setCount(int count) {\n        this.count = count;\n    }", "url": "https://raw.githubusercontent.com/wechaturl/wechat_url_api_java_sdk/master/src/main/java/www/wechaturl/us/fangfeng/sdk/vo/UrlArrayVO.java", "stars": "2", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 64583, "method_name": "getList", "class_name": "UrlArrayVO", "params": [], "throws": null, "modifiers": ["public"], "return_type": "List<T>", "snippet": "    public List<T> getList() {\n        return list;\n    }", "url": "https://raw.githubusercontent.com/wechaturl/wechat_url_api_java_sdk/master/src/main/java/www/wechaturl/us/fangfeng/sdk/vo/UrlArrayVO.java", "stars": "2", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 64584, "method_name": "setList", "class_name": "UrlArrayVO", "params": ["List<T>"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setList(List<T> list) {\n        this.list = list;\n    }", "url": "https://raw.githubusercontent.com/wechaturl/wechat_url_api_java_sdk/master/src/main/java/www/wechaturl/us/fangfeng/sdk/vo/UrlArrayVO.java", "stars": "2", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 64585, "method_name": "equals", "class_name": "UrlArrayVO", "params": ["Object"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean equals(Object o) {\n        if (this == o) return true;\n        if (!(o instanceof UrlArrayVO)) return false;\n        UrlArrayVO<?> that = (UrlArrayVO<?>) o;\n        return getCount() == that.getCount() &&\n                Objects.equals(getList(), that.getList());\n    }", "url": "https://raw.githubusercontent.com/wechaturl/wechat_url_api_java_sdk/master/src/main/java/www/wechaturl/us/fangfeng/sdk/vo/UrlArrayVO.java", "stars": "2", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 64586, "method_name": "hashCode", "class_name": "UrlArrayVO", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int hashCode() {\n        return Objects.hash(getCount(), getList());\n    }", "url": "https://raw.githubusercontent.com/wechaturl/wechat_url_api_java_sdk/master/src/main/java/www/wechaturl/us/fangfeng/sdk/vo/UrlArrayVO.java", "stars": "2", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 64587, "method_name": "onFiled", "class_name": "BooleanValueChangeAspect", "params": ["JoinPoint", "Object", "Object"], "throws": ["IllegalAccessException"], "modifiers": ["public"], "return_type": "void", "snippet": "    public void onFiled(JoinPoint joinPoint, Object newValue, Object t) throws IllegalAccessException {\n        Object object = joinPoint.getThis();\n\n        FieldSignature fieldSignature = (FieldSignature) joinPoint.getSignature();\n        String fileName = fieldSignature.getName();\n        Field field = fieldSignature.getField();\n        field.setAccessible(true);\n        Class clazz = fieldSignature.getFieldType();\n        String clazzName = clazz.getSimpleName();\n\n        Object oldValue = field.get(t);\n\n        Log.i(\"MainActivity\", \"\\nonFiled value = \" + newValue.toString()\n                + \"\\n fieldSignature =\" + fieldSignature.toString()\n                + \"\\nfield = \" + field.toString()\n                + \" +  \\nFileName = \" + fileName\n                + \"\\nclazzName = \" + clazzName\n                + \" \\noldValue = \" + oldValue.toString() );\n    }", "url": "https://raw.githubusercontent.com/he303954106/AOP_Demo/master/app/src/main/java/com/netease/aop/login/aspect/BooleanValueChangeAspect.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 64588, "method_name": "loadUserByUsername", "class_name": "AuthUserDetailsService", "params": ["String"], "throws": ["UsernameNotFoundException"], "modifiers": ["public"], "return_type": "UserDetails", "snippet": "\tpublic UserDetails loadUserByUsername(String username) throws UsernameNotFoundException {\n\t\tUserEntity user = userRepository.findUserByUserName(username);\n\t\tif(user != null){\n\t\t\tList<GrantedAuthority> authorities = new ArrayList<GrantedAuthority>();\n\t\t\tauthorities.add(new SimpleGrantedAuthority(\"ROLE_ADMIN\"));\n\t\t\t\n\t\t\treturn new User(user.getUserName(), user.getPassword(), authorities);\n\t\t}\n\t\t\n\t\tthrow new UsernameNotFoundException(\"User '\" + username + \"' not found.\");\n\t}", "url": "https://raw.githubusercontent.com/bruinli28/stockmarket/master/cloud-auth-service/src/main/java/com/iiht/stock/auth/security/AuthUserDetailsService.java", "stars": "2", "class_props": {"extends": null, "implements": ["UserDetailsService"], "modifiers": ["public"]}}, {"id": 64589, "method_name": "onAuthenticationSuccess", "class_name": "AjaxAuthenticationSuccessHandler", "params": ["HttpServletRequest", "HttpServletResponse", "Authentication"], "throws": ["IOException", "ServletException"], "modifiers": ["public"], "return_type": "void", "snippet": "    public void onAuthenticationSuccess(HttpServletRequest httpServletRequest, HttpServletResponse httpServletResponse, Authentication authentication) throws IOException, ServletException {\n        httpServletResponse.setCharacterEncoding(\"UTF-8\");//\u8bbe\u7f6e\u670d\u52a1\u5668\u7684\u7f16\u7801\uff0c\u9ed8\u8ba4\u662fISO-8859-1\n        httpServletResponse.setContentType(\"application/json; charset = utf-8\");//\u544a\u8bc9\u6d4f\u89c8\u5668\u670d\u52a1\u5668\u7684\u7f16\u7801\u683c\u5f0f\n        httpServletResponse.getWriter().write(new Gson().toJson(ApiResponse.ofSuccess(authentication)));\n    }", "url": "https://raw.githubusercontent.com/harry-xqb/rent-house/master/src/main/java/com/harry/renthouse/security/ajax_login/AjaxAuthenticationSuccessHandler.java", "stars": "3", "class_props": {"extends": null, "implements": ["AuthenticationSuccessHandler"], "modifiers": ["public"]}}, {"id": 64590, "method_name": "writeToParcel", "class_name": "ShopReviewStatRow", "params": ["Parcel", "int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void writeToParcel(Parcel dest, int flags) {\n        dest.writeInt(rating);\n        dest.writeInt(reviews_count);\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/Model/ModelReviewShop/ShopReviewStatRow.java", "stars": "10", "class_props": {"extends": null, "implements": ["Parcelable"], "modifiers": ["public"]}}, {"id": 64591, "method_name": "describeContents", "class_name": "ShopReviewStatRow", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int describeContents() {\n        return 0;\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/Model/ModelReviewShop/ShopReviewStatRow.java", "stars": "10", "class_props": {"extends": null, "implements": ["Parcelable"], "modifiers": ["public"]}}, {"id": 64592, "method_name": "getRating", "class_name": "ShopReviewStatRow", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getRating() {\n        return rating;\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/Model/ModelReviewShop/ShopReviewStatRow.java", "stars": "10", "class_props": {"extends": null, "implements": ["Parcelable"], "modifiers": ["public"]}}, {"id": 64593, "method_name": "setRating", "class_name": "ShopReviewStatRow", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setRating(int rating) {\n        this.rating = rating;\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/Model/ModelReviewShop/ShopReviewStatRow.java", "stars": "10", "class_props": {"extends": null, "implements": ["Parcelable"], "modifiers": ["public"]}}, {"id": 64594, "method_name": "getReviews_count", "class_name": "ShopReviewStatRow", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getReviews_count() {\n        return reviews_count;\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/Model/ModelReviewShop/ShopReviewStatRow.java", "stars": "10", "class_props": {"extends": null, "implements": ["Parcelable"], "modifiers": ["public"]}}, {"id": 64595, "method_name": "setReviews_count", "class_name": "ShopReviewStatRow", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setReviews_count(int reviews_count) {\n        this.reviews_count = reviews_count;\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/Model/ModelReviewShop/ShopReviewStatRow.java", "stars": "10", "class_props": {"extends": null, "implements": ["Parcelable"], "modifiers": ["public"]}}, {"id": 64596, "method_name": "onCreate", "class_name": "MumlaActivity", "params": ["Bundle"], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void onCreate(Bundle savedInstanceState) {\n        mSettings = Settings.getInstance(this);\n        setTheme(mSettings.getTheme());\n\n        super.onCreate(savedInstanceState);\n        setContentView(R.layout.activity_main);\n\n        setStayAwake(mSettings.shouldStayAwake());\n\n        SharedPreferences preferences = PreferenceManager.getDefaultSharedPreferences(this);\n        preferences.registerOnSharedPreferenceChangeListener(this);\n\n        mDatabase = new MumlaSQLiteDatabase(this); // TODO add support for cloud storage\n        mDatabase.open();\n\n        mDrawerLayout = (DrawerLayout) findViewById(R.id.drawer_layout);\n        mDrawerList = (ListView) findViewById(R.id.left_drawer);\n        mDrawerList.setOnItemClickListener(this);\n        mDrawerAdapter = new DrawerAdapter(this, this);\n        mDrawerList.setAdapter(mDrawerAdapter);\n        mDrawerToggle = new ActionBarDrawerToggle(this, mDrawerLayout, R.string.drawer_open, R.string.drawer_close) {\n            @Override\n            public void onDrawerClosed(View drawerView) {\n                supportInvalidateOptionsMenu();\n            }\n\n            @Override\n            public void onDrawerStateChanged(int newState) {\n                super.onDrawerStateChanged(newState);\n                // Prevent push to talk from getting stuck on when the drawer is opened.\n                if (getService() != null && getService().isConnected()) {\n                    IHumlaSession session = getService().getSession();\n                    if (session.isTalking() && !mSettings.isPushToTalkToggle()) {\n                        session.setTalkingState(false);\n                    }\n                }\n            }\n\n            @Override\n            public void onDrawerOpened(View drawerView) {\n                supportInvalidateOptionsMenu();\n            }\n        };\n\n        mDrawerLayout.setDrawerListener(mDrawerToggle);\n        getSupportActionBar().setDisplayHomeAsUpEnabled(true);\n        getSupportActionBar().setHomeButtonEnabled(true);\n\n        AlertDialog.Builder dadb = new AlertDialog.Builder(this);\n        dadb.setPositiveButton(R.string.confirm, new DialogInterface.OnClickListener() {\n            @Override\n            public void onClick(DialogInterface dialog, int which) {\n                if(mService != null) mService.disconnect();\n                loadDrawerFragment(DrawerAdapter.ITEM_FAVOURITES);\n            }\n        });\n        dadb.setNegativeButton(android.R.string.cancel, null);\n        mDisconnectPromptBuilder = dadb;\n\n        if(savedInstanceState == null) {\n            if (getIntent() != null && getIntent().hasExtra(EXTRA_DRAWER_FRAGMENT)) {\n                loadDrawerFragment(getIntent().getIntExtra(EXTRA_DRAWER_FRAGMENT,\n                        DrawerAdapter.ITEM_FAVOURITES));\n            } else {\n                loadDrawerFragment(DrawerAdapter.ITEM_FAVOURITES);\n            }\n        }\n\n        // If we're given a Mumble URL to show, open up a server edit fragment.\n        if(getIntent() != null &&\n                Intent.ACTION_VIEW.equals(getIntent().getAction())) {\n            String url = getIntent().getDataString();\n            try {\n                Server server = MumbleURLParser.parseURL(url);\n\n                // Open a dialog prompting the user to connect to the Mumble server.\n                DialogFragment fragment = ServerEditFragment.createServerEditDialog(\n                        MumlaActivity.this, server, ServerEditFragment.Action.CONNECT_ACTION, true);\n                fragment.show(getSupportFragmentManager(), \"url_edit\");\n            } catch (MalformedURLException e) {\n                Toast.makeText(this, getString(R.string.mumble_url_parse_failed), Toast.LENGTH_LONG).show();\n                e.printStackTrace();\n            }\n        }\n\n        setVolumeControlStream(mSettings.isHandsetMode() ?\n                AudioManager.STREAM_VOICE_CALL : AudioManager.STREAM_MUSIC);\n\n        if(mSettings.isFirstRun()) showSetupWizard();\n    }", "url": "https://raw.githubusercontent.com/quite/mumla/master/app/src/main/java/se/lublin/mumla/app/MumlaActivity.java", "stars": "9", "class_props": {"extends": "AppCompatActivity", "implements": ["ListView", "FavouriteServerListFragment", "HumlaServiceProvider", "DatabaseProvider", "SharedPreferences", "DrawerAdapter", "ServerEditFragment"], "modifiers": ["public"]}}, {"id": 64597, "method_name": "onPostCreate", "class_name": "MumlaActivity", "params": ["Bundle"], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void onPostCreate(Bundle savedInstanceState) {\n        super.onPostCreate(savedInstanceState);\n        mDrawerToggle.syncState();\n    }", "url": "https://raw.githubusercontent.com/quite/mumla/master/app/src/main/java/se/lublin/mumla/app/MumlaActivity.java", "stars": "9", "class_props": {"extends": "AppCompatActivity", "implements": ["ListView", "FavouriteServerListFragment", "HumlaServiceProvider", "DatabaseProvider", "SharedPreferences", "DrawerAdapter", "ServerEditFragment"], "modifiers": ["public"]}}, {"id": 64598, "method_name": "onResume", "class_name": "MumlaActivity", "params": [], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void onResume() {\n        super.onResume();\n        Intent connectIntent = new Intent(this, MumlaService.class);\n        bindService(connectIntent, mConnection, 0);\n    }", "url": "https://raw.githubusercontent.com/quite/mumla/master/app/src/main/java/se/lublin/mumla/app/MumlaActivity.java", "stars": "9", "class_props": {"extends": "AppCompatActivity", "implements": ["ListView", "FavouriteServerListFragment", "HumlaServiceProvider", "DatabaseProvider", "SharedPreferences", "DrawerAdapter", "ServerEditFragment"], "modifiers": ["public"]}}, {"id": 64599, "method_name": "onPause", "class_name": "MumlaActivity", "params": [], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void onPause() {\n        super.onPause();\n        if (mErrorDialog != null)\n            mErrorDialog.dismiss();\n        if (mConnectingDialog != null)\n            mConnectingDialog.dismiss();\n\n        if(mService != null) {\n            for (HumlaServiceFragment fragment : mServiceFragments) {\n                fragment.setServiceBound(false);\n            }\n            mService.unregisterObserver(mObserver);\n            mService.setSuppressNotifications(false);\n        }\n        unbindService(mConnection);\n    }", "url": "https://raw.githubusercontent.com/quite/mumla/master/app/src/main/java/se/lublin/mumla/app/MumlaActivity.java", "stars": "9", "class_props": {"extends": "AppCompatActivity", "implements": ["ListView", "FavouriteServerListFragment", "HumlaServiceProvider", "DatabaseProvider", "SharedPreferences", "DrawerAdapter", "ServerEditFragment"], "modifiers": ["public"]}}, {"id": 64600, "method_name": "onDestroy", "class_name": "MumlaActivity", "params": [], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void onDestroy() {\n        SharedPreferences preferences = PreferenceManager.getDefaultSharedPreferences(this);\n        preferences.unregisterOnSharedPreferenceChangeListener(this);\n        mDatabase.close();\n        super.onDestroy();\n    }", "url": "https://raw.githubusercontent.com/quite/mumla/master/app/src/main/java/se/lublin/mumla/app/MumlaActivity.java", "stars": "9", "class_props": {"extends": "AppCompatActivity", "implements": ["ListView", "FavouriteServerListFragment", "HumlaServiceProvider", "DatabaseProvider", "SharedPreferences", "DrawerAdapter", "ServerEditFragment"], "modifiers": ["public"]}}, {"id": 64601, "method_name": "onPrepareOptionsMenu", "class_name": "MumlaActivity", "params": ["Menu"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean onPrepareOptionsMenu(Menu menu) {\n        MenuItem disconnectButton = menu.findItem(R.id.action_disconnect);\n        disconnectButton.setVisible(mService != null && mService.isConnected());\n\n        // Color the action bar icons to the primary text color of the theme.\n        int foregroundColor = getSupportActionBar().getThemedContext()\n                .obtainStyledAttributes(new int[] { android.R.attr.textColor })\n                .getColor(0, -1);\n        for(int x=0;x<menu.size();x++) {\n            MenuItem item = menu.getItem(x);\n            if(item.getIcon() != null) {\n                Drawable icon = item.getIcon().mutate(); // Mutate the icon so that the color filter is exclusive to the action bar\n                icon.setColorFilter(foregroundColor, PorterDuff.Mode.MULTIPLY);\n            }\n        }\n\n        return super.onPrepareOptionsMenu(menu);\n    }", "url": "https://raw.githubusercontent.com/quite/mumla/master/app/src/main/java/se/lublin/mumla/app/MumlaActivity.java", "stars": "9", "class_props": {"extends": "AppCompatActivity", "implements": ["ListView", "FavouriteServerListFragment", "HumlaServiceProvider", "DatabaseProvider", "SharedPreferences", "DrawerAdapter", "ServerEditFragment"], "modifiers": ["public"]}}, {"id": 64602, "method_name": "onCreateOptionsMenu", "class_name": "MumlaActivity", "params": ["Menu"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean onCreateOptionsMenu(Menu menu) {\n        // Inflate the menu; this adds items to the action bar if it is present.\n        getMenuInflater().inflate(R.menu.mumla, menu);\n        return true;\n    }", "url": "https://raw.githubusercontent.com/quite/mumla/master/app/src/main/java/se/lublin/mumla/app/MumlaActivity.java", "stars": "9", "class_props": {"extends": "AppCompatActivity", "implements": ["ListView", "FavouriteServerListFragment", "HumlaServiceProvider", "DatabaseProvider", "SharedPreferences", "DrawerAdapter", "ServerEditFragment"], "modifiers": ["public"]}}, {"id": 64603, "method_name": "onOptionsItemSelected", "class_name": "MumlaActivity", "params": ["MenuItem"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean onOptionsItemSelected(MenuItem item) {\n        if(mDrawerToggle.onOptionsItemSelected(item))\n            return true;\n\n        switch (item.getItemId()) {\n            case R.id.action_disconnect:\n                getService().disconnect();\n                return true;\n        }\n\n        return false;\n    }", "url": "https://raw.githubusercontent.com/quite/mumla/master/app/src/main/java/se/lublin/mumla/app/MumlaActivity.java", "stars": "9", "class_props": {"extends": "AppCompatActivity", "implements": ["ListView", "FavouriteServerListFragment", "HumlaServiceProvider", "DatabaseProvider", "SharedPreferences", "DrawerAdapter", "ServerEditFragment"], "modifiers": ["public"]}}, {"id": 64604, "method_name": "onConfigurationChanged", "class_name": "MumlaActivity", "params": ["Configuration"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onConfigurationChanged(Configuration newConfig) {\n        super.onConfigurationChanged(newConfig);\n        mDrawerToggle.onConfigurationChanged(newConfig);\n    }", "url": "https://raw.githubusercontent.com/quite/mumla/master/app/src/main/java/se/lublin/mumla/app/MumlaActivity.java", "stars": "9", "class_props": {"extends": "AppCompatActivity", "implements": ["ListView", "FavouriteServerListFragment", "HumlaServiceProvider", "DatabaseProvider", "SharedPreferences", "DrawerAdapter", "ServerEditFragment"], "modifiers": ["public"]}}, {"id": 64605, "method_name": "onKeyDown", "class_name": "MumlaActivity", "params": ["int", "KeyEvent"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean onKeyDown(int keyCode, KeyEvent event) {\n        if (mService != null && keyCode == mSettings.getPushToTalkKey()) {\n            mService.onTalkKeyDown();\n            return true;\n        }\n        return super.onKeyDown(keyCode, event);\n    }", "url": "https://raw.githubusercontent.com/quite/mumla/master/app/src/main/java/se/lublin/mumla/app/MumlaActivity.java", "stars": "9", "class_props": {"extends": "AppCompatActivity", "implements": ["ListView", "FavouriteServerListFragment", "HumlaServiceProvider", "DatabaseProvider", "SharedPreferences", "DrawerAdapter", "ServerEditFragment"], "modifiers": ["public"]}}, {"id": 64606, "method_name": "onKeyUp", "class_name": "MumlaActivity", "params": ["int", "KeyEvent"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean onKeyUp(int keyCode, KeyEvent event) {\n        if (mService != null && keyCode == mSettings.getPushToTalkKey()) {\n            mService.onTalkKeyUp();\n            return true;\n        }\n        return super.onKeyUp(keyCode, event);\n    }", "url": "https://raw.githubusercontent.com/quite/mumla/master/app/src/main/java/se/lublin/mumla/app/MumlaActivity.java", "stars": "9", "class_props": {"extends": "AppCompatActivity", "implements": ["ListView", "FavouriteServerListFragment", "HumlaServiceProvider", "DatabaseProvider", "SharedPreferences", "DrawerAdapter", "ServerEditFragment"], "modifiers": ["public"]}}, {"id": 64607, "method_name": "onBackPressed", "class_name": "MumlaActivity", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onBackPressed() {\n        if(mService != null && mService.isConnected()) {\n            mDisconnectPromptBuilder.setMessage(getString(R.string.disconnectSure,\n                    mService.getTargetServer().getName()));\n            mDisconnectPromptBuilder.show();\n            return;\n        }\n        super.onBackPressed();\n    }", "url": "https://raw.githubusercontent.com/quite/mumla/master/app/src/main/java/se/lublin/mumla/app/MumlaActivity.java", "stars": "9", "class_props": {"extends": "AppCompatActivity", "implements": ["ListView", "FavouriteServerListFragment", "HumlaServiceProvider", "DatabaseProvider", "SharedPreferences", "DrawerAdapter", "ServerEditFragment"], "modifiers": ["public"]}}, {"id": 64608, "method_name": "onItemClick", "class_name": "MumlaActivity", "params": ["AdapterView<?>", "View", "int", "long"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onItemClick(AdapterView<?> parent, View view, int position, long id) {\n        mDrawerLayout.closeDrawers();\n        loadDrawerFragment((int) id);\n    }", "url": "https://raw.githubusercontent.com/quite/mumla/master/app/src/main/java/se/lublin/mumla/app/MumlaActivity.java", "stars": "9", "class_props": {"extends": "AppCompatActivity", "implements": ["ListView", "FavouriteServerListFragment", "HumlaServiceProvider", "DatabaseProvider", "SharedPreferences", "DrawerAdapter", "ServerEditFragment"], "modifiers": ["public"]}}, {"id": 64609, "method_name": "showSetupWizard", "class_name": "MumlaActivity", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void showSetupWizard() {\n        // Prompt the user to generate a certificate.\n        if(mSettings.isUsingCertificate()) return;\n        AlertDialog.Builder adb = new AlertDialog.Builder(this);\n        adb.setTitle(R.string.first_run_generate_certificate_title);\n        adb.setMessage(R.string.first_run_generate_certificate);\n        adb.setPositiveButton(R.string.generate, new DialogInterface.OnClickListener() {\n            @Override\n            public void onClick(DialogInterface dialog, int which) {\n                MumlaCertificateGenerateTask generateTask = new MumlaCertificateGenerateTask(MumlaActivity.this) {\n                    @Override\n                    protected void onPostExecute(DatabaseCertificate result) {\n                        super.onPostExecute(result);\n                        if(result != null) mSettings.setDefaultCertificateId(result.getId());\n                    }\n                };\n                generateTask.execute();\n            }\n        });\n        adb.show();\n        mSettings.setFirstRun(false);\n\n        // TODO: finish wizard\n//        Intent intent = new Intent(this, WizardActivity.class);\n//        startActivity(intent);\n    }", "url": "https://raw.githubusercontent.com/quite/mumla/master/app/src/main/java/se/lublin/mumla/app/MumlaActivity.java", "stars": "9", "class_props": {"extends": "AppCompatActivity", "implements": ["ListView", "FavouriteServerListFragment", "HumlaServiceProvider", "DatabaseProvider", "SharedPreferences", "DrawerAdapter", "ServerEditFragment"], "modifiers": ["public"]}}, {"id": 64610, "method_name": "loadDrawerFragment", "class_name": "MumlaActivity", "params": ["int"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void loadDrawerFragment(int fragmentId) {\n        Class<? extends Fragment> fragmentClass = null;\n        Bundle args = new Bundle();\n        switch (fragmentId) {\n            case DrawerAdapter.ITEM_SERVER:\n                fragmentClass = ChannelFragment.class;\n                break;\n            case DrawerAdapter.ITEM_INFO:\n                fragmentClass = ServerInfoFragment.class;\n                break;\n            case DrawerAdapter.ITEM_ACCESS_TOKENS:\n                fragmentClass = AccessTokenFragment.class;\n                Server connectedServer = getService().getTargetServer();\n                args.putLong(\"server\", connectedServer.getId());\n                args.putStringArrayList(\"access_tokens\", (ArrayList<String>) mDatabase.getAccessTokens(connectedServer.getId()));\n                break;\n            case DrawerAdapter.ITEM_PINNED_CHANNELS:\n                fragmentClass = ChannelFragment.class;\n                args.putBoolean(\"pinned\", true);\n                break;\n            case DrawerAdapter.ITEM_FAVOURITES:\n                fragmentClass = FavouriteServerListFragment.class;\n                break;\n            case DrawerAdapter.ITEM_PUBLIC:\n                fragmentClass = PublicServerListFragment.class;\n                break;\n            case DrawerAdapter.ITEM_SETTINGS:\n                Intent prefIntent = new Intent(this, Preferences.class);\n                startActivity(prefIntent);\n                return;\n            default:\n                return;\n        }\n        Fragment fragment = Fragment.instantiate(this, fragmentClass.getName(), args);\n        getSupportFragmentManager().beginTransaction()\n                    .replace(R.id.content_frame, fragment, fragmentClass.getName())\n                    .setTransition(FragmentTransaction.TRANSIT_FRAGMENT_FADE)\n                    .commit();\n        setTitle(mDrawerAdapter.getItemWithId(fragmentId).title);\n    }", "url": "https://raw.githubusercontent.com/quite/mumla/master/app/src/main/java/se/lublin/mumla/app/MumlaActivity.java", "stars": "9", "class_props": {"extends": "AppCompatActivity", "implements": ["ListView", "FavouriteServerListFragment", "HumlaServiceProvider", "DatabaseProvider", "SharedPreferences", "DrawerAdapter", "ServerEditFragment"], "modifiers": ["public"]}}, {"id": 64611, "method_name": "connectToServer", "class_name": "MumlaActivity", "params": ["Server"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void connectToServer(final Server server) {\n        mServerPendingPerm = null;\n\n        if (ContextCompat.checkSelfPermission(MumlaActivity.this,\n                Manifest.permission.RECORD_AUDIO)\n                != PackageManager.PERMISSION_GRANTED) {\n            ActivityCompat.requestPermissions(MumlaActivity.this,\n                    new String[]{Manifest.permission.RECORD_AUDIO},\n                    PERMISSIONS_REQUEST_RECORD_AUDIO);\n            mServerPendingPerm = server;\n            return;\n        }\n\n        // Check if we're already connected to a server; if so, inform user.\n        if(mService != null && mService.isConnected()) {\n            AlertDialog.Builder adb = new AlertDialog.Builder(this);\n            adb.setMessage(R.string.reconnect_dialog_message);\n            adb.setPositiveButton(R.string.connect, new DialogInterface.OnClickListener() {\n                @Override\n                public void onClick(DialogInterface dialog, int which) {\n                    // Register an observer to reconnect to the new server once disconnected.\n                    mService.registerObserver(new HumlaObserver() {\n                        @Override\n                        public void onDisconnected(HumlaException e) {\n                            connectToServer(server);\n                            mService.unregisterObserver(this);\n                        }\n                    });\n                    mService.disconnect();\n                }\n            });\n            adb.setNegativeButton(android.R.string.cancel, null);\n            adb.show();\n            return;\n        }\n\n        if (mSettings.isTorEnabled()) {\n            if (!OrbotHelper.isOrbotInstalled(this)) {\n                mSettings.disableTor();\n                AlertDialog.Builder adb = new AlertDialog.Builder(MumlaActivity.this);\n                adb.setMessage(R.string.orbot_not_installed);\n                adb.setPositiveButton(android.R.string.ok, null);\n                adb.show();\n                return;\n            } else {\n                if (!isPortOpen(HumlaConnection.TOR_HOST, HumlaConnection.TOR_PORT, 2000)) {\n                    AlertDialog.Builder adb = new AlertDialog.Builder(MumlaActivity.this);\n                    adb.setMessage(getString(R.string.orbot_tor_failed, HumlaConnection.TOR_PORT));\n                    adb.setPositiveButton(android.R.string.ok, null);\n                    adb.show();\n                    return;\n                }\n            }\n        }\n\n        ServerConnectTask connectTask = new ServerConnectTask(this, mDatabase);\n        connectTask.execute(server);\n    }", "url": "https://raw.githubusercontent.com/quite/mumla/master/app/src/main/java/se/lublin/mumla/app/MumlaActivity.java", "stars": "9", "class_props": {"extends": "AppCompatActivity", "implements": ["ListView", "FavouriteServerListFragment", "HumlaServiceProvider", "DatabaseProvider", "SharedPreferences", "DrawerAdapter", "ServerEditFragment"], "modifiers": ["public"]}}, {"id": 64612, "method_name": "isPortOpen", "class_name": "MumlaActivity", "params": ["String", "int", "int"], "throws": null, "modifiers": ["private"], "return_type": "boolean", "snippet": "    private boolean isPortOpen(final String host, final int port, final int timeout) {\n        final AtomicBoolean open = new AtomicBoolean(false);\n        try {\n            Thread thread = new Thread(new Runnable() {\n                @Override\n                public void run() {\n                    try {\n                        Socket socket = new Socket();\n                        socket.connect(new InetSocketAddress(host, port), timeout);\n                        socket.close();\n                        open.set(true);\n                    } catch (Exception e) {\n                        Log.d(TAG, \"isPortOpen() run()\" + e);\n                    }\n                }\n            });\n            thread.start();\n            thread.join();\n            return open.get();\n        }\n        catch (Exception e) {\n            Log.d(TAG, \"isPortOpen() \" + e);\n        }\n        return false;\n    }", "url": "https://raw.githubusercontent.com/quite/mumla/master/app/src/main/java/se/lublin/mumla/app/MumlaActivity.java", "stars": "9", "class_props": {"extends": "AppCompatActivity", "implements": ["ListView", "FavouriteServerListFragment", "HumlaServiceProvider", "DatabaseProvider", "SharedPreferences", "DrawerAdapter", "ServerEditFragment"], "modifiers": ["public"]}}, {"id": 64613, "method_name": "onRequestPermissionsResult", "class_name": "MumlaActivity", "params": ["int", "String", "int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onRequestPermissionsResult(int requestCode, @NonNull String[] permissions,\n                                           @NonNull int[] grantResults) {\n        super.onRequestPermissionsResult(requestCode, permissions, grantResults);\n        if (requestCode == PERMISSIONS_REQUEST_RECORD_AUDIO) {\n            if (grantResults.length > 0 && grantResults[0] == PackageManager.PERMISSION_GRANTED) {\n                if (mServerPendingPerm != null) {\n                    connectToServer(mServerPendingPerm);\n                } else {\n                    Log.w(TAG, \"No pending server after record audio permission was granted\");\n                }\n            } else {\n                Toast.makeText(MumlaActivity.this, getString(R.string.grant_perm_microphone),\n                        Toast.LENGTH_LONG).show();\n            }\n        }\n    }", "url": "https://raw.githubusercontent.com/quite/mumla/master/app/src/main/java/se/lublin/mumla/app/MumlaActivity.java", "stars": "9", "class_props": {"extends": "AppCompatActivity", "implements": ["ListView", "FavouriteServerListFragment", "HumlaServiceProvider", "DatabaseProvider", "SharedPreferences", "DrawerAdapter", "ServerEditFragment"], "modifiers": ["public"]}}, {"id": 64614, "method_name": "connectToPublicServer", "class_name": "MumlaActivity", "params": ["PublicServer"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void connectToPublicServer(final PublicServer server) {\n        AlertDialog.Builder alertBuilder = new AlertDialog.Builder(this);\n\n        final Settings settings = Settings.getInstance(this);\n\n        // Allow username entry\n        final EditText usernameField = new EditText(this);\n        usernameField.setHint(settings.getDefaultUsername());\n        alertBuilder.setView(usernameField);\n\n        alertBuilder.setTitle(R.string.connectToServer);\n\n        alertBuilder.setPositiveButton(R.string.connect, new DialogInterface.OnClickListener() {\n            @Override\n            public void onClick(DialogInterface dialog, int which) {\n                PublicServer newServer = server;\n                if(!usernameField.getText().toString().equals(\"\"))\n                    newServer.setUsername(usernameField.getText().toString());\n                else\n                    newServer.setUsername(settings.getDefaultUsername());\n                connectToServer(newServer);\n            }\n        });\n\n        alertBuilder.show();\n    }", "url": "https://raw.githubusercontent.com/quite/mumla/master/app/src/main/java/se/lublin/mumla/app/MumlaActivity.java", "stars": "9", "class_props": {"extends": "AppCompatActivity", "implements": ["ListView", "FavouriteServerListFragment", "HumlaServiceProvider", "DatabaseProvider", "SharedPreferences", "DrawerAdapter", "ServerEditFragment"], "modifiers": ["public"]}}, {"id": 64615, "method_name": "setStayAwake", "class_name": "MumlaActivity", "params": ["boolean"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void setStayAwake(boolean stayAwake) {\n        if (stayAwake) {\n            getWindow().addFlags(WindowManager.LayoutParams.FLAG_KEEP_SCREEN_ON);\n        } else {\n            getWindow().clearFlags(WindowManager.LayoutParams.FLAG_KEEP_SCREEN_ON);\n        }\n    }", "url": "https://raw.githubusercontent.com/quite/mumla/master/app/src/main/java/se/lublin/mumla/app/MumlaActivity.java", "stars": "9", "class_props": {"extends": "AppCompatActivity", "implements": ["ListView", "FavouriteServerListFragment", "HumlaServiceProvider", "DatabaseProvider", "SharedPreferences", "DrawerAdapter", "ServerEditFragment"], "modifiers": ["public"]}}, {"id": 64616, "method_name": "updateConnectionState", "class_name": "MumlaActivity", "params": ["IHumlaService"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void updateConnectionState(IHumlaService service) {\n        if (mConnectingDialog != null)\n            mConnectingDialog.dismiss();\n        if (mErrorDialog != null)\n            mErrorDialog.dismiss();\n\n        switch (mService.getConnectionState()) {\n            case CONNECTING:\n                Server server = service.getTargetServer();\n                mConnectingDialog = new ProgressDialog(this);\n                mConnectingDialog.setIndeterminate(true);\n                mConnectingDialog.setCancelable(true);\n                mConnectingDialog.setOnCancelListener(new DialogInterface.OnCancelListener() {\n                    @Override\n                    public void onCancel(DialogInterface dialog) {\n                        mService.disconnect();\n                        Toast.makeText(MumlaActivity.this, R.string.cancelled,\n                                Toast.LENGTH_SHORT).show();\n                    }\n                });\n                // SRV lookup is done later, so we no longer show the port (and\n                // only the configured hostname)\n                mConnectingDialog.setMessage(getString(R.string.connecting_to_server, server.getHost())\n                        + (mSettings.isTorEnabled() ? \" (Tor)\" : \"\"));\n                mConnectingDialog.show();\n                break;\n            case CONNECTION_LOST:\n                // Only bother the user if the error hasn't already been shown.\n                if (!getService().isErrorShown()) {\n                    HumlaException error = getService().getConnectionError();\n                    AlertDialog.Builder ab = new AlertDialog.Builder(MumlaActivity.this);\n                    ab.setTitle(getString(R.string.connectionRefused) + (mSettings.isTorEnabled() ? \" (Tor)\" : \"\"));\n                    if (mService.isReconnecting()) {\n                        ab.setMessage(error.getMessage() + \"\\n\\n\"\n                                + getString(R.string.attempting_reconnect,\n                                error.getCause() != null ? error.getCause().getMessage() : \"unknown\"));\n                        ab.setPositiveButton(R.string.cancel_reconnect, new DialogInterface.OnClickListener() {\n                            @Override\n                            public void onClick(DialogInterface dialog, int which) {\n                                if (getService() != null) {\n                                    getService().cancelReconnect();\n                                    getService().markErrorShown();\n                                }\n                            }\n                        });\n                    } else if (error.getReason() == HumlaException.HumlaDisconnectReason.REJECT &&\n                               (error.getReject().getType() == Mumble.Reject.RejectType.WrongUserPW ||\n                                error.getReject().getType() == Mumble.Reject.RejectType.WrongServerPW)) {\n                        final EditText passwordField = new EditText(this);\n                        passwordField.setInputType(InputType.TYPE_CLASS_TEXT |\n                                InputType.TYPE_TEXT_VARIATION_PASSWORD);\n                        passwordField.setHint(R.string.password);\n                        ab.setTitle(R.string.invalid_password);\n                        ab.setMessage(error.getMessage());\n                        ab.setView(passwordField);\n                        ab.setPositiveButton(R.string.reconnect, new DialogInterface.OnClickListener() {\n                            @Override\n                            public void onClick(DialogInterface dialog, int which) {\n                                Server server = getService().getTargetServer();\n                                if (server == null)\n                                    return;\n                                String password = passwordField.getText().toString();\n                                server.setPassword(password);\n                                if (server.isSaved())\n                                    mDatabase.updateServer(server);\n                                connectToServer(server);\n                            }\n                        });\n                        ab.setNegativeButton(android.R.string.cancel, new DialogInterface.OnClickListener() {\n                            @Override\n                            public void onClick(DialogInterface dialog, int which) {\n                                if (getService() != null)\n                                    getService().markErrorShown();\n                            }\n                        });\n                    } else {\n                        ab.setMessage(error.getMessage());\n                        ab.setPositiveButton(android.R.string.ok, new DialogInterface.OnClickListener() {\n                            @Override\n                            public void onClick(DialogInterface dialog, int which) {\n                                if (getService() != null)\n                                    getService().markErrorShown();\n                            }\n                        });\n                    }\n                    ab.setCancelable(false);\n                    mErrorDialog = ab.show();\n                }\n                break;\n\n\n        }\n    }", "url": "https://raw.githubusercontent.com/quite/mumla/master/app/src/main/java/se/lublin/mumla/app/MumlaActivity.java", "stars": "9", "class_props": {"extends": "AppCompatActivity", "implements": ["ListView", "FavouriteServerListFragment", "HumlaServiceProvider", "DatabaseProvider", "SharedPreferences", "DrawerAdapter", "ServerEditFragment"], "modifiers": ["public"]}}, {"id": 64617, "method_name": "getService", "class_name": "MumlaActivity", "params": [], "throws": null, "modifiers": ["public"], "return_type": "IMumlaService", "snippet": "    public IMumlaService getService() {\n        return mService;\n    }", "url": "https://raw.githubusercontent.com/quite/mumla/master/app/src/main/java/se/lublin/mumla/app/MumlaActivity.java", "stars": "9", "class_props": {"extends": "AppCompatActivity", "implements": ["ListView", "FavouriteServerListFragment", "HumlaServiceProvider", "DatabaseProvider", "SharedPreferences", "DrawerAdapter", "ServerEditFragment"], "modifiers": ["public"]}}, {"id": 64618, "method_name": "getDatabase", "class_name": "MumlaActivity", "params": [], "throws": null, "modifiers": ["public"], "return_type": "MumlaDatabase", "snippet": "    public MumlaDatabase getDatabase() {\n        return mDatabase;\n    }", "url": "https://raw.githubusercontent.com/quite/mumla/master/app/src/main/java/se/lublin/mumla/app/MumlaActivity.java", "stars": "9", "class_props": {"extends": "AppCompatActivity", "implements": ["ListView", "FavouriteServerListFragment", "HumlaServiceProvider", "DatabaseProvider", "SharedPreferences", "DrawerAdapter", "ServerEditFragment"], "modifiers": ["public"]}}, {"id": 64619, "method_name": "addServiceFragment", "class_name": "MumlaActivity", "params": ["HumlaServiceFragment"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void addServiceFragment(HumlaServiceFragment fragment) {\n        mServiceFragments.add(fragment);\n    }", "url": "https://raw.githubusercontent.com/quite/mumla/master/app/src/main/java/se/lublin/mumla/app/MumlaActivity.java", "stars": "9", "class_props": {"extends": "AppCompatActivity", "implements": ["ListView", "FavouriteServerListFragment", "HumlaServiceProvider", "DatabaseProvider", "SharedPreferences", "DrawerAdapter", "ServerEditFragment"], "modifiers": ["public"]}}, {"id": 64620, "method_name": "removeServiceFragment", "class_name": "MumlaActivity", "params": ["HumlaServiceFragment"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void removeServiceFragment(HumlaServiceFragment fragment) {\n        mServiceFragments.remove(fragment);\n    }", "url": "https://raw.githubusercontent.com/quite/mumla/master/app/src/main/java/se/lublin/mumla/app/MumlaActivity.java", "stars": "9", "class_props": {"extends": "AppCompatActivity", "implements": ["ListView", "FavouriteServerListFragment", "HumlaServiceProvider", "DatabaseProvider", "SharedPreferences", "DrawerAdapter", "ServerEditFragment"], "modifiers": ["public"]}}, {"id": 64621, "method_name": "onSharedPreferenceChanged", "class_name": "MumlaActivity", "params": ["SharedPreferences", "String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onSharedPreferenceChanged(SharedPreferences sharedPreferences, String key) {\n        if(Settings.PREF_THEME.equals(key)) {\n            // Recreate activity when theme is changed\n            recreate();\n        } else if (Settings.PREF_STAY_AWAKE.equals(key)) {\n            setStayAwake(mSettings.shouldStayAwake());\n        } else if (Settings.PREF_HANDSET_MODE.equals(key)) {\n            setVolumeControlStream(mSettings.isHandsetMode() ?\n                    AudioManager.STREAM_VOICE_CALL : AudioManager.STREAM_MUSIC);\n        }\n    }", "url": "https://raw.githubusercontent.com/quite/mumla/master/app/src/main/java/se/lublin/mumla/app/MumlaActivity.java", "stars": "9", "class_props": {"extends": "AppCompatActivity", "implements": ["ListView", "FavouriteServerListFragment", "HumlaServiceProvider", "DatabaseProvider", "SharedPreferences", "DrawerAdapter", "ServerEditFragment"], "modifiers": ["public"]}}, {"id": 64622, "method_name": "isConnected", "class_name": "MumlaActivity", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean isConnected() {\n        return mService != null && mService.isConnected();\n    }", "url": "https://raw.githubusercontent.com/quite/mumla/master/app/src/main/java/se/lublin/mumla/app/MumlaActivity.java", "stars": "9", "class_props": {"extends": "AppCompatActivity", "implements": ["ListView", "FavouriteServerListFragment", "HumlaServiceProvider", "DatabaseProvider", "SharedPreferences", "DrawerAdapter", "ServerEditFragment"], "modifiers": ["public"]}}, {"id": 64623, "method_name": "getConnectedServerName", "class_name": "MumlaActivity", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getConnectedServerName() {\n        if(mService != null && mService.isConnected()) {\n            Server server = mService.getTargetServer();\n            return server.getName().equals(\"\") ? server.getHost() : server.getName();\n        }\n        if (BuildConfig.DEBUG)\n            throw new RuntimeException(\"getConnectedServerName should only be called if connected!\");\n        return \"\";\n    }", "url": "https://raw.githubusercontent.com/quite/mumla/master/app/src/main/java/se/lublin/mumla/app/MumlaActivity.java", "stars": "9", "class_props": {"extends": "AppCompatActivity", "implements": ["ListView", "FavouriteServerListFragment", "HumlaServiceProvider", "DatabaseProvider", "SharedPreferences", "DrawerAdapter", "ServerEditFragment"], "modifiers": ["public"]}}, {"id": 64624, "method_name": "onServerEdited", "class_name": "MumlaActivity", "params": ["ServerEditFragment", "Server"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onServerEdited(ServerEditFragment.Action action, Server server) {\n        switch (action) {\n            case ADD_ACTION:\n                mDatabase.addServer(server);\n                loadDrawerFragment(DrawerAdapter.ITEM_FAVOURITES);\n                break;\n            case EDIT_ACTION:\n                mDatabase.updateServer(server);\n                loadDrawerFragment(DrawerAdapter.ITEM_FAVOURITES);\n                break;\n            case CONNECT_ACTION:\n                connectToServer(server);\n                break;\n        }\n    }", "url": "https://raw.githubusercontent.com/quite/mumla/master/app/src/main/java/se/lublin/mumla/app/MumlaActivity.java", "stars": "9", "class_props": {"extends": "AppCompatActivity", "implements": ["ListView", "FavouriteServerListFragment", "HumlaServiceProvider", "DatabaseProvider", "SharedPreferences", "DrawerAdapter", "ServerEditFragment"], "modifiers": ["public"]}}, {"id": 64625, "method_name": "change", "class_name": "Demo01Function", "params": ["String", "Function<String,Integer>"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void change(String s, Function<String,Integer> fun){\n        //Integer in = fun.apply(s);\n        int in = fun.apply(s);//\u81ea\u52a8\u62c6\u7bb1 Integer->int\n        System.out.println(in);\n    }", "url": "https://raw.githubusercontent.com/liuminchao123/JavaWeb_Learning/master/02.%20java/Java/%E9%BB%91%E9%A9%AC%E6%95%99%E7%A8%8B/23.%E3%80%90%E5%87%BD%E6%95%B0%E5%BC%8F%E6%8E%A5%E5%8F%A3%E3%80%91-%E7%AC%94%E8%AE%B0/code/12_FunctionalInterface/src/com/itheima/demo07/Function/Demo01Function.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 64626, "method_name": "main", "class_name": "Demo01Function", "params": ["String"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void main(String[] args) {\n        //\u5b9a\u4e49\u4e00\u4e2a\u5b57\u7b26\u4e32\u7c7b\u578b\u7684\u6574\u6570\n        String s = \"1234\";\n        //\u8c03\u7528change\u65b9\u6cd5,\u4f20\u9012\u5b57\u7b26\u4e32\u7c7b\u578b\u7684\u6574\u6570,\u548cLambda\u8868\u8fbe\u5f0f\n        change(s,(String str)->{\n            //\u628a\u5b57\u7b26\u4e32\u7c7b\u578b\u7684\u6574\u6570,\u8f6c\u6362\u4e3aInteger\u7c7b\u578b\u7684\u6574\u6570\u8fd4\u56de\n            return Integer.parseInt(str);\n        });\n        //\u4f18\u5316Lambda\n        change(s,str->Integer.parseInt(str));\n    }", "url": "https://raw.githubusercontent.com/liuminchao123/JavaWeb_Learning/master/02.%20java/Java/%E9%BB%91%E9%A9%AC%E6%95%99%E7%A8%8B/23.%E3%80%90%E5%87%BD%E6%95%B0%E5%BC%8F%E6%8E%A5%E5%8F%A3%E3%80%91-%E7%AC%94%E8%AE%B0/code/12_FunctionalInterface/src/com/itheima/demo07/Function/Demo01Function.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 64627, "method_name": "getUser", "class_name": "UserAuthenticationEvent", "params": [], "throws": null, "modifiers": ["public"], "return_type": "User", "snippet": "\tpublic User getUser() {\n\t\treturn user;\n\t}", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/event/authentication/UserAuthenticationEvent.java", "stars": "12", "class_props": {"extends": null, "implements": ["Event"], "modifiers": ["public"]}}, {"id": 64628, "method_name": "getHttpServletRequest", "class_name": "UserAuthenticationEvent", "params": [], "throws": null, "modifiers": ["public"], "return_type": "HttpServletRequest", "snippet": "\tpublic HttpServletRequest getHttpServletRequest() {\n\t\treturn httpServletRequest;\n\t}", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/event/authentication/UserAuthenticationEvent.java", "stars": "12", "class_props": {"extends": null, "implements": ["Event"], "modifiers": ["public"]}}, {"id": 64629, "method_name": "getHttpServletResponse", "class_name": "UserAuthenticationEvent", "params": [], "throws": null, "modifiers": ["public"], "return_type": "HttpServletResponse", "snippet": "\tpublic HttpServletResponse getHttpServletResponse() {\n\t\treturn httpServletResponse;\n\t}", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/event/authentication/UserAuthenticationEvent.java", "stars": "12", "class_props": {"extends": null, "implements": ["Event"], "modifiers": ["public"]}}, {"id": 64630, "method_name": "getAuthenticationMode", "class_name": "UserAuthenticationEvent", "params": [], "throws": null, "modifiers": ["public"], "return_type": "AuthenticationMode", "snippet": "\tpublic AuthenticationMode getAuthenticationMode() {\n\t\treturn authenticationMode;\n\t}", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/event/authentication/UserAuthenticationEvent.java", "stars": "12", "class_props": {"extends": null, "implements": ["Event"], "modifiers": ["public"]}}, {"id": 64631, "method_name": "getAuthenticationResult", "class_name": "UserAuthenticationEvent", "params": [], "throws": null, "modifiers": ["public"], "return_type": "AuthenticationResult", "snippet": "\tpublic AuthenticationResult getAuthenticationResult() {\n\t\treturn authenticationResult;\n\t}", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/event/authentication/UserAuthenticationEvent.java", "stars": "12", "class_props": {"extends": null, "implements": ["Event"], "modifiers": ["public"]}}, {"id": 64632, "method_name": "setDeptId", "class_name": "DeptDO", "params": ["Long"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void setDeptId(Long deptId) {\n\t\tthis.deptId = deptId;\n\t}", "url": "https://raw.githubusercontent.com/201206030/novel-plus/master/novel-admin/src/main/java/com/java2nb/system/domain/DeptDO.java", "stars": "137", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 64633, "method_name": "getDeptId", "class_name": "DeptDO", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Long", "snippet": "\tpublic Long getDeptId() {\n\t\treturn deptId;\n\t}", "url": "https://raw.githubusercontent.com/201206030/novel-plus/master/novel-admin/src/main/java/com/java2nb/system/domain/DeptDO.java", "stars": "137", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 64634, "method_name": "setParentId", "class_name": "DeptDO", "params": ["Long"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void setParentId(Long parentId) {\n\t\tthis.parentId = parentId;\n\t}", "url": "https://raw.githubusercontent.com/201206030/novel-plus/master/novel-admin/src/main/java/com/java2nb/system/domain/DeptDO.java", "stars": "137", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 64635, "method_name": "getParentId", "class_name": "DeptDO", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Long", "snippet": "\tpublic Long getParentId() {\n\t\treturn parentId;\n\t}", "url": "https://raw.githubusercontent.com/201206030/novel-plus/master/novel-admin/src/main/java/com/java2nb/system/domain/DeptDO.java", "stars": "137", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 64636, "method_name": "setName", "class_name": "DeptDO", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void setName(String name) {\n\t\tthis.name = name;\n\t}", "url": "https://raw.githubusercontent.com/201206030/novel-plus/master/novel-admin/src/main/java/com/java2nb/system/domain/DeptDO.java", "stars": "137", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 64637, "method_name": "getName", "class_name": "DeptDO", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "\tpublic String getName() {\n\t\treturn name;\n\t}", "url": "https://raw.githubusercontent.com/201206030/novel-plus/master/novel-admin/src/main/java/com/java2nb/system/domain/DeptDO.java", "stars": "137", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 64638, "method_name": "setOrderNum", "class_name": "DeptDO", "params": ["Integer"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void setOrderNum(Integer orderNum) {\n\t\tthis.orderNum = orderNum;\n\t}", "url": "https://raw.githubusercontent.com/201206030/novel-plus/master/novel-admin/src/main/java/com/java2nb/system/domain/DeptDO.java", "stars": "137", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 64639, "method_name": "getOrderNum", "class_name": "DeptDO", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Integer", "snippet": "\tpublic Integer getOrderNum() {\n\t\treturn orderNum;\n\t}", "url": "https://raw.githubusercontent.com/201206030/novel-plus/master/novel-admin/src/main/java/com/java2nb/system/domain/DeptDO.java", "stars": "137", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 64640, "method_name": "setDelFlag", "class_name": "DeptDO", "params": ["Integer"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void setDelFlag(Integer delFlag) {\n\t\tthis.delFlag = delFlag;\n\t}", "url": "https://raw.githubusercontent.com/201206030/novel-plus/master/novel-admin/src/main/java/com/java2nb/system/domain/DeptDO.java", "stars": "137", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 64641, "method_name": "getDelFlag", "class_name": "DeptDO", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Integer", "snippet": "\tpublic Integer getDelFlag() {\n\t\treturn delFlag;\n\t}", "url": "https://raw.githubusercontent.com/201206030/novel-plus/master/novel-admin/src/main/java/com/java2nb/system/domain/DeptDO.java", "stars": "137", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 64642, "method_name": "toString", "class_name": "DeptDO", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "\tpublic String toString() {\n\t\treturn \"DeptDO{\" +\n\t\t\t\t\"deptId=\" + deptId +\n\t\t\t\t\", parentId=\" + parentId +\n\t\t\t\t\", name='\" + name + '\\'' +\n\t\t\t\t\", orderNum=\" + orderNum +\n\t\t\t\t\", delFlag=\" + delFlag +\n\t\t\t\t'}';\n\t}", "url": "https://raw.githubusercontent.com/201206030/novel-plus/master/novel-admin/src/main/java/com/java2nb/system/domain/DeptDO.java", "stars": "137", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 64643, "method_name": "getNome", "class_name": "Fornecedor", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getNome() {\n        return nome;\n    }", "url": "https://raw.githubusercontent.com/samuelPed/trabalho-pupo/master/src/java/br/gov/sp/fatec/cadastro/Fornecedor.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 64644, "method_name": "setNome", "class_name": "Fornecedor", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setNome(String nome) {\n        this.nome = nome;\n    }", "url": "https://raw.githubusercontent.com/samuelPed/trabalho-pupo/master/src/java/br/gov/sp/fatec/cadastro/Fornecedor.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 64645, "method_name": "getRazaoSocial", "class_name": "Fornecedor", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getRazaoSocial() {\n        return razaoSocial;\n    }", "url": "https://raw.githubusercontent.com/samuelPed/trabalho-pupo/master/src/java/br/gov/sp/fatec/cadastro/Fornecedor.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 64646, "method_name": "setRazaoSocial", "class_name": "Fornecedor", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setRazaoSocial(String razaoSocial) {\n        this.razaoSocial = razaoSocial;\n    }", "url": "https://raw.githubusercontent.com/samuelPed/trabalho-pupo/master/src/java/br/gov/sp/fatec/cadastro/Fornecedor.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 64647, "method_name": "getEmail", "class_name": "Fornecedor", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getEmail() {\n        return email;\n    }", "url": "https://raw.githubusercontent.com/samuelPed/trabalho-pupo/master/src/java/br/gov/sp/fatec/cadastro/Fornecedor.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 64648, "method_name": "setEmail", "class_name": "Fornecedor", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setEmail(String email) {\n        this.email = email;\n    }", "url": "https://raw.githubusercontent.com/samuelPed/trabalho-pupo/master/src/java/br/gov/sp/fatec/cadastro/Fornecedor.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 64649, "method_name": "getEndereco", "class_name": "Fornecedor", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getEndereco() {\n        return endereco;\n    }", "url": "https://raw.githubusercontent.com/samuelPed/trabalho-pupo/master/src/java/br/gov/sp/fatec/cadastro/Fornecedor.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 64650, "method_name": "setEndereco", "class_name": "Fornecedor", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setEndereco(String endereco) {\n        this.endereco = endereco;\n    }", "url": "https://raw.githubusercontent.com/samuelPed/trabalho-pupo/master/src/java/br/gov/sp/fatec/cadastro/Fornecedor.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 64651, "method_name": "getCnpj", "class_name": "Fornecedor", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getCnpj() {\n        return cnpj;\n    }", "url": "https://raw.githubusercontent.com/samuelPed/trabalho-pupo/master/src/java/br/gov/sp/fatec/cadastro/Fornecedor.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 64652, "method_name": "setCnpj", "class_name": "Fornecedor", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setCnpj(int cnpj) {\n        this.cnpj = cnpj;\n    }", "url": "https://raw.githubusercontent.com/samuelPed/trabalho-pupo/master/src/java/br/gov/sp/fatec/cadastro/Fornecedor.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 64653, "method_name": "getTelefone", "class_name": "Fornecedor", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getTelefone() {\n        return telefone;\n    }", "url": "https://raw.githubusercontent.com/samuelPed/trabalho-pupo/master/src/java/br/gov/sp/fatec/cadastro/Fornecedor.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 64654, "method_name": "setTelefone", "class_name": "Fornecedor", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setTelefone(int telefone) {\n        this.telefone = telefone;\n    }", "url": "https://raw.githubusercontent.com/samuelPed/trabalho-pupo/master/src/java/br/gov/sp/fatec/cadastro/Fornecedor.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 64655, "method_name": "getId", "class_name": "ExecNodeQuery", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Integer", "snippet": "    public Integer getId() {\n        return id;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/service/src/main/java/com/webank/wedatasphere/exchangis/exec/query/ExecNodeQuery.java", "stars": "23", "class_props": {"extends": "PageQuery", "implements": null, "modifiers": ["public"]}}, {"id": 64656, "method_name": "setId", "class_name": "ExecNodeQuery", "params": ["Integer"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setId(Integer id) {\n        this.id = id;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/service/src/main/java/com/webank/wedatasphere/exchangis/exec/query/ExecNodeQuery.java", "stars": "23", "class_props": {"extends": "PageQuery", "implements": null, "modifiers": ["public"]}}, {"id": 64657, "method_name": "getAddress", "class_name": "ExecNodeQuery", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getAddress() {\n        return address;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/service/src/main/java/com/webank/wedatasphere/exchangis/exec/query/ExecNodeQuery.java", "stars": "23", "class_props": {"extends": "PageQuery", "implements": null, "modifiers": ["public"]}}, {"id": 64658, "method_name": "setAddress", "class_name": "ExecNodeQuery", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setAddress(String address) {\n        this.address = address;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/service/src/main/java/com/webank/wedatasphere/exchangis/exec/query/ExecNodeQuery.java", "stars": "23", "class_props": {"extends": "PageQuery", "implements": null, "modifiers": ["public"]}}, {"id": 64659, "method_name": "onDraw", "class_name": "Practice07MatrixTranslateView", "params": ["Canvas"], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void onDraw(Canvas canvas) {\n        super.onDraw(canvas);\n\n        canvas.save();\n        matrix.reset();\n        matrix.postTranslate(-100, -100);\n        canvas.concat(matrix);\n        canvas.drawBitmap(bitmap, point1.x, point1.y, paint);\n        canvas.restore();\n\n        canvas.save();\n        matrix.reset();\n        matrix.postTranslate(200, 0);\n        canvas.concat(matrix);\n        canvas.drawBitmap(bitmap, point2.x, point2.y, paint);\n        canvas.restore();\n    }", "url": "https://raw.githubusercontent.com/Geekholt/Practice-CustomView/master/app/src/main/java/com/geekholt/practiceui/view/lesson4/Practice07MatrixTranslateView.java", "stars": "2", "class_props": {"extends": "View", "implements": null, "modifiers": ["public"]}}, {"id": 64660, "method_name": "createFromJson", "class_name": "KillExecutionAction", "params": ["Object"], "throws": null, "modifiers": ["public", "static"], "return_type": "KillExecutionAction", "snippet": "  public static KillExecutionAction createFromJson(final Object obj) {\n    return createFromJson((HashMap<String, Object>) obj);\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-exec-server/src/main/java/azkaban/execapp/action/KillExecutionAction.java", "stars": "18", "class_props": {"extends": null, "implements": ["TriggerAction"], "modifiers": ["public"]}}, {"id": 64661, "method_name": "createFromJson", "class_name": "KillExecutionAction", "params": ["HashMap<String,Object>"], "throws": null, "modifiers": ["public", "static"], "return_type": "KillExecutionAction", "snippet": "  public static KillExecutionAction createFromJson(final HashMap<String, Object> obj) {\n    final Map<String, Object> jsonObj = (HashMap<String, Object>) obj;\n    final String objType = (String) jsonObj.get(\"type\");\n    if (!objType.equals(type)) {\n      throw new RuntimeException(\"Cannot create action of \" + type + \" from \"\n          + objType);\n    }\n    final String actionId = (String) jsonObj.get(\"actionId\");\n    final int execId = Integer.valueOf((String) jsonObj.get(\"execId\"));\n    return new KillExecutionAction(actionId, execId);\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-exec-server/src/main/java/azkaban/execapp/action/KillExecutionAction.java", "stars": "18", "class_props": {"extends": null, "implements": ["TriggerAction"], "modifiers": ["public"]}}, {"id": 64662, "method_name": "getId", "class_name": "KillExecutionAction", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "  public String getId() {\n    return this.actionId;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-exec-server/src/main/java/azkaban/execapp/action/KillExecutionAction.java", "stars": "18", "class_props": {"extends": null, "implements": ["TriggerAction"], "modifiers": ["public"]}}, {"id": 64663, "method_name": "getType", "class_name": "KillExecutionAction", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "  public String getType() {\n    return type;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-exec-server/src/main/java/azkaban/execapp/action/KillExecutionAction.java", "stars": "18", "class_props": {"extends": null, "implements": ["TriggerAction"], "modifiers": ["public"]}}, {"id": 64664, "method_name": "fromJson", "class_name": "KillExecutionAction", "params": ["Object"], "throws": ["Exception"], "modifiers": ["public"], "return_type": "KillExecutionAction", "snippet": "  public KillExecutionAction fromJson(final Object obj) throws Exception {\n    return createFromJson((HashMap<String, Object>) obj);\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-exec-server/src/main/java/azkaban/execapp/action/KillExecutionAction.java", "stars": "18", "class_props": {"extends": null, "implements": ["TriggerAction"], "modifiers": ["public"]}}, {"id": 64665, "method_name": "toJson", "class_name": "KillExecutionAction", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Object", "snippet": "  public Object toJson() {\n    final Map<String, Object> jsonObj = new HashMap<>();\n    jsonObj.put(\"actionId\", this.actionId);\n    jsonObj.put(\"type\", type);\n    jsonObj.put(\"execId\", String.valueOf(this.execId));\n    return jsonObj;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-exec-server/src/main/java/azkaban/execapp/action/KillExecutionAction.java", "stars": "18", "class_props": {"extends": null, "implements": ["TriggerAction"], "modifiers": ["public"]}}, {"id": 64666, "method_name": "doAction", "class_name": "KillExecutionAction", "params": [], "throws": ["Exception"], "modifiers": ["public"], "return_type": "void", "snippet": "  public void doAction() throws Exception {\n    logger.info(\"ready to kill execution \" + this.execId);\n    ServiceProvider.SERVICE_PROVIDER.getInstance(FlowRunnerManager.class)\n        .cancelFlow(this.execId, Constants.AZKABAN_SLA_CHECKER_USERNAME);\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-exec-server/src/main/java/azkaban/execapp/action/KillExecutionAction.java", "stars": "18", "class_props": {"extends": null, "implements": ["TriggerAction"], "modifiers": ["public"]}}, {"id": 64667, "method_name": "setContext", "class_name": "KillExecutionAction", "params": ["Map<String,Object>"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void setContext(final Map<String, Object> context) {\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-exec-server/src/main/java/azkaban/execapp/action/KillExecutionAction.java", "stars": "18", "class_props": {"extends": null, "implements": ["TriggerAction"], "modifiers": ["public"]}}, {"id": 64668, "method_name": "getDescription", "class_name": "KillExecutionAction", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "  public String getDescription() {\n    return type + \" for \" + this.execId;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-exec-server/src/main/java/azkaban/execapp/action/KillExecutionAction.java", "stars": "18", "class_props": {"extends": null, "implements": ["TriggerAction"], "modifiers": ["public"]}}, {"id": 64669, "method_name": "onInit", "class_name": "TextToSpeechImplementation", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void onInit (int p0)\n\t{\n\t\tn_onInit (p0);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Debug/90/android/src/crc64a0e0a82d0db9a07d/TextToSpeechImplementation.java", "stars": "2", "class_props": {"extends": "java", "implements": ["mono", "android", "android"], "modifiers": ["public"]}}, {"id": 64670, "method_name": "n_onInit", "class_name": "TextToSpeechImplementation", "params": ["int"], "throws": null, "modifiers": ["private", "native"], "return_type": "void", "snippet": "\tprivate native void n_onInit (int p0);\n\n\n\tpublic void onUtteranceCompleted (java.lang.String p0)\n\t{\n\t\tn_onUtteranceCompleted (p0);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Debug/90/android/src/crc64a0e0a82d0db9a07d/TextToSpeechImplementation.java", "stars": "2", "class_props": {"extends": "java", "implements": ["mono", "android", "android"], "modifiers": ["public"]}}, {"id": 64671, "method_name": "onUtteranceCompleted", "class_name": "TextToSpeechImplementation", "params": ["java"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void onUtteranceCompleted (java.lang.String p0)\n\t{\n\t\tn_onUtteranceCompleted (p0);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Debug/90/android/src/crc64a0e0a82d0db9a07d/TextToSpeechImplementation.java", "stars": "2", "class_props": {"extends": "java", "implements": ["mono", "android", "android"], "modifiers": ["public"]}}, {"id": 64672, "method_name": "n_onUtteranceCompleted", "class_name": "TextToSpeechImplementation", "params": ["java"], "throws": null, "modifiers": ["private", "native"], "return_type": "void", "snippet": "\tprivate native void n_onUtteranceCompleted (java.lang.String p0);\n\n\tprivate java.util.ArrayList refList;\n\tpublic void monodroidAddReference (java.lang.Object obj)\n\t{\n\t\tif (refList == null)\n\t\t\trefList = new java.util.ArrayList ();\n\t\trefList.add (obj);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Debug/90/android/src/crc64a0e0a82d0db9a07d/TextToSpeechImplementation.java", "stars": "2", "class_props": {"extends": "java", "implements": ["mono", "android", "android"], "modifiers": ["public"]}}, {"id": 64673, "method_name": "monodroidAddReference", "class_name": "TextToSpeechImplementation", "params": ["java"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void monodroidAddReference (java.lang.Object obj)\n\t{\n\t\tif (refList == null)\n\t\t\trefList = new java.util.ArrayList ();\n\t\trefList.add (obj);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Debug/90/android/src/crc64a0e0a82d0db9a07d/TextToSpeechImplementation.java", "stars": "2", "class_props": {"extends": "java", "implements": ["mono", "android", "android"], "modifiers": ["public"]}}, {"id": 64674, "method_name": "monodroidClearReferences", "class_name": "TextToSpeechImplementation", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void monodroidClearReferences ()\n\t{\n\t\tif (refList != null)\n\t\t\trefList.clear ();\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Debug/90/android/src/crc64a0e0a82d0db9a07d/TextToSpeechImplementation.java", "stars": "2", "class_props": {"extends": "java", "implements": ["mono", "android", "android"], "modifiers": ["public"]}}, {"id": 64675, "method_name": "handle", "class_name": "URLHandler", "params": ["String", "Request", "HttpServletRequest", "HttpServletResponse"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void handle(String target, Request baseRequest, HttpServletRequest request, HttpServletResponse response) {\n        var env = Bored.env();\n        if (target.equals(\"/\")) {\n            target = \"/index\" + Bored.env().getSiteConfig().getURLSuffix();\n        }\n        if (Container.contains(target)) {\n            response.setStatus(HttpServletResponse.SC_OK);\n            var html = Container.get(target);\n            if (Objects.isNull(html.content())) {\n                ServletUtil.write(response, html.getInputStream(), html.contentType());\n            } else {\n                ServletUtil.write(response, html.content(), html.contentType());\n            }\n            baseRequest.setHandled(true);\n        }\n    }", "url": "https://raw.githubusercontent.com/Heemooo/Bored/master/src/main/java/com/bored/server/handler/URLHandler.java", "stars": "2", "class_props": {"extends": "AbstractHandler", "implements": null, "modifiers": ["public"]}}, {"id": 64676, "method_name": "newInstance", "class_name": "StatusFragment", "params": [], "throws": null, "modifiers": ["public", "static"], "return_type": "StatusFragment", "snippet": "    public static StatusFragment newInstance() {\n        StatusFragment fragment = new StatusFragment();\n        return fragment;\n    }", "url": "https://raw.githubusercontent.com/harvestcore/ipmdroid/master/app/src/main/java/com/agm/ipmanager/status/StatusFragment.java", "stars": "1", "class_props": {"extends": "Fragment", "implements": null, "modifiers": ["public"]}}, {"id": 64677, "method_name": "onCreate", "class_name": "StatusFragment", "params": ["Bundle"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n    }", "url": "https://raw.githubusercontent.com/harvestcore/ipmdroid/master/app/src/main/java/com/agm/ipmanager/status/StatusFragment.java", "stars": "1", "class_props": {"extends": "Fragment", "implements": null, "modifiers": ["public"]}}, {"id": 64678, "method_name": "onCreateView", "class_name": "StatusFragment", "params": ["LayoutInflater", "ViewGroup", "Bundle"], "throws": null, "modifiers": ["public"], "return_type": "View", "snippet": "    public View onCreateView(LayoutInflater inflater, ViewGroup container,\n                             Bundle savedInstanceState) {\n        View root = inflater.inflate(R.layout.fragment_status, container, false);\n\n        // Events recyclerView\n        statusRecyclerView = root.findViewById(R.id.eventsRecyclerView);\n        statusRecyclerView.setLayoutManager(new LinearLayoutManager(getContext()));\n        EventsAdapter eventsAdapter = new EventsAdapter(getContext(), EventManager.getInstance().getEvents());\n        statusRecyclerView.setAdapter(eventsAdapter);\n\n        // Set server status\n        serverStatusText = root.findViewById(R.id.serverStatusText);\n        String serverName = IPManager.getInstance().getServerName();\n        serverStatusText.setText(serverName.isEmpty() ? \"Server status\" : serverName);\n\n        // Server online?\n        boolean isOnline = IPManager.getInstance().isOnline();\n        HashMap<Service, Boolean> servicesStatus = IPManager.getInstance().getServicesStatus();\n        isOnline = servicesStatus == null ? false : true;\n\n        // Mongo service status icon\n        mongoStatusImage = root.findViewById(R.id.mongoStatusImage);\n        if (isOnline) {\n            mongoStatusImage.setImageResource(servicesStatus.get(Service.MONGO) ? R.drawable.up : R.drawable.down);\n        } else {\n            mongoStatusImage.setImageResource(R.drawable.offline);\n        }\n\n        // Docker service status icon\n        dockerStatusImage = root.findViewById(R.id.dockerStatusImage);\n        if (isOnline) {\n            dockerStatusImage.setImageResource(servicesStatus.get(Service.DOCKER) ? R.drawable.up : R.drawable.down);\n        } else {\n            dockerStatusImage.setImageResource(R.drawable.offline);\n        }\n\n        return root;\n    }", "url": "https://raw.githubusercontent.com/harvestcore/ipmdroid/master/app/src/main/java/com/agm/ipmanager/status/StatusFragment.java", "stars": "1", "class_props": {"extends": "Fragment", "implements": null, "modifiers": ["public"]}}, {"id": 64679, "method_name": "onResume", "class_name": "StatusFragment", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onResume() {\n        super.onResume();\n        statusRecyclerView.setAdapter(new EventsAdapter(getContext(), EventManager.getInstance().getEvents()));\n    }", "url": "https://raw.githubusercontent.com/harvestcore/ipmdroid/master/app/src/main/java/com/agm/ipmanager/status/StatusFragment.java", "stars": "1", "class_props": {"extends": "Fragment", "implements": null, "modifiers": ["public"]}}, {"id": 64680, "method_name": "create", "class_name": "SignBreakAllianceIncident", "params": ["Empire", "Empire", "Empire"], "throws": null, "modifiers": ["public", "static"], "return_type": "SignBreakAllianceIncident", "snippet": "    public static SignBreakAllianceIncident create(Empire e1, Empire e2, Empire t) {\n        SignBreakAllianceIncident inc = new SignBreakAllianceIncident(e1, e2, t);\n        return inc;\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/incidents/SignBreakAllianceIncident.java", "stars": "74", "class_props": {"extends": "DiplomaticIncident", "implements": null, "modifiers": ["public"]}}, {"id": 64681, "method_name": "title", "class_name": "SignBreakAllianceIncident", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String title()    { return text(\"INC_LEFT_ALLIANCE_TITLE\"); }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/incidents/SignBreakAllianceIncident.java", "stars": "74", "class_props": {"extends": "DiplomaticIncident", "implements": null, "modifiers": ["public"]}}, {"id": 64682, "method_name": "key", "class_name": "SignBreakAllianceIncident", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String key()      { return concat(\"BreakAlliance:\", str(empOther)); }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/incidents/SignBreakAllianceIncident.java", "stars": "74", "class_props": {"extends": "DiplomaticIncident", "implements": null, "modifiers": ["public"]}}, {"id": 64683, "method_name": "decode", "class_name": "SignBreakAllianceIncident", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String decode(String s) {\n        String s1 = s.replace(\"[year]\", str(dateOccurred));\n        s1 = galaxy().empire(empMe).replaceTokens(s1, \"my\");\n        s1 = galaxy().empire(empYou).replaceTokens(s1, \"your\");\n        s1 = galaxy().empire(empOther).replaceTokens(s1, \"other\");\n        return s1;\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/incidents/SignBreakAllianceIncident.java", "stars": "74", "class_props": {"extends": "DiplomaticIncident", "implements": null, "modifiers": ["public"]}}, {"id": 64684, "method_name": "checkedColumnWidth", "class_name": "GridAutofitLayoutManager", "params": ["Context", "int"], "throws": null, "modifiers": ["private"], "return_type": "int", "snippet": "    private int checkedColumnWidth(@NonNull final Context context, int columnWidth) {\n        if (columnWidth <= 0) {\n            /* Set default columnWidth value (48dp here). It is better to move this constant\n            to static constant on top, but we need context to convert it to dp, so can't really\n            do so. */\n            columnWidth = (int) TypedValue.applyDimension(TypedValue.COMPLEX_UNIT_DIP, 48,\n                    context.getResources().getDisplayMetrics());\n        }\n        return columnWidth;\n    }", "url": "https://raw.githubusercontent.com/justneon33/Sketchcode/master/app/src/main/java/com/sketch/code/two/manager/GridAutofitLayoutManager.java", "stars": "4", "class_props": {"extends": "GridLayoutManager", "implements": null, "modifiers": ["public"]}}, {"id": 64685, "method_name": "setColumnWidth", "class_name": "GridAutofitLayoutManager", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setColumnWidth(final int newColumnWidth) {\n        if (newColumnWidth > 0 && newColumnWidth != columnWidth) {\n            columnWidth = newColumnWidth;\n            isColumnWidthChanged = true;\n        }\n    }", "url": "https://raw.githubusercontent.com/justneon33/Sketchcode/master/app/src/main/java/com/sketch/code/two/manager/GridAutofitLayoutManager.java", "stars": "4", "class_props": {"extends": "GridLayoutManager", "implements": null, "modifiers": ["public"]}}, {"id": 64686, "method_name": "onLayoutChildren", "class_name": "GridAutofitLayoutManager", "params": ["RecyclerView", "RecyclerView"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onLayoutChildren(@NonNull final RecyclerView.Recycler recycler, @NonNull final RecyclerView.State state) {\n        final int width = getWidth();\n        final int height = getHeight();\n        if (columnWidth > 0 && width > 0 && height > 0 && (isColumnWidthChanged || lastWidth != width || lastHeight != height)) {\n            final int totalSpace;\n            if (getOrientation() == VERTICAL) {\n                totalSpace = width - getPaddingRight() - getPaddingLeft();\n            } else {\n                totalSpace = height - getPaddingTop() - getPaddingBottom();\n            }\n            final int spanCount = Math.max(1, totalSpace / columnWidth);\n            setSpanCount(spanCount);\n            isColumnWidthChanged = false;\n        }\n        lastWidth = width;\n        lastHeight = height;\n        super.onLayoutChildren(recycler, state);\n    }", "url": "https://raw.githubusercontent.com/justneon33/Sketchcode/master/app/src/main/java/com/sketch/code/two/manager/GridAutofitLayoutManager.java", "stars": "4", "class_props": {"extends": "GridLayoutManager", "implements": null, "modifiers": ["public"]}}, {"id": 64687, "method_name": "isFilled", "class_name": "FillParamsStepData", "params": ["DynActionForm", "Connection"], "throws": ["BGException"], "modifiers": ["public"], "return_type": "boolean", "snippet": "\tpublic boolean isFilled(DynActionForm form, Connection con) throws BGException {\n\t\tCommonObjectLink contractLink = Utils.getFirst(new ProcessLinkDAO(con).getObjectLinksWithType(data.getProcess().getId(), Contract.OBJECT_TYPE + \"%\"));\n\t\tif (contractLink == null)\n\t\t\treturn false;\n\t\t\n\t\tcontract = new Contract(StringUtils.substringAfter(contractLink.getLinkedObjectType(), \":\"), \n\t\t\t\tcontractLink.getLinkedObjectId());\n\t\t\n\t\tSet<Integer> checkParamIds = new HashSet<>(step.getCheckParamIds());\n\t\t\n\t\tContractParamDAO paramDao = new ContractParamDAO(form.getUser(), contract.getBillingId());\n\t\tList<ContractParameter> allParamValues = paramDao.getParameterList(contract.getId());\n\t\t\n\t\tList<ContractParameter> filteredValues = new ArrayList<>(step.getParameterIds().size());\n\t\tfor (int paramId : step.getParameterIds()) {\n\t\t\tContractParameter param = allParamValues.stream().filter(cp -> cp.getParamId() == paramId).findFirst().orElse(null);\n\t\t\tif (param != null) {\n\t\t\t\tfilteredValues.add(param);\n\t\t\t\tif (Utils.notBlankString(param.getValue()))\n\t\t\t\t\tcheckParamIds.remove(paramId);\n\t\t\t}\n\t\t\tvalues = filteredValues;\n\t\t}\n\t\t\n\t\treturn checkParamIds.isEmpty();\n\t}", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/model/process/wizard/FillParamsStepData.java", "stars": "12", "class_props": {"extends": "StepData", "implements": null, "modifiers": ["public"]}}, {"id": 64688, "method_name": "getContract", "class_name": "FillParamsStepData", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Contract", "snippet": "\tpublic Contract getContract() {\n\t\treturn contract;\n\t}", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/model/process/wizard/FillParamsStepData.java", "stars": "12", "class_props": {"extends": "StepData", "implements": null, "modifiers": ["public"]}}, {"id": 64689, "method_name": "getValues", "class_name": "FillParamsStepData", "params": [], "throws": null, "modifiers": ["public"], "return_type": "List<ContractParameter>", "snippet": "\tpublic List<ContractParameter> getValues() {\n\t\treturn values;\n\t}", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/model/process/wizard/FillParamsStepData.java", "stars": "12", "class_props": {"extends": "StepData", "implements": null, "modifiers": ["public"]}}, {"id": 64690, "method_name": "init", "class_name": "FlowTriggerServlet", "params": ["ServletConfig"], "throws": ["ServletException"], "modifiers": ["public"], "return_type": "void", "snippet": "  public void init(final ServletConfig config) throws ServletException {\n    super.init(config);\n    final AzkabanWebServer server = (AzkabanWebServer) getApplication();\n    this.scheduler = server.getScheduler();\n    this.projectManager = server.getProjectManager();\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-web-server/src/main/java/azkaban/webapp/servlet/FlowTriggerServlet.java", "stars": "18", "class_props": {"extends": "LoginAbstractAzkabanServlet", "implements": null, "modifiers": ["public"]}}, {"id": 64691, "method_name": "handleGet", "class_name": "FlowTriggerServlet", "params": ["HttpServletRequest", "HttpServletResponse", "Session"], "throws": ["ServletException", "IOException"], "modifiers": ["protected"], "return_type": "void", "snippet": "  protected void handleGet(final HttpServletRequest req, final HttpServletResponse resp,\n      final Session session) throws ServletException, IOException {\n    if (hasParam(req, \"ajax\")) {\n      handleAJAXAction(req, resp, session);\n    } else {\n      handlePage(req, resp, session);\n    }\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-web-server/src/main/java/azkaban/webapp/servlet/FlowTriggerServlet.java", "stars": "18", "class_props": {"extends": "LoginAbstractAzkabanServlet", "implements": null, "modifiers": ["public"]}}, {"id": 64692, "method_name": "ajaxFetchTrigger", "class_name": "FlowTriggerServlet", "params": ["int", "String", "Session", "HashMap<String,Object>"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "  private void ajaxFetchTrigger(final int projectId, final String flowId, final Session session,\n      final HashMap<String,\n          Object> ret) {\n    final ScheduledFlowTrigger res = this.scheduler\n        .getScheduledFlowTriggerJobs().stream().filter(\n            scheduledFlowTrigger -> scheduledFlowTrigger.getFlowId().equals(flowId)\n                && scheduledFlowTrigger.getProjectId\n                () == projectId).findFirst().orElse(null);\n\n    if (res != null) {\n      final Map<String, Object> jsonObj = new HashMap<>();\n      jsonObj.put(\"cronExpression\", res.getFlowTrigger().getSchedule().getCronExpression());\n      jsonObj.put(\"submitUser\", res.getSubmitUser());\n      jsonObj.put(\"firstSchedTime\",\n          utils.formatDateTime(res.getQuartzTrigger().getStartTime().getTime()));\n      jsonObj.put(\"nextExecTime\",\n          utils.formatDateTime(res.getQuartzTrigger().getNextFireTime().getTime()));\n\n      Long maxWaitMin = null;\n      if (res.getFlowTrigger().getMaxWaitDuration().isPresent()) {\n        maxWaitMin = res.getFlowTrigger().getMaxWaitDuration().get().toMinutes();\n      }\n      jsonObj.put(\"maxWaitMin\", maxWaitMin);\n\n      if (!res.getFlowTrigger().getDependencies().isEmpty()) {\n        jsonObj.put(\"dependencies\", res.getDependencyListJson());\n      }\n      ret.put(\"flowTrigger\", jsonObj);\n    }\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-web-server/src/main/java/azkaban/webapp/servlet/FlowTriggerServlet.java", "stars": "18", "class_props": {"extends": "LoginAbstractAzkabanServlet", "implements": null, "modifiers": ["public"]}}, {"id": 64693, "method_name": "checkProjectIdAndFlowId", "class_name": "FlowTriggerServlet", "params": ["HttpServletRequest"], "throws": null, "modifiers": ["private"], "return_type": "boolean", "snippet": "  private boolean checkProjectIdAndFlowId(final HttpServletRequest req) {\n    return hasParam(req, \"projectId\") && hasParam(req, \"flowId\");\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-web-server/src/main/java/azkaban/webapp/servlet/FlowTriggerServlet.java", "stars": "18", "class_props": {"extends": "LoginAbstractAzkabanServlet", "implements": null, "modifiers": ["public"]}}, {"id": 64694, "method_name": "handleAJAXAction", "class_name": "FlowTriggerServlet", "params": ["HttpServletRequest", "HttpServletResponse", "Session"], "throws": ["ServletException", "IOException"], "modifiers": ["private"], "return_type": "void", "snippet": "  private void handleAJAXAction(final HttpServletRequest req,\n      final HttpServletResponse resp, final Session session) throws ServletException,\n      IOException {\n    final HashMap<String, Object> ret = new HashMap<>();\n    final String ajaxName = getParam(req, \"ajax\");\n    if (ajaxName.equals(\"fetchTrigger\")) {\n      if (checkProjectIdAndFlowId(req)) {\n        final int projectId = getIntParam(req, \"projectId\");\n        final String flowId = getParam(req, \"flowId\");\n        ajaxFetchTrigger(projectId, flowId, session, ret);\n      }\n    } else if (ajaxName.equals(\"pauseTrigger\") || ajaxName.equals(\"resumeTrigger\")) {\n      if (checkProjectIdAndFlowId(req)) {\n        final int projectId = getIntParam(req, \"projectId\");\n        final String flowId = getParam(req, \"flowId\");\n        final Project project = this.projectManager.getProject(projectId);\n\n        if (project == null) {\n          ret.put(\"error\", \"please specify a valid project id\");\n        } else if (!hasPermission(project, session.getUser(), Type.ADMIN)) {\n          ret.put(\"error\", \"Permission denied. Need ADMIN access.\");\n        } else {\n          try {\n            if (ajaxName.equals(\"pauseTrigger\")) {\n              this.scheduler.pauseFlowTrigger(projectId, flowId);\n            } else {\n              this.scheduler.resumeFlowTrigger(projectId, flowId);\n            }\n            ret.put(\"status\", \"success\");\n          } catch (final SchedulerException ex) {\n            ret.put(\"error\", ex.getMessage());\n          }\n        }\n      }\n    }\n    if (ret != null) {\n      this.writeJSON(resp, ret);\n    }\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-web-server/src/main/java/azkaban/webapp/servlet/FlowTriggerServlet.java", "stars": "18", "class_props": {"extends": "LoginAbstractAzkabanServlet", "implements": null, "modifiers": ["public"]}}, {"id": 64695, "method_name": "handlePage", "class_name": "FlowTriggerServlet", "params": ["HttpServletRequest", "HttpServletResponse", "Session"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "  private void handlePage(final HttpServletRequest req,\n      final HttpServletResponse resp, final Session session) {\n    final Page page =\n        newPage(req, resp, session,\n            \"azkaban/webapp/servlet/velocity/flowtriggerspage.vm\");\n\n    page.add(\"flowTriggers\", this.scheduler.getScheduledFlowTriggerJobs());\n    String languageType = LoadJsonUtils.getLanguageType();\n    page.add(\"currentlangType\", languageType);\n    page.render();\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-web-server/src/main/java/azkaban/webapp/servlet/FlowTriggerServlet.java", "stars": "18", "class_props": {"extends": "LoginAbstractAzkabanServlet", "implements": null, "modifiers": ["public"]}}, {"id": 64696, "method_name": "handlePost", "class_name": "FlowTriggerServlet", "params": ["HttpServletRequest", "HttpServletResponse", "Session"], "throws": ["ServletException", "IOException"], "modifiers": ["protected"], "return_type": "void", "snippet": "  protected void handlePost(final HttpServletRequest req, final HttpServletResponse resp,\n      final Session session) throws ServletException, IOException {\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-web-server/src/main/java/azkaban/webapp/servlet/FlowTriggerServlet.java", "stars": "18", "class_props": {"extends": "LoginAbstractAzkabanServlet", "implements": null, "modifiers": ["public"]}}, {"id": 64697, "method_name": "processCommand", "class_name": "LastSignalCommand", "params": ["Emulator<?>", "GdbStub", "String"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean processCommand(Emulator<?> emulator, GdbStub stub, String command) {\n        stub.makePacketAndSend(\"S\" + GdbStub.SIGTRAP);\n        return true;\n    }", "url": "https://raw.githubusercontent.com/wmm1996528/unidbg_douyin10/master/src/main/java/com/github/unidbg/debugger/gdb/LastSignalCommand.java", "stars": "16", "class_props": {"extends": null, "implements": ["GdbStubCommand"], "modifiers": []}}, {"id": 64698, "method_name": "shouldSetParameter", "class_name": "UnknownTypeHandlerTest", "params": [], "throws": ["Exception"], "modifiers": ["public"], "return_type": "void", "snippet": "  public void shouldSetParameter() throws Exception {\n    TYPE_HANDLER.setParameter(ps, 1, \"Hello\", null);\n    verify(ps).setString(1, \"Hello\");\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/type/UnknownTypeHandlerTest.java", "stars": "15", "class_props": {"extends": "BaseTypeHandlerTest", "implements": null, "modifiers": []}}, {"id": 64699, "method_name": "shouldGetResultFromResultSetByName", "class_name": "UnknownTypeHandlerTest", "params": [], "throws": ["Exception"], "modifiers": ["public"], "return_type": "void", "snippet": "  public void shouldGetResultFromResultSetByName() throws Exception {\n    when(rs.getMetaData()).thenReturn(rsmd);\n    when(rsmd.getColumnCount()).thenReturn(1);\n    when(rsmd.getColumnLabel(1)).thenReturn(\"column\");\n    when(rsmd.getColumnClassName(1)).thenReturn(String.class.getName());\n    when(rsmd.getColumnType(1)).thenReturn(JdbcType.VARCHAR.TYPE_CODE);\n    when(rs.getString(\"column\")).thenReturn(\"Hello\");\n    assertEquals(\"Hello\", TYPE_HANDLER.getResult(rs, \"column\"));\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/type/UnknownTypeHandlerTest.java", "stars": "15", "class_props": {"extends": "BaseTypeHandlerTest", "implements": null, "modifiers": []}}, {"id": 64700, "method_name": "shouldGetResultNullFromResultSetByName", "class_name": "UnknownTypeHandlerTest", "params": [], "throws": ["Exception"], "modifiers": ["public"], "return_type": "void", "snippet": "  public void shouldGetResultNullFromResultSetByName() throws Exception {\n    // Unnecessary\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/type/UnknownTypeHandlerTest.java", "stars": "15", "class_props": {"extends": "BaseTypeHandlerTest", "implements": null, "modifiers": []}}, {"id": 64701, "method_name": "shouldGetResultFromResultSetByPosition", "class_name": "UnknownTypeHandlerTest", "params": [], "throws": ["Exception"], "modifiers": ["public"], "return_type": "void", "snippet": "  public void shouldGetResultFromResultSetByPosition() throws Exception {\n    when(rs.getMetaData()).thenReturn(rsmd);\n    when(rsmd.getColumnClassName(1)).thenReturn(String.class.getName());\n    when(rsmd.getColumnType(1)).thenReturn(JdbcType.VARCHAR.TYPE_CODE);\n    when(rs.getString(1)).thenReturn(\"Hello\");\n    assertEquals(\"Hello\", TYPE_HANDLER.getResult(rs, 1));\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/type/UnknownTypeHandlerTest.java", "stars": "15", "class_props": {"extends": "BaseTypeHandlerTest", "implements": null, "modifiers": []}}, {"id": 64702, "method_name": "shouldGetResultNullFromResultSetByPosition", "class_name": "UnknownTypeHandlerTest", "params": [], "throws": ["Exception"], "modifiers": ["public"], "return_type": "void", "snippet": "  public void shouldGetResultNullFromResultSetByPosition() throws Exception {\n    // Unnecessary\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/type/UnknownTypeHandlerTest.java", "stars": "15", "class_props": {"extends": "BaseTypeHandlerTest", "implements": null, "modifiers": []}}, {"id": 64703, "method_name": "shouldGetResultFromCallableStatement", "class_name": "UnknownTypeHandlerTest", "params": [], "throws": ["Exception"], "modifiers": ["public"], "return_type": "void", "snippet": "  public void shouldGetResultFromCallableStatement() throws Exception {\n    when(cs.getObject(1)).thenReturn(\"Hello\");\n    assertEquals(\"Hello\", TYPE_HANDLER.getResult(cs, 1));\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/type/UnknownTypeHandlerTest.java", "stars": "15", "class_props": {"extends": "BaseTypeHandlerTest", "implements": null, "modifiers": []}}, {"id": 64704, "method_name": "shouldGetResultNullFromCallableStatement", "class_name": "UnknownTypeHandlerTest", "params": [], "throws": ["Exception"], "modifiers": ["public"], "return_type": "void", "snippet": "  public void shouldGetResultNullFromCallableStatement() throws Exception {\n    when(cs.getObject(1)).thenReturn(null);\n    assertNull(TYPE_HANDLER.getResult(cs, 1));\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/type/UnknownTypeHandlerTest.java", "stars": "15", "class_props": {"extends": "BaseTypeHandlerTest", "implements": null, "modifiers": []}}, {"id": 64705, "method_name": "setParameterWithNullParameter", "class_name": "UnknownTypeHandlerTest", "params": [], "throws": ["Exception"], "modifiers": [], "return_type": "void", "snippet": "  void setParameterWithNullParameter() throws Exception {\n    TYPE_HANDLER.setParameter(ps, 0, null, JdbcType.INTEGER);\n    verify(ps).setNull(0, JdbcType.INTEGER.TYPE_CODE);\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/type/UnknownTypeHandlerTest.java", "stars": "15", "class_props": {"extends": "BaseTypeHandlerTest", "implements": null, "modifiers": []}}, {"id": 64706, "method_name": "setParameterWithNullParameterThrowsException", "class_name": "UnknownTypeHandlerTest", "params": [], "throws": ["SQLException"], "modifiers": [], "return_type": "void", "snippet": "  void setParameterWithNullParameterThrowsException() throws SQLException {\n    doThrow(new SQLException(\"invalid column\")).when(ps).setNull(1, JdbcType.INTEGER.TYPE_CODE);\n    try {\n      TYPE_HANDLER.setParameter(ps, 1, null, JdbcType.INTEGER);\n      Assertions.fail(\"Should have thrown a TypeException\");\n    } catch (Exception e) {\n      Assertions.assertTrue(e instanceof TypeException, \"Expected TypedException\");\n      Assertions.assertTrue(e.getMessage().contains(\"parameter #1\"), \"Parameter index is in exception\");\n    }\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/type/UnknownTypeHandlerTest.java", "stars": "15", "class_props": {"extends": "BaseTypeHandlerTest", "implements": null, "modifiers": []}}, {"id": 64707, "method_name": "setParameterWithNonNullParameterThrowsException", "class_name": "UnknownTypeHandlerTest", "params": [], "throws": ["SQLException"], "modifiers": [], "return_type": "void", "snippet": "  void setParameterWithNonNullParameterThrowsException() throws SQLException {\n    doThrow(new SQLException(\"invalid column\")).when((UnknownTypeHandler) TYPE_HANDLER).setNonNullParameter(ps, 1, 99, JdbcType.INTEGER);\n    try {\n      TYPE_HANDLER.setParameter(ps, 1, 99, JdbcType.INTEGER);\n      Assertions.fail(\"Should have thrown a TypeException\");\n    } catch (Exception e) {\n      Assertions.assertTrue(e instanceof TypeException, \"Expected TypedException\");\n      Assertions.assertTrue(e.getMessage().contains(\"parameter #1\"), \"Parameter index is in exception\");\n    }\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/type/UnknownTypeHandlerTest.java", "stars": "15", "class_props": {"extends": "BaseTypeHandlerTest", "implements": null, "modifiers": []}}, {"id": 64708, "method_name": "getResultWithResultSetAndColumnNameThrowsException", "class_name": "UnknownTypeHandlerTest", "params": [], "throws": ["SQLException"], "modifiers": [], "return_type": "void", "snippet": "  void getResultWithResultSetAndColumnNameThrowsException() throws SQLException {\n    doThrow(new SQLException(\"invalid column\")).when((UnknownTypeHandler) TYPE_HANDLER).getNullableResult(rs, \"foo\");\n    try {\n      TYPE_HANDLER.getResult(rs, \"foo\");\n      Assertions.fail(\"Should have thrown a ResultMapException\");\n    } catch (Exception e) {\n      Assertions.assertTrue(e instanceof ResultMapException, \"Expected ResultMapException\");\n      Assertions.assertTrue(e.getMessage().contains(\"column 'foo'\"), \"column name is not in exception\");\n    }\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/type/UnknownTypeHandlerTest.java", "stars": "15", "class_props": {"extends": "BaseTypeHandlerTest", "implements": null, "modifiers": []}}, {"id": 64709, "method_name": "getResultWithResultSetAndColumnIndexThrowsException", "class_name": "UnknownTypeHandlerTest", "params": [], "throws": ["SQLException"], "modifiers": [], "return_type": "void", "snippet": "  void getResultWithResultSetAndColumnIndexThrowsException() throws SQLException {\n    doThrow(new SQLException(\"invalid column\")).when((UnknownTypeHandler) TYPE_HANDLER).getNullableResult(rs, 1);\n    try {\n      TYPE_HANDLER.getResult(rs, 1);\n      Assertions.fail(\"Should have thrown a ResultMapException\");\n    } catch (Exception e) {\n      Assertions.assertTrue(e instanceof ResultMapException, \"Expected ResultMapException\");\n      Assertions.assertTrue(e.getMessage().contains(\"column #1\"), \"column index is not in exception\");\n    }\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/type/UnknownTypeHandlerTest.java", "stars": "15", "class_props": {"extends": "BaseTypeHandlerTest", "implements": null, "modifiers": []}}, {"id": 64710, "method_name": "getResultWithCallableStatementAndColumnIndexThrowsException", "class_name": "UnknownTypeHandlerTest", "params": [], "throws": ["SQLException"], "modifiers": [], "return_type": "void", "snippet": "  void getResultWithCallableStatementAndColumnIndexThrowsException() throws SQLException {\n    doThrow(new SQLException(\"invalid column\")).when((UnknownTypeHandler) TYPE_HANDLER).getNullableResult(cs, 1);\n    try {\n      TYPE_HANDLER.getResult(cs, 1);\n      Assertions.fail(\"Should have thrown a ResultMapException\");\n    } catch (Exception e) {\n      Assertions.assertTrue(e instanceof ResultMapException, \"Expected ResultMapException\");\n      Assertions.assertTrue(e.getMessage().contains(\"column #1\"), \"column index is not in exception\");\n    }\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/type/UnknownTypeHandlerTest.java", "stars": "15", "class_props": {"extends": "BaseTypeHandlerTest", "implements": null, "modifiers": []}}, {"id": 64711, "method_name": "getTaskCommunicationMap", "class_name": "AbstractCollector", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Map<Integer,Communication>", "snippet": "    public Map<Integer, Communication> getTaskCommunicationMap() {\n        return taskCommunicationMap;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/engine/datax/datax-core/src/main/java/com/alibaba/datax/core/statistics/container/collector/AbstractCollector.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 64712, "method_name": "getJobId", "class_name": "AbstractCollector", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Long", "snippet": "    public Long getJobId() {\n        return jobId;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/engine/datax/datax-core/src/main/java/com/alibaba/datax/core/statistics/container/collector/AbstractCollector.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 64713, "method_name": "setJobId", "class_name": "AbstractCollector", "params": ["Long"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setJobId(Long jobId) {\n        this.jobId = jobId;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/engine/datax/datax-core/src/main/java/com/alibaba/datax/core/statistics/container/collector/AbstractCollector.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 64714, "method_name": "registerTGCommunication", "class_name": "AbstractCollector", "params": ["List<Configuration>"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void registerTGCommunication(List<Configuration> taskGroupConfigurationList) {\n        for (Configuration config : taskGroupConfigurationList) {\n            int taskGroupId = config.getInt(\n                    CoreConstant.DATAX_CORE_CONTAINER_TASKGROUP_ID);\n            LocalTGCommunicationManager.registerTaskGroupCommunication(taskGroupId, new Communication());\n        }\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/engine/datax/datax-core/src/main/java/com/alibaba/datax/core/statistics/container/collector/AbstractCollector.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 64715, "method_name": "registerTaskCommunication", "class_name": "AbstractCollector", "params": ["List<Configuration>"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void registerTaskCommunication(List<Configuration> taskConfigurationList) {\n        for (Configuration taskConfig : taskConfigurationList) {\n            int taskId = taskConfig.getInt(CoreConstant.TASK_ID);\n            Communication taskCommunication = new Communication();\n            taskCommunication.setLongCounter(TASK_RUNNING_WRITERS, taskConfig.getList(CoreConstant.JOB_WRITER).size());\n            this.taskCommunicationMap.put(taskId, taskCommunication);\n        }\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/engine/datax/datax-core/src/main/java/com/alibaba/datax/core/statistics/container/collector/AbstractCollector.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 64716, "method_name": "collectFromTask", "class_name": "AbstractCollector", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Communication", "snippet": "    public Communication collectFromTask() {\n        Communication communication = new Communication();\n        communication.setState(State.SUCCEEDED);\n\n        for (Communication taskCommunication :\n                this.taskCommunicationMap.values()) {\n            communication.mergeFrom(taskCommunication);\n        }\n\n        return communication;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/engine/datax/datax-core/src/main/java/com/alibaba/datax/core/statistics/container/collector/AbstractCollector.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 64717, "method_name": "collectFromTaskGroup", "class_name": "AbstractCollector", "params": [], "throws": null, "modifiers": ["public", "abstract"], "return_type": "Communication", "snippet": "    public abstract Communication collectFromTaskGroup();\n\n    public Map<Integer, Communication> getTGCommunicationMap() {\n        return LocalTGCommunicationManager.getTaskGroupCommunicationMap();\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/engine/datax/datax-core/src/main/java/com/alibaba/datax/core/statistics/container/collector/AbstractCollector.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 64718, "method_name": "getTGCommunicationMap", "class_name": "AbstractCollector", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Map<Integer,Communication>", "snippet": "    public Map<Integer, Communication> getTGCommunicationMap() {\n        return LocalTGCommunicationManager.getTaskGroupCommunicationMap();\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/engine/datax/datax-core/src/main/java/com/alibaba/datax/core/statistics/container/collector/AbstractCollector.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 64719, "method_name": "getTGCommunication", "class_name": "AbstractCollector", "params": ["Integer"], "throws": null, "modifiers": ["public"], "return_type": "Communication", "snippet": "    public Communication getTGCommunication(Integer taskGroupId) {\n        return LocalTGCommunicationManager.getTaskGroupCommunication(taskGroupId);\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/engine/datax/datax-core/src/main/java/com/alibaba/datax/core/statistics/container/collector/AbstractCollector.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 64720, "method_name": "getTaskCommunication", "class_name": "AbstractCollector", "params": ["Integer"], "throws": null, "modifiers": ["public"], "return_type": "Communication", "snippet": "    public Communication getTaskCommunication(Integer taskId) {\n        return this.taskCommunicationMap.get(taskId);\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/engine/datax/datax-core/src/main/java/com/alibaba/datax/core/statistics/container/collector/AbstractCollector.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 64721, "method_name": "parseJSONObject", "class_name": "JSONParser", "params": ["TokenList"], "throws": null, "modifiers": ["public"], "return_type": "JSONObject", "snippet": "    public JSONObject parseJSONObject(@NotNull TokenList tokens) {\n        if (tokens.next().type() != BEGIN_OBJECT) {\n            throw new JSONParseException(\"Parse error, invalid Token.\");\n        }\n\n        JSONObject JSONObject = new JSONObject();\n        int expectToken = TokenType.calcCode(STRING, END_OBJECT);\n        String key = null;\n        Object value;\n        while (tokens.hasMore()) {\n            Token token = tokens.next();\n            TokenType tokenType = token.type();\n            String tokenValue = token.value();\n            switch (tokenType) {\n                case BEGIN_OBJECT:\n                    checkExpectToken(tokenType, expectToken);\n                    tokens.back();\n                    JSONObject.put(key, parseJSONObject(tokens));\n                    expectToken = TokenType.calcCode(SEP_COMMA, END_OBJECT);\n                    break;\n                case END_OBJECT:\n                case END_DOCUMENT:\n                    checkExpectToken(tokenType, expectToken);\n                    return JSONObject;\n                case BEGIN_ARRAY:\n                    checkExpectToken(tokenType, expectToken);\n                    tokens.back();\n                    JSONObject.put(key, parseJSONArray(tokens));\n                    expectToken = TokenType.calcCode(SEP_COMMA, END_OBJECT);\n                    break;\n                case NULL:\n                    checkExpectToken(tokenType, expectToken);\n                    JSONObject.put(key, null);\n                    expectToken = TokenType.calcCode(SEP_COMMA, END_OBJECT);\n                    break;\n                case NUMBER:\n                    checkExpectToken(tokenType, expectToken);\n                    if (tokenValue.contains(\".\") || tokenValue.contains(\"e\") || tokenValue.contains(\"E\")) {\n                        JSONObject.put(key, Double.valueOf(tokenValue));\n                    } else {\n                        long num = Long.parseLong(tokenValue);\n                        if (num > Integer.MAX_VALUE || num < Integer.MIN_VALUE) {\n                            JSONObject.put(key, num);\n                        } else {\n                            JSONObject.put(key, (int) num);\n                        }\n                    }\n                    expectToken =TokenType.calcCode(SEP_COMMA, END_OBJECT);\n                    break;\n                case BOOLEAN:\n                    checkExpectToken(tokenType, expectToken);\n                    JSONObject.put(key, Boolean.valueOf(token.value()));\n                    expectToken = TokenType.calcCode(SEP_COMMA, END_OBJECT);\n                    break;\n                case STRING:\n                    checkExpectToken(tokenType, expectToken);\n                    Token preToken = tokens.peekPrevious();\n\n                    if (preToken.type() == SEP_COLON) {\n                        value = token.value();\n                        JSONObject.put(key, value);\n                        expectToken = TokenType.calcCode(SEP_COMMA, END_OBJECT);\n                    } else {\n                        key = token.value();\n                        expectToken = TokenType.calcCode(SEP_COLON);\n                    }\n                    break;\n                case SEP_COLON:\n                    checkExpectToken(tokenType, expectToken);\n                    expectToken = TokenType.calcCode(NULL, NUMBER, BOOLEAN,\n                            STRING, BEGIN_OBJECT, BEGIN_ARRAY);\n                    break;\n                case SEP_COMMA:\n                    checkExpectToken(tokenType, expectToken);\n                    expectToken = TokenType.calcCode(STRING);\n                    break;\n                default:\n                    throw new JSONParseException(\"Unexpected Token.\");\n            }\n        }\n\n        throw new JSONParseException(\"Parse error, invalid Token.\");\n    }", "url": "https://raw.githubusercontent.com/Virjid/Kartingjson/master/src/main/java/me/virjid/karting/json/parser/JSONParser.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 64722, "method_name": "parseJSONArray", "class_name": "JSONParser", "params": ["TokenList"], "throws": null, "modifiers": ["public"], "return_type": "JSONArray", "snippet": "    public JSONArray parseJSONArray(@NotNull TokenList tokens) {\n        if (tokens.next().type() != BEGIN_ARRAY) {\n            throw new JSONParseException(\"Parse error, invalid Token.\");\n        }\n\n        int expectToken = TokenType.calcCode(BEGIN_ARRAY, END_ARRAY, BEGIN_OBJECT,\n                NULL, NUMBER, BOOLEAN, STRING);\n        JSONArray array = new JSONArray();\n        while (tokens.hasMore()) {\n            Token token = tokens.next();\n            TokenType tokenType = token.type();\n            String tokenValue   = token.value();\n            switch (tokenType) {\n                case BEGIN_OBJECT:\n                    checkExpectToken(tokenType, expectToken);\n                    tokens.back();\n                    array.add(parseJSONObject(tokens));\n                    expectToken = TokenType.calcCode(SEP_COMMA, END_ARRAY);\n                    break;\n                case BEGIN_ARRAY:\n                    checkExpectToken(tokenType, expectToken);\n                    tokens.back();\n                    array.add(parseJSONArray(tokens));\n                    expectToken = TokenType.calcCode(SEP_COMMA, END_ARRAY);\n                    break;\n                case END_ARRAY:\n                case END_DOCUMENT:\n                    checkExpectToken(tokenType, expectToken);\n                    return array;\n                case NULL:\n                    checkExpectToken(tokenType, expectToken);\n                    array.add(null);\n                    expectToken = TokenType.calcCode(SEP_COMMA, END_ARRAY);\n                    break;\n                case NUMBER:\n                    checkExpectToken(tokenType, expectToken);\n                    if (tokenValue.contains(\".\") || tokenValue.contains(\"e\") || tokenValue.contains(\"E\")) {\n                        array.add(Double.valueOf(tokenValue));\n                    } else {\n                        long num = Long.parseLong(tokenValue);\n                        if (num > Integer.MAX_VALUE || num < Integer.MIN_VALUE) {\n                            array.add(num);\n                        } else {\n                            array.add((int) num);\n                        }\n                    }\n                    expectToken = TokenType.calcCode(SEP_COMMA, END_ARRAY);\n                    break;\n                case BOOLEAN:\n                    checkExpectToken(tokenType, expectToken);\n                    array.add(Boolean.valueOf(tokenValue));\n                    expectToken = TokenType.calcCode(SEP_COMMA, END_ARRAY);\n                    break;\n                case STRING:\n                    checkExpectToken(tokenType, expectToken);\n                    array.add(tokenValue);\n                    expectToken = TokenType.calcCode(SEP_COMMA, END_ARRAY);\n                    break;\n                case SEP_COMMA:\n                    checkExpectToken(tokenType, expectToken);\n                    expectToken = TokenType.calcCode(STRING, NULL, NUMBER, BOOLEAN,\n                            BEGIN_ARRAY, BEGIN_OBJECT);\n                    break;\n                default:\n                    throw new JSONParseException(\"Unexpected Token.\");\n            }\n        }\n\n        throw new JSONParseException(\"Parse error, invalid Token.\");\n    }", "url": "https://raw.githubusercontent.com/Virjid/Kartingjson/master/src/main/java/me/virjid/karting/json/parser/JSONParser.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 64723, "method_name": "checkExpectToken", "class_name": "JSONParser", "params": ["TokenType", "int"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void checkExpectToken(@NotNull TokenType type, int expectToken) {\n        if ((type.code & expectToken) == 0) {\n            throw new JSONParseException(\"Parse error, invalid Token.\");\n        }\n    }", "url": "https://raw.githubusercontent.com/Virjid/Kartingjson/master/src/main/java/me/virjid/karting/json/parser/JSONParser.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 64724, "method_name": "drawScreen", "class_name": "GuiHud", "params": ["int", "int", "float"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void drawScreen(int mx, int my, float p_drawScreen_3_) {\n        super.drawScreen(mx, my, p_drawScreen_3_);\n        if (scaledResolution == null) scaledResolution = new ScaledResolution(mc);\n        Mercury.INSTANCE.getHudManager().getValues().forEach(hudComponent -> {\n            if (hudComponent.isDragging()) {\n                hudComponent.setX(mx + hudComponent.getLastX());\n                hudComponent.setY(my + hudComponent.getLastY());\n            }\n            if (hudComponent.getX() < 0) {\n                hudComponent.setX(0);\n            }\n            if (hudComponent.getX() + hudComponent.getW() > new ScaledResolution(mc).getScaledWidth()) {\n                hudComponent.setX(new ScaledResolution(mc).getScaledWidth() - hudComponent.getW());\n            }\n            if (hudComponent.getY() < 0) {\n                hudComponent.setY(0);\n            }\n            if (hudComponent.getY() + hudComponent.getH() > new ScaledResolution(mc).getScaledHeight()) {\n                hudComponent.setY(new ScaledResolution(mc).getScaledHeight() - hudComponent.getH());\n            }\n            //RenderUtil.drawRect2(0, scaledResolution.getScaledHeight() / 2 - 0.5f, scaledResolution.getScaledWidth(), 1, 0xff000000);\n            //RenderUtil.drawRect2(scaledResolution.getScaledWidth() / 2 - 0.5f, 0, 1, scaledResolution.getScaledHeight(), 0xff000000);\n            if (hudComponent.isShown()) hudComponent.onDraw(new ScaledResolution(mc));\n\n            RenderUtil.drawRect2(hudComponent.getX(), hudComponent.getY(), hudComponent.getW(), hudComponent.getH(), hudComponent.isDragging() ? 0x95000000 : 0x80000000);\n\n            if (hudComponent.isLabelShown()) Menu.font.drawStringWithShadow(hudComponent.getLabel(), hudComponent.getX() + hudComponent.getW() / 2 - mc.fontRenderer.getStringWidth(hudComponent.getLabel()) / 2, hudComponent.getY() + hudComponent.getH() / 2 - mc.fontRenderer.FONT_HEIGHT / 2, new Color(255, 255, 255, 83).getRGB());\n        });\n    }", "url": "https://raw.githubusercontent.com/Crystallinqq/Mercury-Client/master/src/main/java/fail/mercury/client/client/gui/hudeditor/GuiHud.java", "stars": "12", "class_props": {"extends": "GuiScreen", "implements": null, "modifiers": ["public"]}}, {"id": 64725, "method_name": "keyTyped", "class_name": "GuiHud", "params": ["char", "int"], "throws": ["IOException"], "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void keyTyped(char p_keyTyped_1_, int p_keyTyped_2_) throws IOException {\n        super.keyTyped(p_keyTyped_1_, p_keyTyped_2_);\n    }", "url": "https://raw.githubusercontent.com/Crystallinqq/Mercury-Client/master/src/main/java/fail/mercury/client/client/gui/hudeditor/GuiHud.java", "stars": "12", "class_props": {"extends": "GuiScreen", "implements": null, "modifiers": ["public"]}}, {"id": 64726, "method_name": "mouseClicked", "class_name": "GuiHud", "params": ["int", "int", "int"], "throws": ["IOException"], "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void mouseClicked(int mx, int my, int p_mouseClicked_3_) throws IOException {\n        super.mouseClicked(mx, my, p_mouseClicked_3_);\n        Mercury.INSTANCE.getHudManager().getValues().forEach(hudComponent -> {\n            final boolean hovered = MouseUtil.withinBounds(mx, my, hudComponent.getX(), hudComponent.getY(), hudComponent.getW(), hudComponent.getH());\n            switch (p_mouseClicked_3_) {\n                case 0:\n                    if (hovered) {\n                        hudComponent.setDragging(true);\n                        hudComponent.setLastX(hudComponent.getX() - mx);\n                        hudComponent.setLastY(hudComponent.getY() - my);\n                    }\n                    break;\n                case 1:\n                    if (hovered)\n                        hudComponent.setShown(!hudComponent.isShown());\n                    break;\n                default:\n                    break;\n            }\n        });\n    }", "url": "https://raw.githubusercontent.com/Crystallinqq/Mercury-Client/master/src/main/java/fail/mercury/client/client/gui/hudeditor/GuiHud.java", "stars": "12", "class_props": {"extends": "GuiScreen", "implements": null, "modifiers": ["public"]}}, {"id": 64727, "method_name": "mouseReleased", "class_name": "GuiHud", "params": ["int", "int", "int"], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void mouseReleased(int mx, int my, int p_mouseReleased_3_) {\n        super.mouseReleased(mx, my, p_mouseReleased_3_);\n        Mercury.INSTANCE.getHudManager().getValues().forEach(hudComponent -> {\n            if (p_mouseReleased_3_ == 0) {\n                if (hudComponent.isDragging()) {\n                    hudComponent.setDragging(false);\n                }\n            }\n        });\n    }", "url": "https://raw.githubusercontent.com/Crystallinqq/Mercury-Client/master/src/main/java/fail/mercury/client/client/gui/hudeditor/GuiHud.java", "stars": "12", "class_props": {"extends": "GuiScreen", "implements": null, "modifiers": ["public"]}}, {"id": 64728, "method_name": "onGuiClosed", "class_name": "GuiHud", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onGuiClosed() {\n        Mercury.INSTANCE.getHudManager().getValues().forEach(hudComponent -> {\n            if (hudComponent.isDragging()) {\n                hudComponent.setDragging(false);\n            }\n        });\n    }", "url": "https://raw.githubusercontent.com/Crystallinqq/Mercury-Client/master/src/main/java/fail/mercury/client/client/gui/hudeditor/GuiHud.java", "stars": "12", "class_props": {"extends": "GuiScreen", "implements": null, "modifiers": ["public"]}}, {"id": 64729, "method_name": "doesGuiPauseGame", "class_name": "GuiHud", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean doesGuiPauseGame() {\n        return false;\n    }", "url": "https://raw.githubusercontent.com/Crystallinqq/Mercury-Client/master/src/main/java/fail/mercury/client/client/gui/hudeditor/GuiHud.java", "stars": "12", "class_props": {"extends": "GuiScreen", "implements": null, "modifiers": ["public"]}}, {"id": 64730, "method_name": "onCreateViewHolder", "class_name": "TopCountriesAdapter", "params": ["ViewGroup", "int"], "throws": null, "modifiers": ["public"], "return_type": "TopCountriesAdapter", "snippet": "    public TopCountriesAdapter.ViewHolder onCreateViewHolder(@NonNull ViewGroup parent, int viewType) {\n        View view = mInflater.inflate(R.layout.layout_top_countries, parent, false);\n        return new TopCountriesAdapter.ViewHolder(view);\n    }", "url": "https://raw.githubusercontent.com/fadhilahramadhan/Android_Covid19Stats/master/app/src/main/java/fadhilah/ramadhan/covid19stats/adapter/TopCountriesAdapter.java", "stars": "2", "class_props": {"extends": "RecyclerView", "implements": null, "modifiers": ["public"]}}, {"id": 64731, "method_name": "onBindViewHolder", "class_name": "TopCountriesAdapter", "params": ["TopCountriesAdapter", "int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onBindViewHolder(@NonNull TopCountriesAdapter.ViewHolder holder, int position) {\n        dataStats.get(position);\n\n        countryNameText.setText(dataStats.get(position).getCountry());\n        positiveCovidText.setText(formatter.format(dataStats.get(position).getPostive()));\n        deathTotalText.setText(formatter.format(dataStats.get(position).getDeath()));\n        curedTotalText.setText(formatter.format(dataStats.get(position).getCured()));\n\n        if(position == 0 || position == 3){\n            layout.setBackgroundColor(context.getResources().getColor(R.color.bg_Green));\n        }else if(position == 1 || position == 4){\n            layout.setBackgroundColor(context.getResources().getColor(R.color.bg_Blue));\n        }else if(position == 2){\n            layout.setBackgroundColor(context.getResources().getColor(R.color.bg_Red));\n        }\n    }", "url": "https://raw.githubusercontent.com/fadhilahramadhan/Android_Covid19Stats/master/app/src/main/java/fadhilah/ramadhan/covid19stats/adapter/TopCountriesAdapter.java", "stars": "2", "class_props": {"extends": "RecyclerView", "implements": null, "modifiers": ["public"]}}, {"id": 64732, "method_name": "getItemCount", "class_name": "TopCountriesAdapter", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getItemCount() {\n        return dataStats.size();\n    }", "url": "https://raw.githubusercontent.com/fadhilahramadhan/Android_Covid19Stats/master/app/src/main/java/fadhilah/ramadhan/covid19stats/adapter/TopCountriesAdapter.java", "stars": "2", "class_props": {"extends": "RecyclerView", "implements": null, "modifiers": ["public"]}}, {"id": 64733, "method_name": "getItem", "class_name": "TopCountriesAdapter", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "DataStats", "snippet": "    public DataStats getItem(int id) {\n        return dataStats.get(id);\n    }", "url": "https://raw.githubusercontent.com/fadhilahramadhan/Android_Covid19Stats/master/app/src/main/java/fadhilah/ramadhan/covid19stats/adapter/TopCountriesAdapter.java", "stars": "2", "class_props": {"extends": "RecyclerView", "implements": null, "modifiers": ["public"]}}, {"id": 64734, "method_name": "connectPointer", "class_name": "WebOSTVMouseSocketConnection", "params": ["URI"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void connectPointer(URI uri) {\n        if (ws != null) {\n            ws.close();\n            ws = null;\n        }\n\n        ws = new WebSocketClient(uri) {\n\n            @Override\n            public void onOpen(ServerHandshake arg0) {\n                Log.d(\"PtrAndKeyboardFragment\", \"connected to \" + uri.toString());\n                if (listener != null) {\n                    listener.onConnected();\n                }\n            }\n\n            @Override\n            public void onMessage(String arg0) {\n            }\n\n            @Override\n            public void onError(Exception arg0) {\n            }\n\n            @Override\n            public void onClose(int arg0, String arg1, boolean arg2) {\n            }\n        };\n\n        ws.connect();\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/service/webos/WebOSTVMouseSocketConnection.java", "stars": "4", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 64735, "method_name": "disconnect", "class_name": "WebOSTVMouseSocketConnection", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void disconnect() {\n        if (ws != null) {\n            ws.close();\n            ws = null;\n        }\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/service/webos/WebOSTVMouseSocketConnection.java", "stars": "4", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 64736, "method_name": "isConnected", "class_name": "WebOSTVMouseSocketConnection", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean isConnected() {\n        if (ws == null) \n            System.out.println(\"ws is null\");\n        else if (ws.getReadyState() != READYSTATE.OPEN) {\n            System.out.println(\"ws state is not ready\");\n        }\n        return (ws != null) && (ws.getReadyState() == READYSTATE.OPEN);\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/service/webos/WebOSTVMouseSocketConnection.java", "stars": "4", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 64737, "method_name": "click", "class_name": "WebOSTVMouseSocketConnection", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void click() {\n        if (isConnected()) {\n            ws.send(\"type:click\\n\" + \"\\n\");\n        }\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/service/webos/WebOSTVMouseSocketConnection.java", "stars": "4", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 64738, "method_name": "button", "class_name": "WebOSTVMouseSocketConnection", "params": ["ButtonType"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void button(ButtonType type) {\n        String keyName; \n        switch (type) {\n        case HOME:\n            keyName = \"HOME\";\n            break;\n        case BACK:\n            keyName = \"BACK\";\n            break;\n        case UP:\n            keyName = \"UP\";\n            break;\n        case DOWN:\n            keyName = \"DOWN\";\n            break;\n        case LEFT:\n            keyName = \"LEFT\";\n            break;\n        case RIGHT:\n            keyName = \"RIGHT\";\n            break;\n\n        default:\n            keyName = \"NONE\";\n            break;\n        }\n\n        button(keyName);\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/service/webos/WebOSTVMouseSocketConnection.java", "stars": "4", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 64739, "method_name": "button", "class_name": "WebOSTVMouseSocketConnection", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void button(String keyName) {\n        if (isConnected()) {\n            ws.send(\"type:button\\n\" + \"name:\" + keyName + \"\\n\" + \"\\n\");\n        }\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/service/webos/WebOSTVMouseSocketConnection.java", "stars": "4", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 64740, "method_name": "move", "class_name": "WebOSTVMouseSocketConnection", "params": ["double", "double"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void move(double dx, double dy) {\n        if (isConnected()) {\n            ws.send(\"type:move\\n\" + \"dx:\" + dx + \"\\n\" + \"dy:\" + dy + \"\\n\" + \"down:0\\n\" + \"\\n\");\n        }\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/service/webos/WebOSTVMouseSocketConnection.java", "stars": "4", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 64741, "method_name": "move", "class_name": "WebOSTVMouseSocketConnection", "params": ["double", "double", "boolean"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void move(double dx, double dy, boolean drag) {\n        if (isConnected()) {\n            ws.send(\"type:move\\n\" + \"dx:\" + dx + \"\\n\" + \"dy:\" + dy + \"\\n\" + \"down:\" + (drag ? 1 : 0) + \"\\n\" + \"\\n\");\n        }\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/service/webos/WebOSTVMouseSocketConnection.java", "stars": "4", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 64742, "method_name": "scroll", "class_name": "WebOSTVMouseSocketConnection", "params": ["double", "double"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void scroll(double dx, double dy) {\n        if (isConnected()) {\n            ws.send(\"type:scroll\\n\" + \"dx:\" + dx + \"\\n\" + \"dy:\" + dy + \"\\n\" + \"\\n\");\n        }\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/service/webos/WebOSTVMouseSocketConnection.java", "stars": "4", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 64743, "method_name": "makeCourse", "class_name": "AbstractCourse", "params": [], "throws": null, "modifiers": ["final", "protected"], "return_type": "void", "snippet": "    protected final void makeCourse(){\n        this.makePPT();\n        this.makeVideo();\n        if(isWriteNote()){\n            this.writeNote();\n        }\n        this.packageCourse();\n    }", "url": "https://raw.githubusercontent.com/wangIQD/GoF23/master/GOF23/DesignPattern/src/com/wz/behavioral/templatemethod/AbstractCourse.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 64744, "method_name": "makeVideo", "class_name": "AbstractCourse", "params": [], "throws": null, "modifiers": ["final"], "return_type": "void", "snippet": "    final void makeVideo(){\n        System.out.println(\"\u5236\u4f5c\u89c6\u9891\");\n    }", "url": "https://raw.githubusercontent.com/wangIQD/GoF23/master/GOF23/DesignPattern/src/com/wz/behavioral/templatemethod/AbstractCourse.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 64745, "method_name": "makePPT", "class_name": "AbstractCourse", "params": [], "throws": null, "modifiers": ["final"], "return_type": "void", "snippet": "    final void makePPT(){\n        System.out.println(\"\u5236\u4f5cPPT\");\n    }", "url": "https://raw.githubusercontent.com/wangIQD/GoF23/master/GOF23/DesignPattern/src/com/wz/behavioral/templatemethod/AbstractCourse.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 64746, "method_name": "writeNote", "class_name": "AbstractCourse", "params": [], "throws": null, "modifiers": ["final"], "return_type": "void", "snippet": "    final void writeNote(){\n        System.out.println(\"\u7f16\u5199\u7b14\u8bb0\");\n    }", "url": "https://raw.githubusercontent.com/wangIQD/GoF23/master/GOF23/DesignPattern/src/com/wz/behavioral/templatemethod/AbstractCourse.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 64747, "method_name": "isWriteNote", "class_name": "AbstractCourse", "params": [], "throws": null, "modifiers": ["protected"], "return_type": "boolean", "snippet": "    protected boolean isWriteNote(){\n        return false;\n    }", "url": "https://raw.githubusercontent.com/wangIQD/GoF23/master/GOF23/DesignPattern/src/com/wz/behavioral/templatemethod/AbstractCourse.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 64748, "method_name": "packageCourse", "class_name": "AbstractCourse", "params": [], "throws": null, "modifiers": ["abstract"], "return_type": "void", "snippet": "    abstract void packageCourse();\n}\n\n", "url": "https://raw.githubusercontent.com/wangIQD/GoF23/master/GOF23/DesignPattern/src/com/wz/behavioral/templatemethod/AbstractCourse.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 64749, "method_name": "getFlowMap", "class_name": "DirectoryFlowLoader", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Map<String,Flow>", "snippet": "  public Map<String, Flow> getFlowMap() {\n    return this.flowMap;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/project/DirectoryFlowLoader.java", "stars": "18", "class_props": {"extends": null, "implements": ["FlowLoader"], "modifiers": ["public"]}}, {"id": 64750, "method_name": "getErrors", "class_name": "DirectoryFlowLoader", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Set<String>", "snippet": "  public Set<String> getErrors() {\n    return this.errors;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/project/DirectoryFlowLoader.java", "stars": "18", "class_props": {"extends": null, "implements": ["FlowLoader"], "modifiers": ["public"]}}, {"id": 64751, "method_name": "getJobPropsMap", "class_name": "DirectoryFlowLoader", "params": [], "throws": null, "modifiers": ["public"], "return_type": "HashMap<String,Props>", "snippet": "  public HashMap<String, Props> getJobPropsMap() {\n    return this.jobPropsMap;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/project/DirectoryFlowLoader.java", "stars": "18", "class_props": {"extends": null, "implements": ["FlowLoader"], "modifiers": ["public"]}}, {"id": 64752, "method_name": "getPropsList", "class_name": "DirectoryFlowLoader", "params": [], "throws": null, "modifiers": ["public"], "return_type": "ArrayList<Props>", "snippet": "  public ArrayList<Props> getPropsList() {\n    return this.propsList;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/project/DirectoryFlowLoader.java", "stars": "18", "class_props": {"extends": null, "implements": ["FlowLoader"], "modifiers": ["public"]}}, {"id": 64753, "method_name": "loadProjectFlow", "class_name": "DirectoryFlowLoader", "params": ["Project", "File"], "throws": null, "modifiers": ["public"], "return_type": "ValidationReport", "snippet": "  public ValidationReport loadProjectFlow(final Project project, final File projectDir) {\n    this.propsList = new ArrayList<>();\n    this.flowPropsList = new ArrayList<>();\n    this.jobPropsMap = new HashMap<>();\n    this.nodeMap = new HashMap<>();\n    this.duplicateJobs = new HashSet<>();\n    this.nodeDependencies = new HashMap<>();\n    this.rootNodes = new HashSet<>();\n    this.flowDependencies = new HashMap<>();\n\n    // Load all the props files and create the Node objects\n    loadProjectFromDir(projectDir.getPath(), projectDir, null);\n\n    // Create edges and find missing dependencies\n    resolveDependencies();\n\n    // Create the flows.\n    buildFlowsFromDependencies();\n\n    // Resolve embedded flows\n    resolveEmbeddedFlows();\n\n    FlowLoaderUtils.checkJobProperties(project.getId(), this.props, this.jobPropsMap, this.errors);\n\n    return FlowLoaderUtils.generateFlowLoaderReport(this.errors);\n\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/project/DirectoryFlowLoader.java", "stars": "18", "class_props": {"extends": null, "implements": ["FlowLoader"], "modifiers": ["public"]}}, {"id": 64754, "method_name": "loadProjectFromDir", "class_name": "DirectoryFlowLoader", "params": ["String", "File", "Props"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "  private void loadProjectFromDir(final String base, final File dir, Props parent) {\n    final File[] propertyFiles = dir.listFiles(new SuffixFilter(PROPERTY_SUFFIX));\n    Arrays.sort(propertyFiles);\n\n    for (final File file : propertyFiles) {\n      final String relative = getRelativeFilePath(base, file.getPath());\n      try {\n        parent = new Props(parent, file);\n        parent.setSource(relative);\n\n        final FlowProps flowProps = new FlowProps(parent);\n        this.flowPropsList.add(flowProps);\n      } catch (final IOException e) {\n        this.errors.add(\"Error loading properties \" + file.getName() + \":\"\n            + e.getMessage());\n      }\n\n      this.logger.info(\"Adding \" + relative);\n      this.propsList.add(parent);\n    }\n\n    // Load all Job files. If there's a duplicate name, then we don't load\n    final File[] jobFiles = dir.listFiles(new SuffixFilter(JOB_SUFFIX));\n    for (final File file : jobFiles) {\n      final String jobName = getNameWithoutExtension(file);\n      try {\n        if (!this.duplicateJobs.contains(jobName)) {\n          if (this.jobPropsMap.containsKey(jobName)) {\n            this.errors.add(\"Duplicate job names found '\" + jobName + \"'.\");\n            this.duplicateJobs.add(jobName);\n            this.jobPropsMap.remove(jobName);\n            this.nodeMap.remove(jobName);\n          } else {\n            final Props prop = new Props(parent, file);\n            final String relative = getRelativeFilePath(base, file.getPath());\n            prop.setSource(relative);\n\n            final Node node = new Node(jobName);\n            final String type = prop.getString(\"type\", null);\n            if (type == null) {\n              this.errors.add(\"Job doesn't have type set '\" + jobName + \"', please check whether the file encoding is UNIX, UTF-8.\");\n            }\n\n            node.setType(type);\n\n            final String outer = prop.getString(\"outer\", null);\n            if (outer != null) {\n              node.setOuter(outer);\n            }\n\n            node.setJobSource(relative);\n            if (parent != null) {\n              node.setPropsSource(parent.getSource());\n            }\n\n            // Force root node\n            if (prop.getBoolean(CommonJobProperties.ROOT_NODE, false)) {\n              this.rootNodes.add(jobName);\n            }\n\n            this.jobPropsMap.put(jobName, prop);\n            this.nodeMap.put(jobName, node);\n          }\n        }\n      } catch (final IOException e) {\n        this.errors.add(\"Error loading job file \" + file.getName() + \":\"\n            + e.getMessage());\n      }\n    }\n\n    for (final File file : dir.listFiles(new DirFilter())) {\n      loadProjectFromDir(base, file, parent);\n    }\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/project/DirectoryFlowLoader.java", "stars": "18", "class_props": {"extends": null, "implements": ["FlowLoader"], "modifiers": ["public"]}}, {"id": 64755, "method_name": "resolveEmbeddedFlows", "class_name": "DirectoryFlowLoader", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "  private void resolveEmbeddedFlows() {\n    for (final String flowId : this.flowDependencies.keySet()) {\n      final HashSet<String> visited = new HashSet<>();\n      resolveEmbeddedFlow(flowId, visited);\n    }\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/project/DirectoryFlowLoader.java", "stars": "18", "class_props": {"extends": null, "implements": ["FlowLoader"], "modifiers": ["public"]}}, {"id": 64756, "method_name": "resolveEmbeddedFlow", "class_name": "DirectoryFlowLoader", "params": ["String", "Set<String>"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "  private void resolveEmbeddedFlow(final String flowId, final Set<String> visited) {\n    final Set<String> embeddedFlow = this.flowDependencies.get(flowId);\n    if (embeddedFlow == null) {\n      return;\n    }\n\n    visited.add(flowId);\n    for (final String embeddedFlowId : embeddedFlow) {\n      if (visited.contains(embeddedFlowId)) {\n        this.errors.add(\"Embedded flow cycle found in \" + flowId + \"->\"\n            + embeddedFlowId);\n        return;\n      } else if (!this.flowMap.containsKey(embeddedFlowId)) {\n        this.errors.add(\"Flow \" + flowId + \" depends on \" + embeddedFlowId\n            + \" but can't be found.\");\n        return;\n      } else {\n        resolveEmbeddedFlow(embeddedFlowId, visited);\n      }\n    }\n\n    visited.remove(flowId);\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/project/DirectoryFlowLoader.java", "stars": "18", "class_props": {"extends": null, "implements": ["FlowLoader"], "modifiers": ["public"]}}, {"id": 64757, "method_name": "resolveDependencies", "class_name": "DirectoryFlowLoader", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "  private void resolveDependencies() {\n    // Add all the in edges and out edges. Catch bad dependencies and self\n    // referrals. Also collect list of nodes who are parents.\n    for (final Node node : this.nodeMap.values()) {\n      final Props props = this.jobPropsMap.get(node.getId());\n\n      if (props == null) {\n        this.logger.error(\"Job props not found!! For some reason.\");\n        continue;\n      }\n\n      final List<String> dependencyList =\n          props.getStringList(CommonJobProperties.DEPENDENCIES,\n              (List<String>) null);\n\n      if (dependencyList != null) {\n        Map<String, Edge> dependencies = this.nodeDependencies.get(node.getId());\n        if (dependencies == null) {\n          dependencies = new HashMap<>();\n\n          for (String dependencyName : dependencyList) {\n            dependencyName =\n                dependencyName == null ? null : dependencyName.trim();\n            if (dependencyName == null || dependencyName.isEmpty()) {\n              continue;\n            }\n\n            final Edge edge = new Edge(dependencyName, node.getId());\n            final Node dependencyNode = this.nodeMap.get(dependencyName);\n            if (dependencyNode == null) {\n              if (this.duplicateJobs.contains(dependencyName)) {\n                edge.setError(\"Ambiguous Dependency. Duplicates found.\");\n                dependencies.put(dependencyName, edge);\n                this.errors.add(node.getId() + \" \u4f9d\u8d56\u5173\u7cfb\u4e0d\u6e05\u6670 \"\n                    + dependencyName);\n              } else {\n                edge.setError(\"Dependency not found.\");\n                dependencies.put(dependencyName, edge);\n                this.errors.add(node.getId() + \" \u627e\u4e0d\u5230\u4f9d\u8d56 \"\n                    + dependencyName);\n              }\n            } else if (dependencyNode == node) {\n              // We have a self cycle\n              edge.setError(\"Self cycle found.\");\n              dependencies.put(dependencyName, edge);\n              this.errors.add(node.getId() + \" \u6709\u4e00\u4e2a\u6b7b\u5faa\u73af\");\n            } else {\n              dependencies.put(dependencyName, edge);\n            }\n          }\n\n          if (!dependencies.isEmpty()) {\n            this.nodeDependencies.put(node.getId(), dependencies);\n          }\n        }\n      }\n    }\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/project/DirectoryFlowLoader.java", "stars": "18", "class_props": {"extends": null, "implements": ["FlowLoader"], "modifiers": ["public"]}}, {"id": 64758, "method_name": "buildFlowsFromDependencies", "class_name": "DirectoryFlowLoader", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "  private void buildFlowsFromDependencies() {\n    // Find all root nodes by finding ones without dependents.\n    final HashSet<String> nonRootNodes = new HashSet<>();\n    for (final Map<String, Edge> edges : this.nodeDependencies.values()) {\n      for (final String sourceId : edges.keySet()) {\n        nonRootNodes.add(sourceId);\n      }\n    }\n\n    // Now create flows. Bad flows are marked invalid\n    for (final Node base : this.nodeMap.values()) {\n      // Root nodes can be discovered when parsing jobs\n      if (this.rootNodes.contains(base.getId())\n          || !nonRootNodes.contains(base.getId())) {\n        this.rootNodes.add(base.getId());\n        final Flow flow = new Flow(base.getId());\n        final Props jobProp = this.jobPropsMap.get(base.getId());\n\n        FlowLoaderUtils.addEmailPropsToFlow(flow, jobProp);\n\n        flow.addAllFlowProperties(this.flowPropsList);\n        final Set<String> visitedNodesOnPath = new HashSet<>();\n        final Set<String> visitedNodesEver = new HashSet<>();\n        constructFlow(flow, base, visitedNodesOnPath, visitedNodesEver);\n\n        flow.initialize();\n        this.flowMap.put(base.getId(), flow);\n      }\n    }\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/project/DirectoryFlowLoader.java", "stars": "18", "class_props": {"extends": null, "implements": ["FlowLoader"], "modifiers": ["public"]}}, {"id": 64759, "method_name": "constructFlow", "class_name": "DirectoryFlowLoader", "params": ["Flow", "Node", "Set<String>", "Set<String>"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "  private void constructFlow(final Flow flow, final Node node, final Set<String> visitedOnPath,\n      final Set<String> visitedEver) {\n    visitedOnPath.add(node.getId());\n    visitedEver.add(node.getId());\n\n    flow.addNode(node);\n    if (SpecialJobTypes.EMBEDDED_FLOW_TYPE.equals(node.getType())) {\n      final Props props = this.jobPropsMap.get(node.getId());\n      final String embeddedFlow = props.get(SpecialJobTypes.FLOW_NAME);\n\n      Set<String> embeddedFlows = this.flowDependencies.get(flow.getId());\n      if (embeddedFlows == null) {\n        embeddedFlows = new HashSet<>();\n        this.flowDependencies.put(flow.getId(), embeddedFlows);\n      }\n\n      node.setEmbeddedFlowId(embeddedFlow);\n      embeddedFlows.add(embeddedFlow);\n    }\n    final Map<String, Edge> dependencies = this.nodeDependencies.get(node.getId());\n\n    if (dependencies != null) {\n      for (Edge edge : dependencies.values()) {\n        if (edge.hasError()) {\n          flow.addEdge(edge);\n        } else if (visitedOnPath.contains(edge.getSourceId())) {\n          // We have a cycle. We set it as an error edge\n          edge = new Edge(edge.getSourceId(), node.getId());\n          edge.setError(\"Cyclical dependencies found.\");\n          this.errors.add(\"Cyclical dependency found at \" + edge.getId());\n          flow.addEdge(edge);\n        } else if (visitedEver.contains(edge.getSourceId())) {\n          // this node was already checked, don't need to check further\n          flow.addEdge(edge);\n        } else {\n          // This should not be null\n          flow.addEdge(edge);\n          final Node sourceNode = this.nodeMap.get(edge.getSourceId());\n          constructFlow(flow, sourceNode, visitedOnPath, visitedEver);\n        }\n      }\n    }\n\n    visitedOnPath.remove(node.getId());\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/project/DirectoryFlowLoader.java", "stars": "18", "class_props": {"extends": null, "implements": ["FlowLoader"], "modifiers": ["public"]}}, {"id": 64760, "method_name": "getNameWithoutExtension", "class_name": "DirectoryFlowLoader", "params": ["File"], "throws": null, "modifiers": ["private"], "return_type": "String", "snippet": "  private String getNameWithoutExtension(final File file) {\n    final String filename = file.getName();\n    final int index = filename.lastIndexOf('.');\n\n    return index < 0 ? filename : filename.substring(0, index);\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/project/DirectoryFlowLoader.java", "stars": "18", "class_props": {"extends": null, "implements": ["FlowLoader"], "modifiers": ["public"]}}, {"id": 64761, "method_name": "getRelativeFilePath", "class_name": "DirectoryFlowLoader", "params": ["String", "String"], "throws": null, "modifiers": ["private"], "return_type": "String", "snippet": "  private String getRelativeFilePath(final String basePath, final String filePath) {\n    return filePath.substring(basePath.length() + 1);\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/project/DirectoryFlowLoader.java", "stars": "18", "class_props": {"extends": null, "implements": ["FlowLoader"], "modifiers": ["public"]}}, {"id": 64762, "method_name": "getLayoutId", "class_name": "PasswordForgetActivity", "params": [], "throws": null, "modifiers": ["protected"], "return_type": "int", "snippet": "    protected int getLayoutId() {\n        return R.layout.resetpwd_activity;\n    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/ui/activity/PasswordForgetActivity.java", "stars": "1", "class_props": {"extends": "MyActivity", "implements": null, "modifiers": ["final", "public"]}}, {"id": 64763, "method_name": "initView", "class_name": "PasswordForgetActivity", "params": [], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void initView() {\n        InputTextHelper.with(this)\n                .addView(mPhoneView)\n                .addView(pwdEdit)\n                .addView(mCodeView)\n                .addView(repeatPwdEdit)\n                .setMain(mCommitView)\n                .setListener(helper -> mPhoneView.getText().toString().length() == 11)\n                .build();\n\n        setOnClickListener(R.id.resetBtn, R.id.toLogin, R.id.cv_register_countdown);\n        mPhoneView.addTextChangedListener(new TextWatcher() {\n\n            @Override\n            public void beforeTextChanged(CharSequence s, int start, int count, int after) {\n\n            }\n\n            @Override\n            public void onTextChanged(CharSequence s, int start, int before, int count) {\n\n            }\n\n            @Override\n            public void afterTextChanged(Editable s) {\n                String code = mCodeView.getText().toString().trim();\n                String pwd = pwdEdit.getText().toString().trim();\n                String repeatpwd = repeatPwdEdit.getText().toString().trim();\n                if (s.toString().length() > 0 && code.length() > 0 && pwd.length() > 0 && repeatpwd.length() > 0) {\n                    mCommitView.setBackgroundResource(R.drawable.login_bg);\n                    mCommitView.setTextColor(Color.WHITE);\n                    mCommitView.setEnabled(true);\n                } else {\n                    mCommitView.setBackgroundResource(R.drawable.normal_bg);\n                    mCommitView.setTextColor(Color.WHITE);\n                    mCommitView.setEnabled(false);\n                }\n            }\n        });\n        pwdEdit.addTextChangedListener(new TextWatcher() {\n\n            @Override\n            public void beforeTextChanged(CharSequence s, int start, int count, int after) {\n\n            }\n\n            @Override\n            public void onTextChanged(CharSequence s, int start, int before, int count) {\n\n            }\n\n            @Override\n            public void afterTextChanged(Editable s) {\n                String moblie = mPhoneView.getText().toString().trim();\n                String code = mCodeView.getText().toString().trim();\n                String repeatpwd = repeatPwdEdit.getText().toString().trim();\n                if (s.toString().length() > 0 && moblie.length() > 0 && code.length() > 0 && repeatpwd.length() > 0) {\n                    mCommitView.setBackgroundResource(R.drawable.login_bg);\n                    mCommitView.setTextColor(Color.WHITE);\n                    mCommitView.setEnabled(true);\n                } else {\n                    mCommitView.setBackgroundResource(R.drawable.normal_bg);\n                    mCommitView.setTextColor(Color.WHITE);\n                    mCommitView.setEnabled(false);\n                }\n            }\n        });\n        mCodeView.addTextChangedListener(new TextWatcher() {\n\n            @Override\n            public void beforeTextChanged(CharSequence s, int start, int count, int after) {\n\n            }\n\n            @Override\n            public void onTextChanged(CharSequence s, int start, int before, int count) {\n\n            }\n\n            @Override\n            public void afterTextChanged(Editable s) {\n                String moblie = mPhoneView.getText().toString().trim();\n                String pwd = pwdEdit.getText().toString().trim();\n                String repeatpwd = repeatPwdEdit.getText().toString().trim();\n                if (s.toString().length() > 0 && moblie.length() > 0 && pwd.length() > 0 && repeatpwd.length() > 0) {\n                    mCommitView.setBackgroundResource(R.drawable.login_bg);\n                    mCommitView.setTextColor(Color.WHITE);\n                    mCommitView.setEnabled(true);\n                } else {\n                    mCommitView.setBackgroundResource(R.drawable.normal_bg);\n                    mCommitView.setTextColor(Color.WHITE);\n                    mCommitView.setEnabled(false);\n                }\n            }\n        });\n        repeatPwdEdit.addTextChangedListener(new TextWatcher() {\n\n            @Override\n            public void beforeTextChanged(CharSequence s, int start, int count, int after) {\n\n            }\n\n            @Override\n            public void onTextChanged(CharSequence s, int start, int before, int count) {\n\n            }\n\n            @Override\n            public void afterTextChanged(Editable s) {\n                String moblie = mPhoneView.getText().toString().trim();\n                String pwd = pwdEdit.getText().toString().trim();\n                String code = mCodeView.getText().toString().trim();\n                if (s.toString().length() > 0 && moblie.length() > 0 && pwd.length() > 0 && code.length() > 0) {\n                    mCommitView.setBackgroundResource(R.drawable.login_bg);\n                    mCommitView.setTextColor(Color.WHITE);\n                    mCommitView.setEnabled(true);\n                } else {\n                    mCommitView.setBackgroundResource(R.drawable.normal_bg);\n                    mCommitView.setTextColor(Color.WHITE);\n                    mCommitView.setEnabled(false);\n                }\n            }\n        });\n    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/ui/activity/PasswordForgetActivity.java", "stars": "1", "class_props": {"extends": "MyActivity", "implements": null, "modifiers": ["final", "public"]}}, {"id": 64764, "method_name": "initData", "class_name": "PasswordForgetActivity", "params": [], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void initData() {\n\n    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/ui/activity/PasswordForgetActivity.java", "stars": "1", "class_props": {"extends": "MyActivity", "implements": null, "modifiers": ["final", "public"]}}, {"id": 64765, "method_name": "onClick", "class_name": "PasswordForgetActivity", "params": ["View"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onClick(View v) {\n        switch (v.getId()) {\n            case R.id.cv_register_countdown:\n                // \u9a8c\u8bc1\u7801\u6821\u9a8c\n                if (mPhoneView.getText().toString().length() != 11) {\n                    toast(R.string.common_phone_input_error);\n                    return;\n                }\n                // \u83b7\u53d6\u9a8c\u8bc1\u7801\n                EasyHttp.post(this)\n                        .api(new GetCodeApi()\n                                .setPhone(mPhoneView.getText().toString())\n                                .setType(\"2\"))\n                        .request(new HttpCallback<HttpData<GetCode>>(this) {\n\n                            @Override\n                            public void onSucceed(HttpData<GetCode> getCode) {\n                                if (getCode != null) {\n                                    int code = getCode.getCode();\n                                    String message = getCode.getMessage();\n                                    if (code == 0) {\n                                        toast(R.string.common_code_send_hint);\n                                        mCountdownView.start();\n                                    }\n                                    if (!TextUtils.isEmpty(message)) {\n                                        toast(message);\n                                    }\n                                }\n                            }\n\n                            @Override\n                            public void onFail(Exception e) {\n                                super.onFail(e);\n                                toast(e.getMessage());\n                            }\n                        });\n                break;\n            case R.id.resetBtn:\n                //\u91cd\u7f6e\u5bc6\u7801\n                if (mPhoneView.getText().toString().length() != 11) {\n                    toast(R.string.common_phone_input_error);\n                    return;\n                }\n                // \u5224\u65ad\u65b0\u5bc6\u7801\u8f93\u5165\u662f\u5426\u4e00\u81f4\n                String pwd = pwdEdit.getText().toString().trim();\n                String repeatpwd = repeatPwdEdit.getText().toString().trim();\n                if (pwd.equals(repeatpwd)){\n                    toast(\"\u5bc6\u7801\u8f93\u5165\u4e0d\u4e00\u81f4\");\n                    return;\n                }\n                EasyHttp.post(this)\n                        .api(new RefoundApi()\n                                .setAccount(mPhoneView.getText().toString().trim())\n                                .setCode(mCodeView.getText().toString().trim())\n                                .setNewPwd(Md5Util.md5(pwdEdit.getText().toString().trim()))\n                                .setRepeatNewPwd(Md5Util.md5(repeatPwdEdit.getText().toString().trim())))\n                        .request(new HttpCallback<HttpData<Void>>(this) {\n\n                            @Override\n                            public void onSucceed(HttpData<Void> data) {\n                                finish();\n                            }\n\n                            @Override\n                            public void onFail(Exception e) {\n                                super.onFail(e);\n                                toast(e.getMessage());\n                            }\n                        });\n                break;\n            case R.id.toLogin:\n                // \u5df2\u6709\u8d26\u53f7\u53bb\u767b\u5f55\n                LoginActivity.start(getActivity(), mPhoneView.getText().toString(), pwdEdit.getText().toString());\n                setResult(RESULT_OK);\n                finish();\n                break;\n            default:\n                break;\n        }\n    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/ui/activity/PasswordForgetActivity.java", "stars": "1", "class_props": {"extends": "MyActivity", "implements": null, "modifiers": ["final", "public"]}}, {"id": 64766, "method_name": "processCommand", "class_name": "EnableExtendedModeCommand", "params": ["Emulator<?>", "GdbStub", "String"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean processCommand(Emulator<?> emulator, GdbStub stub, String command) {\n        stub.makePacketAndSend(\"OK\");\n        return true;\n    }", "url": "https://raw.githubusercontent.com/wmm1996528/unidbg_douyin10/master/src/main/java/com/github/unidbg/debugger/gdb/EnableExtendedModeCommand.java", "stars": "16", "class_props": {"extends": null, "implements": ["GdbStubCommand"], "modifiers": []}}, {"id": 64767, "method_name": "getUser", "class_name": "AuthenticationContextProvider", "params": [], "throws": null, "modifiers": ["public"], "return_type": "User", "snippet": "    public User getUser() {\n        Authentication authentication = getAuthentication();\n        if (authentication instanceof OAuth2Authentication && authentication.isAuthenticated()) {\n            return convert(authentication);\n        }\n        throw new AuthenticationFailureException(\"Authentication object is not valid\");\n    }", "url": "https://raw.githubusercontent.com/everest-engineering/lhotse/master/security-support/src/main/java/engineering/everest/lhotse/security/AuthenticationContextProvider.java", "stars": "9", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 64768, "method_name": "getAuthentication", "class_name": "AuthenticationContextProvider", "params": [], "throws": null, "modifiers": ["private"], "return_type": "Authentication", "snippet": "    private Authentication getAuthentication() {\n        return SecurityContextHolder.getContext().getAuthentication();\n    }", "url": "https://raw.githubusercontent.com/everest-engineering/lhotse/master/security-support/src/main/java/engineering/everest/lhotse/security/AuthenticationContextProvider.java", "stars": "9", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 64769, "method_name": "convert", "class_name": "AuthenticationContextProvider", "params": ["Authentication"], "throws": null, "modifiers": ["private"], "return_type": "User", "snippet": "    private User convert(Authentication authentication) {\n        final var principal = authentication.getPrincipal();\n        if (!(principal instanceof AppUserDetails)) {\n            throw new AuthenticationFailureException(\"Principle object is not valid\");\n        }\n        return ((AppUserDetails) principal).getUser();\n    }", "url": "https://raw.githubusercontent.com/everest-engineering/lhotse/master/security-support/src/main/java/engineering/everest/lhotse/security/AuthenticationContextProvider.java", "stars": "9", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 64770, "method_name": "getId", "class_name": "ObjectLogRecord", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getId() {\n        return id;\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/model/ObjectLogRecord.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 64771, "method_name": "setId", "class_name": "ObjectLogRecord", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setId(int id) {\n        this.id = id;\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/model/ObjectLogRecord.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 64772, "method_name": "getDate", "class_name": "ObjectLogRecord", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Date", "snippet": "    public Date getDate() {\n        return date;\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/model/ObjectLogRecord.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 64773, "method_name": "setDate", "class_name": "ObjectLogRecord", "params": ["Date"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setDate(Date date) {\n        this.date = date;\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/model/ObjectLogRecord.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 64774, "method_name": "getUserId", "class_name": "ObjectLogRecord", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getUserId() {\n        return userId;\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/model/ObjectLogRecord.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 64775, "method_name": "setUserId", "class_name": "ObjectLogRecord", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setUserId(int userId) {\n        this.userId = userId;\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/model/ObjectLogRecord.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 64776, "method_name": "getObjectType", "class_name": "ObjectLogRecord", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getObjectType() {\n        return objectType;\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/model/ObjectLogRecord.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 64777, "method_name": "setObjectType", "class_name": "ObjectLogRecord", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setObjectType(String objectType) {\n        this.objectType = objectType;\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/model/ObjectLogRecord.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 64778, "method_name": "getObjectId", "class_name": "ObjectLogRecord", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getObjectId() {\n        return objectId;\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/model/ObjectLogRecord.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 64779, "method_name": "setObjectId", "class_name": "ObjectLogRecord", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setObjectId(int objectId) {\n        this.objectId = objectId;\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/model/ObjectLogRecord.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 64780, "method_name": "getTitle", "class_name": "ObjectLogRecord", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getTitle() {\n        return title;\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/model/ObjectLogRecord.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 64781, "method_name": "setTitle", "class_name": "ObjectLogRecord", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setTitle(String title) {\n        this.title = title;\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/model/ObjectLogRecord.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 64782, "method_name": "getAllTutorials", "class_name": "TutorialController", "params": ["String", "int", "int"], "throws": null, "modifiers": ["public"], "return_type": "ResponseEntity<Map>", "snippet": "  public ResponseEntity<Map<String, Object>> getAllTutorials(\n        @RequestParam(required = false) String title,\n        @RequestParam(defaultValue = \"0\") int page, \n        @RequestParam(defaultValue = \"3\") int size\n      ) {\n\n    try {\n      List<Tutorial> tutorials = new ArrayList<Tutorial>();\n      Pageable paging = PageRequest.of(page, size);\n      \n      Page<Tutorial> pageTuts;\n      if (title == null)\n        pageTuts = tutorialRepository.findAll(paging);\n      else\n        pageTuts = tutorialRepository.findByTitleContaining(title, paging);\n\n      tutorials = pageTuts.getContent();\n\n      if (tutorials.isEmpty()) {\n        return new ResponseEntity<>(HttpStatus.NO_CONTENT);\n      }\n\n      Map<String, Object> response = new HashMap<>();\n      response.put(\"tutorials\", tutorials);\n      response.put(\"currentPage\", pageTuts.getNumber());\n      response.put(\"totalItems\", pageTuts.getTotalElements());\n      response.put(\"totalPages\", pageTuts.getTotalPages());\n\n      return new ResponseEntity<>(response, HttpStatus.OK);\n    } catch (Exception e) {\n      return new ResponseEntity<>(null, HttpStatus.INTERNAL_SERVER_ERROR);\n    }\n  }", "url": "https://raw.githubusercontent.com/bezkoder/spring-boot-jpa-paging-sorting/master/src/main/java/com/bezkoder/spring/data/jpa/pagingsorting/controller/TutorialController.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 64783, "method_name": "findByPublished", "class_name": "TutorialController", "params": ["int", "int"], "throws": null, "modifiers": ["public"], "return_type": "ResponseEntity<Map>", "snippet": "  public ResponseEntity<Map<String, Object>> findByPublished(\n        @RequestParam(defaultValue = \"0\") int page, \n        @RequestParam(defaultValue = \"3\") int size\n      ) {\n    try {      \n      List<Tutorial> tutorials = new ArrayList<Tutorial>();\n      Pageable paging = PageRequest.of(page, size);\n      \n      Page<Tutorial> pageTuts = tutorialRepository.findByPublished(true, paging);\n      tutorials = pageTuts.getContent();\n      \n      if (tutorials.isEmpty()) {\n        return new ResponseEntity<>(HttpStatus.NO_CONTENT);\n      }\n      \n      Map<String, Object> response = new HashMap<>();\n      response.put(\"tutorials\", tutorials);\n      response.put(\"currentPage\", pageTuts.getNumber());\n      response.put(\"totalItems\", pageTuts.getTotalElements());\n      response.put(\"totalPages\", pageTuts.getTotalPages());\n      \n      return new ResponseEntity<>(response, HttpStatus.OK);\n    } catch (Exception e) {\n      return new ResponseEntity<>(HttpStatus.EXPECTATION_FAILED);\n    }\n  }", "url": "https://raw.githubusercontent.com/bezkoder/spring-boot-jpa-paging-sorting/master/src/main/java/com/bezkoder/spring/data/jpa/pagingsorting/controller/TutorialController.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 64784, "method_name": "getTutorialById", "class_name": "TutorialController", "params": ["long"], "throws": null, "modifiers": ["public"], "return_type": "ResponseEntity<Tutorial>", "snippet": "  public ResponseEntity<Tutorial> getTutorialById(@PathVariable(\"id\") long id) {\n    Optional<Tutorial> tutorialData = tutorialRepository.findById(id);\n\n    if (tutorialData.isPresent()) {\n      return new ResponseEntity<>(tutorialData.get(), HttpStatus.OK);\n    } else {\n      return new ResponseEntity<>(HttpStatus.NOT_FOUND);\n    }\n  }", "url": "https://raw.githubusercontent.com/bezkoder/spring-boot-jpa-paging-sorting/master/src/main/java/com/bezkoder/spring/data/jpa/pagingsorting/controller/TutorialController.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 64785, "method_name": "createTutorial", "class_name": "TutorialController", "params": ["Tutorial"], "throws": null, "modifiers": ["public"], "return_type": "ResponseEntity<Tutorial>", "snippet": "  public ResponseEntity<Tutorial> createTutorial(@RequestBody Tutorial tutorial) {\n    try {\n      Tutorial _tutorial = tutorialRepository.save(new Tutorial(tutorial.getTitle(), tutorial.getDescription(), false));\n      return new ResponseEntity<>(_tutorial, HttpStatus.CREATED);\n    } catch (Exception e) {\n      return new ResponseEntity<>(null, HttpStatus.EXPECTATION_FAILED);\n    }\n  }", "url": "https://raw.githubusercontent.com/bezkoder/spring-boot-jpa-paging-sorting/master/src/main/java/com/bezkoder/spring/data/jpa/pagingsorting/controller/TutorialController.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 64786, "method_name": "updateTutorial", "class_name": "TutorialController", "params": ["long", "Tutorial"], "throws": null, "modifiers": ["public"], "return_type": "ResponseEntity<Tutorial>", "snippet": "  public ResponseEntity<Tutorial> updateTutorial(@PathVariable(\"id\") long id, @RequestBody Tutorial tutorial) {\n    Optional<Tutorial> tutorialData = tutorialRepository.findById(id);\n\n    if (tutorialData.isPresent()) {\n      Tutorial _tutorial = tutorialData.get();\n      _tutorial.setTitle(tutorial.getTitle());\n      _tutorial.setDescription(tutorial.getDescription());\n      _tutorial.setPublished(tutorial.isPublished());\n      return new ResponseEntity<>(tutorialRepository.save(_tutorial), HttpStatus.OK);\n    } else {\n      return new ResponseEntity<>(HttpStatus.NOT_FOUND);\n    }\n  }", "url": "https://raw.githubusercontent.com/bezkoder/spring-boot-jpa-paging-sorting/master/src/main/java/com/bezkoder/spring/data/jpa/pagingsorting/controller/TutorialController.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 64787, "method_name": "deleteTutorial", "class_name": "TutorialController", "params": ["long"], "throws": null, "modifiers": ["public"], "return_type": "ResponseEntity<HttpStatus>", "snippet": "  public ResponseEntity<HttpStatus> deleteTutorial(@PathVariable(\"id\") long id) {\n    try {\n      tutorialRepository.deleteById(id);\n      return new ResponseEntity<>(HttpStatus.NO_CONTENT);\n    } catch (Exception e) {\n      return new ResponseEntity<>(HttpStatus.EXPECTATION_FAILED);\n    }\n  }", "url": "https://raw.githubusercontent.com/bezkoder/spring-boot-jpa-paging-sorting/master/src/main/java/com/bezkoder/spring/data/jpa/pagingsorting/controller/TutorialController.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 64788, "method_name": "deleteAllTutorials", "class_name": "TutorialController", "params": [], "throws": null, "modifiers": ["public"], "return_type": "ResponseEntity<HttpStatus>", "snippet": "  public ResponseEntity<HttpStatus> deleteAllTutorials() {\n    try {\n      tutorialRepository.deleteAll();\n      return new ResponseEntity<>(HttpStatus.NO_CONTENT);\n    } catch (Exception e) {\n      return new ResponseEntity<>(HttpStatus.EXPECTATION_FAILED);\n    }\n\n  }", "url": "https://raw.githubusercontent.com/bezkoder/spring-boot-jpa-paging-sorting/master/src/main/java/com/bezkoder/spring/data/jpa/pagingsorting/controller/TutorialController.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 64789, "method_name": "setUp", "class_name": "AssociationTypeTest", "params": [], "throws": ["Exception"], "modifiers": ["static"], "return_type": "void", "snippet": "  static void setUp() throws Exception {\n    // create a SqlSessionFactory\n    try (Reader reader = Resources.getResourceAsReader(\"org/apache/ibatis/submitted/associationtype/mybatis-config.xml\")) {\n      sqlSessionFactory = new SqlSessionFactoryBuilder().build(reader);\n    }\n\n    // populate in-memory database\n    BaseDataTest.runScript(sqlSessionFactory.getConfiguration().getEnvironment().getDataSource(),\n            \"org/apache/ibatis/submitted/associationtype/CreateDB.sql\");\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/associationtype/AssociationTypeTest.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 64790, "method_name": "shouldGetAUser", "class_name": "AssociationTypeTest", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "  void shouldGetAUser() {\n    try (SqlSession sqlSession = sqlSessionFactory.openSession()) {\n      List<Map> results = sqlSession.selectList(\"getUser\");\n      for (Map r : results) {\n        Assertions.assertEquals(String.class, r.get(\"a1\").getClass());\n        Assertions.assertEquals(String.class, r.get(\"a2\").getClass());\n      }\n    }\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/associationtype/AssociationTypeTest.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 64791, "method_name": "getPageTitle", "class_name": "HomePagerAdapter", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "CharSequence", "snippet": "    public CharSequence getPageTitle(int position) {\n        return categoryList.get(position).getTitle();\n    }", "url": "https://raw.githubusercontent.com/TrillGates/TaobaoUnion/master/app/src/main/java/com/sunofbeaches/taobaounion/ui/adapter/HomePagerAdapter.java", "stars": "9", "class_props": {"extends": "FragmentPagerAdapter", "implements": null, "modifiers": ["public"]}}, {"id": 64792, "method_name": "getItem", "class_name": "HomePagerAdapter", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "Fragment", "snippet": "    public Fragment getItem(int position) {\n        LogUtils.d(this,\"getItem - > \" + position);\n        Categories.DataBean dataBean = categoryList.get(position);\n        HomePagerFragment homePagerFragment = HomePagerFragment.newInstance(dataBean);\n        return homePagerFragment;\n    }", "url": "https://raw.githubusercontent.com/TrillGates/TaobaoUnion/master/app/src/main/java/com/sunofbeaches/taobaounion/ui/adapter/HomePagerAdapter.java", "stars": "9", "class_props": {"extends": "FragmentPagerAdapter", "implements": null, "modifiers": ["public"]}}, {"id": 64793, "method_name": "getCount", "class_name": "HomePagerAdapter", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getCount() {\n        return categoryList.size();\n    }", "url": "https://raw.githubusercontent.com/TrillGates/TaobaoUnion/master/app/src/main/java/com/sunofbeaches/taobaounion/ui/adapter/HomePagerAdapter.java", "stars": "9", "class_props": {"extends": "FragmentPagerAdapter", "implements": null, "modifiers": ["public"]}}, {"id": 64794, "method_name": "setCategories", "class_name": "HomePagerAdapter", "params": ["Categories"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setCategories(Categories categories) {\n        categoryList.clear();\n        List<Categories.DataBean> data = categories.getData();\n        this.categoryList.addAll(data);\n        LogUtils.d(this,\"size -- > \" + this.categoryList.size());\n        notifyDataSetChanged();\n    }", "url": "https://raw.githubusercontent.com/TrillGates/TaobaoUnion/master/app/src/main/java/com/sunofbeaches/taobaounion/ui/adapter/HomePagerAdapter.java", "stars": "9", "class_props": {"extends": "FragmentPagerAdapter", "implements": null, "modifiers": ["public"]}}, {"id": 64795, "method_name": "allowsTeleporting", "class_name": "ShipSpecialTeleporter", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean allowsTeleporting() { return true;  }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/ships/ShipSpecialTeleporter.java", "stars": "74", "class_props": {"extends": "ShipSpecial", "implements": null, "modifiers": ["final", "public"]}}, {"id": 64796, "method_name": "name", "class_name": "ShipSpecialTeleporter", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String name()               { return tech().name(); }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/ships/ShipSpecialTeleporter.java", "stars": "74", "class_props": {"extends": "ShipSpecial", "implements": null, "modifiers": ["final", "public"]}}, {"id": 64797, "method_name": "desc", "class_name": "ShipSpecialTeleporter", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String desc()               { return tech().brief(); }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/ships/ShipSpecialTeleporter.java", "stars": "74", "class_props": {"extends": "ShipSpecial", "implements": null, "modifiers": ["final", "public"]}}, {"id": 64798, "method_name": "getAppUser", "class_name": "UserExecUser", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getAppUser() {\n        return appUser;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/service/src/main/java/com/webank/wedatasphere/exchangis/auth/domain/UserExecUser.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 64799, "method_name": "setAppUser", "class_name": "UserExecUser", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setAppUser(String appUser) {\n        this.appUser = appUser;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/service/src/main/java/com/webank/wedatasphere/exchangis/auth/domain/UserExecUser.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 64800, "method_name": "getExecUser", "class_name": "UserExecUser", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getExecUser() {\n        return execUser;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/service/src/main/java/com/webank/wedatasphere/exchangis/auth/domain/UserExecUser.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 64801, "method_name": "setExecUser", "class_name": "UserExecUser", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setExecUser(String execUser) {\n        this.execUser = execUser;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/service/src/main/java/com/webank/wedatasphere/exchangis/auth/domain/UserExecUser.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 64802, "method_name": "httpClientConnectionPool", "class_name": "OkHttpFeignConfiguration", "params": ["FeignHttpClientProperties", "OkHttpClientConnectionPoolFactory"], "throws": null, "modifiers": ["public"], "return_type": "ConnectionPool", "snippet": "    public ConnectionPool httpClientConnectionPool(FeignHttpClientProperties httpClientProperties,\n                                                   OkHttpClientConnectionPoolFactory connectionPoolFactory) {\n        Integer maxTotalConnections = httpClientProperties.getMaxConnections();\n        Long timeToLive = httpClientProperties.getTimeToLive();\n        TimeUnit ttlUnit = httpClientProperties.getTimeToLiveUnit();\n        return connectionPoolFactory.create(maxTotalConnections, timeToLive, ttlUnit);\n    }", "url": "https://raw.githubusercontent.com/geekidea/spring-cloud-plus/master/scp-framework/scp-framework-config/src/main/java/io/geekidea/cloud/framework/config/feign/OkHttpFeignConfiguration.java", "stars": "22", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 64803, "method_name": "client", "class_name": "OkHttpFeignConfiguration", "params": ["OkHttpClientFactory", "ConnectionPool", "FeignHttpClientProperties"], "throws": null, "modifiers": ["public"], "return_type": "okhttp3", "snippet": "    public okhttp3.OkHttpClient client(OkHttpClientFactory httpClientFactory,\n                                       ConnectionPool connectionPool, FeignHttpClientProperties httpClientProperties) {\n        Boolean followRedirects = httpClientProperties.isFollowRedirects();\n        Integer connectTimeout = httpClientProperties.getConnectionTimeout();\n        Boolean disableSslValidation = httpClientProperties.isDisableSslValidation();\n        this.okHttpClient = httpClientFactory.createBuilder(disableSslValidation).\n                connectTimeout(connectTimeout, TimeUnit.MILLISECONDS).\n                followRedirects(followRedirects).\n                connectionPool(connectionPool).build();\n        return this.okHttpClient;\n    }", "url": "https://raw.githubusercontent.com/geekidea/spring-cloud-plus/master/scp-framework/scp-framework-config/src/main/java/io/geekidea/cloud/framework/config/feign/OkHttpFeignConfiguration.java", "stars": "22", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 64804, "method_name": "destroy", "class_name": "OkHttpFeignConfiguration", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void destroy() {\n        if (okHttpClient != null) {\n            okHttpClient.dispatcher().executorService().shutdown();\n            okHttpClient.connectionPool().evictAll();\n        }\n    }", "url": "https://raw.githubusercontent.com/geekidea/spring-cloud-plus/master/scp-framework/scp-framework-config/src/main/java/io/geekidea/cloud/framework/config/feign/OkHttpFeignConfiguration.java", "stars": "22", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 64805, "method_name": "feignClient", "class_name": "OkHttpFeignConfiguration", "params": ["okhttp3"], "throws": null, "modifiers": ["public"], "return_type": "Client", "snippet": "    public Client feignClient(okhttp3.OkHttpClient client) {\n        return new OkHttpClient(client);\n    }", "url": "https://raw.githubusercontent.com/geekidea/spring-cloud-plus/master/scp-framework/scp-framework-config/src/main/java/io/geekidea/cloud/framework/config/feign/OkHttpFeignConfiguration.java", "stars": "22", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 64806, "method_name": "init", "class_name": "StarDriverProcessor", "params": ["ProcessingEnvironment"], "throws": null, "modifiers": ["synchronized", "public"], "return_type": "void", "snippet": "    public synchronized void init(ProcessingEnvironment processingEnv) {\n        super.init(processingEnv);\n        mMessager = processingEnv.getMessager();\n        mElementUtils = processingEnv.getElementUtils();\n    }", "url": "https://raw.githubusercontent.com/succlz123/StarDriver-APT/master/stardriver-apt-processor/src/main/java/org/succlz123/stardriver/StarDriverProcessor.java", "stars": "4", "class_props": {"extends": "AbstractProcessor", "implements": null, "modifiers": ["public"]}}, {"id": 64807, "method_name": "getSupportedAnnotationTypes", "class_name": "StarDriverProcessor", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Set<String>", "snippet": "    public Set<String> getSupportedAnnotationTypes() {\n        HashSet<String> supportTypes = new LinkedHashSet<>();\n        supportTypes.add(StarDriverInit.class.getCanonicalName());\n        return supportTypes;\n    }", "url": "https://raw.githubusercontent.com/succlz123/StarDriver-APT/master/stardriver-apt-processor/src/main/java/org/succlz123/stardriver/StarDriverProcessor.java", "stars": "4", "class_props": {"extends": "AbstractProcessor", "implements": null, "modifiers": ["public"]}}, {"id": 64808, "method_name": "getSupportedSourceVersion", "class_name": "StarDriverProcessor", "params": [], "throws": null, "modifiers": ["public"], "return_type": "SourceVersion", "snippet": "    public SourceVersion getSupportedSourceVersion() {\n        return SourceVersion.latestSupported();\n    }", "url": "https://raw.githubusercontent.com/succlz123/StarDriver-APT/master/stardriver-apt-processor/src/main/java/org/succlz123/stardriver/StarDriverProcessor.java", "stars": "4", "class_props": {"extends": "AbstractProcessor", "implements": null, "modifiers": ["public"]}}, {"id": 64809, "method_name": "process", "class_name": "StarDriverProcessor", "params": ["Set<TypeElement>", "RoundEnvironment"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean process(Set<? extends TypeElement> set, RoundEnvironment roundEnvironment) {\n        long startTime = System.currentTimeMillis();\n        Set<? extends Element> elements = roundEnvironment.getElementsAnnotatedWith(StarDriverInit.class);\n        if (elements != null && !elements.isEmpty()) {\n            mMessager.printMessage(Diagnostic.Kind.NOTE, TAG + \" -> processing\");\n            mNodeHashMap.clear();\n            for (Element element : elements) {\n                String fullName = element.asType().toString();\n                ProcessClassNode proxy = mNodeHashMap.get(fullName);\n                if (proxy == null) {\n                    proxy = new ProcessClassNode(new ClassParameter(mElementUtils, element));\n                    mNodeHashMap.put(fullName, proxy);\n                }\n            }\n            try {\n                JavaFile javaFile = JavaFile.builder(PACKAGE_NAME, generateManagerCode()).build();\n                javaFile.writeTo(processingEnv.getFiler());\n            } catch (Exception e) {\n                mMessager.printMessage(Diagnostic.Kind.ERROR, TAG + \" -> process error \" + e);\n            }\n            double cost = (System.currentTimeMillis() - startTime) / 1000d;\n            mMessager.printMessage(Diagnostic.Kind.NOTE, TAG + \" -> process finish cost time: \" + cost + \"s\");\n        }\n        return true;\n    }", "url": "https://raw.githubusercontent.com/succlz123/StarDriver-APT/master/stardriver-apt-processor/src/main/java/org/succlz123/stardriver/StarDriverProcessor.java", "stars": "4", "class_props": {"extends": "AbstractProcessor", "implements": null, "modifiers": ["public"]}}, {"id": 64810, "method_name": "generateManagerCode", "class_name": "StarDriverProcessor", "params": [], "throws": null, "modifiers": ["private"], "return_type": "TypeSpec", "snippet": "    private TypeSpec generateManagerCode() {\n        return TypeSpec.classBuilder(\"StarDriverManager\")\n                .addModifiers(Modifier.PUBLIC)\n                .addJavadoc(\"This Java file is automatically generated by \" + TAG + \", PLEASE DO NOT EDIT!\")\n                .addMethod(generateMethods())\n                .build();\n    }", "url": "https://raw.githubusercontent.com/succlz123/StarDriver-APT/master/stardriver-apt-processor/src/main/java/org/succlz123/stardriver/StarDriverProcessor.java", "stars": "4", "class_props": {"extends": "AbstractProcessor", "implements": null, "modifiers": ["public"]}}, {"id": 64811, "method_name": "generateMethods", "class_name": "StarDriverProcessor", "params": [], "throws": null, "modifiers": ["private"], "return_type": "MethodSpec", "snippet": "    private MethodSpec generateMethods() {\n        ClassName host = ClassName.get(\"android.app\", \"Application\");\n        String packageName = this.getClass().getPackage().getName();\n        ClassName result = ClassName.get(packageName, \"StarDriverStatistics\");\n        ClassName arrayList = ClassName.get(ArrayList.class);\n        ParameterizedTypeName returnType = ParameterizedTypeName.get(arrayList, result);\n        MethodSpec.Builder methodBuilder = MethodSpec.methodBuilder(\"inject\")\n                .addModifiers(Modifier.PUBLIC, Modifier.STATIC)\n                .returns(returnType)\n                .addParameter(host, \"context\");\n        methodBuilder.beginControlFlow(\"if (context == null)\")\n                .addStatement(\"throw new IllegalStateException(\\\"The application is null\\\")\")\n                .endControlFlow();\n        methodBuilder.addStatement(\"$T<$T> resultList = new $T<>()\", ArrayList.class, result, ArrayList.class);\n\n        Set<Map.Entry<String, ProcessClassNode>> entries = mNodeHashMap.entrySet();\n        for (Map.Entry<String, ProcessClassNode> entry : entries) {\n            ProcessClassNode currentNode = entry.getValue();\n            ClassParameter currentParameter = entry.getValue().value;\n            // https://stackoverflow.com/questions/7687829/java-6-annotation-processing-getting-a-class-from-an-annotation/52793839#52793839\n            try {\n                currentParameter.starDriverInit.after();\n            } catch (javax.lang.model.type.MirroredTypesException mte) {\n                List<? extends TypeMirror> typeMirrors = mte.getTypeMirrors();\n                for (TypeMirror typeMirror : typeMirrors) {\n                    ProcessClassNode node = mNodeHashMap.get(typeMirror.toString());\n                    currentNode.count++;\n                    node.next.add(currentNode);\n                }\n            }\n            try {\n                currentParameter.starDriverInit.before();\n            } catch (javax.lang.model.type.MirroredTypesException mte) {\n                List<? extends TypeMirror> typeMirrors = mte.getTypeMirrors();\n                for (TypeMirror typeMirror : typeMirrors) {\n                    ProcessClassNode node = mNodeHashMap.get(typeMirror.toString());\n                    node.count++;\n                    currentNode.next.add(node);\n                }\n            }\n        }\n        List<ClassParameter> list = new ArrayList<>(entries.size());\n        Stack<ProcessClassNode> stack = new Stack<>();\n        for (Map.Entry<String, ProcessClassNode> entry : entries) {\n            if (entry.getValue().count == 0) {\n                stack.push(entry.getValue());\n            }\n        }\n        while (!stack.isEmpty()) {\n            ProcessClassNode processClassNode = stack.pop();\n            if (processClassNode == null) {\n                break;\n            }\n            for (ProcessClassNode node : processClassNode.next) {\n                node.count--;\n                if (node.count == 0) {\n                    stack.push(node);\n                }\n            }\n            list.add(processClassNode.value);\n        }\n\n        if (list.size() != entries.size()) {\n            for (ClassParameter classParameter : list) {\n                mNodeHashMap.remove(classParameter.classFullName);\n            }\n            StringBuilder sb = new StringBuilder(\"The init tasks is Cycle, please check it carefully -> \\n\");\n            for (Map.Entry<String, ProcessClassNode> entry : entries) {\n                sb.append(entry.getValue().value.classFullName);\n                sb.append(\"\\n\");\n            }\n            throw new IllegalStateException(sb.toString());\n        }\n\n        for (ClassParameter parameter : list) {\n            methodBuilder.addJavadoc(\"\\\"\" + parameter.simpleName + \"\\\"\" + \" - >\");\n        }\n\n        methodBuilder.addStatement(\"long now = 0L\");\n        for (ClassParameter parameter : list) {\n            TypeVariableName t = TypeVariableName.get(parameter.classFullName);\n            String resultName = parameter.classSimpleName + \"_result\";\n            methodBuilder.addStatement(\"now = $T.currentTimeMillis()\", System.class);\n            methodBuilder.addStatement(\"$T \" + parameter.classSimpleName + \" = new $T()\", t, t);\n            methodBuilder.addStatement(\"$T \" + resultName + \" = new $T()\", result, result);\n            methodBuilder.addStatement(parameter.classSimpleName + \".initialize(context\" + \", \" + resultName + \")\");\n            methodBuilder.addStatement(resultName + \".useTime = System.currentTimeMillis() - now\");\n            methodBuilder.addStatement(resultName + \".name = \\\"\" + parameter.starDriverInit.name() + \"\\\"\");\n            methodBuilder.addStatement(resultName + \".className = \\\"\" + parameter.classFullName + \"\\\"\");\n            methodBuilder.addStatement(\"resultList.add(\" + resultName + \")\");\n        }\n        methodBuilder.addStatement(\"return resultList\");\n        return methodBuilder.build();\n    }", "url": "https://raw.githubusercontent.com/succlz123/StarDriver-APT/master/stardriver-apt-processor/src/main/java/org/succlz123/stardriver/StarDriverProcessor.java", "stars": "4", "class_props": {"extends": "AbstractProcessor", "implements": null, "modifiers": ["public"]}}, {"id": 64812, "method_name": "compareTo", "class_name": "ProcessClassNode", "params": ["ProcessClassNode"], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "        public int compareTo(ProcessClassNode processClassNode) {\n            return count - processClassNode.count;\n        }", "url": "https://raw.githubusercontent.com/succlz123/StarDriver-APT/master/stardriver-apt-processor/src/main/java/org/succlz123/stardriver/StarDriverProcessor.java", "stars": "4", "class_props": {"extends": null, "implements": ["Comparable"], "modifiers": ["static", "private"]}}, {"id": 64813, "method_name": "createDataSourceInternal", "class_name": "GSYExoHttpDataSourceFactory", "params": ["HttpDataSource"], "throws": null, "modifiers": ["protected"], "return_type": "GSYExoHttpDataSource", "snippet": "    protected GSYExoHttpDataSource createDataSourceInternal(\n            HttpDataSource.RequestProperties defaultRequestProperties) {\n        GSYExoHttpDataSource dataSource =\n                new GSYExoHttpDataSource(\n                        userAgent,\n                        /* contentTypePredicate= */ null,\n                        connectTimeoutMillis,\n                        readTimeoutMillis,\n                        allowCrossProtocolRedirects,\n                        defaultRequestProperties);\n        if (listener != null) {\n            dataSource.addTransferListener(listener);\n        }\n        return dataSource;\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/tv/danmaku/ijk/media/exo2/source/GSYExoHttpDataSourceFactory.java", "stars": "2", "class_props": {"extends": "BaseFactory", "implements": null, "modifiers": ["final", "public"]}}, {"id": 64814, "method_name": "balanceEditor", "class_name": "ContractBalanceAction", "params": ["ActionMapping", "DynActionForm", "HttpServletRequest", "HttpServletResponse", "ConnectionSet"], "throws": ["BGException"], "modifiers": ["public"], "return_type": "ActionForward", "snippet": "\tpublic ActionForward balanceEditor( ActionMapping mapping,\n\t\t\t\t\t\t\t\t\t\tDynActionForm form,\n\t\t\t\t\t\t\t\t\t\tHttpServletRequest request,\n\t\t\t\t\t\t\t\t\t\tHttpServletResponse response,\n\t\t\t\t\t\t\t\t\t\tConnectionSet conSet )\n\t\tthrows BGException\n\t{\n\t\tString billingId = form.getParam( \"billingId\" );\n\t\tString item = form.getParam( \"item\" );\n\n\t\tDirectoryDAO directoryDAO = new DirectoryDAO( form.getUser(), billingId );\n\t\tBalanceDAO balanceDAO = new BalanceDAO( form.getUser(), billingId );\n\t\tif( \"contractCharge\".equals( item ) )\n\t\t{\n\t\t\tSet<Integer> allowedTypeIds = getTypePermission( form, billingId, \"chargeTypeIds\" );\n\n\t\t\tform.getResponse().setData( \"itemTypes\", directoryDAO.getContractChargeTypes( allowedTypeIds ) );\n\t\t\tif( form.getId() > 0 )\n\t\t\t{\n\t\t\t\tform.getResponse().setData( \"balanceItem\", balanceDAO.getContractCharge( form.getId() ) );\n\t\t\t}\n\t\t}\n\t\telse if( \"contractPayment\".equals( item ) )\n\t\t{\n\t\t\tDBInfo dbInfo = DBInfoManager.getDbInfo( billingId );\n\t\t\tif( dbInfo.getPluginSet().contains( CashCheckDAO.CASHCHECK_MODULE_ID ) )\n\t\t\t{\n\t\t\t\tform.getResponse().setData( \"currentPrinter\", new CashCheckDAO( form.getUser(), billingId ).getCurrentPrinter() );\n\t\t\t}\n\t\t\t\n\t\t\tSet<Integer> allowedTypeIds = getTypePermission( form, billingId, \"paymentTypeIds\" );\n\n\t\t\tform.getResponse().setData( \"itemTypes\", directoryDAO.getContractPaymentTypes( allowedTypeIds ) );\n\t\t\tif( form.getId() > 0 )\n\t\t\t{\n\t\t\t\tform.getResponse().setData( \"balanceItem\", balanceDAO.getContractPayment( form.getId() ) );\n\t\t\t}\n\t\t}\n\t\tform.getResponse().setData( \"date\", new SimpleDateFormat( \"dd.MM.yyyy\" ).format( Calendar.getInstance().getTime() ) );\n\t\treturn data( conSet, mapping, form, \"balanceEditor\" );\n\t}", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/proto/struts/action/ContractBalanceAction.java", "stars": "12", "class_props": {"extends": "BaseAction", "implements": null, "modifiers": ["public"]}}, {"id": 64815, "method_name": "getTypePermission", "class_name": "ContractBalanceAction", "params": ["DynActionForm", "String", "String"], "throws": null, "modifiers": ["private"], "return_type": "Set<Integer>", "snippet": "\tprivate Set<Integer> getTypePermission( DynActionForm form, String billingId, String key )\n\t{\n\t\tSet<Integer> allowedTypeIds = new HashSet<Integer>();\n\t\tParameterMap permission = form.getPermission();\n\t\tif( permission != null )\n\t\t{\n\t\t\tString paymentTypeConfig = permission.get( key );\n\n\t\t\tif( Utils.notBlankString( paymentTypeConfig ) )\n\t\t\t{\n\t\t\t\tfor( String str : paymentTypeConfig.split( \";\" ) )\n\t\t\t\t{\n\t\t\t\t\tif( str.startsWith( billingId ) )\n\t\t\t\t\t{\n\t\t\t\t\t\tallowedTypeIds.addAll( Utils.toIntegerSet( str.split( \":\" )[1] ) );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn allowedTypeIds;\n\t}", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/proto/struts/action/ContractBalanceAction.java", "stars": "12", "class_props": {"extends": "BaseAction", "implements": null, "modifiers": ["public"]}}, {"id": 64816, "method_name": "balance", "class_name": "ContractBalanceAction", "params": ["ActionMapping", "DynActionForm", "HttpServletRequest", "HttpServletResponse", "ConnectionSet"], "throws": ["BGException"], "modifiers": ["public"], "return_type": "ActionForward", "snippet": "\tpublic ActionForward balance( ActionMapping mapping,\n\t                              DynActionForm form,\n\t                              HttpServletRequest request,\n\t                              HttpServletResponse response,\n\t                              ConnectionSet conSet )\n\t\tthrows BGException\n\t{\n\t\tString billingId = form.getParam( \"billingId\" );\n\t\tint contractId = form.getParamInt( \"contractId\" );\n\t\t\n\t\tDate[] period = getPeriod( form );\n\n\t\tBalanceDAO balanceDAO = new BalanceDAO( form.getUser(), billingId );\n\n\t\tList<ContractBalanceGeneral> balanceList = new ArrayList<ContractBalanceGeneral>();\n\t\t\n\t\tform.getResponse().setData( \"list\", balanceList );\n\t\tform.getResponse().setData( \"summs\", balanceDAO.getContractBalanceList( contractId, period[0], period[1], balanceList ) );\n\t\tform.getResponse().setData( \"contractInfo\", new ContractDAO( form.getUser(), billingId ).getContractInfo( contractId ) );\n\t\t\n\t\treturn data( conSet, mapping, form, \"balance\" );\n\t}", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/proto/struts/action/ContractBalanceAction.java", "stars": "12", "class_props": {"extends": "BaseAction", "implements": null, "modifiers": ["public"]}}, {"id": 64817, "method_name": "balanceDetail", "class_name": "ContractBalanceAction", "params": ["ActionMapping", "DynActionForm", "HttpServletRequest", "HttpServletResponse", "ConnectionSet"], "throws": ["BGException"], "modifiers": ["public"], "return_type": "ActionForward", "snippet": "\tpublic ActionForward balanceDetail( ActionMapping mapping,\n\t                                    DynActionForm form,\n\t                                    HttpServletRequest request,\n\t                                    HttpServletResponse response,\n\t                                    ConnectionSet conSet )\n\t\tthrows BGException\n\t{\n\t\tString billingId = form.getParam( \"billingId\" );\n\t\tint contractId = form.getParamInt( \"contractId\" );\n\t\t\n\t\tBalanceDAO balanceDAO = new BalanceDAO( form.getUser(), billingId );\n\n\t\tList<ContractBalanceDetail> balanceList = new ArrayList<ContractBalanceDetail>();\n\t\tform.getResponse().setData( \"list\", balanceList );\n\t\t\n\t\tDate[] period = getPeriod( form );\n\t\tform.getResponse().setData( \"summa\", balanceDAO.getContractBalanceDetailList( contractId, period[0], period[1], balanceList ) );\n\t\tform.getResponse().setData( \"contractInfo\", new ContractDAO( form.getUser(), billingId ).getContractInfo( contractId ) );\n\n\t\treturn data( conSet, mapping, form, \"balanceDetail\" );\n\t}", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/proto/struts/action/ContractBalanceAction.java", "stars": "12", "class_props": {"extends": "BaseAction", "implements": null, "modifiers": ["public"]}}, {"id": 64818, "method_name": "paymentList", "class_name": "ContractBalanceAction", "params": ["ActionMapping", "DynActionForm", "HttpServletRequest", "HttpServletResponse", "ConnectionSet"], "throws": ["BGException"], "modifiers": ["public"], "return_type": "ActionForward", "snippet": "\tpublic ActionForward paymentList( ActionMapping mapping,\n\t                                  DynActionForm form,\n\t                                  HttpServletRequest request,\n\t                                  HttpServletResponse response,\n\t                                  ConnectionSet conSet )\n\t\tthrows BGException\n\t{\n\t\tString billingId = form.getParam( \"billingId\" );\n\t\tint contractId = form.getParamInt( \"contractId\" );\n\t\t\n\t\tBalanceDAO balanceDAO = new BalanceDAO( form.getUser(), billingId );\n\t\t\n\t\tList<ContractPayment> paymentList = new ArrayList<ContractPayment>();\n\t\tform.getResponse().setData( \"list\", paymentList );\n\t\t\n\t\tList<ContractPayment> subPaymentList = new ArrayList<ContractPayment>();\n\t\tform.getResponse().setData( \"subList\", subPaymentList );\n\t\t\n\t\tDate[] period = getPeriod( form );\n\t\t\n\t\tform.getResponse().setData( \"summa\", balanceDAO.getContractPaymentList( contractId, period[0], period[1], paymentList, subPaymentList ) );\n\t\tform.getResponse().setData( \"contractInfo\", new ContractDAO( form.getUser(), billingId ).getContractInfo( contractId ) );\n\n\t\treturn data( conSet, mapping, form, \"paymentList\" );\n\t}", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/proto/struts/action/ContractBalanceAction.java", "stars": "12", "class_props": {"extends": "BaseAction", "implements": null, "modifiers": ["public"]}}, {"id": 64819, "method_name": "chargeList", "class_name": "ContractBalanceAction", "params": ["ActionMapping", "DynActionForm", "HttpServletRequest", "HttpServletResponse", "ConnectionSet"], "throws": ["BGException"], "modifiers": ["public"], "return_type": "ActionForward", "snippet": "\tpublic ActionForward chargeList( ActionMapping mapping,\n\t                                 DynActionForm form,\n\t                                 HttpServletRequest request,\n\t                                 HttpServletResponse response,\n\t                                 ConnectionSet conSet )\n\t\tthrows BGException\n\t{\n\t\tString billingId = form.getParam( \"billingId\" );\n\t\tint contractId = form.getParamInt( \"contractId\" );\n\n\t\tBalanceDAO balanceDAO = new BalanceDAO( form.getUser(), billingId );\n\n\t\tList<ContractCharge> chargeList = new ArrayList<ContractCharge>();\n\t\tform.getResponse().setData( \"list\", chargeList );\n\t\t\n\t\tList<ContractCharge> subChargeList = new ArrayList<ContractCharge>();\n\t\tform.getResponse().setData( \"subList\", subChargeList );\n\t\t\n\t\tDate[] period = getPeriod( form );\n\n\t\tform.getResponse().setData( \"summa\", balanceDAO.getContractChargeList( contractId, period[0], period[1], chargeList, subChargeList ) );\n\t\tform.getResponse().setData( \"contractInfo\", new ContractDAO( form.getUser(), billingId ).getContractInfo( contractId ) );\n\t\t\n\t\treturn data( conSet, mapping, form, \"chargeList\" );\n\t}", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/proto/struts/action/ContractBalanceAction.java", "stars": "12", "class_props": {"extends": "BaseAction", "implements": null, "modifiers": ["public"]}}, {"id": 64820, "method_name": "accountList", "class_name": "ContractBalanceAction", "params": ["ActionMapping", "DynActionForm", "HttpServletRequest", "HttpServletResponse", "ConnectionSet"], "throws": ["BGException"], "modifiers": ["public"], "return_type": "ActionForward", "snippet": "\tpublic ActionForward accountList( ActionMapping mapping,\n\t                                  DynActionForm form,\n\t                                  HttpServletRequest request,\n\t                                  HttpServletResponse response,\n\t                                  ConnectionSet conSet )\n\t\tthrows BGException\n\t{\n\t\tString billingId = form.getParam( \"billingId\" );\n\t\tint contractId = form.getParamInt( \"contractId\" );\n\t\t\n\t\tBalanceDAO balanceDAO = new BalanceDAO( form.getUser(), billingId );\n\n\t\tDate[] period = getPeriod( form );\n\t\t\n\t\tList<ContractAccount> chargeList = new ArrayList<ContractAccount>();\n\t\tform.getResponse().setData( \"list\", chargeList );\n\t\t\n\t\tList<ContractAccount> subChargeList = new ArrayList<ContractAccount>();\n\t\tform.getResponse().setData( \"subList\", subChargeList );\n\n\t\tform.getResponse().setData( \"summa\", balanceDAO.getContractAccountList( contractId, period[0], period[1], chargeList, subChargeList ) );\n\t\tform.getResponse().setData( \"contractInfo\", new ContractDAO( form.getUser(), billingId ).getContractInfo( contractId ) );\n\n\t\treturn data( conSet, mapping, form, \"accountList\" );\n\t}", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/proto/struts/action/ContractBalanceAction.java", "stars": "12", "class_props": {"extends": "BaseAction", "implements": null, "modifiers": ["public"]}}, {"id": 64821, "method_name": "getPeriod", "class_name": "ContractBalanceAction", "params": ["DynActionForm"], "throws": null, "modifiers": ["private"], "return_type": "Date", "snippet": "\tprivate Date[] getPeriod( DynActionForm form )\n\t{\n\t\tCalendar calendar = Calendar.getInstance();\n    \tcalendar.setTime( new Date() );\n    \tcalendar.set( Calendar.DAY_OF_MONTH, 1 );\n    \tDate dateFrom = TimeUtils.parse( form.getParam( \"dateFrom\", \"\" ), TimeUtils.PATTERN_DDMMYYYY, calendar.getTime());\n    \tcalendar.set( Calendar.DAY_OF_MONTH, calendar.getActualMaximum( Calendar.DAY_OF_MONTH ) );\n    \tDate dateTo = TimeUtils.parse( form.getParam( \"dateTo\", \"\" ), TimeUtils.PATTERN_DDMMYYYY ,calendar.getTime());\n    \t\n    \tform.getResponse().setData( \"dateFrom\", dateFrom );\n\t\tform.getResponse().setData( \"dateTo\", dateTo );\n\t\t\n\t\treturn new Date[]{ dateFrom, dateTo };\n\t}", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/proto/struts/action/ContractBalanceAction.java", "stars": "12", "class_props": {"extends": "BaseAction", "implements": null, "modifiers": ["public"]}}, {"id": 64822, "method_name": "updateBalance", "class_name": "ContractBalanceAction", "params": ["ActionMapping", "DynActionForm", "HttpServletRequest", "HttpServletResponse", "ConnectionSet"], "throws": ["BGException"], "modifiers": ["public"], "return_type": "ActionForward", "snippet": "\tpublic ActionForward updateBalance( ActionMapping mapping,\n\t\t\t\t\t\t\t\t\t\tDynActionForm form,\n\t\t\t\t\t\t\t\t\t\tHttpServletRequest request,\n\t\t\t\t\t\t\t\t\t\tHttpServletResponse response,\n\t\t\t\t\t\t\t\t\t\tConnectionSet conSet )\n\t\tthrows BGException\n\t{\n\t\tString billingId = form.getParam( \"billingId\" );\n\t\tint contractId = form.getParamInt( \"contractId\" );\n\t\tString item = form.getParam( \"item\" );\n\t\tDate date = TimeUtils.parse( form.getParam( \"date\", \"\" ), TimeUtils.PATTERN_DDMMYYYY );\n\n\t\tint id = form.getParamInt( \"id\", 0 );\n\t\tint typeId = form.getParamInt( \"typeId\" );\n\t\tBigDecimal summa = Utils.parseBigDecimal( form.getParam( \"summa\", \"\").replace(',', '.') );\n\t\tString comment = form.getParam( \"comment\" );\n\n\t\tBalanceDAO balanceDAO = new BalanceDAO( form.getUser(), billingId );\n\n\t\tif( \"contractPayment\".equals( item ) )\n\t\t{\n\t\t\tid = balanceDAO.updateContractPayment( id, contractId, summa, date, typeId, comment );\n\t\t}\n\t\telse if( \"contractCharge\".equals( item ) )\n\t\t{\n\t\t\tid = balanceDAO.updateContractCharge( id, contractId, summa, date, typeId, comment );\n\t\t}\n\t\tform.getResponse().setData( \"id\", id );\n\n\t\treturn status( conSet, form );\n\t}", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/proto/struts/action/ContractBalanceAction.java", "stars": "12", "class_props": {"extends": "BaseAction", "implements": null, "modifiers": ["public"]}}, {"id": 64823, "method_name": "deletePayment", "class_name": "ContractBalanceAction", "params": ["ActionMapping", "DynActionForm", "HttpServletRequest", "HttpServletResponse", "ConnectionSet"], "throws": ["BGException"], "modifiers": ["public"], "return_type": "ActionForward", "snippet": "\tpublic ActionForward deletePayment( ActionMapping mapping,\n\t\t\t\t\t\t\t\t\t\tDynActionForm form,\n\t\t\t\t\t\t\t\t\t\tHttpServletRequest request,\n\t\t\t\t\t\t\t\t\t\tHttpServletResponse response,\n\t\t\t\t\t\t\t\t\t\tConnectionSet conSet )\n\t\tthrows BGException\n\t{\n\t\tString billingId = form.getParam( \"billingId\" );\n\t\tInteger paymentId = form.getParamInt( \"paymentId\" );\n\t\tInteger contractId = form.getParamInt( \"contractId\" );\n\n\t\tBalanceDAO balanceDAO = new BalanceDAO( form.getUser(), billingId );\n\t\tbalanceDAO.deleteContractPayment( paymentId, contractId );\n\n\t\treturn status( conSet, form);\n\t}", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/proto/struts/action/ContractBalanceAction.java", "stars": "12", "class_props": {"extends": "BaseAction", "implements": null, "modifiers": ["public"]}}, {"id": 64824, "method_name": "deleteCharge", "class_name": "ContractBalanceAction", "params": ["ActionMapping", "DynActionForm", "HttpServletRequest", "HttpServletResponse", "ConnectionSet"], "throws": ["BGException"], "modifiers": ["public"], "return_type": "ActionForward", "snippet": "\tpublic ActionForward deleteCharge( ActionMapping mapping,\n\t\t\t\t\t\t\t\t\t   DynActionForm form,\n\t\t\t\t\t\t\t\t\t   HttpServletRequest request,\n\t\t\t\t\t\t\t\t\t   HttpServletResponse response,\n\t\t\t\t\t\t\t\t\t   ConnectionSet conSet )\n\t\tthrows BGException\n\t{\n\t\tString billingId = form.getParam( \"billingId\" );\n\t\tInteger chargeId = form.getParamInt( \"chargeId\" );\n\t\tInteger contractId = form.getParamInt( \"contractId\" );\n\n\t\tBalanceDAO balanceDAO = new BalanceDAO( form.getUser(), billingId );\n\t\tbalanceDAO.deleteContractCharge( chargeId, contractId );\n\n\t\treturn status( conSet, form );\n\t}", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/proto/struts/action/ContractBalanceAction.java", "stars": "12", "class_props": {"extends": "BaseAction", "implements": null, "modifiers": ["public"]}}, {"id": 64825, "method_name": "onCreate", "class_name": "SelectValueActivity", "params": ["Bundle"], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n\n        mAudioManager = (AudioManager) getSystemService(Context.AUDIO_SERVICE);\n\n        mAdapter = new SelectValueScrollAdapter(\n                this, getIntent().getIntExtra(EXTRA_COUNT, DEFAULT_COUNT));\n\n        mView = new CardScrollView(this) {\n            @Override\n            public final boolean dispatchGenericFocusedEvent(MotionEvent event) {\n                if (mDetector.onMotionEvent(event)) {\n                    return true;\n                }\n                return super.dispatchGenericFocusedEvent(event);\n            }\n        };\n        mView.setAdapter(mAdapter);\n        setContentView(mView);\n\n        mDetector = new GestureDetector(this).setBaseListener(this);\n    }", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/Timer/src/com/google/android/glass/sample/timer/SelectValueActivity.java", "stars": "74", "class_props": {"extends": "Activity", "implements": ["GestureDetector"], "modifiers": ["public"]}}, {"id": 64826, "method_name": "onResume", "class_name": "SelectValueActivity", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onResume() {\n        super.onResume();\n        mView.activate();\n        mView.setSelection(getIntent().getIntExtra(EXTRA_INITIAL_VALUE, 0));\n    }", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/Timer/src/com/google/android/glass/sample/timer/SelectValueActivity.java", "stars": "74", "class_props": {"extends": "Activity", "implements": ["GestureDetector"], "modifiers": ["public"]}}, {"id": 64827, "method_name": "onPause", "class_name": "SelectValueActivity", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onPause() {\n        super.onPause();\n        mView.deactivate();\n    }", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/Timer/src/com/google/android/glass/sample/timer/SelectValueActivity.java", "stars": "74", "class_props": {"extends": "Activity", "implements": ["GestureDetector"], "modifiers": ["public"]}}, {"id": 64828, "method_name": "onGenericMotionEvent", "class_name": "SelectValueActivity", "params": ["MotionEvent"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean onGenericMotionEvent(MotionEvent event) {\n        return mDetector.onMotionEvent(event);\n    }", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/Timer/src/com/google/android/glass/sample/timer/SelectValueActivity.java", "stars": "74", "class_props": {"extends": "Activity", "implements": ["GestureDetector"], "modifiers": ["public"]}}, {"id": 64829, "method_name": "onGesture", "class_name": "SelectValueActivity", "params": ["Gesture"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean onGesture(Gesture gesture) {\n        if (gesture == Gesture.TAP) {\n            Intent resultIntent = new Intent();\n            resultIntent.putExtra(EXTRA_SELECTED_VALUE, mView.getSelectedItemPosition());\n            setResult(RESULT_OK, resultIntent);\n            mAudioManager.playSoundEffect(AudioManager.FX_KEY_CLICK);\n            finish();\n            return true;\n        }\n        return false;\n    }", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/Timer/src/com/google/android/glass/sample/timer/SelectValueActivity.java", "stars": "74", "class_props": {"extends": "Activity", "implements": ["GestureDetector"], "modifiers": ["public"]}}, {"id": 64830, "method_name": "initElements", "class_name": "OakParquetSlabBlock", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void initElements() {\n\t\telements.blocks.add(() -> new CustomBlock());\n\t\telements.items\n\t\t\t\t.add(() -> new BlockItem(block, new Item.Properties().group(ItemGroup.BUILDING_BLOCKS)).setRegistryName(block.getRegistryName()));\n\t}", "url": "https://raw.githubusercontent.com/KarogathModdingStudios/Enhanced-Vanilla-1.15/master/src/main/java/com/karogath/enhancedvanilla/block/OakParquetSlabBlock.java", "stars": "2", "class_props": {"extends": "EnhancedVanillaElements", "implements": null, "modifiers": ["public"]}}, {"id": 64831, "method_name": "getDrops", "class_name": "CustomBlock", "params": ["BlockState", "LootContext"], "throws": null, "modifiers": ["public"], "return_type": "List<ItemStack>", "snippet": "\t\tpublic List<ItemStack> getDrops(BlockState state, LootContext.Builder builder) {\n\t\t\tList<ItemStack> dropsOriginal = super.getDrops(state, builder);\n\t\t\tif (!dropsOriginal.isEmpty())\n\t\t\t\treturn dropsOriginal;\n\t\t\treturn Collections.singletonList(new ItemStack(this, state.get(TYPE) == SlabType.DOUBLE ? 2 : 1));\n\t\t}", "url": "https://raw.githubusercontent.com/KarogathModdingStudios/Enhanced-Vanilla-1.15/master/src/main/java/com/karogath/enhancedvanilla/block/OakParquetSlabBlock.java", "stars": "2", "class_props": {"extends": "SlabBlock", "implements": null, "modifiers": ["public", "static"]}}, {"id": 64832, "method_name": "postExecutorEvent", "class_name": "ExecutorEventsDao", "params": ["Executor", "EventType", "String", "String"], "throws": ["ExecutorManagerException"], "modifiers": ["public"], "return_type": "void", "snippet": "  public void postExecutorEvent(final Executor executor, final EventType type, final String user,\n      final String message) throws ExecutorManagerException {\n    final String INSERT_PROJECT_EVENTS =\n        \"INSERT INTO executor_events (executor_id, event_type, event_time, username, message) values (?,?,?,?,?)\";\n    try {\n      this.dbOperator.update(INSERT_PROJECT_EVENTS, executor.getId(), type.getNumVal(),\n          new Date(), user, message);\n    } catch (final SQLException e) {\n      throw new ExecutorManagerException(\"Failed to post executor event\", e);\n    }\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/ExecutorEventsDao.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 64833, "method_name": "getExecutorEvents", "class_name": "ExecutorEventsDao", "params": ["Executor", "int", "int"], "throws": ["ExecutorManagerException"], "modifiers": ["public"], "return_type": "List<ExecutorLogEvent>", "snippet": "  public List<ExecutorLogEvent> getExecutorEvents(final Executor executor, final int num,\n      final int offset)\n      throws ExecutorManagerException {\n    try {\n      return this.dbOperator.query(ExecutorLogsResultHandler.SELECT_EXECUTOR_EVENTS_ORDER,\n          new ExecutorLogsResultHandler(), executor.getId(), num, offset);\n    } catch (final SQLException e) {\n      throw new ExecutorManagerException(\n          \"Failed to fetch events for executor id : \" + executor.getId(), e);\n    }\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/ExecutorEventsDao.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 64834, "method_name": "handle", "class_name": "ExecutorLogsResultHandler", "params": ["ResultSet"], "throws": ["SQLException"], "modifiers": ["public"], "return_type": "List<ExecutorLogEvent>", "snippet": "    public List<ExecutorLogEvent> handle(final ResultSet rs) throws SQLException {\n      if (!rs.next()) {\n        return Collections.<ExecutorLogEvent>emptyList();\n      }\n\n      final ArrayList<ExecutorLogEvent> events = new ArrayList<>();\n      do {\n        final int executorId = rs.getInt(1);\n        final int eventType = rs.getInt(2);\n        final Date eventTime = rs.getDate(3);\n        final String username = rs.getString(4);\n        final String message = rs.getString(5);\n\n        final ExecutorLogEvent event =\n            new ExecutorLogEvent(executorId, username, eventTime,\n                EventType.fromInteger(eventType), message);\n        events.add(event);\n      } while (rs.next());\n\n      return events;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/ExecutorEventsDao.java", "stars": "18", "class_props": {"extends": null, "implements": ["ResultSetHandler"], "modifiers": ["static", "private"]}}, {"id": 64835, "method_name": "getOrBuild", "class_name": "DFAGraph", "params": ["Set<State>"], "throws": null, "modifiers": ["public"], "return_type": "DFAState", "snippet": "    public DFAState getOrBuild(Set<State> states) {\n        String allStateIds = \"\";\n        int[] ids = states.stream()\n                          .mapToInt(state -> state.getId())\n                          .sorted()\n                          .toArray();\n        for (int id : ids) {\n            allStateIds += \"#\";\n            allStateIds += id;\n        }\n        if (!map.containsKey(allStateIds)) {\n            DFAState dfaState = new DFAState(allStateIds, states);\n            map.put(allStateIds, dfaState);\n        }\n        return map.get(allStateIds);\n    }", "url": "https://raw.githubusercontent.com/xindoo/regex/master/src/main/java/xyz/xindoo/re/dfa/DFAGraph.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 64836, "method_name": "getId", "class_name": "ExecutorNode", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Integer", "snippet": "    public Integer getId() {\n        return id;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/common/src/main/java/com/webank/wedatasphere/exchangis/job/domain/ExecutorNode.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 64837, "method_name": "setId", "class_name": "ExecutorNode", "params": ["Integer"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setId(Integer id) {\n        this.id = id;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/common/src/main/java/com/webank/wedatasphere/exchangis/job/domain/ExecutorNode.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 64838, "method_name": "getAddress", "class_name": "ExecutorNode", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getAddress() {\n        return address;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/common/src/main/java/com/webank/wedatasphere/exchangis/job/domain/ExecutorNode.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 64839, "method_name": "setAddress", "class_name": "ExecutorNode", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setAddress(String address) {\n        this.address = address;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/common/src/main/java/com/webank/wedatasphere/exchangis/job/domain/ExecutorNode.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 64840, "method_name": "getHeartbeatTime", "class_name": "ExecutorNode", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Date", "snippet": "    public Date getHeartbeatTime() {\n        return heartbeatTime;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/common/src/main/java/com/webank/wedatasphere/exchangis/job/domain/ExecutorNode.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 64841, "method_name": "setHeartbeatTime", "class_name": "ExecutorNode", "params": ["Date"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setHeartbeatTime(Date heartbeatTime) {\n        this.heartbeatTime = heartbeatTime;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/common/src/main/java/com/webank/wedatasphere/exchangis/job/domain/ExecutorNode.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 64842, "method_name": "getStatus", "class_name": "ExecutorNode", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Integer", "snippet": "    public Integer getStatus() {\n        return status;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/common/src/main/java/com/webank/wedatasphere/exchangis/job/domain/ExecutorNode.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 64843, "method_name": "setStatus", "class_name": "ExecutorNode", "params": ["Integer"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setStatus(Integer status) {\n        this.status = status;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/common/src/main/java/com/webank/wedatasphere/exchangis/job/domain/ExecutorNode.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 64844, "method_name": "getMemRate", "class_name": "ExecutorNode", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Float", "snippet": "    public Float getMemRate() {\n        return memRate;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/common/src/main/java/com/webank/wedatasphere/exchangis/job/domain/ExecutorNode.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 64845, "method_name": "setMemRate", "class_name": "ExecutorNode", "params": ["Float"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setMemRate(Float memRate) {\n        this.memRate = memRate;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/common/src/main/java/com/webank/wedatasphere/exchangis/job/domain/ExecutorNode.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 64846, "method_name": "getCpuRate", "class_name": "ExecutorNode", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Float", "snippet": "    public Float getCpuRate() {\n        return cpuRate;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/common/src/main/java/com/webank/wedatasphere/exchangis/job/domain/ExecutorNode.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 64847, "method_name": "setCpuRate", "class_name": "ExecutorNode", "params": ["Float"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setCpuRate(Float cpuRate) {\n        this.cpuRate = cpuRate;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/common/src/main/java/com/webank/wedatasphere/exchangis/job/domain/ExecutorNode.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 64848, "method_name": "getTaskStates", "class_name": "ExecutorNode", "params": [], "throws": null, "modifiers": ["public"], "return_type": "List<TaskState>", "snippet": "    public List<TaskState> getTaskStates() {\n        return taskStates;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/common/src/main/java/com/webank/wedatasphere/exchangis/job/domain/ExecutorNode.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 64849, "method_name": "setTaskStates", "class_name": "ExecutorNode", "params": ["List<TaskState>"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setTaskStates(List<TaskState> taskStates) {\n        this.taskStates = taskStates;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/common/src/main/java/com/webank/wedatasphere/exchangis/job/domain/ExecutorNode.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 64850, "method_name": "getTabIds", "class_name": "ExecutorNode", "params": [], "throws": null, "modifiers": ["public"], "return_type": "List<Integer>", "snippet": "    public List<Integer> getTabIds() {\n        return tabIds;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/common/src/main/java/com/webank/wedatasphere/exchangis/job/domain/ExecutorNode.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 64851, "method_name": "setTabIds", "class_name": "ExecutorNode", "params": ["List<Integer>"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setTabIds(List<Integer> tabIds) {\n        this.tabIds = tabIds;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/common/src/main/java/com/webank/wedatasphere/exchangis/job/domain/ExecutorNode.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 64852, "method_name": "equals", "class_name": "ExecutorNode", "params": ["Object"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean equals(Object obj) {\n        if(obj instanceof ExecutorNode){\n            return address.equals(((ExecutorNode) obj).address);\n        }\n        return address.equals(obj);\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/common/src/main/java/com/webank/wedatasphere/exchangis/job/domain/ExecutorNode.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 64853, "method_name": "hashCode", "class_name": "ExecutorNode", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int hashCode() {\n        return address.hashCode();\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/common/src/main/java/com/webank/wedatasphere/exchangis/job/domain/ExecutorNode.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 64854, "method_name": "getTabNames", "class_name": "ExecutorNode", "params": [], "throws": null, "modifiers": ["public"], "return_type": "List<String>", "snippet": "    public List<String> getTabNames() {\n        return tabNames;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/common/src/main/java/com/webank/wedatasphere/exchangis/job/domain/ExecutorNode.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 64855, "method_name": "setTabNames", "class_name": "ExecutorNode", "params": ["List<String>"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setTabNames(List<String> tabNames) {\n        this.tabNames = tabNames;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/common/src/main/java/com/webank/wedatasphere/exchangis/job/domain/ExecutorNode.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 64856, "method_name": "isDefaultNode", "class_name": "ExecutorNode", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean isDefaultNode() {\n        return defaultNode;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/common/src/main/java/com/webank/wedatasphere/exchangis/job/domain/ExecutorNode.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 64857, "method_name": "setDefaultNode", "class_name": "ExecutorNode", "params": ["boolean"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setDefaultNode(boolean defaultNode) {\n        this.defaultNode = defaultNode;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/common/src/main/java/com/webank/wedatasphere/exchangis/job/domain/ExecutorNode.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 64858, "method_name": "main", "class_name": "CloneableStudy", "params": ["String"], "throws": ["Exception"], "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void main(String[] args)throws Exception {\n        MyMember memberA = new MyMember(\"hzc\",15);\n        MyMember memberB = (MyMember) memberA.clone();\n\n        System.out.println(memberA.name);\n        System.out.println(memberB.name);\n\n        memberA.name = \"ddd\";\n        System.out.println(memberA.name);\n        System.out.println(memberB.name);\n    }", "url": "https://raw.githubusercontent.com/hzc869046779/JAVA-STUDY/master/src/javaSenior/JavaBaseClass/CloneableStudy.java", "stars": "10", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 64859, "method_name": "toString", "class_name": "MyMember", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String toString() {\n        return \"name\"+this.name+\"age\"+this.age;\n    }", "url": "https://raw.githubusercontent.com/hzc869046779/JAVA-STUDY/master/src/javaSenior/JavaBaseClass/CloneableStudy.java", "stars": "10", "class_props": {"extends": null, "implements": ["Cloneable"], "modifiers": []}}, {"id": 64860, "method_name": "clone", "class_name": "MyMember", "params": [], "throws": ["CloneNotSupportedException"], "modifiers": ["protected"], "return_type": "Object", "snippet": "    protected Object clone() throws CloneNotSupportedException {\n        return super.clone();\n    }", "url": "https://raw.githubusercontent.com/hzc869046779/JAVA-STUDY/master/src/javaSenior/JavaBaseClass/CloneableStudy.java", "stars": "10", "class_props": {"extends": null, "implements": ["Cloneable"], "modifiers": []}}, {"id": 64861, "method_name": "setUp", "class_name": "PostgresGeneratedKeysTest", "params": [], "throws": ["Exception"], "modifiers": ["static"], "return_type": "void", "snippet": "  static void setUp() throws Exception {\n    Configuration configuration = new Configuration();\n    Environment environment = new Environment(\"development\", new JdbcTransactionFactory(),\n        PgContainer.getUnpooledDataSource());\n    configuration.setEnvironment(environment);\n    configuration.setUseGeneratedKeys(true);\n    configuration.addMapper(Mapper.class);\n    sqlSessionFactory = new SqlSessionFactoryBuilder().build(configuration);\n\n    BaseDataTest.runScript(sqlSessionFactory.getConfiguration().getEnvironment().getDataSource(),\n        \"org/apache/ibatis/submitted/postgres_genkeys/CreateDB.sql\");\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/postgres_genkeys/PostgresGeneratedKeysTest.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 64862, "method_name": "testInsertIntoTableWithNoSerialColumn", "class_name": "PostgresGeneratedKeysTest", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "  void testInsertIntoTableWithNoSerialColumn() {\n    try (SqlSession sqlSession = sqlSessionFactory.openSession()) {\n      Mapper mapper = sqlSession.getMapper(Mapper.class);\n      Section section = new Section();\n      section.setSectionId(2);\n      section.setName(\"Section 2\");\n      int result = mapper.insertSection(section);\n      assertEquals(1, result);\n    }\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/postgres_genkeys/PostgresGeneratedKeysTest.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 64863, "method_name": "testUpdateTableWithSerial", "class_name": "PostgresGeneratedKeysTest", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "  void testUpdateTableWithSerial() {\n    try (SqlSession sqlSession = sqlSessionFactory.openSession()) {\n      Mapper mapper = sqlSession.getMapper(Mapper.class);\n      User user = new User();\n      user.setUserId(1);\n      user.setName(\"Ethan\");\n      int result = mapper.updateUser(user);\n      assertEquals(1, result);\n    }\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/postgres_genkeys/PostgresGeneratedKeysTest.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 64864, "method_name": "testUnusedGeneratedKey", "class_name": "PostgresGeneratedKeysTest", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "  void testUnusedGeneratedKey() {\n    try (SqlSession sqlSession = sqlSessionFactory.openSession()) {\n      Mapper mapper = sqlSession.getMapper(Mapper.class);\n      int result = mapper.insertUser(\"John\");\n      assertEquals(1, result);\n    }\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/postgres_genkeys/PostgresGeneratedKeysTest.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 64865, "method_name": "main", "class_name": "Demo03EntrySet", "params": ["String"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void main(String[] args) {\n        //\u521b\u5efaMap\u96c6\u5408\u5bf9\u8c61\n        Map<String,Integer> map = new HashMap<>();\n        map.put(\"\u8d75\u4e3d\u9896\",168);\n        map.put(\"\u6768\u9896\",165);\n        map.put(\"\u6797\u5fd7\u73b2\",178);\n\n        //1.\u4f7f\u7528Map\u96c6\u5408\u4e2d\u7684\u65b9\u6cd5entrySet(),\u628aMap\u96c6\u5408\u4e2d\u591a\u4e2aEntry\u5bf9\u8c61\u53d6\u51fa\u6765,\u5b58\u50a8\u5230\u4e00\u4e2aSet\u96c6\u5408\u4e2d\n        Set<Map.Entry<String, Integer>> set = map.entrySet();\n\n        //2.\u904d\u5386Set\u96c6\u5408,\u83b7\u53d6\u6bcf\u4e00\u4e2aEntry\u5bf9\u8c61\n        //\u4f7f\u7528\u8fed\u4ee3\u5668\u904d\u5386Set\u96c6\u5408\n        Iterator<Map.Entry<String, Integer>> it = set.iterator();\n        while(it.hasNext()){\n            Map.Entry<String, Integer> entry = it.next();\n            //3.\u4f7f\u7528Entry\u5bf9\u8c61\u4e2d\u7684\u65b9\u6cd5getKey()\u548cgetValue()\u83b7\u53d6\u952e\u4e0e\u503c\n            String key = entry.getKey();\n            Integer value = entry.getValue();\n            System.out.println(key+\"=\"+value);\n        }\n        System.out.println(\"-----------------------\");\n        for(Map.Entry<String,Integer> entry:set){\n            //3.\u4f7f\u7528Entry\u5bf9\u8c61\u4e2d\u7684\u65b9\u6cd5getKey()\u548cgetValue()\u83b7\u53d6\u952e\u4e0e\u503c\n            String key = entry.getKey();\n            Integer value = entry.getValue();\n            System.out.println(key+\"=\"+value);\n        }\n    }", "url": "https://raw.githubusercontent.com/liuminchao123/JavaWeb_Learning/master/02.%20java/Java/%E9%BB%91%E9%A9%AC%E6%95%99%E7%A8%8B/15.%E3%80%90Map%E3%80%91-%E7%AC%94%E8%AE%B0/code/04_Map/src/com/itheima/demo01/Map/Demo03EntrySet.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 64866, "method_name": "onDraw", "class_name": "GridSpaceDecoration", "params": ["Canvas", "RecyclerView", "RecyclerView"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onDraw(@NonNull Canvas canvas, @NonNull RecyclerView recyclerView, @NonNull RecyclerView.State state) {}", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/other/GridSpaceDecoration.java", "stars": "1", "class_props": {"extends": "RecyclerView", "implements": null, "modifiers": ["final", "public"]}}, {"id": 64867, "method_name": "getItemOffsets", "class_name": "GridSpaceDecoration", "params": ["Rect", "View", "RecyclerView", "RecyclerView"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void getItemOffsets(@NonNull Rect rect, @NonNull View view, RecyclerView recyclerView, @NonNull RecyclerView.State state) {\n        int position = recyclerView.getChildAdapterPosition(view);\n        int spanCount = ((GridLayoutManager) recyclerView.getLayoutManager()).getSpanCount();\n\n        // \u6bcf\u4e00\u884c\u7684\u6700\u540e\u4e00\u4e2a\u624d\u7559\u51fa\u53f3\u8fb9\u95f4\u9699\n        if ((position + 1) % spanCount == 0) {\n            rect.right = mSpace;\n        }\n\n        // \u53ea\u6709\u7b2c\u4e00\u884c\u624d\u7559\u51fa\u9876\u90e8\u95f4\u9699\n        if (position < spanCount) {\n            rect.top = mSpace;\n        }\n\n        rect.bottom = mSpace;\n        rect.left = mSpace;\n    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/other/GridSpaceDecoration.java", "stars": "1", "class_props": {"extends": "RecyclerView", "implements": null, "modifiers": ["final", "public"]}}, {"id": 64868, "method_name": "onDrawOver", "class_name": "GridSpaceDecoration", "params": ["Canvas", "RecyclerView", "RecyclerView"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onDrawOver(@NonNull Canvas canvas, @NonNull RecyclerView recyclerView, @NonNull RecyclerView.State state) {}", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/other/GridSpaceDecoration.java", "stars": "1", "class_props": {"extends": "RecyclerView", "implements": null, "modifiers": ["final", "public"]}}, {"id": 64869, "method_name": "setTypeface", "class_name": "AutoResizeRobotoTextView", "params": ["Typeface"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setTypeface(final Typeface tf) {\n        if (mPaint == null)\n            mPaint = new TextPaint(getPaint());\n        mPaint.setTypeface(tf);\n        super.setTypeface(tf);\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/mobile/src/main/java/butter/droid/widget/AutoResizeRobotoTextView.java", "stars": "4", "class_props": {"extends": "AppCompatTextView", "implements": null, "modifiers": ["public"]}}, {"id": 64870, "method_name": "setTextSize", "class_name": "AutoResizeRobotoTextView", "params": ["float"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setTextSize(final float size) {\n        mMaxTextSize = size;\n        mTextCachedSizes.clear();\n        adjustTextSize();\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/mobile/src/main/java/butter/droid/widget/AutoResizeRobotoTextView.java", "stars": "4", "class_props": {"extends": "AppCompatTextView", "implements": null, "modifiers": ["public"]}}, {"id": 64871, "method_name": "setMaxLines", "class_name": "AutoResizeRobotoTextView", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setMaxLines(final int maxlines) {\n        super.setMaxLines(maxlines);\n        mMaxLines = maxlines;\n        reAdjust();\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/mobile/src/main/java/butter/droid/widget/AutoResizeRobotoTextView.java", "stars": "4", "class_props": {"extends": "AppCompatTextView", "implements": null, "modifiers": ["public"]}}, {"id": 64872, "method_name": "getMaxLines", "class_name": "AutoResizeRobotoTextView", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getMaxLines() {\n        return mMaxLines;\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/mobile/src/main/java/butter/droid/widget/AutoResizeRobotoTextView.java", "stars": "4", "class_props": {"extends": "AppCompatTextView", "implements": null, "modifiers": ["public"]}}, {"id": 64873, "method_name": "setSingleLine", "class_name": "AutoResizeRobotoTextView", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setSingleLine() {\n        super.setSingleLine();\n        mMaxLines = 1;\n        reAdjust();\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/mobile/src/main/java/butter/droid/widget/AutoResizeRobotoTextView.java", "stars": "4", "class_props": {"extends": "AppCompatTextView", "implements": null, "modifiers": ["public"]}}, {"id": 64874, "method_name": "setSingleLine", "class_name": "AutoResizeRobotoTextView", "params": ["boolean"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setSingleLine(final boolean singleLine) {\n        super.setSingleLine(singleLine);\n        if (singleLine)\n            mMaxLines = 1;\n        else mMaxLines = NO_LINE_LIMIT;\n        reAdjust();\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/mobile/src/main/java/butter/droid/widget/AutoResizeRobotoTextView.java", "stars": "4", "class_props": {"extends": "AppCompatTextView", "implements": null, "modifiers": ["public"]}}, {"id": 64875, "method_name": "setLines", "class_name": "AutoResizeRobotoTextView", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setLines(final int lines) {\n        super.setLines(lines);\n        mMaxLines = lines;\n        reAdjust();\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/mobile/src/main/java/butter/droid/widget/AutoResizeRobotoTextView.java", "stars": "4", "class_props": {"extends": "AppCompatTextView", "implements": null, "modifiers": ["public"]}}, {"id": 64876, "method_name": "setTextSize", "class_name": "AutoResizeRobotoTextView", "params": ["int", "float"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setTextSize(final int unit, final float size) {\n        final Context c = getContext();\n        Resources r;\n        if (c == null)\n            r = Resources.getSystem();\n        else r = c.getResources();\n        mMaxTextSize = TypedValue.applyDimension(unit, size, r.getDisplayMetrics());\n        mTextCachedSizes.clear();\n        adjustTextSize();\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/mobile/src/main/java/butter/droid/widget/AutoResizeRobotoTextView.java", "stars": "4", "class_props": {"extends": "AppCompatTextView", "implements": null, "modifiers": ["public"]}}, {"id": 64877, "method_name": "setLineSpacing", "class_name": "AutoResizeRobotoTextView", "params": ["float", "float"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setLineSpacing(final float add, final float mult) {\n        super.setLineSpacing(add, mult);\n        mSpacingMulti = mult;\n        mSpacingAdd = add;\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/mobile/src/main/java/butter/droid/widget/AutoResizeRobotoTextView.java", "stars": "4", "class_props": {"extends": "AppCompatTextView", "implements": null, "modifiers": ["public"]}}, {"id": 64878, "method_name": "setMinTextSize", "class_name": "AutoResizeRobotoTextView", "params": ["float"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setMinTextSize(final float minTextSize) {\n        mMinTextSize = minTextSize;\n        reAdjust();\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/mobile/src/main/java/butter/droid/widget/AutoResizeRobotoTextView.java", "stars": "4", "class_props": {"extends": "AppCompatTextView", "implements": null, "modifiers": ["public"]}}, {"id": 64879, "method_name": "reAdjust", "class_name": "AutoResizeRobotoTextView", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void reAdjust() {\n        adjustTextSize();\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/mobile/src/main/java/butter/droid/widget/AutoResizeRobotoTextView.java", "stars": "4", "class_props": {"extends": "AppCompatTextView", "implements": null, "modifiers": ["public"]}}, {"id": 64880, "method_name": "adjustTextSize", "class_name": "AutoResizeRobotoTextView", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void adjustTextSize() {\n        if (!mInitialised)\n            return;\n        final int startSize = (int) mMinTextSize;\n        final int heightLimit = getMeasuredHeight() - getCompoundPaddingBottom() - getCompoundPaddingTop();\n        mWidthLimit = getMeasuredWidth() - getCompoundPaddingLeft() - getCompoundPaddingRight();\n        if (mWidthLimit <= 0)\n            return;\n        mAvailableSpaceRect.right = mWidthLimit;\n        mAvailableSpaceRect.bottom = heightLimit;\n        super.setTextSize(TypedValue.COMPLEX_UNIT_PX, efficientTextSizeSearch(startSize, (int) mMaxTextSize, mSizeTester, mAvailableSpaceRect));\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/mobile/src/main/java/butter/droid/widget/AutoResizeRobotoTextView.java", "stars": "4", "class_props": {"extends": "AppCompatTextView", "implements": null, "modifiers": ["public"]}}, {"id": 64881, "method_name": "setEnableSizeCache", "class_name": "AutoResizeRobotoTextView", "params": ["boolean"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setEnableSizeCache(final boolean enable) {\n        mEnableSizeCache = enable;\n        mTextCachedSizes.clear();\n        adjustTextSize();\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/mobile/src/main/java/butter/droid/widget/AutoResizeRobotoTextView.java", "stars": "4", "class_props": {"extends": "AppCompatTextView", "implements": null, "modifiers": ["public"]}}, {"id": 64882, "method_name": "efficientTextSizeSearch", "class_name": "AutoResizeRobotoTextView", "params": ["int", "int", "SizeTester", "RectF"], "throws": null, "modifiers": ["private"], "return_type": "int", "snippet": "    private int efficientTextSizeSearch(final int start, final int end, final SizeTester sizeTester, final RectF availableSpace) {\n        if (!mEnableSizeCache)\n            return binarySearch(start, end, sizeTester, availableSpace);\n        final String text = getText().toString();\n        final int key = text.equalsIgnoreCase(\"\") ? 0 : text.length();\n        int size = mTextCachedSizes.get(key);\n        if (size != 0)\n            return size;\n        size = binarySearch(start, end, sizeTester, availableSpace);\n        mTextCachedSizes.put(key, size);\n        return size;\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/mobile/src/main/java/butter/droid/widget/AutoResizeRobotoTextView.java", "stars": "4", "class_props": {"extends": "AppCompatTextView", "implements": null, "modifiers": ["public"]}}, {"id": 64883, "method_name": "binarySearch", "class_name": "AutoResizeRobotoTextView", "params": ["int", "int", "SizeTester", "RectF"], "throws": null, "modifiers": ["private"], "return_type": "int", "snippet": "    private int binarySearch(final int start, final int end, final SizeTester sizeTester, final RectF availableSpace) {\n        int lastBest = start;\n        int lo = start;\n        int hi = end - 1;\n        int mid = 0;\n        while (lo <= hi) {\n            mid = lo + hi >>> 1;\n            final int midValCmp = sizeTester.onTestSize(mid, availableSpace);\n            if (midValCmp < 0) {\n                lastBest = lo;\n                lo = mid + 1;\n            } else if (midValCmp > 0) {\n                hi = mid - 1;\n                lastBest = hi;\n            } else return mid;\n        }\n        // make sure to return last best\n        // this is what should always be returned\n        return lastBest;\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/mobile/src/main/java/butter/droid/widget/AutoResizeRobotoTextView.java", "stars": "4", "class_props": {"extends": "AppCompatTextView", "implements": null, "modifiers": ["public"]}}, {"id": 64884, "method_name": "onTextChanged", "class_name": "AutoResizeRobotoTextView", "params": ["CharSequence", "int", "int", "int"], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void onTextChanged(final CharSequence text, final int start, final int before, final int after) {\n        super.onTextChanged(text, start, before, after);\n        reAdjust();\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/mobile/src/main/java/butter/droid/widget/AutoResizeRobotoTextView.java", "stars": "4", "class_props": {"extends": "AppCompatTextView", "implements": null, "modifiers": ["public"]}}, {"id": 64885, "method_name": "onSizeChanged", "class_name": "AutoResizeRobotoTextView", "params": ["int", "int", "int", "int"], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void onSizeChanged(final int width, final int height, final int oldwidth, final int oldheight) {\n        mTextCachedSizes.clear();\n        super.onSizeChanged(width, height, oldwidth, oldheight);\n        if (width != oldwidth || height != oldheight)\n            reAdjust();\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/mobile/src/main/java/butter/droid/widget/AutoResizeRobotoTextView.java", "stars": "4", "class_props": {"extends": "AppCompatTextView", "implements": null, "modifiers": ["public"]}}, {"id": 64886, "method_name": "onClickLitener", "class_name": "NoDoubleClickAspect", "params": ["ProceedingJoinPoint"], "throws": ["Throwable"], "modifiers": ["public"], "return_type": "void", "snippet": "    public void onClickLitener(ProceedingJoinPoint proceedingJoinPoint) throws Throwable {\n        Log.e(\"NoDoubleClickAspect\", \"OnClick\");\n        if (!NoDoubleClickUtils.isDoubleClick()) {\n            proceedingJoinPoint.proceed();\n        }\n    }", "url": "https://raw.githubusercontent.com/he303954106/AOP_Demo/master/app/src/main/java/com/netease/aop/login/aspect/NoDoubleClickAspect.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 64887, "method_name": "showLog", "class_name": "Demo01Logger", "params": ["int", "String"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void showLog(int level, String message){\n        //\u5bf9\u65e5\u5fd7\u7684\u7b49\u7ea7\u8fdb\u884c\u5224\u65ad,\u5982\u679c\u662f1\u7ea7\u522b,\u90a3\u4e48\u8f93\u51fa\u65e5\u5fd7\u4fe1\u606f\n        if(level==1){\n            System.out.println(message);\n        }\n    }", "url": "https://raw.githubusercontent.com/liuminchao123/JavaWeb_Learning/master/02.%20java/Java/%E9%BB%91%E9%A9%AC%E6%95%99%E7%A8%8B/23.%E3%80%90%E5%87%BD%E6%95%B0%E5%BC%8F%E6%8E%A5%E5%8F%A3%E3%80%91-%E7%AC%94%E8%AE%B0/code/12_FunctionalInterface/src/com/itheima/demo02/Lambda/Demo01Logger.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 64888, "method_name": "main", "class_name": "Demo01Logger", "params": ["String"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void main(String[] args) {\n        //\u5b9a\u4e49\u4e09\u4e2a\u65e5\u5fd7\u4fe1\u606f\n        String msg1 = \"Hello\";\n        String msg2 = \"World\";\n        String msg3 = \"Java\";\n\n        //\u8c03\u7528showLog\u65b9\u6cd5,\u4f20\u9012\u65e5\u5fd7\u7ea7\u522b\u548c\u65e5\u5fd7\u4fe1\u606f\n        showLog(2,msg1+msg2+msg3);\n\n    }", "url": "https://raw.githubusercontent.com/liuminchao123/JavaWeb_Learning/master/02.%20java/Java/%E9%BB%91%E9%A9%AC%E6%95%99%E7%A8%8B/23.%E3%80%90%E5%87%BD%E6%95%B0%E5%BC%8F%E6%8E%A5%E5%8F%A3%E3%80%91-%E7%AC%94%E8%AE%B0/code/12_FunctionalInterface/src/com/itheima/demo02/Lambda/Demo01Logger.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 64889, "method_name": "getAll", "class_name": "AuditController", "params": ["Pageable"], "throws": null, "modifiers": ["public"], "return_type": "ResponseEntity<List>", "snippet": "    public ResponseEntity<List<AuditEvent>> getAll(Pageable pageable) {\n        Page<AuditEvent> page = auditEventService.findAll(pageable);\n        HttpHeaders headers = PaginationUtil.generatePaginationHttpHeaders(ServletUriComponentsBuilder.fromCurrentRequest(), page);\n        return new ResponseEntity<>(page.getContent(), headers, HttpStatus.OK);\n    }", "url": "https://raw.githubusercontent.com/gardle/gardle-web/master/src/main/java/com/gardle/web/rest/AuditController.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 64890, "method_name": "getByDates", "class_name": "AuditController", "params": ["LocalDate", "LocalDate", "Pageable"], "throws": null, "modifiers": ["public"], "return_type": "ResponseEntity<List>", "snippet": "    public ResponseEntity<List<AuditEvent>> getByDates(\n        @RequestParam(value = \"fromDate\") LocalDate fromDate,\n        @RequestParam(value = \"toDate\") LocalDate toDate,\n        Pageable pageable) {\n\n        Instant from = fromDate.atStartOfDay(ZoneId.systemDefault()).toInstant();\n        Instant to = toDate.atStartOfDay(ZoneId.systemDefault()).plusDays(1).toInstant();\n\n        Page<AuditEvent> page = auditEventService.findByDates(from, to, pageable);\n        HttpHeaders headers = PaginationUtil.generatePaginationHttpHeaders(ServletUriComponentsBuilder.fromCurrentRequest(), page);\n        return new ResponseEntity<>(page.getContent(), headers, HttpStatus.OK);\n    }", "url": "https://raw.githubusercontent.com/gardle/gardle-web/master/src/main/java/com/gardle/web/rest/AuditController.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 64891, "method_name": "get", "class_name": "AuditController", "params": ["Long"], "throws": null, "modifiers": ["public"], "return_type": "ResponseEntity<AuditEvent>", "snippet": "    public ResponseEntity<AuditEvent> get(@PathVariable Long id) {\n        return ResponseUtil.wrapOrNotFound(auditEventService.find(id));\n    }", "url": "https://raw.githubusercontent.com/gardle/gardle-web/master/src/main/java/com/gardle/web/rest/AuditController.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 64892, "method_name": "getId", "class_name": "Enterprise", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getId() {\n        return id;\n    }", "url": "https://raw.githubusercontent.com/1127140426/tensquare/master/tensquare_recruiter/src/main/java/com/tensquare/recruiter/pojo/Enterprise.java", "stars": "34", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 64893, "method_name": "setId", "class_name": "Enterprise", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setId(String id) {\n        this.id = id;\n    }", "url": "https://raw.githubusercontent.com/1127140426/tensquare/master/tensquare_recruiter/src/main/java/com/tensquare/recruiter/pojo/Enterprise.java", "stars": "34", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 64894, "method_name": "getName", "class_name": "Enterprise", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getName() {\n        return name;\n    }", "url": "https://raw.githubusercontent.com/1127140426/tensquare/master/tensquare_recruiter/src/main/java/com/tensquare/recruiter/pojo/Enterprise.java", "stars": "34", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 64895, "method_name": "setName", "class_name": "Enterprise", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setName(String name) {\n        this.name = name;\n    }", "url": "https://raw.githubusercontent.com/1127140426/tensquare/master/tensquare_recruiter/src/main/java/com/tensquare/recruiter/pojo/Enterprise.java", "stars": "34", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 64896, "method_name": "getSummary", "class_name": "Enterprise", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getSummary() {\n        return summary;\n    }", "url": "https://raw.githubusercontent.com/1127140426/tensquare/master/tensquare_recruiter/src/main/java/com/tensquare/recruiter/pojo/Enterprise.java", "stars": "34", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 64897, "method_name": "setSummary", "class_name": "Enterprise", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setSummary(String summary) {\n        this.summary = summary;\n    }", "url": "https://raw.githubusercontent.com/1127140426/tensquare/master/tensquare_recruiter/src/main/java/com/tensquare/recruiter/pojo/Enterprise.java", "stars": "34", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 64898, "method_name": "getAddress", "class_name": "Enterprise", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getAddress() {\n        return address;\n    }", "url": "https://raw.githubusercontent.com/1127140426/tensquare/master/tensquare_recruiter/src/main/java/com/tensquare/recruiter/pojo/Enterprise.java", "stars": "34", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 64899, "method_name": "setAddress", "class_name": "Enterprise", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setAddress(String address) {\n        this.address = address;\n    }", "url": "https://raw.githubusercontent.com/1127140426/tensquare/master/tensquare_recruiter/src/main/java/com/tensquare/recruiter/pojo/Enterprise.java", "stars": "34", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 64900, "method_name": "getLabels", "class_name": "Enterprise", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getLabels() {\n        return labels;\n    }", "url": "https://raw.githubusercontent.com/1127140426/tensquare/master/tensquare_recruiter/src/main/java/com/tensquare/recruiter/pojo/Enterprise.java", "stars": "34", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 64901, "method_name": "setLabels", "class_name": "Enterprise", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setLabels(String labels) {\n        this.labels = labels;\n    }", "url": "https://raw.githubusercontent.com/1127140426/tensquare/master/tensquare_recruiter/src/main/java/com/tensquare/recruiter/pojo/Enterprise.java", "stars": "34", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 64902, "method_name": "getCoordinate", "class_name": "Enterprise", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getCoordinate() {\n        return coordinate;\n    }", "url": "https://raw.githubusercontent.com/1127140426/tensquare/master/tensquare_recruiter/src/main/java/com/tensquare/recruiter/pojo/Enterprise.java", "stars": "34", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 64903, "method_name": "setCoordinate", "class_name": "Enterprise", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setCoordinate(String coordinate) {\n        this.coordinate = coordinate;\n    }", "url": "https://raw.githubusercontent.com/1127140426/tensquare/master/tensquare_recruiter/src/main/java/com/tensquare/recruiter/pojo/Enterprise.java", "stars": "34", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 64904, "method_name": "getIshot", "class_name": "Enterprise", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getIshot() {\n        return ishot;\n    }", "url": "https://raw.githubusercontent.com/1127140426/tensquare/master/tensquare_recruiter/src/main/java/com/tensquare/recruiter/pojo/Enterprise.java", "stars": "34", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 64905, "method_name": "setIshot", "class_name": "Enterprise", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setIshot(String ishot) {\n        this.ishot = ishot;\n    }", "url": "https://raw.githubusercontent.com/1127140426/tensquare/master/tensquare_recruiter/src/main/java/com/tensquare/recruiter/pojo/Enterprise.java", "stars": "34", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 64906, "method_name": "getLogo", "class_name": "Enterprise", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getLogo() {\n        return logo;\n    }", "url": "https://raw.githubusercontent.com/1127140426/tensquare/master/tensquare_recruiter/src/main/java/com/tensquare/recruiter/pojo/Enterprise.java", "stars": "34", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 64907, "method_name": "setLogo", "class_name": "Enterprise", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setLogo(String logo) {\n        this.logo = logo;\n    }", "url": "https://raw.githubusercontent.com/1127140426/tensquare/master/tensquare_recruiter/src/main/java/com/tensquare/recruiter/pojo/Enterprise.java", "stars": "34", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 64908, "method_name": "getJobcount", "class_name": "Enterprise", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Integer", "snippet": "    public Integer getJobcount() {\n        return jobcount;\n    }", "url": "https://raw.githubusercontent.com/1127140426/tensquare/master/tensquare_recruiter/src/main/java/com/tensquare/recruiter/pojo/Enterprise.java", "stars": "34", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 64909, "method_name": "setJobcount", "class_name": "Enterprise", "params": ["Integer"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setJobcount(Integer jobcount) {\n        this.jobcount = jobcount;\n    }", "url": "https://raw.githubusercontent.com/1127140426/tensquare/master/tensquare_recruiter/src/main/java/com/tensquare/recruiter/pojo/Enterprise.java", "stars": "34", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 64910, "method_name": "getUrl", "class_name": "Enterprise", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getUrl() {\n        return url;\n    }", "url": "https://raw.githubusercontent.com/1127140426/tensquare/master/tensquare_recruiter/src/main/java/com/tensquare/recruiter/pojo/Enterprise.java", "stars": "34", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 64911, "method_name": "setUrl", "class_name": "Enterprise", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setUrl(String url) {\n        this.url = url;\n    }", "url": "https://raw.githubusercontent.com/1127140426/tensquare/master/tensquare_recruiter/src/main/java/com/tensquare/recruiter/pojo/Enterprise.java", "stars": "34", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 64912, "method_name": "localeResolver", "class_name": "LocaleConfiguration", "params": [], "throws": null, "modifiers": ["public"], "return_type": "LocaleResolver", "snippet": "    public LocaleResolver localeResolver() {\n        AngularCookieLocaleResolver cookieLocaleResolver = new AngularCookieLocaleResolver();\n        cookieLocaleResolver.setCookieName(\"NG_TRANSLATE_LANG_KEY\");\n        return cookieLocaleResolver;\n    }", "url": "https://raw.githubusercontent.com/gardle/gardle-web/master/src/main/java/com/gardle/config/LocaleConfiguration.java", "stars": "2", "class_props": {"extends": null, "implements": ["WebMvcConfigurer"], "modifiers": ["public"]}}, {"id": 64913, "method_name": "addInterceptors", "class_name": "LocaleConfiguration", "params": ["InterceptorRegistry"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void addInterceptors(InterceptorRegistry registry) {\n        LocaleChangeInterceptor localeChangeInterceptor = new LocaleChangeInterceptor();\n        localeChangeInterceptor.setParamName(\"language\");\n        registry.addInterceptor(localeChangeInterceptor);\n    }", "url": "https://raw.githubusercontent.com/gardle/gardle-web/master/src/main/java/com/gardle/config/LocaleConfiguration.java", "stars": "2", "class_props": {"extends": null, "implements": ["WebMvcConfigurer"], "modifiers": ["public"]}}, {"id": 64914, "method_name": "getString", "class_name": "TypedMapWrapper", "params": ["K"], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "  public String getString(final K key) {\n    return getString(key, null);\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/utils/TypedMapWrapper.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 64915, "method_name": "getString", "class_name": "TypedMapWrapper", "params": ["K", "String"], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "  public String getString(final K key, final String defaultVal) {\n    final Object obj = this.map.get(key);\n    if (obj == null) {\n      return defaultVal;\n    }\n    if (obj instanceof String) {\n      return (String) obj;\n    }\n\n    return obj.toString();\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/utils/TypedMapWrapper.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 64916, "method_name": "getBool", "class_name": "TypedMapWrapper", "params": ["K", "Boolean"], "throws": null, "modifiers": ["public"], "return_type": "Boolean", "snippet": "  public Boolean getBool(final K key, final Boolean defaultVal) {\n    final Object obj = this.map.get(key);\n    if (obj == null) {\n      return defaultVal;\n    }\n\n    return (Boolean) obj;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/utils/TypedMapWrapper.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 64917, "method_name": "getInt", "class_name": "TypedMapWrapper", "params": ["K"], "throws": null, "modifiers": ["public"], "return_type": "Integer", "snippet": "  public Integer getInt(final K key) {\n    return getInt(key, -1);\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/utils/TypedMapWrapper.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 64918, "method_name": "getInt", "class_name": "TypedMapWrapper", "params": ["K", "Integer"], "throws": null, "modifiers": ["public"], "return_type": "Integer", "snippet": "  public Integer getInt(final K key, final Integer defaultVal) {\n    final Object obj = this.map.get(key);\n    if (obj == null) {\n      return defaultVal;\n    }\n    if (obj instanceof Integer) {\n      return (Integer) obj;\n    } else if (obj instanceof String) {\n      return Integer.valueOf((String) obj);\n    } else {\n      return defaultVal;\n    }\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/utils/TypedMapWrapper.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 64919, "method_name": "getLong", "class_name": "TypedMapWrapper", "params": ["K"], "throws": null, "modifiers": ["public"], "return_type": "Long", "snippet": "  public Long getLong(final K key) {\n    return getLong(key, -1L);\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/utils/TypedMapWrapper.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 64920, "method_name": "getLong", "class_name": "TypedMapWrapper", "params": ["K", "Long"], "throws": null, "modifiers": ["public"], "return_type": "Long", "snippet": "  public Long getLong(final K key, final Long defaultVal) {\n    final Object obj = this.map.get(key);\n    if (obj == null) {\n      return defaultVal;\n    }\n    if (obj instanceof Long) {\n      return (Long) obj;\n    } else if (obj instanceof Integer) {\n      return Long.valueOf((Integer) obj);\n    } else if (obj instanceof String) {\n      return Long.valueOf((String) obj);\n    } else {\n      return defaultVal;\n    }\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/utils/TypedMapWrapper.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 64921, "method_name": "getDouble", "class_name": "TypedMapWrapper", "params": ["K"], "throws": null, "modifiers": ["public"], "return_type": "Double", "snippet": "  public Double getDouble(final K key) {\n    return getDouble(key, -1.0d);\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/utils/TypedMapWrapper.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 64922, "method_name": "getDouble", "class_name": "TypedMapWrapper", "params": ["K", "Double"], "throws": null, "modifiers": ["public"], "return_type": "Double", "snippet": "  public Double getDouble(final K key, final Double defaultVal) {\n    final Object obj = this.map.get(key);\n    if (obj == null) {\n      return defaultVal;\n    }\n    if (obj instanceof Double) {\n      return (Double) obj;\n    } else if (obj instanceof String) {\n      return Double.valueOf((String) obj);\n    } else {\n      return defaultVal;\n    }\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/utils/TypedMapWrapper.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 64923, "method_name": "getStringCollection", "class_name": "TypedMapWrapper", "params": ["K"], "throws": null, "modifiers": ["public"], "return_type": "Collection<String>", "snippet": "  public Collection<String> getStringCollection(final K key) {\n    final Object obj = this.map.get(key);\n    return (Collection<String>) obj;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/utils/TypedMapWrapper.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 64924, "method_name": "getStringCollection", "class_name": "TypedMapWrapper", "params": ["K", "Collection<String>"], "throws": null, "modifiers": ["public"], "return_type": "Collection<String>", "snippet": "  public Collection<String> getStringCollection(final K key,\n      final Collection<String> defaultVal) {\n    final Object obj = this.map.get(key);\n    if (obj == null) {\n      return defaultVal;\n    }\n\n    return (Collection<String>) obj;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/utils/TypedMapWrapper.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 64925, "method_name": "getCollection", "class_name": "TypedMapWrapper", "params": ["K"], "throws": null, "modifiers": ["public"], "return_type": "Collection<C>", "snippet": "  public <C> Collection<C> getCollection(final K key) {\n    final Object obj = this.map.get(key);\n    if (obj instanceof Collection) {\n      return (Collection<C>) obj;\n    }\n    return null;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/utils/TypedMapWrapper.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 64926, "method_name": "getList", "class_name": "TypedMapWrapper", "params": ["K"], "throws": null, "modifiers": ["public"], "return_type": "List<L>", "snippet": "  public <L> List<L> getList(final K key) {\n    final Object obj = this.map.get(key);\n    if (obj instanceof List) {\n      return (List<L>) obj;\n    }\n    return null;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/utils/TypedMapWrapper.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 64927, "method_name": "getList", "class_name": "TypedMapWrapper", "params": ["K", "List<L>"], "throws": null, "modifiers": ["public"], "return_type": "List<L>", "snippet": "  public <L> List<L> getList(final K key, final List<L> defaultVal) {\n    final Object obj = this.map.get(key);\n    if (obj instanceof List) {\n      return (List<L>) obj;\n    }\n    return defaultVal;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/utils/TypedMapWrapper.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 64928, "method_name": "getObject", "class_name": "TypedMapWrapper", "params": ["K"], "throws": null, "modifiers": ["public"], "return_type": "Object", "snippet": "  public Object getObject(final K key) {\n    return this.map.get(key);\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/utils/TypedMapWrapper.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 64929, "method_name": "getMap", "class_name": "TypedMapWrapper", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Map<K,V>", "snippet": "  public Map<K, V> getMap() {\n    return this.map;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/utils/TypedMapWrapper.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 64930, "method_name": "getMap", "class_name": "TypedMapWrapper", "params": ["K"], "throws": null, "modifiers": ["public"], "return_type": "Map<S,T>", "snippet": "  public <S, T> Map<S, T> getMap(final K key) {\n    return (Map<S, T>) this.map.get(key);\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/utils/TypedMapWrapper.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 64931, "method_name": "containsKey", "class_name": "TypedMapWrapper", "params": ["K"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "  public boolean containsKey(final K key) {\n    return this.map.containsKey(key);\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/utils/TypedMapWrapper.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 64932, "method_name": "logStarting", "class_name": "StartupInfoLogger", "params": ["Log"], "throws": null, "modifiers": [], "return_type": "void", "snippet": "\tvoid logStarting(Log applicationLog) {\n\t\tAssert.notNull(applicationLog, \"Log must not be null\");\n\t\tapplicationLog.info(LogMessage.of(this::getStartingMessage));\n\t\tapplicationLog.debug(LogMessage.of(this::getRunningMessage));\n\t}", "url": "https://raw.githubusercontent.com/spring-projects/spring-boot/master/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/StartupInfoLogger.java", "stars": "47572", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 64933, "method_name": "logStarted", "class_name": "StartupInfoLogger", "params": ["Log", "StopWatch"], "throws": null, "modifiers": [], "return_type": "void", "snippet": "\tvoid logStarted(Log applicationLog, StopWatch stopWatch) {\n\t\tif (applicationLog.isInfoEnabled()) {\n\t\t\tapplicationLog.info(getStartedMessage(stopWatch));\n\t\t}\n\t}", "url": "https://raw.githubusercontent.com/spring-projects/spring-boot/master/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/StartupInfoLogger.java", "stars": "47572", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 64934, "method_name": "getStartingMessage", "class_name": "StartupInfoLogger", "params": [], "throws": null, "modifiers": ["private"], "return_type": "CharSequence", "snippet": "\tprivate CharSequence getStartingMessage() {\n\t\tStringBuilder message = new StringBuilder();\n\t\tmessage.append(\"Starting \");\n\t\tappendApplicationName(message);\n\t\tappendVersion(message, this.sourceClass);\n\t\tappendOn(message);\n\t\tappendPid(message);\n\t\tappendContext(message);\n\t\treturn message;\n\t}", "url": "https://raw.githubusercontent.com/spring-projects/spring-boot/master/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/StartupInfoLogger.java", "stars": "47572", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 64935, "method_name": "getRunningMessage", "class_name": "StartupInfoLogger", "params": [], "throws": null, "modifiers": ["private"], "return_type": "CharSequence", "snippet": "\tprivate CharSequence getRunningMessage() {\n\t\tStringBuilder message = new StringBuilder();\n\t\tmessage.append(\"Running with Spring Boot\");\n\t\tappendVersion(message, getClass());\n\t\tmessage.append(\", Spring\");\n\t\tappendVersion(message, ApplicationContext.class);\n\t\treturn message;\n\t}", "url": "https://raw.githubusercontent.com/spring-projects/spring-boot/master/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/StartupInfoLogger.java", "stars": "47572", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 64936, "method_name": "getStartedMessage", "class_name": "StartupInfoLogger", "params": ["StopWatch"], "throws": null, "modifiers": ["private"], "return_type": "CharSequence", "snippet": "\tprivate CharSequence getStartedMessage(StopWatch stopWatch) {\n\t\tStringBuilder message = new StringBuilder();\n\t\tmessage.append(\"Started \");\n\t\tappendApplicationName(message);\n\t\tmessage.append(\" in \");\n\t\tmessage.append(stopWatch.getTotalTimeMillis() / 1000.0);\n\t\tmessage.append(\" seconds\");\n\t\ttry {\n\t\t\tdouble uptime = ManagementFactory.getRuntimeMXBean().getUptime() / 1000.0;\n\t\t\tmessage.append(\" (JVM running for \").append(uptime).append(\")\");\n\t\t}\n\t\tcatch (Throwable ex) {\n\t\t\t// No JVM time available\n\t\t}\n\t\treturn message;\n\t}", "url": "https://raw.githubusercontent.com/spring-projects/spring-boot/master/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/StartupInfoLogger.java", "stars": "47572", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 64937, "method_name": "appendApplicationName", "class_name": "StartupInfoLogger", "params": ["StringBuilder"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "\tprivate void appendApplicationName(StringBuilder message) {\n\t\tString name = (this.sourceClass != null) ? ClassUtils.getShortName(this.sourceClass) : \"application\";\n\t\tmessage.append(name);\n\t}", "url": "https://raw.githubusercontent.com/spring-projects/spring-boot/master/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/StartupInfoLogger.java", "stars": "47572", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 64938, "method_name": "appendVersion", "class_name": "StartupInfoLogger", "params": ["StringBuilder", "Class<?>"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "\tprivate void appendVersion(StringBuilder message, Class<?> source) {\n\t\tappend(message, \"v\", () -> source.getPackage().getImplementationVersion());\n\t}", "url": "https://raw.githubusercontent.com/spring-projects/spring-boot/master/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/StartupInfoLogger.java", "stars": "47572", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 64939, "method_name": "appendOn", "class_name": "StartupInfoLogger", "params": ["StringBuilder"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "\tprivate void appendOn(StringBuilder message) {\n\t\tlong startTime = System.currentTimeMillis();\n\t\tappend(message, \"on \", () -> InetAddress.getLocalHost().getHostName());\n\t\tlong resolveTime = System.currentTimeMillis() - startTime;\n\t\tif (resolveTime > HOST_NAME_RESOLVE_THRESHOLD) {\n\t\t\tlogger.warn(LogMessage.of(() -> {\n\t\t\t\tStringBuilder warning = new StringBuilder();\n\t\t\t\twarning.append(\"InetAddress.getLocalHost().getHostName() took \");\n\t\t\t\twarning.append(resolveTime);\n\t\t\t\twarning.append(\" milliseconds to respond.\");\n\t\t\t\twarning.append(\" Please verify your network configuration\");\n\t\t\t\tif (System.getProperty(\"os.name\").toLowerCase().contains(\"mac\")) {\n\t\t\t\t\twarning.append(\" (macOS machines may need to add entries to /etc/hosts)\");\n\t\t\t\t}\n\t\t\t\twarning.append(\".\");\n\t\t\t\treturn warning;\n\t\t\t}));\n\t\t}\n\t}", "url": "https://raw.githubusercontent.com/spring-projects/spring-boot/master/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/StartupInfoLogger.java", "stars": "47572", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 64940, "method_name": "appendPid", "class_name": "StartupInfoLogger", "params": ["StringBuilder"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "\tprivate void appendPid(StringBuilder message) {\n\t\tappend(message, \"with PID \", ApplicationPid::new);\n\t}", "url": "https://raw.githubusercontent.com/spring-projects/spring-boot/master/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/StartupInfoLogger.java", "stars": "47572", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 64941, "method_name": "appendContext", "class_name": "StartupInfoLogger", "params": ["StringBuilder"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "\tprivate void appendContext(StringBuilder message) {\n\t\tStringBuilder context = new StringBuilder();\n\t\tApplicationHome home = new ApplicationHome(this.sourceClass);\n\t\tif (home.getSource() != null) {\n\t\t\tcontext.append(home.getSource().getAbsolutePath());\n\t\t}\n\t\tappend(context, \"started by \", () -> System.getProperty(\"user.name\"));\n\t\tappend(context, \"in \", () -> System.getProperty(\"user.dir\"));\n\t\tif (context.length() > 0) {\n\t\t\tmessage.append(\" (\");\n\t\t\tmessage.append(context);\n\t\t\tmessage.append(\")\");\n\t\t}\n\t}", "url": "https://raw.githubusercontent.com/spring-projects/spring-boot/master/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/StartupInfoLogger.java", "stars": "47572", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 64942, "method_name": "append", "class_name": "StartupInfoLogger", "params": ["StringBuilder", "String", "Callable<Object>"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "\tprivate void append(StringBuilder message, String prefix, Callable<Object> call) {\n\t\tappend(message, prefix, call, \"\");\n\t}", "url": "https://raw.githubusercontent.com/spring-projects/spring-boot/master/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/StartupInfoLogger.java", "stars": "47572", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 64943, "method_name": "append", "class_name": "StartupInfoLogger", "params": ["StringBuilder", "String", "Callable<Object>", "String"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "\tprivate void append(StringBuilder message, String prefix, Callable<Object> call, String defaultValue) {\n\t\tObject result = callIfPossible(call);\n\t\tString value = (result != null) ? result.toString() : null;\n\t\tif (!StringUtils.hasLength(value)) {\n\t\t\tvalue = defaultValue;\n\t\t}\n\t\tif (StringUtils.hasLength(value)) {\n\t\t\tmessage.append((message.length() > 0) ? \" \" : \"\");\n\t\t\tmessage.append(prefix);\n\t\t\tmessage.append(value);\n\t\t}\n\t}", "url": "https://raw.githubusercontent.com/spring-projects/spring-boot/master/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/StartupInfoLogger.java", "stars": "47572", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 64944, "method_name": "callIfPossible", "class_name": "StartupInfoLogger", "params": ["Callable<Object>"], "throws": null, "modifiers": ["private"], "return_type": "Object", "snippet": "\tprivate Object callIfPossible(Callable<Object> call) {\n\t\ttry {\n\t\t\treturn call.call();\n\t\t}\n\t\tcatch (Exception ex) {\n\t\t\treturn null;\n\t\t}\n\t}", "url": "https://raw.githubusercontent.com/spring-projects/spring-boot/master/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/StartupInfoLogger.java", "stars": "47572", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 64945, "method_name": "hello", "class_name": "MessageResource", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String hello(@NotBlank @PathParam(\"name\") String name) {\n        return messageService.sayHello(name);\n    }", "url": "https://raw.githubusercontent.com/graemerocher/framework-comparison-2020/master/quarkus-example/src/main/java/org/acme/MessageResource.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 64946, "method_name": "contains", "class_name": "JSPFunction", "params": ["Object", "Object"], "throws": null, "modifiers": ["public", "static"], "return_type": "boolean", "snippet": "    public static boolean contains(Object collection, Object object) {\n        if (collection == null || object == null) {\n            return false;\n        }\n\n        // \u043f\u0440\u043e\u0432\u0435\u0440\u043a\u0430 \u0432 \u043c\u0430\u0441\u0441\u0438\u0432\u0435\n        if (collection instanceof Object[]) {\n            for (Object val : (Object[]) collection) {\n                if (val.equals(object)) {\n                    return true;\n                }\n            }\n        }\n        if (collection instanceof Collection<?>) {\n            return ((Collection<?>) collection).contains(object);\n        }\n        if (collection instanceof Map<?, ?>) {\n            return ((Map<?, ?>) collection).containsKey(object);\n        }\n\n        return collection.equals(object);\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/servlet/jsp/JSPFunction.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 64947, "method_name": "concat", "class_name": "JSPFunction", "params": ["Object", "Object"], "throws": null, "modifiers": ["public", "static"], "return_type": "String", "snippet": "    public static String concat(Object str1, Object str2) {\n        return str1.toString() + str2.toString();\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/servlet/jsp/JSPFunction.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 64948, "method_name": "append", "class_name": "JSPFunction", "params": ["Object", "Object"], "throws": null, "modifiers": ["public", "static"], "return_type": "Object", "snippet": "    public static Object append(Object col, Object obj) {\n        ArrayList<Object> newCol = null;\n        if (col instanceof Collection<?>) {\n            newCol = new ArrayList<Object>(((Collection<?>) col));\n            newCol.add(obj);\n        }\n\n        return newCol;\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/servlet/jsp/JSPFunction.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 64949, "method_name": "string", "class_name": "JSPFunction", "params": ["Object", "Object", "String"], "throws": null, "modifiers": ["public", "static"], "return_type": "String", "snippet": "    public static String string(Object collection, Object object, String string) {\n        if (contains(collection, object)) {\n            return string;\n        }\n        return \"\";\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/servlet/jsp/JSPFunction.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 64950, "method_name": "string", "class_name": "JSPFunction", "params": ["Boolean", "String"], "throws": null, "modifiers": ["public", "static"], "return_type": "String", "snippet": "    public static String string(Boolean object, String string) {\n        if (object != null && object) {\n            return string;\n        }\n        return \"\";\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/servlet/jsp/JSPFunction.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 64951, "method_name": "checked", "class_name": "JSPFunction", "params": ["Object", "Object"], "throws": null, "modifiers": ["public", "static"], "return_type": "String", "snippet": "    public static String checked(Object collection, Object object) {\n        return string(collection, object, \"checked='1'\");\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/servlet/jsp/JSPFunction.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 64952, "method_name": "checked", "class_name": "JSPFunction", "params": ["Boolean"], "throws": null, "modifiers": ["public", "static"], "return_type": "String", "snippet": "    public static String checked(Boolean object) {\n        return string(object, \"checked='1'\");\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/servlet/jsp/JSPFunction.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 64953, "method_name": "selected", "class_name": "JSPFunction", "params": ["Object", "Object"], "throws": null, "modifiers": ["public", "static"], "return_type": "String", "snippet": "    public static String selected(Object collection, Object object) {\n        return string(collection, object, \"selected='1'\");\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/servlet/jsp/JSPFunction.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 64954, "method_name": "selected", "class_name": "JSPFunction", "params": ["Boolean"], "throws": null, "modifiers": ["public", "static"], "return_type": "String", "snippet": "    public static String selected(Boolean object) {\n        return string(object, \"selected='1'\");\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/servlet/jsp/JSPFunction.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 64955, "method_name": "getInt", "class_name": "JSPFunction", "params": ["Object"], "throws": null, "modifiers": ["public", "static"], "return_type": "Integer", "snippet": "    public static Integer getInt(Object value) {\n        if (value instanceof Long) {\n            return ((Long) value).intValue();\n        }\n        if (value instanceof Integer) {\n            return (Integer) value;\n        } else if (value instanceof String) {\n            return Utils.parseInt((String) value);\n        }\n\n        log.error(\"Incorrect object to int transformation: \" + value);\n\n        return 0;\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/servlet/jsp/JSPFunction.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 64956, "method_name": "getObjectTitles", "class_name": "JSPFunction", "params": ["List<T>", "Set<Integer>"], "throws": null, "modifiers": ["public", "static"], "return_type": "String", "snippet": "    public static <T extends IdTitle> String getObjectTitles(List<T> fullList, Set<Integer> selectedIds) {\n        return Utils.getObjectTitles(Utils.getObjectList(fullList, selectedIds));\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/servlet/jsp/JSPFunction.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 64957, "method_name": "getObjectTitles", "class_name": "JSPFunction", "params": ["Map<Integer,T>", "List<Integer>"], "throws": null, "modifiers": ["final", "public", "static"], "return_type": "String", "snippet": "    public static final <T extends IdTitle> String getObjectTitles(Map<Integer, T> fullMap, List<Integer> selectedIds) {\n        return Utils.getObjectTitles(Utils.getObjectList(fullMap, selectedIds));\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/servlet/jsp/JSPFunction.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 64958, "method_name": "getObjectList", "class_name": "JSPFunction", "params": ["List<T>", "Set<Integer>"], "throws": null, "modifiers": ["public", "static"], "return_type": "List<T>", "snippet": "    public static <T extends IdTitle> List<T> getObjectList(List<T> fullList, Set<Integer> selectedIds) {\n        return Utils.getObjectList(fullList, selectedIds);\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/servlet/jsp/JSPFunction.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 64959, "method_name": "getObjectList", "class_name": "JSPFunction", "params": ["Map<Integer,T>", "List<Integer>"], "throws": null, "modifiers": ["final", "public", "static"], "return_type": "List<T>", "snippet": "    public static final <T extends IdTitle> List<T> getObjectList(Map<Integer, T> fullMap, List<Integer> selectedIds) {\n        return Utils.getObjectList(fullMap, selectedIds);\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/servlet/jsp/JSPFunction.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 64960, "method_name": "uiid", "class_name": "JSPFunction", "params": [], "throws": null, "modifiers": ["public", "static"], "return_type": "String", "snippet": "    public static String uiid() {\n        return uidPrefix + uidGen.incrementAndGet();\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/servlet/jsp/JSPFunction.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 64961, "method_name": "urlEncode", "class_name": "JSPFunction", "params": ["String"], "throws": ["UnsupportedEncodingException"], "modifiers": ["public", "static"], "return_type": "String", "snippet": "    public static String urlEncode(String value) throws UnsupportedEncodingException {\n        return URLEncoder.encode(value, Utils.UTF8.name());\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/servlet/jsp/JSPFunction.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 64962, "method_name": "htmlEncode", "class_name": "JSPFunction", "params": ["String"], "throws": null, "modifiers": ["public", "static"], "return_type": "String", "snippet": "    public static String htmlEncode(String value) {\n        String result = value.replaceAll(\"<\", \"&lt;\");\n        result = result.replaceAll(\">\", \"&gt;\");\n        result = result.replaceAll(\"\\n\", \"<br/>\");\n        result = result.replaceAll(\"\\t\", \"    \");\n\n        return result;\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/servlet/jsp/JSPFunction.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 64963, "method_name": "quotEscape", "class_name": "JSPFunction", "params": ["String"], "throws": null, "modifiers": ["public", "static"], "return_type": "String", "snippet": "    public static String quotEscape(String value) {\n        return value.replace(\"\\\"\", \"\\\\\\\"\");\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/servlet/jsp/JSPFunction.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 64964, "method_name": "truncateHtml", "class_name": "JSPFunction", "params": ["String", "Integer"], "throws": null, "modifiers": ["public", "static"], "return_type": "String", "snippet": "    public static String truncateHtml(String s, Integer limit) {\n        final int length = s.length();\n        if (length < limit) {\n            return s;\n        }\n\n        int okIndex = length - 1;\n        boolean inClosingTag = false;\n        int numOpenTags = 0;\n\n        for (int i = 0; i < length; i++) {\n            if (s.charAt(i) == '<') {\n                if (s.charAt(i + 1) == '/') {\n                    inClosingTag = true;\n                } else {\n                    numOpenTags++;\n                }\n            }\n            if (s.charAt(i) == '>') {\n                if (s.charAt(i - 1) == '/') {\n                    numOpenTags--;\n                }\n                if (inClosingTag) {\n                    numOpenTags--;\n                    inClosingTag = false;\n                }\n            }\n\n            if (numOpenTags == 0 && i >= limit) {\n                okIndex = i;\n                break;\n            }\n        }\n\n        return s.substring(0, okIndex + 1);\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/servlet/jsp/JSPFunction.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 64965, "method_name": "getConfig", "class_name": "JSPFunction", "params": ["ParameterMap", "String"], "throws": null, "modifiers": ["public", "static"], "return_type": "Object", "snippet": "    public static Object getConfig(ParameterMap setup, String className) {\n        return setup == null ? null :setup.getConfig(className);\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/servlet/jsp/JSPFunction.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 64966, "method_name": "newInstance", "class_name": "JSPFunction", "params": ["String"], "throws": ["Exception"], "modifiers": ["public", "static"], "return_type": "Object", "snippet": "    public static Object newInstance(String className) throws Exception {\n        return DynamicClassManager.newInstance(className);\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/servlet/jsp/JSPFunction.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 64967, "method_name": "fileNameWithLastModTime", "class_name": "JSPFunction", "params": ["String"], "throws": null, "modifiers": ["public", "static"], "return_type": "String", "snippet": "    public static String fileNameWithLastModTime(String path) {\n        File file = new File(\"webapps\" + path);\n        return path + \"?version=\" + (file.lastModified() / 1000);\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/servlet/jsp/JSPFunction.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 64968, "method_name": "getFromPers", "class_name": "JSPFunction", "params": ["User", "String", "String"], "throws": null, "modifiers": ["public", "static"], "return_type": "String", "snippet": "    public static String getFromPers(User user, String key, String defaultValue) {\n        return user.getPersonalizationMap().get(key, Setup.getSetup().get(key, defaultValue));\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/servlet/jsp/JSPFunction.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 64969, "method_name": "plural", "class_name": "Language", "params": ["int", "String", "String", "String"], "throws": null, "modifiers": ["public", "static"], "return_type": "String", "snippet": "    public static String plural(int n, String one, String two, String five) {\n        n = Math.abs(n);\n\n        n %= 100;\n        if (n >= 5 && n <= 20)\n            return five;\n\n        n %= 10;\n        if (n == 1)\n            return one;\n\n        if (n >= 2 && n <= 4)\n            return two;\n\n        return five;\n    }", "url": "https://raw.githubusercontent.com/pi-181/num-methods-lab6/master/src/main/java/com/demkom58/divine/util/Language.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["final", "public"]}}, {"id": 64970, "method_name": "hello", "class_name": "SpringWebController", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String hello() {\n        return \"<h2>Hello, Spring Boot!<h2>\";\n    }", "url": "https://raw.githubusercontent.com/mqxu/spring-boot-review/master/spring-boot-start/src/main/java/com/soft1851/springboot/start/controller/SpringWebController.java", "stars": "3", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 64971, "method_name": "putKey", "class_name": "PListBuilder", "params": ["String"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void putKey(String key) {\n        Element eKey = doc.createElement(\"key\");\n        eKey.setTextContent(key);\n        rootDict.appendChild(eKey);\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/service/airplay/PListBuilder.java", "stars": "4", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 64972, "method_name": "putString", "class_name": "PListBuilder", "params": ["String", "String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void putString(String key, String value) {\n        putKey(key);\n\n        Element eValue = doc.createElement(\"string\");\n        eValue.setTextContent(value);\n        rootDict.appendChild(eValue);\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/service/airplay/PListBuilder.java", "stars": "4", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 64973, "method_name": "putReal", "class_name": "PListBuilder", "params": ["String", "double"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void putReal(String key, double value) {\n        putKey(key);\n\n        Element eValue = doc.createElement(\"real\");\n        eValue.setTextContent(String.valueOf(value));\n        rootDict.appendChild(eValue);\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/service/airplay/PListBuilder.java", "stars": "4", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 64974, "method_name": "putInteger", "class_name": "PListBuilder", "params": ["String", "long"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void putInteger(String key, long value) {\n        putKey(key);\n\n        Element eValue = doc.createElement(\"integer\");\n        eValue.setTextContent(String.valueOf(value));\n        rootDict.appendChild(eValue);\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/service/airplay/PListBuilder.java", "stars": "4", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 64975, "method_name": "putBoolean", "class_name": "PListBuilder", "params": ["String", "boolean"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void putBoolean(String key, boolean value) {\n        putKey(key);\n\n        String str = value? \"true\" : \"false\";\n        Element eValue = doc.createElement(str);\n        rootDict.appendChild(eValue);\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/service/airplay/PListBuilder.java", "stars": "4", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 64976, "method_name": "putData", "class_name": "PListBuilder", "params": ["String", "String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void putData(String key, String value) {\n        putKey(key);\n\n        Element eValue = doc.createElement(\"data\");\n        eValue.setTextContent(value);\n        rootDict.appendChild(eValue);\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/service/airplay/PListBuilder.java", "stars": "4", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 64977, "method_name": "toString", "class_name": "PListBuilder", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String toString() {\n        DOMSource domSource = new DOMSource(doc);\n        TransformerFactory tf = TransformerFactory.newInstance();\n        Transformer t;\n\n        StringWriter stringWriter = new StringWriter();\n\n        try {\n            t = tf.newTransformer();\n            t.setOutputProperty(OutputKeys.ENCODING, \"UTF-8\");\n            t.setOutputProperty(OutputKeys.DOCTYPE_PUBLIC, dt.getPublicId());\n            t.setOutputProperty(OutputKeys.DOCTYPE_SYSTEM, dt.getSystemId());\n            t.setOutputProperty(OutputKeys.INDENT, \"yes\");\n            t.setOutputProperty(\"{http://xml.apache.org/xslt}indent-amount\", \"2\");\n\n            StreamResult streamResult = new StreamResult(stringWriter);\n            t.transform(domSource, streamResult);\n        } catch (TransformerConfigurationException e) {\n            e.printStackTrace();\n        } catch (TransformerException e) {\n            e.printStackTrace();\n        }\n\n        return stringWriter.toString();\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/service/airplay/PListBuilder.java", "stars": "4", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 64978, "method_name": "main", "class_name": "PeriodCheckMessageApplication", "params": ["String"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void main(String[] args) {\n        SpringApplication.run(PeriodCheckMessageApplication.class, args);\n    }", "url": "https://raw.githubusercontent.com/JeremyKinge/rtm/master/rtm-pcm/src/main/java/com/kingge/rtm/pcm/PeriodCheckMessageApplication.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 64979, "method_name": "method01", "class_name": "GenericMethod", "params": ["M"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public <M> void method01(M m){\n        System.out.println(m);\n    }", "url": "https://raw.githubusercontent.com/liuminchao123/JavaWeb_Learning/master/02.%20java/Java/%E9%BB%91%E9%A9%AC%E6%95%99%E7%A8%8B/13.%E3%80%90Collection%E3%80%81%E6%B3%9B%E5%9E%8B%E3%80%91-%E7%AC%94%E8%AE%B0/code/02_CollectionAndReflect/src/com/itheima/demo03/Generic/GenericMethod.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 64980, "method_name": "method02", "class_name": "GenericMethod", "params": ["S"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static <S> void method02(S s){\n        System.out.println(s);\n    }", "url": "https://raw.githubusercontent.com/liuminchao123/JavaWeb_Learning/master/02.%20java/Java/%E9%BB%91%E9%A9%AC%E6%95%99%E7%A8%8B/13.%E3%80%90Collection%E3%80%81%E6%B3%9B%E5%9E%8B%E3%80%91-%E7%AC%94%E8%AE%B0/code/02_CollectionAndReflect/src/com/itheima/demo03/Generic/GenericMethod.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 64981, "method_name": "put", "class_name": "FIFOLimitedMemoryCache", "params": ["String", "Bitmap"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "\tpublic boolean put(String key, Bitmap value) {\n\t\tif (super.put(key, value)) {\n\t\t\tqueue.add(value);\n\t\t\treturn true;\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t}", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/Android-Universal-Image-Loader-master/library/src/com/nostra13/universalimageloader/cache/memory/impl/FIFOLimitedMemoryCache.java", "stars": "74", "class_props": {"extends": "LimitedMemoryCache", "implements": null, "modifiers": ["public"]}}, {"id": 64982, "method_name": "remove", "class_name": "FIFOLimitedMemoryCache", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void remove(String key) {\n\t\tBitmap value = super.get(key);\n\t\tif (value != null) {\n\t\t\tqueue.remove(value);\n\t\t}\n\t\tsuper.remove(key);\n\t}", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/Android-Universal-Image-Loader-master/library/src/com/nostra13/universalimageloader/cache/memory/impl/FIFOLimitedMemoryCache.java", "stars": "74", "class_props": {"extends": "LimitedMemoryCache", "implements": null, "modifiers": ["public"]}}, {"id": 64983, "method_name": "clear", "class_name": "FIFOLimitedMemoryCache", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void clear() {\n\t\tqueue.clear();\n\t\tsuper.clear();\n\t}", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/Android-Universal-Image-Loader-master/library/src/com/nostra13/universalimageloader/cache/memory/impl/FIFOLimitedMemoryCache.java", "stars": "74", "class_props": {"extends": "LimitedMemoryCache", "implements": null, "modifiers": ["public"]}}, {"id": 64984, "method_name": "getSize", "class_name": "FIFOLimitedMemoryCache", "params": ["Bitmap"], "throws": null, "modifiers": ["protected"], "return_type": "int", "snippet": "\tprotected int getSize(Bitmap value) {\n\t\treturn value.getRowBytes() * value.getHeight();\n\t}", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/Android-Universal-Image-Loader-master/library/src/com/nostra13/universalimageloader/cache/memory/impl/FIFOLimitedMemoryCache.java", "stars": "74", "class_props": {"extends": "LimitedMemoryCache", "implements": null, "modifiers": ["public"]}}, {"id": 64985, "method_name": "removeNext", "class_name": "FIFOLimitedMemoryCache", "params": [], "throws": null, "modifiers": ["protected"], "return_type": "Bitmap", "snippet": "\tprotected Bitmap removeNext() {\n\t\treturn queue.remove(0);\n\t}", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/Android-Universal-Image-Loader-master/library/src/com/nostra13/universalimageloader/cache/memory/impl/FIFOLimitedMemoryCache.java", "stars": "74", "class_props": {"extends": "LimitedMemoryCache", "implements": null, "modifiers": ["public"]}}, {"id": 64986, "method_name": "createReference", "class_name": "FIFOLimitedMemoryCache", "params": ["Bitmap"], "throws": null, "modifiers": ["protected"], "return_type": "Reference<Bitmap>", "snippet": "\tprotected Reference<Bitmap> createReference(Bitmap value) {\n\t\treturn new WeakReference<Bitmap>(value);\n\t}", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/Android-Universal-Image-Loader-master/library/src/com/nostra13/universalimageloader/cache/memory/impl/FIFOLimitedMemoryCache.java", "stars": "74", "class_props": {"extends": "LimitedMemoryCache", "implements": null, "modifiers": ["public"]}}, {"id": 64987, "method_name": "getInstance", "class_name": "Settings", "params": ["Context"], "throws": null, "modifiers": ["public", "static"], "return_type": "Settings", "snippet": "    public static Settings getInstance(Context context) {\n        return new Settings(context);\n    }", "url": "https://raw.githubusercontent.com/quite/mumla/master/app/src/main/java/se/lublin/mumla/Settings.java", "stars": "9", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 64988, "method_name": "getInputMethod", "class_name": "Settings", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getInputMethod() {\n        String method = preferences.getString(PREF_INPUT_METHOD, ARRAY_INPUT_METHOD_VOICE);\n        if(!ARRAY_INPUT_METHODS.contains(method)) {\n            // Set default method for users who used to use handset mode before removal.\n            method = ARRAY_INPUT_METHOD_VOICE;\n        }\n        return method;\n    }", "url": "https://raw.githubusercontent.com/quite/mumla/master/app/src/main/java/se/lublin/mumla/Settings.java", "stars": "9", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 64989, "method_name": "getHumlaInputMethod", "class_name": "Settings", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getHumlaInputMethod() {\n        String inputMethod = getInputMethod();\n        if (ARRAY_INPUT_METHOD_VOICE.equals(inputMethod)) {\n            return Constants.TRANSMIT_VOICE_ACTIVITY;\n        } else if (ARRAY_INPUT_METHOD_PTT.equals(inputMethod)) {\n            return Constants.TRANSMIT_PUSH_TO_TALK;\n        } else if (ARRAY_INPUT_METHOD_CONTINUOUS.equals(inputMethod)) {\n            return Constants.TRANSMIT_CONTINUOUS;\n        }\n        throw new RuntimeException(\"Could not convert input method '\" + inputMethod + \"' to a Humla input method id!\");\n    }", "url": "https://raw.githubusercontent.com/quite/mumla/master/app/src/main/java/se/lublin/mumla/Settings.java", "stars": "9", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 64990, "method_name": "setInputMethod", "class_name": "Settings", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setInputMethod(String inputMethod) {\n        if(ARRAY_INPUT_METHOD_VOICE.equals(inputMethod) ||\n                ARRAY_INPUT_METHOD_PTT.equals(inputMethod) ||\n                ARRAY_INPUT_METHOD_CONTINUOUS.equals(inputMethod)) {\n            preferences.edit().putString(PREF_INPUT_METHOD, inputMethod).apply();\n        } else {\n            throw new RuntimeException(\"Invalid input method \" + inputMethod);\n        }\n    }", "url": "https://raw.githubusercontent.com/quite/mumla/master/app/src/main/java/se/lublin/mumla/Settings.java", "stars": "9", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 64991, "method_name": "getInputSampleRate", "class_name": "Settings", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getInputSampleRate() {\n        return Integer.parseInt(preferences.getString(Settings.PREF_INPUT_RATE, DEFAULT_RATE));\n    }", "url": "https://raw.githubusercontent.com/quite/mumla/master/app/src/main/java/se/lublin/mumla/Settings.java", "stars": "9", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 64992, "method_name": "getInputQuality", "class_name": "Settings", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getInputQuality() {\n        return preferences.getInt(Settings.PREF_INPUT_QUALITY, DEFAULT_INPUT_QUALITY);\n    }", "url": "https://raw.githubusercontent.com/quite/mumla/master/app/src/main/java/se/lublin/mumla/Settings.java", "stars": "9", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 64993, "method_name": "getAmplitudeBoostMultiplier", "class_name": "Settings", "params": [], "throws": null, "modifiers": ["public"], "return_type": "float", "snippet": "    public float getAmplitudeBoostMultiplier() {\n        return (float)preferences.getInt(Settings.PREF_AMPLITUDE_BOOST, DEFAULT_AMPLITUDE_BOOST)/100;\n    }", "url": "https://raw.githubusercontent.com/quite/mumla/master/app/src/main/java/se/lublin/mumla/Settings.java", "stars": "9", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 64994, "method_name": "getDetectionThreshold", "class_name": "Settings", "params": [], "throws": null, "modifiers": ["public"], "return_type": "float", "snippet": "    public float getDetectionThreshold() {\n        return (float)preferences.getInt(PREF_THRESHOLD, DEFAULT_THRESHOLD)/100;\n    }", "url": "https://raw.githubusercontent.com/quite/mumla/master/app/src/main/java/se/lublin/mumla/Settings.java", "stars": "9", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 64995, "method_name": "getPushToTalkKey", "class_name": "Settings", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getPushToTalkKey() {\n        return preferences.getInt(PREF_PUSH_KEY, DEFAULT_PUSH_KEY);\n    }", "url": "https://raw.githubusercontent.com/quite/mumla/master/app/src/main/java/se/lublin/mumla/Settings.java", "stars": "9", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 64996, "method_name": "getHotCorner", "class_name": "Settings", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getHotCorner() {\n        return preferences.getString(PREF_HOT_CORNER_KEY, DEFAULT_HOT_CORNER);\n    }", "url": "https://raw.githubusercontent.com/quite/mumla/master/app/src/main/java/se/lublin/mumla/Settings.java", "stars": "9", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 64997, "method_name": "isHotCornerEnabled", "class_name": "Settings", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean isHotCornerEnabled() {\n        return !ARRAY_HOT_CORNER_NONE.equals(preferences.getString(PREF_HOT_CORNER_KEY, DEFAULT_HOT_CORNER));\n    }", "url": "https://raw.githubusercontent.com/quite/mumla/master/app/src/main/java/se/lublin/mumla/Settings.java", "stars": "9", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 64998, "method_name": "getHotCornerGravity", "class_name": "Settings", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getHotCornerGravity() {\n        String hc = getHotCorner();\n        if(ARRAY_HOT_CORNER_BOTTOM_LEFT.equals(hc)) {\n            return Gravity.LEFT | Gravity.BOTTOM;\n        } else if(ARRAY_HOT_CORNER_BOTTOM_RIGHT.equals(hc)) {\n            return Gravity.RIGHT | Gravity.BOTTOM;\n        } else if(ARRAY_HOT_CORNER_TOP_LEFT.equals(hc)) {\n            return Gravity.LEFT | Gravity.TOP;\n        } else if(ARRAY_HOT_CORNER_TOP_RIGHT.equals(hc)) {\n            return Gravity.RIGHT | Gravity.TOP;\n        }\n        return 0;\n    }", "url": "https://raw.githubusercontent.com/quite/mumla/master/app/src/main/java/se/lublin/mumla/Settings.java", "stars": "9", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}]